[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519499953",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-519499953",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 519499953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTQ5OTk1Mw==",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?u=f94120f8b9ec3087fa4792dc4c2f56a8aff1aaa0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-08T12:37:15Z",
    "updated_at": "2019-08-08T12:37:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Woops, lint failed.. \r\nIs there an easy way to reproduce a Travis job locally? I'm a newb to Travis. I tried following https://stackoverflow.com/questions/21053657/how-to-run-travis-ci-locally/49019950 but I don't understand the instance field that is displayed in the Travis build logs (there is more than one instance there?)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519499953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519501230",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-519501230",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 519501230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTUwMTIzMA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-08T12:41:13Z",
    "updated_at": "2019-08-08T12:41:13Z",
    "author_association": "MEMBER",
    "body": "@davereikher The linter is just complaining about [trailing whitespace](https://travis-ci.org/bitcoin/bitcoin/jobs/569314353):\r\n```bash\r\nThis diff appears to have added new lines with trailing whitespace.\r\n\r\nThe following changes were suspected:\r\n\r\ndiff --git a/src/test/descriptor_tests.cpp b/src/test/descriptor_tests.cpp\r\n\r\n@@ -55,0 +63 @@ std::string MaybeUseHInsteadOfApostrophy(std::string ret)\r\n\r\n+\r\n\r\n@@ -61 +69,2 @@ const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\r\n\r\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\r\n\r\n^---- failure generated from test/lint/lint-whitespace.sh\r\n```\r\n\r\nYou should be able to run the `test/lint/lint-whitespace.sh` script (as well as the other linters) locally.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519501230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519504998",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-519504998",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 519504998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTUwNDk5OA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-08T12:52:17Z",
    "updated_at": "2019-08-19T04:57:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519504998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519505652",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-519505652",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 519505652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTUwNTY1Mg==",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?u=f94120f8b9ec3087fa4792dc4c2f56a8aff1aaa0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-08T12:54:23Z",
    "updated_at": "2019-08-08T12:54:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `test/lint/lint-whitespace.sh` script finishes without errors locally. I would like to reproduce the Travis environment to avoid fixing and pushing multiple times. If not, I can just remove the trailing whitespace and try again.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519505652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520140209",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-520140209",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 520140209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDE0MDIwOQ==",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?u=f94120f8b9ec3087fa4792dc4c2f56a8aff1aaa0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-10T11:06:32Z",
    "updated_at": "2019-08-10T11:07:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Concept ACK.\r\n> \r\n> `PolyMod` linkage changed, make it static?\r\n\r\nThanks! Done in commit 07c079a.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520140209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520753680",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-520753680",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 520753680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDc1MzY4MA==",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?u=f94120f8b9ec3087fa4792dc4c2f56a8aff1aaa0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-13T09:05:56Z",
    "updated_at": "2019-08-13T09:05:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Squashed commits.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/520753680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522156793",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-522156793",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 522156793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjE1Njc5Mw==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-16T21:27:01Z",
    "updated_at": "2019-08-16T21:27:01Z",
    "author_association": "MEMBER",
    "body": "I believe this will be a lot simpler change now if you use `GetDescriptorChecksum` from #15986\r\n\r\nConcept ACK anyhow",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522156793/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522451111",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-522451111",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 522451111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ1MTExMQ==",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?u=f94120f8b9ec3087fa4792dc4c2f56a8aff1aaa0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T07:38:50Z",
    "updated_at": "2019-08-19T07:38:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I believe this will be a lot simpler change now if you use `GetDescriptorChecksum` from #15986\r\n> \r\n> Concept ACK anyhow\r\n\r\nGreat! Now that `GetDescriptorChecksum` is available I moved `DescriptorChecksum` and `PolyMod` back into the anonymous namespace and instead used `GetDescriptorChecksum` to calculate the checksum. This also introduces an indirect test to `GetDescriptorChecksum` and the underlying functions.\r\nMy branch seems to have failed an unrelated test on Travis while passing all tests (unit and functional, including the test that fails on Travis) locally. Is sporadic failure a known issue perhaps? Is there a way to re-run Travis?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522451111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522451751",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-522451751",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 522451751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ1MTc1MQ==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T07:41:09Z",
    "updated_at": "2019-08-19T07:41:09Z",
    "author_association": "MEMBER",
    "body": "@davereikher Travis tests can occasionally fail sporadically. I've rebooted the [two failing instances](https://travis-ci.org/bitcoin/bitcoin/builds/573642446) for you.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522451751/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523312809",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-523312809",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 523312809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzMxMjgwOQ==",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?u=f94120f8b9ec3087fa4792dc4c2f56a8aff1aaa0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-21T06:14:02Z",
    "updated_at": "2019-08-21T06:14:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @davereikher Travis tests can occasionally fail sporadically. I've rebooted the [two failing instances](https://travis-ci.org/bitcoin/bitcoin/builds/573642446) for you.\r\n\r\n@fanquake Travis failed again, could you please reboot the failing instance [here](https://travis-ci.org/bitcoin/bitcoin/builds/574691201)?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523312809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524122143",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-524122143",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 524122143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDEyMjE0Mw==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-23T00:01:14Z",
    "updated_at": "2019-08-23T00:01:14Z",
    "author_association": "MEMBER",
    "body": "@davereikher Thanks for sticking with this, nice first time contribution.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524122143/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524366864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-524366864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 524366864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDM2Njg2NA==",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?u=f94120f8b9ec3087fa4792dc4c2f56a8aff1aaa0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-23T15:51:49Z",
    "updated_at": "2019-08-23T15:51:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks a lot! I learned so much from just this small contribution and your reviews. Looking forward for more! :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524366864/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524523035",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-524523035",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 524523035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDUyMzAzNQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-24T05:49:34Z",
    "updated_at": "2019-08-24T05:49:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davereikher Very nice to have you onboard and thanks for this first contribution! Hope to see more contributions from you.\r\n\r\nIf you want to take on non-determinism in tests you might want to take a look at `contrib/devtools/test_deterministic_coverage.sh`.\r\n\r\nThe following unit tests are known to have non-deterministic line coverage:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/3ca514ddb77253042877d1a72dfd3021c3de2812/contrib/devtools/test_deterministic_coverage.sh#L16-L36\r\n\r\nGetting them deterministic in terms of line coverage would be great! More specifically that would allow us to reason about how a proposed change alters unit tests line coverage. Currently line coverage is a stochastic process :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524523035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524539387",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-524539387",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16570",
    "id": 524539387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDUzOTM4Nw==",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?u=f94120f8b9ec3087fa4792dc4c2f56a8aff1aaa0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-24T10:24:16Z",
    "updated_at": "2019-08-24T10:24:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @davereikher Very nice to have you onboard and thanks for this first contribution! Hope to see more contributions from you.\r\n> \r\n> If you want to take on non-determinism in tests you might want to take a look at `contrib/devtools/test_deterministic_coverage.sh`.\r\n> \r\n> The following unit tests are known to have non-deterministic line coverage:\r\n> \r\n> https://github.com/bitcoin/bitcoin/blob/3ca514ddb77253042877d1a72dfd3021c3de2812/contrib/devtools/test_deterministic_coverage.sh#L16-L36\r\n> \r\n> Getting them deterministic in terms of line coverage would be great! More specifically that would allow us to reason about how a proposed change alters unit tests line coverage. Currently line coverage is a stochastic process :-)\r\n\r\nThanks! Sounds great, I'll look into the non-determinism of those tests and I guess I will start with the low hanging fruit first :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524539387/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312172302",
    "pull_request_review_id": 272746486,
    "id": 312172302,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjE3MjMwMg==",
    "diff_hunk": "@@ -137,6 +109,36 @@ std::string DescriptorChecksum(const Span<const char>& span)\n     return ret;\n }\n \n+\n+namespace {\n+\n+////////////////////////////////////////////////////////////////////////////\n+// Checksum                                                               //",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This comment shouldn't be moved.",
    "created_at": "2019-08-08T18:06:38Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312172302",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312172302"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312172302"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312172302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 116,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312172435",
    "pull_request_review_id": 272746486,
    "id": 312172435,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjE3MjQzNQ==",
    "diff_hunk": "@@ -28,6 +31,8 @@ constexpr int HARDENED = 2; // Derivation needs access to private keys\n constexpr int UNSOLVABLE = 4; // This descriptor is not expected to be solvable\n constexpr int SIGNABLE = 8; // We can sign with this descriptor (this is not true when actual BIP32 derivation is used, as that's not integrated in our signing code)\n \n+",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Unnecessary whitespace change.",
    "created_at": "2019-08-08T18:06:56Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312172435",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312172435"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312172435"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312172435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312176003",
    "pull_request_review_id": 272746486,
    "id": 312176003,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjE3NjAwMw==",
    "diff_hunk": "@@ -40,32 +45,46 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret[it] = 'h';\n+            if (ret.size() > 9 && ret[ret.size() - 9] == '#') {\n+                Span<const char> data = Span<const char>(ret.data(), ret.size() - 9);\n+                std::string new_checksum = DescriptorChecksum(data);\n+                ret = ret.substr(0, ret.size() - 8) + new_checksum; // Changing apostrophe to h breaks the checksum - recalculate it and replace the broken one\n             }\n+        } else {\n+            break;\n         }\n     }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub);\n+    if (replace_apostrophe_with_h)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it would make more sense to largely leave this function untouched and instead do the `'` to `h` change in your new `Check` function below. The only change here would be to remove `MaybeUseHInsteadOfApostrophy`",
    "created_at": "2019-08-08T18:14:53Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312176003",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312176003"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312176003"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312176003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312398066",
    "pull_request_review_id": 273033010,
    "id": 312398066,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjM5ODA2Ng==",
    "diff_hunk": "@@ -137,6 +109,36 @@ std::string DescriptorChecksum(const Span<const char>& span)\n     return ret;\n }\n \n+\n+namespace {\n+\n+////////////////////////////////////////////////////////////////////////////\n+// Checksum                                                               //",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not sure I understand. It's not quite clear in the diff, but the `// Checksum` comment was not moved. It remains after `namespace {`. The only comment that was moved is the one above `PolyMod`, describing the operation of that function, along with the function.",
    "created_at": "2019-08-09T09:24:05Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312398066",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312398066"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312398066"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312398066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 116,
    "side": "RIGHT",
    "in_reply_to_id": 312172302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312409702",
    "pull_request_review_id": 273048118,
    "id": 312409702,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjQwOTcwMg==",
    "diff_hunk": "@@ -40,32 +45,46 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret[it] = 'h';\n+            if (ret.size() > 9 && ret[ret.size() - 9] == '#') {\n+                Span<const char> data = Span<const char>(ret.data(), ret.size() - 9);\n+                std::string new_checksum = DescriptorChecksum(data);\n+                ret = ret.substr(0, ret.size() - 8) + new_checksum; // Changing apostrophe to h breaks the checksum - recalculate it and replace the broken one\n             }\n+        } else {\n+            break;\n         }\n     }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub);\n+    if (replace_apostrophe_with_h)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree and I did it that way initially but then, for example, this check failed:\r\n```\r\nstd::string pub1 = parse_priv->ToString();\r\nBOOST_CHECK(EqualDescriptor(pub, pub1));\r\n```\r\nsince Descriptor::ToString returns a descriptor formatted with `'`, while pub has `h`, if I do it the way you suggest. I had to work around this by passing pub and prv without modification and introducing a boolean argument of whether to swap `'` with `h` only when passing them to the `Parse` function.",
    "created_at": "2019-08-09T09:55:46Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312409702",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312409702"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312409702"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312409702/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 312176003
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312425303",
    "pull_request_review_id": 273068485,
    "id": 312425303,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjQyNTMwMw==",
    "diff_hunk": "@@ -28,6 +31,8 @@ constexpr int HARDENED = 2; // Derivation needs access to private keys\n constexpr int UNSOLVABLE = 4; // This descriptor is not expected to be solvable\n constexpr int SIGNABLE = 8; // We can sign with this descriptor (this is not true when actual BIP32 derivation is used, as that's not integrated in our signing code)\n \n+",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, fixed in commit d3e2d08a3be92cecb50c89c69871e61e0618e10b.",
    "created_at": "2019-08-09T10:44:55Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312425303",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312425303"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312425303"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312425303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT",
    "in_reply_to_id": 312172435
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312451973",
    "pull_request_review_id": 273103014,
    "id": 312451973,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjQ1MTk3Mw==",
    "diff_hunk": "@@ -137,6 +109,36 @@ std::string DescriptorChecksum(const Span<const char>& span)\n     return ret;\n }\n \n+\n+namespace {\n+\n+////////////////////////////////////////////////////////////////////////////\n+// Checksum                                                               //",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In other words: The function does not need to move, only the `namespace {`",
    "created_at": "2019-08-09T12:16:11Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312451973",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312451973"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312451973"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312451973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 116,
    "side": "RIGHT",
    "in_reply_to_id": 312172302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312477258",
    "pull_request_review_id": 273136158,
    "id": 312477258,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjQ3NzI1OA==",
    "diff_hunk": "@@ -137,6 +109,36 @@ std::string DescriptorChecksum(const Span<const char>& span)\n     return ret;\n }\n \n+\n+namespace {\n+\n+////////////////////////////////////////////////////////////////////////////\n+// Checksum                                                               //",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, fixed in commit 6819fbd741891081b2679e4b763bb88dc997ffe7. Is there a way to re-run AppVeyor? Looks like it timed out.",
    "created_at": "2019-08-09T13:24:55Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312477258",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312477258"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312477258"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312477258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 116,
    "side": "RIGHT",
    "in_reply_to_id": 312172302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312479811",
    "pull_request_review_id": 273139671,
    "id": 312479811,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjQ3OTgxMQ==",
    "diff_hunk": "@@ -137,6 +109,36 @@ std::string DescriptorChecksum(const Span<const char>& span)\n     return ret;\n }\n \n+\n+namespace {\n+\n+////////////////////////////////////////////////////////////////////////////\n+// Checksum                                                               //",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can re-run the ci by squashing your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits",
    "created_at": "2019-08-09T13:31:26Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312479811",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312479811"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312479811"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312479811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 116,
    "side": "RIGHT",
    "in_reply_to_id": 312172302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312523013",
    "pull_request_review_id": 273196621,
    "id": 312523013,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjUyMzAxMw==",
    "diff_hunk": "@@ -137,6 +109,36 @@ std::string DescriptorChecksum(const Span<const char>& span)\n     return ret;\n }\n \n+\n+namespace {\n+\n+////////////////////////////////////////////////////////////////////////////\n+// Checksum                                                               //",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "f86cf3ab9b84d68e40e5d28fcc60033b571e4b9e",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, done in commit 0fc46f5b9262f016c42d2abe68d5125833f55416.",
    "created_at": "2019-08-09T15:05:10Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312523013",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312523013"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312523013"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312523013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 116,
    "side": "RIGHT",
    "in_reply_to_id": 312172302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312574238",
    "pull_request_review_id": 273263132,
    "id": 312574238,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjU3NDIzOA==",
    "diff_hunk": "@@ -40,32 +43,46 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret[it] = 'h';\n+            if (ret.size() > 9 && ret[ret.size() - 9] == '#') {\n+                Span<const char> data = Span<const char>(ret.data(), ret.size() - 9);\n+                std::string new_checksum = DescriptorChecksum(data);\n+                ret = ret.substr(0, ret.size() - 8) + new_checksum; // Changing apostrophe to h breaks the checksum - recalculate it and replace the broken one\n             }\n+        } else {\n+            break;\n         }\n     }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub);\n+    if (replace_apostrophe_with_h)\n+    {\n+        parse_priv = Parse(prv, keys_priv);\n+        parse_pub = Parse(pub, keys_pub);\n+    }\n+    else\n+    {\n+        parse_priv = Parse(UseHInsteadOfApostrophe(prv), keys_priv);\n+        parse_pub = Parse(UseHInsteadOfApostrophe(pub), keys_pub);",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 63,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "0fc46f5b9262f016c42d2abe68d5125833f55416",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is actually backwards. When `replace_apostrophe_with_h` is false, we're swapping. I think it's supposed to be the other way around.",
    "created_at": "2019-08-09T17:18:15Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312574238",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312574238"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312574238"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312574238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312687303",
    "pull_request_review_id": 273408211,
    "id": 312687303,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY4NzMwMw==",
    "diff_hunk": "@@ -40,32 +43,46 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret[it] = 'h';\n+            if (ret.size() > 9 && ret[ret.size() - 9] == '#') {",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "0fc46f5b9262f016c42d2abe68d5125833f55416",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This will recalculate the checksum after every replacement, it would be better to just recalculate it at the end",
    "created_at": "2019-08-10T02:38:13Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312687303",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312687303"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312687303"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312687303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 52,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312692237",
    "pull_request_review_id": 273413799,
    "id": 312692237,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5MjIzNw==",
    "diff_hunk": "@@ -40,32 +43,46 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret[it] = 'h';\n+            if (ret.size() > 9 && ret[ret.size() - 9] == '#') {",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "0fc46f5b9262f016c42d2abe68d5125833f55416",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks! Fixed in 9f9afcf1355e48d2b39ad9119415d658f5770ec5.",
    "created_at": "2019-08-10T06:15:11Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312692237",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312692237"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312692237"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312692237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 52,
    "side": "RIGHT",
    "in_reply_to_id": 312687303
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312692255",
    "pull_request_review_id": 273413826,
    "id": 312692255,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5MjI1NQ==",
    "diff_hunk": "@@ -40,32 +43,46 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret[it] = 'h';\n+            if (ret.size() > 9 && ret[ret.size() - 9] == '#') {\n+                Span<const char> data = Span<const char>(ret.data(), ret.size() - 9);\n+                std::string new_checksum = DescriptorChecksum(data);\n+                ret = ret.substr(0, ret.size() - 8) + new_checksum; // Changing apostrophe to h breaks the checksum - recalculate it and replace the broken one\n             }\n+        } else {\n+            break;\n         }\n     }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub);\n+    if (replace_apostrophe_with_h)\n+    {\n+        parse_priv = Parse(prv, keys_priv);\n+        parse_pub = Parse(pub, keys_pub);\n+    }\n+    else\n+    {\n+        parse_priv = Parse(UseHInsteadOfApostrophe(prv), keys_priv);\n+        parse_pub = Parse(UseHInsteadOfApostrophe(pub), keys_pub);",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 63,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "0fc46f5b9262f016c42d2abe68d5125833f55416",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, you're absolutely right. Fixed in a8f49b7d53d33aeba8bd0965c21878795b36f99b.",
    "created_at": "2019-08-10T06:16:38Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312692255",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312692255"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312692255"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312692255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT",
    "in_reply_to_id": 312574238
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697760",
    "pull_request_review_id": 273419785,
    "id": 312697760,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5Nzc2MA==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, static function.",
    "created_at": "2019-08-10T09:54:23Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697760",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697760"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697760"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697785",
    "pull_request_review_id": 273419785,
    "id": 312697785,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5Nzc4NQ==",
    "diff_hunk": "@@ -11,6 +11,9 @@\n #include <script/descriptor.h>\n #include <util/strencodings.h>\n \n+\n+std::string DescriptorChecksum(const Span<const char>& span);",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "IMO it would be fine to declare in `src/script/descriptor.h`",
    "created_at": "2019-08-10T09:55:55Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697785",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697785"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697785"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 15,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697808",
    "pull_request_review_id": 273419785,
    "id": 312697808,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5NzgwOA==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n+    bool ret_changed = false;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, `if (it == std::string::npos) break;`",
    "created_at": "2019-08-10T09:57:35Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697808",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697808"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697808"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 51,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697838",
    "pull_request_review_id": 273419785,
    "id": 312697838,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5NzgzOA==",
    "diff_hunk": "@@ -164,6 +184,16 @@ void Check(const std::string& prv, const std::string& pub, int flags, const std:\n     BOOST_CHECK_MESSAGE(left_paths.empty(), \"Not all expected key paths found: \" + prv);\n }\n \n+void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+{\n+    DoCheck(prv, pub, flags, scripts, paths); // Check original (with apostrophes)\n+\n+    if ((prv.find(\"'\") != std::string::npos) || (pub.find(\"'\") != std::string::npos))\n+    {\n+        DoCheck(prv, pub, flags, scripts, paths, true); // Check with apostrophes replaced by 'h'",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 83,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add a comment like `/* replace_apostrophe_with_h = */ true` instead.",
    "created_at": "2019-08-10T09:58:49Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697838",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697838"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697838"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697846",
    "pull_request_review_id": 273419785,
    "id": 312697846,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5Nzg0Ng==",
    "diff_hunk": "@@ -164,6 +184,16 @@ void Check(const std::string& prv, const std::string& pub, int flags, const std:\n     BOOST_CHECK_MESSAGE(left_paths.empty(), \"Not all expected key paths found: \" + prv);\n }\n \n+void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+{\n+    DoCheck(prv, pub, flags, scripts, paths); // Check original (with apostrophes)\n+\n+    if ((prv.find(\"'\") != std::string::npos) || (pub.find(\"'\") != std::string::npos))",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 81,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use `std::string::find(char, ...)` like `find('\\'')`.\r\n\r\nnit, `{` here.\r\n\r\nnit, remove unnecessary `( )`.",
    "created_at": "2019-08-10T09:59:15Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697846",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697846"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697846"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 191,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697853",
    "pull_request_review_id": 273419785,
    "id": 312697853,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5Nzg1Mw==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n+    bool ret_changed = false;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret_changed = true;\n+            ret[it] = 'h';\n+        } else {\n+            break;\n         }\n     }\n+\n+    if (ret_changed && ret.size() > 9 && ret[ret.size() - 9] == '#') {\n+      Span<const char> data = Span<const char>(ret.data(), ret.size() - 9);\n+      std::string new_checksum = DescriptorChecksum(data);\n+      ret = ret.substr(0, ret.size() - 8) + new_checksum; // Changing apostrophe to h breaks the checksum - recalculate it and replace the broken one\n+    }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub);\n+    if (replace_apostrophe_with_h)\n+    {\n+        parse_priv = Parse(UseHInsteadOfApostrophe(prv), keys_priv);\n+        parse_pub = Parse(UseHInsteadOfApostrophe(pub), keys_pub);\n+    }",
    "path": "src/test/descriptor_tests.cpp",
    "position": 52,
    "original_position": 63,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit `} else {`",
    "created_at": "2019-08-10T09:59:32Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697853",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697853"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697853"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697854",
    "pull_request_review_id": 273419785,
    "id": 312697854,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5Nzg1NA==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n+    bool ret_changed = false;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret_changed = true;\n+            ret[it] = 'h';\n+        } else {\n+            break;\n         }\n     }\n+\n+    if (ret_changed && ret.size() > 9 && ret[ret.size() - 9] == '#') {\n+      Span<const char> data = Span<const char>(ret.data(), ret.size() - 9);\n+      std::string new_checksum = DescriptorChecksum(data);\n+      ret = ret.substr(0, ret.size() - 8) + new_checksum; // Changing apostrophe to h breaks the checksum - recalculate it and replace the broken one\n+    }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub);\n+    if (replace_apostrophe_with_h)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, `{` here",
    "created_at": "2019-08-10T09:59:42Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697854",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697854"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697854"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312697854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312698441",
    "pull_request_review_id": 273420660,
    "id": 312698441,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5ODQ0MQ==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's in an anonymous namespace, or am I missing something?",
    "created_at": "2019-08-10T10:29:10Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312698441",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312698441"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312698441"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312698441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 312697760
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699178",
    "pull_request_review_id": 273421456,
    "id": 312699178,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5OTE3OA==",
    "diff_hunk": "@@ -11,6 +11,9 @@\n #include <script/descriptor.h>\n #include <util/strencodings.h>\n \n+\n+std::string DescriptorChecksum(const Span<const char>& span);",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df.",
    "created_at": "2019-08-10T10:59:08Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699178",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699178"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699178"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 15,
    "side": "RIGHT",
    "in_reply_to_id": 312697785
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699189",
    "pull_request_review_id": 273421466,
    "id": 312699189,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5OTE4OQ==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n+    bool ret_changed = false;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df.",
    "created_at": "2019-08-10T10:59:28Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699189",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699189"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699189"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 51,
    "side": "RIGHT",
    "in_reply_to_id": 312697808
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699200",
    "pull_request_review_id": 273421477,
    "id": 312699200,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5OTIwMA==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n+    bool ret_changed = false;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret_changed = true;\n+            ret[it] = 'h';\n+        } else {\n+            break;\n         }\n     }\n+\n+    if (ret_changed && ret.size() > 9 && ret[ret.size() - 9] == '#') {\n+      Span<const char> data = Span<const char>(ret.data(), ret.size() - 9);\n+      std::string new_checksum = DescriptorChecksum(data);\n+      ret = ret.substr(0, ret.size() - 8) + new_checksum; // Changing apostrophe to h breaks the checksum - recalculate it and replace the broken one\n+    }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub);\n+    if (replace_apostrophe_with_h)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df.",
    "created_at": "2019-08-10T10:59:49Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699200",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699200"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699200"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 78,
    "side": "RIGHT",
    "in_reply_to_id": 312697854
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699204",
    "pull_request_review_id": 273421481,
    "id": 312699204,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5OTIwNA==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n+    bool ret_changed = false;\n+    while (true) {\n+        auto it = ret.find(\"'\");\n+        if (it != std::string::npos) {\n+            ret_changed = true;\n+            ret[it] = 'h';\n+        } else {\n+            break;\n         }\n     }\n+\n+    if (ret_changed && ret.size() > 9 && ret[ret.size() - 9] == '#') {\n+      Span<const char> data = Span<const char>(ret.data(), ret.size() - 9);\n+      std::string new_checksum = DescriptorChecksum(data);\n+      ret = ret.substr(0, ret.size() - 8) + new_checksum; // Changing apostrophe to h breaks the checksum - recalculate it and replace the broken one\n+    }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub);\n+    if (replace_apostrophe_with_h)\n+    {\n+        parse_priv = Parse(UseHInsteadOfApostrophe(prv), keys_priv);\n+        parse_pub = Parse(UseHInsteadOfApostrophe(pub), keys_pub);\n+    }",
    "path": "src/test/descriptor_tests.cpp",
    "position": 52,
    "original_position": 63,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df.",
    "created_at": "2019-08-10T10:59:54Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699204",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699204"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699204"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT",
    "in_reply_to_id": 312697853
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699298",
    "pull_request_review_id": 273421592,
    "id": 312699298,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5OTI5OA==",
    "diff_hunk": "@@ -164,6 +184,16 @@ void Check(const std::string& prv, const std::string& pub, int flags, const std:\n     BOOST_CHECK_MESSAGE(left_paths.empty(), \"Not all expected key paths found: \" + prv);\n }\n \n+void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+{\n+    DoCheck(prv, pub, flags, scripts, paths); // Check original (with apostrophes)\n+\n+    if ((prv.find(\"'\") != std::string::npos) || (pub.find(\"'\") != std::string::npos))",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 81,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df. Also, applied the same change (`find(\"'\")`->`find('\\'')`) here:https://github.com/bitcoin/bitcoin/blob/07c079a2fb49dca58a1d7e5e185a1cbc430381df/src/test/descriptor_tests.cpp#L47",
    "created_at": "2019-08-10T11:03:48Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699298",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699298"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699298"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 191,
    "side": "RIGHT",
    "in_reply_to_id": 312697846
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699317",
    "pull_request_review_id": 273421618,
    "id": 312699317,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjY5OTMxNw==",
    "diff_hunk": "@@ -164,6 +184,16 @@ void Check(const std::string& prv, const std::string& pub, int flags, const std:\n     BOOST_CHECK_MESSAGE(left_paths.empty(), \"Not all expected key paths found: \" + prv);\n }\n \n+void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+{\n+    DoCheck(prv, pub, flags, scripts, paths); // Check original (with apostrophes)\n+\n+    if ((prv.find(\"'\") != std::string::npos) || (pub.find(\"'\") != std::string::npos))\n+    {\n+        DoCheck(prv, pub, flags, scripts, paths, true); // Check with apostrophes replaced by 'h'",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 83,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in commit 07c079a.",
    "created_at": "2019-08-10T11:04:23Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699317",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699317"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699317"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/312699317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 193,
    "side": "RIGHT",
    "in_reply_to_id": 312697838
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314544761",
    "pull_request_review_id": 275727259,
    "id": 314544761,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDU0NDc2MQ==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "True, sorry.",
    "created_at": "2019-08-16T00:11:30Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314544761",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314544761"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314544761"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314544761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 312697760
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314545091",
    "pull_request_review_id": 275727655,
    "id": 314545091,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDU0NTA5MQ==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "But make it `std::string UseHInsteadOfApostrophe(const std::string& ret)`. ~~Also could avoid `ret` argument, sounds like it's an output/return argument.~~ (rename is unrelated here).",
    "created_at": "2019-08-16T00:13:25Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314545091",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314545091"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314545091"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314545091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 312697760
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314686682",
    "pull_request_review_id": 275906405,
    "id": 314686682,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDY4NjY4Mg==",
    "diff_hunk": "@@ -40,32 +43,49 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(std::string ret)",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "9f9afcf1355e48d2b39ad9119415d658f5770ec5",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I believe that this line would fail should ret be made a const reference:\r\nhttps://github.com/bitcoin/bitcoin/blob/0b90954416767f6213094f1f282e708c3e8a710b/src/test/descriptor_tests.cpp#L50\r\nI guess I could change the signature to what you suggest and then assign `ret` to a local variable. Then there would still be a single copy operation so it's not less efficient or anything, but that would introduce an extra line of code. Do you think I should do it?\r\nI agree that `ret` is not an indicative name. I think `desc` is better?",
    "created_at": "2019-08-16T11:44:54Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314686682",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314686682"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314686682"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314686682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 312697760
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315492398",
    "pull_request_review_id": 276913348,
    "id": 315492398,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTQ5MjM5OA==",
    "diff_hunk": "@@ -42,33 +42,44 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(const std::string& desc)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n-        }\n+    std::string ret = desc;\n+    while (true) {\n+        auto it = ret.find('\\'');\n+        if (it == std::string::npos) break;\n+        ret[it] = 'h';\n+    }\n+\n+    // GetDescriptorChecksum returns \"\" if the checksum exists but is bad.\n+    // Switching apostrophes with 'h' breaks the checksum if it exists - recalculate it and replace the broken one.\n+    if (GetDescriptorChecksum(ret) == \"\") {\n+      ret = ret.substr(0, desc.size() - 9);\n+      ret += std::string(\"#\") + GetDescriptorChecksum(ret);",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "d0e54ff55258b2f19dcd8ead9fd216549e977446",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: indentation",
    "created_at": "2019-08-20T03:19:56Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r315492398",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315492398"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r315492398"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315492398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315492595",
    "pull_request_review_id": 276913348,
    "id": 315492595,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTQ5MjU5NQ==",
    "diff_hunk": "@@ -42,33 +42,44 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(const std::string& desc)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n-        }\n+    std::string ret = desc;\n+    while (true) {\n+        auto it = ret.find('\\'');\n+        if (it == std::string::npos) break;\n+        ret[it] = 'h';\n+    }\n+\n+    // GetDescriptorChecksum returns \"\" if the checksum exists but is bad.\n+    // Switching apostrophes with 'h' breaks the checksum if it exists - recalculate it and replace the broken one.\n+    if (GetDescriptorChecksum(ret) == \"\") {\n+      ret = ret.substr(0, desc.size() - 9);\n+      ret += std::string(\"#\") + GetDescriptorChecksum(ret);\n     }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n     std::string error;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv, error);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub, error);\n+    if (replace_apostrophe_with_h) {",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "d0e54ff55258b2f19dcd8ead9fd216549e977446",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There is actually a test case which used to be covered which is no longer ever covered - the use of `h` in the pub and `'` in the prv and vice versa (because there was a 50% chance of each being changed independently)",
    "created_at": "2019-08-20T03:21:20Z",
    "updated_at": "2019-08-21T05:23:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r315492595",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315492595"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r315492595"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315492595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316003786",
    "pull_request_review_id": 277564460,
    "id": 316003786,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjAwMzc4Ng==",
    "diff_hunk": "@@ -42,33 +42,44 @@ bool EqualDescriptor(std::string a, std::string b)\n     return a == b;\n }\n \n-std::string MaybeUseHInsteadOfApostrophy(std::string ret)\n+std::string UseHInsteadOfApostrophe(const std::string& desc)\n {\n-    if (InsecureRandBool()) {\n-        while (true) {\n-            auto it = ret.find(\"'\");\n-            if (it != std::string::npos) {\n-                ret[it] = 'h';\n-                if (ret.size() > 9 && ret[ret.size() - 9] == '#') ret = ret.substr(0, ret.size() - 9); // Changing apostrophe to h breaks the checksum\n-            } else {\n-                break;\n-            }\n-        }\n+    std::string ret = desc;\n+    while (true) {\n+        auto it = ret.find('\\'');\n+        if (it == std::string::npos) break;\n+        ret[it] = 'h';\n+    }\n+\n+    // GetDescriptorChecksum returns \"\" if the checksum exists but is bad.\n+    // Switching apostrophes with 'h' breaks the checksum if it exists - recalculate it and replace the broken one.\n+    if (GetDescriptorChecksum(ret) == \"\") {\n+      ret = ret.substr(0, desc.size() - 9);\n+      ret += std::string(\"#\") + GetDescriptorChecksum(ret);\n     }\n     return ret;\n }\n \n const std::set<std::vector<uint32_t>> ONLY_EMPTY{{}};\n \n-void Check(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY)\n+void DoCheck(const std::string& prv, const std::string& pub, int flags, const std::vector<std::vector<std::string>>& scripts, const std::set<std::vector<uint32_t>>& paths = ONLY_EMPTY,\n+    bool replace_apostrophe_with_h=false)\n {\n     FlatSigningProvider keys_priv, keys_pub;\n     std::set<std::vector<uint32_t>> left_paths = paths;\n     std::string error;\n \n+    std::unique_ptr<Descriptor> parse_priv;\n+    std::unique_ptr<Descriptor> parse_pub;\n     // Check that parsing succeeds.\n-    auto parse_priv = Parse(MaybeUseHInsteadOfApostrophy(prv), keys_priv, error);\n-    auto parse_pub = Parse(MaybeUseHInsteadOfApostrophy(pub), keys_pub, error);\n+    if (replace_apostrophe_with_h) {",
    "path": "src/test/descriptor_tests.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "b9ee63c71b751fd67da777774ea8c0b27e7db2f8",
    "original_commit_id": "d0e54ff55258b2f19dcd8ead9fd216549e977446",
    "user": {
      "login": "davereikher",
      "id": 5347350,
      "node_id": "MDQ6VXNlcjUzNDczNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5347350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davereikher",
      "html_url": "https://github.com/davereikher",
      "followers_url": "https://api.github.com/users/davereikher/followers",
      "following_url": "https://api.github.com/users/davereikher/following{/other_user}",
      "gists_url": "https://api.github.com/users/davereikher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davereikher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davereikher/subscriptions",
      "organizations_url": "https://api.github.com/users/davereikher/orgs",
      "repos_url": "https://api.github.com/users/davereikher/repos",
      "events_url": "https://api.github.com/users/davereikher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davereikher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for your review. You are right, I completely missed this. I added code to cover all four test cases (no replacement, prv only, pub only and prv+pub) in b9ee63c71b751fd67da777774ea8c0b27e7db2f8.",
    "created_at": "2019-08-21T05:30:24Z",
    "updated_at": "2019-08-21T05:30:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r316003786",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316003786"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16570#discussion_r316003786"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16570"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316003786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 315492595
  }
]