[
  {
    "sha": "cb4eec13c03089617a94169b4e30381d87788b56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjRlZWMxM2MwMzA4OTYxN2E5NDE2OWI0ZTMwMzgxZDg3Nzg4YjU2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T00:28:08Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T15:19:50Z"
      },
      "message": "tests: Add fuzzing harness for count_seconds(...)",
      "tree": {
        "sha": "dec16dec75a7099b4a315e628f0ea7739cc97932",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dec16dec75a7099b4a315e628f0ea7739cc97932"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb4eec13c03089617a94169b4e30381d87788b56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb4eec13c03089617a94169b4e30381d87788b56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb4eec13c03089617a94169b4e30381d87788b56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb4eec13c03089617a94169b4e30381d87788b56/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "67dfd18f4401986063e22c79d4d7da61f15b5cd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67dfd18f4401986063e22c79d4d7da61f15b5cd4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/67dfd18f4401986063e22c79d4d7da61f15b5cd4"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "24459c21be60f84bec8391f0f974ec78b53eb7f8",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb4eec13c03089617a94169b4e30381d87788b56/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb4eec13c03089617a94169b4e30381d87788b56/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=cb4eec13c03089617a94169b4e30381d87788b56",
        "patch": "@@ -23,6 +23,7 @@\n #include <streams.h>\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n+#include <time.h>\n #include <uint256.h>\n #include <util/moneystr.h>\n #include <util/strencodings.h>\n@@ -31,6 +32,7 @@\n #include <version.h>\n \n #include <cassert>\n+#include <chrono>\n #include <limits>\n #include <vector>\n \n@@ -124,6 +126,8 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n             assert(parsed_money == i64);\n         }\n     }\n+    const std::chrono::seconds seconds{i64};\n+    assert(count_seconds(seconds) == i64);\n \n     const arith_uint256 au256 = UintToArith256(u256);\n     assert(ArithToUint256(au256) == u256);"
      }
    ]
  },
  {
    "sha": "0579a276307d22ae62ecbcaa704e8477274e784d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTc5YTI3NjMwN2QyMmFlNjJlY2JjYWE3MDRlODQ3NzI3NGU3ODRk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T00:40:03Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T15:19:50Z"
      },
      "message": "tests: Add fuzzing harness for CBlockHeader",
      "tree": {
        "sha": "2cc7793034bc59089341b31e7d363e49678d531c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cc7793034bc59089341b31e7d363e49678d531c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0579a276307d22ae62ecbcaa704e8477274e784d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0579a276307d22ae62ecbcaa704e8477274e784d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0579a276307d22ae62ecbcaa704e8477274e784d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0579a276307d22ae62ecbcaa704e8477274e784d/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb4eec13c03089617a94169b4e30381d87788b56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb4eec13c03089617a94169b4e30381d87788b56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb4eec13c03089617a94169b4e30381d87788b56"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 48,
      "deletions": 0
    },
    "files": [
      {
        "sha": "46594a1a045f61b10ef98ad81f676057eef31cb2",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0579a276307d22ae62ecbcaa704e8477274e784d/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0579a276307d22ae62ecbcaa704e8477274e784d/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=0579a276307d22ae62ecbcaa704e8477274e784d",
        "patch": "@@ -14,6 +14,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/block_deserialize \\\n   test/fuzz/block_file_info_deserialize \\\n   test/fuzz/block_filter_deserialize \\\n+  test/fuzz/block_header \\\n   test/fuzz/block_header_and_short_txids_deserialize \\\n   test/fuzz/blockheader_deserialize \\\n   test/fuzz/blocklocator_deserialize \\\n@@ -343,6 +344,12 @@ test_fuzz_block_filter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_block_filter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_block_filter_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_block_header_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_block_header_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_block_header_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_block_header_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_header_SOURCES = $(FUZZ_SUITE) test/fuzz/block_header.cpp\n+\n test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE=1\n test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_header_and_short_txids_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "92dcccc0e150e105f414af8894732d5d0c2bb27a",
        "filename": "src/test/fuzz/block_header.cpp",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0579a276307d22ae62ecbcaa704e8477274e784d/src/test/fuzz/block_header.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0579a276307d22ae62ecbcaa704e8477274e784d/src/test/fuzz/block_header.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/block_header.cpp?ref=0579a276307d22ae62ecbcaa704e8477274e784d",
        "patch": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <primitives/block.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <uint256.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const Optional<CBlockHeader> block_header = ConsumeDeserializable<CBlockHeader>(fuzzed_data_provider);\n+    if (!block_header) {\n+        return;\n+    }\n+    {\n+        const uint256 hash = block_header->GetHash();\n+        static const uint256 u256_max(uint256S(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n+        assert(hash != u256_max);\n+        assert(block_header->GetBlockTime() == block_header->nTime);\n+        assert(block_header->IsNull() == (block_header->nBits == 0));\n+    }\n+    {\n+        CBlockHeader mut_block_header = *block_header;\n+        mut_block_header.SetNull();\n+        assert(mut_block_header.IsNull());\n+        CBlock block{*block_header};\n+        assert(block.GetBlockHeader().GetHash() == block_header->GetHash());\n+        (void)block.ToString();\n+        block.SetNull();\n+        assert(block.GetBlockHeader().GetHash() == mut_block_header.GetHash());\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzI2ZjNiYzQ2NzFmYmMyM2U1YmMzMWQwZWI5ZmUzODFlMmYwN2Vm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T02:24:38Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T16:25:29Z"
      },
      "message": "tests: Add fuzzing harness for CFeeRate",
      "tree": {
        "sha": "b5ffbcdad321ad2cdacef519d74bc9094b17db5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5ffbcdad321ad2cdacef519d74bc9094b17db5d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0579a276307d22ae62ecbcaa704e8477274e784d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0579a276307d22ae62ecbcaa704e8477274e784d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0579a276307d22ae62ecbcaa704e8477274e784d"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 76,
      "deletions": 0
    },
    "files": [
      {
        "sha": "796a34b86729e7ba4a1fc26f1bbd07204a0e3688",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
        "patch": "@@ -29,6 +29,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/descriptor_parse \\\n   test/fuzz/diskblockindex_deserialize \\\n   test/fuzz/eval_script \\\n+  test/fuzz/fee_rate \\\n   test/fuzz/fee_rate_deserialize \\\n   test/fuzz/flat_file_pos_deserialize \\\n   test/fuzz/float \\\n@@ -434,6 +435,12 @@ test_fuzz_eval_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_eval_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_eval_script_SOURCES = $(FUZZ_SUITE) test/fuzz/eval_script.cpp\n \n+test_fuzz_fee_rate_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_fee_rate_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_fee_rate_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_fee_rate_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_fee_rate_SOURCES = $(FUZZ_SUITE) test/fuzz/fee_rate.cpp\n+\n test_fuzz_fee_rate_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFEE_RATE_DESERIALIZE=1\n test_fuzz_fee_rate_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_fee_rate_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "f3d44d9f93799d7338369acec81dd864c7dc6039",
        "filename": "src/test/fuzz/fee_rate.cpp",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef/src/test/fuzz/fee_rate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef/src/test/fuzz/fee_rate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fee_rate.cpp?ref=7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
        "patch": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <amount.h>\n+#include <policy/feerate.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <limits>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const CAmount satoshis_per_k = ConsumeMoney(fuzzed_data_provider);\n+    const CFeeRate fee_rate{satoshis_per_k};\n+\n+    (void)fee_rate.GetFeePerK();\n+    const size_t bytes = fuzzed_data_provider.ConsumeIntegral<size_t>();\n+    if (!MultiplicationOverflow(static_cast<int64_t>(bytes), satoshis_per_k) && bytes <= static_cast<uint64_t>(std::numeric_limits<int64_t>::max())) {\n+        (void)fee_rate.GetFee(bytes);\n+    }\n+    (void)fee_rate.ToString();\n+\n+    const CAmount another_satoshis_per_k = ConsumeMoney(fuzzed_data_provider);\n+    CFeeRate larger_fee_rate{another_satoshis_per_k};\n+    larger_fee_rate += fee_rate;\n+    if (satoshis_per_k != 0 && another_satoshis_per_k != 0) {\n+        assert(fee_rate < larger_fee_rate);\n+        assert(!(fee_rate > larger_fee_rate));\n+        assert(!(fee_rate == larger_fee_rate));\n+        assert(fee_rate <= larger_fee_rate);\n+        assert(!(fee_rate >= larger_fee_rate));\n+        assert(fee_rate != larger_fee_rate);\n+    }\n+}"
      },
      {
        "sha": "ff278aebcc9078258670b358db7a76599f9270a5",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_TEST_FUZZ_UTIL_H\n #define BITCOIN_TEST_FUZZ_UTIL_H\n \n+#include <amount.h>\n #include <attributes.h>\n #include <optional.h>\n #include <script/script.h>\n@@ -43,6 +44,11 @@ NODISCARD inline opcodetype ConsumeOpcodeType(FuzzedDataProvider& fuzzed_data_pr\n     return static_cast<opcodetype>(fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, MAX_OPCODE));\n }\n \n+NODISCARD inline CAmount ConsumeMoney(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+{\n+    return fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(0, MAX_MONEY);\n+}\n+\n NODISCARD inline CScript ConsumeScript(FuzzedDataProvider& fuzzed_data_provider) noexcept\n {\n     const std::vector<uint8_t> b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n@@ -54,4 +60,27 @@ NODISCARD inline CScriptNum ConsumeScriptNum(FuzzedDataProvider& fuzzed_data_pro\n     return CScriptNum{fuzzed_data_provider.ConsumeIntegral<int64_t>()};\n }\n \n+template <typename T>\n+bool MultiplicationOverflow(T i, T j)\n+{\n+    static_assert(std::is_integral<T>::value, \"Integral required.\");\n+    if (std::numeric_limits<T>::is_signed) {\n+        if (i > 0) {\n+            if (j > 0) {\n+                return i > (std::numeric_limits<T>::max() / j);\n+            } else {\n+                return j < (std::numeric_limits<T>::min() / i);\n+            }\n+        } else {\n+            if (j > 0) {\n+                return i < (std::numeric_limits<T>::min() / j);\n+            } else {\n+                return i != 0 && (j < (std::numeric_limits<T>::max() / i));\n+            }\n+        }\n+    } else {\n+        return j != 0 && i > std::numeric_limits<T>::max() / j;\n+    }\n+}\n+\n #endif // BITCOIN_TEST_FUZZ_UTIL_H"
      }
    ]
  },
  {
    "sha": "d69145acb76ff12b7c5c1e55ce89e14bc6453904",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjkxNDVhY2I3NmZmMTJiN2M1YzFlNTVjZTg5ZTE0YmM2NDUzOTA0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T11:46:57Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T16:25:29Z"
      },
      "message": "tests: Add fuzzing harness for MultiplicationOverflow(...)",
      "tree": {
        "sha": "96648f8465b6c9867382a96b5392326f6d4d0bb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96648f8465b6c9867382a96b5392326f6d4d0bb0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d69145acb76ff12b7c5c1e55ce89e14bc6453904",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d69145acb76ff12b7c5c1e55ce89e14bc6453904",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d69145acb76ff12b7c5c1e55ce89e14bc6453904",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d69145acb76ff12b7c5c1e55ce89e14bc6453904/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7726f3bc4671fbc23e5bc31d0eb9fe381e2f07ef"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 49,
      "deletions": 0
    },
    "files": [
      {
        "sha": "26aced07f1f9de33d92db97eda55982ffa84841c",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d69145acb76ff12b7c5c1e55ce89e14bc6453904/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d69145acb76ff12b7c5c1e55ce89e14bc6453904/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=d69145acb76ff12b7c5c1e55ce89e14bc6453904",
        "patch": "@@ -42,6 +42,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/locale \\\n   test/fuzz/merkle_block_deserialize \\\n   test/fuzz/messageheader_deserialize \\\n+  test/fuzz/multiplication_overflow \\\n   test/fuzz/netaddr_deserialize \\\n   test/fuzz/netaddress \\\n   test/fuzz/out_point_deserialize \\\n@@ -513,6 +514,12 @@ test_fuzz_messageheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_messageheader_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_messageheader_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_multiplication_overflow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_multiplication_overflow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_multiplication_overflow_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_multiplication_overflow_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_multiplication_overflow_SOURCES = $(FUZZ_SUITE) test/fuzz/multiplication_overflow.cpp\n+\n test_fuzz_netaddr_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DNETADDR_DESERIALIZE=1\n test_fuzz_netaddr_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_netaddr_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "923db8058be04720244f629509ce068ecf59d642",
        "filename": "src/test/fuzz/multiplication_overflow.cpp",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d69145acb76ff12b7c5c1e55ce89e14bc6453904/src/test/fuzz/multiplication_overflow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d69145acb76ff12b7c5c1e55ce89e14bc6453904/src/test/fuzz/multiplication_overflow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/multiplication_overflow.cpp?ref=d69145acb76ff12b7c5c1e55ce89e14bc6453904",
        "patch": "@@ -0,0 +1,42 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+namespace {\n+template <typename T>\n+void TestMultiplicationOverflow(FuzzedDataProvider& fuzzed_data_provider)\n+{\n+    const T i = fuzzed_data_provider.ConsumeIntegral<T>();\n+    const T j = fuzzed_data_provider.ConsumeIntegral<T>();\n+    const bool is_multiplication_overflow_custom = MultiplicationOverflow(i, j);\n+    T result_builtin;\n+    const bool is_multiplication_overflow_builtin = __builtin_mul_overflow(i, j, &result_builtin);\n+    assert(is_multiplication_overflow_custom == is_multiplication_overflow_builtin);\n+    if (!is_multiplication_overflow_custom) {\n+        assert(i * j == result_builtin);\n+    }\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    TestMultiplicationOverflow<int64_t>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<uint64_t>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<int32_t>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<uint32_t>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<int16_t>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<uint16_t>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<char>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<unsigned char>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<signed char>(fuzzed_data_provider);\n+    TestMultiplicationOverflow<bool>(fuzzed_data_provider);\n+}"
      }
    ]
  },
  {
    "sha": "44abf417eb1cd8598084eee1a429ca57c7d0579a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGFiZjQxN2ViMWNkODU5ODA4NGVlZTFhNDI5Y2E1N2M3ZDA1Nzlh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T14:08:34Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-15T16:25:29Z"
      },
      "message": "tests: Add fuzzing harness for various functions taking std::string as input",
      "tree": {
        "sha": "e9cedaf6130356aafacc19d98d04d0ffbe0a1329",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9cedaf6130356aafacc19d98d04d0ffbe0a1329"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44abf417eb1cd8598084eee1a429ca57c7d0579a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44abf417eb1cd8598084eee1a429ca57c7d0579a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44abf417eb1cd8598084eee1a429ca57c7d0579a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44abf417eb1cd8598084eee1a429ca57c7d0579a/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d69145acb76ff12b7c5c1e55ce89e14bc6453904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d69145acb76ff12b7c5c1e55ce89e14bc6453904",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d69145acb76ff12b7c5c1e55ce89e14bc6453904"
      }
    ],
    "stats": {
      "total": 118,
      "additions": 112,
      "deletions": 6
    },
    "files": [
      {
        "sha": "9697a157fbd152d2f8d73049452c6cdce55f8390",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44abf417eb1cd8598084eee1a429ca57c7d0579a/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44abf417eb1cd8598084eee1a429ca57c7d0579a/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=44abf417eb1cd8598084eee1a429ca57c7d0579a",
        "patch": "@@ -93,6 +93,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/service_deserialize \\\n   test/fuzz/snapshotmetadata_deserialize \\\n   test/fuzz/spanparsing \\\n+  test/fuzz/string \\\n   test/fuzz/strprintf \\\n   test/fuzz/sub_net_deserialize \\\n   test/fuzz/transaction \\\n@@ -808,12 +809,24 @@ test_fuzz_service_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_service_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_service_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_snapshotmetadata_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSNAPSHOTMETADATA_DESERIALIZE=1\n+test_fuzz_snapshotmetadata_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_snapshotmetadata_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_snapshotmetadata_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_snapshotmetadata_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+\n test_fuzz_spanparsing_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_spanparsing_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_spanparsing_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_spanparsing_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_spanparsing_SOURCES = $(FUZZ_SUITE) test/fuzz/spanparsing.cpp\n \n+test_fuzz_string_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_string_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_string_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_string_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_string_SOURCES = $(FUZZ_SUITE) test/fuzz/string.cpp\n+\n test_fuzz_strprintf_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_strprintf_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_strprintf_LDADD = $(FUZZ_SUITE_LD_COMMON)\n@@ -826,12 +839,6 @@ test_fuzz_sub_net_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_sub_net_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_sub_net_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n-test_fuzz_snapshotmetadata_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSNAPSHOTMETADATA_DESERIALIZE=1\n-test_fuzz_snapshotmetadata_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_snapshotmetadata_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_snapshotmetadata_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-test_fuzz_snapshotmetadata_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n-\n test_fuzz_transaction_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "bb583885ba1fec48defd230d9feeb7dc8cb9fc47",
        "filename": "src/test/fuzz/string.cpp",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44abf417eb1cd8598084eee1a429ca57c7d0579a/src/test/fuzz/string.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44abf417eb1cd8598084eee1a429ca57c7d0579a/src/test/fuzz/string.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/string.cpp?ref=44abf417eb1cd8598084eee1a429ca57c7d0579a",
        "patch": "@@ -0,0 +1,89 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <netbase.h>\n+#include <outputtype.h>\n+#include <rpc/client.h>\n+#include <rpc/request.h>\n+#include <rpc/server.h>\n+#include <rpc/util.h>\n+#include <script/descriptor.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/error.h>\n+#include <util/fees.h>\n+#include <util/message.h>\n+#include <util/settings.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+#include <util/system.h>\n+#include <util/translation.h>\n+#include <util/url.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const std::string random_string_1 = fuzzed_data_provider.ConsumeRandomLengthString(32);\n+    const std::string random_string_2 = fuzzed_data_provider.ConsumeRandomLengthString(32);\n+    const std::vector<std::string> random_string_vector = ConsumeRandomLengthStringVector(fuzzed_data_provider);\n+\n+    (void)AmountErrMsg(random_string_1, random_string_2);\n+    (void)AmountHighWarn(random_string_1);\n+    BlockFilterType block_filter_type;\n+    (void)BlockFilterTypeByName(random_string_1, block_filter_type);\n+    (void)Capitalize(random_string_1);\n+    (void)CopyrightHolders(random_string_1);\n+    FeeEstimateMode fee_estimate_mode;\n+    (void)FeeModeFromString(random_string_1, fee_estimate_mode);\n+    (void)FormatParagraph(random_string_1, fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000));\n+    (void)FormatSubVersion(random_string_1, fuzzed_data_provider.ConsumeIntegral<int>(), random_string_vector);\n+    (void)GetDescriptorChecksum(random_string_1);\n+    (void)HelpExampleCli(random_string_1, random_string_2);\n+    (void)HelpExampleRpc(random_string_1, random_string_2);\n+    (void)HelpMessageGroup(random_string_1);\n+    (void)HelpMessageOpt(random_string_1, random_string_2);\n+    (void)IsDeprecatedRPCEnabled(random_string_1);\n+    (void)Join(random_string_vector, random_string_1);\n+    (void)JSONRPCError(fuzzed_data_provider.ConsumeIntegral<int>(), random_string_1);\n+    const util::Settings settings;\n+    (void)OnlyHasDefaultSectionSetting(settings, random_string_1, random_string_2);\n+    (void)ParseNetwork(random_string_1);\n+    try {\n+        (void)ParseNonRFCJSONValue(random_string_1);\n+    } catch (const std::runtime_error&) {\n+    }\n+    OutputType output_type;\n+    (void)ParseOutputType(random_string_1, output_type);\n+    (void)ResolveErrMsg(random_string_1, random_string_2);\n+    try {\n+        (void)RPCConvertNamedValues(random_string_1, random_string_vector);\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)RPCConvertValues(random_string_1, random_string_vector);\n+    } catch (const std::runtime_error&) {\n+    }\n+    (void)SanitizeString(random_string_1);\n+    (void)SanitizeString(random_string_1, fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 3));\n+    (void)ShellEscape(random_string_1);\n+    int port_out;\n+    std::string host_out;\n+    SplitHostPort(random_string_1, port_out, host_out);\n+    (void)TimingResistantEqual(random_string_1, random_string_2);\n+    (void)ToLower(random_string_1);\n+    (void)ToUpper(random_string_1);\n+    (void)TrimString(random_string_1);\n+    (void)TrimString(random_string_1, random_string_2);\n+    (void)urlDecode(random_string_1);\n+    (void)ValidAsCString(random_string_1);\n+    (void)_(random_string_1.c_str());\n+}"
      },
      {
        "sha": "47f8d3fb275f9f516df05adf7f746fee3e9f5933",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44abf417eb1cd8598084eee1a429ca57c7d0579a/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44abf417eb1cd8598084eee1a429ca57c7d0579a/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=44abf417eb1cd8598084eee1a429ca57c7d0579a",
        "patch": "@@ -25,6 +25,16 @@ NODISCARD inline std::vector<uint8_t> ConsumeRandomLengthByteVector(FuzzedDataPr\n     return {s.begin(), s.end()};\n }\n \n+NODISCARD inline std::vector<std::string> ConsumeRandomLengthStringVector(FuzzedDataProvider& fuzzed_data_provider, size_t max_vector_size = 16, size_t max_string_length = 16) noexcept\n+{\n+    const size_t n_elements = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, max_vector_size);\n+    std::vector<std::string> r;\n+    for (size_t i = 0; i < n_elements; ++i) {\n+        r.push_back(fuzzed_data_provider.ConsumeRandomLengthString(max_string_length));\n+    }\n+    return r;\n+}\n+\n template <typename T>\n NODISCARD inline Optional<T> ConsumeDeserializable(FuzzedDataProvider& fuzzed_data_provider, size_t max_length = 4096) noexcept\n {"
      }
    ]
  }
]