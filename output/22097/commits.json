[
  {
    "sha": "4fa72eedd1d8fb54129bcf22ed816028a7609e89",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmE3MmVlZGQxZDhmYjU0MTI5YmNmMjJlZDgxNjAyOGE3NjA5ZTg5",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "dev@ariard.me",
        "date": "2021-05-28T19:47:33Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "dev@ariard.me",
        "date": "2021-06-13T16:36:21Z"
      },
      "message": "validation: Move package size limit from virtual bytes to weight units",
      "tree": {
        "sha": "8227560d123ecd6f8ee05cbfb187b882669d17aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8227560d123ecd6f8ee05cbfb187b882669d17aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fa72eedd1d8fb54129bcf22ed816028a7609e89",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fa72eedd1d8fb54129bcf22ed816028a7609e89",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4fa72eedd1d8fb54129bcf22ed816028a7609e89",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fa72eedd1d8fb54129bcf22ed816028a7609e89/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9c1ec689f353d3d7c34695a074f82bb2ea449538",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c1ec689f353d3d7c34695a074f82bb2ea449538",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c1ec689f353d3d7c34695a074f82bb2ea449538"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "e69fc4f48ddd058e48b253f14438da14394339fd",
        "filename": "src/policy/packages.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fa72eedd1d8fb54129bcf22ed816028a7609e89/src/policy/packages.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fa72eedd1d8fb54129bcf22ed816028a7609e89/src/policy/packages.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/packages.cpp?ref=4fa72eedd1d8fb54129bcf22ed816028a7609e89",
        "patch": "@@ -19,10 +19,10 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n         return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n     }\n \n-    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n-                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n+    const int64_t total_weight = std::accumulate(txns.cbegin(), txns.cend(), 0,\n+                               [](int64_t sum, const auto& tx) { return sum + GetTransactionWeight(*tx); });\n     // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n-    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n+    if (package_count > 1 && total_weight > MAX_PACKAGE_WEIGHT) {\n         return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n     }\n "
      },
      {
        "sha": "653456b49ad120b11acb8da66d40057551a6a054",
        "filename": "src/policy/packages.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fa72eedd1d8fb54129bcf22ed816028a7609e89/src/policy/packages.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fa72eedd1d8fb54129bcf22ed816028a7609e89/src/policy/packages.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/packages.h?ref=4fa72eedd1d8fb54129bcf22ed816028a7609e89",
        "patch": "@@ -13,9 +13,9 @@\n \n /** Default maximum number of transactions in a package. */\n static constexpr uint32_t MAX_PACKAGE_COUNT{25};\n-/** Default maximum total virtual size of transactions in a package in KvB. */\n-static constexpr uint32_t MAX_PACKAGE_SIZE{101};\n-static_assert(MAX_PACKAGE_SIZE * WITNESS_SCALE_FACTOR * 1000 >= MAX_STANDARD_TX_WEIGHT);\n+/** Default maximum total weight for transactions in a package. */\n+static constexpr uint32_t MAX_PACKAGE_WEIGHT{404000};\n+static_assert(MAX_PACKAGE_WEIGHT >= MAX_STANDARD_TX_WEIGHT);\n \n /** A \"reason\" why a package was invalid. It may be that one or more of the included\n  * transactions is invalid or the package itself violates our rules."
      },
      {
        "sha": "3c5b45f3f0d6386af6247410e8896bd718c6424d",
        "filename": "src/test/txvalidation_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fa72eedd1d8fb54129bcf22ed816028a7609e89/src/test/txvalidation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fa72eedd1d8fb54129bcf22ed816028a7609e89/src/test/txvalidation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidation_tests.cpp?ref=4fa72eedd1d8fb54129bcf22ed816028a7609e89",
        "patch": "@@ -116,14 +116,14 @@ BOOST_FIXTURE_TEST_CASE(package_tests, TestChain100Setup)\n     BOOST_CHECK_EQUAL(result_too_many.m_state.GetResult(), PackageValidationResult::PCKG_POLICY);\n     BOOST_CHECK_EQUAL(result_too_many.m_state.GetRejectReason(), \"package-too-many-transactions\");\n \n-    // Packages can't have a total size of more than 101KvB.\n+    // Packages can't have a total weight of more than 404000 WU.\n     CTransactionRef large_ptx = create_placeholder_tx(150, 150);\n     Package package_too_large;\n-    auto size_large = GetVirtualTransactionSize(*large_ptx);\n-    size_t total_size{0};\n-    while (total_size <= MAX_PACKAGE_SIZE * 1000) {\n+    auto weight_large = GetTransactionWeight(*large_ptx);\n+    size_t total_weight{0};\n+    while (total_weight <= MAX_PACKAGE_WEIGHT) {\n         package_too_large.push_back(large_ptx);\n-        total_size += size_large;\n+        total_weight += weight_large;\n     }\n     BOOST_CHECK(package_too_large.size() <= MAX_PACKAGE_COUNT);\n     auto result_too_large = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool, package_too_large, /* test_accept */ true);\n@@ -133,7 +133,7 @@ BOOST_FIXTURE_TEST_CASE(package_tests, TestChain100Setup)\n \n     // A single, giant transaction submitted through ProcessNewPackage fails on single tx policy.\n     CTransactionRef giant_ptx = create_placeholder_tx(999, 999);\n-    BOOST_CHECK(GetVirtualTransactionSize(*giant_ptx) > MAX_PACKAGE_SIZE * 1000);\n+    BOOST_CHECK(GetTransactionWeight(*giant_ptx) > MAX_PACKAGE_WEIGHT);\n     auto result_single_large = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool, {giant_ptx}, /* test_accept */ true);\n     BOOST_CHECK(result_single_large.m_state.IsInvalid());\n     BOOST_CHECK_EQUAL(result_single_large.m_state.GetResult(), PackageValidationResult::PCKG_TX);"
      }
    ]
  }
]