DrahtBot,2018-08-03T10:40:47Z,<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13878 (utils: Add fstream wrapper to allow to pass unicode filename on Windows by ken2812221)\n* #13866 (utils: Use _wfopen and _wfreopen on Windows by ken2812221)\n* #13746 (-masterdatadir for datadir bootstrapping by kallewoof)\n* #13743 (refactor: Replace std/boost::bind with lam,https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-410215803,410215803,
Empact,2018-08-03T13:16:40Z,"Seems like a good opportunity to drop `boost::interprocess::file_lock` altogether, no?",https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-410249864,410249864,
ken2812221,2018-08-03T16:22:19Z,"@Empact  In my opinion, we deal catching exception and try_lock fail much the same when we use boost, so no need to handle the extra exception for now.",https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-410304855,410304855,
Empact,2018-08-03T17:25:54Z,"@ken2812221 FYI boost does throw on the failures noted above:\n\n```C++\ninline bool file_lock::try_lock()\n{\n   bool result;\n   if(!ipcdetail::try_acquire_file_lock(m_file_hnd, result)){\n      error_info err(system_error_code());\n      throw interprocess_exception(err);\n   }\n   return result;\n}\n\nnamespace boost {\nnamespace interprocess {\ninline int system_error_code() //",https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-410321834,410321834,
ken2812221,2018-08-03T17:35:07Z,@Empact I simply return false in my code at those conditions.,https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-410324307,410324307,
Empact,2018-08-03T17:42:34Z,"Yeah so the net effect is the loss of this message:\n`return error(""Error while attempting to lock directory %s: %s"", directory.string(), e.what());`\n\nCertainly not a big deal but breadcrumbs can mean the difference between an easy fix and a maddening mystery.",https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-410326299,410326299,
ken2812221,2018-08-03T18:32:14Z,@Empact Updated to get error messages.,https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-410339465,410339465,
ken2812221,2018-08-05T15:30:03Z,Update: use std codecvt instead of custom converter.,https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-410527735,410527735,
laanwj,2018-08-27T12:33:39Z,"lightly tested ACK 80119487840db0c3944a89f92772660ee594c4c3\n\ntested on-\n- Linux Ubuntu 18.04 (✅)\n- OpenBSD 6.3 (✅)\n- FreeBSD 11.2 (✅ )\n",https://github.com/bitcoin/bitcoin/pull/13862#issuecomment-416211421,416211421,
Empact,2018-08-03T15:52:34Z,nit: could delete default and copy constructor,https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207589776,207589776,src/fs.h
Empact,2018-08-03T15:59:50Z,"The relevant boost implementation, for reference:\n```C++\ninline bool try_acquire_file_lock(file_handle_t hnd, bool &acquired)\n{\n   struct ::flock lock;\n   lock.l_type    = F_WRLCK;\n   lock.l_whence  = SEEK_SET;\n   lock.l_start   = 0;\n   lock.l_len     = 0;\n   int ret = ::fcntl(hnd, F_SETLK, &lock);\n   if(ret == -1){\n      return (errno == EAGAIN || errno == EACCES) ?\n      ",https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207591824,207591824,src/fs.cpp
Empact,2018-08-03T16:03:30Z,"The relevant boost implementation, for reference:\n```C++\ninline bool try_acquire_file_lock(file_handle_t hnd, bool &acquired)\n{\n   const unsigned long len = ((unsigned long)-1);\n   winapi::interprocess_overlapped overlapped;\n   std::memset(&overlapped, 0, sizeof(overlapped));\n   if(!winapi::lock_file_ex\n      (hnd, winapi::lockfile_exclusive_lock | winapi::lockfile_fail_immediately",https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207593056,207593056,src/fs.cpp
Empact,2018-08-03T16:05:15Z,Also is the `(HANDLE)` cast necessary?,https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207593509,207593509,src/fs.cpp
ken2812221,2018-08-03T16:18:50Z,Fixed,https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207597096,207597096,src/fs.cpp
ken2812221,2018-08-03T16:35:07Z,Fixed,https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207601154,207601154,src/fs.h
donaloconnor,2018-08-03T21:30:54Z,"The CreateFileW with 0 sharing effectively opens the file as exclusive (locking it). It feels the TryLock() here is redundant because we don't require locking of specific bytes.\n\nPerhaps the TryLock() should be the one doing the CreateFileW.\nApologies if I've misunderstood something here :-)",https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207672720,207672720,src/fs.cpp
ken2812221,2018-08-03T23:03:36Z,Fixed,https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207686115,207686115,src/fs.cpp
Empact,2018-08-04T15:28:52Z,nit: `static`,https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207711453,207711453,src/fs.cpp
Empact,2018-08-04T15:29:03Z,nit: `static`,https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207711458,207711458,src/fs.cpp
Empact,2018-08-04T15:44:45Z,"For reference, how these are logged by the callers:\nhttps://github.com/bitcoin/bitcoin/blob/2b67354aa584c4aabae049a67767ac7b70e2d01a/src/init.cpp#L1183-L1185\n\nhttps://github.com/bitcoin/bitcoin/blob/2b67354aa584c4aabae049a67767ac7b70e2d01a/src/wallet/db.cpp#L136-L139\n",https://github.com/bitcoin/bitcoin/pull/13862#discussion_r207711930,207711930,src/util.cpp
laanwj,2018-08-27T12:35:27Z,"would prefer simply `fcntl(fd, F_SETLK, &lock) == -1` (more consistent with the other if statements in the code)",https://github.com/bitcoin/bitcoin/pull/13862#discussion_r212958280,212958280,src/fs.cpp
ken2812221,2018-08-27T16:56:07Z,fixed,https://github.com/bitcoin/bitcoin/pull/13862#discussion_r213042311,213042311,src/fs.cpp
