[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54471481",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-54471481",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 54471481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDcxNDgx",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T13:04:39Z",
    "updated_at": "2014-09-04T13:04:39Z",
    "author_association": "MEMBER",
    "body": "Strange, test_bitcoin works perfectly here - even under valgrind.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54471481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54529133",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-54529133",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 54529133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTI5MTMz",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T19:10:20Z",
    "updated_at": "2014-09-04T19:10:20Z",
    "author_association": "MEMBER",
    "body": "Bug fixed.\n\nLet it be known that\n\n```\nunordered_map::iterator it = mapA.find(x);\nif (it != mapB.end()) {\n```\n\nworks in recent Boost, but not in older Boost... (I assume that in newer ones, end() returns a map-independent constant).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/54529133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/55831762",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-55831762",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 55831762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODMxNzYy",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-17T00:03:51Z",
    "updated_at": "2014-09-17T00:03:51Z",
    "author_association": "MEMBER",
    "body": "Added a large randomized test for CCoinsViewCache that hopefully triggers all edge cases.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/55831762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56431811",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-56431811",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 56431811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDMxODEx",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T19:58:38Z",
    "updated_at": "2014-09-22T19:58:38Z",
    "author_association": "MEMBER",
    "body": "@laanwj Can you have a look at this? Are the tests sufficient?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56431811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56605404",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-56605404",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 56605404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjA1NDA0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T23:25:18Z",
    "updated_at": "2014-09-23T23:25:18Z",
    "author_association": "MEMBER",
    "body": "Replaced the dummy arg with an explicit constructor.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56605404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56613389",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-56613389",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 56613389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjEzMzg5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T01:19:55Z",
    "updated_at": "2014-09-24T01:19:55Z",
    "author_association": "MEMBER",
    "body": "Nope, that didn't work - the compiler still uses the explicit constructor for assignment (because the type is different). Solved it now by passing a pointer rather than a reference (in a separate commit).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56613389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56614283",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-56614283",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 56614283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjE0Mjgz",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T01:34:13Z",
    "updated_at": "2014-09-24T01:34:13Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4834_7c70438dc67547e83953ba0343a071fae304ce65/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56614283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56652851",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-56652851",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 56652851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjUyODUx",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-24T10:42:41Z",
    "updated_at": "2014-09-24T10:42:41Z",
    "author_association": "MEMBER",
    "body": "Works for me, tested ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/56652851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57004196",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-57004196",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 57004196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDA0MTk2",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-26T18:47:37Z",
    "updated_at": "2014-09-26T18:47:37Z",
    "author_association": "MEMBER",
    "body": "@gmaxwell @jgarzik Comments?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57004196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58326510",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#issuecomment-58326510",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4834",
    "id": 58326510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzI2NTEw",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-08T08:35:12Z",
    "updated_at": "2014-10-08T08:35:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK. (tested a previous version but moving my test hosts to the current version now)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58326510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253674",
    "pull_request_review_id": null,
    "id": 17253674,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjUzNjc0",
    "diff_hunk": "@@ -53,71 +53,76 @@ bool CCoins::Spend(int nPos) {\n \n \n bool CCoinsView::GetCoins(const uint256 &txid, CCoins &coins) const { return false; }\n-bool CCoinsView::SetCoins(const uint256 &txid, const CCoins &coins) { return false; }\n bool CCoinsView::HaveCoins(const uint256 &txid) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(0); }\n-bool CCoinsView::SetBestBlock(const uint256 &hashBlock) { return false; }\n bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n bool CCoinsView::GetStats(CCoinsStats &stats) const { return false; }\n \n \n CCoinsViewBacked::CCoinsViewBacked(CCoinsView &viewIn) : base(&viewIn) { }\n bool CCoinsViewBacked::GetCoins(const uint256 &txid, CCoins &coins) const { return base->GetCoins(txid, coins); }\n-bool CCoinsViewBacked::SetCoins(const uint256 &txid, const CCoins &coins) { return base->SetCoins(txid, coins); }\n bool CCoinsViewBacked::HaveCoins(const uint256 &txid) const { return base->HaveCoins(txid); }\n uint256 CCoinsViewBacked::GetBestBlock() const { return base->GetBestBlock(); }\n-bool CCoinsViewBacked::SetBestBlock(const uint256 &hashBlock) { return base->SetBestBlock(hashBlock); }\n void CCoinsViewBacked::SetBackend(CCoinsView &viewIn) { base = &viewIn; }\n bool CCoinsViewBacked::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return base->BatchWrite(mapCoins, hashBlock); }\n bool CCoinsViewBacked::GetStats(CCoinsStats &stats) const { return base->GetStats(stats); }\n \n CCoinsKeyHasher::CCoinsKeyHasher() : salt(GetRandHash()) {}\n \n-CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hashBlock(0) { }\n+CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hasModifier(false), hashBlock(0) { }",
    "path": "src/coins.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "0cda129b675a2702108684816f2ebda70719f2d4",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Unrelated question, fDummy looks unused to me (even my compiler sais that ^^). Why is that flag there in the first place?\n",
    "created_at": "2014-09-08T17:41:00Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17253674",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253674"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17253674"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253792",
    "pull_request_review_id": null,
    "id": 17253792,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjUzNzky",
    "diff_hunk": "@@ -53,71 +53,76 @@ bool CCoins::Spend(int nPos) {\n \n \n bool CCoinsView::GetCoins(const uint256 &txid, CCoins &coins) const { return false; }\n-bool CCoinsView::SetCoins(const uint256 &txid, const CCoins &coins) { return false; }\n bool CCoinsView::HaveCoins(const uint256 &txid) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(0); }\n-bool CCoinsView::SetBestBlock(const uint256 &hashBlock) { return false; }\n bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n bool CCoinsView::GetStats(CCoinsStats &stats) const { return false; }\n \n \n CCoinsViewBacked::CCoinsViewBacked(CCoinsView &viewIn) : base(&viewIn) { }\n bool CCoinsViewBacked::GetCoins(const uint256 &txid, CCoins &coins) const { return base->GetCoins(txid, coins); }\n-bool CCoinsViewBacked::SetCoins(const uint256 &txid, const CCoins &coins) { return base->SetCoins(txid, coins); }\n bool CCoinsViewBacked::HaveCoins(const uint256 &txid) const { return base->HaveCoins(txid); }\n uint256 CCoinsViewBacked::GetBestBlock() const { return base->GetBestBlock(); }\n-bool CCoinsViewBacked::SetBestBlock(const uint256 &hashBlock) { return base->SetBestBlock(hashBlock); }\n void CCoinsViewBacked::SetBackend(CCoinsView &viewIn) { base = &viewIn; }\n bool CCoinsViewBacked::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return base->BatchWrite(mapCoins, hashBlock); }\n bool CCoinsViewBacked::GetStats(CCoinsStats &stats) const { return base->GetStats(stats); }\n \n CCoinsKeyHasher::CCoinsKeyHasher() : salt(GetRandHash()) {}\n \n-CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hashBlock(0) { }\n+CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hasModifier(false), hashBlock(0) { }",
    "path": "src/coins.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "0cda129b675a2702108684816f2ebda70719f2d4",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's the point of a dummy :).\n\nThe reason it's there is to avoid having the compiler think that this is a copy constructor, IIRC.\n",
    "created_at": "2014-09-08T17:42:44Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17253792",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253792"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17253792"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253912",
    "pull_request_review_id": null,
    "id": 17253912,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjUzOTEy",
    "diff_hunk": "@@ -53,71 +53,76 @@ bool CCoins::Spend(int nPos) {\n \n \n bool CCoinsView::GetCoins(const uint256 &txid, CCoins &coins) const { return false; }\n-bool CCoinsView::SetCoins(const uint256 &txid, const CCoins &coins) { return false; }\n bool CCoinsView::HaveCoins(const uint256 &txid) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(0); }\n-bool CCoinsView::SetBestBlock(const uint256 &hashBlock) { return false; }\n bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n bool CCoinsView::GetStats(CCoinsStats &stats) const { return false; }\n \n \n CCoinsViewBacked::CCoinsViewBacked(CCoinsView &viewIn) : base(&viewIn) { }\n bool CCoinsViewBacked::GetCoins(const uint256 &txid, CCoins &coins) const { return base->GetCoins(txid, coins); }\n-bool CCoinsViewBacked::SetCoins(const uint256 &txid, const CCoins &coins) { return base->SetCoins(txid, coins); }\n bool CCoinsViewBacked::HaveCoins(const uint256 &txid) const { return base->HaveCoins(txid); }\n uint256 CCoinsViewBacked::GetBestBlock() const { return base->GetBestBlock(); }\n-bool CCoinsViewBacked::SetBestBlock(const uint256 &hashBlock) { return base->SetBestBlock(hashBlock); }\n void CCoinsViewBacked::SetBackend(CCoinsView &viewIn) { base = &viewIn; }\n bool CCoinsViewBacked::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return base->BatchWrite(mapCoins, hashBlock); }\n bool CCoinsViewBacked::GetStats(CCoinsStats &stats) const { return base->GetStats(stats); }\n \n CCoinsKeyHasher::CCoinsKeyHasher() : salt(GetRandHash()) {}\n \n-CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hashBlock(0) { }\n+CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hasModifier(false), hashBlock(0) { }",
    "path": "src/coins.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "0cda129b675a2702108684816f2ebda70719f2d4",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for clarification ^^, is there a comment about that fact or is this common pratcise in C++ anyway?\n",
    "created_at": "2014-09-08T17:44:27Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17253912",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253912"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17253912"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17253912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17899618",
    "pull_request_review_id": null,
    "id": 17899618,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODk5NjE4",
    "diff_hunk": "@@ -53,71 +53,76 @@ bool CCoins::Spend(int nPos) {\n \n \n bool CCoinsView::GetCoins(const uint256 &txid, CCoins &coins) const { return false; }\n-bool CCoinsView::SetCoins(const uint256 &txid, const CCoins &coins) { return false; }\n bool CCoinsView::HaveCoins(const uint256 &txid) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(0); }\n-bool CCoinsView::SetBestBlock(const uint256 &hashBlock) { return false; }\n bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n bool CCoinsView::GetStats(CCoinsStats &stats) const { return false; }\n \n \n CCoinsViewBacked::CCoinsViewBacked(CCoinsView &viewIn) : base(&viewIn) { }\n bool CCoinsViewBacked::GetCoins(const uint256 &txid, CCoins &coins) const { return base->GetCoins(txid, coins); }\n-bool CCoinsViewBacked::SetCoins(const uint256 &txid, const CCoins &coins) { return base->SetCoins(txid, coins); }\n bool CCoinsViewBacked::HaveCoins(const uint256 &txid) const { return base->HaveCoins(txid); }\n uint256 CCoinsViewBacked::GetBestBlock() const { return base->GetBestBlock(); }\n-bool CCoinsViewBacked::SetBestBlock(const uint256 &hashBlock) { return base->SetBestBlock(hashBlock); }\n void CCoinsViewBacked::SetBackend(CCoinsView &viewIn) { base = &viewIn; }\n bool CCoinsViewBacked::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return base->BatchWrite(mapCoins, hashBlock); }\n bool CCoinsViewBacked::GetStats(CCoinsStats &stats) const { return base->GetStats(stats); }\n \n CCoinsKeyHasher::CCoinsKeyHasher() : salt(GetRandHash()) {}\n \n-CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hashBlock(0) { }\n+CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hasModifier(false), hashBlock(0) { }",
    "path": "src/coins.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "0cda129b675a2702108684816f2ebda70719f2d4",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wouldn't \"explicit\" be enough to convince the compiler of that?\n",
    "created_at": "2014-09-23T09:51:02Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17899618",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17899618"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17899618"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17899618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17899969",
    "pull_request_review_id": null,
    "id": 17899969,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODk5OTY5",
    "diff_hunk": "@@ -1348,22 +1348,17 @@ void static InvalidBlockFound(CBlockIndex *pindex, const CValidationState &state\n \n void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight)\n {\n-    bool ret;\n     // mark inputs spent\n     if (!tx.IsCoinBase()) {\n         txundo.vprevout.reserve(tx.vin.size());\n-        for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-            const CTxIn &txin = tx.vin[i];\n-            CCoins &coins = inputs.GetCoins(txin.prevout.hash);\n+        BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n             txundo.vprevout.push_back(CTxInUndo());\n-            ret = coins.Spend(txin.prevout, txundo.vprevout.back());\n-            assert(ret);\n+            inputs.ModifyCoins(txin.prevout.hash)->Spend(txin.prevout, txundo.vprevout.back());",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We no longer check the result of Spend() here. Is this on purpose?\n",
    "created_at": "2014-09-23T10:02:03Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17899969",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17899969"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17899969"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17899969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1356,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17900205",
    "pull_request_review_id": null,
    "id": 17900205,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTAwMjA1",
    "diff_hunk": "@@ -53,61 +53,67 @@ bool CCoins::Spend(int nPos) {\n \n \n bool CCoinsView::GetCoins(const uint256 &txid, CCoins &coins) const { return false; }\n-bool CCoinsView::SetCoins(const uint256 &txid, const CCoins &coins) { return false; }\n bool CCoinsView::HaveCoins(const uint256 &txid) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(0); }\n-bool CCoinsView::SetBestBlock(const uint256 &hashBlock) { return false; }\n bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n bool CCoinsView::GetStats(CCoinsStats &stats) const { return false; }\n \n \n CCoinsViewBacked::CCoinsViewBacked(CCoinsView &viewIn) : base(&viewIn) { }\n bool CCoinsViewBacked::GetCoins(const uint256 &txid, CCoins &coins) const { return base->GetCoins(txid, coins); }\n-bool CCoinsViewBacked::SetCoins(const uint256 &txid, const CCoins &coins) { return base->SetCoins(txid, coins); }\n bool CCoinsViewBacked::HaveCoins(const uint256 &txid) const { return base->HaveCoins(txid); }\n uint256 CCoinsViewBacked::GetBestBlock() const { return base->GetBestBlock(); }\n-bool CCoinsViewBacked::SetBestBlock(const uint256 &hashBlock) { return base->SetBestBlock(hashBlock); }\n void CCoinsViewBacked::SetBackend(CCoinsView &viewIn) { base = &viewIn; }\n bool CCoinsViewBacked::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return base->BatchWrite(mapCoins, hashBlock); }\n bool CCoinsViewBacked::GetStats(CCoinsStats &stats) const { return base->GetStats(stats); }\n \n CCoinsKeyHasher::CCoinsKeyHasher() : salt(GetRandHash()) {}\n \n-CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hashBlock(0) { }\n+CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hasModifier(false), hashBlock(0) { }\n \n-bool CCoinsViewCache::GetCoins(const uint256 &txid, CCoins &coins) const {\n-    if (cacheCoins.count(txid)) {\n-        coins = cacheCoins[txid];\n-        return true;\n-    }\n-    if (base->GetCoins(txid, coins)) {\n-        cacheCoins[txid] = coins;\n-        return true;\n-    }\n-    return false;\n-}\n-\n-CCoinsMap::iterator CCoinsViewCache::FetchCoins(const uint256 &txid) {\n+CCoinsMap::const_iterator CCoinsViewCache::FetchCoins(const uint256 &txid) const {\n     CCoinsMap::iterator it = cacheCoins.find(txid);\n     if (it != cacheCoins.end())\n         return it;\n     CCoins tmp;\n-    if (!base->GetCoins(txid,tmp))\n+    if (!base->GetCoins(txid, tmp))\n         return cacheCoins.end();\n-    CCoinsMap::iterator ret = cacheCoins.insert(it, std::make_pair(txid, CCoins()));\n-    tmp.swap(ret->second);\n+    CCoinsMap::iterator ret = cacheCoins.insert(std::make_pair(txid, CCoinsCacheEntry())).first;\n+    tmp.swap(ret->second.coins);\n+    if (ret->second.coins.IsPruned()) {\n+        // The parent only has an empty entry for this txid; we can consider our\n+        // version as fresh.\n+        ret->second.flags = CCoinsCacheEntry::FRESH;\n+    }\n     return ret;\n }\n \n-CCoinsMap::const_iterator CCoinsViewCache::FetchCoins(const uint256 &txid) const {\n-    /* Avoid redundant implementation with the const-cast.  */\n-    return const_cast<CCoinsViewCache*>(this)->FetchCoins(txid);\n+bool CCoinsViewCache::GetCoins(const uint256 &txid, CCoins &coins) const {\n+    CCoinsMap::const_iterator it = FetchCoins(txid);\n+    if (it != cacheCoins.end()) {\n+        coins = it->second.coins;\n+        return true;\n+    }\n+    return false;\n }\n \n-CCoins &CCoinsViewCache::GetCoins(const uint256 &txid) {\n-    CCoinsMap::iterator it = FetchCoins(txid);\n-    assert(it != cacheCoins.end());\n-    return it->second;\n+CCoinsModifier CCoinsViewCache::ModifyCoins(const uint256 &txid) {",
    "path": "src/coins.cpp",
    "position": 80,
    "original_position": 76,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do we need a flag/bitfield here to distinguish the cases\n\na) expect an entry to be already there for txid, creating a new one would be a mistake \n\nb) expect to create a new entry for txid, having one there already would be a mistake\n\nc) entry could be already there or be created anew, don't care\n\nIt appears we're slightly weakening the integrity checks in that regard.\n",
    "created_at": "2014-09-23T10:09:42Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17900205",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17900205"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17900205"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17900205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 105,
    "original_line": 100,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17900510",
    "pull_request_review_id": null,
    "id": 17900510,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTAwNTEw",
    "diff_hunk": "@@ -313,20 +335,39 @@ class CCoinsViewBacked : public CCoinsView\n public:\n     CCoinsViewBacked(CCoinsView &viewIn);\n     bool GetCoins(const uint256 &txid, CCoins &coins) const;\n-    bool SetCoins(const uint256 &txid, const CCoins &coins);\n     bool HaveCoins(const uint256 &txid) const;\n     uint256 GetBestBlock() const;\n-    bool SetBestBlock(const uint256 &hashBlock);\n     void SetBackend(CCoinsView &viewIn);\n     bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock);\n     bool GetStats(CCoinsStats &stats) const;\n };\n \n \n+class CCoinsViewCache;\n+\n+/** A reference to a mutable cache entry. Encapsulating it allows us to run\n+ *  cleanup code after the modification is finished, and keeping track of\n+ *  concurrent modifications. */\n+class CCoinsModifier\n+{\n+private:\n+    CCoinsViewCache& cache;\n+    CCoinsMap::iterator it;\n+    CCoinsModifier(CCoinsViewCache& cache_, CCoinsMap::iterator it_);\n+\n+public:\n+    CCoins* operator->() { return &it->second.coins; }\n+    CCoins& operator*() { return it->second.coins; }\n+    ~CCoinsModifier();\n+    friend class CCoinsViewCache;\n+};\n+\n /** CCoinsView that adds a memory cache for transactions to another CCoinsView */\n class CCoinsViewCache : public CCoinsViewBacked",
    "path": "src/coins.h",
    "position": 110,
    "original_position": 107,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We could add `assert(!hasModifier);` in the CCoinsViewCache destructor, to assert that the modifier never outlives the cache.\n",
    "created_at": "2014-09-23T10:19:16Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17900510",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17900510"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17900510"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17900510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 366,
    "original_line": 366,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17901060",
    "pull_request_review_id": null,
    "id": 17901060,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTAxMDYw",
    "diff_hunk": "@@ -0,0 +1,178 @@\n+// Copyright (c) 2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"coins.h\"\n+#include \"random.h\"\n+#include \"uint256.h\"\n+\n+#include <vector>\n+#include <map>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace\n+{\n+class CCoinsViewTest : public CCoinsView\n+{\n+    uint256 hashBestBlock_;\n+    std::map<uint256, CCoins> map_;\n+\n+public:\n+    bool GetCoins(const uint256& txid, CCoins& coins) const\n+    {\n+        std::map<uint256, CCoins>::const_iterator it = map_.find(txid);\n+        if (it == map_.end()) {\n+            return false;\n+        }\n+        coins = it->second;\n+        if (coins.IsPruned() && insecure_rand() % 2 == 0) {\n+            // Randomly return false in case of an empty entry.\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    bool HaveCoins(const uint256& txid) const\n+    {\n+        CCoins coins;\n+        return GetCoins(txid, coins);\n+    }\n+\n+    uint256 GetBestBlock() const { return hashBestBlock_; }\n+\n+    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock)\n+    {\n+        for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); ) {\n+            map_[it->first] = it->second.coins;\n+            if (it->second.coins.IsPruned() && insecure_rand() % 3 == 0) {\n+                // Randomly delete empty entries on write.\n+                map_.erase(it->first);\n+            }\n+            mapCoins.erase(it++);\n+        }\n+        mapCoins.clear();\n+        hashBestBlock_ = hashBlock;\n+        return true;\n+    }\n+\n+    bool GetStats(CCoinsStats& stats) const { return false; }\n+};\n+}\n+\n+BOOST_AUTO_TEST_SUITE(coins_tests)\n+\n+static const unsigned int NUM_SIMULATION_ITERATIONS = 40000;\n+\n+// This is a large randomized insert/remove simulation test on a variable-size\n+// stack of caches on top of CCoinsViewTest.\n+//\n+// It will randomly create/update/delete CCoins entries to a tip of caches, with\n+// txids picked from a limited list of random 256-bit hashes. Occasionally, a\n+// new tip is added to the stack of caches, or the tip is flushed and removed.\n+//\n+// During the process, booleans are kept to make sure that the randomized\n+// operation hits all branches.",
    "path": "src/test/coins_tests.cpp",
    "position": 75,
    "original_position": 75,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does this mean that the test can randomly fail? (ie, if due to randomness it does not hit a branch?)\n",
    "created_at": "2014-09-23T10:35:26Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17901060",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17901060"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17901060"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17901060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 75,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17935751",
    "pull_request_review_id": null,
    "id": 17935751,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTM1NzUx",
    "diff_hunk": "@@ -1348,22 +1348,17 @@ void static InvalidBlockFound(CBlockIndex *pindex, const CValidationState &state\n \n void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight)\n {\n-    bool ret;\n     // mark inputs spent\n     if (!tx.IsCoinBase()) {\n         txundo.vprevout.reserve(tx.vin.size());\n-        for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-            const CTxIn &txin = tx.vin[i];\n-            CCoins &coins = inputs.GetCoins(txin.prevout.hash);\n+        BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n             txundo.vprevout.push_back(CTxInUndo());\n-            ret = coins.Spend(txin.prevout, txundo.vprevout.back());\n-            assert(ret);\n+            inputs.ModifyCoins(txin.prevout.hash)->Spend(txin.prevout, txundo.vprevout.back());",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.\n",
    "created_at": "2014-09-23T20:12:34Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17935751",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17935751"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17935751"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17935751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1356,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17942381",
    "pull_request_review_id": null,
    "id": 17942381,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTQyMzgx",
    "diff_hunk": "@@ -313,20 +335,39 @@ class CCoinsViewBacked : public CCoinsView\n public:\n     CCoinsViewBacked(CCoinsView &viewIn);\n     bool GetCoins(const uint256 &txid, CCoins &coins) const;\n-    bool SetCoins(const uint256 &txid, const CCoins &coins);\n     bool HaveCoins(const uint256 &txid) const;\n     uint256 GetBestBlock() const;\n-    bool SetBestBlock(const uint256 &hashBlock);\n     void SetBackend(CCoinsView &viewIn);\n     bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock);\n     bool GetStats(CCoinsStats &stats) const;\n };\n \n \n+class CCoinsViewCache;\n+\n+/** A reference to a mutable cache entry. Encapsulating it allows us to run\n+ *  cleanup code after the modification is finished, and keeping track of\n+ *  concurrent modifications. */\n+class CCoinsModifier\n+{\n+private:\n+    CCoinsViewCache& cache;\n+    CCoinsMap::iterator it;\n+    CCoinsModifier(CCoinsViewCache& cache_, CCoinsMap::iterator it_);\n+\n+public:\n+    CCoins* operator->() { return &it->second.coins; }\n+    CCoins& operator*() { return it->second.coins; }\n+    ~CCoinsModifier();\n+    friend class CCoinsViewCache;\n+};\n+\n /** CCoinsView that adds a memory cache for transactions to another CCoinsView */\n class CCoinsViewCache : public CCoinsViewBacked",
    "path": "src/coins.h",
    "position": 110,
    "original_position": 107,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.\n",
    "created_at": "2014-09-23T21:58:00Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17942381",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17942381"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17942381"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17942381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 366,
    "original_line": 366,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17942448",
    "pull_request_review_id": null,
    "id": 17942448,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTQyNDQ4",
    "diff_hunk": "@@ -0,0 +1,178 @@\n+// Copyright (c) 2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"coins.h\"\n+#include \"random.h\"\n+#include \"uint256.h\"\n+\n+#include <vector>\n+#include <map>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace\n+{\n+class CCoinsViewTest : public CCoinsView\n+{\n+    uint256 hashBestBlock_;\n+    std::map<uint256, CCoins> map_;\n+\n+public:\n+    bool GetCoins(const uint256& txid, CCoins& coins) const\n+    {\n+        std::map<uint256, CCoins>::const_iterator it = map_.find(txid);\n+        if (it == map_.end()) {\n+            return false;\n+        }\n+        coins = it->second;\n+        if (coins.IsPruned() && insecure_rand() % 2 == 0) {\n+            // Randomly return false in case of an empty entry.\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    bool HaveCoins(const uint256& txid) const\n+    {\n+        CCoins coins;\n+        return GetCoins(txid, coins);\n+    }\n+\n+    uint256 GetBestBlock() const { return hashBestBlock_; }\n+\n+    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock)\n+    {\n+        for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); ) {\n+            map_[it->first] = it->second.coins;\n+            if (it->second.coins.IsPruned() && insecure_rand() % 3 == 0) {\n+                // Randomly delete empty entries on write.\n+                map_.erase(it->first);\n+            }\n+            mapCoins.erase(it++);\n+        }\n+        mapCoins.clear();\n+        hashBestBlock_ = hashBlock;\n+        return true;\n+    }\n+\n+    bool GetStats(CCoinsStats& stats) const { return false; }\n+};\n+}\n+\n+BOOST_AUTO_TEST_SUITE(coins_tests)\n+\n+static const unsigned int NUM_SIMULATION_ITERATIONS = 40000;\n+\n+// This is a large randomized insert/remove simulation test on a variable-size\n+// stack of caches on top of CCoinsViewTest.\n+//\n+// It will randomly create/update/delete CCoins entries to a tip of caches, with\n+// txids picked from a limited list of random 256-bit hashes. Occasionally, a\n+// new tip is added to the stack of caches, or the tip is flushed and removed.\n+//\n+// During the process, booleans are kept to make sure that the randomized\n+// operation hits all branches.",
    "path": "src/test/coins_tests.cpp",
    "position": 75,
    "original_position": 75,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Given that we're doing 40000 iterations of it, that should be exceedingly unlikely (plus the random numbers are deterministic, so it would only break after actual code changes).\n",
    "created_at": "2014-09-23T21:59:18Z",
    "updated_at": "2014-09-24T01:19:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17942448",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17942448"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17942448"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17942448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 75,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17946444",
    "pull_request_review_id": null,
    "id": 17946444,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTQ2NDQ0",
    "diff_hunk": "@@ -53,61 +53,67 @@ bool CCoins::Spend(int nPos) {\n \n \n bool CCoinsView::GetCoins(const uint256 &txid, CCoins &coins) const { return false; }\n-bool CCoinsView::SetCoins(const uint256 &txid, const CCoins &coins) { return false; }\n bool CCoinsView::HaveCoins(const uint256 &txid) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(0); }\n-bool CCoinsView::SetBestBlock(const uint256 &hashBlock) { return false; }\n bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n bool CCoinsView::GetStats(CCoinsStats &stats) const { return false; }\n \n \n CCoinsViewBacked::CCoinsViewBacked(CCoinsView &viewIn) : base(&viewIn) { }\n bool CCoinsViewBacked::GetCoins(const uint256 &txid, CCoins &coins) const { return base->GetCoins(txid, coins); }\n-bool CCoinsViewBacked::SetCoins(const uint256 &txid, const CCoins &coins) { return base->SetCoins(txid, coins); }\n bool CCoinsViewBacked::HaveCoins(const uint256 &txid) const { return base->HaveCoins(txid); }\n uint256 CCoinsViewBacked::GetBestBlock() const { return base->GetBestBlock(); }\n-bool CCoinsViewBacked::SetBestBlock(const uint256 &hashBlock) { return base->SetBestBlock(hashBlock); }\n void CCoinsViewBacked::SetBackend(CCoinsView &viewIn) { base = &viewIn; }\n bool CCoinsViewBacked::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return base->BatchWrite(mapCoins, hashBlock); }\n bool CCoinsViewBacked::GetStats(CCoinsStats &stats) const { return base->GetStats(stats); }\n \n CCoinsKeyHasher::CCoinsKeyHasher() : salt(GetRandHash()) {}\n \n-CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hashBlock(0) { }\n+CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hasModifier(false), hashBlock(0) { }\n \n-bool CCoinsViewCache::GetCoins(const uint256 &txid, CCoins &coins) const {\n-    if (cacheCoins.count(txid)) {\n-        coins = cacheCoins[txid];\n-        return true;\n-    }\n-    if (base->GetCoins(txid, coins)) {\n-        cacheCoins[txid] = coins;\n-        return true;\n-    }\n-    return false;\n-}\n-\n-CCoinsMap::iterator CCoinsViewCache::FetchCoins(const uint256 &txid) {\n+CCoinsMap::const_iterator CCoinsViewCache::FetchCoins(const uint256 &txid) const {\n     CCoinsMap::iterator it = cacheCoins.find(txid);\n     if (it != cacheCoins.end())\n         return it;\n     CCoins tmp;\n-    if (!base->GetCoins(txid,tmp))\n+    if (!base->GetCoins(txid, tmp))\n         return cacheCoins.end();\n-    CCoinsMap::iterator ret = cacheCoins.insert(it, std::make_pair(txid, CCoins()));\n-    tmp.swap(ret->second);\n+    CCoinsMap::iterator ret = cacheCoins.insert(std::make_pair(txid, CCoinsCacheEntry())).first;\n+    tmp.swap(ret->second.coins);\n+    if (ret->second.coins.IsPruned()) {\n+        // The parent only has an empty entry for this txid; we can consider our\n+        // version as fresh.\n+        ret->second.flags = CCoinsCacheEntry::FRESH;\n+    }\n     return ret;\n }\n \n-CCoinsMap::const_iterator CCoinsViewCache::FetchCoins(const uint256 &txid) const {\n-    /* Avoid redundant implementation with the const-cast.  */\n-    return const_cast<CCoinsViewCache*>(this)->FetchCoins(txid);\n+bool CCoinsViewCache::GetCoins(const uint256 &txid, CCoins &coins) const {\n+    CCoinsMap::const_iterator it = FetchCoins(txid);\n+    if (it != cacheCoins.end()) {\n+        coins = it->second.coins;\n+        return true;\n+    }\n+    return false;\n }\n \n-CCoins &CCoinsViewCache::GetCoins(const uint256 &txid) {\n-    CCoinsMap::iterator it = FetchCoins(txid);\n-    assert(it != cacheCoins.end());\n-    return it->second;\n+CCoinsModifier CCoinsViewCache::ModifyCoins(const uint256 &txid) {",
    "path": "src/coins.cpp",
    "position": 80,
    "original_position": 76,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This really complicates things. We're in many cases already treating no-entry as empty-CCoins, and have had problems with incorrectly treating differences between them (on a reorg we may replace added entries with empties, for example).\n\nPerhaps we already have problems in this space; I'm more in favor of an interface that explicitly treats them identically for this reason.\n\nAre there any use sites where you think we reduced sanity checking?\n",
    "created_at": "2014-09-23T23:38:43Z",
    "updated_at": "2014-09-24T01:35:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17946444",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17946444"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17946444"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17946444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 105,
    "original_line": 100,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17950444",
    "pull_request_review_id": null,
    "id": 17950444,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTUwNDQ0",
    "diff_hunk": "@@ -0,0 +1,178 @@\n+// Copyright (c) 2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"coins.h\"\n+#include \"random.h\"\n+#include \"uint256.h\"\n+\n+#include <vector>\n+#include <map>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace\n+{\n+class CCoinsViewTest : public CCoinsView\n+{\n+    uint256 hashBestBlock_;\n+    std::map<uint256, CCoins> map_;\n+\n+public:\n+    bool GetCoins(const uint256& txid, CCoins& coins) const\n+    {\n+        std::map<uint256, CCoins>::const_iterator it = map_.find(txid);\n+        if (it == map_.end()) {\n+            return false;\n+        }\n+        coins = it->second;\n+        if (coins.IsPruned() && insecure_rand() % 2 == 0) {\n+            // Randomly return false in case of an empty entry.\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    bool HaveCoins(const uint256& txid) const\n+    {\n+        CCoins coins;\n+        return GetCoins(txid, coins);\n+    }\n+\n+    uint256 GetBestBlock() const { return hashBestBlock_; }\n+\n+    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock)\n+    {\n+        for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); ) {\n+            map_[it->first] = it->second.coins;\n+            if (it->second.coins.IsPruned() && insecure_rand() % 3 == 0) {\n+                // Randomly delete empty entries on write.\n+                map_.erase(it->first);\n+            }\n+            mapCoins.erase(it++);\n+        }\n+        mapCoins.clear();\n+        hashBestBlock_ = hashBlock;\n+        return true;\n+    }\n+\n+    bool GetStats(CCoinsStats& stats) const { return false; }\n+};\n+}\n+\n+BOOST_AUTO_TEST_SUITE(coins_tests)\n+\n+static const unsigned int NUM_SIMULATION_ITERATIONS = 40000;\n+\n+// This is a large randomized insert/remove simulation test on a variable-size\n+// stack of caches on top of CCoinsViewTest.\n+//\n+// It will randomly create/update/delete CCoins entries to a tip of caches, with\n+// txids picked from a limited list of random 256-bit hashes. Occasionally, a\n+// new tip is added to the stack of caches, or the tip is flushed and removed.\n+//\n+// During the process, booleans are kept to make sure that the randomized\n+// operation hits all branches.",
    "path": "src/test/coins_tests.cpp",
    "position": 75,
    "original_position": 75,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just a 1000 iterations is enough to trigger all branches, by the way.\n",
    "created_at": "2014-09-24T01:51:10Z",
    "updated_at": "2014-09-24T01:51:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17950444",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17950444"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17950444"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17950444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 75,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17961163",
    "pull_request_review_id": null,
    "id": 17961163,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTYxMTYz",
    "diff_hunk": "@@ -0,0 +1,178 @@\n+// Copyright (c) 2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"coins.h\"\n+#include \"random.h\"\n+#include \"uint256.h\"\n+\n+#include <vector>\n+#include <map>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace\n+{\n+class CCoinsViewTest : public CCoinsView\n+{\n+    uint256 hashBestBlock_;\n+    std::map<uint256, CCoins> map_;\n+\n+public:\n+    bool GetCoins(const uint256& txid, CCoins& coins) const\n+    {\n+        std::map<uint256, CCoins>::const_iterator it = map_.find(txid);\n+        if (it == map_.end()) {\n+            return false;\n+        }\n+        coins = it->second;\n+        if (coins.IsPruned() && insecure_rand() % 2 == 0) {\n+            // Randomly return false in case of an empty entry.\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    bool HaveCoins(const uint256& txid) const\n+    {\n+        CCoins coins;\n+        return GetCoins(txid, coins);\n+    }\n+\n+    uint256 GetBestBlock() const { return hashBestBlock_; }\n+\n+    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock)\n+    {\n+        for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); ) {\n+            map_[it->first] = it->second.coins;\n+            if (it->second.coins.IsPruned() && insecure_rand() % 3 == 0) {\n+                // Randomly delete empty entries on write.\n+                map_.erase(it->first);\n+            }\n+            mapCoins.erase(it++);\n+        }\n+        mapCoins.clear();\n+        hashBestBlock_ = hashBlock;\n+        return true;\n+    }\n+\n+    bool GetStats(CCoinsStats& stats) const { return false; }\n+};\n+}\n+\n+BOOST_AUTO_TEST_SUITE(coins_tests)\n+\n+static const unsigned int NUM_SIMULATION_ITERATIONS = 40000;\n+\n+// This is a large randomized insert/remove simulation test on a variable-size\n+// stack of caches on top of CCoinsViewTest.\n+//\n+// It will randomly create/update/delete CCoins entries to a tip of caches, with\n+// txids picked from a limited list of random 256-bit hashes. Occasionally, a\n+// new tip is added to the stack of caches, or the tip is flushed and removed.\n+//\n+// During the process, booleans are kept to make sure that the randomized\n+// operation hits all branches.",
    "path": "src/test/coins_tests.cpp",
    "position": 75,
    "original_position": 75,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "3067f33ec986eeb2b6fd7014cae0ad98be931bfe",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK - good idea to make it determinisic, so at least in the case that it fails it will fail every time.\n",
    "created_at": "2014-09-24T09:13:23Z",
    "updated_at": "2014-09-24T09:13:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17961163",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17961163"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r17961163"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/17961163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 75,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21580505",
    "pull_request_review_id": null,
    "id": 21580505,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTgwNTA1",
    "diff_hunk": "@@ -1804,10 +1797,10 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     nTimeBestReceived = GetTime();\n     mempool.AddTransactionsUpdated(1);\n \n-    LogPrintf(\"UpdateTip: new best=%s  height=%d  log2_work=%.8g  tx=%lu  date=%s progress=%f\\n\",\n+    LogPrintf(\"UpdateTip: new best=%s  height=%d  log2_work=%.8g  tx=%lu  date=%s progress=%f  cache=%u\\n\",",
    "path": "src/main.cpp",
    "position": 126,
    "original_position": 126,
    "commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "original_commit_id": "7c70438dc67547e83953ba0343a071fae304ce65",
    "user": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How useful is this extra debug info? Can it be made optional perhaps?\n",
    "created_at": "2014-12-10T02:22:00Z",
    "updated_at": "2014-12-10T02:22:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r21580505",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21580505"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/4834#discussion_r21580505"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/4834"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21580505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1800,
    "original_line": 1800,
    "side": "RIGHT"
  }
]