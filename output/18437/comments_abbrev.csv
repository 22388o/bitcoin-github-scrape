vasild,2020-03-26 10:19:39,"To verify that this works as intended:\n\n1. Check if you have `posix_fallocate()`\n\n2. `./configure ... |grep posix_fallocate` - the result should coincide with 1.\n\n3. Put something like this in `src/util/system.cpp` and try to recompile:\n\n```c\n#if defined(HAVE_POSIX_FALLOCATE)\n#error posix_fallocate is present\n#else\n#error posix_fallocate is not present\n#endif\n```\n\nT",https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-604345631,604345631,
fanquake,2020-03-26 10:43:44,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-604356909,604356909,
laanwj,2020-03-26 11:47:15,"ACK 61d4bee72f3800edd00ec565313c820b536954ec\n\nGood catch. Generally spoken the detection of specific features is preferable to OS-specific paths. As it is a POSIX function I suppose we can assume that the functionality and parameters are the same over all platforms that have it?",https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-604384911,604384911,
vasild,2020-03-26 15:00:07,"Yes, [Linux](https://linux.die.net/man/3/posix_fallocate), [FreeBSD](https://www.freebsd.org/cgi/man.cgi?query=posix_fallocate) and [NetBSD](https://netbsd.gw.com/cgi-bin/man-cgi?posix_fallocate++NetBSD-current) have `posix_fallocate()` (maybe others too). The types and semantics of the arguments and return value are the same on all.\n\nI am a bit surprised that MacOS and OpenBSD do not have it.",https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-604480025,604480025,
DrahtBot,2020-03-26 15:38:48,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-604502115,604502115,
practicalswift,2020-03-26 17:03:01,"Concept ACK\n\nThanks for all nice contributions lately @vasild. Nice to have you as a recurring contributor!",https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-604550660,604550660,
Empact,2020-03-26 18:06:21,"Concept ACK\n\nI think you may also need to adjust `_POSIX_C_SOURCE` in your autoconf test - see:\nhttps://github.com/bitcoin/bitcoin/blob/694f4cbd7853ffeb7b4576d42368920b0ef79b01/src/util/system.cpp#L20-L29\n\nContext:\nhttps://www.gnu.org/software/libc/manual/html_node/Feature-Test-Macros.html#index-_005fPOSIX_005fC_005fSOURCE\nhttp://man7.org/linux/man-pages/man3/posix_fallocate.3.html#C",https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-604588357,604588357,
vasild,2020-03-27 11:34:07,"@Empact Right, good catch!\n\nThe patch had a deficiency that if run on a system that does not provide `posix_fallocate()` by default but would make it available if the user explicitly asks for it (by defining `_POSIX_C_SOURCE` to `200112`), then on such system the configure check would conclude that the function is not present and so it would not be used in the source code (even though it would",https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-604952719,604952719,
Empact,2020-03-28 19:53:40,ACK https://github.com/bitcoin/bitcoin/pull/18437/commits/14f11083e4ed733520872fb6da3fe59182745db9,https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-605510750,605510750,
laanwj,2020-04-30 08:44:59,"I dislike the duplication of `#ifdef` logic, but okay, as long as it's commented…\n\nACK 182dbdf0f4b6e6484b0d4588aaefacc75862a99c",https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-621699882,621699882,
vasild,2020-04-30 15:34:46,"> I dislike the duplication of `#ifdef` logic, but okay, as long as it's commented…\n\nI did consider putting this:\n\n```cpp\n#ifdef __linux__\n\n#ifdef _POSIX_C_SOURCE\n#undef _POSIX_C_SOURCE\n#endif\n\n#define _POSIX_C_SOURCE 200112L\n\n#endif // __linux__\n```\nin a separate header file and then including that header file from `configure.ac` and from `system.cpp`, but decided it",https://github.com/bitcoin/bitcoin/pull/18437#issuecomment-621930445,621930445,
laanwj,2020-04-01 12:31:04,"Not sure this is correct. Is POSIX_C_SOURCE a Linux or a general GCC thing?\nI don't think it hurts to leave out the `#ifdef __linux__` here.",https://github.com/bitcoin/bitcoin/pull/18437#discussion_r401577577,401577577,configure.ac
vasild,2020-04-01 13:36:57,"`_POSIX_C_SOURCE` is not Linux or GCC specific. However, only the [Linux man page](https://linux.die.net/man/3/posix_fallocate) for `posix_fallocate()` mentions it as a requirement. [FreeBSD](https://www.freebsd.org/cgi/man.cgi?query=posix_fallocate) and [NetBSD](https://netbsd.gw.com/cgi-bin/man-cgi?posix_fallocate++NetBSD-current) man pages don't, implying that the function is available without ",https://github.com/bitcoin/bitcoin/pull/18437#discussion_r401620563,401620563,configure.ac
Empact,2020-04-11 21:28:22,Maybe worth adding comments cross-referencing the identical setups?,https://github.com/bitcoin/bitcoin/pull/18437#discussion_r407112861,407112861,configure.ac
vasild,2020-04-14 07:51:42,[Done](https://github.com/bitcoin/bitcoin/compare/14f11083e4ed733520872fb6da3fe59182745db9..182dbdf0f4b6e6484b0d4588aaefacc75862a99c),https://github.com/bitcoin/bitcoin/pull/18437#discussion_r407935072,407935072,configure.ac
