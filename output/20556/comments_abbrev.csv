DrahtBot,2020-12-03 13:30:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21426 (rpc: remove scantxoutset EXPERIMENTAL warning by jonatack)\n* #21401 (Refactor versionbits deployments to avoid po",https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-737995050,737995050,
MarcoFalke,2020-12-04 16:39:45,This can be discussed in #18476 further. The goal of this pull is to simply document the return values as they are and always have been.,https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-738885258,738885258,
jonasschnelli,2020-12-07 08:09:02,"Looks good.\nWhat is the rational in renaming STR_AMOUNT to NUM_AMOUNT? It creates a fairly large diff and IMO it still is represented as a string on the JSON layer.",https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-739748924,739748924,
MarcoFalke,2020-12-07 08:18:45,"The (scripted) diff is only 50 lines. If there are any conflicts, it should be trivial to resolve. That the internal representation is a string could be a coincidence. The type is really VNUM (numeric) and not VSTR (string).\n\nI checked that the only conflict due to this scripted diff is #19002.",https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-739754327,739754327,
laanwj,2020-12-18 13:06:15,"Just an aside: there used to be talk of, at some point, of making `ValueFromAmount` return a decimal string instead of a number, or at least having an option to do so, because it's easier to parse exactly in some languages that interpret javascript numbers as floating point number (which are unwise to use for monetary amounts). See e.g. #3759.\n\nThis bled out but seeing them as separate types a",https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-748074208,748074208,
MarcoFalke,2020-12-21 14:11:25,"Ok, dropped the scripted diff because it seemed controversial",https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-748993196,748993196,
MarcoFalke,2021-01-29 09:12:08,Rebased,https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-769679933,769679933,
MarcoFalke,2021-02-25 07:22:37,Force pushed to address feedback. Should be easy to re-ACK with git range-diff,https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-785678406,785678406,
fjahr,2021-03-14 20:55:10,"utACK fa7ff0790ec21d187f1a32310918b0c8d66e5266\n\nReviewed changes ignoring whitespace.",https://github.com/bitcoin/bitcoin/pull/20556#issuecomment-798978156,798978156,
amitiuttarwar,2021-02-24 21:58:26,"I'd find it clearer to say: \n\n```suggestion\n            RPCResult{""If the UTXO was not found"", RPCResult::Type::NONE, """", """"},\n```",https://github.com/bitcoin/bitcoin/pull/20556#discussion_r582334726,582334726,src/rpc/blockchain.cpp
amitiuttarwar,2021-02-24 22:11:59,"as an RPC user, I'm confused about how to interpret this output.. when the mode is `proposal`, there might be a string returned (of what?) or a json null object? what conditions lead to one or the other? \n\ndon't need to go into detail, but since the goal here is to document return types & help usability, I think this is worth clarifying.",https://github.com/bitcoin/bitcoin/pull/20556#discussion_r582342097,582342097,src/rpc/mining.cpp
MarcoFalke,2021-02-25 07:21:09,"Thanks, fixed",https://github.com/bitcoin/bitcoin/pull/20556#discussion_r582596426,582596426,src/rpc/mining.cpp
amitiuttarwar,2021-02-25 19:57:52,"tangential since this PR just aims to document return types, but I think a `data` param is missing from these help docs? ",https://github.com/bitcoin/bitcoin/pull/20556#discussion_r583124915,583124915,src/rpc/mining.cpp
MarcoFalke,2021-02-26 09:04:51,"I think this is intentionally omitted (via template_request, which is described in the BIPs)",https://github.com/bitcoin/bitcoin/pull/20556#discussion_r583485809,583485809,src/rpc/mining.cpp
