[
  {
    "sha": "c70bbb6496bff25fa138e12a7907dbc388683e81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzBiYmI2NDk2YmZmMjVmYTEzOGUxMmE3OTA3ZGJjMzg4NjgzZTgx",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-07-23T22:04:55Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-07-23T22:09:28Z"
      },
      "message": "wallet: Avoid duplicate checks on signing failure",
      "tree": {
        "sha": "f3846503a8d5047ae1eb07f179175b72f18e2b69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3846503a8d5047ae1eb07f179175b72f18e2b69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c70bbb6496bff25fa138e12a7907dbc388683e81",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c70bbb6496bff25fa138e12a7907dbc388683e81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c70bbb6496bff25fa138e12a7907dbc388683e81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c70bbb6496bff25fa138e12a7907dbc388683e81/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4cfa6d01900aa4c4696d6e1eac65e1b42f6b762",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4cfa6d01900aa4c4696d6e1eac65e1b42f6b762",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4cfa6d01900aa4c4696d6e1eac65e1b42f6b762"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 4,
      "deletions": 17
    },
    "files": [
      {
        "sha": "8a2ffde3cd1bcc9fdde89fecd76b57d565cca30e",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c70bbb6496bff25fa138e12a7907dbc388683e81/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c70bbb6496bff25fa138e12a7907dbc388683e81/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=c70bbb6496bff25fa138e12a7907dbc388683e81",
        "patch": "@@ -485,6 +485,10 @@ bool SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore,\n         const CAmount& amount = coin->second.out.nValue;\n \n         SignatureData sigdata = DataFromTransaction(mtx, i, coin->second.out);\n+        if (!sigdata.complete) {\n+            input_errors[i] = \"Unable to sign input, missing keys\";\n+        }\n+\n         // Only sign SIGHASH_SINGLE if there's a corresponding output:\n         if (!fHashSingle || (i < mtx.vout.size())) {\n             ProduceSignature(*keystore, MutableTransactionSignatureCreator(&mtx, i, amount, nHashType), prevPubKey, sigdata);"
      },
      {
        "sha": "54f9ff7a1fb7634f1f954cc85a52673c63d8c59f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c70bbb6496bff25fa138e12a7907dbc388683e81/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c70bbb6496bff25fa138e12a7907dbc388683e81/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c70bbb6496bff25fa138e12a7907dbc388683e81",
        "patch": "@@ -2486,23 +2486,6 @@ bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint,\n     }\n \n     // At this point, one input was not fully signed otherwise we would have exited already\n-    // Find that input and figure out what went wrong.\n-    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-        // Get the prevout\n-        CTxIn& txin = tx.vin[i];\n-        auto coin = coins.find(txin.prevout);\n-        if (coin == coins.end() || coin->second.IsSpent()) {\n-            input_errors[i] = \"Input not found or already spent\";\n-            continue;\n-        }\n-\n-        // Check if this input is complete\n-        SignatureData sigdata = DataFromTransaction(tx, i, coin->second.out);\n-        if (!sigdata.complete) {\n-            input_errors[i] = \"Unable to sign input, missing keys\";\n-            continue;\n-        }\n-    }\n     return false;\n }\n "
      }
    ]
  }
]