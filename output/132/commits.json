[
  {
    "sha": "79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWU1ZmEwZjQ1YjUxZjc3MjA0YjkxZWU4ZWI1NzEwYmRiMDhmZTI2",
    "commit": {
      "author": {
        "name": "tcatm",
        "email": "tcatm@gawab.com",
        "date": "2011-03-23T16:52:06Z"
      },
      "committer": {
        "name": "tcatm",
        "email": "tcatm@gawab.com",
        "date": "2011-03-23T16:52:06Z"
      },
      "message": "remove bitcoin miner",
      "tree": {
        "sha": "ea555a868592653644eae3d28cb203f6362c061a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea555a868592653644eae3d28cb203f6362c061a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1c09a4adb20aed76dd5f07051c605ffd56a093d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c09a4adb20aed76dd5f07051c605ffd56a093d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c09a4adb20aed76dd5f07051c605ffd56a093d6"
      }
    ],
    "stats": {
      "total": 1217,
      "additions": 29,
      "deletions": 1188
    },
    "files": [
      {
        "sha": "7ece96c6078690c7ece6810c9e458fa51eef6c43",
        "filename": "db.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/db.cpp?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -778,14 +778,9 @@ bool CWalletDB::LoadWallet()\n                 string strKey;\n                 ssKey >> strKey;\n \n-                // Menu state\n-                if (strKey == \"fGenerateBitcoins\")  ssValue >> fGenerateBitcoins;\n-\n                 // Options\n                 if (strKey == \"nTransactionFee\")    ssValue >> nTransactionFee;\n                 if (strKey == \"addrIncoming\")       ssValue >> addrIncoming;\n-                if (strKey == \"fLimitProcessors\")   ssValue >> fLimitProcessors;\n-                if (strKey == \"nLimitProcessors\")   ssValue >> nLimitProcessors;\n                 if (strKey == \"fMinimizeToTray\")    ssValue >> fMinimizeToTray;\n                 if (strKey == \"fMinimizeOnClose\")   ssValue >> fMinimizeOnClose;\n                 if (strKey == \"fUseProxy\")          ssValue >> fUseProxy;\n@@ -800,7 +795,6 @@ bool CWalletDB::LoadWallet()\n         WriteTx(hash, mapWallet[hash]);\n \n     printf(\"nFileVersion = %d\\n\", nFileVersion);\n-    printf(\"fGenerateBitcoins = %d\\n\", fGenerateBitcoins);\n     printf(\"nTransactionFee = %\"PRI64d\"\\n\", nTransactionFee);\n     printf(\"addrIncoming = %s\\n\", addrIncoming.ToString().c_str());\n     printf(\"fMinimizeToTray = %d\\n\", fMinimizeToTray);"
      },
      {
        "sha": "d6901ac8e5c6f02635de25aa6862d5eaa53b69d9",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -409,8 +409,6 @@ bool AppInit2(int argc, char* argv[])\n         return false;\n     }\n \n-    fGenerateBitcoins = GetBoolArg(\"-gen\");\n-\n     if (mapArgs.count(\"-proxy\"))\n     {\n         fUseProxy = true;"
      },
      {
        "sha": "662bbf238d595154e9928bab1769c63d72d96c28",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 308,
        "changes": 308,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -54,15 +54,9 @@ CCriticalSection cs_mapAddressBook;\n \n vector<unsigned char> vchDefaultKey;\n \n-double dHashesPerSec;\n-int64 nHPSTimerStart;\n-\n // Settings\n-int fGenerateBitcoins = false;\n int64 nTransactionFee = 0;\n CAddress addrIncoming;\n-int fLimitProcessors = false;\n-int nLimitProcessors = 1;\n int fMinimizeToTray = true;\n int fMinimizeOnClose = true;\n \n@@ -3102,121 +3096,6 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n // BitcoinMiner\n //\n \n-void GenerateBitcoins(bool fGenerate)\n-{\n-    if (fGenerateBitcoins != fGenerate)\n-    {\n-        fGenerateBitcoins = fGenerate;\n-        CWalletDB().WriteSetting(\"fGenerateBitcoins\", fGenerateBitcoins);\n-        MainFrameRepaint();\n-    }\n-    if (fGenerateBitcoins)\n-    {\n-        int nProcessors = boost::thread::hardware_concurrency();\n-        printf(\"%d processors\\n\", nProcessors);\n-        if (nProcessors < 1)\n-            nProcessors = 1;\n-        if (fLimitProcessors && nProcessors > nLimitProcessors)\n-            nProcessors = nLimitProcessors;\n-        int nAddThreads = nProcessors - vnThreadsRunning[3];\n-        printf(\"Starting %d BitcoinMiner threads\\n\", nAddThreads);\n-        for (int i = 0; i < nAddThreads; i++)\n-        {\n-            if (!CreateThread(ThreadBitcoinMiner, NULL))\n-                printf(\"Error: CreateThread(ThreadBitcoinMiner) failed\\n\");\n-            Sleep(10);\n-        }\n-    }\n-}\n-\n-void ThreadBitcoinMiner(void* parg)\n-{\n-    try\n-    {\n-        vnThreadsRunning[3]++;\n-        BitcoinMiner();\n-        vnThreadsRunning[3]--;\n-    }\n-    catch (std::exception& e) {\n-        vnThreadsRunning[3]--;\n-        PrintException(&e, \"ThreadBitcoinMiner()\");\n-    } catch (...) {\n-        vnThreadsRunning[3]--;\n-        PrintException(NULL, \"ThreadBitcoinMiner()\");\n-    }\n-    UIThreadCall(boost::bind(CalledSetStatusBar, \"\", 0));\n-    nHPSTimerStart = 0;\n-    if (vnThreadsRunning[3] == 0)\n-        dHashesPerSec = 0;\n-    printf(\"ThreadBitcoinMiner exiting, %d threads remaining\\n\", vnThreadsRunning[3]);\n-}\n-\n-#if defined(__GNUC__) && defined(CRYPTOPP_X86_ASM_AVAILABLE)\n-void CallCPUID(int in, int& aret, int& cret)\n-{\n-    int a, c;\n-    asm (\n-        \"mov %2, %%eax; \" // in into eax\n-        \"cpuid;\"\n-        \"mov %%eax, %0;\" // eax into a\n-        \"mov %%ecx, %1;\" // ecx into c\n-        :\"=r\"(a),\"=r\"(c) /* output */\n-        :\"r\"(in) /* input */\n-        :\"%eax\",\"%ebx\",\"%ecx\",\"%edx\" /* clobbered register */\n-    );\n-    aret = a;\n-    cret = c;\n-}\n-\n-bool Detect128BitSSE2()\n-{\n-    int a, c, nBrand;\n-    CallCPUID(0, a, nBrand);\n-    bool fIntel = (nBrand == 0x6c65746e); // ntel\n-    bool fAMD = (nBrand == 0x444d4163); // cAMD\n-\n-    struct\n-    {\n-        unsigned int nStepping : 4;\n-        unsigned int nModel : 4;\n-        unsigned int nFamily : 4;\n-        unsigned int nProcessorType : 2;\n-        unsigned int nUnused : 2;\n-        unsigned int nExtendedModel : 4;\n-        unsigned int nExtendedFamily : 8;\n-    }\n-    cpu;\n-    CallCPUID(1, a, c);\n-    memcpy(&cpu, &a, sizeof(cpu));\n-    int nFamily = cpu.nExtendedFamily + cpu.nFamily;\n-    int nModel = cpu.nExtendedModel*16 + cpu.nModel;\n-\n-    // We need Intel Nehalem or AMD K10 or better for 128bit SSE2\n-    // Nehalem = i3/i5/i7 and some Xeon\n-    // K10 = Opterons with 4 or more cores, Phenom, Phenom II, Athlon II\n-    //  Intel Core i5  family 6, model 26 or 30\n-    //  Intel Core i7  family 6, model 26 or 30\n-    //  Intel Core i3  family 6, model 37\n-    //  AMD Phenom    family 16, model 10\n-    bool fUseSSE2 = ((fIntel && nFamily * 10000 + nModel >=  60026) ||\n-                     (fAMD   && nFamily * 10000 + nModel >= 160010));\n-\n-    // AMD reports a lower model number in 64-bit mode\n-    if (fAMD && sizeof(void*) > 4 && nFamily * 10000 + nModel >= 160000)\n-        fUseSSE2 = true;\n-\n-    static bool fPrinted;\n-    if (!fPrinted)\n-    {\n-        fPrinted = true;\n-        printf(\"CPUID %08x family %d, model %d, stepping %d, fUseSSE2=%d\\n\", nBrand, nFamily, nModel, cpu.nStepping, fUseSSE2);\n-    }\n-    return fUseSSE2;\n-}\n-#else\n-bool Detect128BitSSE2() { return false; }\n-#endif\n-\n int FormatHashBlocks(void* pbuffer, unsigned int len)\n {\n     unsigned char* pdata = (unsigned char*)pbuffer;\n@@ -3243,41 +3122,6 @@ inline void SHA256Transform(void* pstate, void* pinput, const void* pinit)\n     CryptoPP::SHA256::Transform((CryptoPP::word32*)pstate, (CryptoPP::word32*)pinput);\n }\n \n-//\n-// ScanHash scans nonces looking for a hash with at least some zero bits.\n-// It operates on big endian data.  Caller does the byte reversing.\n-// All input buffers are 16-byte aligned.  nNonce is usually preserved\n-// between calls, but periodically or if nNonce is 0xffff0000 or above,\n-// the block is rebuilt and nNonce starts over at zero.\n-//\n-unsigned int ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)\n-{\n-    unsigned int& nNonce = *(unsigned int*)(pdata + 12);\n-    for (;;)\n-    {\n-        // Crypto++ SHA-256\n-        // Hash pdata using pmidstate as the starting state into\n-        // preformatted buffer phash1, then hash phash1 into phash\n-        nNonce++;\n-        SHA256Transform(phash1, pdata, pmidstate);\n-        SHA256Transform(phash, phash1, pSHA256InitState);\n-\n-        // Return the nonce if the hash has at least some zero bits,\n-        // caller will check if it has enough to reach the target\n-        if (((unsigned short*)phash)[14] == 0)\n-            return nNonce;\n-\n-        // If nothing found after trying for a while, return -1\n-        if ((nNonce & 0xffff) == 0)\n-        {\n-            nHashesDone = 0xffff+1;\n-            return -1;\n-        }\n-    }\n-}\n-\n-extern unsigned int ScanHash_4WaySSE2(char* pmidstate, char* pblock, char* phash1, char* phash, unsigned int& nHashesDone);\n-\n \n \n class COrphan\n@@ -3548,158 +3392,6 @@ bool CheckWork(CBlock* pblock, CReserveKey& reservekey)\n }\n \n \n-void BitcoinMiner()\n-{\n-    printf(\"BitcoinMiner started\\n\");\n-    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-    bool f4WaySSE2 = Detect128BitSSE2();\n-    if (mapArgs.count(\"-4way\"))\n-        f4WaySSE2 = GetBoolArg(\"-4way\");\n-\n-    // Each thread has its own key and counter\n-    CReserveKey reservekey;\n-    unsigned int nExtraNonce = 0;\n-    int64 nPrevTime = 0;\n-\n-    while (fGenerateBitcoins)\n-    {\n-        if (AffinityBugWorkaround(ThreadBitcoinMiner))\n-            return;\n-        if (fShutdown)\n-            return;\n-        while (vNodes.empty() || IsInitialBlockDownload())\n-        {\n-            Sleep(1000);\n-            if (fShutdown)\n-                return;\n-            if (!fGenerateBitcoins)\n-                return;\n-        }\n-\n-\n-        //\n-        // Create new block\n-        //\n-        unsigned int nTransactionsUpdatedLast = nTransactionsUpdated;\n-        CBlockIndex* pindexPrev = pindexBest;\n-\n-        auto_ptr<CBlock> pblock(CreateNewBlock(reservekey));\n-        if (!pblock.get())\n-            return;\n-        IncrementExtraNonce(pblock.get(), pindexPrev, nExtraNonce, nPrevTime);\n-\n-        printf(\"Running BitcoinMiner with %d transactions in block\\n\", pblock->vtx.size());\n-\n-\n-        //\n-        // Prebuild hash buffers\n-        //\n-        char pmidstatebuf[32+16]; char* pmidstate = alignup<16>(pmidstatebuf);\n-        char pdatabuf[128+16];    char* pdata     = alignup<16>(pdatabuf);\n-        char phash1buf[64+16];    char* phash1    = alignup<16>(phash1buf);\n-\n-        FormatHashBuffers(pblock.get(), pmidstate, pdata, phash1);\n-\n-        unsigned int& nBlockTime = *(unsigned int*)(pdata + 64 + 4);\n-        unsigned int& nBlockNonce = *(unsigned int*)(pdata + 64 + 12);\n-\n-\n-        //\n-        // Search\n-        //\n-        int64 nStart = GetTime();\n-        uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n-        uint256 hashbuf[2];\n-        uint256& hash = *alignup<16>(hashbuf);\n-        loop\n-        {\n-            unsigned int nHashesDone = 0;\n-            unsigned int nNonceFound;\n-\n-#ifdef FOURWAYSSE2\n-            if (f4WaySSE2)\n-                // tcatm's 4-way 128-bit SSE2 SHA-256\n-                nNonceFound = ScanHash_4WaySSE2(pmidstate, pdata + 64, phash1, (char*)&hash, nHashesDone);\n-            else\n-#endif\n-                // Crypto++ SHA-256\n-                nNonceFound = ScanHash_CryptoPP(pmidstate, pdata + 64, phash1, (char*)&hash, nHashesDone);\n-\n-            // Check if something found\n-            if (nNonceFound != -1)\n-            {\n-                for (int i = 0; i < sizeof(hash)/4; i++)\n-                    ((unsigned int*)&hash)[i] = ByteReverse(((unsigned int*)&hash)[i]);\n-\n-                if (hash <= hashTarget)\n-                {\n-                    // Found a solution\n-                    pblock->nNonce = ByteReverse(nNonceFound);\n-                    assert(hash == pblock->GetHash());\n-\n-                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                    CheckWork(pblock.get(), reservekey);\n-                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-                    break;\n-                }\n-            }\n-\n-            // Meter hashes/sec\n-            static int64 nHashCounter;\n-            if (nHPSTimerStart == 0)\n-            {\n-                nHPSTimerStart = GetTimeMillis();\n-                nHashCounter = 0;\n-            }\n-            else\n-                nHashCounter += nHashesDone;\n-            if (GetTimeMillis() - nHPSTimerStart > 4000)\n-            {\n-                static CCriticalSection cs;\n-                CRITICAL_BLOCK(cs)\n-                {\n-                    if (GetTimeMillis() - nHPSTimerStart > 4000)\n-                    {\n-                        dHashesPerSec = 1000.0 * nHashCounter / (GetTimeMillis() - nHPSTimerStart);\n-                        nHPSTimerStart = GetTimeMillis();\n-                        nHashCounter = 0;\n-                        string strStatus = strprintf(\"    %.0f khash/s\", dHashesPerSec/1000.0);\n-                        UIThreadCall(boost::bind(CalledSetStatusBar, strStatus, 0));\n-                        static int64 nLogTime;\n-                        if (GetTime() - nLogTime > 30 * 60)\n-                        {\n-                            nLogTime = GetTime();\n-                            printf(\"%s \", DateTimeStrFormat(\"%x %H:%M\", GetTime()).c_str());\n-                            printf(\"hashmeter %3d CPUs %6.0f khash/s\\n\", vnThreadsRunning[3], dHashesPerSec/1000.0);\n-                        }\n-                    }\n-                }\n-            }\n-\n-            // Check for stop or if block needs to be rebuilt\n-            if (fShutdown)\n-                return;\n-            if (!fGenerateBitcoins)\n-                return;\n-            if (fLimitProcessors && vnThreadsRunning[3] > nLimitProcessors)\n-                return;\n-            if (vNodes.empty())\n-                break;\n-            if (nBlockNonce >= 0xffff0000)\n-                break;\n-            if (nTransactionsUpdated != nTransactionsUpdatedLast && GetTime() - nStart > 60)\n-                break;\n-            if (pindexPrev != pindexBest)\n-                break;\n-\n-            // Update nTime every few seconds\n-            pblock->nTime = max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n-            nBlockTime = ByteReverse(pblock->nTime);\n-        }\n-    }\n-}\n-\n-\n \n \n "
      },
      {
        "sha": "8543bd94731017c187af3c0807c02f341856c98b",
        "filename": "main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -44,15 +44,10 @@ extern CCriticalSection cs_mapRequestCount;\n extern map<string, string> mapAddressBook;\n extern CCriticalSection cs_mapAddressBook;\n extern vector<unsigned char> vchDefaultKey;\n-extern double dHashesPerSec;\n-extern int64 nHPSTimerStart;\n \n // Settings\n-extern int fGenerateBitcoins;\n extern int64 nTransactionFee;\n extern CAddress addrIncoming;\n-extern int fLimitProcessors;\n-extern int nLimitProcessors;\n extern int fMinimizeToTray;\n extern int fMinimizeOnClose;\n \n@@ -83,7 +78,6 @@ bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n bool BroadcastTransaction(CWalletTx& wtxNew);\n string SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n string SendMoneyToBitcoinAddress(string strAddress, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n-void GenerateBitcoins(bool fGenerate);\n void ThreadBitcoinMiner(void* parg);\n CBlock* CreateNewBlock(CReserveKey& reservekey);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce, int64& nPrevTime);"
      },
      {
        "sha": "e1f00363bc502a1521747d0dde27f19ae2f7c51b",
        "filename": "makefile.unix",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/makefile.unix?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -51,17 +51,14 @@ obj/%.o: %.cpp $(HEADERS)\n cryptopp/obj/%.o: cryptopp/%.cpp\n \t$(CXX) -c $(CXXFLAGS) -O3 -o $@ $<\n \n-obj/sha256.o: sha256.cpp\n-\t$(CXX) -c $(CXXFLAGS) -msse2 -O3 -march=amdfam10 -o $@ $<\n-\n-bitcoin: $(OBJS) obj/ui.o obj/uibase.o obj/sha256.o\n+bitcoin: $(OBJS) obj/ui.o obj/uibase.o\n \t$(CXX) $(CXXFLAGS) -o $@ $^ $(WXLIBS) $(LIBS)\n \n \n obj/nogui/%.o: %.cpp $(HEADERS)\n \t$(CXX) -c $(CXXFLAGS) -o $@ $<\n \n-bitcoind: $(OBJS:obj/%=obj/nogui/%) obj/sha256.o\n+bitcoind: $(OBJS:obj/%=obj/nogui/%)\n \t$(CXX) $(CXXFLAGS) -o $@ $^ $(LIBS)\n \n "
      },
      {
        "sha": "d8317eba4a60a2d79c29c4362d8b47828c7ecd5a",
        "filename": "net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.cpp?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -1423,9 +1423,6 @@ void StartNode(void* parg)\n     // Process messages\n     if (!CreateThread(ThreadMessageHandler, NULL))\n         printf(\"Error: CreateThread(ThreadMessageHandler) failed\\n\");\n-\n-    // Generate coins in the background\n-    GenerateBitcoins(fGenerateBitcoins);\n }\n \n bool StopNode()"
      },
      {
        "sha": "50fd22a896b9a52f7df2d70e934d0cc93a8bc422",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -216,57 +216,6 @@ Value getdifficulty(const Array& params, bool fHelp)\n }\n \n \n-Value getgenerate(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 0)\n-        throw runtime_error(\n-            \"getgenerate\\n\"\n-            \"Returns true or false.\");\n-\n-    return (bool)fGenerateBitcoins;\n-}\n-\n-\n-Value setgenerate(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() < 1 || params.size() > 2)\n-        throw runtime_error(\n-            \"setgenerate <generate> [genproclimit]\\n\"\n-            \"<generate> is true or false to turn generation on or off.\\n\"\n-            \"Generation is limited to [genproclimit] processors, -1 is unlimited.\");\n-\n-    bool fGenerate = true;\n-    if (params.size() > 0)\n-        fGenerate = params[0].get_bool();\n-\n-    if (params.size() > 1)\n-    {\n-        int nGenProcLimit = params[1].get_int();\n-        fLimitProcessors = (nGenProcLimit != -1);\n-        CWalletDB().WriteSetting(\"fLimitProcessors\", fLimitProcessors);\n-        if (nGenProcLimit != -1)\n-            CWalletDB().WriteSetting(\"nLimitProcessors\", nLimitProcessors = nGenProcLimit);\n-        if (nGenProcLimit == 0)\n-            fGenerate = false;\n-    }\n-\n-    GenerateBitcoins(fGenerate);\n-    return Value::null;\n-}\n-\n-\n-Value gethashespersec(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 0)\n-        throw runtime_error(\n-            \"gethashespersec\\n\"\n-            \"Returns a recent hashes per second performance measurement while generating.\");\n-\n-    if (GetTimeMillis() - nHPSTimerStart > 8000)\n-        return (boost::int64_t)0;\n-    return (boost::int64_t)dHashesPerSec;\n-}\n-\n \n Value getinfo(const Array& params, bool fHelp)\n {\n@@ -281,10 +230,7 @@ Value getinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"blocks\",        (int)nBestHeight));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n     obj.push_back(Pair(\"proxy\",         (fUseProxy ? addrProxy.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"generate\",      (bool)fGenerateBitcoins));\n-    obj.push_back(Pair(\"genproclimit\",  (int)(fLimitProcessors ? nLimitProcessors : -1)));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"hashespersec\",  gethashespersec(params, false)));\n     obj.push_back(Pair(\"testnet\",       fTestNet));\n     obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)GetOldestKeyPoolTime()));\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n@@ -1381,9 +1327,6 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getblocknumber\",        &getblocknumber),\n     make_pair(\"getconnectioncount\",    &getconnectioncount),\n     make_pair(\"getdifficulty\",         &getdifficulty),\n-    make_pair(\"getgenerate\",           &getgenerate),\n-    make_pair(\"setgenerate\",           &setgenerate),\n-    make_pair(\"gethashespersec\",       &gethashespersec),\n     make_pair(\"getinfo\",               &getinfo),\n     make_pair(\"getnewaddress\",         &getnewaddress),\n     make_pair(\"getaccountaddress\",     &getaccountaddress),\n@@ -1423,9 +1366,6 @@ string pAllowInSafeMode[] =\n     \"getblocknumber\",\n     \"getconnectioncount\",\n     \"getdifficulty\",\n-    \"getgenerate\",\n-    \"setgenerate\",\n-    \"gethashespersec\",\n     \"getinfo\",\n     \"getnewaddress\",\n     \"getaccountaddress\",\n@@ -2037,8 +1977,6 @@ int CommandLineRPC(int argc, char *argv[])\n         //\n         // Special case non-string parameter types\n         //\n-        if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n-        if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n         if (strMethod == \"getamountreceived\"      && n > 1) ConvertTo<boost::int64_t>(params[1]); // deprecated\n         if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);"
      },
      {
        "sha": "ca116bdcd3f152bffccd9d9ef19216d55109ee24",
        "filename": "sha256.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 475,
        "changes": 475,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c09a4adb20aed76dd5f07051c605ffd56a093d6/sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c09a4adb20aed76dd5f07051c605ffd56a093d6/sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/sha256.cpp?ref=1c09a4adb20aed76dd5f07051c605ffd56a093d6",
        "patch": "@@ -1,475 +0,0 @@\n-// Copyright (c) 2010 Nils Schneider\n-// Distributed under the MIT/X11 software license, see the accompanying\n-// file license.txt or http://www.opensource.org/licenses/mit-license.php.\n-\n-// 4-way 128-bit SSE2 SHA-256\n-\n-#ifdef FOURWAYSSE2\n-\n-#include <string.h>\n-#include <assert.h>\n-\n-#include <xmmintrin.h>\n-#include <stdint.h>\n-#include <stdio.h>\n-\n-#define NPAR 32\n-\n-extern void DoubleBlockSHA256(const void* pin, void* pout, const void* pinit, unsigned int hash[8][NPAR], const void* init2);\n-\n-static const unsigned int sha256_consts[] = {\n-    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, /*  0 */\n-    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n-    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, /*  8 */\n-    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n-    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, /* 16 */\n-    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n-    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, /* 24 */\n-    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n-    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, /* 32 */\n-    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n-    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, /* 40 */\n-    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n-    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, /* 48 */\n-    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n-    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, /* 56 */\n-    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n-};\n-\n-\n-static inline __m128i Ch(const __m128i b, const __m128i c, const __m128i d) {\n-    return (b & c) ^ (~b & d);\n-}\n-\n-static inline __m128i Maj(const __m128i b, const __m128i c, const __m128i d) {\n-    return (b & c) ^ (b & d) ^ (c & d);\n-}\n-\n-static inline __m128i ROTR(__m128i x, const int n) {\n-    return _mm_srli_epi32(x, n) | _mm_slli_epi32(x, 32 - n);\n-}\n-\n-static inline __m128i SHR(__m128i x, const int n) {\n-    return _mm_srli_epi32(x, n);\n-}\n-\n-/* SHA256 Functions */\n-#define BIGSIGMA0_256(x)    (ROTR((x), 2) ^ ROTR((x), 13) ^ ROTR((x), 22))\n-#define BIGSIGMA1_256(x)    (ROTR((x), 6) ^ ROTR((x), 11) ^ ROTR((x), 25))\n-#define SIGMA0_256(x)       (ROTR((x), 7) ^ ROTR((x), 18) ^ SHR((x), 3))\n-#define SIGMA1_256(x)       (ROTR((x), 17) ^ ROTR((x), 19) ^ SHR((x), 10))\n-\n-static inline unsigned int store32(const __m128i x, int i) {\n-    union { unsigned int ret[4]; __m128i x; } box;\n-    box.x = x;\n-    return box.ret[i];\n-}\n-\n-static inline void store_epi32(const __m128i x, unsigned int *x0, unsigned int *x1, unsigned int *x2, unsigned int *x3) {\n-    union { unsigned int ret[4]; __m128i x; } box;\n-    box.x = x;\n-    *x0 = box.ret[3]; *x1 = box.ret[2]; *x2 = box.ret[1]; *x3 = box.ret[0];\n-}\n-\n-#define add4(x0, x1, x2, x3) _mm_add_epi32(_mm_add_epi32(_mm_add_epi32(x0, x1), x2), x3)\n-#define add5(x0, x1, x2, x3, x4) _mm_add_epi32(add4(x0, x1, x2, x3), x4)\n-\n-#define SHA256ROUND(a, b, c, d, e, f, g, h, i, w)                       \\\n-    T1 = add5(h, BIGSIGMA1_256(e), Ch(e, f, g), _mm_set1_epi32(sha256_consts[i]), w);   \\\n-d = _mm_add_epi32(d, T1);                                           \\\n-h = _mm_add_epi32(T1, _mm_add_epi32(BIGSIGMA0_256(a), Maj(a, b, c)));\n-\n-static inline void dumpreg(__m128i x, char *msg) {\n-    union { unsigned int ret[4]; __m128i x; } box;\n-    box.x = x ;\n-    printf(\"%s %08x %08x %08x %08x\\n\", msg, box.ret[0], box.ret[1], box.ret[2], box.ret[3]);\n-}\n-\n-#if 1\n-#define dumpstate(i) printf(\"%s: %08x %08x %08x %08x %08x %08x %08x %08x %08x\\n\", \\\n-        __func__, store32(w0, i), store32(a, i), store32(b, i), store32(c, i), store32(d, i), store32(e, i), store32(f, i), store32(g, i), store32(h, i));\n-#else\n-#define dumpstate()\n-#endif\n-\n-// Align by increasing pointer, must have extra space at end of buffer\n-template <size_t nBytes, typename T>\n-T* alignup(T* p)\n-{\n-    union\n-    {\n-        T* ptr;\n-        size_t n;\n-    } u;\n-    u.ptr = p;\n-    u.n = (u.n + (nBytes-1)) & ~(nBytes-1);\n-    return u.ptr;\n-}\n-\n-static const unsigned int pSHA256InitState[8] =\n-{0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19};\n-\n-\n-unsigned int ScanHash_4WaySSE2(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)\n-{\n-    unsigned int& nNonce = *(unsigned int*)(pdata + 12);\n-    for (;;)\n-    {\n-        nNonce += NPAR;\n-        unsigned int thashbuf[9][NPAR];\n-        unsigned int (&thash)[9][NPAR] = *alignup<16>(&thashbuf);\n-        DoubleBlockSHA256(pdata, phash1, pmidstate, thash, pSHA256InitState);\n-\n-        for (int j = 0; j < NPAR; j++)\n-        {\n-            if (thash[7][j] == 0)\n-            {\n-                for (int i = 0; i < 32/4; i++)\n-                    ((unsigned int*)phash)[i] = thash[i][j];\n-                return nNonce + j;\n-            }\n-        }\n-\n-        if ((nNonce & 0xffff) == 0)\n-        {\n-            nHashesDone = 0xffff+1;\n-            return -1;\n-        }\n-    }\n-}\n-\n-\n-void DoubleBlockSHA256(const void* pin, void* pad, const void *pre, unsigned int thash[9][NPAR], const void *init)\n-{\n-    unsigned int* In = (unsigned int*)pin;\n-    unsigned int* Pad = (unsigned int*)pad;\n-    unsigned int* hPre = (unsigned int*)pre;\n-    unsigned int* hInit = (unsigned int*)init;\n-    unsigned int i, j, k;\n-\n-    /* vectors used in calculation */\n-    __m128i w0, w1, w2, w3, w4, w5, w6, w7;\n-    __m128i w8, w9, w10, w11, w12, w13, w14, w15;\n-    __m128i T1;\n-    __m128i a, b, c, d, e, f, g, h;\n-    __m128i nonce;\n-\n-    /* nonce offset for vector */\n-    __m128i offset = _mm_set_epi32(0x00000003, 0x00000002, 0x00000001, 0x00000000);\n-\n-\n-    for(k = 0; k<NPAR; k+=4) {\n-        w0 = _mm_set1_epi32(In[0]);\n-        w1 = _mm_set1_epi32(In[1]);\n-        w2 = _mm_set1_epi32(In[2]);\n-        //w3 = _mm_set1_epi32(In[3]); nonce will be later hacked into the hash\n-        w4 = _mm_set1_epi32(In[4]);\n-        w5 = _mm_set1_epi32(In[5]);\n-        w6 = _mm_set1_epi32(In[6]);\n-        w7 = _mm_set1_epi32(In[7]);\n-        w8 = _mm_set1_epi32(In[8]);\n-        w9 = _mm_set1_epi32(In[9]);\n-        w10 = _mm_set1_epi32(In[10]);\n-        w11 = _mm_set1_epi32(In[11]);\n-        w12 = _mm_set1_epi32(In[12]);\n-        w13 = _mm_set1_epi32(In[13]);\n-        w14 = _mm_set1_epi32(In[14]);\n-        w15 = _mm_set1_epi32(In[15]);\n-\n-        /* hack nonce into lowest byte of w3 */\n-        nonce = _mm_set1_epi32(In[3]);\n-        nonce = _mm_add_epi32(nonce, offset);\n-        nonce = _mm_add_epi32(nonce, _mm_set1_epi32(k));\n-        w3 = nonce;\n-\n-        a = _mm_set1_epi32(hPre[0]);\n-        b = _mm_set1_epi32(hPre[1]);\n-        c = _mm_set1_epi32(hPre[2]);\n-        d = _mm_set1_epi32(hPre[3]);\n-        e = _mm_set1_epi32(hPre[4]);\n-        f = _mm_set1_epi32(hPre[5]);\n-        g = _mm_set1_epi32(hPre[6]);\n-        h = _mm_set1_epi32(hPre[7]);\n-\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 0, w0);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 1, w1);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 2, w2);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 3, w3);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 4, w4);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 5, w5);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 6, w6);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 7, w7);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 8, w8);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 9, w9);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 10, w10);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 11, w11);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 12, w12);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 13, w13);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 14, w14);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 15, w15);\n-\n-        w0 = add4(SIGMA1_256(w14), w9, SIGMA0_256(w1), w0);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 16, w0);\n-        w1 = add4(SIGMA1_256(w15), w10, SIGMA0_256(w2), w1);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 17, w1);\n-        w2 = add4(SIGMA1_256(w0), w11, SIGMA0_256(w3), w2);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 18, w2);\n-        w3 = add4(SIGMA1_256(w1), w12, SIGMA0_256(w4), w3);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 19, w3);\n-        w4 = add4(SIGMA1_256(w2), w13, SIGMA0_256(w5), w4);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 20, w4);\n-        w5 = add4(SIGMA1_256(w3), w14, SIGMA0_256(w6), w5);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 21, w5);\n-        w6 = add4(SIGMA1_256(w4), w15, SIGMA0_256(w7), w6);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 22, w6);\n-        w7 = add4(SIGMA1_256(w5), w0, SIGMA0_256(w8), w7);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 23, w7);\n-        w8 = add4(SIGMA1_256(w6), w1, SIGMA0_256(w9), w8);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 24, w8);\n-        w9 = add4(SIGMA1_256(w7), w2, SIGMA0_256(w10), w9);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 25, w9);\n-        w10 = add4(SIGMA1_256(w8), w3, SIGMA0_256(w11), w10);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 26, w10);\n-        w11 = add4(SIGMA1_256(w9), w4, SIGMA0_256(w12), w11);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 27, w11);\n-        w12 = add4(SIGMA1_256(w10), w5, SIGMA0_256(w13), w12);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 28, w12);\n-        w13 = add4(SIGMA1_256(w11), w6, SIGMA0_256(w14), w13);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 29, w13);\n-        w14 = add4(SIGMA1_256(w12), w7, SIGMA0_256(w15), w14);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 30, w14);\n-        w15 = add4(SIGMA1_256(w13), w8, SIGMA0_256(w0), w15);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 31, w15);\n-\n-        w0 = add4(SIGMA1_256(w14), w9, SIGMA0_256(w1), w0);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 32, w0);\n-        w1 = add4(SIGMA1_256(w15), w10, SIGMA0_256(w2), w1);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 33, w1);\n-        w2 = add4(SIGMA1_256(w0), w11, SIGMA0_256(w3), w2);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 34, w2);\n-        w3 = add4(SIGMA1_256(w1), w12, SIGMA0_256(w4), w3);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 35, w3);\n-        w4 = add4(SIGMA1_256(w2), w13, SIGMA0_256(w5), w4);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 36, w4);\n-        w5 = add4(SIGMA1_256(w3), w14, SIGMA0_256(w6), w5);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 37, w5);\n-        w6 = add4(SIGMA1_256(w4), w15, SIGMA0_256(w7), w6);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 38, w6);\n-        w7 = add4(SIGMA1_256(w5), w0, SIGMA0_256(w8), w7);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 39, w7);\n-        w8 = add4(SIGMA1_256(w6), w1, SIGMA0_256(w9), w8);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 40, w8);\n-        w9 = add4(SIGMA1_256(w7), w2, SIGMA0_256(w10), w9);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 41, w9);\n-        w10 = add4(SIGMA1_256(w8), w3, SIGMA0_256(w11), w10);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 42, w10);\n-        w11 = add4(SIGMA1_256(w9), w4, SIGMA0_256(w12), w11);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 43, w11);\n-        w12 = add4(SIGMA1_256(w10), w5, SIGMA0_256(w13), w12);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 44, w12);\n-        w13 = add4(SIGMA1_256(w11), w6, SIGMA0_256(w14), w13);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 45, w13);\n-        w14 = add4(SIGMA1_256(w12), w7, SIGMA0_256(w15), w14);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 46, w14);\n-        w15 = add4(SIGMA1_256(w13), w8, SIGMA0_256(w0), w15);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 47, w15);\n-\n-        w0 = add4(SIGMA1_256(w14), w9, SIGMA0_256(w1), w0);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 48, w0);\n-        w1 = add4(SIGMA1_256(w15), w10, SIGMA0_256(w2), w1);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 49, w1);\n-        w2 = add4(SIGMA1_256(w0), w11, SIGMA0_256(w3), w2);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 50, w2);\n-        w3 = add4(SIGMA1_256(w1), w12, SIGMA0_256(w4), w3);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 51, w3);\n-        w4 = add4(SIGMA1_256(w2), w13, SIGMA0_256(w5), w4);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 52, w4);\n-        w5 = add4(SIGMA1_256(w3), w14, SIGMA0_256(w6), w5);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 53, w5);\n-        w6 = add4(SIGMA1_256(w4), w15, SIGMA0_256(w7), w6);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 54, w6);\n-        w7 = add4(SIGMA1_256(w5), w0, SIGMA0_256(w8), w7);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 55, w7);\n-        w8 = add4(SIGMA1_256(w6), w1, SIGMA0_256(w9), w8);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 56, w8);\n-        w9 = add4(SIGMA1_256(w7), w2, SIGMA0_256(w10), w9);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 57, w9);\n-        w10 = add4(SIGMA1_256(w8), w3, SIGMA0_256(w11), w10);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 58, w10);\n-        w11 = add4(SIGMA1_256(w9), w4, SIGMA0_256(w12), w11);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 59, w11);\n-        w12 = add4(SIGMA1_256(w10), w5, SIGMA0_256(w13), w12);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 60, w12);\n-        w13 = add4(SIGMA1_256(w11), w6, SIGMA0_256(w14), w13);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 61, w13);\n-        w14 = add4(SIGMA1_256(w12), w7, SIGMA0_256(w15), w14);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 62, w14);\n-        w15 = add4(SIGMA1_256(w13), w8, SIGMA0_256(w0), w15);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 63, w15);\n-\n-#define store_load(x, i, dest) \\\n-        T1 = _mm_set1_epi32((hPre)[i]); \\\n-        dest = _mm_add_epi32(T1, x);\n-\n-        store_load(a, 0, w0);\n-        store_load(b, 1, w1);\n-        store_load(c, 2, w2);\n-        store_load(d, 3, w3);\n-        store_load(e, 4, w4);\n-        store_load(f, 5, w5);\n-        store_load(g, 6, w6);\n-        store_load(h, 7, w7);\n-\n-        w8 = _mm_set1_epi32(Pad[8]);\n-        w9 = _mm_set1_epi32(Pad[9]);\n-        w10 = _mm_set1_epi32(Pad[10]);\n-        w11 = _mm_set1_epi32(Pad[11]);\n-        w12 = _mm_set1_epi32(Pad[12]);\n-        w13 = _mm_set1_epi32(Pad[13]);\n-        w14 = _mm_set1_epi32(Pad[14]);\n-        w15 = _mm_set1_epi32(Pad[15]);\n-\n-        a = _mm_set1_epi32(hInit[0]);\n-        b = _mm_set1_epi32(hInit[1]);\n-        c = _mm_set1_epi32(hInit[2]);\n-        d = _mm_set1_epi32(hInit[3]);\n-        e = _mm_set1_epi32(hInit[4]);\n-        f = _mm_set1_epi32(hInit[5]);\n-        g = _mm_set1_epi32(hInit[6]);\n-        h = _mm_set1_epi32(hInit[7]);\n-\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 0, w0);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 1, w1);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 2, w2);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 3, w3);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 4, w4);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 5, w5);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 6, w6);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 7, w7);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 8, w8);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 9, w9);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 10, w10);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 11, w11);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 12, w12);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 13, w13);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 14, w14);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 15, w15);\n-\n-        w0 = add4(SIGMA1_256(w14), w9, SIGMA0_256(w1), w0);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 16, w0);\n-        w1 = add4(SIGMA1_256(w15), w10, SIGMA0_256(w2), w1);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 17, w1);\n-        w2 = add4(SIGMA1_256(w0), w11, SIGMA0_256(w3), w2);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 18, w2);\n-        w3 = add4(SIGMA1_256(w1), w12, SIGMA0_256(w4), w3);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 19, w3);\n-        w4 = add4(SIGMA1_256(w2), w13, SIGMA0_256(w5), w4);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 20, w4);\n-        w5 = add4(SIGMA1_256(w3), w14, SIGMA0_256(w6), w5);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 21, w5);\n-        w6 = add4(SIGMA1_256(w4), w15, SIGMA0_256(w7), w6);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 22, w6);\n-        w7 = add4(SIGMA1_256(w5), w0, SIGMA0_256(w8), w7);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 23, w7);\n-        w8 = add4(SIGMA1_256(w6), w1, SIGMA0_256(w9), w8);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 24, w8);\n-        w9 = add4(SIGMA1_256(w7), w2, SIGMA0_256(w10), w9);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 25, w9);\n-        w10 = add4(SIGMA1_256(w8), w3, SIGMA0_256(w11), w10);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 26, w10);\n-        w11 = add4(SIGMA1_256(w9), w4, SIGMA0_256(w12), w11);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 27, w11);\n-        w12 = add4(SIGMA1_256(w10), w5, SIGMA0_256(w13), w12);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 28, w12);\n-        w13 = add4(SIGMA1_256(w11), w6, SIGMA0_256(w14), w13);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 29, w13);\n-        w14 = add4(SIGMA1_256(w12), w7, SIGMA0_256(w15), w14);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 30, w14);\n-        w15 = add4(SIGMA1_256(w13), w8, SIGMA0_256(w0), w15);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 31, w15);\n-\n-        w0 = add4(SIGMA1_256(w14), w9, SIGMA0_256(w1), w0);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 32, w0);\n-        w1 = add4(SIGMA1_256(w15), w10, SIGMA0_256(w2), w1);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 33, w1);\n-        w2 = add4(SIGMA1_256(w0), w11, SIGMA0_256(w3), w2);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 34, w2);\n-        w3 = add4(SIGMA1_256(w1), w12, SIGMA0_256(w4), w3);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 35, w3);\n-        w4 = add4(SIGMA1_256(w2), w13, SIGMA0_256(w5), w4);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 36, w4);\n-        w5 = add4(SIGMA1_256(w3), w14, SIGMA0_256(w6), w5);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 37, w5);\n-        w6 = add4(SIGMA1_256(w4), w15, SIGMA0_256(w7), w6);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 38, w6);\n-        w7 = add4(SIGMA1_256(w5), w0, SIGMA0_256(w8), w7);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 39, w7);\n-        w8 = add4(SIGMA1_256(w6), w1, SIGMA0_256(w9), w8);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 40, w8);\n-        w9 = add4(SIGMA1_256(w7), w2, SIGMA0_256(w10), w9);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 41, w9);\n-        w10 = add4(SIGMA1_256(w8), w3, SIGMA0_256(w11), w10);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 42, w10);\n-        w11 = add4(SIGMA1_256(w9), w4, SIGMA0_256(w12), w11);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 43, w11);\n-        w12 = add4(SIGMA1_256(w10), w5, SIGMA0_256(w13), w12);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 44, w12);\n-        w13 = add4(SIGMA1_256(w11), w6, SIGMA0_256(w14), w13);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 45, w13);\n-        w14 = add4(SIGMA1_256(w12), w7, SIGMA0_256(w15), w14);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 46, w14);\n-        w15 = add4(SIGMA1_256(w13), w8, SIGMA0_256(w0), w15);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 47, w15);\n-\n-        w0 = add4(SIGMA1_256(w14), w9, SIGMA0_256(w1), w0);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 48, w0);\n-        w1 = add4(SIGMA1_256(w15), w10, SIGMA0_256(w2), w1);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 49, w1);\n-        w2 = add4(SIGMA1_256(w0), w11, SIGMA0_256(w3), w2);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 50, w2);\n-        w3 = add4(SIGMA1_256(w1), w12, SIGMA0_256(w4), w3);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 51, w3);\n-        w4 = add4(SIGMA1_256(w2), w13, SIGMA0_256(w5), w4);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 52, w4);\n-        w5 = add4(SIGMA1_256(w3), w14, SIGMA0_256(w6), w5);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 53, w5);\n-        w6 = add4(SIGMA1_256(w4), w15, SIGMA0_256(w7), w6);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 54, w6);\n-        w7 = add4(SIGMA1_256(w5), w0, SIGMA0_256(w8), w7);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 55, w7);\n-        w8 = add4(SIGMA1_256(w6), w1, SIGMA0_256(w9), w8);\n-        SHA256ROUND(a, b, c, d, e, f, g, h, 56, w8);\n-        w9 = add4(SIGMA1_256(w7), w2, SIGMA0_256(w10), w9);\n-        SHA256ROUND(h, a, b, c, d, e, f, g, 57, w9);\n-        w10 = add4(SIGMA1_256(w8), w3, SIGMA0_256(w11), w10);\n-        SHA256ROUND(g, h, a, b, c, d, e, f, 58, w10);\n-        w11 = add4(SIGMA1_256(w9), w4, SIGMA0_256(w12), w11);\n-        SHA256ROUND(f, g, h, a, b, c, d, e, 59, w11);\n-        w12 = add4(SIGMA1_256(w10), w5, SIGMA0_256(w13), w12);\n-        SHA256ROUND(e, f, g, h, a, b, c, d, 60, w12);\n-        w13 = add4(SIGMA1_256(w11), w6, SIGMA0_256(w14), w13);\n-        SHA256ROUND(d, e, f, g, h, a, b, c, 61, w13);\n-        w14 = add4(SIGMA1_256(w12), w7, SIGMA0_256(w15), w14);\n-        SHA256ROUND(c, d, e, f, g, h, a, b, 62, w14);\n-        w15 = add4(SIGMA1_256(w13), w8, SIGMA0_256(w0), w15);\n-        SHA256ROUND(b, c, d, e, f, g, h, a, 63, w15);\n-\n-        /* store resulsts directly in thash */\n-#define store_2(x,i)  \\\n-        w0 = _mm_set1_epi32(hInit[i]); \\\n-        *(__m128i *)&(thash)[i][0+k] = _mm_add_epi32(w0, x);\n-\n-        store_2(a, 0);\n-        store_2(b, 1);\n-        store_2(c, 2);\n-        store_2(d, 3);\n-        store_2(e, 4);\n-        store_2(f, 5);\n-        store_2(g, 6);\n-        store_2(h, 7);\n-        *(__m128i *)&(thash)[8][0+k] = nonce;\n-    }\n-\n-}\n-\n-#endif // FOURWAYSSE2"
      },
      {
        "sha": "f226871f144a696e8208ed6129012d5c1fca0001",
        "filename": "ui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 64,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/ui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/ui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ui.cpp?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -306,12 +306,11 @@ CMainFrame::CMainFrame(wxWindow* parent) : CMainFrameBase(parent)\n     }\n \n     // Init status bar\n-    int pnWidths[3] = { -100, 88, 300 };\n+    int pnWidths[3] = { -188, 300 };\n #ifndef __WXMSW__\n     pnWidths[1] = pnWidths[1] * 1.1 * dResize;\n-    pnWidths[2] = pnWidths[2] * 1.1 * dResize;\n #endif\n-    m_statusBar->SetFieldsCount(3, pnWidths);\n+    m_statusBar->SetFieldsCount(2, pnWidths);\n \n     // Fill your address text box\n     vector<unsigned char> vchPubKey;\n@@ -1048,15 +1047,8 @@ void CMainFrame::OnPaintListCtrl(wxPaintEvent& event)\n         m_statusBar->SetStatusText(\"\", 0);\n     strPrevWarning = strWarning;\n \n-    string strGen = \"\";\n-    if (fGenerateBitcoins)\n-        strGen = _(\"    Generating\");\n-    if (fGenerateBitcoins && vNodes.empty())\n-        strGen = _(\"(not connected)\");\n-    m_statusBar->SetStatusText(strGen, 1);\n-\n     string strStatus = strprintf(_(\"     %d connections     %d blocks     %d transactions\"), vNodes.size(), nBestHeight, nTransactionCount);\n-    m_statusBar->SetStatusText(strStatus, 2);\n+    m_statusBar->SetStatusText(strStatus, 1);\n \n     // Update receiving address\n     string strDefaultAddress = PubKeyToAddress(vchDefaultKey);\n@@ -1094,17 +1086,6 @@ void CMainFrame::OnMenuFileExit(wxCommandEvent& event)\n     Close(true);\n }\n \n-void CMainFrame::OnMenuOptionsGenerate(wxCommandEvent& event)\n-{\n-    // Options->Generate Coins\n-    GenerateBitcoins(event.IsChecked());\n-}\n-\n-void CMainFrame::OnUpdateUIOptionsGenerate(wxUpdateUIEvent& event)\n-{\n-    event.Check(fGenerateBitcoins);\n-}\n-\n void CMainFrame::OnMenuOptionsChangeYourAddress(wxCommandEvent& event)\n {\n     // Options->Your Receiving Addresses\n@@ -1655,13 +1636,6 @@ COptionsDialog::COptionsDialog(wxWindow* parent) : COptionsDialogBase(parent)\n \n     // Init values\n     m_textCtrlTransactionFee->SetValue(FormatMoney(nTransactionFee));\n-    m_checkBoxLimitProcessors->SetValue(fLimitProcessors);\n-    m_spinCtrlLimitProcessors->Enable(fLimitProcessors);\n-    m_spinCtrlLimitProcessors->SetValue(nLimitProcessors);\n-    int nProcessors = wxThread::GetCPUCount();\n-    if (nProcessors < 1)\n-        nProcessors = 999;\n-    m_spinCtrlLimitProcessors->SetRange(1, nProcessors);\n     m_checkBoxStartOnSystemStartup->SetValue(fTmpStartOnSystemStartup = GetStartOnSystemStartup());\n     m_checkBoxMinimizeToTray->SetValue(fMinimizeToTray);\n     m_checkBoxMinimizeOnClose->SetValue(fMinimizeOnClose);\n@@ -1698,11 +1672,6 @@ void COptionsDialog::OnKillFocusTransactionFee(wxFocusEvent& event)\n     m_textCtrlTransactionFee->SetValue(FormatMoney(nTmp));\n }\n \n-void COptionsDialog::OnCheckBoxLimitProcessors(wxCommandEvent& event)\n-{\n-    m_spinCtrlLimitProcessors->Enable(event.IsChecked());\n-}\n-\n void COptionsDialog::OnCheckBoxUseProxy(wxCommandEvent& event)\n {\n     m_textCtrlProxyIP->Enable(event.IsChecked());\n@@ -1751,20 +1720,6 @@ void COptionsDialog::OnButtonApply(wxCommandEvent& event)\n     if (ParseMoney(m_textCtrlTransactionFee->GetValue(), nTransactionFee) && nTransactionFee != nPrevTransactionFee)\n         walletdb.WriteSetting(\"nTransactionFee\", nTransactionFee);\n \n-    int nPrevMaxProc = (fLimitProcessors ? nLimitProcessors : INT_MAX);\n-    if (fLimitProcessors != m_checkBoxLimitProcessors->GetValue())\n-    {\n-        fLimitProcessors = m_checkBoxLimitProcessors->GetValue();\n-        walletdb.WriteSetting(\"fLimitProcessors\", fLimitProcessors);\n-    }\n-    if (nLimitProcessors != m_spinCtrlLimitProcessors->GetValue())\n-    {\n-        nLimitProcessors = m_spinCtrlLimitProcessors->GetValue();\n-        walletdb.WriteSetting(\"nLimitProcessors\", nLimitProcessors);\n-    }\n-    if (fGenerateBitcoins && (fLimitProcessors ? nLimitProcessors : INT_MAX) > nPrevMaxProc)\n-        GenerateBitcoins(fGenerateBitcoins);\n-\n     if (fTmpStartOnSystemStartup != m_checkBoxStartOnSystemStartup->GetValue())\n     {\n         fTmpStartOnSystemStartup = m_checkBoxStartOnSystemStartup->GetValue();\n@@ -2600,8 +2555,6 @@ BEGIN_EVENT_TABLE(CMyTaskBarIcon, wxTaskBarIcon)\n     EVT_TASKBAR_LEFT_DCLICK(CMyTaskBarIcon::OnLeftButtonDClick)\n     EVT_MENU(ID_TASKBAR_RESTORE, CMyTaskBarIcon::OnMenuRestore)\n     EVT_MENU(ID_TASKBAR_OPTIONS, CMyTaskBarIcon::OnMenuOptions)\n-    EVT_MENU(ID_TASKBAR_GENERATE, CMyTaskBarIcon::OnMenuGenerate)\n-    EVT_UPDATE_UI(ID_TASKBAR_GENERATE, CMyTaskBarIcon::OnUpdateUIGenerate)\n     EVT_MENU(ID_TASKBAR_EXIT, CMyTaskBarIcon::OnMenuExit)\n END_EVENT_TABLE()\n \n@@ -2611,9 +2564,7 @@ void CMyTaskBarIcon::Show(bool fShow)\n     if (fShow)\n     {\n         string strTooltip = _(\"Bitcoin\");\n-        if (fGenerateBitcoins)\n-            strTooltip = _(\"Bitcoin - Generating\");\n-        if (fGenerateBitcoins && vNodes.empty())\n+        if (vNodes.empty())\n             strTooltip = _(\"Bitcoin - (not connected)\");\n \n         // Optimization, only update when changed, using char array to be reentrant\n@@ -2667,16 +2618,6 @@ void CMyTaskBarIcon::Restore()\n     pframeMain->Raise();\n }\n \n-void CMyTaskBarIcon::OnMenuGenerate(wxCommandEvent& event)\n-{\n-    GenerateBitcoins(event.IsChecked());\n-}\n-\n-void CMyTaskBarIcon::OnUpdateUIGenerate(wxUpdateUIEvent& event)\n-{\n-    event.Check(fGenerateBitcoins);\n-}\n-\n void CMyTaskBarIcon::OnMenuExit(wxCommandEvent& event)\n {\n     pframeMain->Close(true);\n@@ -2693,7 +2634,6 @@ wxMenu* CMyTaskBarIcon::CreatePopupMenu()\n     wxMenu* pmenu = new wxMenu;\n     pmenu->Append(ID_TASKBAR_RESTORE, _(\"&Open Bitcoin\"));\n     pmenu->Append(ID_TASKBAR_OPTIONS, _(\"O&ptions...\"));\n-    pmenu->AppendCheckItem(ID_TASKBAR_GENERATE, _(\"&Generate Coins\"))->Check(fGenerateBitcoins);\n #ifndef __WXMAC_OSX__ // Mac has built-in quit menu\n     pmenu->AppendSeparator();\n     pmenu->Append(ID_TASKBAR_EXIT, _(\"E&xit\"));"
      },
      {
        "sha": "c2b252ce74995cc35953308f73ba5c57daabdeae",
        "filename": "ui.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/ui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/ui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ui.h?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -52,8 +52,6 @@ class CMainFrame : public CMainFrameBase\n     void OnPaint(wxPaintEvent& event);\n     void OnPaintListCtrl(wxPaintEvent& event);\n     void OnMenuFileExit(wxCommandEvent& event);\n-    void OnMenuOptionsGenerate(wxCommandEvent& event);\n-    void OnUpdateUIOptionsGenerate(wxUpdateUIEvent& event);\n     void OnMenuOptionsChangeYourAddress(wxCommandEvent& event);\n     void OnMenuOptionsOptions(wxCommandEvent& event);\n     void OnMenuHelpAbout(wxCommandEvent& event);\n@@ -127,7 +125,6 @@ class COptionsDialog : public COptionsDialogBase\n     // Event handlers\n     void OnListBox(wxCommandEvent& event);\n     void OnKillFocusTransactionFee(wxFocusEvent& event);\n-    void OnCheckBoxLimitProcessors(wxCommandEvent& event);\n     void OnCheckBoxUseProxy(wxCommandEvent& event);\n     void OnKillFocusProxy(wxFocusEvent& event);\n \n@@ -324,8 +321,6 @@ class CMyTaskBarIcon : public wxTaskBarIcon\n     void OnLeftButtonDClick(wxTaskBarIconEvent& event);\n     void OnMenuRestore(wxCommandEvent& event);\n     void OnMenuOptions(wxCommandEvent& event);\n-    void OnUpdateUIGenerate(wxUpdateUIEvent& event);\n-    void OnMenuGenerate(wxCommandEvent& event);\n     void OnMenuExit(wxCommandEvent& event);\n \n public:"
      },
      {
        "sha": "f223b89680047db059551544732b81bd19f05c8d",
        "filename": "uibase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/uibase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/uibase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.cpp?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -28,10 +28,6 @@ CMainFrameBase::CMainFrameBase( wxWindow* parent, wxWindowID id, const wxString&\n \tm_menubar->Append( m_menuFile, _(\"&File\") );\n \t\n \tm_menuOptions = new wxMenu();\n-\twxMenuItem* m_menuOptionsGenerateBitcoins;\n-\tm_menuOptionsGenerateBitcoins = new wxMenuItem( m_menuOptions, wxID_OPTIONSGENERATEBITCOINS, wxString( _(\"&Generate Coins\") ) , wxEmptyString, wxITEM_CHECK );\n-\tm_menuOptions->Append( m_menuOptionsGenerateBitcoins );\n-\t\n \twxMenuItem* m_menuOptionsChangeYourAddress;\n \tm_menuOptionsChangeYourAddress = new wxMenuItem( m_menuOptions, wxID_ANY, wxString( _(\"&Your Receiving Addresses...\") ) , wxEmptyString, wxITEM_NORMAL );\n \tm_menuOptions->Append( m_menuOptionsChangeYourAddress );\n@@ -190,8 +186,6 @@ CMainFrameBase::CMainFrameBase( wxWindow* parent, wxWindowID id, const wxString&\n \tthis->Connect( wxEVT_MOUSEWHEEL, wxMouseEventHandler( CMainFrameBase::OnMouseEvents ) );\n \tthis->Connect( wxEVT_PAINT, wxPaintEventHandler( CMainFrameBase::OnPaint ) );\n \tthis->Connect( m_menuFileExit->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuFileExit ) );\n-\tthis->Connect( m_menuOptionsGenerateBitcoins->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuOptionsGenerate ) );\n-\tthis->Connect( m_menuOptionsGenerateBitcoins->GetId(), wxEVT_UPDATE_UI, wxUpdateUIEventHandler( CMainFrameBase::OnUpdateUIOptionsGenerate ) );\n \tthis->Connect( m_menuOptionsChangeYourAddress->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuOptionsChangeYourAddress ) );\n \tthis->Connect( m_menuOptionsOptions->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuOptionsOptions ) );\n \tthis->Connect( m_menuHelpAbout->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuHelpAbout ) );\n@@ -250,8 +244,6 @@ CMainFrameBase::~CMainFrameBase()\n \tthis->Disconnect( wxEVT_MOUSEWHEEL, wxMouseEventHandler( CMainFrameBase::OnMouseEvents ) );\n \tthis->Disconnect( wxEVT_PAINT, wxPaintEventHandler( CMainFrameBase::OnPaint ) );\n \tthis->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuFileExit ) );\n-\tthis->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuOptionsGenerate ) );\n-\tthis->Disconnect( wxID_ANY, wxEVT_UPDATE_UI, wxUpdateUIEventHandler( CMainFrameBase::OnUpdateUIOptionsGenerate ) );\n \tthis->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuOptionsChangeYourAddress ) );\n \tthis->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuOptionsOptions ) );\n \tthis->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( CMainFrameBase::OnMenuHelpAbout ) );\n@@ -350,21 +342,6 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \t\n \tbSizer69->Add( 0, 16, 0, wxEXPAND, 5 );\n \t\n-\twxBoxSizer* bSizer71;\n-\tbSizer71 = new wxBoxSizer( wxHORIZONTAL );\n-\t\n-\tm_checkBoxLimitProcessors = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Limit coin generation to\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\tbSizer71->Add( m_checkBoxLimitProcessors, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );\n-\t\n-\tm_spinCtrlLimitProcessors = new wxSpinCtrl( m_panelMain, wxID_ANY, wxEmptyString, wxDefaultPosition, wxSize( 48,-1 ), wxSP_ARROW_KEYS, 1, 999, 1 );\n-\tbSizer71->Add( m_spinCtrlLimitProcessors, 0, wxALIGN_CENTER_VERTICAL, 5 );\n-\t\n-\tm_staticText35 = new wxStaticText( m_panelMain, wxID_ANY, _(\"processors\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\tm_staticText35->Wrap( -1 );\n-\tbSizer71->Add( m_staticText35, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );\n-\t\n-\tbSizer69->Add( bSizer71, 0, 0, 5 );\n-\t\n \tm_checkBoxStartOnSystemStartup = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Start Bitcoin on system startup\"), wxDefaultPosition, wxDefaultSize, 0 );\n \tbSizer69->Add( m_checkBoxStartOnSystemStartup, 0, wxALL, 5 );\n \t\n@@ -476,7 +453,6 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \t\n \t// Connect Events\n \tm_listBox->Connect( wxEVT_COMMAND_LISTBOX_SELECTED, wxCommandEventHandler( COptionsDialogBase::OnListBox ), NULL, this );\n-\tm_checkBoxLimitProcessors->Connect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( COptionsDialogBase::OnCheckBoxLimitProcessors ), NULL, this );\n \tm_checkBoxMinimizeToTray->Connect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( COptionsDialogBase::OnCheckBoxMinimizeToTray ), NULL, this );\n \tm_checkBoxUseProxy->Connect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( COptionsDialogBase::OnCheckBoxUseProxy ), NULL, this );\n \tm_textCtrlProxyIP->Connect( wxEVT_KILL_FOCUS, wxFocusEventHandler( COptionsDialogBase::OnKillFocusProxy ), NULL, this );\n@@ -491,7 +467,6 @@ COptionsDialogBase::~COptionsDialogBase()\n {\n \t// Disconnect Events\n \tm_listBox->Disconnect( wxEVT_COMMAND_LISTBOX_SELECTED, wxCommandEventHandler( COptionsDialogBase::OnListBox ), NULL, this );\n-\tm_checkBoxLimitProcessors->Disconnect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( COptionsDialogBase::OnCheckBoxLimitProcessors ), NULL, this );\n \tm_checkBoxMinimizeToTray->Disconnect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( COptionsDialogBase::OnCheckBoxMinimizeToTray ), NULL, this );\n \tm_checkBoxUseProxy->Disconnect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( COptionsDialogBase::OnCheckBoxUseProxy ), NULL, this );\n \tm_textCtrlProxyIP->Disconnect( wxEVT_KILL_FOCUS, wxFocusEventHandler( COptionsDialogBase::OnKillFocusProxy ), NULL, this );"
      },
      {
        "sha": "79d033707ecca6c230ec6358055a0a086cde1db5",
        "filename": "uibase.h",
        "status": "modified",
        "additions": 22,
        "deletions": 30,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/uibase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/uibase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.h?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -34,36 +34,34 @@\n #include <wx/dialog.h>\n #include <wx/listbox.h>\n #include <wx/checkbox.h>\n-#include <wx/spinctrl.h>\n #include <wx/scrolwin.h>\n #include <wx/statbmp.h>\n \n ///////////////////////////////////////////////////////////////////////////\n \n #define wxID_MAINFRAME 1000\n-#define wxID_OPTIONSGENERATEBITCOINS 1001\n-#define wxID_BUTTONSEND 1002\n-#define wxID_BUTTONRECEIVE 1003\n-#define wxID_TEXTCTRLADDRESS 1004\n-#define wxID_BUTTONNEW 1005\n-#define wxID_BUTTONCOPY 1006\n-#define wxID_PROXYIP 1007\n-#define wxID_PROXYPORT 1008\n-#define wxID_TRANSACTIONFEE 1009\n-#define wxID_TEXTCTRLPAYTO 1010\n-#define wxID_BUTTONPASTE 1011\n-#define wxID_BUTTONADDRESSBOOK 1012\n-#define wxID_TEXTCTRLAMOUNT 1013\n-#define wxID_CHOICETRANSFERTYPE 1014\n-#define wxID_LISTCTRL 1015\n-#define wxID_BUTTONRENAME 1016\n-#define wxID_PANELSENDING 1017\n-#define wxID_LISTCTRLSENDING 1018\n-#define wxID_PANELRECEIVING 1019\n-#define wxID_LISTCTRLRECEIVING 1020\n-#define wxID_BUTTONDELETE 1021\n-#define wxID_BUTTONEDIT 1022\n-#define wxID_TEXTCTRL 1023\n+#define wxID_BUTTONSEND 1001\n+#define wxID_BUTTONRECEIVE 1002\n+#define wxID_TEXTCTRLADDRESS 1003\n+#define wxID_BUTTONNEW 1004\n+#define wxID_BUTTONCOPY 1005\n+#define wxID_PROXYIP 1006\n+#define wxID_PROXYPORT 1007\n+#define wxID_TRANSACTIONFEE 1008\n+#define wxID_TEXTCTRLPAYTO 1009\n+#define wxID_BUTTONPASTE 1010\n+#define wxID_BUTTONADDRESSBOOK 1011\n+#define wxID_TEXTCTRLAMOUNT 1012\n+#define wxID_CHOICETRANSFERTYPE 1013\n+#define wxID_LISTCTRL 1014\n+#define wxID_BUTTONRENAME 1015\n+#define wxID_PANELSENDING 1016\n+#define wxID_LISTCTRLSENDING 1017\n+#define wxID_PANELRECEIVING 1018\n+#define wxID_LISTCTRLRECEIVING 1019\n+#define wxID_BUTTONDELETE 1020\n+#define wxID_BUTTONEDIT 1021\n+#define wxID_TEXTCTRL 1022\n \n ///////////////////////////////////////////////////////////////////////////////\n /// Class CMainFrameBase\n@@ -99,8 +97,6 @@ class CMainFrameBase : public wxFrame\n \t\tvirtual void OnMouseEvents( wxMouseEvent& event ) { event.Skip(); }\n \t\tvirtual void OnPaint( wxPaintEvent& event ) { event.Skip(); }\n \t\tvirtual void OnMenuFileExit( wxCommandEvent& event ) { event.Skip(); }\n-\t\tvirtual void OnMenuOptionsGenerate( wxCommandEvent& event ) { event.Skip(); }\n-\t\tvirtual void OnUpdateUIOptionsGenerate( wxUpdateUIEvent& event ) { event.Skip(); }\n \t\tvirtual void OnMenuOptionsChangeYourAddress( wxCommandEvent& event ) { event.Skip(); }\n \t\tvirtual void OnMenuOptionsOptions( wxCommandEvent& event ) { event.Skip(); }\n \t\tvirtual void OnMenuHelpAbout( wxCommandEvent& event ) { event.Skip(); }\n@@ -165,9 +161,6 @@ class COptionsDialogBase : public wxDialog\n \t\twxScrolledWindow* m_scrolledWindow;\n \t\twxPanel* m_panelMain;\n \t\t\n-\t\twxCheckBox* m_checkBoxLimitProcessors;\n-\t\twxSpinCtrl* m_spinCtrlLimitProcessors;\n-\t\twxStaticText* m_staticText35;\n \t\twxCheckBox* m_checkBoxStartOnSystemStartup;\n \t\twxCheckBox* m_checkBoxMinimizeToTray;\n \t\twxCheckBox* m_checkBoxMinimizeOnClose;\n@@ -191,7 +184,6 @@ class COptionsDialogBase : public wxDialog\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n \t\tvirtual void OnListBox( wxCommandEvent& event ) { event.Skip(); }\n-\t\tvirtual void OnCheckBoxLimitProcessors( wxCommandEvent& event ) { event.Skip(); }\n \t\tvirtual void OnCheckBoxMinimizeToTray( wxCommandEvent& event ) { event.Skip(); }\n \t\tvirtual void OnCheckBoxUseProxy( wxCommandEvent& event ) { event.Skip(); }\n \t\tvirtual void OnKillFocusProxy( wxFocusEvent& event ) { event.Skip(); }"
      },
      {
        "sha": "92e86a7ff95f196f8787b7996f08867d2f433d43",
        "filename": "uiproject.fbp",
        "status": "modified",
        "additions": 1,
        "deletions": 197,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/uiproject.fbp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26/uiproject.fbp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uiproject.fbp?ref=79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "patch": "@@ -19,7 +19,7 @@\n         <property name=\"relative_path\">1</property>\r\n         <property name=\"use_enum\">0</property>\r\n         <property name=\"use_microsoft_bom\">0</property>\r\n-        <object class=\"Frame\" expanded=\"0\">\r\n+        <object class=\"Frame\" expanded=\"1\">\r\n             <property name=\"bg\">wxSYS_COLOUR_BTNFACE</property>\r\n             <property name=\"center\"></property>\r\n             <property name=\"context_help\"></property>\r\n@@ -147,21 +147,6 @@\n                     <property name=\"label\">&amp;Settings</property>\r\n                     <property name=\"name\">m_menuOptions</property>\r\n                     <property name=\"permission\">public</property>\r\n-                    <object class=\"wxMenuItem\" expanded=\"1\">\r\n-                        <property name=\"bitmap\"></property>\r\n-                        <property name=\"checked\">0</property>\r\n-                        <property name=\"enabled\">1</property>\r\n-                        <property name=\"help\"></property>\r\n-                        <property name=\"id\">wxID_OPTIONSGENERATEBITCOINS</property>\r\n-                        <property name=\"kind\">wxITEM_CHECK</property>\r\n-                        <property name=\"label\">&amp;Generate Coins</property>\r\n-                        <property name=\"name\">m_menuOptionsGenerateBitcoins</property>\r\n-                        <property name=\"permission\">none</property>\r\n-                        <property name=\"shortcut\"></property>\r\n-                        <property name=\"unchecked_bitmap\"></property>\r\n-                        <event name=\"OnMenuSelection\">OnMenuOptionsGenerate</event>\r\n-                        <event name=\"OnUpdateUI\">OnUpdateUIOptionsGenerate</event>\r\n-                    </object>\r\n                     <object class=\"wxMenuItem\" expanded=\"1\">\r\n                         <property name=\"bitmap\"></property>\r\n                         <property name=\"checked\">0</property>\r\n@@ -1829,187 +1814,6 @@\n                                                         <property name=\"width\">0</property>\r\n                                                     </object>\r\n                                                 </object>\r\n-                                                <object class=\"sizeritem\" expanded=\"1\">\r\n-                                                    <property name=\"border\">5</property>\r\n-                                                    <property name=\"flag\"></property>\r\n-                                                    <property name=\"proportion\">0</property>\r\n-                                                    <object class=\"wxBoxSizer\" expanded=\"1\">\r\n-                                                        <property name=\"minimum_size\"></property>\r\n-                                                        <property name=\"name\">bSizer71</property>\r\n-                                                        <property name=\"orient\">wxHORIZONTAL</property>\r\n-                                                        <property name=\"permission\">none</property>\r\n-                                                        <object class=\"sizeritem\" expanded=\"1\">\r\n-                                                            <property name=\"border\">5</property>\r\n-                                                            <property name=\"flag\">wxALIGN_CENTER_VERTICAL|wxALL</property>\r\n-                                                            <property name=\"proportion\">0</property>\r\n-                                                            <object class=\"wxCheckBox\" expanded=\"1\">\r\n-                                                                <property name=\"bg\"></property>\r\n-                                                                <property name=\"checked\">0</property>\r\n-                                                                <property name=\"context_help\"></property>\r\n-                                                                <property name=\"enabled\">1</property>\r\n-                                                                <property name=\"fg\"></property>\r\n-                                                                <property name=\"font\"></property>\r\n-                                                                <property name=\"hidden\">0</property>\r\n-                                                                <property name=\"id\">wxID_ANY</property>\r\n-                                                                <property name=\"label\">&amp;Limit coin generation to</property>\r\n-                                                                <property name=\"maximum_size\"></property>\r\n-                                                                <property name=\"minimum_size\"></property>\r\n-                                                                <property name=\"name\">m_checkBoxLimitProcessors</property>\r\n-                                                                <property name=\"permission\">protected</property>\r\n-                                                                <property name=\"pos\"></property>\r\n-                                                                <property name=\"size\"></property>\r\n-                                                                <property name=\"style\"></property>\r\n-                                                                <property name=\"subclass\"></property>\r\n-                                                                <property name=\"tooltip\"></property>\r\n-                                                                <property name=\"validator_data_type\"></property>\r\n-                                                                <property name=\"validator_style\">wxFILTER_NONE</property>\r\n-                                                                <property name=\"validator_type\">wxDefaultValidator</property>\r\n-                                                                <property name=\"validator_variable\"></property>\r\n-                                                                <property name=\"window_extra_style\"></property>\r\n-                                                                <property name=\"window_name\"></property>\r\n-                                                                <property name=\"window_style\"></property>\r\n-                                                                <event name=\"OnChar\"></event>\r\n-                                                                <event name=\"OnCheckBox\">OnCheckBoxLimitProcessors</event>\r\n-                                                                <event name=\"OnEnterWindow\"></event>\r\n-                                                                <event name=\"OnEraseBackground\"></event>\r\n-                                                                <event name=\"OnKeyDown\"></event>\r\n-                                                                <event name=\"OnKeyUp\"></event>\r\n-                                                                <event name=\"OnKillFocus\"></event>\r\n-                                                                <event name=\"OnLeaveWindow\"></event>\r\n-                                                                <event name=\"OnLeftDClick\"></event>\r\n-                                                                <event name=\"OnLeftDown\"></event>\r\n-                                                                <event name=\"OnLeftUp\"></event>\r\n-                                                                <event name=\"OnMiddleDClick\"></event>\r\n-                                                                <event name=\"OnMiddleDown\"></event>\r\n-                                                                <event name=\"OnMiddleUp\"></event>\r\n-                                                                <event name=\"OnMotion\"></event>\r\n-                                                                <event name=\"OnMouseEvents\"></event>\r\n-                                                                <event name=\"OnMouseWheel\"></event>\r\n-                                                                <event name=\"OnPaint\"></event>\r\n-                                                                <event name=\"OnRightDClick\"></event>\r\n-                                                                <event name=\"OnRightDown\"></event>\r\n-                                                                <event name=\"OnRightUp\"></event>\r\n-                                                                <event name=\"OnSetFocus\"></event>\r\n-                                                                <event name=\"OnSize\"></event>\r\n-                                                                <event name=\"OnUpdateUI\"></event>\r\n-                                                            </object>\r\n-                                                        </object>\r\n-                                                        <object class=\"sizeritem\" expanded=\"1\">\r\n-                                                            <property name=\"border\">5</property>\r\n-                                                            <property name=\"flag\">wxALIGN_CENTER_VERTICAL</property>\r\n-                                                            <property name=\"proportion\">0</property>\r\n-                                                            <object class=\"wxSpinCtrl\" expanded=\"1\">\r\n-                                                                <property name=\"bg\"></property>\r\n-                                                                <property name=\"context_help\"></property>\r\n-                                                                <property name=\"enabled\">1</property>\r\n-                                                                <property name=\"fg\"></property>\r\n-                                                                <property name=\"font\"></property>\r\n-                                                                <property name=\"hidden\">0</property>\r\n-                                                                <property name=\"id\">wxID_ANY</property>\r\n-                                                                <property name=\"initial\">1</property>\r\n-                                                                <property name=\"max\">999</property>\r\n-                                                                <property name=\"maximum_size\"></property>\r\n-                                                                <property name=\"min\">1</property>\r\n-                                                                <property name=\"minimum_size\"></property>\r\n-                                                                <property name=\"name\">m_spinCtrlLimitProcessors</property>\r\n-                                                                <property name=\"permission\">protected</property>\r\n-                                                                <property name=\"pos\"></property>\r\n-                                                                <property name=\"size\">48,-1</property>\r\n-                                                                <property name=\"style\">wxSP_ARROW_KEYS</property>\r\n-                                                                <property name=\"subclass\"></property>\r\n-                                                                <property name=\"tooltip\"></property>\r\n-                                                                <property name=\"validator_data_type\"></property>\r\n-                                                                <property name=\"validator_style\">wxFILTER_NONE</property>\r\n-                                                                <property name=\"validator_type\">wxDefaultValidator</property>\r\n-                                                                <property name=\"validator_variable\"></property>\r\n-                                                                <property name=\"value\"></property>\r\n-                                                                <property name=\"window_extra_style\"></property>\r\n-                                                                <property name=\"window_name\"></property>\r\n-                                                                <property name=\"window_style\"></property>\r\n-                                                                <event name=\"OnChar\"></event>\r\n-                                                                <event name=\"OnEnterWindow\"></event>\r\n-                                                                <event name=\"OnEraseBackground\"></event>\r\n-                                                                <event name=\"OnKeyDown\"></event>\r\n-                                                                <event name=\"OnKeyUp\"></event>\r\n-                                                                <event name=\"OnKillFocus\"></event>\r\n-                                                                <event name=\"OnLeaveWindow\"></event>\r\n-                                                                <event name=\"OnLeftDClick\"></event>\r\n-                                                                <event name=\"OnLeftDown\"></event>\r\n-                                                                <event name=\"OnLeftUp\"></event>\r\n-                                                                <event name=\"OnMiddleDClick\"></event>\r\n-                                                                <event name=\"OnMiddleDown\"></event>\r\n-                                                                <event name=\"OnMiddleUp\"></event>\r\n-                                                                <event name=\"OnMotion\"></event>\r\n-                                                                <event name=\"OnMouseEvents\"></event>\r\n-                                                                <event name=\"OnMouseWheel\"></event>\r\n-                                                                <event name=\"OnPaint\"></event>\r\n-                                                                <event name=\"OnRightDClick\"></event>\r\n-                                                                <event name=\"OnRightDown\"></event>\r\n-                                                                <event name=\"OnRightUp\"></event>\r\n-                                                                <event name=\"OnSetFocus\"></event>\r\n-                                                                <event name=\"OnSize\"></event>\r\n-                                                                <event name=\"OnSpinCtrl\"></event>\r\n-                                                                <event name=\"OnSpinCtrlText\"></event>\r\n-                                                                <event name=\"OnUpdateUI\"></event>\r\n-                                                            </object>\r\n-                                                        </object>\r\n-                                                        <object class=\"sizeritem\" expanded=\"1\">\r\n-                                                            <property name=\"border\">5</property>\r\n-                                                            <property name=\"flag\">wxALIGN_CENTER_VERTICAL|wxALL</property>\r\n-                                                            <property name=\"proportion\">0</property>\r\n-                                                            <object class=\"wxStaticText\" expanded=\"1\">\r\n-                                                                <property name=\"bg\"></property>\r\n-                                                                <property name=\"context_help\"></property>\r\n-                                                                <property name=\"enabled\">1</property>\r\n-                                                                <property name=\"fg\"></property>\r\n-                                                                <property name=\"font\"></property>\r\n-                                                                <property name=\"hidden\">0</property>\r\n-                                                                <property name=\"id\">wxID_ANY</property>\r\n-                                                                <property name=\"label\">processors</property>\r\n-                                                                <property name=\"maximum_size\"></property>\r\n-                                                                <property name=\"minimum_size\"></property>\r\n-                                                                <property name=\"name\">m_staticText35</property>\r\n-                                                                <property name=\"permission\">protected</property>\r\n-                                                                <property name=\"pos\"></property>\r\n-                                                                <property name=\"size\"></property>\r\n-                                                                <property name=\"style\"></property>\r\n-                                                                <property name=\"subclass\"></property>\r\n-                                                                <property name=\"tooltip\"></property>\r\n-                                                                <property name=\"validator_data_type\"></property>\r\n-                                                                <property name=\"validator_style\">wxFILTER_NONE</property>\r\n-                                                                <property name=\"validator_type\">wxDefaultValidator</property>\r\n-                                                                <property name=\"validator_variable\"></property>\r\n-                                                                <property name=\"window_extra_style\"></property>\r\n-                                                                <property name=\"window_name\"></property>\r\n-                                                                <property name=\"window_style\"></property>\r\n-                                                                <property name=\"wrap\">-1</property>\r\n-                                                                <event name=\"OnChar\"></event>\r\n-                                                                <event name=\"OnEnterWindow\"></event>\r\n-                                                                <event name=\"OnEraseBackground\"></event>\r\n-                                                                <event name=\"OnKeyDown\"></event>\r\n-                                                                <event name=\"OnKeyUp\"></event>\r\n-                                                                <event name=\"OnKillFocus\"></event>\r\n-                                                                <event name=\"OnLeaveWindow\"></event>\r\n-                                                                <event name=\"OnLeftDClick\"></event>\r\n-                                                                <event name=\"OnLeftDown\"></event>\r\n-                                                                <event name=\"OnLeftUp\"></event>\r\n-                                                                <event name=\"OnMiddleDClick\"></event>\r\n-                                                                <event name=\"OnMiddleDown\"></event>\r\n-                                                                <event name=\"OnMiddleUp\"></event>\r\n-                                                                <event name=\"OnMotion\"></event>\r\n-                                                                <event name=\"OnMouseEvents\"></event>\r\n-                                                                <event name=\"OnMouseWheel\"></event>\r\n-                                                                <event name=\"OnPaint\"></event>\r\n-                                                                <event name=\"OnRightDClick\"></event>\r\n-                                                                <event name=\"OnRightDown\"></event>\r\n-                                                                <event name=\"OnRightUp\"></event>\r\n-                                                                <event name=\"OnSetFocus\"></event>\r\n-                                                                <event name=\"OnSize\"></event>\r\n-                                                                <event name=\"OnUpdateUI\"></event>\r\n-                                                            </object>\r\n-                                                        </object>\r\n-                                                    </object>\r\n-                                                </object>\r\n                                                 <object class=\"sizeritem\" expanded=\"1\">\r\n                                                     <property name=\"border\">5</property>\r\n                                                     <property name=\"flag\">wxALL</property>\r"
      }
    ]
  },
  {
    "sha": "2f00fbf86cb19490108050b7453718f7b11a496f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjAwZmJmODZjYjE5NDkwMTA4MDUwYjc0NTM3MThmN2IxMWE0OTZm",
    "commit": {
      "author": {
        "name": "tcatm",
        "email": "tcatm@gawab.com",
        "date": "2011-03-23T16:58:01Z"
      },
      "committer": {
        "name": "tcatm",
        "email": "tcatm@gawab.com",
        "date": "2011-03-23T16:58:01Z"
      },
      "message": "remove FOURWAYSSE2 flag",
      "tree": {
        "sha": "aebb9ffe4d437cfa917432c601b6946d88e44bc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aebb9ffe4d437cfa917432c601b6946d88e44bc0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f00fbf86cb19490108050b7453718f7b11a496f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f00fbf86cb19490108050b7453718f7b11a496f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f00fbf86cb19490108050b7453718f7b11a496f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f00fbf86cb19490108050b7453718f7b11a496f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79e5fa0f45b51f77204b91ee8eb5710bdb08fe26"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 2,
      "deletions": 5
    },
    "files": [
      {
        "sha": "460c94a3eafbe24f7638f9e90ce12032f6080323",
        "filename": "main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f00fbf86cb19490108050b7453718f7b11a496f/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f00fbf86cb19490108050b7453718f7b11a496f/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=2f00fbf86cb19490108050b7453718f7b11a496f",
        "patch": "@@ -78,12 +78,10 @@ bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n bool BroadcastTransaction(CWalletTx& wtxNew);\n string SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n string SendMoneyToBitcoinAddress(string strAddress, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n-void ThreadBitcoinMiner(void* parg);\n CBlock* CreateNewBlock(CReserveKey& reservekey);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce, int64& nPrevTime);\n void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n bool CheckWork(CBlock* pblock, CReserveKey& reservekey);\n-void BitcoinMiner();\n bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n bool IsInitialBlockDownload();\n string GetWarnings(string strFor);"
      },
      {
        "sha": "8beebdde2ce446623787e44adabcc5de26a14072",
        "filename": "makefile.unix",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f00fbf86cb19490108050b7453718f7b11a496f/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f00fbf86cb19490108050b7453718f7b11a496f/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/makefile.unix?ref=2f00fbf86cb19490108050b7453718f7b11a496f",
        "patch": "@@ -23,7 +23,7 @@ LIBS= \\\n    -l z \\\n    -l dl\n \n-DEFS=-DNOPCH -DFOURWAYSSE2 -DUSE_SSL\n+DEFS=-DNOPCH -DUSE_SSL\n DEBUGFLAGS=-g -D__WXDEBUG__\n CXXFLAGS=-O2 -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS)\n HEADERS=headers.h strlcpy.h serialize.h uint256.h util.h key.h bignum.h base58.h \\"
      },
      {
        "sha": "fb11095fd7aa7eb74cd36980f81894973c0971a5",
        "filename": "net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f00fbf86cb19490108050b7453718f7b11a496f/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f00fbf86cb19490108050b7453718f7b11a496f/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.cpp?ref=2f00fbf86cb19490108050b7453718f7b11a496f",
        "patch": "@@ -1431,7 +1431,7 @@ bool StopNode()\n     fShutdown = true;\n     nTransactionsUpdated++;\n     int64 nStart = GetTime();\n-    while (vnThreadsRunning[0] > 0 || vnThreadsRunning[2] > 0 || vnThreadsRunning[3] > 0 || vnThreadsRunning[4] > 0)\n+    while (vnThreadsRunning[0] > 0 || vnThreadsRunning[2] > 0 || vnThreadsRunning[4] > 0)\n     {\n         if (GetTime() - nStart > 20)\n             break;\n@@ -1440,7 +1440,6 @@ bool StopNode()\n     if (vnThreadsRunning[0] > 0) printf(\"ThreadSocketHandler still running\\n\");\n     if (vnThreadsRunning[1] > 0) printf(\"ThreadOpenConnections still running\\n\");\n     if (vnThreadsRunning[2] > 0) printf(\"ThreadMessageHandler still running\\n\");\n-    if (vnThreadsRunning[3] > 0) printf(\"ThreadBitcoinMiner still running\\n\");\n     if (vnThreadsRunning[4] > 0) printf(\"ThreadRPCServer still running\\n\");\n     while (vnThreadsRunning[2] > 0 || vnThreadsRunning[4] > 0)\n         Sleep(20);"
      }
    ]
  }
]