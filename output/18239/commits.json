[
  {
    "sha": "bbb33d6431d13a0ae244ab2beca506126a6430e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYmIzM2Q2NDMxZDEzYTBhZTI0NGFiMmJlY2E1MDYxMjZhNjQzMGU3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-02-03T21:53:19Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-02-04T13:52:52Z"
      },
      "message": "gui: Drop WalletModel dependency to RecentRequestsTableModel",
      "tree": {
        "sha": "e5ac3ba85a226048c1a5571ef162a61981515af7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5ac3ba85a226048c1a5571ef162a61981515af7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bbb33d6431d13a0ae244ab2beca506126a6430e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbb33d6431d13a0ae244ab2beca506126a6430e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bbb33d6431d13a0ae244ab2beca506126a6430e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbb33d6431d13a0ae244ab2beca506126a6430e7/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02fafdd12ccad91d4fdebb010134d84a31c055f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02fafdd12ccad91d4fdebb010134d84a31c055f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02fafdd12ccad91d4fdebb010134d84a31c055f3"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 19,
      "deletions": 26
    },
    "files": [
      {
        "sha": "46e7038780d135e2699c7f3c78088787c2a27577",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=bbb33d6431d13a0ae244ab2beca506126a6430e7",
        "patch": "@@ -70,15 +70,17 @@ void ReceiveCoinsDialog::setModel(WalletModel *_model)\n \n     if(_model && _model->getOptionsModel())\n     {\n-        _model->getRecentRequestsTableModel()->sort(RecentRequestsTableModel::Date, Qt::DescendingOrder);\n+        assert(m_recent_requests_table_model == nullptr);\n+        m_recent_requests_table_model = new RecentRequestsTableModel(_model);\n+        m_recent_requests_table_model->sort(RecentRequestsTableModel::Date, Qt::DescendingOrder);\n         connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &ReceiveCoinsDialog::updateDisplayUnit);\n         updateDisplayUnit();\n \n         QTableView* tableView = ui->recentRequestsView;\n \n         tableView->verticalHeader()->hide();\n         tableView->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n-        tableView->setModel(_model->getRecentRequestsTableModel());\n+        tableView->setModel(m_recent_requests_table_model);\n         tableView->setAlternatingRowColors(true);\n         tableView->setSelectionBehavior(QAbstractItemView::SelectRows);\n         tableView->setSelectionMode(QAbstractItemView::ContiguousSelection);\n@@ -141,7 +143,7 @@ void ReceiveCoinsDialog::updateDisplayUnit()\n \n void ReceiveCoinsDialog::on_receiveButton_clicked()\n {\n-    if(!model || !model->getOptionsModel() || !model->getAddressTableModel() || !model->getRecentRequestsTableModel())\n+    if(!model || !model->getOptionsModel() || !model->getAddressTableModel() || !m_recent_requests_table_model)\n         return;\n \n     QString address;\n@@ -167,15 +169,14 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n     clear();\n \n     /* Store request for later reference */\n-    model->getRecentRequestsTableModel()->addNewRequest(info);\n+    m_recent_requests_table_model->addNewRequest(info);\n }\n \n void ReceiveCoinsDialog::on_recentRequestsView_doubleClicked(const QModelIndex &index)\n {\n-    const RecentRequestsTableModel *submodel = model->getRecentRequestsTableModel();\n     ReceiveRequestDialog *dialog = new ReceiveRequestDialog(this);\n     dialog->setModel(model);\n-    dialog->setInfo(submodel->entry(index.row()).recipient);\n+    dialog->setInfo(m_recent_requests_table_model->entry(index.row()).recipient);\n     dialog->setAttribute(Qt::WA_DeleteOnClose);\n     dialog->show();\n }\n@@ -190,7 +191,7 @@ void ReceiveCoinsDialog::recentRequestsView_selectionChanged(const QItemSelectio\n \n void ReceiveCoinsDialog::on_showRequestButton_clicked()\n {\n-    if(!model || !model->getRecentRequestsTableModel() || !ui->recentRequestsView->selectionModel())\n+    if(!model || !m_recent_requests_table_model || !ui->recentRequestsView->selectionModel())\n         return;\n     QModelIndexList selection = ui->recentRequestsView->selectionModel()->selectedRows();\n \n@@ -201,14 +202,14 @@ void ReceiveCoinsDialog::on_showRequestButton_clicked()\n \n void ReceiveCoinsDialog::on_removeRequestButton_clicked()\n {\n-    if(!model || !model->getRecentRequestsTableModel() || !ui->recentRequestsView->selectionModel())\n+    if(!model || !m_recent_requests_table_model || !ui->recentRequestsView->selectionModel())\n         return;\n     QModelIndexList selection = ui->recentRequestsView->selectionModel()->selectedRows();\n     if(selection.empty())\n         return;\n     // correct for selection mode ContiguousSelection\n     QModelIndex firstIndex = selection.at(0);\n-    model->getRecentRequestsTableModel()->removeRows(firstIndex.row(), selection.length(), firstIndex.parent());\n+    m_recent_requests_table_model->removeRows(firstIndex.row(), selection.length(), firstIndex.parent());\n }\n \n // We override the virtual resizeEvent of the QWidget to adjust tables column\n@@ -237,7 +238,7 @@ void ReceiveCoinsDialog::keyPressEvent(QKeyEvent *event)\n \n QModelIndex ReceiveCoinsDialog::selectedRow()\n {\n-    if(!model || !model->getRecentRequestsTableModel() || !ui->recentRequestsView->selectionModel())\n+    if(!model || !m_recent_requests_table_model || !ui->recentRequestsView->selectionModel())\n         return QModelIndex();\n     QModelIndexList selection = ui->recentRequestsView->selectionModel()->selectedRows();\n     if(selection.empty())\n@@ -254,7 +255,7 @@ void ReceiveCoinsDialog::copyColumnToClipboard(int column)\n     if (!firstIndex.isValid()) {\n         return;\n     }\n-    GUIUtil::setClipboard(model->getRecentRequestsTableModel()->index(firstIndex.row(), column).data(Qt::EditRole).toString());\n+    GUIUtil::setClipboard(m_recent_requests_table_model->index(firstIndex.row(), column).data(Qt::EditRole).toString());\n }\n \n // context menu\n@@ -274,8 +275,7 @@ void ReceiveCoinsDialog::copyURI()\n         return;\n     }\n \n-    const RecentRequestsTableModel * const submodel = model->getRecentRequestsTableModel();\n-    const QString uri = GUIUtil::formatBitcoinURI(submodel->entry(sel.row()).recipient);\n+    const QString uri = GUIUtil::formatBitcoinURI(m_recent_requests_table_model->entry(sel.row()).recipient);\n     GUIUtil::setClipboard(uri);\n }\n "
      },
      {
        "sha": "e400129f798a0942aa2d31c6177176842cded621",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=bbb33d6431d13a0ae244ab2beca506126a6430e7",
        "patch": "@@ -16,6 +16,7 @@\n #include <QVariant>\n \n class PlatformStyle;\n+class RecentRequestsTableModel;\n class WalletModel;\n \n namespace Ui {\n@@ -44,6 +45,8 @@ class ReceiveCoinsDialog : public QDialog\n \n     void setModel(WalletModel *model);\n \n+    RecentRequestsTableModel* recentRequestsTableModel() const { return m_recent_requests_table_model; }\n+\n public Q_SLOTS:\n     void clear();\n     void reject();\n@@ -56,6 +59,7 @@ public Q_SLOTS:\n     Ui::ReceiveCoinsDialog *ui;\n     GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;\n     WalletModel *model;\n+    RecentRequestsTableModel* m_recent_requests_table_model{nullptr};\n     QMenu *contextMenu;\n     const PlatformStyle *platformStyle;\n "
      },
      {
        "sha": "c15b1c0d698468ea26055d45824a6bc267dc2226",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=bbb33d6431d13a0ae244ab2beca506126a6430e7",
        "patch": "@@ -212,7 +212,8 @@ void TestGUI(interfaces::Node& node)\n     // Check Request Payment button\n     ReceiveCoinsDialog receiveCoinsDialog(platformStyle.get());\n     receiveCoinsDialog.setModel(&walletModel);\n-    RecentRequestsTableModel* requestTableModel = walletModel.getRecentRequestsTableModel();\n+    RecentRequestsTableModel* requestTableModel = receiveCoinsDialog.recentRequestsTableModel();\n+    assert(requestTableModel);\n \n     // Label input\n     QLineEdit* labelInput = receiveCoinsDialog.findChild<QLineEdit*>(\"reqLabel\");"
      },
      {
        "sha": "90d03ec1738c31281b7209d7e7be9e6d17a21f10",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=bbb33d6431d13a0ae244ab2beca506126a6430e7",
        "patch": "@@ -13,7 +13,6 @@\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n #include <qt/paymentserver.h>\n-#include <qt/recentrequeststablemodel.h>\n #include <qt/sendcoinsdialog.h>\n #include <qt/transactiontablemodel.h>\n \n@@ -36,14 +35,12 @@\n WalletModel::WalletModel(std::unique_ptr<interfaces::Wallet> wallet, interfaces::Node& node, const PlatformStyle *platformStyle, OptionsModel *_optionsModel, QObject *parent) :\n     QObject(parent), m_wallet(std::move(wallet)), m_node(node), optionsModel(_optionsModel), addressTableModel(nullptr),\n     transactionTableModel(nullptr),\n-    recentRequestsTableModel(nullptr),\n     cachedEncryptionStatus(Unencrypted),\n     cachedNumBlocks(0)\n {\n     fHaveWatchOnly = m_wallet->haveWatchOnly();\n     addressTableModel = new AddressTableModel(this);\n     transactionTableModel = new TransactionTableModel(platformStyle, this);\n-    recentRequestsTableModel = new RecentRequestsTableModel(this);\n \n     subscribeToCoreSignals();\n }\n@@ -276,11 +273,6 @@ TransactionTableModel *WalletModel::getTransactionTableModel()\n     return transactionTableModel;\n }\n \n-RecentRequestsTableModel *WalletModel::getRecentRequestsTableModel()\n-{\n-    return recentRequestsTableModel;\n-}\n-\n WalletModel::EncryptionStatus WalletModel::getEncryptionStatus() const\n {\n     if(!m_wallet->isCrypted())"
      },
      {
        "sha": "3066ed611ae0be8ee39675d0156d30ec1cd45ec5",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbb33d6431d13a0ae244ab2beca506126a6430e7/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=bbb33d6431d13a0ae244ab2beca506126a6430e7",
        "patch": "@@ -26,7 +26,6 @@ enum class OutputType;\n class AddressTableModel;\n class OptionsModel;\n class PlatformStyle;\n-class RecentRequestsTableModel;\n class SendCoinsRecipient;\n class TransactionTableModel;\n class WalletModelTransaction;\n@@ -78,7 +77,6 @@ class WalletModel : public QObject\n     OptionsModel *getOptionsModel();\n     AddressTableModel *getAddressTableModel();\n     TransactionTableModel *getTransactionTableModel();\n-    RecentRequestsTableModel *getRecentRequestsTableModel();\n \n     EncryptionStatus getEncryptionStatus() const;\n \n@@ -172,7 +170,6 @@ class WalletModel : public QObject\n \n     AddressTableModel *addressTableModel;\n     TransactionTableModel *transactionTableModel;\n-    RecentRequestsTableModel *recentRequestsTableModel;\n \n     // Cache some values to be able to detect changes\n     interfaces::WalletBalances m_cached_balances;"
      },
      {
        "sha": "fbea48f2c35dd13dce94e9d0b97f4ef77125f600",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbb33d6431d13a0ae244ab2beca506126a6430e7/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbb33d6431d13a0ae244ab2beca506126a6430e7/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=bbb33d6431d13a0ae244ab2beca506126a6430e7",
        "patch": "@@ -14,7 +14,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"policy/fees -> txmempool -> policy/fees\"\n     \"qt/addresstablemodel -> qt/walletmodel -> qt/addresstablemodel\"\n     \"qt/bitcoingui -> qt/walletframe -> qt/bitcoingui\"\n-    \"qt/recentrequeststablemodel -> qt/walletmodel -> qt/recentrequeststablemodel\"\n     \"qt/sendcoinsdialog -> qt/walletmodel -> qt/sendcoinsdialog\"\n     \"qt/transactiontablemodel -> qt/walletmodel -> qt/transactiontablemodel\"\n     \"txmempool -> validation -> txmempool\""
      }
    ]
  },
  {
    "sha": "c461ea01564471b4c276e95e6210adf69464bf80",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDYxZWEwMTU2NDQ3MWI0YzI3NmU5NWU2MjEwYWRmNjk0NjRiZjgw",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:32:47Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:35:50Z"
      },
      "message": "gui: Pass client and wallet models to WalletView constructor",
      "tree": {
        "sha": "eb819686bb464c2c8d83050e986878de466c2ce2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb819686bb464c2c8d83050e986878de466c2ce2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c461ea01564471b4c276e95e6210adf69464bf80",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c461ea01564471b4c276e95e6210adf69464bf80",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c461ea01564471b4c276e95e6210adf69464bf80",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c461ea01564471b4c276e95e6210adf69464bf80/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbb33d6431d13a0ae244ab2beca506126a6430e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbb33d6431d13a0ae244ab2beca506126a6430e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbb33d6431d13a0ae244ab2beca506126a6430e7"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 16,
      "deletions": 14
    },
    "files": [
      {
        "sha": "9661ca483e10670308e348c6361b7d68339f3eab",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c461ea01564471b4c276e95e6210adf69464bf80/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c461ea01564471b4c276e95e6210adf69464bf80/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=c461ea01564471b4c276e95e6210adf69464bf80",
        "patch": "@@ -45,9 +45,7 @@ bool WalletFrame::addWallet(WalletModel *walletModel)\n \n     if (mapWalletViews.count(walletModel) > 0) return false;\n \n-    WalletView *walletView = new WalletView(platformStyle, this);\n-    walletView->setClientModel(clientModel);\n-    walletView->setWalletModel(walletModel);\n+    WalletView *walletView = new WalletView(clientModel, walletModel, platformStyle, this);\n     walletView->showOutOfSyncWarning(bOutOfSync);\n \n     WalletView* current_wallet_view = currentWalletView();"
      },
      {
        "sha": "ea43f6e51a835e255ebcaf592a1e329717dc83f0",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c461ea01564471b4c276e95e6210adf69464bf80/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c461ea01564471b4c276e95e6210adf69464bf80/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=c461ea01564471b4c276e95e6210adf69464bf80",
        "patch": "@@ -29,7 +29,7 @@\n #include <QPushButton>\n #include <QVBoxLayout>\n \n-WalletView::WalletView(const PlatformStyle *_platformStyle, QWidget *parent):\n+WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *_platformStyle, QWidget *parent):\n     QStackedWidget(parent),\n     clientModel(nullptr),\n     walletModel(nullptr),\n@@ -81,6 +81,9 @@ WalletView::WalletView(const PlatformStyle *_platformStyle, QWidget *parent):\n     connect(sendCoinsPage, &SendCoinsDialog::message, this, &WalletView::message);\n     // Pass through messages from transactionView\n     connect(transactionView, &TransactionView::message, this, &WalletView::message);\n+\n+    setClientModel(client_model);\n+    setWalletModel(wallet_model);\n }\n \n WalletView::~WalletView()"
      },
      {
        "sha": "7e07352db0c9a3b574de92f2665fd1f4e4b6808c",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c461ea01564471b4c276e95e6210adf69464bf80/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c461ea01564471b4c276e95e6210adf69464bf80/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=c461ea01564471b4c276e95e6210adf69464bf80",
        "patch": "@@ -35,19 +35,10 @@ class WalletView : public QStackedWidget\n     Q_OBJECT\n \n public:\n-    explicit WalletView(const PlatformStyle *platformStyle, QWidget *parent);\n+    explicit WalletView(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent);\n     ~WalletView();\n \n-    /** Set the client model.\n-        The client model represents the part of the core that communicates with the P2P network, and is wallet-agnostic.\n-    */\n-    void setClientModel(ClientModel *clientModel);\n     WalletModel *getWalletModel() { return walletModel; }\n-    /** Set the wallet model.\n-        The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending\n-        functionality.\n-    */\n-    void setWalletModel(WalletModel *walletModel);\n \n     bool handlePaymentRequest(const SendCoinsRecipient& recipient);\n \n@@ -69,6 +60,16 @@ class WalletView : public QStackedWidget\n     QProgressDialog *progressDialog;\n     const PlatformStyle *platformStyle;\n \n+    /** Set the client model.\n+        The client model represents the part of the core that communicates with the P2P network, and is wallet-agnostic.\n+    */\n+    void setClientModel(ClientModel *clientModel);\n+    /** Set the wallet model.\n+        The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending\n+        functionality.\n+    */\n+    void setWalletModel(WalletModel *walletModel);\n+\n public Q_SLOTS:\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();"
      }
    ]
  },
  {
    "sha": "a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWNmYzJmMTEzN2Q0ZTA0MzZjZmRiY2M3YThjOWI2NGNkYjcwY2Rj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:37:11Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:37:11Z"
      },
      "message": "gui: Pass wallet model to ReceiveCoinsDialog constructor",
      "tree": {
        "sha": "b0e75fc81299d42b7df9df8f5462b7034d1cd8dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0e75fc81299d42b7df9df8f5462b7034d1cd8dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c461ea01564471b4c276e95e6210adf69464bf80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c461ea01564471b4c276e95e6210adf69464bf80",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c461ea01564471b4c276e95e6210adf69464bf80"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "166e2a6ff907fcefa1c544f178dea03f2836b11e",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
        "patch": "@@ -20,7 +20,7 @@\n #include <QScrollBar>\n #include <QTextDocument>\n \n-ReceiveCoinsDialog::ReceiveCoinsDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n+ReceiveCoinsDialog::ReceiveCoinsDialog(WalletModel* wallet_model, const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::ReceiveCoinsDialog),\n     columnResizingFixer(nullptr),\n@@ -62,6 +62,8 @@ ReceiveCoinsDialog::ReceiveCoinsDialog(const PlatformStyle *_platformStyle, QWid\n     connect(copyAmountAction, &QAction::triggered, this, &ReceiveCoinsDialog::copyAmount);\n \n     connect(ui->clearButton, &QPushButton::clicked, this, &ReceiveCoinsDialog::clear);\n+\n+    setModel(wallet_model);\n }\n \n void ReceiveCoinsDialog::setModel(WalletModel *_model)"
      },
      {
        "sha": "9e48705c68f6056b0e30a25ebb48cb43105149e2",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
        "patch": "@@ -40,11 +40,9 @@ class ReceiveCoinsDialog : public QDialog\n         MINIMUM_COLUMN_WIDTH = 130\n     };\n \n-    explicit ReceiveCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    explicit ReceiveCoinsDialog(WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n     ~ReceiveCoinsDialog();\n \n-    void setModel(WalletModel *model);\n-\n     RecentRequestsTableModel* recentRequestsTableModel() const { return m_recent_requests_table_model; }\n \n public Q_SLOTS:\n@@ -63,6 +61,7 @@ public Q_SLOTS:\n     QMenu *contextMenu;\n     const PlatformStyle *platformStyle;\n \n+    void setModel(WalletModel *model);\n     QModelIndex selectedRow();\n     void copyColumnToClipboard(int column);\n     virtual void resizeEvent(QResizeEvent *event);"
      },
      {
        "sha": "d0bb139877c5f94244a8b8c14e050c9d960519d8",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
        "patch": "@@ -53,7 +53,7 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n     vbox->addLayout(hbox_buttons);\n     transactionsPage->setLayout(vbox);\n \n-    receiveCoinsPage = new ReceiveCoinsDialog(platformStyle);\n+    receiveCoinsPage = new ReceiveCoinsDialog(wallet_model, platformStyle);\n     sendCoinsPage = new SendCoinsDialog(platformStyle);\n \n     usedSendingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n@@ -105,7 +105,6 @@ void WalletView::setWalletModel(WalletModel *_walletModel)\n     // Put transaction list in tabs\n     transactionView->setModel(_walletModel);\n     overviewPage->setWalletModel(_walletModel);\n-    receiveCoinsPage->setModel(_walletModel);\n     sendCoinsPage->setModel(_walletModel);\n     usedReceivingAddressesPage->setModel(_walletModel ? _walletModel->getAddressTableModel() : nullptr);\n     usedSendingAddressesPage->setModel(_walletModel ? _walletModel->getAddressTableModel() : nullptr);"
      }
    ]
  },
  {
    "sha": "9c73fd91474c0db05c5712489bd71a37c5d706b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzczZmQ5MTQ3NGMwZGIwNWM1NzEyNDg5YmQ3MWEzN2M1ZDcwNmI2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:42:06Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:42:06Z"
      },
      "message": "gui: Drop ReceiveCoinsDialog::setModel",
      "tree": {
        "sha": "ac56eca6654122371e6f390e2ab569189787b30c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac56eca6654122371e6f390e2ab569189787b30c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c73fd91474c0db05c5712489bd71a37c5d706b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c73fd91474c0db05c5712489bd71a37c5d706b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c73fd91474c0db05c5712489bd71a37c5d706b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c73fd91474c0db05c5712489bd71a37c5d706b6/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9cfc2f1137d4e0436cfdbcc7a8c9b64cdb70cdc"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 34,
      "deletions": 46
    },
    "files": [
      {
        "sha": "5f1a436590943753f0fdd7bd44221be49fbf9b6d",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 44,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c73fd91474c0db05c5712489bd71a37c5d706b6/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c73fd91474c0db05c5712489bd71a37c5d706b6/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=9c73fd91474c0db05c5712489bd71a37c5d706b6",
        "patch": "@@ -24,7 +24,7 @@ ReceiveCoinsDialog::ReceiveCoinsDialog(WalletModel* wallet_model, const Platform\n     QDialog(parent),\n     ui(new Ui::ReceiveCoinsDialog),\n     columnResizingFixer(nullptr),\n-    model(nullptr),\n+    model(wallet_model),\n     platformStyle(_platformStyle)\n {\n     ui->setupUi(this);\n@@ -63,53 +63,42 @@ ReceiveCoinsDialog::ReceiveCoinsDialog(WalletModel* wallet_model, const Platform\n \n     connect(ui->clearButton, &QPushButton::clicked, this, &ReceiveCoinsDialog::clear);\n \n-    setModel(wallet_model);\n-}\n+    m_recent_requests_table_model = new RecentRequestsTableModel(model);\n+    m_recent_requests_table_model->sort(RecentRequestsTableModel::Date, Qt::DescendingOrder);\n+    connect(model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &ReceiveCoinsDialog::updateDisplayUnit);\n+    updateDisplayUnit();\n \n-void ReceiveCoinsDialog::setModel(WalletModel *_model)\n-{\n-    this->model = _model;\n+    QTableView* tableView = ui->recentRequestsView;\n+\n+    tableView->verticalHeader()->hide();\n+    tableView->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n+    tableView->setModel(m_recent_requests_table_model);\n+    tableView->setAlternatingRowColors(true);\n+    tableView->setSelectionBehavior(QAbstractItemView::SelectRows);\n+    tableView->setSelectionMode(QAbstractItemView::ContiguousSelection);\n+    tableView->setColumnWidth(RecentRequestsTableModel::Date, DATE_COLUMN_WIDTH);\n+    tableView->setColumnWidth(RecentRequestsTableModel::Label, LABEL_COLUMN_WIDTH);\n+    tableView->setColumnWidth(RecentRequestsTableModel::Amount, AMOUNT_MINIMUM_COLUMN_WIDTH);\n+\n+    connect(tableView->selectionModel(),\n+        &QItemSelectionModel::selectionChanged, this,\n+        &ReceiveCoinsDialog::recentRequestsView_selectionChanged);\n+    // Last 2 columns are set by the columnResizingFixer, when the table geometry is ready.\n+    columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(tableView, AMOUNT_MINIMUM_COLUMN_WIDTH, DATE_COLUMN_WIDTH, this);\n+\n+    if (model->wallet().getDefaultAddressType() == OutputType::BECH32) {\n+        ui->useBech32->setCheckState(Qt::Checked);\n+    } else {\n+        ui->useBech32->setCheckState(Qt::Unchecked);\n+    }\n \n-    if(_model && _model->getOptionsModel())\n-    {\n-        assert(m_recent_requests_table_model == nullptr);\n-        m_recent_requests_table_model = new RecentRequestsTableModel(_model);\n-        m_recent_requests_table_model->sort(RecentRequestsTableModel::Date, Qt::DescendingOrder);\n-        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &ReceiveCoinsDialog::updateDisplayUnit);\n-        updateDisplayUnit();\n-\n-        QTableView* tableView = ui->recentRequestsView;\n-\n-        tableView->verticalHeader()->hide();\n-        tableView->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n-        tableView->setModel(m_recent_requests_table_model);\n-        tableView->setAlternatingRowColors(true);\n-        tableView->setSelectionBehavior(QAbstractItemView::SelectRows);\n-        tableView->setSelectionMode(QAbstractItemView::ContiguousSelection);\n-        tableView->setColumnWidth(RecentRequestsTableModel::Date, DATE_COLUMN_WIDTH);\n-        tableView->setColumnWidth(RecentRequestsTableModel::Label, LABEL_COLUMN_WIDTH);\n-        tableView->setColumnWidth(RecentRequestsTableModel::Amount, AMOUNT_MINIMUM_COLUMN_WIDTH);\n-\n-        connect(tableView->selectionModel(),\n-            &QItemSelectionModel::selectionChanged, this,\n-            &ReceiveCoinsDialog::recentRequestsView_selectionChanged);\n-        // Last 2 columns are set by the columnResizingFixer, when the table geometry is ready.\n-        columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(tableView, AMOUNT_MINIMUM_COLUMN_WIDTH, DATE_COLUMN_WIDTH, this);\n-\n-        if (model->wallet().getDefaultAddressType() == OutputType::BECH32) {\n-            ui->useBech32->setCheckState(Qt::Checked);\n-        } else {\n-            ui->useBech32->setCheckState(Qt::Unchecked);\n-        }\n+    // Set the button to be enabled or disabled based on whether the wallet can give out new addresses.\n+    ui->receiveButton->setEnabled(model->canGetAddresses());\n \n-        // Set the button to be enabled or disabled based on whether the wallet can give out new addresses.\n+    // Enable/disable the receive button if the wallet is now able/unable to give out new addresses.\n+    connect(model, &WalletModel::canGetAddressesChanged, [this] {\n         ui->receiveButton->setEnabled(model->canGetAddresses());\n-\n-        // Enable/disable the receive button if the wallet is now able/unable to give out new addresses.\n-        connect(model, &WalletModel::canGetAddressesChanged, [this] {\n-            ui->receiveButton->setEnabled(model->canGetAddresses());\n-        });\n-    }\n+    });\n }\n \n ReceiveCoinsDialog::~ReceiveCoinsDialog()"
      },
      {
        "sha": "49b4ee15507512706f719aa89f486b941b5e115b",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c73fd91474c0db05c5712489bd71a37c5d706b6/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c73fd91474c0db05c5712489bd71a37c5d706b6/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=9c73fd91474c0db05c5712489bd71a37c5d706b6",
        "patch": "@@ -56,12 +56,11 @@ public Q_SLOTS:\n private:\n     Ui::ReceiveCoinsDialog *ui;\n     GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;\n-    WalletModel *model;\n+    WalletModel* const model;\n     RecentRequestsTableModel* m_recent_requests_table_model{nullptr};\n     QMenu *contextMenu;\n     const PlatformStyle *platformStyle;\n \n-    void setModel(WalletModel *model);\n     QModelIndex selectedRow();\n     void copyColumnToClipboard(int column);\n     virtual void resizeEvent(QResizeEvent *event);"
      }
    ]
  },
  {
    "sha": "6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWI0OTlkODlhMWJkZjEyN2MwY2JkZDk1MzE1YmJkMjI2NjkyYzZh",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:51:28Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:51:28Z"
      },
      "message": "gui: Pass client and wallet models to SendCoinsDialog constructor",
      "tree": {
        "sha": "780f626f99dd85709330f5fc83d0bcbedd9be274",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/780f626f99dd85709330f5fc83d0bcbedd9be274"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ab499d89a1bdf127c0cbdd95315bbd226692c6a/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c73fd91474c0db05c5712489bd71a37c5d706b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c73fd91474c0db05c5712489bd71a37c5d706b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c73fd91474c0db05c5712489bd71a37c5d706b6"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "cc1b77c9202f943ef5b5aee3353bf7df259d727d",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ab499d89a1bdf127c0cbdd95315bbd226692c6a/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ab499d89a1bdf127c0cbdd95315bbd226692c6a/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
        "patch": "@@ -53,7 +53,7 @@ int getIndexForConfTarget(int target) {\n     return confTargets.size() - 1;\n }\n \n-SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n+SendCoinsDialog::SendCoinsDialog(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::SendCoinsDialog),\n     clientModel(nullptr),\n@@ -127,6 +127,9 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n     ui->customFee->SetAllowEmpty(false);\n     ui->customFee->setValue(settings.value(\"nTransactionFee\").toLongLong());\n     minimizeFeeSection(settings.value(\"fFeeSectionMinimized\").toBool());\n+\n+    setClientModel(client_model);\n+    setModel(wallet_model);\n }\n \n void SendCoinsDialog::setClientModel(ClientModel *_clientModel)"
      },
      {
        "sha": "3ecd42c0c2356290036e42159d5847ad13706581",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ab499d89a1bdf127c0cbdd95315bbd226692c6a/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ab499d89a1bdf127c0cbdd95315bbd226692c6a/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
        "patch": "@@ -31,12 +31,9 @@ class SendCoinsDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit SendCoinsDialog(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    explicit SendCoinsDialog(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n     ~SendCoinsDialog();\n \n-    void setClientModel(ClientModel *clientModel);\n-    void setModel(WalletModel *model);\n-\n     /** Set up the tab chain manually, as Qt messes up the tab chain by default in some cases (issue https://bugreports.qt-project.org/browse/QTBUG-10907).\n      */\n     QWidget *setupTabChain(QWidget *prev);\n@@ -72,6 +69,9 @@ public Q_SLOTS:\n     void updateFeeMinimizedLabel();\n     // Update the passed in CCoinControl with state from the GUI\n     void updateCoinControlState(CCoinControl& ctrl);\n+    void setClientModel(ClientModel *clientModel);\n+    void setModel(WalletModel *model);\n+\n \n private Q_SLOTS:\n     void on_sendButton_clicked();"
      },
      {
        "sha": "c18494bc8e5a1c03b7eeab66505ffb8dc0b9f33a",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ab499d89a1bdf127c0cbdd95315bbd226692c6a/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ab499d89a1bdf127c0cbdd95315bbd226692c6a/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
        "patch": "@@ -54,7 +54,7 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n     transactionsPage->setLayout(vbox);\n \n     receiveCoinsPage = new ReceiveCoinsDialog(wallet_model, platformStyle);\n-    sendCoinsPage = new SendCoinsDialog(platformStyle);\n+    sendCoinsPage = new SendCoinsDialog(client_model, wallet_model, platformStyle);\n \n     usedSendingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n     usedReceivingAddressesPage = new AddressBookPage(platformStyle, AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n@@ -95,7 +95,6 @@ void WalletView::setClientModel(ClientModel *_clientModel)\n     this->clientModel = _clientModel;\n \n     overviewPage->setClientModel(_clientModel);\n-    sendCoinsPage->setClientModel(_clientModel);\n }\n \n void WalletView::setWalletModel(WalletModel *_walletModel)\n@@ -105,7 +104,6 @@ void WalletView::setWalletModel(WalletModel *_walletModel)\n     // Put transaction list in tabs\n     transactionView->setModel(_walletModel);\n     overviewPage->setWalletModel(_walletModel);\n-    sendCoinsPage->setModel(_walletModel);\n     usedReceivingAddressesPage->setModel(_walletModel ? _walletModel->getAddressTableModel() : nullptr);\n     usedSendingAddressesPage->setModel(_walletModel ? _walletModel->getAddressTableModel() : nullptr);\n "
      }
    ]
  },
  {
    "sha": "845bb528db3850121abee1c53e687a7d3c889eab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDViYjUyOGRiMzg1MDEyMWFiZWUxYzUzZTY4N2E3ZDNjODg5ZWFi",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T01:54:26Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T08:12:29Z"
      },
      "message": "gui: Drop setClientModel and setModel from SendCoinsDialog",
      "tree": {
        "sha": "8915948481fa48d91a4fcb88d2d27e7f50219156",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8915948481fa48d91a4fcb88d2d27e7f50219156"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/845bb528db3850121abee1c53e687a7d3c889eab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/845bb528db3850121abee1c53e687a7d3c889eab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/845bb528db3850121abee1c53e687a7d3c889eab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/845bb528db3850121abee1c53e687a7d3c889eab/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ab499d89a1bdf127c0cbdd95315bbd226692c6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ab499d89a1bdf127c0cbdd95315bbd226692c6a"
      }
    ],
    "stats": {
      "total": 131,
      "additions": 54,
      "deletions": 77
    },
    "files": [
      {
        "sha": "eea146932d7c7d06084b360122dca7d2ede6d0d9",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 74,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/845bb528db3850121abee1c53e687a7d3c889eab/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/845bb528db3850121abee1c53e687a7d3c889eab/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=845bb528db3850121abee1c53e687a7d3c889eab",
        "patch": "@@ -56,8 +56,8 @@ int getIndexForConfTarget(int target) {\n SendCoinsDialog::SendCoinsDialog(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::SendCoinsDialog),\n-    clientModel(nullptr),\n-    model(nullptr),\n+    clientModel(client_model),\n+    model(wallet_model),\n     fNewRecipientAllowed(true),\n     fFeeMinimized(true),\n     platformStyle(_platformStyle)\n@@ -128,88 +128,68 @@ SendCoinsDialog::SendCoinsDialog(ClientModel* client_model, WalletModel* wallet_\n     ui->customFee->setValue(settings.value(\"nTransactionFee\").toLongLong());\n     minimizeFeeSection(settings.value(\"fFeeSectionMinimized\").toBool());\n \n-    setClientModel(client_model);\n-    setModel(wallet_model);\n-}\n-\n-void SendCoinsDialog::setClientModel(ClientModel *_clientModel)\n-{\n-    this->clientModel = _clientModel;\n-\n-    if (_clientModel) {\n-        connect(_clientModel, &ClientModel::numBlocksChanged, this, &SendCoinsDialog::updateSmartFeeLabel);\n-    }\n-}\n-\n-void SendCoinsDialog::setModel(WalletModel *_model)\n-{\n-    this->model = _model;\n-\n-    if(_model && _model->getOptionsModel())\n+    connect(clientModel, &ClientModel::numBlocksChanged, this, &SendCoinsDialog::updateSmartFeeLabel);\n+    for(int i = 0; i < ui->entries->count(); ++i)\n     {\n-        for(int i = 0; i < ui->entries->count(); ++i)\n+        SendCoinsEntry *entry = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n+        if(entry)\n         {\n-            SendCoinsEntry *entry = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n-            if(entry)\n-            {\n-                entry->setModel(_model);\n-            }\n+            entry->setModel(model);\n         }\n+    }\n \n-        interfaces::WalletBalances balances = _model->wallet().getBalances();\n-        setBalance(balances);\n-        connect(_model, &WalletModel::balanceChanged, this, &SendCoinsDialog::setBalance);\n-        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsDialog::updateDisplayUnit);\n-        updateDisplayUnit();\n+    interfaces::WalletBalances balances = model->wallet().getBalances();\n+    setBalance(balances);\n+    connect(model, &WalletModel::balanceChanged, this, &SendCoinsDialog::setBalance);\n+    connect(model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsDialog::updateDisplayUnit);\n+    updateDisplayUnit();\n \n-        // Coin Control\n-        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n-        connect(_model->getOptionsModel(), &OptionsModel::coinControlFeaturesChanged, this, &SendCoinsDialog::coinControlFeatureChanged);\n-        ui->frameCoinControl->setVisible(_model->getOptionsModel()->getCoinControlFeatures());\n-        coinControlUpdateLabels();\n+    // Coin Control\n+    connect(model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n+    connect(model->getOptionsModel(), &OptionsModel::coinControlFeaturesChanged, this, &SendCoinsDialog::coinControlFeatureChanged);\n+    ui->frameCoinControl->setVisible(model->getOptionsModel()->getCoinControlFeatures());\n+    coinControlUpdateLabels();\n \n-        // fee section\n-        for (const int n : confTargets) {\n-            ui->confTargetSelector->addItem(tr(\"%1 (%2 blocks)\").arg(GUIUtil::formatNiceTimeOffset(n*Params().GetConsensus().nPowTargetSpacing)).arg(n));\n-        }\n-        connect(ui->confTargetSelector, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &SendCoinsDialog::updateSmartFeeLabel);\n-        connect(ui->confTargetSelector, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &SendCoinsDialog::coinControlUpdateLabels);\n-        connect(ui->groupFee, static_cast<void (QButtonGroup::*)(int)>(&QButtonGroup::buttonClicked), this, &SendCoinsDialog::updateFeeSectionControls);\n-        connect(ui->groupFee, static_cast<void (QButtonGroup::*)(int)>(&QButtonGroup::buttonClicked), this, &SendCoinsDialog::coinControlUpdateLabels);\n-        connect(ui->customFee, &BitcoinAmountField::valueChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n-        connect(ui->optInRBF, &QCheckBox::stateChanged, this, &SendCoinsDialog::updateSmartFeeLabel);\n-        connect(ui->optInRBF, &QCheckBox::stateChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n-        CAmount requiredFee = model->wallet().getRequiredFee(1000);\n-        ui->customFee->SetMinValue(requiredFee);\n-        if (ui->customFee->value() < requiredFee) {\n-            ui->customFee->setValue(requiredFee);\n-        }\n-        ui->customFee->setSingleStep(requiredFee);\n-        updateFeeSectionControls();\n-        updateSmartFeeLabel();\n+    // fee section\n+    for (const int n : confTargets) {\n+        ui->confTargetSelector->addItem(tr(\"%1 (%2 blocks)\").arg(GUIUtil::formatNiceTimeOffset(n*Params().GetConsensus().nPowTargetSpacing)).arg(n));\n+    }\n+    connect(ui->confTargetSelector, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &SendCoinsDialog::updateSmartFeeLabel);\n+    connect(ui->confTargetSelector, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &SendCoinsDialog::coinControlUpdateLabels);\n+    connect(ui->groupFee, static_cast<void (QButtonGroup::*)(int)>(&QButtonGroup::buttonClicked), this, &SendCoinsDialog::updateFeeSectionControls);\n+    connect(ui->groupFee, static_cast<void (QButtonGroup::*)(int)>(&QButtonGroup::buttonClicked), this, &SendCoinsDialog::coinControlUpdateLabels);\n+    connect(ui->customFee, &BitcoinAmountField::valueChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n+    connect(ui->optInRBF, &QCheckBox::stateChanged, this, &SendCoinsDialog::updateSmartFeeLabel);\n+    connect(ui->optInRBF, &QCheckBox::stateChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n+    CAmount requiredFee = model->wallet().getRequiredFee(1000);\n+    ui->customFee->SetMinValue(requiredFee);\n+    if (ui->customFee->value() < requiredFee) {\n+        ui->customFee->setValue(requiredFee);\n+    }\n+    ui->customFee->setSingleStep(requiredFee);\n+    updateFeeSectionControls();\n+    updateSmartFeeLabel();\n \n-        // set default rbf checkbox state\n-        ui->optInRBF->setCheckState(Qt::Checked);\n+    // set default rbf checkbox state\n+    ui->optInRBF->setCheckState(Qt::Checked);\n \n-        if (model->privateKeysDisabled()) {\n-            ui->sendButton->setText(tr(\"Cr&eate Unsigned\"));\n-            ui->sendButton->setToolTip(tr(\"Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n-        }\n+    if (model->privateKeysDisabled()) {\n+        ui->sendButton->setText(tr(\"Cr&eate Unsigned\"));\n+        ui->sendButton->setToolTip(tr(\"Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n+    }\n \n-        // set the smartfee-sliders default value (wallets default conf.target or last stored value)\n-        QSettings settings;\n-        if (settings.value(\"nSmartFeeSliderPosition\").toInt() != 0) {\n-            // migrate nSmartFeeSliderPosition to nConfTarget\n-            // nConfTarget is available since 0.15 (replaced nSmartFeeSliderPosition)\n-            int nConfirmTarget = 25 - settings.value(\"nSmartFeeSliderPosition\").toInt(); // 25 == old slider range\n-            settings.setValue(\"nConfTarget\", nConfirmTarget);\n-            settings.remove(\"nSmartFeeSliderPosition\");\n-        }\n-        if (settings.value(\"nConfTarget\").toInt() == 0)\n-            ui->confTargetSelector->setCurrentIndex(getIndexForConfTarget(model->wallet().getConfirmTarget()));\n-        else\n-            ui->confTargetSelector->setCurrentIndex(getIndexForConfTarget(settings.value(\"nConfTarget\").toInt()));\n+    // set the smartfee-sliders default value (wallets default conf.target or last stored value)\n+    if (settings.value(\"nSmartFeeSliderPosition\").toInt() != 0) {\n+        // migrate nSmartFeeSliderPosition to nConfTarget\n+        // nConfTarget is available since 0.15 (replaced nSmartFeeSliderPosition)\n+        int nConfirmTarget = 25 - settings.value(\"nSmartFeeSliderPosition\").toInt(); // 25 == old slider range\n+        settings.setValue(\"nConfTarget\", nConfirmTarget);\n+        settings.remove(\"nSmartFeeSliderPosition\");\n     }\n+    if (settings.value(\"nConfTarget\").toInt() == 0)\n+        ui->confTargetSelector->setCurrentIndex(getIndexForConfTarget(model->wallet().getConfirmTarget()));\n+    else\n+        ui->confTargetSelector->setCurrentIndex(getIndexForConfTarget(settings.value(\"nConfTarget\").toInt()));\n }\n \n SendCoinsDialog::~SendCoinsDialog()"
      },
      {
        "sha": "207cbcaa046bdcd362da70f279ec8e198b6fd803",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/845bb528db3850121abee1c53e687a7d3c889eab/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/845bb528db3850121abee1c53e687a7d3c889eab/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=845bb528db3850121abee1c53e687a7d3c889eab",
        "patch": "@@ -69,9 +69,6 @@ public Q_SLOTS:\n     void updateFeeMinimizedLabel();\n     // Update the passed in CCoinControl with state from the GUI\n     void updateCoinControlState(CCoinControl& ctrl);\n-    void setClientModel(ClientModel *clientModel);\n-    void setModel(WalletModel *model);\n-\n \n private Q_SLOTS:\n     void on_sendButton_clicked();"
      }
    ]
  },
  {
    "sha": "7dd43be812f4f081747356997b0754e8da41cb4b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGQ0M2JlODEyZjRmMDgxNzQ3MzU2OTk3YjA3NTRlOGRhNDFjYjRi",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T02:04:01Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T21:48:55Z"
      },
      "message": "gui: Drop setClientModel from WalletView",
      "tree": {
        "sha": "3b781fce6eea6c9f0ef90abbbe9faf1fefd65711",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b781fce6eea6c9f0ef90abbbe9faf1fefd65711"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7dd43be812f4f081747356997b0754e8da41cb4b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dd43be812f4f081747356997b0754e8da41cb4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7dd43be812f4f081747356997b0754e8da41cb4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dd43be812f4f081747356997b0754e8da41cb4b/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "845bb528db3850121abee1c53e687a7d3c889eab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/845bb528db3850121abee1c53e687a7d3c889eab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/845bb528db3850121abee1c53e687a7d3c889eab"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 12,
      "deletions": 18
    },
    "files": [
      {
        "sha": "cef66752eac9d6e540313138808bba9379b0ddbe",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dd43be812f4f081747356997b0754e8da41cb4b/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dd43be812f4f081747356997b0754e8da41cb4b/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=7dd43be812f4f081747356997b0754e8da41cb4b",
        "patch": "@@ -110,7 +110,7 @@ class TxViewDelegate : public QAbstractItemDelegate\n };\n #include <qt/overviewpage.moc>\n \n-OverviewPage::OverviewPage(const PlatformStyle *platformStyle, QWidget *parent) :\n+OverviewPage::OverviewPage(ClientModel* client_model, const PlatformStyle *platformStyle, QWidget *parent) :\n     QWidget(parent),\n     ui(new Ui::OverviewPage),\n     clientModel(nullptr),\n@@ -139,6 +139,8 @@ OverviewPage::OverviewPage(const PlatformStyle *platformStyle, QWidget *parent)\n     showOutOfSyncWarning(true);\n     connect(ui->labelWalletStatus, &QPushButton::clicked, this, &OverviewPage::handleOutOfSyncWarningClicks);\n     connect(ui->labelTransactionsStatus, &QPushButton::clicked, this, &OverviewPage::handleOutOfSyncWarningClicks);\n+\n+    setClientModel(client_model);\n }\n \n void OverviewPage::handleTransactionClicked(const QModelIndex &index)"
      },
      {
        "sha": "60e4e9c12115e2532925f524d3f4c9894e0cc96b",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dd43be812f4f081747356997b0754e8da41cb4b/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dd43be812f4f081747356997b0754e8da41cb4b/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=7dd43be812f4f081747356997b0754e8da41cb4b",
        "patch": "@@ -30,13 +30,15 @@ class OverviewPage : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit OverviewPage(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    explicit OverviewPage(ClientModel* client_model, const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n     ~OverviewPage();\n \n-    void setClientModel(ClientModel *clientModel);\n     void setWalletModel(WalletModel *walletModel);\n     void showOutOfSyncWarning(bool fShow);\n \n+private:\n+    void setClientModel(ClientModel *clientModel);\n+\n public Q_SLOTS:\n     void setBalance(const interfaces::WalletBalances& balances);\n "
      },
      {
        "sha": "6b9252743a4e5788f7717b02e7b876897f44d904",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dd43be812f4f081747356997b0754e8da41cb4b/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dd43be812f4f081747356997b0754e8da41cb4b/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=7dd43be812f4f081747356997b0754e8da41cb4b",
        "patch": "@@ -31,12 +31,12 @@\n \n WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *_platformStyle, QWidget *parent):\n     QStackedWidget(parent),\n-    clientModel(nullptr),\n+    clientModel(client_model),\n     walletModel(nullptr),\n     platformStyle(_platformStyle)\n {\n     // Create tabs\n-    overviewPage = new OverviewPage(platformStyle);\n+    overviewPage = new OverviewPage(client_model, platformStyle);\n \n     transactionsPage = new QWidget(this);\n     QVBoxLayout *vbox = new QVBoxLayout();\n@@ -82,19 +82,13 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n     // Pass through messages from transactionView\n     connect(transactionView, &TransactionView::message, this, &WalletView::message);\n \n-    setClientModel(client_model);\n     setWalletModel(wallet_model);\n-}\n \n-WalletView::~WalletView()\n-{\n+    overviewPage->setClientModel(clientModel);\n }\n \n-void WalletView::setClientModel(ClientModel *_clientModel)\n+WalletView::~WalletView()\n {\n-    this->clientModel = _clientModel;\n-\n-    overviewPage->setClientModel(_clientModel);\n }\n \n void WalletView::setWalletModel(WalletModel *_walletModel)"
      },
      {
        "sha": "7bb1152bccc4d3b5542c38e260a53e8fc2c53cf8",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dd43be812f4f081747356997b0754e8da41cb4b/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dd43be812f4f081747356997b0754e8da41cb4b/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=7dd43be812f4f081747356997b0754e8da41cb4b",
        "patch": "@@ -45,7 +45,7 @@ class WalletView : public QStackedWidget\n     void showOutOfSyncWarning(bool fShow);\n \n private:\n-    ClientModel *clientModel;\n+    ClientModel* const clientModel;\n     WalletModel *walletModel;\n \n     OverviewPage *overviewPage;\n@@ -60,10 +60,6 @@ class WalletView : public QStackedWidget\n     QProgressDialog *progressDialog;\n     const PlatformStyle *platformStyle;\n \n-    /** Set the client model.\n-        The client model represents the part of the core that communicates with the P2P network, and is wallet-agnostic.\n-    */\n-    void setClientModel(ClientModel *clientModel);\n     /** Set the wallet model.\n         The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending\n         functionality."
      }
    ]
  },
  {
    "sha": "2985a9774f3661502eefb9c592a148fd7c529860",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTg1YTk3NzRmMzY2MTUwMmVlZmI5YzU5MmExNDhmZDdjNTI5ODYw",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T21:47:44Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T21:51:44Z"
      },
      "message": "gui: Drop setWalletModel from WalletView",
      "tree": {
        "sha": "baf4d7be1374d77b55b5494ec76890880980ca1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/baf4d7be1374d77b55b5494ec76890880980ca1d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2985a9774f3661502eefb9c592a148fd7c529860",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2985a9774f3661502eefb9c592a148fd7c529860",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2985a9774f3661502eefb9c592a148fd7c529860",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2985a9774f3661502eefb9c592a148fd7c529860/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7dd43be812f4f081747356997b0754e8da41cb4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dd43be812f4f081747356997b0754e8da41cb4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7dd43be812f4f081747356997b0754e8da41cb4b"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 24,
      "deletions": 40
    },
    "files": [
      {
        "sha": "50d52e912ed32068accc01e950e0b3b2eac516fb",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 33,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2985a9774f3661502eefb9c592a148fd7c529860/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2985a9774f3661502eefb9c592a148fd7c529860/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=2985a9774f3661502eefb9c592a148fd7c529860",
        "patch": "@@ -32,7 +32,7 @@\n WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *_platformStyle, QWidget *parent):\n     QStackedWidget(parent),\n     clientModel(client_model),\n-    walletModel(nullptr),\n+    walletModel(wallet_model),\n     platformStyle(_platformStyle)\n {\n     // Create tabs\n@@ -82,46 +82,36 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n     // Pass through messages from transactionView\n     connect(transactionView, &TransactionView::message, this, &WalletView::message);\n \n-    setWalletModel(wallet_model);\n-\n-    overviewPage->setClientModel(clientModel);\n-}\n-\n-WalletView::~WalletView()\n-{\n-}\n+    // Put transaction list in tabs\n+    transactionView->setModel(walletModel);\n+    overviewPage->setWalletModel(walletModel);\n+    usedReceivingAddressesPage->setModel(walletModel->getAddressTableModel());\n+    usedSendingAddressesPage->setModel(walletModel->getAddressTableModel());\n \n-void WalletView::setWalletModel(WalletModel *_walletModel)\n-{\n-    this->walletModel = _walletModel;\n+    // Receive and pass through messages from wallet model\n+    connect(walletModel, &WalletModel::message, this, &WalletView::message);\n \n-    // Put transaction list in tabs\n-    transactionView->setModel(_walletModel);\n-    overviewPage->setWalletModel(_walletModel);\n-    usedReceivingAddressesPage->setModel(_walletModel ? _walletModel->getAddressTableModel() : nullptr);\n-    usedSendingAddressesPage->setModel(_walletModel ? _walletModel->getAddressTableModel() : nullptr);\n+    // Handle changes in encryption status\n+    connect(walletModel, &WalletModel::encryptionStatusChanged, this, &WalletView::encryptionStatusChanged);\n+    updateEncryptionStatus();\n \n-    if (_walletModel)\n-    {\n-        // Receive and pass through messages from wallet model\n-        connect(_walletModel, &WalletModel::message, this, &WalletView::message);\n+    // update HD status\n+    Q_EMIT hdEnabledStatusChanged();\n \n-        // Handle changes in encryption status\n-        connect(_walletModel, &WalletModel::encryptionStatusChanged, this, &WalletView::encryptionStatusChanged);\n-        updateEncryptionStatus();\n+    // Balloon pop-up for new transaction\n+    connect(walletModel->getTransactionTableModel(), &TransactionTableModel::rowsInserted, this, &WalletView::processNewTransaction);\n \n-        // update HD status\n-        Q_EMIT hdEnabledStatusChanged();\n+    // Ask for passphrase if needed\n+    connect(walletModel, &WalletModel::requireUnlock, this, &WalletView::unlockWallet);\n \n-        // Balloon pop-up for new transaction\n-        connect(_walletModel->getTransactionTableModel(), &TransactionTableModel::rowsInserted, this, &WalletView::processNewTransaction);\n+    // Show progress dialog\n+    connect(walletModel, &WalletModel::showProgress, this, &WalletView::showProgress);\n \n-        // Ask for passphrase if needed\n-        connect(_walletModel, &WalletModel::requireUnlock, this, &WalletView::unlockWallet);\n+    overviewPage->setClientModel(clientModel);\n+}\n \n-        // Show progress dialog\n-        connect(_walletModel, &WalletModel::showProgress, this, &WalletView::showProgress);\n-    }\n+WalletView::~WalletView()\n+{\n }\n \n void WalletView::processNewTransaction(const QModelIndex& parent, int start, int /*end*/)"
      },
      {
        "sha": "35d00ffb0aa9df910ab14a9398f7bd8280d1ed97",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2985a9774f3661502eefb9c592a148fd7c529860/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2985a9774f3661502eefb9c592a148fd7c529860/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=2985a9774f3661502eefb9c592a148fd7c529860",
        "patch": "@@ -46,7 +46,7 @@ class WalletView : public QStackedWidget\n \n private:\n     ClientModel* const clientModel;\n-    WalletModel *walletModel;\n+    WalletModel* const walletModel;\n \n     OverviewPage *overviewPage;\n     QWidget *transactionsPage;\n@@ -60,12 +60,6 @@ class WalletView : public QStackedWidget\n     QProgressDialog *progressDialog;\n     const PlatformStyle *platformStyle;\n \n-    /** Set the wallet model.\n-        The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending\n-        functionality.\n-    */\n-    void setWalletModel(WalletModel *walletModel);\n-\n public Q_SLOTS:\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();"
      }
    ]
  },
  {
    "sha": "b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWRhYWNhOGUwNDBiYmRiYmE3ZTZkYmRhZjVhMmI0YjMyMTc3Yjdm",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T08:12:14Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T21:53:54Z"
      },
      "message": "gui: Drop setClientModel from OverviewPage",
      "tree": {
        "sha": "209316b79dcc7a38d6d428a0ecd5716d2c8647c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/209316b79dcc7a38d6d428a0ecd5716d2c8647c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2985a9774f3661502eefb9c592a148fd7c529860",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2985a9774f3661502eefb9c592a148fd7c529860",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2985a9774f3661502eefb9c592a148fd7c529860"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 5,
      "deletions": 18
    },
    "files": [
      {
        "sha": "0e58a053898b3cc3bd7e52a4b909fb9eaf1c87eb",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 12,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
        "patch": "@@ -113,7 +113,7 @@ class TxViewDelegate : public QAbstractItemDelegate\n OverviewPage::OverviewPage(ClientModel* client_model, const PlatformStyle *platformStyle, QWidget *parent) :\n     QWidget(parent),\n     ui(new Ui::OverviewPage),\n-    clientModel(nullptr),\n+    clientModel(client_model),\n     walletModel(nullptr),\n     txdelegate(new TxViewDelegate(platformStyle, this))\n {\n@@ -140,7 +140,9 @@ OverviewPage::OverviewPage(ClientModel* client_model, const PlatformStyle *platf\n     connect(ui->labelWalletStatus, &QPushButton::clicked, this, &OverviewPage::handleOutOfSyncWarningClicks);\n     connect(ui->labelTransactionsStatus, &QPushButton::clicked, this, &OverviewPage::handleOutOfSyncWarningClicks);\n \n-    setClientModel(client_model);\n+    // Show warning, for example if this is a prerelease version\n+    connect(clientModel, &ClientModel::alertsChanged, this, &OverviewPage::updateAlerts);\n+    updateAlerts(clientModel->getStatusBarWarnings());\n }\n \n void OverviewPage::handleTransactionClicked(const QModelIndex &index)\n@@ -203,16 +205,6 @@ void OverviewPage::updateWatchOnlyLabels(bool showWatchOnly)\n         ui->labelWatchImmature->hide();\n }\n \n-void OverviewPage::setClientModel(ClientModel *model)\n-{\n-    this->clientModel = model;\n-    if (model) {\n-        // Show warning, for example if this is a prerelease version\n-        connect(model, &ClientModel::alertsChanged, this, &OverviewPage::updateAlerts);\n-        updateAlerts(model->getStatusBarWarnings());\n-    }\n-}\n-\n void OverviewPage::setWalletModel(WalletModel *model)\n {\n     this->walletModel = model;"
      },
      {
        "sha": "64e4f1fd66ec4411f0652e8fed31302295cf8af5",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
        "patch": "@@ -36,9 +36,6 @@ class OverviewPage : public QWidget\n     void setWalletModel(WalletModel *walletModel);\n     void showOutOfSyncWarning(bool fShow);\n \n-private:\n-    void setClientModel(ClientModel *clientModel);\n-\n public Q_SLOTS:\n     void setBalance(const interfaces::WalletBalances& balances);\n \n@@ -48,7 +45,7 @@ public Q_SLOTS:\n \n private:\n     Ui::OverviewPage *ui;\n-    ClientModel *clientModel;\n+    ClientModel* const clientModel;\n     WalletModel *walletModel;\n     interfaces::WalletBalances m_balances;\n "
      },
      {
        "sha": "0b6f09eace1cd38c03a1d4a626d3fbb09b6aad3e",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
        "patch": "@@ -106,8 +106,6 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n \n     // Show progress dialog\n     connect(walletModel, &WalletModel::showProgress, this, &WalletView::showProgress);\n-\n-    overviewPage->setClientModel(clientModel);\n }\n \n WalletView::~WalletView()"
      }
    ]
  },
  {
    "sha": "6c9e7bd884941645f2506717402dc7fc5cfa59e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzllN2JkODg0OTQxNjQ1ZjI1MDY3MTc0MDJkYzdmYzVjZmE1OWUz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T08:19:51Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T21:53:54Z"
      },
      "message": "gui: Drop setWalletModel from OverviewPage",
      "tree": {
        "sha": "0d6cdb9b9ebb6df74cb88d8ad5594fd51f09bb42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d6cdb9b9ebb6df74cb88d8ad5594fd51f09bb42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c9e7bd884941645f2506717402dc7fc5cfa59e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c9e7bd884941645f2506717402dc7fc5cfa59e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c9e7bd884941645f2506717402dc7fc5cfa59e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c9e7bd884941645f2506717402dc7fc5cfa59e3/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5daaca8e040bbdbba7e6dbdaf5a2b4b32177b7f"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 33,
      "deletions": 42
    },
    "files": [
      {
        "sha": "4fdb190d7a8c7c65bd016e3dec49bb0734904e28",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 37,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c9e7bd884941645f2506717402dc7fc5cfa59e3/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c9e7bd884941645f2506717402dc7fc5cfa59e3/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=6c9e7bd884941645f2506717402dc7fc5cfa59e3",
        "patch": "@@ -110,11 +110,11 @@ class TxViewDelegate : public QAbstractItemDelegate\n };\n #include <qt/overviewpage.moc>\n \n-OverviewPage::OverviewPage(ClientModel* client_model, const PlatformStyle *platformStyle, QWidget *parent) :\n+OverviewPage::OverviewPage(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent) :\n     QWidget(parent),\n     ui(new Ui::OverviewPage),\n     clientModel(client_model),\n-    walletModel(nullptr),\n+    walletModel(wallet_model),\n     txdelegate(new TxViewDelegate(platformStyle, this))\n {\n     ui->setupUi(this);\n@@ -143,6 +143,34 @@ OverviewPage::OverviewPage(ClientModel* client_model, const PlatformStyle *platf\n     // Show warning, for example if this is a prerelease version\n     connect(clientModel, &ClientModel::alertsChanged, this, &OverviewPage::updateAlerts);\n     updateAlerts(clientModel->getStatusBarWarnings());\n+\n+    // Set up transaction list\n+    filter.reset(new TransactionFilterProxy());\n+    filter->setSourceModel(walletModel->getTransactionTableModel());\n+    filter->setLimit(NUM_ITEMS);\n+    filter->setDynamicSortFilter(true);\n+    filter->setSortRole(Qt::EditRole);\n+    filter->setShowInactive(false);\n+    filter->sort(TransactionTableModel::Date, Qt::DescendingOrder);\n+\n+    ui->listTransactions->setModel(filter.get());\n+    ui->listTransactions->setModelColumn(TransactionTableModel::ToAddress);\n+\n+    // Keep up to date with wallet\n+    interfaces::Wallet& wallet = walletModel->wallet();\n+    interfaces::WalletBalances balances = wallet.getBalances();\n+    setBalance(balances);\n+    connect(walletModel, &WalletModel::balanceChanged, this, &OverviewPage::setBalance);\n+\n+    connect(walletModel->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &OverviewPage::updateDisplayUnit);\n+\n+    updateWatchOnlyLabels(wallet.haveWatchOnly() && !walletModel->privateKeysDisabled());\n+    connect(walletModel, &WalletModel::notifyWatchonlyChanged, [this](bool showWatchOnly) {\n+        updateWatchOnlyLabels(showWatchOnly && !walletModel->privateKeysDisabled());\n+    });\n+\n+    // update the display unit, to not use the default (\"BTC\")\n+    updateDisplayUnit();\n }\n \n void OverviewPage::handleTransactionClicked(const QModelIndex &index)\n@@ -205,41 +233,6 @@ void OverviewPage::updateWatchOnlyLabels(bool showWatchOnly)\n         ui->labelWatchImmature->hide();\n }\n \n-void OverviewPage::setWalletModel(WalletModel *model)\n-{\n-    this->walletModel = model;\n-    if(model && model->getOptionsModel())\n-    {\n-        // Set up transaction list\n-        filter.reset(new TransactionFilterProxy());\n-        filter->setSourceModel(model->getTransactionTableModel());\n-        filter->setLimit(NUM_ITEMS);\n-        filter->setDynamicSortFilter(true);\n-        filter->setSortRole(Qt::EditRole);\n-        filter->setShowInactive(false);\n-        filter->sort(TransactionTableModel::Date, Qt::DescendingOrder);\n-\n-        ui->listTransactions->setModel(filter.get());\n-        ui->listTransactions->setModelColumn(TransactionTableModel::ToAddress);\n-\n-        // Keep up to date with wallet\n-        interfaces::Wallet& wallet = model->wallet();\n-        interfaces::WalletBalances balances = wallet.getBalances();\n-        setBalance(balances);\n-        connect(model, &WalletModel::balanceChanged, this, &OverviewPage::setBalance);\n-\n-        connect(model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &OverviewPage::updateDisplayUnit);\n-\n-        updateWatchOnlyLabels(wallet.haveWatchOnly() && !model->privateKeysDisabled());\n-        connect(model, &WalletModel::notifyWatchonlyChanged, [this](bool showWatchOnly) {\n-            updateWatchOnlyLabels(showWatchOnly && !walletModel->privateKeysDisabled());\n-        });\n-    }\n-\n-    // update the display unit, to not use the default (\"BTC\")\n-    updateDisplayUnit();\n-}\n-\n void OverviewPage::updateDisplayUnit()\n {\n     if(walletModel && walletModel->getOptionsModel())"
      },
      {
        "sha": "131ff3e2ec8f7eecf52336f37a866ecc5ffeac78",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c9e7bd884941645f2506717402dc7fc5cfa59e3/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c9e7bd884941645f2506717402dc7fc5cfa59e3/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=6c9e7bd884941645f2506717402dc7fc5cfa59e3",
        "patch": "@@ -30,10 +30,9 @@ class OverviewPage : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit OverviewPage(ClientModel* client_model, const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    explicit OverviewPage(ClientModel* client_model, WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n     ~OverviewPage();\n \n-    void setWalletModel(WalletModel *walletModel);\n     void showOutOfSyncWarning(bool fShow);\n \n public Q_SLOTS:\n@@ -46,7 +45,7 @@ public Q_SLOTS:\n private:\n     Ui::OverviewPage *ui;\n     ClientModel* const clientModel;\n-    WalletModel *walletModel;\n+    WalletModel* const walletModel;\n     interfaces::WalletBalances m_balances;\n \n     TxViewDelegate *txdelegate;"
      },
      {
        "sha": "41d994fc710d2a8b0bc20112e206becffba3be3a",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c9e7bd884941645f2506717402dc7fc5cfa59e3/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c9e7bd884941645f2506717402dc7fc5cfa59e3/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=6c9e7bd884941645f2506717402dc7fc5cfa59e3",
        "patch": "@@ -36,7 +36,7 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n     platformStyle(_platformStyle)\n {\n     // Create tabs\n-    overviewPage = new OverviewPage(client_model, platformStyle);\n+    overviewPage = new OverviewPage(client_model, wallet_model, platformStyle);\n \n     transactionsPage = new QWidget(this);\n     QVBoxLayout *vbox = new QVBoxLayout();\n@@ -84,7 +84,6 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n \n     // Put transaction list in tabs\n     transactionView->setModel(walletModel);\n-    overviewPage->setWalletModel(walletModel);\n     usedReceivingAddressesPage->setModel(walletModel->getAddressTableModel());\n     usedSendingAddressesPage->setModel(walletModel->getAddressTableModel());\n "
      }
    ]
  },
  {
    "sha": "2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjZkZDcyMDA1YzNiZDBmMmYxOWE4M2ViYjBmMDFkNjE3ZDZkZjdk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T17:23:03Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T21:53:59Z"
      },
      "message": "fixups",
      "tree": {
        "sha": "c36252010909c9e3e5f8b447d7e584835ef7a466",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c36252010909c9e3e5f8b447d7e584835ef7a466"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c9e7bd884941645f2506717402dc7fc5cfa59e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c9e7bd884941645f2506717402dc7fc5cfa59e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c9e7bd884941645f2506717402dc7fc5cfa59e3"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c4ee38fd3f856e96ed9e14e4d5eb968f963b987b",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d",
        "patch": "@@ -8,6 +8,7 @@\n #include <interfaces/chain.h>\n #include <interfaces/node.h>\n #include <qt/bitcoinamountfield.h>\n+#include <qt/clientmodel.h>\n #include <qt/optionsmodel.h>\n #include <qt/platformstyle.h>\n #include <qt/qvalidatedlineedit.h>\n@@ -165,13 +166,13 @@ void TestGUI(interfaces::Node& node)\n \n     // Create widgets for sending coins and listing transactions.\n     std::unique_ptr<const PlatformStyle> platformStyle(PlatformStyle::instantiate(\"other\"));\n-    SendCoinsDialog sendCoinsDialog(platformStyle.get());\n     TransactionView transactionView(platformStyle.get());\n     OptionsModel optionsModel(node);\n+    ClientModel client_model(node, &optionsModel);\n     AddWallet(wallet);\n     WalletModel walletModel(interfaces::MakeWallet(wallet), node, platformStyle.get(), &optionsModel);\n     RemoveWallet(wallet);\n-    sendCoinsDialog.setModel(&walletModel);\n+    SendCoinsDialog sendCoinsDialog(&client_model, &walletModel, platformStyle.get());\n     transactionView.setModel(&walletModel);\n \n     {\n@@ -200,8 +201,7 @@ void TestGUI(interfaces::Node& node)\n     BumpFee(transactionView, txid2, true /* expect disabled */, \"already bumped\" /* expected error */, false /* cancel */);\n \n     // Check current balance on OverviewPage\n-    OverviewPage overviewPage(platformStyle.get());\n-    overviewPage.setWalletModel(&walletModel);\n+    OverviewPage overviewPage(&client_model, &walletModel, platformStyle.get());\n     QLabel* balanceLabel = overviewPage.findChild<QLabel*>(\"labelBalance\");\n     QString balanceText = balanceLabel->text();\n     int unit = walletModel.getOptionsModel()->getDisplayUnit();\n@@ -210,8 +210,7 @@ void TestGUI(interfaces::Node& node)\n     QCOMPARE(balanceText, balanceComparison);\n \n     // Check Request Payment button\n-    ReceiveCoinsDialog receiveCoinsDialog(platformStyle.get());\n-    receiveCoinsDialog.setModel(&walletModel);\n+    ReceiveCoinsDialog receiveCoinsDialog(&walletModel, platformStyle.get());\n     RecentRequestsTableModel* requestTableModel = receiveCoinsDialog.recentRequestsTableModel();\n     assert(requestTableModel);\n "
      }
    ]
  },
  {
    "sha": "f779a8f35de4543f5804e361c47e757d588e12f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNzc5YThmMzVkZTQ1NDNmNTgwNGUzNjFjNDdlNzU3ZDU4OGUxMmY5",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T22:03:21Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T22:03:21Z"
      },
      "message": "gui: Pass wallet model to TransactionView constructor",
      "tree": {
        "sha": "a74060b6490025e896b5d68210f3dd64115cc384",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a74060b6490025e896b5d68210f3dd64115cc384"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f779a8f35de4543f5804e361c47e757d588e12f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f779a8f35de4543f5804e361c47e757d588e12f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f779a8f35de4543f5804e361c47e757d588e12f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f779a8f35de4543f5804e361c47e757d588e12f9/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f6dd72005c3bd0f2f19a83ebb0f01d617d6df7d"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 7,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0b762008f21274875c4eea647591ff186e9d3ddc",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f779a8f35de4543f5804e361c47e757d588e12f9/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f779a8f35de4543f5804e361c47e757d588e12f9/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=f779a8f35de4543f5804e361c47e757d588e12f9",
        "patch": "@@ -166,14 +166,13 @@ void TestGUI(interfaces::Node& node)\n \n     // Create widgets for sending coins and listing transactions.\n     std::unique_ptr<const PlatformStyle> platformStyle(PlatformStyle::instantiate(\"other\"));\n-    TransactionView transactionView(platformStyle.get());\n     OptionsModel optionsModel(node);\n     ClientModel client_model(node, &optionsModel);\n     AddWallet(wallet);\n     WalletModel walletModel(interfaces::MakeWallet(wallet), node, platformStyle.get(), &optionsModel);\n     RemoveWallet(wallet);\n     SendCoinsDialog sendCoinsDialog(&client_model, &walletModel, platformStyle.get());\n-    transactionView.setModel(&walletModel);\n+    TransactionView transactionView(&walletModel, platformStyle.get());\n \n     {\n         // Check balance in send dialog"
      },
      {
        "sha": "44abbef1f41408b6adb6b4a9975e7417b42f1729",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f779a8f35de4543f5804e361c47e757d588e12f9/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f779a8f35de4543f5804e361c47e757d588e12f9/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=f779a8f35de4543f5804e361c47e757d588e12f9",
        "patch": "@@ -35,7 +35,7 @@\n #include <QUrl>\n #include <QVBoxLayout>\n \n-TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *parent) :\n+TransactionView::TransactionView(WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent) :\n     QWidget(parent), model(nullptr), transactionProxyModel(nullptr),\n     transactionView(nullptr), abandonAction(nullptr), bumpFeeAction(nullptr), columnResizingFixer(nullptr)\n {\n@@ -202,6 +202,8 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     connect(this, &TransactionView::bumpedFee, [this](const uint256& txid) {\n       focusTransaction(txid);\n     });\n+\n+    setModel(wallet_model);\n }\n \n void TransactionView::setModel(WalletModel *_model)"
      },
      {
        "sha": "0bec87be71b6f85edea8081a1246f480d942da67",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f779a8f35de4543f5804e361c47e757d588e12f9/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f779a8f35de4543f5804e361c47e757d588e12f9/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=f779a8f35de4543f5804e361c47e757d588e12f9",
        "patch": "@@ -34,9 +34,7 @@ class TransactionView : public QWidget\n     Q_OBJECT\n \n public:\n-    explicit TransactionView(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n-\n-    void setModel(WalletModel *model);\n+    explicit TransactionView(WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n \n     // Date ranges for filter\n     enum DateEnum\n@@ -85,6 +83,7 @@ class TransactionView : public QWidget\n     virtual void resizeEvent(QResizeEvent* event);\n \n     bool eventFilter(QObject *obj, QEvent *event);\n+    void setModel(WalletModel *model);\n \n private Q_SLOTS:\n     void contextualMenu(const QPoint &);"
      },
      {
        "sha": "c41eb06d00114b869232700ad329ee7851a6389f",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f779a8f35de4543f5804e361c47e757d588e12f9/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f779a8f35de4543f5804e361c47e757d588e12f9/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=f779a8f35de4543f5804e361c47e757d588e12f9",
        "patch": "@@ -41,7 +41,7 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n     transactionsPage = new QWidget(this);\n     QVBoxLayout *vbox = new QVBoxLayout();\n     QHBoxLayout *hbox_buttons = new QHBoxLayout();\n-    transactionView = new TransactionView(platformStyle, this);\n+    transactionView = new TransactionView(wallet_model, platformStyle, this);\n     vbox->addWidget(transactionView);\n     QPushButton *exportButton = new QPushButton(tr(\"&Export\"), this);\n     exportButton->setToolTip(tr(\"Export the data in the current tab to a file\"));\n@@ -83,7 +83,6 @@ WalletView::WalletView(ClientModel* client_model, WalletModel* wallet_model, con\n     connect(transactionView, &TransactionView::message, this, &WalletView::message);\n \n     // Put transaction list in tabs\n-    transactionView->setModel(walletModel);\n     usedReceivingAddressesPage->setModel(walletModel->getAddressTableModel());\n     usedSendingAddressesPage->setModel(walletModel->getAddressTableModel());\n "
      }
    ]
  },
  {
    "sha": "fd31bad0e71dec2c4d7d578934e6cb28feb21971",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDMxYmFkMGU3MWRlYzJjNGQ3ZDU3ODkzNGU2Y2IyOGZlYjIxOTcx",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T22:07:47Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T22:07:47Z"
      },
      "message": "gui: Drop setModel from TransactionView",
      "tree": {
        "sha": "37190ac6fc237f3adfba65d08f4e1846858672d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37190ac6fc237f3adfba65d08f4e1846858672d2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd31bad0e71dec2c4d7d578934e6cb28feb21971",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd31bad0e71dec2c4d7d578934e6cb28feb21971",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd31bad0e71dec2c4d7d578934e6cb28feb21971",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd31bad0e71dec2c4d7d578934e6cb28feb21971/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f779a8f35de4543f5804e361c47e757d588e12f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f779a8f35de4543f5804e361c47e757d588e12f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f779a8f35de4543f5804e361c47e757d588e12f9"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 43,
      "deletions": 53
    },
    "files": [
      {
        "sha": "b854e6b36c4d30b8c5c9d801c9498a8209f43666",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 51,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd31bad0e71dec2c4d7d578934e6cb28feb21971/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd31bad0e71dec2c4d7d578934e6cb28feb21971/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=fd31bad0e71dec2c4d7d578934e6cb28feb21971",
        "patch": "@@ -36,7 +36,7 @@\n #include <QVBoxLayout>\n \n TransactionView::TransactionView(WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent) :\n-    QWidget(parent), model(nullptr), transactionProxyModel(nullptr),\n+    QWidget(parent), model(wallet_model), transactionProxyModel(nullptr),\n     transactionView(nullptr), abandonAction(nullptr), bumpFeeAction(nullptr), columnResizingFixer(nullptr)\n {\n     // Build filter row\n@@ -203,64 +203,55 @@ TransactionView::TransactionView(WalletModel* wallet_model, const PlatformStyle\n       focusTransaction(txid);\n     });\n \n-    setModel(wallet_model);\n-}\n+    transactionProxyModel = new TransactionFilterProxy(this);\n+    transactionProxyModel->setSourceModel(model->getTransactionTableModel());\n+    transactionProxyModel->setDynamicSortFilter(true);\n+    transactionProxyModel->setSortCaseSensitivity(Qt::CaseInsensitive);\n+    transactionProxyModel->setFilterCaseSensitivity(Qt::CaseInsensitive);\n \n-void TransactionView::setModel(WalletModel *_model)\n-{\n-    this->model = _model;\n-    if(_model)\n+    transactionProxyModel->setSortRole(Qt::EditRole);\n+\n+    transactionView->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n+    transactionView->setModel(transactionProxyModel);\n+    transactionView->setAlternatingRowColors(true);\n+    transactionView->setSelectionBehavior(QAbstractItemView::SelectRows);\n+    transactionView->setSelectionMode(QAbstractItemView::ExtendedSelection);\n+    transactionView->horizontalHeader()->setSortIndicator(TransactionTableModel::Date, Qt::DescendingOrder);\n+    transactionView->setSortingEnabled(true);\n+    transactionView->verticalHeader()->hide();\n+\n+    transactionView->setColumnWidth(TransactionTableModel::Status, STATUS_COLUMN_WIDTH);\n+    transactionView->setColumnWidth(TransactionTableModel::Watchonly, WATCHONLY_COLUMN_WIDTH);\n+    transactionView->setColumnWidth(TransactionTableModel::Date, DATE_COLUMN_WIDTH);\n+    transactionView->setColumnWidth(TransactionTableModel::Type, TYPE_COLUMN_WIDTH);\n+    transactionView->setColumnWidth(TransactionTableModel::Amount, AMOUNT_MINIMUM_COLUMN_WIDTH);\n+\n+    columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(transactionView, AMOUNT_MINIMUM_COLUMN_WIDTH, MINIMUM_COLUMN_WIDTH, this);\n+\n+    if (model->getOptionsModel())\n     {\n-        transactionProxyModel = new TransactionFilterProxy(this);\n-        transactionProxyModel->setSourceModel(_model->getTransactionTableModel());\n-        transactionProxyModel->setDynamicSortFilter(true);\n-        transactionProxyModel->setSortCaseSensitivity(Qt::CaseInsensitive);\n-        transactionProxyModel->setFilterCaseSensitivity(Qt::CaseInsensitive);\n-\n-        transactionProxyModel->setSortRole(Qt::EditRole);\n-\n-        transactionView->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n-        transactionView->setModel(transactionProxyModel);\n-        transactionView->setAlternatingRowColors(true);\n-        transactionView->setSelectionBehavior(QAbstractItemView::SelectRows);\n-        transactionView->setSelectionMode(QAbstractItemView::ExtendedSelection);\n-        transactionView->horizontalHeader()->setSortIndicator(TransactionTableModel::Date, Qt::DescendingOrder);\n-        transactionView->setSortingEnabled(true);\n-        transactionView->verticalHeader()->hide();\n-\n-        transactionView->setColumnWidth(TransactionTableModel::Status, STATUS_COLUMN_WIDTH);\n-        transactionView->setColumnWidth(TransactionTableModel::Watchonly, WATCHONLY_COLUMN_WIDTH);\n-        transactionView->setColumnWidth(TransactionTableModel::Date, DATE_COLUMN_WIDTH);\n-        transactionView->setColumnWidth(TransactionTableModel::Type, TYPE_COLUMN_WIDTH);\n-        transactionView->setColumnWidth(TransactionTableModel::Amount, AMOUNT_MINIMUM_COLUMN_WIDTH);\n-\n-        columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(transactionView, AMOUNT_MINIMUM_COLUMN_WIDTH, MINIMUM_COLUMN_WIDTH, this);\n-\n-        if (_model->getOptionsModel())\n+        // Add third party transaction URLs to context menu\n+        QStringList listUrls = model->getOptionsModel()->getThirdPartyTxUrls().split(\"|\", QString::SkipEmptyParts);\n+        for (int i = 0; i < listUrls.size(); ++i)\n         {\n-            // Add third party transaction URLs to context menu\n-            QStringList listUrls = _model->getOptionsModel()->getThirdPartyTxUrls().split(\"|\", QString::SkipEmptyParts);\n-            for (int i = 0; i < listUrls.size(); ++i)\n+            QString url = listUrls[i].trimmed();\n+            QString host = QUrl(url, QUrl::StrictMode).host();\n+            if (!host.isEmpty())\n             {\n-                QString url = listUrls[i].trimmed();\n-                QString host = QUrl(url, QUrl::StrictMode).host();\n-                if (!host.isEmpty())\n-                {\n-                    QAction *thirdPartyTxUrlAction = new QAction(host, this); // use host as menu item label\n-                    if (i == 0)\n-                        contextMenu->addSeparator();\n-                    contextMenu->addAction(thirdPartyTxUrlAction);\n-                    connect(thirdPartyTxUrlAction, &QAction::triggered, [this, url] { openThirdPartyTxUrl(url); });\n-                }\n+                QAction *thirdPartyTxUrlAction = new QAction(host, this); // use host as menu item label\n+                if (i == 0)\n+                    contextMenu->addSeparator();\n+                contextMenu->addAction(thirdPartyTxUrlAction);\n+                connect(thirdPartyTxUrlAction, &QAction::triggered, [this, url] { openThirdPartyTxUrl(url); });\n             }\n         }\n+    }\n \n-        // show/hide column Watch-only\n-        updateWatchOnlyColumn(_model->wallet().haveWatchOnly());\n+    // show/hide column Watch-only\n+    updateWatchOnlyColumn(model->wallet().haveWatchOnly());\n \n-        // Watch-only signal\n-        connect(_model, &WalletModel::notifyWatchonlyChanged, this, &TransactionView::updateWatchOnlyColumn);\n-    }\n+    // Watch-only signal\n+    connect(model, &WalletModel::notifyWatchonlyChanged, this, &TransactionView::updateWatchOnlyColumn);\n }\n \n void TransactionView::chooseDate(int idx)"
      },
      {
        "sha": "62c785d149ec37dac0b6331ae90a3791e36c9bb3",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd31bad0e71dec2c4d7d578934e6cb28feb21971/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd31bad0e71dec2c4d7d578934e6cb28feb21971/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=fd31bad0e71dec2c4d7d578934e6cb28feb21971",
        "patch": "@@ -58,7 +58,7 @@ class TransactionView : public QWidget\n     };\n \n private:\n-    WalletModel *model;\n+    WalletModel* const model;\n     TransactionFilterProxy *transactionProxyModel;\n     QTableView *transactionView;\n \n@@ -83,7 +83,6 @@ class TransactionView : public QWidget\n     virtual void resizeEvent(QResizeEvent* event);\n \n     bool eventFilter(QObject *obj, QEvent *event);\n-    void setModel(WalletModel *model);\n \n private Q_SLOTS:\n     void contextualMenu(const QPoint &);"
      }
    ]
  },
  {
    "sha": "60e0b96d6f88e78ca41640cddf4faf43ab632890",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGUwYjk2ZDZmODhlNzhjYTQxNjQwY2RkZjRmYWY0M2FiNjMyODkw",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T22:34:01Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T22:34:01Z"
      },
      "message": "gui: Drop setModel from ReceiveRequestDialog",
      "tree": {
        "sha": "4e2a120cd0d60590025a9c64e0a8b4ac0f81c7a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e2a120cd0d60590025a9c64e0a8b4ac0f81c7a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60e0b96d6f88e78ca41640cddf4faf43ab632890",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60e0b96d6f88e78ca41640cddf4faf43ab632890",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60e0b96d6f88e78ca41640cddf4faf43ab632890",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60e0b96d6f88e78ca41640cddf4faf43ab632890/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd31bad0e71dec2c4d7d578934e6cb28feb21971",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd31bad0e71dec2c4d7d578934e6cb28feb21971",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd31bad0e71dec2c4d7d578934e6cb28feb21971"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 10,
      "deletions": 20
    },
    "files": [
      {
        "sha": "570700cfd0b7d0c9fd7f616e3a8bec7207c1e57d",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60e0b96d6f88e78ca41640cddf4faf43ab632890/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60e0b96d6f88e78ca41640cddf4faf43ab632890/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=60e0b96d6f88e78ca41640cddf4faf43ab632890",
        "patch": "@@ -152,9 +152,8 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n     address = model->getAddressTableModel()->addRow(AddressTableModel::Receive, label, \"\", address_type);\n     SendCoinsRecipient info(address, label,\n         ui->reqAmount->value(), ui->reqMessage->text());\n-    ReceiveRequestDialog *dialog = new ReceiveRequestDialog(this);\n+    ReceiveRequestDialog *dialog = new ReceiveRequestDialog(model, this);\n     dialog->setAttribute(Qt::WA_DeleteOnClose);\n-    dialog->setModel(model);\n     dialog->setInfo(info);\n     dialog->show();\n     clear();\n@@ -165,8 +164,7 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n \n void ReceiveCoinsDialog::on_recentRequestsView_doubleClicked(const QModelIndex &index)\n {\n-    ReceiveRequestDialog *dialog = new ReceiveRequestDialog(this);\n-    dialog->setModel(model);\n+    ReceiveRequestDialog *dialog = new ReceiveRequestDialog(model, this);\n     dialog->setInfo(m_recent_requests_table_model->entry(index.row()).recipient);\n     dialog->setAttribute(Qt::WA_DeleteOnClose);\n     dialog->show();"
      },
      {
        "sha": "dd6c1263b02192ad81c229ca75f6d0d22aecb11a",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 13,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60e0b96d6f88e78ca41640cddf4faf43ab632890/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60e0b96d6f88e78ca41640cddf4faf43ab632890/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=60e0b96d6f88e78ca41640cddf4faf43ab632890",
        "patch": "@@ -17,10 +17,10 @@\n #include <config/bitcoin-config.h> /* for USE_QRCODE */\n #endif\n \n-ReceiveRequestDialog::ReceiveRequestDialog(QWidget *parent) :\n+ReceiveRequestDialog::ReceiveRequestDialog(WalletModel* wallet_model, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::ReceiveRequestDialog),\n-    model(nullptr)\n+    model(wallet_model)\n {\n     ui->setupUi(this);\n \n@@ -30,24 +30,17 @@ ReceiveRequestDialog::ReceiveRequestDialog(QWidget *parent) :\n #endif\n \n     connect(ui->btnSaveAs, &QPushButton::clicked, ui->lblQRCode, &QRImageWidget::saveImage);\n+    connect(model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &ReceiveRequestDialog::update);\n+\n+    // update the display unit if necessary\n+    update();\n }\n \n ReceiveRequestDialog::~ReceiveRequestDialog()\n {\n     delete ui;\n }\n \n-void ReceiveRequestDialog::setModel(WalletModel *_model)\n-{\n-    this->model = _model;\n-\n-    if (_model)\n-        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &ReceiveRequestDialog::update);\n-\n-    // update the display unit if necessary\n-    update();\n-}\n-\n void ReceiveRequestDialog::setInfo(const SendCoinsRecipient &_info)\n {\n     this->info = _info;"
      },
      {
        "sha": "7ed29ecca712f7ca2fa5455365d28f0ece683d0c",
        "filename": "src/qt/receiverequestdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60e0b96d6f88e78ca41640cddf4faf43ab632890/src/qt/receiverequestdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60e0b96d6f88e78ca41640cddf4faf43ab632890/src/qt/receiverequestdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.h?ref=60e0b96d6f88e78ca41640cddf4faf43ab632890",
        "patch": "@@ -20,10 +20,9 @@ class ReceiveRequestDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit ReceiveRequestDialog(QWidget *parent = nullptr);\n+    explicit ReceiveRequestDialog(WalletModel* wallet_model, QWidget *parent = nullptr);\n     ~ReceiveRequestDialog();\n \n-    void setModel(WalletModel *model);\n     void setInfo(const SendCoinsRecipient &info);\n \n private Q_SLOTS:\n@@ -34,7 +33,7 @@ private Q_SLOTS:\n \n private:\n     Ui::ReceiveRequestDialog *ui;\n-    WalletModel *model;\n+    WalletModel* const model;\n     SendCoinsRecipient info;\n };\n "
      }
    ]
  },
  {
    "sha": "f2d761e0d7cee72973eee029752ff8212355a1cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMmQ3NjFlMGQ3Y2VlNzI5NzNlZWUwMjk3NTJmZjgyMTIzNTVhMWNj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T22:36:58Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T22:39:25Z"
      },
      "message": "gui: Drop setModel from SignVerifyMessageDialog",
      "tree": {
        "sha": "06eb62a233edaa2ee6995309f0c1fd47c4014cc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06eb62a233edaa2ee6995309f0c1fd47c4014cc4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2d761e0d7cee72973eee029752ff8212355a1cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2d761e0d7cee72973eee029752ff8212355a1cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f2d761e0d7cee72973eee029752ff8212355a1cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2d761e0d7cee72973eee029752ff8212355a1cc/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60e0b96d6f88e78ca41640cddf4faf43ab632890",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60e0b96d6f88e78ca41640cddf4faf43ab632890",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60e0b96d6f88e78ca41640cddf4faf43ab632890"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 6,
      "deletions": 14
    },
    "files": [
      {
        "sha": "c5e215e5096ec276f7112a53c92cea5c2926efa7",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2d761e0d7cee72973eee029752ff8212355a1cc/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2d761e0d7cee72973eee029752ff8212355a1cc/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=f2d761e0d7cee72973eee029752ff8212355a1cc",
        "patch": "@@ -18,10 +18,10 @@\n \n #include <QClipboard>\n \n-SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n+SignVerifyMessageDialog::SignVerifyMessageDialog(WalletModel* wallet_model, const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::SignVerifyMessageDialog),\n-    model(nullptr),\n+    model(wallet_model),\n     platformStyle(_platformStyle)\n {\n     ui->setupUi(this);\n@@ -54,11 +54,6 @@ SignVerifyMessageDialog::~SignVerifyMessageDialog()\n     delete ui;\n }\n \n-void SignVerifyMessageDialog::setModel(WalletModel *_model)\n-{\n-    this->model = _model;\n-}\n-\n void SignVerifyMessageDialog::setAddress_SM(const QString &address)\n {\n     ui->addressIn_SM->setText(address);"
      },
      {
        "sha": "d98998d94e136bc17020a659b3fa2e0eee5e099b",
        "filename": "src/qt/signverifymessagedialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2d761e0d7cee72973eee029752ff8212355a1cc/src/qt/signverifymessagedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2d761e0d7cee72973eee029752ff8212355a1cc/src/qt/signverifymessagedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.h?ref=f2d761e0d7cee72973eee029752ff8212355a1cc",
        "patch": "@@ -19,10 +19,9 @@ class SignVerifyMessageDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit SignVerifyMessageDialog(const PlatformStyle *platformStyle, QWidget *parent);\n+    explicit SignVerifyMessageDialog(WalletModel* wallet_model, const PlatformStyle *platformStyle, QWidget *parent);\n     ~SignVerifyMessageDialog();\n \n-    void setModel(WalletModel *model);\n     void setAddress_SM(const QString &address);\n     void setAddress_VM(const QString &address);\n \n@@ -34,7 +33,7 @@ class SignVerifyMessageDialog : public QDialog\n \n private:\n     Ui::SignVerifyMessageDialog *ui;\n-    WalletModel *model;\n+    WalletModel* const model;\n     const PlatformStyle *platformStyle;\n \n private Q_SLOTS:"
      },
      {
        "sha": "61087c8ce3cd3b987833560c5170f3901c355b03",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2d761e0d7cee72973eee029752ff8212355a1cc/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2d761e0d7cee72973eee029752ff8212355a1cc/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=f2d761e0d7cee72973eee029752ff8212355a1cc",
        "patch": "@@ -156,9 +156,8 @@ void WalletView::gotoSendCoinsPage(QString addr)\n void WalletView::gotoSignMessageTab(QString addr)\n {\n     // calls show() in showTab_SM()\n-    SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(platformStyle, this);\n+    SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(walletModel, platformStyle, this);\n     signVerifyMessageDialog->setAttribute(Qt::WA_DeleteOnClose);\n-    signVerifyMessageDialog->setModel(walletModel);\n     signVerifyMessageDialog->showTab_SM(true);\n \n     if (!addr.isEmpty())\n@@ -168,9 +167,8 @@ void WalletView::gotoSignMessageTab(QString addr)\n void WalletView::gotoVerifyMessageTab(QString addr)\n {\n     // calls show() in showTab_VM()\n-    SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(platformStyle, this);\n+    SignVerifyMessageDialog *signVerifyMessageDialog = new SignVerifyMessageDialog(walletModel, platformStyle, this);\n     signVerifyMessageDialog->setAttribute(Qt::WA_DeleteOnClose);\n-    signVerifyMessageDialog->setModel(walletModel);\n     signVerifyMessageDialog->showTab_VM(true);\n \n     if (!addr.isEmpty())"
      }
    ]
  },
  {
    "sha": "fab1ce81e8ac5765e5def5f79272ba77e370dcfc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWIxY2U4MWU4YWM1NzY1ZTVkZWY1Zjc5MjcyYmE3N2UzNzBkY2Zj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T23:00:03Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-02T23:00:03Z"
      },
      "message": "gui: Drop setModel from AskPassphraseDialog",
      "tree": {
        "sha": "95a7bc76f8f676ea9099a8c22eb6f80e1ad64f72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95a7bc76f8f676ea9099a8c22eb6f80e1ad64f72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab1ce81e8ac5765e5def5f79272ba77e370dcfc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab1ce81e8ac5765e5def5f79272ba77e370dcfc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab1ce81e8ac5765e5def5f79272ba77e370dcfc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab1ce81e8ac5765e5def5f79272ba77e370dcfc/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2d761e0d7cee72973eee029752ff8212355a1cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2d761e0d7cee72973eee029752ff8212355a1cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2d761e0d7cee72973eee029752ff8212355a1cc"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 13,
      "deletions": 17
    },
    "files": [
      {
        "sha": "e49fe1f3ee1322336fa541e182b38710bc7fa1bc",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab1ce81e8ac5765e5def5f79272ba77e370dcfc/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab1ce81e8ac5765e5def5f79272ba77e370dcfc/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=fab1ce81e8ac5765e5def5f79272ba77e370dcfc",
        "patch": "@@ -18,11 +18,16 @@\n #include <QMessageBox>\n #include <QPushButton>\n \n-AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent, SecureString* passphrase_out) :\n+AskPassphraseDialog::AskPassphraseDialog(Mode mode, QWidget *parent, SecureString* passphrase_out)\n+    : AskPassphraseDialog(mode, nullptr, parent, passphrase_out)\n+{\n+}\n+\n+AskPassphraseDialog::AskPassphraseDialog(Mode _mode, WalletModel* wallet_model, QWidget *parent, SecureString* passphrase_out) :\n     QDialog(parent),\n     ui(new Ui::AskPassphraseDialog),\n     mode(_mode),\n-    model(nullptr),\n+    model(wallet_model),\n     fCapsLock(false),\n     m_passphrase_out(passphrase_out)\n {\n@@ -83,11 +88,6 @@ AskPassphraseDialog::~AskPassphraseDialog()\n     delete ui;\n }\n \n-void AskPassphraseDialog::setModel(WalletModel *_model)\n-{\n-    this->model = _model;\n-}\n-\n void AskPassphraseDialog::accept()\n {\n     SecureString oldpass, newpass1, newpass2;"
      },
      {
        "sha": "9dcb9680f93ecf0fb5c419810cf5fc97b260dd9c",
        "filename": "src/qt/askpassphrasedialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab1ce81e8ac5765e5def5f79272ba77e370dcfc/src/qt/askpassphrasedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab1ce81e8ac5765e5def5f79272ba77e370dcfc/src/qt/askpassphrasedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.h?ref=fab1ce81e8ac5765e5def5f79272ba77e370dcfc",
        "patch": "@@ -29,17 +29,16 @@ class AskPassphraseDialog : public QDialog\n         Decrypt     /**< Ask passphrase and decrypt wallet */\n     };\n \n-    explicit AskPassphraseDialog(Mode mode, QWidget *parent, SecureString* passphrase_out = nullptr);\n+    explicit AskPassphraseDialog(Mode mode, QWidget *parent, SecureString* passphrase_out);\n+    explicit AskPassphraseDialog(Mode mode, WalletModel* wallet_model, QWidget *parent, SecureString* passphrase_out = nullptr);\n     ~AskPassphraseDialog();\n \n     void accept();\n \n-    void setModel(WalletModel *model);\n-\n private:\n     Ui::AskPassphraseDialog *ui;\n     Mode mode;\n-    WalletModel *model;\n+    WalletModel* const model;\n     bool fCapsLock;\n     SecureString* m_passphrase_out;\n "
      },
      {
        "sha": "6786f93310cc0d1d788c00a8248f16abdc166ab7",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab1ce81e8ac5765e5def5f79272ba77e370dcfc/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab1ce81e8ac5765e5def5f79272ba77e370dcfc/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=fab1ce81e8ac5765e5def5f79272ba77e370dcfc",
        "patch": "@@ -194,8 +194,7 @@ void WalletView::encryptWallet(bool status)\n {\n     if(!walletModel)\n         return;\n-    AskPassphraseDialog dlg(status ? AskPassphraseDialog::Encrypt : AskPassphraseDialog::Decrypt, this);\n-    dlg.setModel(walletModel);\n+    AskPassphraseDialog dlg(status ? AskPassphraseDialog::Encrypt : AskPassphraseDialog::Decrypt, walletModel, this);\n     dlg.exec();\n \n     updateEncryptionStatus();\n@@ -222,8 +221,7 @@ void WalletView::backupWallet()\n \n void WalletView::changePassphrase()\n {\n-    AskPassphraseDialog dlg(AskPassphraseDialog::ChangePass, this);\n-    dlg.setModel(walletModel);\n+    AskPassphraseDialog dlg(AskPassphraseDialog::ChangePass, walletModel, this);\n     dlg.exec();\n }\n \n@@ -234,8 +232,7 @@ void WalletView::unlockWallet()\n     // Unlock wallet when requested by wallet model\n     if (walletModel->getEncryptionStatus() == WalletModel::Locked)\n     {\n-        AskPassphraseDialog dlg(AskPassphraseDialog::Unlock, this);\n-        dlg.setModel(walletModel);\n+        AskPassphraseDialog dlg(AskPassphraseDialog::Unlock, walletModel, this);\n         dlg.exec();\n     }\n }"
      }
    ]
  }
]