MarcoFalke,2020-05-31 00:37:59,"ACK after documenting the circular dep in the linter:\n\n```\nA new circular dependency in the form of ""httprpc -> rpc/server -> httprpc"" appears to have been introduced.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-636403530,636403530,
DrahtBot,2020-05-31 05:37:21,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17805 (test: Add test for rpcwhitelistdefault by emilengler)\n\nIf you consider this pull request important, please also ",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-636425530,636425530,
luke-jr,2020-05-31 17:39:53,@MarcoFalke  Done,https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-636503452,636503452,
promag,2020-05-31 21:57:01,"> Uses a JSON Object for methods for future extensions\n\nAny idea in mind?",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-636536203,636536203,
MarcoFalke,2020-05-31 22:15:26,"> Any idea in mind?\n\nThe developer notes recommend it.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-636538381,636538381,
promag,2020-06-01 22:59:06,"@MarcoFalke I mean nothing comes to my mind that could be assigned to each whitelist'ed method.\n\nI think we could name this `getrpccredentials` and it could return `{ ""whitelist"": [""...""] }` or `{}` for when the user doesn't have a whitelist. IMO this is more extensible.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-637169233,637169233,
MarcoFalke,2020-06-01 23:10:30,"Nothing comes to my mind either, but the key-value pair make the return value a bit more self-documenting. Also, there should be no downside just following the dev notes.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-637173140,637173140,
jonatack,2020-06-03 18:58:48,Concept ACK. Will review.,https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-638397030,638397030,
Kixunil,2020-06-05 08:06:09,"I do have an idea for extending the whitelist (I actually wanted to suggest it before I learned about whitelist being extendable!): each RPC call could be versioned using semver (two numbers should be enough) so that then the clients can very precisely detect compatibility. New options are added to various RPC methods over time, so it'd be great for the client to know what the node supports. I'd e",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639325940,639325940,
promag,2020-06-05 14:23:24,"@Kixunil this PR is about returning the whitelist of the current user, not about feature detection nor about interface versioning - IMO server version is enough for the client - so please lets discuss it in the right place.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639528143,639528143,
Kixunil,2020-06-05 15:41:37,"@promag fair enough, thanks for clarifying!",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639575322,639575322,
luke-jr,2020-06-05 16:27:51,"@promag ""Server versioning"" is not a good method for feature discovery... Knots for example has many RPCs before they're available in Core.\n\nAnd if there are multiple ways to do something, now you'd have 2 steps: first, figure out if the version supports the ""better"" way, then check if the ""better"" way is not excluded by a whitelist.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639611634,639611634,
MarcoFalke,2020-06-05 16:35:06,"> Knots for example has many RPCs before they're available in Core.\n\nThen, the `help` RPC should already return them, no?",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639616076,639616076,
luke-jr,2020-06-05 17:43:01,"Yes, my response was to @promag's proposal that server versioning is a good way to do it. It isn't.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639660602,639660602,
JeremyRubin,2020-06-05 23:51:15,"@promag returning the whitelist is kinda fundamentally about feature detection, and that leads to an interesting note...\n\nWhitelists can contain RPCs that don't exist, so it's possible to misuse the output here if you assume the whitelist is valid rpcs.\n\nWe probably do want to figure out a robust feature detection call and filter against the whitelists...",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639902289,639902289,
promag,2020-06-06 00:08:34,"@JeremyRubin IIUC this RPC exposes configuration data and, like you say, might reference inexistent RPC, especially if one goes back and forth different versions with same configuration.\n\n> We probably do want to figure out a robust feature detection call and filter against the whitelists...\n\nRight, that's why I suggested to discuss feature discovery elsewhere.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639908939,639908939,
JeremyRubin,2020-06-06 00:51:01,"I think we shouldn't make an RPC for whitelists potentially, we should just add a feature discovery API (which is why it's relevant to discuss here)",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639927191,639927191,
promag,2020-06-06 01:07:22,"I wouldn't consider them exclusive but in that case it makes sense to discuss here.\n",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-639933826,639933826,
Kixunil,2020-06-07 07:18:08,What's the use case for purely sending the whitelist anyway? How it could be useful without other things like feature detection?,https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-640169581,640169581,
promag,2020-06-11 10:56:37,"> What's the use case for purely sending the whitelist anyway? How it could be useful without other things like feature detection?\n\n@Kixunil please see https://github.com/bitcoin/bitcoin/issues/12248#issuecomment-619974010 for related discussion.\n\nLooks like we should take a different approach then? (to avoid whitelist usage and combine with feature discovery)",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-642569793,642569793,
Kixunil,2020-06-11 17:52:33,@promag so do I understand correctly the reason why write just whitelist is because it's simple?,https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-642837477,642837477,
luke-jr,2020-08-20 23:41:55,"Seems like a generic feature discovery method is a better approach, so closing this",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-677959201,677959201,
JeremyRubin,2020-08-21 00:06:25,"@luke-jr do you have a reference on this? I like feature discovery!\n\nWhen we discussed in core dev meeting everyone was nacking any generic feature discovery feature.",https://github.com/bitcoin/bitcoin/pull/19117#issuecomment-677965687,677965687,
promag,2020-06-02 10:26:42,This fails when user is not in the map.,https://github.com/bitcoin/bitcoin/pull/19117#discussion_r433775715,433775715,src/httprpc.cpp
luke-jr,2020-06-02 18:07:29,">Not clear what it should do for users that don't have a whitelist (ie, can access all methods). Currently errors I think.\n\n",https://github.com/bitcoin/bitcoin/pull/19117#discussion_r434074829,434074829,src/httprpc.cpp
Kixunil,2020-06-05 08:09:41,I believe it should return the list of all available RPC methods. It's consistent and it'd enable feature detection. See #19087 for more discussion about feature detection.,https://github.com/bitcoin/bitcoin/pull/19117#discussion_r435758743,435758743,src/httprpc.cpp
MarcoFalke,2020-06-05 11:53:47,"If the rpc whitelist is empty, one could call `help` to get all methods. But maybe just returning the whole set here seems appropriate. How to deal with hidden RPCs, though?",https://github.com/bitcoin/bitcoin/pull/19117#discussion_r435870728,435870728,src/httprpc.cpp
promag,2020-06-05 11:58:25,I think it should return empty - no whitelist is defined for the user.,https://github.com/bitcoin/bitcoin/pull/19117#discussion_r435873109,435873109,src/httprpc.cpp
Kixunil,2020-06-05 14:02:38,"Hmm, should it be designed for simplicity of `bitcoind` or practicality of clients? I suppose this feature will be most useful for auto-detecting available features, but maybe I'm missing something?",https://github.com/bitcoin/bitcoin/pull/19117#discussion_r435943575,435943575,src/httprpc.cpp
MarcoFalke,2020-06-05 14:15:11,"I guess that makes sense, but I think hidden methods should not be included by default.",https://github.com/bitcoin/bitcoin/pull/19117#discussion_r435951407,435951407,src/httprpc.cpp
Kixunil,2020-06-05 14:22:28,Do I understand correctly that the hidden methods are used for testing only?,https://github.com/bitcoin/bitcoin/pull/19117#discussion_r435955951,435955951,src/httprpc.cpp
