[
  {
    "sha": "77c912d21c8cd153f4503c65225a5a46990cc85a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2M5MTJkMjFjOGNkMTUzZjQ1MDNjNjUyMjVhNWE0Njk5MGNjODVh",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-15T08:49:29Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-07-27T13:19:23Z"
      },
      "message": "[Wallet] add HD xpriv to dumpwallet",
      "tree": {
        "sha": "c5b5f602b9034c80ad075a586d8793ce5f8dd02f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5b5f602b9034c80ad075a586d8793ce5f8dd02f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77c912d21c8cd153f4503c65225a5a46990cc85a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXmLTcAAoJECnUvLZBb1PsmSsQAMCEw4U2mZZ17v+t8wXeQV5r\nd2dBeteEt7GeqGe+0jsRD8kLyqcOHZvbEupc0mnJW6juKvNMc+wGSUouvqwncE6C\nKnLjm58V7hpoeoOr2dW+bgTZzuhO/NCPeEJkmJzbrrphh4A9PLVBY4zWp68/puJA\nVCRbloBozs9KhH2va8leOlckoKwRDnwwLwyacqQ1Jcn6NdiOSimF/AJ5nxz0dP+8\nb5GV/5n+E8RP/09AhoQdplmflCS0RPISNedkEUG0YGe4zoXmEYkcdD9FK+CWvQaE\ntSQDvsW7+IZPpE9+s4AuM+Yw7oAGrgqARD+HXO7OLgysZXw01BKFz6K1h5Xf+xqB\nHz5dIeoY5ktZUYmZEXpMvJEyBkZEQnmyJ6zHPBj0RRJ783IhVreYs0k+I/ffHRMr\nqE96L3wHS2C5AkjqFIkJmU2hWDtlMj1w8xYHyT6x0bU5AMSyRTNJHuOCyKzxNH79\nrXmcnlUn3INkBRFFRi4BiL0sI57sLMs6ztcUj6Cl+Qs6dgaG145fjRhOUE3vDDMQ\nWZ5f8b+AR6KadYJMgJ7Zz44wHLRyus9t47wmr+CLOtRc+56r7dZCCWXfELuafdwl\n2TcJpUPMexCyu27xp60UxJ6+sgcEFHvC1H4SEcV+LPdKJs82KNrs8wN6bpufyEw0\nRmCC8kivrGsr0H2/Rp8T\n=F2Q4\n-----END PGP SIGNATURE-----",
        "payload": "tree c5b5f602b9034c80ad075a586d8793ce5f8dd02f\nparent 8e048f40cc25b6ad3f49d2828c8562b657d91ced\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1465980569 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1469625563 +0200\n\n[Wallet] add HD xpriv to dumpwallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77c912d21c8cd153f4503c65225a5a46990cc85a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77c912d21c8cd153f4503c65225a5a46990cc85a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77c912d21c8cd153f4503c65225a5a46990cc85a/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e048f40cc25b6ad3f49d2828c8562b657d91ced",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e048f40cc25b6ad3f49d2828c8562b657d91ced",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e048f40cc25b6ad3f49d2828c8562b657d91ced"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 27,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6647d3297fad25c0f260c9748b4afd3b09bbef71",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 3,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77c912d21c8cd153f4503c65225a5a46990cc85a/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77c912d21c8cd153f4503c65225a5a46990cc85a/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=77c912d21c8cd153f4503c65225a5a46990cc85a",
        "patch": "@@ -602,19 +602,42 @@ UniValue dumpwallet(const UniValue& params, bool fHelp)\n     file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", chainActive.Height(), chainActive.Tip()->GetBlockHash().ToString());\n     file << strprintf(\"#   mined on %s\\n\", EncodeDumpTime(chainActive.Tip()->GetBlockTime()));\n     file << \"\\n\";\n+\n+    // add the base58check encoded extended master if the wallet uses HD \n+    CKeyID masterKeyID = pwalletMain->GetHDChain().masterKeyID;\n+    if (!masterKeyID.IsNull())\n+    {\n+        CKey key;\n+        if (pwalletMain->GetKey(masterKeyID, key))\n+        {\n+            CExtKey masterKey;\n+            masterKey.SetMaster(key.begin(), key.size());\n+\n+            CBitcoinExtKey b58extkey;\n+            b58extkey.SetKey(masterKey);\n+\n+            file << \"# extended private masterkey: \" << b58extkey.ToString() << \"\\n\\n\";\n+        }\n+    }\n     for (std::vector<std::pair<int64_t, CKeyID> >::const_iterator it = vKeyBirth.begin(); it != vKeyBirth.end(); it++) {\n         const CKeyID &keyid = it->second;\n         std::string strTime = EncodeDumpTime(it->first);\n         std::string strAddr = CBitcoinAddress(keyid).ToString();\n         CKey key;\n         if (pwalletMain->GetKey(keyid, key)) {\n+            file << strprintf(\"%s %s \", CBitcoinSecret(key).ToString(), strTime);\n             if (pwalletMain->mapAddressBook.count(keyid)) {\n-                file << strprintf(\"%s %s label=%s # addr=%s\\n\", CBitcoinSecret(key).ToString(), strTime, EncodeDumpString(pwalletMain->mapAddressBook[keyid].name), strAddr);\n+                file << strprintf(\"label=%s\", EncodeDumpString(pwalletMain->mapAddressBook[keyid].name));\n+            } else if (keyid == masterKeyID) {\n+                file << \"hdmaster=1\";\n             } else if (setKeyPool.count(keyid)) {\n-                file << strprintf(\"%s %s reserve=1 # addr=%s\\n\", CBitcoinSecret(key).ToString(), strTime, strAddr);\n+                file << \"reserve=1\";\n+            } else if (pwalletMain->mapKeyMetadata[keyid].hdKeypath == \"m\") {\n+                file << \"inactivehdmaster=1\";\n             } else {\n-                file << strprintf(\"%s %s change=1 # addr=%s\\n\", CBitcoinSecret(key).ToString(), strTime, strAddr);\n+                file << \"change=1\";\n             }\n+            file << strprintf(\" # addr=%s%s\\n\", strAddr, (pwalletMain->mapKeyMetadata[keyid].hdKeypath.size() > 0 ? \" hdkeypath=\"+pwalletMain->mapKeyMetadata[keyid].hdKeypath : \"\"));\n         }\n     }\n     file << \"\\n\";"
      },
      {
        "sha": "efed2ba11df02167d18bc0ff1287ef724d453b37",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77c912d21c8cd153f4503c65225a5a46990cc85a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77c912d21c8cd153f4503c65225a5a46990cc85a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=77c912d21c8cd153f4503c65225a5a46990cc85a",
        "patch": "@@ -899,10 +899,10 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     /* Set the HD chain model (chain child index counters) */\n     bool SetHDChain(const CHDChain& chain, bool memonly);\n+    const CHDChain& GetHDChain() { return hdChain; }\n \n     /* Set the current HD master key (will reset the chain child index counters) */\n     bool SetHDMasterKey(const CKey& key);\n-    const CHDChain& GetHDChain() { return hdChain; }\n };\n \n /** A key allocated from the key pool. */"
      }
    ]
  }
]