[
  {
    "sha": "5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmRmMzJkZTdlZDg1YTFhMGFlYzdjZGVkYjgzZjc1MGY0YTBmN2Zm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-12-26T03:49:19Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-12-26T03:49:19Z"
      },
      "message": "Replace some instances of formatWithUnit with formatHtmlWithUnit\n\nStrings in a HTML context should be using formatHtmlWithUnit.",
      "tree": {
        "sha": "53c3efd2f6988907cf3862a322bbd241900071af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53c3efd2f6988907cf3862a322bbd241900071af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be9a9a3d2253ceccf123572b97a890c489a5a9be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be9a9a3d2253ceccf123572b97a890c489a5a9be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be9a9a3d2253ceccf123572b97a890c489a5a9be"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 5,
      "deletions": 11
    },
    "files": [
      {
        "sha": "9c86cb71d47c85b8a1ce95aa6aabb208b410990f",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
        "patch": "@@ -111,13 +111,6 @@ QString BitcoinUnits::format(int unit, const CAmount& nIn, bool fPlus, Separator\n }\n \n \n-// TODO: Review all remaining calls to BitcoinUnits::formatWithUnit to\n-// TODO: determine whether the output is used in a plain text context\n-// TODO: or an HTML context (and replace with\n-// TODO: BtcoinUnits::formatHtmlWithUnit in the latter case). Hopefully\n-// TODO: there aren't instances where the result could be used in\n-// TODO: either context.\n-\n // NOTE: Using formatWithUnit in an HTML context risks wrapping\n // quantities at the thousands separator. More subtly, it also results\n // in a standard space rather than a thin space, due to a bug in Qt's"
      },
      {
        "sha": "f9f67c9f1166c3c00501d26343737e9ddc0415fc",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
        "patch": "@@ -88,6 +88,7 @@ class BitcoinUnits: public QAbstractListModel\n     static QString format(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Format as string (with unit)\n     static QString formatWithUnit(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n+    //! Format as HTML string (with unit)\n     static QString formatHtmlWithUnit(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Parse string to coin amount\n     static bool parse(int unit, const QString &value, CAmount *val_out);"
      },
      {
        "sha": "064882847499b2cef7d1a2a22628fafa8baffc70",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
        "patch": "@@ -637,14 +637,14 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n-    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000))) + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatHtmlWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000))) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n     toolTip2 += tr(\"This label turns red if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000)));\n+    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatHtmlWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000)));\n \n-    QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n+    QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatHtmlWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n     double dFeeVary;"
      },
      {
        "sha": "75108e0a10ce811a0588e812812d1e5f46032ca7",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
        "patch": "@@ -144,7 +144,7 @@ void ReceiveRequestDialog::update()\n     html += \"<a href=\\\"\"+uri+\"\\\">\" + GUIUtil::HtmlEscape(uri) + \"</a><br>\";\n     html += \"<b>\"+tr(\"Address\")+\"</b>: \" + GUIUtil::HtmlEscape(info.address) + \"<br>\";\n     if(info.amount)\n-        html += \"<b>\"+tr(\"Amount\")+\"</b>: \" + BitcoinUnits::formatWithUnit(model->getDisplayUnit(), info.amount) + \"<br>\";\n+        html += \"<b>\"+tr(\"Amount\")+\"</b>: \" + BitcoinUnits::formatHtmlWithUnit(model->getDisplayUnit(), info.amount) + \"<br>\";\n     if(!info.label.isEmpty())\n         html += \"<b>\"+tr(\"Label\")+\"</b>: \" + GUIUtil::HtmlEscape(info.label) + \"<br>\";\n     if(!info.message.isEmpty())"
      }
    ]
  },
  {
    "sha": "6fd0a079d8f9fa552d84be7a6787b1165b99b302",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmQwYTA3OWQ4ZjlmYTU1MmQ4NGJlN2E2Nzg3YjExNjViOTliMzAy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2016-01-02T21:57:51Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2016-01-02T21:57:51Z"
      },
      "message": "Remove hardcoded fee from CoinControl ToolTip",
      "tree": {
        "sha": "2325d94e3c122a7e6ac837a50471c263c54680f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2325d94e3c122a7e6ac837a50471c263c54680f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fd0a079d8f9fa552d84be7a6787b1165b99b302",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fd0a079d8f9fa552d84be7a6787b1165b99b302",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6fd0a079d8f9fa552d84be7a6787b1165b99b302",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fd0a079d8f9fa552d84be7a6787b1165b99b302/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fdf32de7ed85a1a0aec7cdedb83f750f4a0f7ff"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "357edf4aa23aded1afbd43355ca814075f0e6a9e",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fd0a079d8f9fa552d84be7a6787b1165b99b302/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fd0a079d8f9fa552d84be7a6787b1165b99b302/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=6fd0a079d8f9fa552d84be7a6787b1165b99b302",
        "patch": "@@ -130,7 +130,7 @@ CoinControlDialog::CoinControlDialog(const PlatformStyle *platformStyle, QWidget\n     ui->treeWidget->setColumnWidth(COLUMN_DATE, 110);\n     ui->treeWidget->setColumnWidth(COLUMN_CONFIRMATIONS, 100);\n     ui->treeWidget->setColumnWidth(COLUMN_PRIORITY, 100);\n-    ui->treeWidget->setColumnHidden(COLUMN_TXHASH, true);         // store transacton hash in this column, but don't show it\n+    ui->treeWidget->setColumnHidden(COLUMN_TXHASH, true);         // store transaction hash in this column, but don't show it\n     ui->treeWidget->setColumnHidden(COLUMN_VOUT_INDEX, true);     // store vout index in this column, but don't show it\n     ui->treeWidget->setColumnHidden(COLUMN_AMOUNT_INT64, true);   // store amount int64 in this column, but don't show it\n     ui->treeWidget->setColumnHidden(COLUMN_PRIORITY_INT64, true); // store priority int64 in this column, but don't show it\n@@ -644,7 +644,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     toolTip2 += tr(\"This label turns red if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n     toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatHtmlWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000)));\n \n-    QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatHtmlWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n+    QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than the current dust threshold.\");\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n     double dFeeVary;"
      }
    ]
  }
]