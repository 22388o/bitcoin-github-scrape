[
  {
    "sha": "f606bb9bafafb12bcf9bc0834125c884da97f9e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjA2YmI5YmFmYWZiMTJiY2Y5YmMwODM0MTI1Yzg4NGRhOTdmOWUx",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-09-28T14:09:19Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-10-01T06:48:22Z"
      },
      "message": "fix a possible memory leak in CWalletDB::Recover\n\n- convert pdbCopy into a boost::scoped_ptr to ensure memory gets freed\n  in all cases (e.g. after \"ret > 0\")",
      "tree": {
        "sha": "b1152359cd226b215eacbec8575f624648c8b66f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1152359cd226b215eacbec8575f624648c8b66f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f606bb9bafafb12bcf9bc0834125c884da97f9e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f606bb9bafafb12bcf9bc0834125c884da97f9e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f606bb9bafafb12bcf9bc0834125c884da97f9e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f606bb9bafafb12bcf9bc0834125c884da97f9e1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e5836eb6923b8142003915fc02f2f0b4dc7731c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5836eb6923b8142003915fc02f2f0b4dc7731c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5836eb6923b8142003915fc02f2f0b4dc7731c1"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e13830a8f450d1e2c483b3273017f1ba15397f71",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f606bb9bafafb12bcf9bc0834125c884da97f9e1/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f606bb9bafafb12bcf9bc0834125c884da97f9e1/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=f606bb9bafafb12bcf9bc0834125c884da97f9e1",
        "patch": "@@ -15,11 +15,11 @@\n \n #include <boost/filesystem.hpp>\n #include <boost/foreach.hpp>\n+#include <boost/scoped_ptr.hpp>\n #include <boost/thread.hpp>\n \n-using namespace std;\n using namespace boost;\n-\n+using namespace std;\n \n static uint64_t nAccountingEntryNumber = 0;\n \n@@ -926,7 +926,7 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys)\n     LogPrintf(\"Salvage(aggressive) found %u records\\n\", salvagedData.size());\n \n     bool fSuccess = allOK;\n-    Db* pdbCopy = new Db(&dbenv.dbenv, 0);\n+    boost::scoped_ptr<Db> pdbCopy(new Db(&dbenv.dbenv, 0));\n     int ret = pdbCopy->open(NULL,               // Txn pointer\n                             filename.c_str(),   // Filename\n                             \"main\",             // Logical db name\n@@ -967,7 +967,6 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys)\n     }\n     ptxn->commit(0);\n     pdbCopy->close(0);\n-    delete pdbCopy;\n \n     return fSuccess;\n }"
      }
    ]
  },
  {
    "sha": "870da77da632501e8eec58ed73e8f30549cc41e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzBkYTc3ZGE2MzI1MDFlOGVlYzU4ZWQ3M2U4ZjMwNTQ5Y2M0MWU5",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-09-28T14:11:17Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-10-01T06:48:23Z"
      },
      "message": "fix possible memory leaks in CWallet::EncryptWallet\n\n- add missing deletes for pwalletdbEncryption\n- add an assert before trying to reserve memory for pwalletdbEncryption\n- add a destructor to CWallet, which ensures deletion of\n  pwalletdbEncryption on object destruction",
      "tree": {
        "sha": "405722d8204e9d212c98d08ed49dff99cefc8103",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/405722d8204e9d212c98d08ed49dff99cefc8103"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/870da77da632501e8eec58ed73e8f30549cc41e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/870da77da632501e8eec58ed73e8f30549cc41e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/870da77da632501e8eec58ed73e8f30549cc41e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/870da77da632501e8eec58ed73e8f30549cc41e9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f606bb9bafafb12bcf9bc0834125c884da97f9e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f606bb9bafafb12bcf9bc0834125c884da97f9e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f606bb9bafafb12bcf9bc0834125c884da97f9e1"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 26,
      "deletions": 6
    },
    "files": [
      {
        "sha": "897f53b8b7d5e7f90eac90a91ab5a2f418a6a64b",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 6,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/870da77da632501e8eec58ed73e8f30549cc41e9/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/870da77da632501e8eec58ed73e8f30549cc41e9/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=870da77da632501e8eec58ed73e8f30549cc41e9",
        "patch": "@@ -426,26 +426,38 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n         mapMasterKeys[++nMasterKeyMaxID] = kMasterKey;\n         if (fFileBacked)\n         {\n+            assert(!pwalletdbEncryption);\n             pwalletdbEncryption = new CWalletDB(strWalletFile);\n-            if (!pwalletdbEncryption->TxnBegin())\n+            if (!pwalletdbEncryption->TxnBegin()) {\n+                delete pwalletdbEncryption;\n+                pwalletdbEncryption = NULL;\n                 return false;\n+            }\n             pwalletdbEncryption->WriteMasterKey(nMasterKeyMaxID, kMasterKey);\n         }\n \n         if (!EncryptKeys(vMasterKey))\n         {\n-            if (fFileBacked)\n+            if (fFileBacked) {\n                 pwalletdbEncryption->TxnAbort();\n-            exit(1); //We now probably have half of our keys encrypted in memory, and half not...die and let the user reload their unencrypted wallet.\n+                delete pwalletdbEncryption;\n+            }\n+            // We now probably have half of our keys encrypted in memory, and half not...\n+            // die and let the user reload their unencrypted wallet.\n+            exit(1);\n         }\n \n         // Encryption was introduced in version 0.4.0\n         SetMinVersion(FEATURE_WALLETCRYPT, pwalletdbEncryption, true);\n \n         if (fFileBacked)\n         {\n-            if (!pwalletdbEncryption->TxnCommit())\n-                exit(1); //We now have keys encrypted in memory, but no on disk...die to avoid confusion and let the user reload their unencrypted wallet.\n+            if (!pwalletdbEncryption->TxnCommit()) {\n+                delete pwalletdbEncryption;\n+                // We now have keys encrypted in memory, but no on disk...\n+                // die to avoid confusion and let the user reload their unencrypted wallet.\n+                exit(1);\n+            }\n \n             delete pwalletdbEncryption;\n             pwalletdbEncryption = NULL;\n@@ -1068,7 +1080,7 @@ int64_t CWallet::GetWatchOnlyBalance() const\n                 nTotal += pcoin->GetAvailableWatchOnlyCredit();\n         }\n     }\n-    \n+\n     return nTotal;\n }\n "
      },
      {
        "sha": "344f9c0e040240045cc591df63a1615ecac39636",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/870da77da632501e8eec58ed73e8f30549cc41e9/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/870da77da632501e8eec58ed73e8f30549cc41e9/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=870da77da632501e8eec58ed73e8f30549cc41e9",
        "patch": "@@ -143,13 +143,21 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     {\n         SetNull();\n     }\n+\n     CWallet(std::string strWalletFileIn)\n     {\n         SetNull();\n \n         strWalletFile = strWalletFileIn;\n         fFileBacked = true;\n     }\n+\n+    ~CWallet()\n+    {\n+        delete pwalletdbEncryption;\n+        pwalletdbEncryption = NULL;\n+    }\n+\n     void SetNull()\n     {\n         nWalletVersion = FEATURE_BASE;"
      }
    ]
  },
  {
    "sha": "d0c4197ef6ecfdaff792579810107e2f1b8b319e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGM0MTk3ZWY2ZWNmZGFmZjc5MjU3OTgxMDEwN2UyZjFiOGIzMTll",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-10-01T06:50:24Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-10-01T06:50:24Z"
      },
      "message": "change exit(1) to an assert in CWallet::EncryptWallet",
      "tree": {
        "sha": "6cedef65a5c754fcafe5b577d91b5fd70ff9e226",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cedef65a5c754fcafe5b577d91b5fd70ff9e226"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0c4197ef6ecfdaff792579810107e2f1b8b319e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0c4197ef6ecfdaff792579810107e2f1b8b319e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0c4197ef6ecfdaff792579810107e2f1b8b319e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0c4197ef6ecfdaff792579810107e2f1b8b319e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "870da77da632501e8eec58ed73e8f30549cc41e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/870da77da632501e8eec58ed73e8f30549cc41e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/870da77da632501e8eec58ed73e8f30549cc41e9"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "be063ccb42a645fe47f968a05ab3576fb1fdaa54",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0c4197ef6ecfdaff792579810107e2f1b8b319e/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0c4197ef6ecfdaff792579810107e2f1b8b319e/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=d0c4197ef6ecfdaff792579810107e2f1b8b319e",
        "patch": "@@ -15,6 +15,8 @@\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n \n+#include <assert.h>\n+\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/thread.hpp>\n \n@@ -444,7 +446,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n             }\n             // We now probably have half of our keys encrypted in memory, and half not...\n             // die and let the user reload their unencrypted wallet.\n-            exit(1);\n+            assert(false);\n         }\n \n         // Encryption was introduced in version 0.4.0\n@@ -456,7 +458,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n                 delete pwalletdbEncryption;\n                 // We now have keys encrypted in memory, but no on disk...\n                 // die to avoid confusion and let the user reload their unencrypted wallet.\n-                exit(1);\n+                assert(false);\n             }\n \n             delete pwalletdbEncryption;"
      }
    ]
  }
]