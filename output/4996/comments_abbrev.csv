Diapolo,2014-09-29T11:33:21Z,@laanwj Do you suggest using `boost::scoped_ptr` for both pulls or just the one in walletdb?\n,https://github.com/bitcoin/bitcoin/pull/4996#issuecomment-57148163,57148163,
laanwj,2014-09-29T11:38:49Z,"@Diapolo just where I commented it; it makes no sense in the other place, as the usage of pwalletdbEncryption is too complex to just use scope-based management.\n",https://github.com/bitcoin/bitcoin/pull/4996#issuecomment-57148671,57148671,
Diapolo,2014-09-29T12:27:54Z,"@laanwj Thanks for your feedback, can you re-check?\n",https://github.com/bitcoin/bitcoin/pull/4996#issuecomment-57153142,57153142,
TheBlueMatt,2014-10-01T02:02:17Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/4996#issuecomment-57409830,57409830,
Diapolo,2014-10-01T06:52:31Z,"@TheBlueMatt Done, can you re-ACK ;)? @laanwj Maybe also an ACK now?\n",https://github.com/bitcoin/bitcoin/pull/4996#issuecomment-57425646,57425646,
BitcoinPullTester,2014-10-01T07:09:52Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4996_d0c4197ef6ecfdaff792579810107e2f1b8b319e/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4996#issuecomment-57426870,57426870,
sipa,2014-10-02T02:10:05Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/4996#issuecomment-57571307,57571307,
laanwj,2014-10-02T09:49:53Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/4996#issuecomment-57606233,57606233,
laanwj,2014-09-29T11:28:42Z,Suggestion: change pdbCopy into a boost::scoped_ptr and delete all the manual deletes\n,https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18148360,18148360,src/walletdb.cpp
laanwj,2014-09-29T11:31:31Z,nit: also set it to zero after deletion\n,https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18148427,18148427,src/wallet.cpp
laanwj,2014-09-29T11:32:37Z,Suggestion: add `assert(!pwalletdbEncryption)` before this set\n,https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18148462,18148462,src/wallet.cpp
laanwj,2014-09-29T11:33:18Z,Suggestion: also delete pwalletdbEncryption in CWallet's destructor. This will make sure it will always be deleted when the wallet object is deleted/goes out of scope.\n,https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18148476,18148476,src/wallet.cpp
Diapolo,2014-09-29T12:04:52Z,"Is this nit considered best practise after a delete call? If so you mean adding it after all `delete pwalletdbEncryption;` calls, right?\n\nI guess you mean only here, because this doesn't `exit` ;).\n",https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18149463,18149463,src/wallet.cpp
laanwj,2014-09-29T12:20:01Z,It's good practice usually to set pointers to 0 after deletion to make sure that no dangling references exist.\nEspecially in this case as the object itself is not going away after it (like in a destructor or when exit is called in the next line :p).\n,https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18149910,18149910,src/wallet.cpp
laanwj,2014-09-29T12:21:32Z,In this case yes just do it after all `delete pwalletdbEncryption` calls (except where it already happens).\n,https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18149975,18149975,src/wallet.cpp
Diapolo,2014-09-29T12:27:19Z,Done!\n,https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18150186,18150186,src/walletdb.cpp
TheBlueMatt,2014-10-01T01:55:32Z,"While you're at it, can you change this to an assert(false) so we can at least get a line number printed before exit?\n",https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18258169,18258169,src/wallet.cpp
Diapolo,2014-10-01T06:43:19Z,"@TheBlueMatt AFAIK there are 2 `exit(1);` calls, shall I replace both with an assert?\n",https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18263271,18263271,src/wallet.cpp
TheBlueMatt,2014-10-01T06:45:59Z,I would.\n,https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18263329,18263329,src/wallet.cpp
laanwj,2014-10-01T06:52:39Z,"OK it's acceptable to use assert for now, although we should be looking into replacing all asserts with a function that always gets compiled in and not gets stripped with NDEBUG.\n",https://github.com/bitcoin/bitcoin/pull/4996#discussion_r18263483,18263483,src/wallet.cpp
