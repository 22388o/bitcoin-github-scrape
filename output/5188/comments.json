[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61390007",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61390007",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5188",
    "id": 61390007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzkwMDA3",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-02T01:02:12Z",
    "updated_at": "2014-11-02T01:02:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like the approach (surprise).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61390007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61397208",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61397208",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5188",
    "id": 61397208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzk3MjA4",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-02T07:38:08Z",
    "updated_at": "2014-11-02T07:38:08Z",
    "author_association": "MEMBER",
    "body": "Yes, I'd even ACK it, if not for the IsCompressedPubKey nit :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61397208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61519189",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61519189",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5188",
    "id": 61519189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTE5MTg5",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T17:57:46Z",
    "updated_at": "2014-11-03T17:57:46Z",
    "author_association": "MEMBER",
    "body": "Mmm, but in the case of an OP_CHECKSIGVERIFY with a bad pubkey the script would fail, no? In that case, wouldn't we want that error set?\n\nThat raises another question: If EvalScript returns true but contains a false/empty stack, should something like SCRIPT_EVAL_NOT_TRUE be returned from EvalScript() as the error? Or should that be considered to be SCRIPT_NO_ERROR, and VerifyScript() sets the ultimate result?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61519189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61520486",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61520486",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5188",
    "id": 61520486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTIwNDg2",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T18:06:01Z",
    "updated_at": "2014-11-03T18:06:01Z",
    "author_association": "MEMBER",
    "body": "Yes, for OP_CHECKSIGVERIFY you're right. But generality...\n\nThe point is that, as currently implemented, a bad public key is not something that results in (direct) script failure, so you can't consider it to be an error condition that causes script failure. I don't care enough about the actual error messages produced because of this that I don't want to lose them. They're pretty verbose anyway.\n\nRegarding no-error-failure: it's pretty important that for actual consensus behaviour you do not distinguish between error-failure and normal-failure. The distinction between the ScriptError object and the return value is perfect for that. if it helps for better messages: sure, make evaluation failure an error condition too.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61520486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61526371",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61526371",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5188",
    "id": 61526371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTI2Mzcx",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T18:44:30Z",
    "updated_at": "2014-11-03T18:44:30Z",
    "author_association": "MEMBER",
    "body": "I really don't care about error messages, I'm just considering the inevitability (since these error codes will be an exposed public api) that people will erroneously use the ScriptError to determine pass/fail, since it looks like a typical C api to do so. I'd prefer to always have it set to something other than NO_ERROR on failure to help protect from that. Admittedly I'm thinking much more in terms of lib usage than Bitcoind's.\n\nAs for the condition that causes failure, how about something like this at the end of EvalScript:\n\n``` diff\ndiff --git a/src/script/interpreter.cpp b/src/script/interpreter.cpp\nindex 8802806..a913f1c 100644\n--- a/src/script/interpreter.cpp\n+++ b/src/script/interpreter.cpp\n@@ -882,6 +882,13 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n     if (!vfExec.empty())\n         return set_error(serror);\n\n+    if (stack.empty() || CastToBool(stack.back()) == false)\n+    {\n+        // If we get here with an error set, that error is ignored because the\n+        // ultimate reason for failure is a non-true top stack element.\n+        set_error(SCRIPT_STACK_TOP_NOT_TRUE);\n+        return true;\n+    }\n     return set_success(serror);\n }\n\n```\n\nFwiw, I don't disagree with you at all, and I'm not trying to be pedantic about this case, I'd just like to avoid special-casing so that all error-handling is done uniformly.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61526371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61528960",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61528960",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5188",
    "id": 61528960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTI4OTYw",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T19:00:33Z",
    "updated_at": "2014-11-03T19:00:33Z",
    "author_association": "MEMBER",
    "body": "LGTM\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61528960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61755341",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61755341",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5188",
    "id": 61755341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzU1MzQx",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T03:35:13Z",
    "updated_at": "2014-11-05T03:35:13Z",
    "author_association": "MEMBER",
    "body": "cleaned up and removed the RFC tag in #5212. Ended up removing logging and handling IsCompressedOrUncompressedPubKey() as you suggested.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/61755341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19702453",
    "pull_request_review_id": null,
    "id": 19702453,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzAyNDUz",
    "diff_hunk": "@@ -52,68 +69,69 @@ static inline void popstack(vector<valtype>& stack)\n         throw runtime_error(\"popstack() : stack empty\");\n     stack.pop_back();\n }\n-\n-bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n-    if (vchPubKey.size() < 33)\n-        return error(\"Non-canonical public key: too short\");\n+bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey, ScriptError* serror) {\n+    if (vchPubKey.size() < 33) {\n+        return set_error(serror, PUBKEY_TOO_SHORT);\n+    }\n     if (vchPubKey[0] == 0x04) {\n         if (vchPubKey.size() != 65)\n-            return error(\"Non-canonical public key: invalid length for uncompressed key\");\n+            return set_error(serror, PUBKEY_BAD_UNCOMPRESSED_LENGTH);\n     } else if (vchPubKey[0] == 0x02 || vchPubKey[0] == 0x03) {\n         if (vchPubKey.size() != 33)\n-            return error(\"Non-canonical public key: invalid length for compressed key\");\n+            return set_error(serror, PUBKEY_BAD_COMPRESSED_LENGTH);\n     } else {\n-        return error(\"Non-canonical public key: neither compressed nor uncompressed\");\n+        return set_error(serror, PUBKEY_UNKNOWN_LENGTH);",
    "path": "src/script/interpreter.cpp",
    "position": 55,
    "original_position": 55,
    "commit_id": "69931df631439778f8a072d4a682855d3113b5cb",
    "original_commit_id": "69931df631439778f8a072d4a682855d3113b5cb",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's not unknown length here, but unknown type.\n",
    "created_at": "2014-11-01T08:44:32Z",
    "updated_at": "2014-11-01T08:44:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19702453",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5188",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19702453"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19702453"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5188"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19702453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705320",
    "pull_request_review_id": null,
    "id": 19705320,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA1MzIw",
    "diff_hunk": "@@ -1338,8 +1342,9 @@ void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCach\n \n bool CScriptCheck::operator()() const {\n     const CScript &scriptSig = ptxTo->vin[nIn].scriptSig;\n-    if (!VerifyScript(scriptSig, scriptPubKey, nFlags, CachingSignatureChecker(*ptxTo, nIn, cacheStore)))\n-        return error(\"CScriptCheck() : %s:%d VerifySignature failed\", ptxTo->GetHash().ToString(), nIn);\n+    ScriptError serror;\n+    if (!VerifyScript(scriptSig, scriptPubKey, nFlags, CachingSignatureChecker(*ptxTo, nIn, cacheStore), &serror))\n+        return error(\"CScriptCheck() : %s:%d VerifySignature failed. Error: %s\", ptxTo->GetHash().ToString(), nIn, ScriptErrorString(serror));",
    "path": "src/main.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "69931df631439778f8a072d4a682855d3113b5cb",
    "original_commit_id": "69931df631439778f8a072d4a682855d3113b5cb",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could you use **func** instead of a hard-coded function name?\n",
    "created_at": "2014-11-01T16:46:56Z",
    "updated_at": "2014-11-01T16:46:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705320",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5188",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705320"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705320"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5188"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1347,
    "original_line": 1347,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705374",
    "pull_request_review_id": null,
    "id": 19705374,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA1Mzc0",
    "diff_hunk": "@@ -52,68 +69,69 @@ static inline void popstack(vector<valtype>& stack)\n         throw runtime_error(\"popstack() : stack empty\");\n     stack.pop_back();\n }\n-\n-bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n-    if (vchPubKey.size() < 33)\n-        return error(\"Non-canonical public key: too short\");\n+bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey, ScriptError* serror) {",
    "path": "src/script/interpreter.cpp",
    "position": 41,
    "original_position": 41,
    "commit_id": "69931df631439778f8a072d4a682855d3113b5cb",
    "original_commit_id": "69931df631439778f8a072d4a682855d3113b5cb",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it makes sense to report a ScriptError from this function, as the result never gets propagated up: an incorrectly encoded public key causes that public key to be skipped (which causes the OP_CHECKSIG operation to fail, not the script entirely). In the usual case, that means the script just fails due to non-true final stack element, and not due to error.\n",
    "created_at": "2014-11-01T17:00:39Z",
    "updated_at": "2014-11-01T17:00:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705374",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5188",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705374"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705374"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5188"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 72,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705998",
    "pull_request_review_id": null,
    "id": 19705998,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA1OTk4",
    "diff_hunk": "@@ -52,68 +69,69 @@ static inline void popstack(vector<valtype>& stack)\n         throw runtime_error(\"popstack() : stack empty\");\n     stack.pop_back();\n }\n-\n-bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n-    if (vchPubKey.size() < 33)\n-        return error(\"Non-canonical public key: too short\");\n+bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey, ScriptError* serror) {\n+    if (vchPubKey.size() < 33) {\n+        return set_error(serror, PUBKEY_TOO_SHORT);\n+    }\n     if (vchPubKey[0] == 0x04) {\n         if (vchPubKey.size() != 65)\n-            return error(\"Non-canonical public key: invalid length for uncompressed key\");\n+            return set_error(serror, PUBKEY_BAD_UNCOMPRESSED_LENGTH);\n     } else if (vchPubKey[0] == 0x02 || vchPubKey[0] == 0x03) {\n         if (vchPubKey.size() != 33)\n-            return error(\"Non-canonical public key: invalid length for compressed key\");\n+            return set_error(serror, PUBKEY_BAD_COMPRESSED_LENGTH);\n     } else {\n-        return error(\"Non-canonical public key: neither compressed nor uncompressed\");\n+        return set_error(serror, PUBKEY_UNKNOWN_LENGTH);",
    "path": "src/script/interpreter.cpp",
    "position": 55,
    "original_position": 55,
    "commit_id": "69931df631439778f8a072d4a682855d3113b5cb",
    "original_commit_id": "69931df631439778f8a072d4a682855d3113b5cb",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@sipa Ok. Admittedly I didn't spend much effort on the names, as I assumed they'd be reworked to something more uniform by the time this gets merged. Are you OK with the concept?\n",
    "created_at": "2014-11-01T17:30:07Z",
    "updated_at": "2014-11-01T17:30:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705998",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5188",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705998"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705998"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5188"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/19705998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "RIGHT"
  }
]