gmaxwell,2014-11-02T01:02:12Z,I like the approach (surprise).\n,https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61390007,61390007,
sipa,2014-11-02T07:38:08Z,"Yes, I'd even ACK it, if not for the IsCompressedPubKey nit :)\n",https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61397208,61397208,
theuni,2014-11-03T17:57:46Z,"Mmm, but in the case of an OP_CHECKSIGVERIFY with a bad pubkey the script would fail, no? In that case, wouldn't we want that error set?\n\nThat raises another question: If EvalScript returns true but contains a false/empty stack, should something like SCRIPT_EVAL_NOT_TRUE be returned from EvalScript() as the error? Or should that be considered to be SCRIPT_NO_ERROR, and VerifyScript() sets the ul",https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61519189,61519189,
sipa,2014-11-03T18:06:01Z,"Yes, for OP_CHECKSIGVERIFY you're right. But generality...\n\nThe point is that, as currently implemented, a bad public key is not something that results in (direct) script failure, so you can't consider it to be an error condition that causes script failure. I don't care enough about the actual error messages produced because of this that I don't want to lose them. They're pretty verbose anyway.\",https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61520486,61520486,
theuni,2014-11-03T18:44:30Z,"I really don't care about error messages, I'm just considering the inevitability (since these error codes will be an exposed public api) that people will erroneously use the ScriptError to determine pass/fail, since it looks like a typical C api to do so. I'd prefer to always have it set to something other than NO_ERROR on failure to help protect from that. Admittedly I'm thinking much more in ter",https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61526371,61526371,
sipa,2014-11-03T19:00:33Z,LGTM\n,https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61528960,61528960,
theuni,2014-11-05T03:35:13Z,cleaned up and removed the RFC tag in #5212. Ended up removing logging and handling IsCompressedOrUncompressedPubKey() as you suggested.\n,https://github.com/bitcoin/bitcoin/pull/5188#issuecomment-61755341,61755341,
sipa,2014-11-01T08:44:32Z,"It's not unknown length here, but unknown type.\n",https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19702453,19702453,src/script/interpreter.cpp
Diapolo,2014-11-01T16:46:56Z,Could you use **func** instead of a hard-coded function name?\n,https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705320,19705320,src/main.cpp
sipa,2014-11-01T17:00:39Z,"I don't think it makes sense to report a ScriptError from this function, as the result never gets propagated up: an incorrectly encoded public key causes that public key to be skipped (which causes the OP_CHECKSIG operation to fail, not the script entirely). In the usual case, that means the script just fails due to non-true final stack element, and not due to error.\n",https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705374,19705374,src/script/interpreter.cpp
theuni,2014-11-01T17:30:07Z,"@sipa Ok. Admittedly I didn't spend much effort on the names, as I assumed they'd be reworked to something more uniform by the time this gets merged. Are you OK with the concept?\n",https://github.com/bitcoin/bitcoin/pull/5188#discussion_r19705998,19705998,src/script/interpreter.cpp
