DrahtBot,2019-10-25 22:45:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17283](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17283.html) (rpc: improve getaddressinfo test coverage, ",https://github.com/bitcoin/bitcoin/pull/17260#issuecomment-546536564,546536564,
Sjors,2019-10-26 08:44:59,"The code at 1c49a20cb10f2d48cf23bb364d586a9c1e86d5ec matches the first three commits in #17261 modulo the linter changes and extra lock discussed above. I in turn [verified](https://github.com/bitcoin/bitcoin/pull/17261#issuecomment-546582908) that #17261 matches what I previously reviewed.\n\nI'll review this PR on its own merits later.",https://github.com/bitcoin/bitcoin/pull/17260#issuecomment-546583678,546583678,
MarcoFalke,2019-11-02 17:38:02,"This had the nice side effect of cutting peak memory use during compilation: \n\nhttps://codespeed.bitcoinperf.com/timeline/?exe=3%2C4%2C2%2C1%2C5&base=1%2B23&ben=build.make.1.clang.mem-usage&env=1&revs=10&equid=off&quarts=on&extr=on\n\nhttps://codespeed.bitcoinperf.com/timeline/?exe=3%2C4%2C2%2C1%2C5&base=1%2B23&ben=build.make.1.gcc.mem-usage&env=1&revs=10&equid=off&quarts=on&extr=on",https://github.com/bitcoin/bitcoin/pull/17260#issuecomment-549065193,549065193,
JeremyRubin,2019-11-24 05:12:19,"So I might just be being lazy...\n\nBut can you do a bit more documentation on this one? This breaks some of my outstanding work (not PR'd yet) and I'd like to better understand where I should be making this functionality live...",https://github.com/bitcoin/bitcoin/pull/17260#issuecomment-557858675,557858675,
JeremyRubin,2019-11-24 05:19:46,I guess mostly it's just stuff moving into scriptpubkeyman? But do I need to replicate the logic elsewhere now? ,https://github.com/bitcoin/bitcoin/pull/17260#issuecomment-557859025,557859025,
achow101,2019-11-24 07:04:30,"@JeremyRubin Have you read https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Class-Structure-Changes\n\nBasically a bunch of things are moving into LegacyScriptPubKeyMan, and some of those that were moved become generic interfaces in CWallet which call the appropriate ScriptPubKeyMan.",https://github.com/bitcoin/bitcoin/pull/17260#issuecomment-557863523,557863523,
ryanofsky,2019-10-25 22:04:40,"In commit ""Refactor: Split up CWallet and LegacyScriptPubKeyMan and classes"" (194227b1173b0dd9a51d24e245ddaa601d36a109)\n\nWould be better not to reference `m_wallet` here. `m_wallet` is a temporary alias so any references added now will have to be removed later, causing unnecessary churn. Would suggest reverting the commit back to your previous af8780a65a530c48a0abc7f3ef6915f33d30943f push, and",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339254720,339254720,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-10-25 22:06:18,"In commit ""Refactor: Split up CWallet and LegacyScriptPubKeyMan and classes"" (194227b1173b0dd9a51d24e245ddaa601d36a109)\n\nExtra lock here seems not ideal. This commit is not supposed to change behavior in any way. Other places in this commit I just added AssertLockHelds where needed to avoid clang lock warnings, but here I'm not even seeing that is necessary.",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339255102,339255102,src/wallet/test/wallet_tests.cpp
achow101,2019-10-25 22:25:23,It was failing the tests without it.,https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339259163,339259163,src/wallet/test/wallet_tests.cpp
achow101,2019-10-25 22:56:22,Reverted and squashed linter changes.,https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339265025,339265025,src/wallet/scriptpubkeyman.cpp
ryanofsky,2019-10-26 13:45:33,"> It was failing the tests without it.\n\nSo this is definitely a bug. There canâ€™t be any changes in behavior in this PR. All it is supposed do is add wrapper functions and variable aliases. If any side effects are present from this, it means something has gone wrong.\n\nAny case I reproduced the problem and found it was limited to tests and caused by me pulling in some test-only LOCK changes ",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339300716,339300716,src/wallet/test/wallet_tests.cpp
achow101,2019-10-26 16:25:19,Done,https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339306257,339306257,src/wallet/test/wallet_tests.cpp
Sjors,2019-10-26 17:20:03,"FWIW: I'm no longer in favor of splitting this out. For example this RPC method relies on `ImportPrivKeys` which is no longer a method on `CWallet`, but on`LegacyScriptPubKeyMan` (and not of its parent class `ScriptPubKeyMan`). This is in contrast to methods like `setwalletflag` that still call `CWallet` methods.",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339308211,339308211,src/wallet/rpcdump.cpp
Sjors,2019-10-26 17:27:23,"It's a bit weird to have a definition in a cpp file. On a local branch I was able to move this to `scriptpubkeyman.h` in the second commit, courtesy of circular includes.",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339308494,339308494,src/wallet/wallet.cpp
ryanofsky,2019-10-26 18:44:42,"re: https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339308211\n\n> FWIW: I'm no longer in favor of splitting this out. For example this RPC method relies on `ImportPrivKeys` which is no longer a method on `CWallet`, but on`LegacyScriptPubKeyMan` (and not of its parent class `ScriptPubKeyMan`). This is in contrast to methods like `setwalletflag` that still call `CWallet` methods.\n\n:",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339311168,339311168,src/wallet/rpcdump.cpp
ryanofsky,2019-10-26 18:45:49,"In commit ""MOVEONLY: Move key handling code out of wallet to keyman file"" (6702048f91089d7a565e5ca5f7c8dcd2ca405a85):\n\nre: https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339308494\n\n> It's a bit weird to have a definition in a cpp file. On a local branch I was able to move this to `scriptpubkeyman.h` in the second commit, courtesy of circular includes.\n\nThere's a later commit",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339311207,339311207,src/wallet/wallet.cpp
promag,2019-10-28 11:01:12,"nit, could add some helper to do this repeated check (currently 9 times), like `GetLegacyScriptPubKeyMan(pwallet)`?",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339505236,339505236,src/wallet/rpcdump.cpp
ryanofsky,2019-10-28 20:27:55,"re: https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339505236\n\n> nit, could add some helper to do this repeated check (currently 9 times), like `GetLegacyScriptPubKeyMan(pwallet)`?\n\nWould be a nice followup. My preference would be to do it in a later PR though to avoid delay on this one, since this PR is pretty big and already has some acks.",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339775866,339775866,src/wallet/rpcdump.cpp
achow101,2019-10-28 21:19:04,Agreed for follow up.,https://github.com/bitcoin/bitcoin/pull/17260#discussion_r339797903,339797903,src/wallet/rpcdump.cpp
MarcoFalke,2019-10-29 11:50:31,Why is this removed?,https://github.com/bitcoin/bitcoin/pull/17260#discussion_r340029481,340029481,src/wallet/scriptpubkeyman.cpp
MarcoFalke,2019-10-29 11:55:40,"in commit f201ba59ffd2e071a36a688b80d2cff9a9c44bb2:\n\nCould clarify that this is ""for all ScriptPubKeyMans of a wallet"" and not (*""for all ScriptPubKeyMans of all wallets""*)",https://github.com/bitcoin/bitcoin/pull/17260#discussion_r340031507,340031507,src/wallet/scriptpubkeyman.h
MarcoFalke,2019-10-29 11:59:15,How is this supposed to work? The pointer was already dereferenced in the line above,https://github.com/bitcoin/bitcoin/pull/17260#discussion_r340033021,340033021,src/wallet/wallet.cpp
MarcoFalke,2019-10-29 12:02:04,Why is a nullptr check required above but not here?,https://github.com/bitcoin/bitcoin/pull/17260#discussion_r340034123,340034123,src/wallet/wallet.cpp
MarcoFalke,2019-10-29 12:07:42,Why is this not setting the error string?,https://github.com/bitcoin/bitcoin/pull/17260#discussion_r340036269,340036269,src/wallet/wallet.cpp
