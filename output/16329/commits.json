[
  {
    "sha": "faf6caf4daa33b9179f4f02c09e184245ea53fa1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWY2Y2FmNGRhYTMzYjkxNzlmNGYwMmMwOWUxODQyNDVlYTUzZmEx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-07-02T18:23:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-07-02T19:25:13Z"
      },
      "message": "test: Add tests for getblockchaininfo.softforks",
      "tree": {
        "sha": "f4b5ec5b7ee3d150a06f39170151c7205858a9ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4b5ec5b7ee3d150a06f39170151c7205858a9ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf6caf4daa33b9179f4f02c09e184245ea53fa1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiCiAv/f8XUmk8kgtgAMcRxB3jrGmOjtMxYr5xK0C+axhKjavTJkeWq1Pk0kyeJ\n80Wqfex/gElNUHGxD7s6Us7AhTM3lDgVKwubDczCd2lOBi/3C6cXgfmLjPeNh3Ek\n1Yoz/m++G8pFHcv4/VsKPqdP3xJFukjz0LwVk+lUcuVRAhStUOz3oTVeRSRxCkdK\n/aR8O3A8cuzEZU9TYnqP6Er1249k6CCmNlSdqQubvcYMmaSSuLONHGCFiysigpNl\nr99+IBFCvD5FNEKGeZSxssaBxhyGqlt/wXXu8RmggRXM1IGXTA/p+7vIrjICkvbF\nrU92hY1y8CTEwVfWcfNIal6ys0gSZMZQ8RrzaYjEPFpf+5rijEkQSjF41l3ysRI9\nBaFixJbPChb/N4IYDoQc4eUo3U7XqAUcV1H8hyfOUjUIU1UjCe1bCTHNjxJLHz7C\nrqWByg6ZT3Jz/QEWhPWxgLFWmpuM+f/EHopiNJZLV5W8tpCpV1EkRVbW5QYIMKbQ\nJBgEIssD\n=19c0\n-----END PGP SIGNATURE-----",
        "payload": "tree f4b5ec5b7ee3d150a06f39170151c7205858a9ec\nparent 2f717fb5cdfc312784f9c1539fc41cdfcfbde452\nauthor MarcoFalke <falke.marco@gmail.com> 1562091784 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1562095513 -0400\n\ntest: Add tests for getblockchaininfo.softforks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf6caf4daa33b9179f4f02c09e184245ea53fa1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf6caf4daa33b9179f4f02c09e184245ea53fa1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf6caf4daa33b9179f4f02c09e184245ea53fa1/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f717fb5cdfc312784f9c1539fc41cdfcfbde452",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f717fb5cdfc312784f9c1539fc41cdfcfbde452",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f717fb5cdfc312784f9c1539fc41cdfcfbde452"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 37,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7712e8bdf6e9d72b235d8f1a562daf100b85bfa3",
        "filename": "test/functional/feature_cltv.py",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf6caf4daa33b9179f4f02c09e184245ea53fa1/test/functional/feature_cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf6caf4daa33b9179f4f02c09e184245ea53fa1/test/functional/feature_cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_cltv.py?ref=faf6caf4daa33b9179f4f02c09e184245ea53fa1",
        "patch": "@@ -64,9 +64,23 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n+    def test_cltv_info(self, *, is_active):\n+        assert_equal(\n+            next(s for s in self.nodes[0].getblockchaininfo()['softforks'] if s['id'] == 'bip65'),\n+            {\n+                \"id\": \"bip65\",\n+                \"version\": 4,\n+                \"reject\": {\n+                    \"status\": is_active\n+                }\n+            },\n+        )\n+\n     def run_test(self):\n         self.nodes[0].add_p2p_connection(P2PInterface())\n \n+        self.test_cltv_info(is_active=False)\n+\n         self.log.info(\"Mining %d blocks\", CLTV_HEIGHT - 2)\n         self.coinbase_txids = [self.nodes[0].getblock(b)['tx'][0] for b in self.nodes[0].generate(CLTV_HEIGHT - 2)]\n         self.nodeaddress = self.nodes[0].getnewaddress()\n@@ -86,7 +100,9 @@ def run_test(self):\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.solve()\n \n+        self.test_cltv_info(is_active=False)\n         self.nodes[0].p2p.send_and_ping(msg_block(block))\n+        self.test_cltv_info(is_active=False)  # Not active as of current tip, but next block must obey rules\n         assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n \n         self.log.info(\"Test that blocks must now be at least version 4\")\n@@ -135,7 +151,9 @@ def run_test(self):\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.solve()\n \n+        self.test_cltv_info(is_active=False)  # Not active as of current tip, but next block must obey rules\n         self.nodes[0].p2p.send_and_ping(msg_block(block))\n+        self.test_cltv_info(is_active=True)  # Active as of current tip\n         assert_equal(int(self.nodes[0].getbestblockhash(), 16), block.sha256)\n \n "
      },
      {
        "sha": "067e3be1f4e2f3930a8995494f22fcc86c84d418",
        "filename": "test/functional/feature_dersig.py",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf6caf4daa33b9179f4f02c09e184245ea53fa1/test/functional/feature_dersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf6caf4daa33b9179f4f02c09e184245ea53fa1/test/functional/feature_dersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dersig.py?ref=faf6caf4daa33b9179f4f02c09e184245ea53fa1",
        "patch": "@@ -51,9 +51,23 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n+    def test_dersig_info(self, *, is_active):\n+        assert_equal(\n+            next(s for s in self.nodes[0].getblockchaininfo()['softforks'] if s['id'] == 'bip66'),\n+            {\n+                \"id\": \"bip66\",\n+                \"version\": 3,\n+                \"reject\": {\n+                    \"status\": is_active\n+                }\n+            },\n+        )\n+\n     def run_test(self):\n         self.nodes[0].add_p2p_connection(P2PInterface())\n \n+        self.test_dersig_info(is_active=False)\n+\n         self.log.info(\"Mining %d blocks\", DERSIG_HEIGHT - 2)\n         self.coinbase_txids = [self.nodes[0].getblock(b)['tx'][0] for b in self.nodes[0].generate(DERSIG_HEIGHT - 2)]\n         self.nodeaddress = self.nodes[0].getnewaddress()\n@@ -74,7 +88,9 @@ def run_test(self):\n         block.rehash()\n         block.solve()\n \n+        self.test_dersig_info(is_active=False)\n         self.nodes[0].p2p.send_and_ping(msg_block(block))\n+        self.test_dersig_info(is_active=False)  # Not active as of current tip, but next block must obey rules\n         assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n \n         self.log.info(\"Test that blocks must now be at least version 3\")\n@@ -128,8 +144,11 @@ def run_test(self):\n         block.rehash()\n         block.solve()\n \n+        self.test_dersig_info(is_active=False)  # Not active as of current tip, but next block must obey rules\n         self.nodes[0].p2p.send_and_ping(msg_block(block))\n+        self.test_dersig_info(is_active=True)  # Active as of current tip\n         assert_equal(int(self.nodes[0].getbestblockhash(), 16), block.sha256)\n \n+\n if __name__ == '__main__':\n     BIP66Test().main()"
      }
    ]
  }
]