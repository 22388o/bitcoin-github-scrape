[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88342337",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-88342337",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 88342337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MzQyMzM3",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-01T03:56:38Z",
    "updated_at": "2015-04-01T03:56:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice.. I've wanted something like 'generate'  Passes quick-glance review.  Will test.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88342337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88378557",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-88378557",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 88378557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4Mzc4NTU3",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-01T07:32:55Z",
    "updated_at": "2015-04-01T07:32:55Z",
    "author_association": "MEMBER",
    "body": "Travis failure\n\n```\nRunning testscript wallet.py...\nInitializing test directory /tmp/testFqH6I5\nMining blocks...\nJSONRPC error: value is type \n  File \"/home/travis/build/bitcoin/bitcoin/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/test_framework.py\", line 117, in main\n    self.run_test()\n  File \"/home/travis/build/bitcoin/bitcoin/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/wallet.py\", line 43, in run_test\n    self.nodes[0].generate(1)\n  File \"/home/travis/build/bitcoin/bitcoin/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py\", line 126, in __call__\n    raise JSONRPCException(response['error'])\nCleaning up\nFailed\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88378557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88615107",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-88615107",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 88615107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NjE1MTA3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-01T20:03:18Z",
    "updated_at": "2015-04-01T20:03:18Z",
    "author_association": "MEMBER",
    "body": "@fanquake Fixed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88615107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90875097",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-90875097",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 90875097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwODc1MDk3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T10:34:55Z",
    "updated_at": "2015-04-08T11:48:32Z",
    "author_association": "MEMBER",
    "body": "This is obviously the right way to go, utACK\n\nEdit: tested ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90875097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91257981",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-91257981",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 91257981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMjU3OTgx",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-09T15:07:48Z",
    "updated_at": "2015-04-09T15:07:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "This makes -regtest block generation MUCH slower.\n\nBefore:\n`cd qa/rpc-tests; rm -rf cache; time mempool_resurrect_test.py`  --> 26 seconds.\n\nAfter: --> 2 minutes 10 seconds.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91257981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91450447",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-91450447",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 91450447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxNDUwNDQ3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-10T06:32:36Z",
    "updated_at": "2015-04-10T06:46:46Z",
    "author_association": "MEMBER",
    "body": "Apparently I merged this too soon, sorry.\n\n@sdaftuar noticed that this was giving problems with travis due to the slowdown @gavinandresen remarks on. I've thus reverted the changes to the mining code for now (but not the `generate` RPC call) in 48265f3.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91450447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91493504",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-91493504",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 91493504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxNDkzNTA0",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-10T09:33:01Z",
    "updated_at": "2015-04-10T09:36:01Z",
    "author_association": "MEMBER",
    "body": "Reopened #4793, which also does some code simplifications in miner.cpp.\nI haven't measured regtest performance but it shouldn't make it slower, in fact I expect to make it slightly faster apart from saving some logs produced by CheckProofOfWork (though not all of them yet).\n@gavinandresen  can you test it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91493504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91830913",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-91830913",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 91830913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxODMwOTEz",
    "user": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-11T11:36:23Z",
    "updated_at": "2015-04-11T11:36:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "While it's sort of easy to mitigate, changing the API of Bitcoin Core (`setgenerate true n`) introduces the risk of breaking system that currently use that API. Imho, similar to the depreciation of accounting system, it would be more gentle, to provide some backwards compability and clearly tag `setgenerate (regtest)` as depreciated, for one version.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91830913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91837309",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-91837309",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 91837309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxODM3MzA5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-11T12:46:59Z",
    "updated_at": "2015-04-11T12:46:59Z",
    "author_association": "MEMBER",
    "body": "@dexX7 I agree for any production usage of the RPC system, but this is\nregtest specific. Do you have any evidence of the regtest-specific\nsetgenerate being used elsewhere? If so, we can of course temporarily\nmaintain compatibility.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91837309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91843681",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-91843681",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 91843681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxODQzNjgx",
    "user": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-11T13:11:50Z",
    "updated_at": "2015-04-11T13:11:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see your point, and I don't have specific use-cases, but there are a few references to `setgenerate`, e.g. in the [Bitcoin developer guide](https://bitcoin.org/en/developer-examples#regtest-mode), the [Bitcoin wiki](https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list) or BitcoinJ's [\"how to test applications\"](https://bitcoinj.github.io/testing), which may serve as indicator.\n\nThis change may be announced on the mailing list, to enquire additional feedback from actual users, which may, or may not be out there.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91843681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91844270",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-91844270",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 91844270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxODQ0Mjcw",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-11T13:24:32Z",
    "updated_at": "2015-04-11T13:24:32Z",
    "author_association": "MEMBER",
    "body": "Thanks for pointing that out. I was not  aware that the dev guide mentioned\nthis.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91844270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/92984718",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#issuecomment-92984718",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5957",
    "id": 92984718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyOTg0NzE4",
    "user": {
      "login": "msgilligan",
      "id": 61612,
      "node_id": "MDQ6VXNlcjYxNjEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/61612?u=6066bb837ba38dc8c5424f547eaaed28557f78cd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msgilligan",
      "html_url": "https://github.com/msgilligan",
      "followers_url": "https://api.github.com/users/msgilligan/followers",
      "following_url": "https://api.github.com/users/msgilligan/following{/other_user}",
      "gists_url": "https://api.github.com/users/msgilligan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msgilligan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msgilligan/subscriptions",
      "organizations_url": "https://api.github.com/users/msgilligan/orgs",
      "repos_url": "https://api.github.com/users/msgilligan/repos",
      "events_url": "https://api.github.com/users/msgilligan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msgilligan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-14T17:13:20Z",
    "updated_at": "2015-04-14T17:13:20Z",
    "author_association": "NONE",
    "body": "Here's the line in `BitcoinClient.java` in the OmniJ / bitcoin-spock project and something we are planning on contributing to bitcoinj to allow people to easily test their apps in RegTest mode:\n\nhttps://github.com/OmniLayer/OmniJ/blob/master/bitcoin-rpc/src/main/java/com/msgilligan/bitcoin/rpc/BitcoinClient.java#L195\n\nIf we are the only external use-case we can handle this change when it happens, but we may not be the only case.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/92984718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27958516",
    "pull_request_review_id": null,
    "id": 27958516,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTU4NTE2",
    "diff_hunk": "@@ -154,52 +190,9 @@ Value setgenerate(const Array& params, bool fHelp)\n             fGenerate = false;\n     }\n \n-    // -regtest mode: don't return until nGenProcLimit blocks are generated\n-    if (fGenerate && Params().MineBlocksOnDemand())\n-    {\n-        int nHeightStart = 0;\n-        int nHeightEnd = 0;\n-        int nHeight = 0;\n-        int nGenerate = (nGenProcLimit > 0 ? nGenProcLimit : 1);\n-        CReserveKey reservekey(pwalletMain);\n-\n-        {   // Don't keep cs_main locked\n-            LOCK(cs_main);\n-            nHeightStart = chainActive.Height();\n-            nHeight = nHeightStart;\n-            nHeightEnd = nHeightStart+nGenerate;\n-        }\n-        unsigned int nExtraNonce = 0;\n-        Array blockHashes;\n-        while (nHeight < nHeightEnd)\n-        {\n-            auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey));\n-            if (!pblocktemplate.get())\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, \"Wallet keypool empty\");\n-            CBlock *pblock = &pblocktemplate->block;\n-            {\n-                LOCK(cs_main);\n-                IncrementExtraNonce(pblock, chainActive.Tip(), nExtraNonce);\n-            }\n-            while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\n-                // Yes, there is a chance every nonce could fail to satisfy the -regtest\n-                // target -- 1 in 2^(2^32). That ain't gonna happen.\n-                ++pblock->nNonce;\n-            }\n-            CValidationState state;\n-            if (!ProcessNewBlock(state, NULL, pblock))\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, \"ProcessNewBlock, block not accepted\");\n-            ++nHeight;\n-            blockHashes.push_back(pblock->GetHash().GetHex());\n-        }\n-        return blockHashes;\n-    }\n-    else // Not -regtest: start generate thread, return immediately\n-    {\n-        mapArgs[\"-gen\"] = (fGenerate ? \"1\" : \"0\");\n-        mapArgs [\"-genproclimit\"] = itostr(nGenProcLimit);\n-        GenerateBitcoins(fGenerate, pwalletMain, nGenProcLimit);\n-    }\n+    mapArgs[\"-gen\"] = (fGenerate ? \"1\" : \"0\");",
    "path": "src/rpcmining.cpp",
    "position": 106,
    "original_position": 106,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We should probably change this at some point too to not update the mapArgs. Throughout the program we assume that mapArgs is read-only after initialization. This kind of r/w access would need proper locking around everything. No change needed for this pull but I'm just reminded of it.\n",
    "created_at": "2015-04-08T10:33:04Z",
    "updated_at": "2015-04-08T10:33:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27958516",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27958516"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27958516"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27958516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27985935",
    "pull_request_review_id": null,
    "id": 27985935,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTg1OTM1",
    "diff_hunk": "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
    "path": "src/miner.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can't we directly return CheckProofOfWork() here instead of true and remove the later `UintToArith256(hash) <= hashTarget` check in ScanLoop() [which means you can also remove the uint256 *phash param in ScanHash()] ?\n",
    "created_at": "2015-04-08T16:19:29Z",
    "updated_at": "2015-04-08T16:19:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27985935",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27985935"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27985935"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27985935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27986007",
    "pull_request_review_id": null,
    "id": 27986007,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTg2MDA3",
    "diff_hunk": "@@ -435,6 +424,56 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool static ScanLoop(CBlock *pblock, CBlockIndex *pindexPrev, CWallet *pwallet, CReserveKey& reservekey)\n+{\n+    UpdateTime(pblock, pindexPrev);\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n+\n+    uint256 hash;\n+    if (ScanHash(pblock, &hash)) {\n+        if (UintToArith256(hash) <= hashTarget) {\n+            // Found a solution\n+            SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+            LogPrintf(\"BitcoinMiner:\\n\");\n+            LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n+            ProcessBlockFound(pblock, *pwallet, reservekey);\n+            SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool MineBlock(CWallet *pwallet, uint256& hash)\n+{\n+    CReserveKey reservekey(pwallet);\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanLoop(pblock, pindexPrev, pwallet, reservekey)) {\n+                hash = pblock->GetHash();\n+                return true;\n+            }\n+            boost::this_thread::interruption_point();\n+            if (pblock->nNonce >= 0xffff0000)",
    "path": "src/miner.cpp",
    "position": 121,
    "original_position": 121,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't this included here https://github.com/bitcoin/bitcoin/pull/5957/files#diff-4a59b408ad3778278c3aeffa7da33c3cR383   ?\n",
    "created_at": "2015-04-08T16:20:33Z",
    "updated_at": "2015-04-08T16:20:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27986007",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27986007"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27986007"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27986007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 471,
    "original_line": 471,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27987670",
    "pull_request_review_id": null,
    "id": 27987670,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTg3Njcw",
    "diff_hunk": "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
    "path": "src/miner.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even without CheckProofOfWork, that check belongs inside ScanHash so you can save the hash parameter and the hash parameter and you can reuse the `arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);` instead of repeating the conversion every time `((uint16_t*)phash)[15] == 0`. At that point, I'm not sure it's worth it to remove the optimization but I'm still not opposed to removing it.\nAnd of course it can be && in the condition rather than returning.\n",
    "created_at": "2015-04-08T16:36:37Z",
    "updated_at": "2015-04-08T16:36:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27987670",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27987670"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27987670"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27987670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996629",
    "pull_request_review_id": null,
    "id": 27996629,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTk2NjI5",
    "diff_hunk": "@@ -435,6 +424,56 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool static ScanLoop(CBlock *pblock, CBlockIndex *pindexPrev, CWallet *pwallet, CReserveKey& reservekey)\n+{\n+    UpdateTime(pblock, pindexPrev);\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n+\n+    uint256 hash;\n+    if (ScanHash(pblock, &hash)) {\n+        if (UintToArith256(hash) <= hashTarget) {\n+            // Found a solution\n+            SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+            LogPrintf(\"BitcoinMiner:\\n\");\n+            LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n+            ProcessBlockFound(pblock, *pwallet, reservekey);\n+            SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool MineBlock(CWallet *pwallet, uint256& hash)\n+{\n+    CReserveKey reservekey(pwallet);\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanLoop(pblock, pindexPrev, pwallet, reservekey)) {\n+                hash = pblock->GetHash();\n+                return true;\n+            }\n+            boost::this_thread::interruption_point();\n+            if (pblock->nNonce >= 0xffff0000)",
    "path": "src/miner.cpp",
    "position": 121,
    "original_position": 121,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is about resetting the nonce if it's about to overflow. The other check is about occasionally interrupting the mining loop.\n",
    "created_at": "2015-04-08T18:09:36Z",
    "updated_at": "2015-04-08T18:09:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27996629",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996629"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27996629"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 471,
    "original_line": 471,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996954",
    "pull_request_review_id": null,
    "id": 27996954,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTk2OTU0",
    "diff_hunk": "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
    "path": "src/miner.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, just CheckProofOfWork would be fine, if we removed its error reporting (which imho we should in any case...), as now regtest mining beyond the first 2016 blocks prints 1000s of error messages to the log for each miner block as a result.\n",
    "created_at": "2015-04-08T18:12:42Z",
    "updated_at": "2015-04-08T18:12:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27996954",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996954"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27996954"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27996954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27998129",
    "pull_request_review_id": null,
    "id": 27998129,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTk4MTI5",
    "diff_hunk": "@@ -154,52 +190,9 @@ Value setgenerate(const Array& params, bool fHelp)\n             fGenerate = false;\n     }\n \n-    // -regtest mode: don't return until nGenProcLimit blocks are generated\n-    if (fGenerate && Params().MineBlocksOnDemand())\n-    {\n-        int nHeightStart = 0;\n-        int nHeightEnd = 0;\n-        int nHeight = 0;\n-        int nGenerate = (nGenProcLimit > 0 ? nGenProcLimit : 1);\n-        CReserveKey reservekey(pwalletMain);\n-\n-        {   // Don't keep cs_main locked\n-            LOCK(cs_main);\n-            nHeightStart = chainActive.Height();\n-            nHeight = nHeightStart;\n-            nHeightEnd = nHeightStart+nGenerate;\n-        }\n-        unsigned int nExtraNonce = 0;\n-        Array blockHashes;\n-        while (nHeight < nHeightEnd)\n-        {\n-            auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey));\n-            if (!pblocktemplate.get())\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, \"Wallet keypool empty\");\n-            CBlock *pblock = &pblocktemplate->block;\n-            {\n-                LOCK(cs_main);\n-                IncrementExtraNonce(pblock, chainActive.Tip(), nExtraNonce);\n-            }\n-            while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\n-                // Yes, there is a chance every nonce could fail to satisfy the -regtest\n-                // target -- 1 in 2^(2^32). That ain't gonna happen.\n-                ++pblock->nNonce;\n-            }\n-            CValidationState state;\n-            if (!ProcessNewBlock(state, NULL, pblock))\n-                throw JSONRPCError(RPC_INTERNAL_ERROR, \"ProcessNewBlock, block not accepted\");\n-            ++nHeight;\n-            blockHashes.push_back(pblock->GetHash().GetHex());\n-        }\n-        return blockHashes;\n-    }\n-    else // Not -regtest: start generate thread, return immediately\n-    {\n-        mapArgs[\"-gen\"] = (fGenerate ? \"1\" : \"0\");\n-        mapArgs [\"-genproclimit\"] = itostr(nGenProcLimit);\n-        GenerateBitcoins(fGenerate, pwalletMain, nGenProcLimit);\n-    }\n+    mapArgs[\"-gen\"] = (fGenerate ? \"1\" : \"0\");",
    "path": "src/rpcmining.cpp",
    "position": 106,
    "original_position": 106,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree.\n",
    "created_at": "2015-04-08T18:23:34Z",
    "updated_at": "2015-04-08T18:23:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27998129",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27998129"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r27998129"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27998129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 193,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28013125",
    "pull_request_review_id": null,
    "id": 28013125,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDEzMTI1",
    "diff_hunk": "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
    "path": "src/miner.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you at least move the check in ScanLoop inside ScanHash for now?\n",
    "created_at": "2015-04-08T21:05:27Z",
    "updated_at": "2015-04-08T21:05:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28013125",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28013125"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28013125"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28013125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28017344",
    "pull_request_review_id": null,
    "id": 28017344,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDE3MzQ0",
    "diff_hunk": "@@ -435,6 +424,56 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool static ScanLoop(CBlock *pblock, CBlockIndex *pindexPrev, CWallet *pwallet, CReserveKey& reservekey)\n+{\n+    UpdateTime(pblock, pindexPrev);\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n+\n+    uint256 hash;\n+    if (ScanHash(pblock, &hash)) {\n+        if (UintToArith256(hash) <= hashTarget) {\n+            // Found a solution\n+            SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+            LogPrintf(\"BitcoinMiner:\\n\");\n+            LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n+            ProcessBlockFound(pblock, *pwallet, reservekey);\n+            SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool MineBlock(CWallet *pwallet, uint256& hash)\n+{\n+    CReserveKey reservekey(pwallet);\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanLoop(pblock, pindexPrev, pwallet, reservekey)) {\n+                hash = pblock->GetHash();\n+                return true;\n+            }\n+            boost::this_thread::interruption_point();\n+            if (pblock->nNonce >= 0xffff0000)",
    "path": "src/miner.cpp",
    "position": 121,
    "original_position": 121,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry, you can prevent the overflow by replacing the middle while(true) loop [the one that first checks if ScanLoop()] with a for loop. Then you can remove this check (from the two places it appears in) and this access to CBlockHeader::nNonce is not required.\nBy the way, you're incrementing CBlockHeader::nNonce in ScanHash, but where are you resetting it to 0? \n",
    "created_at": "2015-04-08T21:50:13Z",
    "updated_at": "2015-04-08T21:50:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28017344",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28017344"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28017344"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28017344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 471,
    "original_line": 471,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28017873",
    "pull_request_review_id": null,
    "id": 28017873,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDE3ODcz",
    "diff_hunk": "@@ -476,52 +515,23 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n-\n-                        break;\n-                    }\n-                }\n+                if (ScanLoop(pblock, pindexPrev, pwallet, reservekey))\n+                    break;\n \n                 // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();",
    "path": "src/miner.cpp",
    "position": 176,
    "original_position": 176,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This can be moved inside ScanLoop to avoid code duplication.\n",
    "created_at": "2015-04-08T21:56:13Z",
    "updated_at": "2015-04-08T21:56:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28017873",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28017873"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28017873"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28017873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 524,
    "original_line": 524,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28019878",
    "pull_request_review_id": null,
    "id": 28019878,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDE5ODc4",
    "diff_hunk": "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
    "path": "src/miner.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not doing that as long as it produces this much debug output - that makes it effectively unusable for mining a >2016 long block chain. That error output should probably be discussed elsewhere.\n",
    "created_at": "2015-04-08T22:20:57Z",
    "updated_at": "2015-04-08T22:20:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28019878",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28019878"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28019878"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28019878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020798",
    "pull_request_review_id": null,
    "id": 28020798,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDIwNzk4",
    "diff_hunk": "@@ -476,52 +515,23 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n-            uint256 hash;\n-            uint32_t nNonce = 0;\n             while (true) {\n                 // Check if something found\n-                if (ScanHash(pblock, nNonce, &hash))\n-                {\n-                    if (UintToArith256(hash) <= hashTarget)\n-                    {\n-                        // Found a solution\n-                        pblock->nNonce = nNonce;\n-                        assert(hash == pblock->GetHash());\n-\n-                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                        LogPrintf(\"BitcoinMiner:\\n\");\n-                        LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n-                        ProcessBlockFound(pblock, *pwallet, reservekey);\n-                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n-\n-                        // In regression test mode, stop mining after a block is found.\n-                        if (Params().MineBlocksOnDemand())\n-                            throw boost::thread_interrupted();\n-\n-                        break;\n-                    }\n-                }\n+                if (ScanLoop(pblock, pindexPrev, pwallet, reservekey))\n+                    break;\n \n                 // Check for stop or if block needs to be rebuilt\n                 boost::this_thread::interruption_point();",
    "path": "src/miner.cpp",
    "position": 176,
    "original_position": 176,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ack\n",
    "created_at": "2015-04-08T22:33:52Z",
    "updated_at": "2015-04-08T22:33:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28020798",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020798"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28020798"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 524,
    "original_line": 524,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020880",
    "pull_request_review_id": null,
    "id": 28020880,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDIwODgw",
    "diff_hunk": "@@ -435,6 +424,56 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool static ScanLoop(CBlock *pblock, CBlockIndex *pindexPrev, CWallet *pwallet, CReserveKey& reservekey)\n+{\n+    UpdateTime(pblock, pindexPrev);\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n+\n+    uint256 hash;\n+    if (ScanHash(pblock, &hash)) {\n+        if (UintToArith256(hash) <= hashTarget) {\n+            // Found a solution\n+            SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+            LogPrintf(\"BitcoinMiner:\\n\");\n+            LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n+            ProcessBlockFound(pblock, *pwallet, reservekey);\n+            SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool MineBlock(CWallet *pwallet, uint256& hash)\n+{\n+    CReserveKey reservekey(pwallet);\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanLoop(pblock, pindexPrev, pwallet, reservekey)) {\n+                hash = pblock->GetHash();\n+                return true;\n+            }\n+            boost::this_thread::interruption_point();\n+            if (pblock->nNonce >= 0xffff0000)",
    "path": "src/miner.cpp",
    "position": 121,
    "original_position": 121,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The nonce is reset when a new block attempt is created by calling CreateNewBlockWithKey.\n\nI don't understand the rest of the comment, but I'll try to rework it a bit.\n",
    "created_at": "2015-04-08T22:35:12Z",
    "updated_at": "2015-04-08T22:35:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28020880",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020880"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28020880"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 471,
    "original_line": 471,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020978",
    "pull_request_review_id": null,
    "id": 28020978,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDIwOTc4",
    "diff_hunk": "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
    "path": "src/miner.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wait, I misunderstood. Yes, that seems fine.\n",
    "created_at": "2015-04-08T22:36:40Z",
    "updated_at": "2015-04-08T22:36:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28020978",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020978"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28020978"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28020978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28021545",
    "pull_request_review_id": null,
    "id": 28021545,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDIxNTQ1",
    "diff_hunk": "@@ -365,45 +365,34 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// The nonce is usually preserved between calls, but periodically or if the\n-// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n-// zero.\n+// The nonce is usually preserved between calls, but periodically the block is\n+// rebuilt and nNonce starts over at zero.\n //\n-bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n+bool static ScanHash(CBlockHeader *pblock, uint256 *phash)\n {\n-    // Write the first 76 bytes of the block header to a double-SHA256 state.\n-    CHash256 hasher;\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-    ss << *pblock;\n-    assert(ss.size() == 80);\n-    hasher.Write((unsigned char*)&ss[0], 76);\n-\n     while (true) {\n-        nNonce++;\n-\n-        // Write the last 4 bytes of the block header (the nonce) to a copy of\n-        // the double-SHA256 state, and compute the result.\n-        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n+        pblock->nNonce++;\n+        *phash = pblock->GetHash();\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n         if (((uint16_t*)phash)[15] == 0)\n             return true;",
    "path": "src/miner.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, as said in the other PR I plan to solve the warning problem soon as part of the consensus work for blockheader.\nAt that point that check can be directly replaced by CheckProofOfWork, I'm not proposing to do it now.\n",
    "created_at": "2015-04-08T22:45:39Z",
    "updated_at": "2015-04-08T22:46:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28021545",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28021545"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28021545"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28021545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 380,
    "original_line": 380,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28021894",
    "pull_request_review_id": null,
    "id": 28021894,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDIxODk0",
    "diff_hunk": "@@ -435,6 +424,56 @@ static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& rese\n     return true;\n }\n \n+bool static ScanLoop(CBlock *pblock, CBlockIndex *pindexPrev, CWallet *pwallet, CReserveKey& reservekey)\n+{\n+    UpdateTime(pblock, pindexPrev);\n+    arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n+\n+    uint256 hash;\n+    if (ScanHash(pblock, &hash)) {\n+        if (UintToArith256(hash) <= hashTarget) {\n+            // Found a solution\n+            SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+            LogPrintf(\"BitcoinMiner:\\n\");\n+            LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex(), hashTarget.GetHex());\n+            ProcessBlockFound(pblock, *pwallet, reservekey);\n+            SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+\n+            return true;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool MineBlock(CWallet *pwallet, uint256& hash)\n+{\n+    CReserveKey reservekey(pwallet);\n+    unsigned int nExtraNonce = 0;\n+\n+    while (true) {\n+        CBlockIndex *pindexPrev;\n+\n+        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey, pindexPrev));\n+        if (!pblocktemplate.get()) {\n+            return false;\n+        }\n+\n+        CBlock *pblock = &pblocktemplate->block;\n+        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+        while (true) {\n+            if (ScanLoop(pblock, pindexPrev, pwallet, reservekey)) {\n+                hash = pblock->GetHash();\n+                return true;\n+            }\n+            boost::this_thread::interruption_point();\n+            if (pblock->nNonce >= 0xffff0000)",
    "path": "src/miner.cpp",
    "position": 121,
    "original_position": 121,
    "commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "original_commit_id": "e2edf95cd3f43331843676e49a82830128a95050",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I mean, it's just a nit and probably the more irrational one of the 3, I would just like to minimize the accesses to nBits and nNonce in the code so that the strictly-pow stuff doesn't take much to read.\nIf you don't make anything about this, thank you for the try.\n",
    "created_at": "2015-04-08T22:51:18Z",
    "updated_at": "2015-04-08T22:51:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28021894",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28021894"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5957#discussion_r28021894"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5957"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/28021894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 471,
    "original_line": 471,
    "side": "RIGHT"
  }
]