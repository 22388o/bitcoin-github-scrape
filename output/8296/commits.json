[
  {
    "sha": "fae596f0e421148b797197baff089a87b3193dbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWU1OTZmMGU0MjExNDhiNzk3MTk3YmFmZjA4OWE4N2IzMTkzZGJk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-30T12:49:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-07-15T18:18:11Z"
      },
      "message": "[qa] Sort scripts by time for pull_tester and don't overwrite setup_chain",
      "tree": {
        "sha": "4c2a8a9dbe33901ce14b1e8412157511d4b1b239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c2a8a9dbe33901ce14b1e8412157511d4b1b239"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae596f0e421148b797197baff089a87b3193dbd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae596f0e421148b797197baff089a87b3193dbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae596f0e421148b797197baff089a87b3193dbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae596f0e421148b797197baff089a87b3193dbd/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3685e0c1da296be533fef4abcf1b1734ed7d85e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3685e0c1da296be533fef4abcf1b1734ed7d85e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3685e0c1da296be533fef4abcf1b1734ed7d85e7"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 17,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2aa131041a02bc7454e49d8d99d9ba53e989e902",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae596f0e421148b797197baff089a87b3193dbd/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae596f0e421148b797197baff089a87b3193dbd/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=fae596f0e421148b797197baff089a87b3193dbd",
        "patch": "@@ -110,6 +110,8 @@\n     'receivedby.py',\n     'mempool_resurrect_test.py',\n     'txn_doublespend.py --mineblock',\n+    'p2p-segwit.py',\n+    'segwit.py',\n     'txn_clone.py',\n     'getchaintips.py',\n     'rawtransactions.py',\n@@ -131,13 +133,12 @@\n     'disablewallet.py',\n     'sendheaders.py',\n     'keypool.py',\n+    'p2p-mempool.py',\n     'prioritise_transaction.py',\n     'invalidblockrequest.py',\n     'invalidtxrequest.py',\n     'abandonconflict.py',\n     'p2p-versionbits-warning.py',\n-    'p2p-segwit.py',\n-    'segwit.py',\n     'importprunedfunds.py',\n     'signmessages.py',\n ]"
      },
      {
        "sha": "5c5d778f429b9b664f339a30b3d13c8312b9db2b",
        "filename": "qa/rpc-tests/p2p-mempool.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/p2p-mempool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/p2p-mempool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-mempool.py?ref=fae596f0e421148b797197baff089a87b3193dbd",
        "patch": "@@ -72,8 +72,11 @@ def send_mempool(self):\n         self.send_message(msg_mempool())\n \n class P2PMempoolTests(BitcoinTestFramework):\n-    def setup_chain(self):\n-        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n \n     def setup_network(self):\n         # Start a node with maxuploadtarget of 200 MB (/24h)"
      },
      {
        "sha": "c67b7724516aae68551826b72c1102d4be5077ef",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=fae596f0e421148b797197baff089a87b3193dbd",
        "patch": "@@ -163,8 +163,11 @@ def __init__(self, sha256, n, nValue):\n \n \n class SegWitTest(BitcoinTestFramework):\n-    def setup_chain(self):\n-        initialize_chain_clean(self.options.tmpdir, 3)\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n \n     def add_options(self, parser):\n         parser.add_option(\"--oldbinary\", dest=\"oldbinary\","
      },
      {
        "sha": "f88230cbb9892b13f40fe0e2ed4663da8b4d4500",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae596f0e421148b797197baff089a87b3193dbd/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=fae596f0e421148b797197baff089a87b3193dbd",
        "patch": "@@ -71,9 +71,10 @@ def getutxo(txid):\n \n class SegWitTest(BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 3)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n \n     def setup_network(self):\n         self.nodes = []"
      }
    ]
  }
]