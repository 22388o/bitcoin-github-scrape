[
  {
    "sha": "3f8fa7f58b68a8ed596c62d1edb85a3455a5a724",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjhmYTdmNThiNjhhOGVkNTk2YzYyZDFlZGI4NWEzNDU1YTVhNzI0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-08-09T01:44:02Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-08-09T01:45:18Z"
      },
      "message": "Make sure to clean up mapBlockSource if we've already seen the block\n\nCredit TheBlueMatt",
      "tree": {
        "sha": "c7be1851a65906c6ba93ec3e33170c8486724a75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7be1851a65906c6ba93ec3e33170c8486724a75"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f8fa7f58b68a8ed596c62d1edb85a3455a5a724",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f8fa7f58b68a8ed596c62d1edb85a3455a5a724",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f8fa7f58b68a8ed596c62d1edb85a3455a5a724",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f8fa7f58b68a8ed596c62d1edb85a3455a5a724/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e222618a32a16cf0efae392e6349c10c38e57db6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e222618a32a16cf0efae392e6349c10c38e57db6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e222618a32a16cf0efae392e6349c10c38e57db6"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4e63cd1a75d4a9930d38737080c082f13b8dd5f2",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f8fa7f58b68a8ed596c62d1edb85a3455a5a724/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f8fa7f58b68a8ed596c62d1edb85a3455a5a724/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=3f8fa7f58b68a8ed596c62d1edb85a3455a5a724",
        "patch": "@@ -2134,9 +2134,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n             bool fNewBlock = false;\n             ProcessNewBlock(chainparams, pblock, true, &fNewBlock);\n-            if (fNewBlock)\n+            if (fNewBlock) {\n                 pfrom->nLastBlockTime = GetTime();\n-\n+            } else {\n+                LOCK(cs_main);\n+                mapBlockSource.erase(pblock->GetHash());\n+            }\n             LOCK(cs_main); // hold cs_main for CBlockIndex::IsValid()\n             if (pindex->IsValid(BLOCK_VALID_TRANSACTIONS)) {\n                 // Clear download state for this block, which is in\n@@ -2211,8 +2214,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // Since we requested this block (it was in mapBlocksInFlight), force it to be processed,\n             // even if it would not be a candidate for new tip (missing previous block, chain not long enough, etc)\n             ProcessNewBlock(chainparams, pblock, true, &fNewBlock);\n-            if (fNewBlock)\n+            if (fNewBlock) {\n                 pfrom->nLastBlockTime = GetTime();\n+            } else {\n+                LOCK(cs_main);\n+                mapBlockSource.erase(pblock->GetHash());\n+            }\n         }\n     }\n \n@@ -2390,8 +2397,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         }\n         bool fNewBlock = false;\n         ProcessNewBlock(chainparams, pblock, forceProcessing, &fNewBlock);\n-        if (fNewBlock)\n+        if (fNewBlock) {\n             pfrom->nLastBlockTime = GetTime();\n+        } else {\n+            LOCK(cs_main);\n+            mapBlockSource.erase(pblock->GetHash());\n+        }\n     }\n \n "
      }
    ]
  }
]