promag,2019-12-04 02:16:31,"Any guess why those were included in the first place?\n\nConcept ACK.",https://github.com/bitcoin/bitcoin/pull/17663#issuecomment-561444492,561444492,
practicalswift,2019-12-04 09:09:22,Concept ACK: less cruft is better,https://github.com/bitcoin/bitcoin/pull/17663#issuecomment-561545838,561545838,
laanwj,2019-12-04 09:30:08,"I think it's, in principle, nice to depend on fewer system libs but…\n\n> Remove dylibs that are unreachable by the entry point or exported symbols. \n\nHow risky is this option? Worded like this, it seems like quite an extensive analysis pass (checking the call tree all the way from the entry point?—does this take into account indirect/lazy dependencies through vtables, function pointers, thr",https://github.com/bitcoin/bitcoin/pull/17663#issuecomment-561553800,561553800,
DrahtBot,2019-12-04 17:09:16,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit bce44089db27e2b21a3dc2954b170ecf0d6d998e<br>(master) | commit ec037410754d07eb4cb7b1012d617a5357f0aa32<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`40caf742a2674966...`](https://drahtbot.space/gitian/bitcoin/bitcoin/bce44089db27e2b21a3dc2954b170ecf0d6d998e/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17663#issuecomment-561740459,561740459,
fanquake,2019-12-04 18:33:57,"> Related: Are there any parts of qt in depends that we can disable to prevent these from being added?\n\nI'll look at this as a follow up.",https://github.com/bitcoin/bitcoin/pull/17663#issuecomment-561780126,561780126,
