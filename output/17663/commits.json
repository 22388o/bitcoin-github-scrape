[
  {
    "sha": "bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDQ0NzExZTFiYjJlZWU3NjQ2ZjJmOGUyZTg3NjNkMWMyMTZiZGI5",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T22:45:55Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T22:50:30Z"
      },
      "message": "build: pass -dead_strip_dylibs to ld on macOS\n\nThis strips some unused dylibs from bitcoin-qt.\n\nFrom man ld:\nRemove dylibs that are unreachable by the entry point or exported symbols. \nThat is, suppresses the generation of load command commands for dylibs \nwhich supplied no symbols during the link. This option should not be \nused when linking against a dylib which is required at runtime for \nsome indirect reason such as the dylib has an important initializer.",
      "tree": {
        "sha": "5214d8440832a00c76b7505878885c24d37fd0ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5214d8440832a00c76b7505878885c24d37fd0ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e354db787790b84b0b3f34cc55b65446c71e4fa2"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "62b70bcb0767fbcf656e5b9ec92f9b69506178b6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
        "patch": "@@ -783,6 +783,7 @@ fi\n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"])\n fi\n \n AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])"
      }
    ]
  }
]