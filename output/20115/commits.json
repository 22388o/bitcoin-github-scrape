[
  {
    "sha": "f8a1c4d9469cb496fdafaf6f4d94977687df9190",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGExYzRkOTQ2OWNiNDk2ZmRhZmFmNmY0ZDk0OTc3Njg3ZGY5MTkw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-09-19T18:59:25Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-25T15:15:56Z"
      },
      "message": "cli -netinfo: various quick updates and fixes\n\n- add new signet chain\n\n- update change \"uptime\" column name to \"age\" per suggestion by 0xB10C (Timo)\n\n- add an additional digit to mping field width\n\n- change m_networks_size from size_t to uint8_t, as size_t was a holdover\n  from m_networks_size being defined as size_t m_networks.size() in a draft\n\n- order Peer struct members by decreasing memory size",
      "tree": {
        "sha": "8c118487a9da019e21379f1ae89b4a9b9a854607",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c118487a9da019e21379f1ae89b4a9b9a854607"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8a1c4d9469cb496fdafaf6f4d94977687df9190",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+Vlt8ACgkQT1chs9Dj\nkh3/5Q/+JP1Z+N314U3eYKan14tIDdmTy4GH3hSq680sByRwwSGTiVvu5ir3h7O5\nzeIg3L2Ave77H0xbf/MBIhJFfziXfde9UsGLZjV7iPvlDeA+TRVCvaYtN2KEbG+7\nX5luBJ7o4oaUktZSW0YxHVN8FTXI8f9u8cGJyMiCocrHMpvWjuYo9S0vB+2aaQh4\nIdqwtGxx+Fixp+Z2V+5t+7zjza/g+UcEnN2O1RLTZ3ZNmraU0XvZDSR8JBelP2jG\nJVxx1QCJLk2a/IzzEjXqPtapYauacQ7UE8k3UCXMI9kF4GATLgWRxXQZMMvSEbFb\ngo1PQRAjULq87wv8q9/d/NiHn+NngiH3mBUho8k3lhdvW/gsEXJle1aWisUVqrje\nGREBaWtthWL+ooJtYN9nzMjYr8SxcvMsJnbfCTLrmHIX0cVZsmR7lK694op4ZnM+\nCaYe8axFQXnFrpK1PJcyiE3HKa+f4oeHiBMr+vMKQ7sfzrRRZT7Sb0pqgec1pF7C\nfrWEqFEJ0Su4alXR67xKNx3VXgLOmiXTAbqEkxdhqfir1N9nAV7ELHCcUuWXX26R\nbS2fTH2ernt12O5CIF1cZfK+4lkye2oAVz6pxRx7pu+1B4E5K8CQFuyi7Ck/2dj7\n6uc8Rx5WtRG8P+dClXVmua5rM9ybW2kb6xnRpBBi7uuXlb2HivM=\n=l8E+\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGq85QHvnm8laMT11X7WvnHqFFXijQm/pqZchjt6/RYGCP/wEB5ZclrWfilr\nLKVQWx4mrBII8QRflZbh8AiS+Ua2FCV6mACD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQMqLSaWVkcO3MDTLQ\nDnIMGwjxIM5m7Zpf/PfquK+LXlbuH8SBH5EOl/rGc0lrB4kPsQL/CPEEX5WW4/AI\n0hmerr9TM5IAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb23/8BA04zDORkSVvWdJmaXxAHqiCPEEX5WW4fAIaJZgq2YyYnAA\ng9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23wEJzY\nyK83K1b+mKVjesIIoxkI8SBgrtDn2pgmPZnoZ/QcLQ/Xz8JpTdtDkBFJVhs15AXQ\neAjxBF+VluHwCE3457arPHwhAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 8c118487a9da019e21379f1ae89b4a9b9a854607\nparent 0d22482353752ebfb11aa29f4b26113b817a448a\nauthor Jon Atack <jon@atack.com> 1600541965 +0200\ncommitter Jon Atack <jon@atack.com> 1603638956 +0100\n\ncli -netinfo: various quick updates and fixes\n\n- add new signet chain\n\n- update change \"uptime\" column name to \"age\" per suggestion by 0xB10C (Timo)\n\n- add an additional digit to mping field width\n\n- change m_networks_size from size_t to uint8_t, as size_t was a holdover\n  from m_networks_size being defined as size_t m_networks.size() in a draft\n\n- order Peer struct members by decreasing memory size\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8a1c4d9469cb496fdafaf6f4d94977687df9190",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8a1c4d9469cb496fdafaf6f4d94977687df9190",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8a1c4d9469cb496fdafaf6f4d94977687df9190/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d22482353752ebfb11aa29f4b26113b817a448a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d22482353752ebfb11aa29f4b26113b817a448a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d22482353752ebfb11aa29f4b26113b817a448a"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 16,
      "deletions": 15
    },
    "files": [
      {
        "sha": "59b07a7edcb362df1d1456666bdd8997771a58d2",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 15,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8a1c4d9469cb496fdafaf6f4d94977687df9190/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8a1c4d9469cb496fdafaf6f4d94977687df9190/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=f8a1c4d9469cb496fdafaf6f4d94977687df9190",
        "patch": "@@ -297,12 +297,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n {\n private:\n     static constexpr int8_t UNKNOWN_NETWORK{-1};\n-    static constexpr size_t m_networks_size{3};\n+    static constexpr uint8_t m_networks_size{3};\n     const std::array<std::string, m_networks_size> m_networks{{\"ipv4\", \"ipv6\", \"onion\"}};\n     std::array<std::array<uint16_t, m_networks_size + 2>, 3> m_counts{{{}}}; //!< Peer counts by (in/out/total, networks/total/block-relay)\n     int8_t NetworkStringToId(const std::string& str) const\n     {\n-        for (size_t i = 0; i < m_networks_size; ++i) {\n+        for (uint8_t i = 0; i < m_networks_size; ++i) {\n             if (str == m_networks.at(i)) return i;\n         }\n         return UNKNOWN_NETWORK;\n@@ -315,19 +315,19 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     size_t m_max_addr_length{0};\n     size_t m_max_id_length{2};\n     struct Peer {\n-        int id;\n-        int mapped_as;\n-        int version;\n+        std::string addr;\n+        std::string sub_version;\n+        std::string network;\n+        double min_ping;\n+        double ping;\n         int64_t conn_time;\n         int64_t last_blck;\n         int64_t last_recv;\n         int64_t last_send;\n         int64_t last_trxn;\n-        double min_ping;\n-        double ping;\n-        std::string addr;\n-        std::string network;\n-        std::string sub_version;\n+        int id;\n+        int mapped_as;\n+        int version;\n         bool is_block_relay;\n         bool is_outbound;\n         bool operator<(const Peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n@@ -336,6 +336,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     std::string ChainToString() const\n     {\n         if (gArgs.GetChainName() == CBaseChainParams::TESTNET) return \" testnet\";\n+        if (gArgs.GetChainName() == CBaseChainParams::SIGNET) return \" signet\";\n         if (gArgs.GetChainName() == CBaseChainParams::REGTEST) return \" regtest\";\n         return \"\";\n     }\n@@ -399,7 +400,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 const double ping{peer[\"pingtime\"].isNull() ? -1 : peer[\"pingtime\"].get_real()};\n                 const std::string addr{peer[\"addr\"].get_str()};\n                 const std::string sub_version{peer[\"subver\"].get_str()};\n-                m_peers.push_back({peer_id, mapped_as, version, conn_time, last_blck, last_recv, last_send, last_trxn, min_ping, ping, addr, network, sub_version, is_block_relay, is_outbound});\n+                m_peers.push_back({addr, sub_version, network, min_ping, ping, conn_time, last_blck, last_recv, last_send, last_trxn, peer_id, mapped_as, version, is_block_relay, is_outbound});\n                 m_max_id_length = std::max(ToString(peer_id).length(), m_max_id_length);\n                 m_max_addr_length = std::max(addr.length() + 1, m_max_addr_length);\n                 m_is_asmap_on |= (mapped_as != 0);\n@@ -412,13 +413,13 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += \"Peer connections sorted by direction and min ping\\n<-> relay   net mping   ping send recv  txn  blk uptime \";\n+            result += \"Peer connections sorted by direction and min ping\\n<-> relay   net  mping   ping send recv  txn  blk    age \";\n             if (m_is_asmap_on) result += \" asmap \";\n             result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n                 result += strprintf(\n-                    \"%3s %5s %5s%6s%7s%5s%5s%5s%5s%7s%*i %*s %-*s%s\\n\",\n+                    \"%3s %5s %5s%7s%7s%5s%5s%5s%5s%7s%*i %*s %-*s%s\\n\",\n                     peer.is_outbound ? \"out\" : \"in\",\n                     peer.is_block_relay ? \"block\" : \"full\",\n                     peer.network,\n@@ -437,13 +438,13 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     IsAddressSelected() ? peer.addr : \"\",\n                     IsVersionSelected() && version != \"0\" ? version : \"\");\n             }\n-            result += \"                   ms     ms  sec  sec  min  min    min\\n\\n\";\n+            result += \"                    ms     ms  sec  sec  min  min    min\\n\\n\";\n         }\n \n         // Report peer connection totals by type.\n         result += \"        ipv4    ipv6   onion   total  block-relay\\n\";\n         const std::array<std::string, 3> rows{{\"in\", \"out\", \"total\"}};\n-        for (size_t i = 0; i < m_networks_size; ++i) {\n+        for (uint8_t i = 0; i < m_networks_size; ++i) {\n             result += strprintf(\"%-5s  %5i   %5i   %5i   %5i   %5i\\n\", rows.at(i), m_counts.at(i).at(0), m_counts.at(i).at(1), m_counts.at(i).at(2), m_counts.at(i).at(m_networks_size), m_counts.at(i).at(m_networks_size + 1));\n         }\n "
      }
    ]
  },
  {
    "sha": "33e987452f869c279f2491499939e51e0af8364c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2U5ODc0NTJmODY5YzI3OWYyNDkxNDk5OTM5ZTUxZTBhZjgzNjRj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-16T09:59:27Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-25T15:22:55Z"
      },
      "message": "cli -netinfo: make age column variable-width\n\nas it has a wide possible range and the new name (\"age\" instead of \"uptime\") is\nmuch shorter.",
      "tree": {
        "sha": "f6c5caef65a80ab13eadc1ac2d22047970ce581f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6c5caef65a80ab13eadc1ac2d22047970ce581f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33e987452f869c279f2491499939e51e0af8364c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+VmFgACgkQT1chs9Dj\nkh1tahAApVDS4SLzBezEO12ukEl8JXD5leIcHrYeLWte/+rAwB6W5dcg9MOXreVA\nk48yoKYsFzkHdp2MgMIRcHHTftxhkC2iP7Z5Hm6MbMc/n6yt6h1f7CwPiFVypxeu\n3chtzceoyxv/x/LErPcOS9OAT1U0VK1HgVSZgvxDXZ+fDQbyjip6o56+wqFYXKFs\nLFvRwUfy47n8sQieB9SRDRVv+1hhYU5p9tApHc9IjI2qCl0I+ARqg+nPtoHAHdqJ\nd7oK3d0htzy+y2OgxsH/QWNASU3XgClRSkwylSFlr6GDPSHdynZbyNkE4WMCnsrW\njHWX/ixkXxJ78TMl/pHXXbsM+HvFbGp20FFewGS+DJZ2dpiU7/9ItRbHPCOH6YJZ\n6XphSRdlFzLz3RowHZ8kOhYz0Cy94f4zRVHaAmBjvdHvFfUupGSpKC0ymr872HPZ\nwzYNGdGigNvGQ/fIbt6XOC14YOfkoV4EKhZm1M2XiiIoToJo48o3Qn1f5of24sMn\nnAlIdYbTwTxRsWjEHs/oYt0tkGXAXyQpgUzrUqk7mBUrOBy2SSDxKwBF7JkDgYes\nDuMGnbskS9Q8/LqQdCFUxuZ1S9WDuq38DYdgO+51n/ilr+4bJn54fkYWx31HYc12\nnuzy2ZfYtFm+U+G1rvOYosGNCbh4KX5j4SFxUQqhr1DLyIDylbc=\n=Y0lY\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAFi3RsQYNsTZN3RmjIsp34MzMKxPgj5dtlXPTLCalk6CP/wEC8UgY+LC8ls\ncagche6FVTEI8QRflZhc8AiVgzot7fUtvgCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEDinSfTO5karf9MWxw/Yd7sI\n8QRflZha8AgoA5Bt61bvqQCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQbReUDYq8E/kFp1/O61NETwjxBF+V\nmFrwCDCirXJwThnDAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRh\nbGxheHkuY29t8BDAJDtWKjYQFRIc9lx6RlZnCPEEX5WYW/AIR9GNclE8ON0Ag9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree f6c5caef65a80ab13eadc1ac2d22047970ce581f\nparent f8a1c4d9469cb496fdafaf6f4d94977687df9190\nauthor Jon Atack <jon@atack.com> 1602842367 +0200\ncommitter Jon Atack <jon@atack.com> 1603639375 +0100\n\ncli -netinfo: make age column variable-width\n\nas it has a wide possible range and the new name (\"age\" instead of \"uptime\") is\nmuch shorter.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33e987452f869c279f2491499939e51e0af8364c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33e987452f869c279f2491499939e51e0af8364c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33e987452f869c279f2491499939e51e0af8364c/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8a1c4d9469cb496fdafaf6f4d94977687df9190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8a1c4d9469cb496fdafaf6f4d94977687df9190",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8a1c4d9469cb496fdafaf6f4d94977687df9190"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "59e7ef312b3b4a80efb64350530eab3c0fe1d43c",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33e987452f869c279f2491499939e51e0af8364c/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33e987452f869c279f2491499939e51e0af8364c/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=33e987452f869c279f2491499939e51e0af8364c",
        "patch": "@@ -14,6 +14,7 @@\n #include <rpc/mining.h>\n #include <rpc/protocol.h>\n #include <rpc/request.h>\n+#include <tinyformat.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n #include <util/translation.h>\n@@ -313,14 +314,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     bool IsVersionSelected() const { return m_details_level == 3 || m_details_level == 4; }\n     bool m_is_asmap_on{false};\n     size_t m_max_addr_length{0};\n+    size_t m_max_age_length{4};\n     size_t m_max_id_length{2};\n     struct Peer {\n         std::string addr;\n         std::string sub_version;\n         std::string network;\n+        std::string age;\n         double min_ping;\n         double ping;\n-        int64_t conn_time;\n         int64_t last_blck;\n         int64_t last_recv;\n         int64_t last_send;\n@@ -399,10 +401,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 const double min_ping{peer[\"minping\"].isNull() ? -1 : peer[\"minping\"].get_real()};\n                 const double ping{peer[\"pingtime\"].isNull() ? -1 : peer[\"pingtime\"].get_real()};\n                 const std::string addr{peer[\"addr\"].get_str()};\n+                const std::string age{conn_time == 0 ? \"\" : ToString((m_time_now - conn_time) / 60)};\n                 const std::string sub_version{peer[\"subver\"].get_str()};\n-                m_peers.push_back({addr, sub_version, network, min_ping, ping, conn_time, last_blck, last_recv, last_send, last_trxn, peer_id, mapped_as, version, is_block_relay, is_outbound});\n-                m_max_id_length = std::max(ToString(peer_id).length(), m_max_id_length);\n+                m_peers.push_back({addr, sub_version, network, age, min_ping, ping, last_blck, last_recv, last_send, last_trxn, peer_id, mapped_as, version, is_block_relay, is_outbound});\n                 m_max_addr_length = std::max(addr.length() + 1, m_max_addr_length);\n+                m_max_age_length = std::max(age.length(), m_max_age_length);\n+                m_max_id_length = std::max(ToString(peer_id).length(), m_max_id_length);\n                 m_is_asmap_on |= (mapped_as != 0);\n             }\n         }\n@@ -413,13 +417,13 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += \"Peer connections sorted by direction and min ping\\n<-> relay   net  mping   ping send recv  txn  blk    age \";\n+            result += strprintf(\"Peer connections sorted by direction and min ping\\n<-> relay   net  mping   ping send recv  txn  blk %*s \", m_max_age_length, \"age\");\n             if (m_is_asmap_on) result += \" asmap \";\n             result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n                 result += strprintf(\n-                    \"%3s %5s %5s%7s%7s%5s%5s%5s%5s%7s%*i %*s %-*s%s\\n\",\n+                    \"%3s %5s %5s%7s%7s%5s%5s%5s%5s %*s%*i %*s %-*s%s\\n\",\n                     peer.is_outbound ? \"out\" : \"in\",\n                     peer.is_block_relay ? \"block\" : \"full\",\n                     peer.network,\n@@ -429,7 +433,8 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     peer.last_recv == 0 ? \"\" : ToString(m_time_now - peer.last_recv),\n                     peer.last_trxn == 0 ? \"\" : ToString((m_time_now - peer.last_trxn) / 60),\n                     peer.last_blck == 0 ? \"\" : ToString((m_time_now - peer.last_blck) / 60),\n-                    peer.conn_time == 0 ? \"\" : ToString((m_time_now - peer.conn_time) / 60),\n+                    m_max_age_length, // variable spacing\n+                    peer.age,\n                     m_is_asmap_on ? 7 : 0, // variable spacing\n                     m_is_asmap_on && peer.mapped_as != 0 ? ToString(peer.mapped_as) : \"\",\n                     m_max_id_length, // variable spacing\n@@ -438,7 +443,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     IsAddressSelected() ? peer.addr : \"\",\n                     IsVersionSelected() && version != \"0\" ? version : \"\");\n             }\n-            result += \"                    ms     ms  sec  sec  min  min    min\\n\\n\";\n+            result += strprintf(\"                    ms     ms  sec  sec  min  min %*s\\n\\n\", m_max_age_length, \"min\");\n         }\n \n         // Report peer connection totals by type."
      }
    ]
  },
  {
    "sha": "773f4c99c00c0b1d8c1b53cb99ba571337100953",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzNmNGM5OWMwMGMwYjFkOGMxYjUzY2I5OWJhNTcxMzM3MTAwOTUz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-25T14:07:01Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-25T15:51:18Z"
      },
      "message": "cli -netinfo: handle longer tor v3 local addresses",
      "tree": {
        "sha": "1e9a06dfdd00632804bac4cb910372ab20fd6d02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e9a06dfdd00632804bac4cb910372ab20fd6d02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/773f4c99c00c0b1d8c1b53cb99ba571337100953",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+VnvYACgkQT1chs9Dj\nkh14Kg//ZhMW3h8NJkMYW1tOKMJOUnKH50cK+xaAoD3TiyxeKTbIhvRDC4lr8L6u\nFDBxZT3uSXihQB7lwKL9oK0QFt9iYTsXEruGPm1ryLjdzTHwUX9vH3uGimjAC4cJ\nHNOP5J62Q2oAwUU3R+MBCai1QXh06uR8/T6D6jZRfucj5KIl7Gepc+hgIV0gfWqt\n0F2t3vsuEniHfFnii5DtjEuD3S/aLGdzfojtzOziW29JK3bAtjOpqajgJdRCvp2Z\n7dLIsE8+X1H0r82rClyAStp6J+6Kw/jJk6XVAkMNEGmPIVna4nhBB2qorMtn/DXx\nQQYccASvRcwJi3ZN+eHlU9OGzA8fSz0wjc2qnWqotV7uo0mD5JF7n2dSxh7HvrIz\n2kp5zJ9zSZVId5wjDyawpqEuSXaOOx7cYssNAInM6LcQzddENb+3//12BAX6hsX/\n4n3VBfSIYueTf61hHjYkV2oi/h6Nbom/lHZ2DIndY0GW29SmRsmBb8//+LyW7qgo\n31cZxo3CV8vRsuzApGqn2JgwJ/UuVdKfiYDAW32zGO9P8Jl3fLF1ovGBKbr8fkQt\ndNRiksxgu6UmLHJXntlgnDanm3O9u8kv5wl/Mx1iFPhyBl9w/0FKwVUBaxP+PcpZ\n9bkZ2ZZaQ87DFPA9jqyd8Aa62eMn57ooDJQ1YQtD8jnqjLJeHqc=\n=/YEQ\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMZoT4CTLsTc20S16UXBeIm6caEfQHOmQHaiLAVkBW7jCP/wEJGQ8QgA4xr+\nqNSi1yPxB7cI8QRflZ778Ag6TqeMxUQpFgCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEKj17sidPh0VLCQ3IlnfX3gI\n8QRflZ748AgI1lfJPd7kKwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEO1rnSb1yS3hiZsxuxOy6uMI8QRflZ74\n8AgX+p3ELLnAQwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQ74OUadHNw8LsXZkQRC8S4AjxBF+VnvjwCAVW1BRsRu10AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 1e9a06dfdd00632804bac4cb910372ab20fd6d02\nparent 33e987452f869c279f2491499939e51e0af8364c\nauthor Jon Atack <jon@atack.com> 1603634821 +0100\ncommitter Jon Atack <jon@atack.com> 1603641078 +0100\n\ncli -netinfo: handle longer tor v3 local addresses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/773f4c99c00c0b1d8c1b53cb99ba571337100953",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/773f4c99c00c0b1d8c1b53cb99ba571337100953",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/773f4c99c00c0b1d8c1b53cb99ba571337100953/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33e987452f869c279f2491499939e51e0af8364c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33e987452f869c279f2491499939e51e0af8364c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33e987452f869c279f2491499939e51e0af8364c"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8e17319425d997425e08b063e6d0c40476b0a938",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/773f4c99c00c0b1d8c1b53cb99ba571337100953/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/773f4c99c00c0b1d8c1b53cb99ba571337100953/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=773f4c99c00c0b1d8c1b53cb99ba571337100953",
        "patch": "@@ -20,6 +20,7 @@\n #include <util/translation.h>\n #include <util/url.h>\n \n+#include <algorithm>\n #include <functional>\n #include <memory>\n #include <stdio.h>\n@@ -455,12 +456,16 @@ class NetinfoRequestHandler : public BaseRequestHandler\n \n         // Report local addresses, ports, and scores.\n         result += \"\\nLocal addresses\";\n-        const UniValue& local_addrs{networkinfo[\"localaddresses\"]};\n+        const std::vector<UniValue>& local_addrs{networkinfo[\"localaddresses\"].getValues()};\n         if (local_addrs.empty()) {\n             result += \": n/a\\n\";\n         } else {\n-            for (const UniValue& addr : local_addrs.getValues()) {\n-                result += strprintf(\"\\n%-40i  port %5i     score %6i\", addr[\"address\"].get_str(), addr[\"port\"].get_int(), addr[\"score\"].get_int());\n+            size_t max_addr_size{0};\n+            for (const UniValue& addr : local_addrs) {\n+                max_addr_size = std::max(addr[\"address\"].get_str().length() + 1, max_addr_size);\n+            }\n+            for (const UniValue& addr : local_addrs) {\n+                result += strprintf(\"\\n%-*s    port %6i    score %6i\", max_addr_size, addr[\"address\"].get_str(), addr[\"port\"].get_int(), addr[\"score\"].get_int());\n             }\n         }\n "
      }
    ]
  },
  {
    "sha": "398045ba8b3694931069f88ec95553b3207dd1a6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTgwNDViYThiMzY5NDkzMTA2OWY4OGVjOTU1NTNiMzIwN2RkMWE2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-25T14:11:41Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-25T15:51:21Z"
      },
      "message": "cli -netinfo: print oversized/extreme ping times as \"-\"",
      "tree": {
        "sha": "06f1968a8417fd37070443145f71aa97f17260c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06f1968a8417fd37070443145f71aa97f17260c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/398045ba8b3694931069f88ec95553b3207dd1a6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+VnvkACgkQT1chs9Dj\nkh1jBxAAuvRNR1zfwXnmMrp9uB7XzyjlRQdxS9grhLB8QX7cZ3z7Ar2SrnTmSlPw\nMDmmM9u/62AAojgaZ/m1y68XKVzbTBrXHzSyQlNelPxqkuT/rs6xhs1yWxOdq/uc\nGX/hI766xk63UYWScG4rIOaSiywXPjczzaguV7iRPEqRsvlr4cuD+B0PC2gU/btM\nKqSOzomYhpl2tLq28bEPIGDkn0mY9kRF4GBzesRHkokS3WH1KlBgR/UCUodSIfIt\nGRvqbMZJ5RDbc4DnuCiM7Lvuf40uxwvSzFDrqHUnZaDu6uRo953QD2ne8mBAp/RU\nD/fFLGA/4+ywQhrFpqNXCBTlalUDrzcydsoUYguF4GBZXZQbTWGNCwn1o8INRJ3F\nrn4Qnymuv0YyulKaPYUiHb2G7T1ukrN1lQpAcjxD/AWEW/0Hgm+59zJtiYJZfdR+\nfdHUDTefGS8XxCsZN+wlglHHhOCmDm9rXiFRtoTuSuIbbk4a+ujvYUZBwWcQ4KqM\n7Joefk+JSVx1uMhrjhX5vOJ9evMhlEXZyG+exDUSVmzy2M1GwNG1fblf39rEPGVY\nNQpcC/Ph+FtZC8xQiFn+wlgazfX7oJqE/owg57fqnlzHnXJMO8qtpHa0oToo7v4u\nC/D1m+K2fqkukjR+itmFomwfDXeavYOwx4MLykDUoAMIYuCZWUk=\n=od6n\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPhSyEqEgPeBbUsABNb/SR/j4jPzNHoSXM8r8ZvJZfrPCP/wEENt/DpRF3K4\nUTLsr7x4eIcI8SBkdl1Om+whwxa6UxSi3S6/JClr4SCU9XQExD4oMLvLFAjxBF+V\nnvrwCABkVgniBVTSAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BBeCiwiJEttj8IpTgDoDP3lCPEgQKsJRJOC\nMnhma/ZOfT5EyPL8OARn29IwYdIo96E/OkEI8QRflZ798Aj1sSm2zcDt7QCD3+MN\nLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/w\nEKQc+YqIdcyU/t4ukAWrBpEI8QRflZ768AioHJ50zVAX9gCD3+MNLvkMjiMiaHR0\ncHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQsfNa1Kf+FylxdxED0k4M\nNQjxBF+VnvvwCHz4IeDLm+IrAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 06f1968a8417fd37070443145f71aa97f17260c6\nparent 773f4c99c00c0b1d8c1b53cb99ba571337100953\nauthor Jon Atack <jon@atack.com> 1603635101 +0100\ncommitter Jon Atack <jon@atack.com> 1603641081 +0100\n\ncli -netinfo: print oversized/extreme ping times as \"-\"\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/398045ba8b3694931069f88ec95553b3207dd1a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/398045ba8b3694931069f88ec95553b3207dd1a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/398045ba8b3694931069f88ec95553b3207dd1a6/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "773f4c99c00c0b1d8c1b53cb99ba571337100953",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/773f4c99c00c0b1d8c1b53cb99ba571337100953",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/773f4c99c00c0b1d8c1b53cb99ba571337100953"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ef4641cb63ad09e6a950b21d34a5c9420e0b59c2",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/398045ba8b3694931069f88ec95553b3207dd1a6/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/398045ba8b3694931069f88ec95553b3207dd1a6/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=398045ba8b3694931069f88ec95553b3207dd1a6",
        "patch": "@@ -343,6 +343,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (gArgs.GetChainName() == CBaseChainParams::REGTEST) return \" regtest\";\n         return \"\";\n     }\n+    std::string PingTimeToString(double seconds) const\n+    {\n+        if (seconds < 0) return \"\";\n+        const double milliseconds{round(1000 * seconds)};\n+        return milliseconds > 999999 ? \"-\" : ToString(milliseconds);\n+    }\n     const int64_t m_time_now{GetSystemTimeInSeconds()};\n \n public:\n@@ -428,8 +434,8 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     peer.is_outbound ? \"out\" : \"in\",\n                     peer.is_block_relay ? \"block\" : \"full\",\n                     peer.network,\n-                    peer.min_ping == -1 ? \"\" : ToString(round(1000 * peer.min_ping)),\n-                    peer.ping == -1 ? \"\" : ToString(round(1000 * peer.ping)),\n+                    PingTimeToString(peer.min_ping),\n+                    PingTimeToString(peer.ping),\n                     peer.last_send == 0 ? \"\" : ToString(m_time_now - peer.last_send),\n                     peer.last_recv == 0 ? \"\" : ToString(m_time_now - peer.last_recv),\n                     peer.last_trxn == 0 ? \"\" : ToString((m_time_now - peer.last_trxn) / 60),"
      }
    ]
  }
]