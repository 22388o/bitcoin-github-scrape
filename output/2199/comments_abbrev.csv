gavinandresen,2013-01-22T19:27:23Z,"NACK. Setting thread priorities is non-portable; the only reason the code did it originally was to de-prioritize the mining threads. Since we don't really support CPU mining any more, that reason has gone away.\n\nA pull to remove setting thread priorities entirely would be better.\n",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-12561337,12561337,
sipa,2013-01-22T19:46:34Z,"@gavinandresen If this is true: https://bitcointalk.org/index.php?topic=137680.0 it perhaps does make sense to define our own enum with priorities in util.h, and have CreateThread take such an enum value. It could be a no-op in all but WIN32.\n",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-12562385,12562385,
Diapolo,2013-01-22T20:20:24Z,"@gavinandresen I think your point is valid in terms of CPU mining beeing unsupported (although I love to use it on testnet to quickly generate a block), but as @sipa pointed out there is that ""issue"" in Windows, that the whole OS is lagging, when the ThreadScriptCheck is run. Also there is ThreadMessageHandler2, which uses a non-default priority on Windows... dunno why, but that is the current sta",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-12564184,12564184,
laanwj,2013-01-22T22:08:17Z,If we're going to keep thread priorities I agree with this solution to pass the priority at thread creation. There is never a need to change it on the fly and I'm happy to get rid of that inlined function in util.h.\n,https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-12569499,12569499,
Diapolo,2013-01-23T06:39:36Z,"Added:\n- removes thread priority code for non-Windows OSes, so these will just\n  get a no-op\n\nStill, I think it makes sense to evaluate if the current prios are chosen wisely or if there is room for improvement.\n\n@gavinandresen Are you still on NACK or does it now seem to make sense for Windows :)?\n",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-12583518,12583518,
BitcoinPullTester,2013-01-24T02:02:02Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f2cb7f4d1220375bb340309c12f67689448f4e7f for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-12633576,12633576,
gavinandresen,2013-01-24T02:18:26Z,"My hidden agenda: I've got ""reimplement NewThread to use boost::thread and get rid of the ugly fShutdown and vnThreadsRunning[] nonsense"" near the top of my TODO list.\n\nAnd last time I looked, boost::thread didn't expose a way to set thread priorities.\n\nAn #ifdef WINDOWS in the Qt startup code that sets the initial process' priority seems like a better approach, if running at lower priority ma",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-12633917,12633917,
qubez,2013-02-14T21:48:28Z,"Current master can hit the CPU pretty hard with it's multithreading, I caught up with 50 blocks and it pegged my quad core CPU at 100%, enough to stall my GPU miner. We would expect a similar hiccup about every 10 minutes. Reindexing or downloading blocks makes it hard to watch a video or other stuff without manually lowering priority or limiting processor affinity. Bitcoin could run with default ",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-13580590,13580590,
gavinandresen,2013-03-11T23:31:33Z,"I finished my big thread cleanup: https://github.com/bitcoin/bitcoin/pull/2357\n\nIt replaces most calls to NewThread with calls to boost::thread_group::create_thread(), so is entirely incompatible with this pull.\n\nInstead of trying to tweak individual thread priorities, maybe it makes more sense to pull the -par=negative patch, and have Bitcoin-Qt SoftSetArg(""-par"", ""-1"") so Bitcoin-Qt users ge",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-14749939,14749939,
Diapolo,2013-03-12T07:11:46Z,"I will take a look at your pull but agree, this one is obsolete and we should consider your next idea. IMHO it would be nice to still allow Bitcoin-Qt to use all cores, if a users explicitly wants that.\n",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-14761582,14761582,
laanwj,2013-03-12T07:42:18Z,"Agreed Gavin, good idea to keep a free core for the ui+os to prevent\noverall sluggishness.\n",https://github.com/bitcoin/bitcoin/pull/2199#issuecomment-14762365,14762365,
laanwj,2013-01-22T22:10:42Z,"It is possible on Linux but you need to mess with thread scheduling policies and whatnot, so I recommend leaving it a NOP for everything but windows (but this comment can go, as it is not ""unclear"" in any way :-)\n",https://github.com/bitcoin/bitcoin/pull/2199#discussion_r2733778,2733778,src/util.cpp
Diapolo,2013-01-23T06:32:28Z,An update is on the way ;).\n,https://github.com/bitcoin/bitcoin/pull/2199#discussion_r2738054,2738054,src/util.cpp
sipa,2013-02-14T22:01:15Z,"I think this needs to be below normal. In case of multithreaded sigchecking, it doesn't matter anyway (as it needs to wait on the sigcheck threads which are below normal and do the most cpu intensive work), and in single-threaded mode you don't want the import thread to kill your computer.\n",https://github.com/bitcoin/bitcoin/pull/2199#discussion_r3021101,3021101,src/init.cpp
Diapolo,2013-02-15T07:12:51Z,"That is a simple thing to do, my intention was to give more priority to this thread to speed it up (I never did a benchmark though ^^), but what you say makes sense and I can update this pull. But Gavin said he doesn't want this fine grained priority settings for our threads, so I'm unsure if I should update or just close this pull.\n",https://github.com/bitcoin/bitcoin/pull/2199#discussion_r3025183,3025183,src/init.cpp
laanwj,2013-02-15T08:33:40Z,"I don't know how windows thread scheduling exactly works, but are we sure\nwe're not just adjusting the priority that the thread gets _within_ the\nprocess? (the thread scheduling policy) If so, adjusting all these relative\npriorities will do nothing for the system as a whole.\n",https://github.com/bitcoin/bitcoin/pull/2199#discussion_r3025659,3025659,src/init.cpp
Diapolo,2013-02-15T10:18:30Z,"There is a priority class for the process (bitcoin-qt.exe), which is default and ""normal"", we are then able to tweak the resulting threads base priority by setting the threads priority level, which is what this pull does.\n\nSee http://msdn.microsoft.com/en-us/library/windows/desktop/ms685100%28v=vs.85%29.aspx for details.\n",https://github.com/bitcoin/bitcoin/pull/2199#discussion_r3026646,3026646,src/init.cpp
