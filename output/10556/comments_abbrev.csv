jnewbery,2017-06-08T15:07:04Z,@jimmysong @kallewoof @sdaftuar - you've all mentioned that you're happy to help move #10082 forward. Any review of this and/or #10555 would be appreciated.,https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-307132530,307132530,
jnewbery,2017-06-08T16:46:52Z,@jimmysong - Thanks for the quick review! Responses inline.,https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-307161416,307161416,
jimmysong,2017-06-08T19:28:00Z,"Great, please let me know when you rebase to #10555 and I'll test it.",https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-307203506,307203506,
jnewbery,2017-06-08T19:37:09Z,rebased on #10555 ,https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-307205612,307205612,
jimmysong,2017-06-08T20:17:51Z,Tested ACK e1e3dd074b71503d8f74651bf2a3cfd9e55a4d2b,https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-307215447,307215447,
achow101,2017-06-08T21:05:51Z,utACK e1e3dd074b71503d8f74651bf2a3cfd9e55a4d2b,https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-307227387,307227387,
jnewbery,2017-06-16T13:56:01Z,Needed rebase because the new wallet-encryption test used functions that are moved into the BitcoinTestFramework class by the PR.,https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-309032505,309032505,
jnewbery,2017-06-18T16:06:24Z,Rebased,https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-309286583,309286583,
laanwj,2017-06-21T12:56:36Z,"Needs rebase after #10533 (again, sorry)",https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-310069790,310069790,
jnewbery,2017-06-27T20:46:12Z,"rebased (twice - since master changed while I was rebasing 🙁 )\n\n> Not sure how to feel about the whitespace changes. This might discourage or distract reviewers.\n\nI include style fixes for the modules I'm touching in PRs for a few reasons:\n- I like my commits to run clean through a linter. It's the best way I know to make sure I'm not introducing new style nits.\n- no-one likes reviewin",https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-311480237,311480237,
MarcoFalke,2017-06-29T09:05:35Z,"Sorry, this needs rebase again. :(",https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-311907645,311907645,
jnewbery,2017-06-29T10:59:07Z,rebased,https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-311933188,311933188,
MarcoFalke,2017-06-29T13:39:34Z,"Well, the issue with including whitespace fixes is that it makes it harder\nto backport and also harder to keep mergeable. So the rebases will\nintroduce errors (see below). Actually I would be fine with a cleanup in\ntest that fixes whitespace and is a `git diff --ignore-all-space` empty\ndiff.\n\nutACK with 05b8c081b435e87b08335e9f9b62a55fa1d48ecc, lets leave this as is\nand fix two nits:\n\n* r",https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-311969383,311969383,
jnewbery,2017-06-29T14:08:17Z,"Fixed the first two nits. Thanks for catching\n\n> wait_for_node_exit should probably come with a default value for timeout,\nbut this should be done i a follow a later pull.\n\nRight - I think that's completely orthogonal to this pull. It was introduced in 176c021d085f5a45bc9e038e760942aa648dd797",https://github.com/bitcoin/bitcoin/pull/10556#issuecomment-311977609,311977609,
jimmysong,2017-06-08T16:04:08Z,"nit: `range(n)` is better than `range(0, n)`",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120930302,120930302,test/functional/zmq_test.py
jimmysong,2017-06-08T16:07:58Z,"This might be easier to read if made into a for loop:\n\n    interval = 0.1\n    for _ in range(int(timeout/interval)):\n        try:\n            return socket.recv_multipart(zmq.NOBLOCK)\n        except zmq.error.Again:\n            time.sleep(interval)\n    raise AssertionError(""Timed out waiting for zmq message"")",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120931184,120931184,test/functional/zmq_test.py
jimmysong,2017-06-08T16:11:11Z,Why take out the constant here?,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120931991,120931991,test/functional/fundrawtransaction.py
jimmysong,2017-06-08T16:13:30Z,Is this being used?,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120932618,120932618,test/functional/test_framework/test_framework.py
jimmysong,2017-06-08T16:15:22Z,How did this work before? Was it one of the import *'s?,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120933058,120933058,test/functional/bip9-softforks.py
jnewbery,2017-06-08T16:41:01Z,"Yes, that's better. I've made the change in #10555, and will rebase this PR off that once you've finished your review.",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120938947,120938947,test/functional/zmq_test.py
jnewbery,2017-06-08T16:41:11Z,Agree. Changed in #10555 ,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120938999,120938999,test/functional/zmq_test.py
jnewbery,2017-06-08T16:43:27Z,"Because I've moved the `BITCOIND_PROC_WAIT_TIMEOUT` constant into test_framework.py. The next PR (introduce TestNode) will remove `bitcoind_processes` dict entirely, so for this intermediate PR rather than add an import which I'll revert in the next PR, I've just changed this to a hard-coded value.",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120939551,120939551,test/functional/fundrawtransaction.py
jnewbery,2017-06-08T16:45:16Z,"Here: https://github.com/bitcoin/bitcoin/blob/9c248e39f2807a7f89e555e99cc55cb2de1ad335/test/functional/test_framework/test_framework.py#L194\n\nI must have missed out this import in a previous commit. Makes sense to fix it in this cleanup commit.",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120940007,120940007,test/functional/test_framework/test_framework.py
jnewbery,2017-06-08T16:46:23Z,"Yes, this was being indirectly imported from utils.py :( there are still lots of indirect imports in functional tests, which makes refactors like this seem more disruptive than they actually are.",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r120940253,120940253,test/functional/bip9-softforks.py
kallewoof,2017-06-09T01:20:12Z,"I have a hard time understanding how this will work. `self.nodes` seems to be set to `self.start_nodes(...)` which means at this point, `self.nodes` is not set at all, and `self.stop_nodes()` will do nothing. Am I missing something?",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r121032497,121032497,test/functional/test_framework/test_framework.py
achow101,2017-06-09T01:27:03Z,"I don't think you are. Instead of returning `rpcs`, I think this function should appent to `self.nodes` directly.",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r121033071,121033071,test/functional/test_framework/test_framework.py
jnewbery,2017-06-09T15:56:31Z,"Good spot @kallewoof - you're not missing anything at all. This is obviously wrong :(\n\nOnce #10082 is fully merged, I'd like to improve the way the TestNode objects are handled by the BitcoinTestFramework class. There should be separate methods `add_nodes()`, which would instantiate new TestNode objects, and `start_node()`, which would start the bitcoind process. I don't think `start_node()` o",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r121161453,121161453,test/functional/test_framework/test_framework.py
kallewoof,2017-06-12T06:46:09Z,@jnewbery Fix looks good to me!,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r121319327,121319327,test/functional/test_framework/test_framework.py
MarcoFalke,2017-06-18T12:23:55Z,Please keep the arg named. I'd really prefer if all primitive types are named in our python code.,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r122589783,122589783,test/functional/fundrawtransaction.py
jnewbery,2017-06-18T16:06:19Z,Done. I've also restored the use of a constant here (at least until the next PR in this series is merged).,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r122594658,122594658,test/functional/fundrawtransaction.py
MarcoFalke,2017-06-19T14:15:44Z,Are you sure this was fixed? GitHub didn't collapse the comments.,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r122718844,122718844,test/functional/fundrawtransaction.py
jnewbery,2017-06-20T20:26:04Z,"Oops. Fixed but not pushed.\n\nShould be good now.",https://github.com/bitcoin/bitcoin/pull/10556#discussion_r123085875,123085875,test/functional/fundrawtransaction.py
MarcoFalke,2017-06-22T08:48:43Z,Not sure how to feel about the whitespace changes. This might discourage or distract reviewers. Maybe we could make those in a separate somewhat larger pull?,https://github.com/bitcoin/bitcoin/pull/10556#discussion_r123453089,123453089,test/functional/test_framework/test_framework.py
