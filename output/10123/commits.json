[
  {
    "sha": "3bde5564294b36780d1839ed4aec4612fe3a69dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYmRlNTU2NDI5NGIzNjc4MGQxODM5ZWQ0YWVjNDYxMmZlM2E2OWRk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-02T23:56:03Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-03T13:04:42Z"
      },
      "message": "Add -debugexclude option to switch off logging for specified components",
      "tree": {
        "sha": "c9775c9c6ec1eb5b9c362e66fa8d7f284c857668",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9775c9c6ec1eb5b9c362e66fa8d7f284c857668"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bde5564294b36780d1839ed4aec4612fe3a69dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bde5564294b36780d1839ed4aec4612fe3a69dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3bde5564294b36780d1839ed4aec4612fe3a69dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bde5564294b36780d1839ed4aec4612fe3a69dd/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ebfd653798113a53a604dcaa98c56b2d6638ad5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebfd653798113a53a604dcaa98c56b2d6638ad5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ebfd653798113a53a604dcaa98c56b2d6638ad5d"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 14,
      "deletions": 1
    },
    "files": [
      {
        "sha": "59e5a4a207371f8b6d401b3252e303e01e7e0897",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bde5564294b36780d1839ed4aec4612fe3a69dd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bde5564294b36780d1839ed4aec4612fe3a69dd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3bde5564294b36780d1839ed4aec4612fe3a69dd",
        "patch": "@@ -443,6 +443,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     }\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n         _(\"If <category> is not supplied or if <category> = 1, output all debugging information.\") + \" \" + _(\"<category> can be:\") + \" \" + ListLogCategories() + \".\");\n+    strUsage += HelpMessageOpt(\"-debugexclude=<category>\", strprintf(_(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except one or more specified categories.\")));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-nodebug\", \"Turn off debugging messages, same as -debug=0\");\n     strUsage += HelpMessageOpt(\"-help-debug\", _(\"Show all debugging options (usage: --help -help-debug)\"));\n@@ -914,13 +915,25 @@ bool AppInitParameterInteraction()\n             for (const auto& cat : categories) {\n                 uint32_t flag;\n                 if (!GetLogCategory(&flag, &cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s.\\n\"), cat));\n+                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n                 }\n                 logCategories |= flag;\n             }\n         }\n     }\n \n+    // Now remove the logging categories which were explicitly excluded\n+    if (mapMultiArgs.count(\"-debugexclude\") > 0) {\n+        const std::vector<std::string>& excludedCategories = mapMultiArgs.at(\"-debugexclude\");\n+        for (const auto& cat : excludedCategories) {\n+            uint32_t flag;\n+            if (!GetLogCategory(&flag, &cat)) {\n+                InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n+            }\n+            logCategories &= ~flag;\n+        }\n+    }\n+\n     // Check for -debugnet\n     if (GetBoolArg(\"-debugnet\", false))\n         InitWarning(_(\"Unsupported argument -debugnet ignored, use -debug=net.\"));"
      }
    ]
  }
]