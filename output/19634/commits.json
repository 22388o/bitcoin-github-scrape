[
  {
    "sha": "f916847d2b56f2935c169e1b95b350a477c804cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTE2ODQ3ZDJiNTZmMjkzNWMxNjllMWI5NWIzNTBhNDc3YzgwNGNj",
    "commit": {
      "author": {
        "name": "Justin Moon",
        "email": "mail@justinmoon.com",
        "date": "2020-07-31T17:27:48Z"
      },
      "committer": {
        "name": "Justin Moon",
        "email": "mail@justinmoon.com",
        "date": "2020-07-31T17:27:48Z"
      },
      "message": "rpc: Document getwalletinfo's unlocked_until field as optional",
      "tree": {
        "sha": "ef9a7075608c95469bfcd3ef6a2d141c428e76ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef9a7075608c95469bfcd3ef6a2d141c428e76ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f916847d2b56f2935c169e1b95b350a477c804cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f916847d2b56f2935c169e1b95b350a477c804cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f916847d2b56f2935c169e1b95b350a477c804cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f916847d2b56f2935c169e1b95b350a477c804cc/comments",
    "author": {
      "login": "justinmoon",
      "id": 4335621,
      "node_id": "MDQ6VXNlcjQzMzU2MjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4335621?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinmoon",
      "html_url": "https://github.com/justinmoon",
      "followers_url": "https://api.github.com/users/justinmoon/followers",
      "following_url": "https://api.github.com/users/justinmoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinmoon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinmoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinmoon/subscriptions",
      "organizations_url": "https://api.github.com/users/justinmoon/orgs",
      "repos_url": "https://api.github.com/users/justinmoon/repos",
      "events_url": "https://api.github.com/users/justinmoon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinmoon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "justinmoon",
      "id": 4335621,
      "node_id": "MDQ6VXNlcjQzMzU2MjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4335621?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinmoon",
      "html_url": "https://github.com/justinmoon",
      "followers_url": "https://api.github.com/users/justinmoon/followers",
      "following_url": "https://api.github.com/users/justinmoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinmoon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinmoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinmoon/subscriptions",
      "organizations_url": "https://api.github.com/users/justinmoon/orgs",
      "repos_url": "https://api.github.com/users/justinmoon/repos",
      "events_url": "https://api.github.com/users/justinmoon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinmoon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7c73b03d975a72f609ded2bbe250c1c8a76a944",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7c73b03d975a72f609ded2bbe250c1c8a76a944",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7c73b03d975a72f609ded2bbe250c1c8a76a944"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "39d1f49e9e9b52163c1e550d18f7c3cedae67aa3",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f916847d2b56f2935c169e1b95b350a477c804cc/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f916847d2b56f2935c169e1b95b350a477c804cc/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=f916847d2b56f2935c169e1b95b350a477c804cc",
        "patch": "@@ -2338,7 +2338,7 @@ static UniValue getwalletinfo(const JSONRPCRequest& request)\n                         {RPCResult::Type::NUM_TIME, \"keypoololdest\", \"the \" + UNIX_EPOCH_TIME + \" of the oldest pre-generated key in the key pool. Legacy wallets only.\"},\n                         {RPCResult::Type::NUM, \"keypoolsize\", \"how many new keys are pre-generated (only counts external keys)\"},\n                         {RPCResult::Type::NUM, \"keypoolsize_hd_internal\", \"how many new keys are pre-generated for internal use (used for change outputs, only appears if the wallet is using this feature, otherwise external keys are used)\"},\n-                        {RPCResult::Type::NUM_TIME, \"unlocked_until\", \"the \" + UNIX_EPOCH_TIME + \" until which the wallet is unlocked for transfers, or 0 if the wallet is locked\"},\n+                        {RPCResult::Type::NUM_TIME, \"unlocked_until\", /* optional */ true, \"the \" + UNIX_EPOCH_TIME + \" until which the wallet is unlocked for transfers, or 0 if the wallet is locked (only present for passphrase-encrypted wallets)\"},\n                         {RPCResult::Type::STR_AMOUNT, \"paytxfee\", \"the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\"},\n                         {RPCResult::Type::STR_HEX, \"hdseedid\", /* optional */ true, \"the Hash160 of the HD seed (only present when HD is enabled)\"},\n                         {RPCResult::Type::BOOL, \"private_keys_enabled\", \"false if privatekeys are disabled for this wallet (enforced watch-only wallet)\"},"
      }
    ]
  }
]