Michagogo,2015-06-30T05:55:45Z,"Minor nit: NSIS shouldn't output installers with `unsigned` in the name. Unless I'm misunderstanding, the `.dmg` that the (non-gitian) build process for OS X outputs doesn't contain that in the name, and that's a good thing. The `{un,}signed` only makes sense in the context of the gitian process, so gitian should include it in output file names, but the normal build process (e.g. if you're buildin",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-116987358,116987358,
laanwj,2015-06-30T10:36:58Z,Thanks!\n\n@michagogo That comment sounds sensible to me.\n,https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117118633,117118633,
theuni,2015-06-30T14:40:45Z,"Ok, I'll revert that and change the name in the win descriptor instead.\n",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117211344,117211344,
Michagogo,2015-06-30T15:11:33Z,"There's still the difference in where the tools for the signature application are built... It seems weird to have to manually download those files when we already have a process for fetching and building things that we need for the build process, which is used for OS X. And there's also the fact that the OS X tarball is a full package of everything you need to apply the signature, while Windows is",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117221786,117221786,
Michagogo,2015-06-30T15:15:12Z,"Oh, and are the process and tools for creating the detached signature (the commands/script to perform the signing and detach the signature) in the repo somewhere? They are in OS X (`contrib/macdeploy/detached-sig-create.sh`).\n",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117223346,117223346,
laanwj,2015-06-30T15:26:56Z,"@Michagogo Manually download which files? The idea is to distribute the Windows and OSX signatures in the same way, through the `bitcoin-detached-sigs` repository.\n\nIf you mean the `osslsigncode-1.7.1.tar.gz` I certainly don't think they should be part of the signature, nor automatically downloaded by depends. They are not required for the build, just for signing. It was your own argument to mak",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117228356,117228356,
theuni,2015-06-30T15:27:28Z,"Updated as suggested.\n\n@Michagogo All of those differences come from the fact that building the osx attacher is a nasty, complicated process, while the Linux attacher is a simple tool. Since signing is only used during the gitian/release process, I don't see any point in adding osslsigntool to depends.\n",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117228521,117228521,
laanwj,2015-06-30T15:28:08Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117228725,117228725,
theuni,2015-06-30T15:31:40Z,"@Michagogo as for instructions for signing and maybe a wrapper around osslsigntool to make it foolproof, that's a reasonable suggestion. I'll add that soonish. Not a blocker here, though.\n",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117229731,117229731,
Michagogo,2015-06-30T15:36:37Z,"I assume you mean the Windows attacher. Okay, I guess that makes sense. As mentioned in IRC recently, it's considered a good practice to also sign the binaries inside the installer, but that's also not worth delaying this (and rc3) for, since on Windows the place where it's actually user-facing is the UAC prompt on installation, as opposed to on Macs where the actual binary that runs needs to be s",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117231341,117231341,
theuni,2015-06-30T15:43:04Z,Yes\n,https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117233277,117233277,
laanwj,2015-06-30T16:15:44Z,backported to 0.11 as via bdf0d94 bad1e8b\n,https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117242206,117242206,
theuni,2015-06-30T16:22:26Z,"@Michagogo here's a quick go at a signing script that matches the current process. Note that the modified osslsigncode is needed for the ""-pem"" option.\n\n``` bash\n#!/bin/sh\nset -e\n\nTIMESTAMP_URL=http://timestamp.comodoca.com/authenticode\n\nif [ ! -n ""$1"" ]; then\n  echo ""usage: $0 <extra osslsigncode args>""\n  echo ""example: $0 -pkcs12 /path/to/keys.p12 -pass mypass""\n  exit 1\nfi\n\nif [ -z",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117244142,117244142,
Michagogo,2015-06-30T16:25:53Z,"You probably want to quote the `${OSSLSIGNCODE}` -- I've had issues with `[ -z  ]` not returning what would be expected, while `[ -z """" ]` did work.\n",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117245067,117245067,
laanwj,2015-07-01T04:35:38Z,"I noticed while signing 0.11.0rc3:\nThe output of the windows signer has the versioned names `bitcoin-0.11.0-win32-setup.exe` and `bitcoin-0.11.0-win64-setup.exe`, whereas the osx signer produces `bitcoin-osx-signed.dmg`.\n\nLet's do the same for the latter e.g. remove the -signed, add the version, so `bitcoin-0.11.0-osx.dmg`.\n\nThe new process works great apart from that.\n",https://github.com/bitcoin/bitcoin/pull/6354#issuecomment-117432324,117432324,
