[
  {
    "sha": "b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzBiMzQ1MmExNmViYWM0MTM1ZTJlYzY3ZTkzZjRhNDE0NWUyNGU2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-25T21:22:01Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T14:09:33Z"
      },
      "message": "gui: Factor out WalletModel::getDisplayName()",
      "tree": {
        "sha": "d6543d5eca03162dddc2ebea351faf13d0612ff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6543d5eca03162dddc2ebea351faf13d0612ff8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2796c6e5ec9055545e987023b04eb5ebe64d5320",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2796c6e5ec9055545e987023b04eb5ebe64d5320",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2796c6e5ec9055545e987023b04eb5ebe64d5320"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d5149613936558bedaf1546b459162874bef7152",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
        "patch": "@@ -516,7 +516,7 @@ bool BitcoinGUI::addWallet(WalletModel *walletModel)\n     if(!walletFrame)\n         return false;\n     const QString name = walletModel->getWalletName();\n-    QString display_name = name.isEmpty() ? \"[\"+tr(\"default wallet\")+\"]\" : name;\n+    const QString display_name = walletModel->getDisplayName();\n     setWalletActionsEnabled(true);\n     m_wallet_selector->addItem(display_name, name);\n     if (m_wallet_selector->count() == 2) {"
      },
      {
        "sha": "90fb1837bea0e4e97d3ee4ce7902bff77bf5f90e",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
        "patch": "@@ -695,7 +695,7 @@ void RPCConsole::addWallet(WalletModel * const walletModel)\n {\n     const QString name = walletModel->getWalletName();\n     // use name for text and internal data object (to allow to move to a wallet id later)\n-    QString display_name = name.isEmpty() ? \"[\"+tr(\"default wallet\")+\"]\" : name;\n+    const QString display_name = walletModel->getDisplayName();\n     ui->WalletSelector->addItem(display_name, name);\n     if (ui->WalletSelector->count() == 2 && !isVisible()) {\n         // First wallet added, set to default so long as the window isn't presently visible (and potentially in use)"
      },
      {
        "sha": "73875fac54e52ad7e3d4034587a4d183bf4ca75b",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
        "patch": "@@ -567,6 +567,12 @@ QString WalletModel::getWalletName() const\n     return QString::fromStdString(m_wallet->getWalletName());\n }\n \n+QString WalletModel::getDisplayName() const\n+{\n+    const QString name = getWalletName();\n+    return name.isEmpty() ? \"[\"+tr(\"default wallet\")+\"]\" : name;\n+}\n+\n bool WalletModel::isMultiwallet()\n {\n     return m_node.getWallets().size() > 1;"
      },
      {
        "sha": "e4f6671d78b7b97298f2bedffe5331d1708caa51",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b70b3452a16ebac4135e2ec67e93f4a4145e24e6/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
        "patch": "@@ -203,6 +203,7 @@ class WalletModel : public QObject\n     interfaces::Wallet& wallet() const { return *m_wallet; }\n \n     QString getWalletName() const;\n+    QString getDisplayName() const;\n \n     bool isMultiwallet();\n "
      }
    ]
  },
  {
    "sha": "295f9797cf16373d5370438fdff0259658eaeb94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTVmOTc5N2NmMTYzNzNkNTM3MDQzOGZkZmYwMjU5NjU4ZWFlYjk0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-25T17:11:40Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T14:09:33Z"
      },
      "message": "gui: Move private slot BitcoinApplication::removeWallet to lambda",
      "tree": {
        "sha": "9f90cdf8f0a89d4839d78e5c01b6fee7674afd36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f90cdf8f0a89d4839d78e5c01b6fee7674afd36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/295f9797cf16373d5370438fdff0259658eaeb94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/295f9797cf16373d5370438fdff0259658eaeb94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/295f9797cf16373d5370438fdff0259658eaeb94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/295f9797cf16373d5370438fdff0259658eaeb94/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b70b3452a16ebac4135e2ec67e93f4a4145e24e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b70b3452a16ebac4135e2ec67e93f4a4145e24e6"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 5,
      "deletions": 12
    },
    "files": [
      {
        "sha": "c3c81c1b131861288424f02967d1e069752e4460",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 12,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/295f9797cf16373d5370438fdff0259658eaeb94/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/295f9797cf16373d5370438fdff0259658eaeb94/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=295f9797cf16373d5370438fdff0259658eaeb94",
        "patch": "@@ -212,7 +212,6 @@ public Q_SLOTS:\n     /// Handle runaway exceptions. Shows a message box with the problem and quits the program.\n     void handleRunawayException(const QString &message);\n     void addWallet(WalletModel* walletModel);\n-    void removeWallet();\n \n Q_SIGNALS:\n     void requestedInitialize();\n@@ -442,22 +441,16 @@ void BitcoinApplication::addWallet(WalletModel* walletModel)\n \n     connect(walletModel, &WalletModel::coinsSent,\n         paymentServer, &PaymentServer::fetchPaymentACK);\n-    connect(walletModel, &WalletModel::unload, this, &BitcoinApplication::removeWallet);\n+    connect(walletModel, &WalletModel::unload, [=]() {\n+        m_wallet_models.erase(std::find(m_wallet_models.begin(), m_wallet_models.end(), walletModel));\n+        window->removeWallet(walletModel);\n+        walletModel->deleteLater();\n+    });\n \n     m_wallet_models.push_back(walletModel);\n #endif\n }\n \n-void BitcoinApplication::removeWallet()\n-{\n-#ifdef ENABLE_WALLET\n-    WalletModel* walletModel = static_cast<WalletModel*>(sender());\n-    m_wallet_models.erase(std::find(m_wallet_models.begin(), m_wallet_models.end(), walletModel));\n-    window->removeWallet(walletModel);\n-    walletModel->deleteLater();\n-#endif\n-}\n-\n void BitcoinApplication::initializeResult(bool success)\n {\n     qDebug() << __func__ << \": Initialization result: \" << success;"
      }
    ]
  },
  {
    "sha": "919c5e22b0a14430d670f88cbd51915571c4af85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTljNWUyMmIwYTE0NDMwZDY3MGY4OGNiZDUxOTE1NTcxYzRhZjg1",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-07-10T01:16:28Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T14:09:33Z"
      },
      "message": "wallet: Add CreateWallet and LoadWallet functions",
      "tree": {
        "sha": "020a1c83f76904b7a0f1b21750cafd8da01b2f55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/020a1c83f76904b7a0f1b21750cafd8da01b2f55"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/919c5e22b0a14430d670f88cbd51915571c4af85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/919c5e22b0a14430d670f88cbd51915571c4af85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/919c5e22b0a14430d670f88cbd51915571c4af85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/919c5e22b0a14430d670f88cbd51915571c4af85/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "295f9797cf16373d5370438fdff0259658eaeb94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/295f9797cf16373d5370438fdff0259658eaeb94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/295f9797cf16373d5370438fdff0259658eaeb94"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 81,
      "deletions": 26
    },
    "files": [
      {
        "sha": "4ebcb52d75107a7dfbf2f0bb15f8c56f7f8df80a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 26,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/919c5e22b0a14430d670f88cbd51915571c4af85/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/919c5e22b0a14430d670f88cbd51915571c4af85/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=919c5e22b0a14430d670f88cbd51915571c4af85",
        "patch": "@@ -2502,7 +2502,6 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"loadwallet\", \"\\\"test.dat\\\"\")\n         );\n     std::string wallet_file = request.params[0].get_str();\n-    std::string error;\n \n     fs::path wallet_path = fs::absolute(wallet_file, GetWalletDir());\n     if (fs::symlink_status(wallet_path).type() == fs::file_not_found) {\n@@ -2515,18 +2514,11 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n         }\n     }\n \n-    std::string warning;\n-    if (!CWallet::Verify(wallet_file, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(wallet_file, fs::absolute(wallet_file, GetWalletDir()));\n+    std::string error, warning;\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(wallet_file, error, warning);\n     if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet loading failed.\");\n+        throw JSONRPCError(RPC_WALLET_ERROR, error);\n     }\n-    AddWallet(wallet);\n-\n-    wallet->postInitProcess();\n \n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"name\", wallet->GetName());\n@@ -2563,23 +2555,10 @@ static UniValue createwallet(const JSONRPCRequest& request)\n         disable_privatekeys = request.params[1].get_bool();\n     }\n \n-    fs::path wallet_path = fs::absolute(wallet_name, GetWalletDir());\n-    if (fs::symlink_status(wallet_path).type() != fs::file_not_found) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + wallet_name + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(wallet_name, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(wallet_name, fs::absolute(wallet_name, GetWalletDir()), (disable_privatekeys ? (uint64_t)WALLET_FLAG_DISABLE_PRIVATE_KEYS : 0));\n+    std::shared_ptr<CWallet> const wallet = CreateWallet(wallet_name, (disable_privatekeys ? (uint64_t)WALLET_FLAG_DISABLE_PRIVATE_KEYS : 0), error, warning);\n     if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n+        throw JSONRPCError(RPC_WALLET_ERROR, error);\n     }\n-    AddWallet(wallet);\n-\n-    wallet->postInitProcess();\n \n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"name\", wallet->GetName());"
      },
      {
        "sha": "4d0fbb798011092eb2458e76da593e50153673ac",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/919c5e22b0a14430d670f88cbd51915571c4af85/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/919c5e22b0a14430d670f88cbd51915571c4af85/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=919c5e22b0a14430d670f88cbd51915571c4af85",
        "patch": "@@ -81,6 +81,74 @@ std::shared_ptr<CWallet> GetWallet(const std::string& name)\n     return nullptr;\n }\n \n+static void GetWalletNameAndPath(const std::string& wallet_file, std::string& wallet_name, fs::path& wallet_path) {\n+    wallet_path = fs::absolute(wallet_file, GetWalletDir());\n+    fs::path name;\n+    fs::path parent = wallet_path;\n+    while (!parent.empty()) {\n+        if (parent == GetWalletDir()) {\n+            break;\n+        }\n+        name = parent.filename() / name;\n+        parent = parent.parent_path();\n+    }\n+    wallet_name = name.string();\n+}\n+\n+std::shared_ptr<CWallet> CreateWallet(const std::string& wallet_file, uint64_t wallet_creation_flags, std::string& error, std::string& warning)\n+{\n+    fs::path wallet_path;\n+    std::string wallet_name;\n+    GetWalletNameAndPath(wallet_file, wallet_name, wallet_path);\n+\n+    if (fs::symlink_status(wallet_path).type() != fs::file_not_found) {\n+        error = \"Wallet \" + wallet_name + \" already exists.\";\n+        return nullptr;\n+    }\n+\n+    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n+    if (!CWallet::Verify(wallet_file, false, error, warning)) {\n+        error = \"Wallet file verification failed: \" + error;\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(wallet_name, wallet_path, wallet_creation_flags);\n+    if (!wallet) {\n+        error = \"Wallet creation failed.\";\n+        return nullptr;\n+    }\n+\n+    AddWallet(wallet);\n+\n+    wallet->postInitProcess();\n+    return wallet;\n+}\n+\n+std::shared_ptr<CWallet> LoadWallet(const std::string& wallet_file, std::string& error, std::string& warning)\n+{\n+    LOCK(cs_wallets);\n+\n+    fs::path wallet_path;\n+    std::string wallet_name;\n+    GetWalletNameAndPath(wallet_file, wallet_name, wallet_path);\n+\n+    if (!CWallet::Verify(wallet_file, false, error, warning)) {\n+        error = \"Wallet file verification failed: \" + error;\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet = CWallet::CreateWalletFromFile(wallet_name, wallet_path);\n+    if (!wallet) {\n+        error = \"Wallet creation failed.\";\n+        return nullptr;\n+    }\n+\n+    AddWallet(wallet);\n+    wallet->postInitProcess();\n+\n+    return wallet;\n+}\n+\n // Custom deleter for shared_ptr<CWallet>.\n static void ReleaseWallet(CWallet* wallet)\n {\n@@ -4183,6 +4251,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(const std::string& name,\n     }\n \n     uiInterface.LoadWallet(walletInstance);\n+    walletInstance->NotifyLoad();\n \n     // Register with the validation interface. It's ok to do this after rescan since we're still holding cs_main.\n     RegisterValidationInterface(walletInstance.get());"
      },
      {
        "sha": "0e451339a96d5e540b77cbce5e8b45f579eafe42",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/919c5e22b0a14430d670f88cbd51915571c4af85/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/919c5e22b0a14430d670f88cbd51915571c4af85/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=919c5e22b0a14430d670f88cbd51915571c4af85",
        "patch": "@@ -39,6 +39,10 @@ bool HasWallets();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n \n+std::shared_ptr<CWallet> CreateWallet(const std::string& wallet_file, uint64_t wallet_creation_flags, std::string& error, std::string& warning);\n+std::shared_ptr<CWallet> LoadWallet(const std::string& wallet_file, std::string& error, std::string& warning);\n+\n+\n //! Default for -keypool\n static const unsigned int DEFAULT_KEYPOOL_SIZE = 1000;\n //! -paytxfee default\n@@ -1008,6 +1012,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     //! Flush wallet (bitdb flush)\n     void Flush(bool shutdown=false);\n \n+    /** Wallet has loaded */\n+    boost::signals2::signal<void ()> NotifyLoad;\n+\n     /** Wallet is about to be unloaded */\n     boost::signals2::signal<void ()> NotifyUnload;\n "
      }
    ]
  },
  {
    "sha": "2577ab48f4fb3524f0420d10ec6c659824c63e53",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTc3YWI0OGY0ZmIzNTI0ZjA0MjBkMTBlYzZjNjU5ODI0YzYzZTUz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-07-10T00:58:49Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T14:09:34Z"
      },
      "message": "interfaces: Add dynamic wallets support",
      "tree": {
        "sha": "69f718bb352bf1e5ded482b4c48a6d86638df751",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69f718bb352bf1e5ded482b4c48a6d86638df751"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2577ab48f4fb3524f0420d10ec6c659824c63e53",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2577ab48f4fb3524f0420d10ec6c659824c63e53",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2577ab48f4fb3524f0420d10ec6c659824c63e53",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2577ab48f4fb3524f0420d10ec6c659824c63e53/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "919c5e22b0a14430d670f88cbd51915571c4af85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/919c5e22b0a14430d670f88cbd51915571c4af85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/919c5e22b0a14430d670f88cbd51915571c4af85"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 43,
      "deletions": 0
    },
    "files": [
      {
        "sha": "749c98a71ecc9b8fe4323859ca8e0e1c1e716911",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2577ab48f4fb3524f0420d10ec6c659824c63e53/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2577ab48f4fb3524f0420d10ec6c659824c63e53/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=2577ab48f4fb3524f0420d10ec6c659824c63e53",
        "patch": "@@ -226,6 +226,22 @@ class NodeImpl : public Node\n         }\n         return wallets;\n     }\n+    bool createWallet(const std::string& wallet_file, std::string& error, std::string& warning) override\n+    {\n+#ifdef ENABLE_WALLET\n+        return CreateWallet(wallet_file, 0, error, warning) != nullptr;\n+#else\n+        throw std::logic_error(\"Node::createWallet() called in non-wallet build.\");\n+#endif\n+    }\n+    bool loadWallet(const std::string& wallet_file, std::string& error, std::string& warning) override\n+    {\n+#ifdef ENABLE_WALLET\n+        return LoadWallet(wallet_file, error, warning) != nullptr;\n+#else\n+        throw std::logic_error(\"Node::loadWallet() called in non-wallet build.\");\n+#endif\n+    }\n     std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) override\n     {\n         return MakeHandler(::uiInterface.InitMessage_connect(fn));"
      },
      {
        "sha": "5a99eb9ac6d3828759b6abbc6ad3b64a9c424f82",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2577ab48f4fb3524f0420d10ec6c659824c63e53/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2577ab48f4fb3524f0420d10ec6c659824c63e53/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=2577ab48f4fb3524f0420d10ec6c659824c63e53",
        "patch": "@@ -176,6 +176,12 @@ class Node\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n \n+    //! Attempts to create a wallet from file or directory.\n+    virtual bool createWallet(const std::string& wallet_file, std::string& error, std::string& warning) = 0;\n+\n+    //! Attempts to load a wallet from file or directory.\n+    virtual bool loadWallet(const std::string& wallet_file, std::string& error, std::string& warning) = 0;\n+\n     //! Register handler for init messages.\n     using InitMessageFn = std::function<void(const std::string& message)>;\n     virtual std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) = 0;"
      },
      {
        "sha": "b4f96cc335884ecdb8735c4719765965aa1f0ff1",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2577ab48f4fb3524f0420d10ec6c659824c63e53/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2577ab48f4fb3524f0420d10ec6c659824c63e53/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=2577ab48f4fb3524f0420d10ec6c659824c63e53",
        "patch": "@@ -428,6 +428,20 @@ class WalletImpl : public Wallet\n     bool IsWalletFlagSet(uint64_t flag) override { return m_wallet.IsWalletFlagSet(flag); }\n     OutputType getDefaultAddressType() override { return m_wallet.m_default_address_type; }\n     OutputType getDefaultChangeType() override { return m_wallet.m_default_change_type; }\n+    void unload() override\n+    {\n+        RemoveWallet(m_shared_wallet);\n+        UnregisterValidationInterface(&m_wallet);\n+\n+        // The wallet can be in use so it's not possible to explicitly unload here.\n+        // Just notify the unload intent so that all shared pointers are released.\n+        // The wallet will be destroyed once the last shared pointer is released.\n+        m_wallet.NotifyUnload();\n+    }\n+    std::unique_ptr<Handler> handleLoad(LoadFn fn) override\n+    {\n+        return MakeHandler(m_wallet.NotifyLoad.connect(fn));\n+    }\n     std::unique_ptr<Handler> handleUnload(UnloadFn fn) override\n     {\n         return MakeHandler(m_wallet.NotifyUnload.connect(fn));"
      },
      {
        "sha": "5cf0d65c6dd7dde0bad3056b08b411320cd2fa6a",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2577ab48f4fb3524f0420d10ec6c659824c63e53/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2577ab48f4fb3524f0420d10ec6c659824c63e53/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=2577ab48f4fb3524f0420d10ec6c659824c63e53",
        "patch": "@@ -245,6 +245,13 @@ class Wallet\n     // Get default change type.\n     virtual OutputType getDefaultChangeType() = 0;\n \n+    // Request wallet unload.\n+    virtual void unload() = 0;\n+\n+    //! Register handler for load message.\n+    using LoadFn = std::function<void()>;\n+    virtual std::unique_ptr<Handler> handleLoad(LoadFn fn) = 0;\n+\n     //! Register handler for unload message.\n     using UnloadFn = std::function<void()>;\n     virtual std::unique_ptr<Handler> handleUnload(UnloadFn fn) = 0;"
      }
    ]
  },
  {
    "sha": "1bb5612db8bd08dc7beff948d4a53fa5c2398292",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmI1NjEyZGI4YmQwOGRjN2JlZmY5NDhkNGE1M2ZhNWMyMzk4Mjky",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-07-10T01:08:33Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T14:09:34Z"
      },
      "message": "gui: Add dynamic wallets support",
      "tree": {
        "sha": "605d5351623868d98f5bce95b302b5b0ee46d560",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/605d5351623868d98f5bce95b302b5b0ee46d560"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bb5612db8bd08dc7beff948d4a53fa5c2398292",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bb5612db8bd08dc7beff948d4a53fa5c2398292",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1bb5612db8bd08dc7beff948d4a53fa5c2398292",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bb5612db8bd08dc7beff948d4a53fa5c2398292/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2577ab48f4fb3524f0420d10ec6c659824c63e53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2577ab48f4fb3524f0420d10ec6c659824c63e53",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2577ab48f4fb3524f0420d10ec6c659824c63e53"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 89,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1cc315f7c9d63f85f83c33c7cc84ccdc0a7176a5",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 72,
        "deletions": 1,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bb5612db8bd08dc7beff948d4a53fa5c2398292/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bb5612db8bd08dc7beff948d4a53fa5c2398292/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=1bb5612db8bd08dc7beff948d4a53fa5c2398292",
        "patch": "@@ -42,7 +42,9 @@\n #include <QComboBox>\n #include <QDateTime>\n #include <QDesktopWidget>\n+#include <QDir>\n #include <QDragEnterEvent>\n+#include <QFileDialog>\n #include <QListWidget>\n #include <QMenuBar>\n #include <QMessageBox>\n@@ -330,6 +332,15 @@ void BitcoinGUI::createActions()\n     openAction = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &URI...\"), this);\n     openAction->setStatusTip(tr(\"Open a bitcoin: URI or payment request\"));\n \n+    m_new_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"New &Wallet...\"), this);\n+    m_new_wallet_action->setStatusTip(tr(\"Create a wallet\"));\n+\n+    m_open_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &Wallet...\"), this);\n+    m_open_wallet_action->setStatusTip(tr(\"Open a wallet\"));\n+\n+    m_close_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Close Wallet...\"), this);\n+    m_close_wallet_action->setStatusTip(tr(\"Close wallet...\"));\n+\n     showHelpMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n     showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(tr(PACKAGE_NAME)));\n@@ -355,6 +366,9 @@ void BitcoinGUI::createActions()\n         connect(usedSendingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedSendingAddresses);\n         connect(usedReceivingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedReceivingAddresses);\n         connect(openAction, &QAction::triggered, this, &BitcoinGUI::openClicked);\n+        connect(m_new_wallet_action, &QAction::triggered, this, &BitcoinGUI::newWallet);\n+        connect(m_open_wallet_action, &QAction::triggered, this, &BitcoinGUI::openWallet);\n+        connect(m_close_wallet_action, &QAction::triggered, this, &BitcoinGUI::closeWallet);\n     }\n #endif // ENABLE_WALLET\n \n@@ -376,6 +390,9 @@ void BitcoinGUI::createMenuBar()\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n     if(walletFrame)\n     {\n+        file->addAction(m_new_wallet_action);\n+        file->addAction(m_open_wallet_action);\n+        file->addAction(m_close_wallet_action);\n         file->addAction(openAction);\n         file->addAction(backupWalletAction);\n         file->addAction(signMessageAction);\n@@ -524,7 +541,12 @@ bool BitcoinGUI::addWallet(WalletModel *walletModel)\n         m_wallet_selector_action->setVisible(true);\n     }\n     rpcConsole->addWallet(walletModel);\n-    return walletFrame->addWallet(walletModel);\n+    bool res = walletFrame->addWallet(walletModel);\n+    if (res) {\n+        m_wallet_selector->setCurrentIndex(m_wallet_selector->count() - 1);\n+        setCurrentWalletBySelectorIndex(m_wallet_selector->count() - 1);\n+    }\n+    return res;\n }\n \n bool BitcoinGUI::removeWallet(WalletModel* walletModel)\n@@ -567,6 +589,7 @@ void BitcoinGUI::removeAllWallets()\n \n void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n {\n+    m_close_wallet_action->setEnabled(enabled);\n     overviewAction->setEnabled(enabled);\n     sendCoinsAction->setEnabled(enabled);\n     sendCoinsMenuAction->setEnabled(enabled);\n@@ -688,6 +711,54 @@ void BitcoinGUI::openClicked()\n     }\n }\n \n+void BitcoinGUI::newWallet()\n+{\n+    QString file_name = QFileDialog::getSaveFileName(this, tr(\"New Wallet\"));\n+    if (file_name.isEmpty()) return;\n+\n+    std::string error, warning;\n+    if (!m_node.createWallet(QDir::toNativeSeparators(file_name).toStdString(), error, warning)) {\n+        QMessageBox::information(this, tr(\"New Wallet\"), QString::fromStdString(error));\n+        return;\n+    }\n+    if (!warning.empty()) {\n+        QMessageBox::information(this, tr(\"New Wallet\"), QString::fromStdString(warning));\n+    }\n+}\n+\n+void BitcoinGUI::openWallet()\n+{\n+    QString file_name = QFileDialog::getExistingDirectory(this, tr(\"Open Wallet\"), QString(), QFileDialog::DontResolveSymlinks);\n+    if (file_name.isEmpty()) return;\n+\n+    std::string error, warning;\n+    if (!m_node.loadWallet(QDir::toNativeSeparators(file_name).toStdString(), error, warning)) {\n+        QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(error));\n+        return;\n+    }\n+    if (!warning.empty()) {\n+        QMessageBox::information(this, tr(\"Open Wallet\"), QString::fromStdString(warning));\n+    }\n+}\n+\n+void BitcoinGUI::closeWallet()\n+{\n+    if (!walletFrame) return;\n+\n+    WalletView * const wallet_view = walletFrame->currentWalletView();\n+    if (!wallet_view) return;\n+\n+    WalletModel * const wallet_model = wallet_view->getWalletModel();\n+    QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Close wallet\"),\n+             tr(\"Are you sure you wish to close wallet %1?\").arg(wallet_model->getDisplayName()),\n+             QMessageBox::Yes|QMessageBox::Cancel,\n+             QMessageBox::Cancel);\n+\n+    if (retval != QMessageBox::Yes) return;\n+\n+    wallet_model->requestUnload();\n+}\n+\n void BitcoinGUI::gotoOverviewPage()\n {\n     overviewAction->setChecked(true);"
      },
      {
        "sha": "07f92f9140ec6b40d22323133317a9897058048c",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bb5612db8bd08dc7beff948d4a53fa5c2398292/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bb5612db8bd08dc7beff948d4a53fa5c2398292/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=1bb5612db8bd08dc7beff948d4a53fa5c2398292",
        "patch": "@@ -130,6 +130,9 @@ class BitcoinGUI : public QMainWindow\n     QAction* openRPCConsoleAction = nullptr;\n     QAction* openAction = nullptr;\n     QAction* showHelpMessageAction = nullptr;\n+    QAction* m_new_wallet_action = nullptr;\n+    QAction* m_open_wallet_action = nullptr;\n+    QAction* m_close_wallet_action = nullptr;\n     QAction* m_wallet_selector_label_action = nullptr;\n     QAction* m_wallet_selector_action = nullptr;\n \n@@ -246,6 +249,12 @@ public Q_SLOTS:\n \n     /** Show open dialog */\n     void openClicked();\n+    /** New wallet dialog */\n+    void newWallet();\n+    /** Show open wallet dialog */\n+    void openWallet();\n+    /** Close current wallet */\n+    void closeWallet();\n #endif // ENABLE_WALLET\n     /** Show configuration dialog */\n     void optionsClicked();"
      },
      {
        "sha": "026c4237a54d247513def0f665cb7d6f850d0abf",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bb5612db8bd08dc7beff948d4a53fa5c2398292/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bb5612db8bd08dc7beff948d4a53fa5c2398292/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=1bb5612db8bd08dc7beff948d4a53fa5c2398292",
        "patch": "@@ -303,6 +303,11 @@ AddressTableModel *WalletModel::getAddressTableModel()\n     return addressTableModel;\n }\n \n+void WalletModel::requestUnload()\n+{\n+    m_wallet->unload();\n+}\n+\n TransactionTableModel *WalletModel::getTransactionTableModel()\n {\n     return transactionTableModel;"
      },
      {
        "sha": "cca79ddd6007e96b616ca4de98449fa8ebc91582",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bb5612db8bd08dc7beff948d4a53fa5c2398292/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bb5612db8bd08dc7beff948d4a53fa5c2398292/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=1bb5612db8bd08dc7beff948d4a53fa5c2398292",
        "patch": "@@ -208,6 +208,9 @@ class WalletModel : public QObject\n     bool isMultiwallet();\n \n     AddressTableModel* getAddressTableModel() const { return addressTableModel; }\n+\n+    void requestUnload();\n+\n private:\n     std::unique_ptr<interfaces::Wallet> m_wallet;\n     std::unique_ptr<interfaces::Handler> m_handler_unload;"
      }
    ]
  },
  {
    "sha": "a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2E4YmU4ZDFmZDYyNGY1ODNmZTQ4MGRmNzkyMjhmOWVhMmNkYWYz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T22:13:23Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-09-21T22:13:23Z"
      },
      "message": "wip: Some fixups",
      "tree": {
        "sha": "882e92c292dc50b6779ec8140760574865038ef5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/882e92c292dc50b6779ec8140760574865038ef5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1bb5612db8bd08dc7beff948d4a53fa5c2398292",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bb5612db8bd08dc7beff948d4a53fa5c2398292",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1bb5612db8bd08dc7beff948d4a53fa5c2398292"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 28,
      "deletions": 18
    },
    "files": [
      {
        "sha": "8211b63abeef41a479e832a7c40d96df00420971",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
        "patch": "@@ -39,6 +39,16 @@ std::vector<std::shared_ptr<CWallet>> GetWallets()\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }\n \n+std::shared_ptr<CWallet> CreateWallet(const std::string& /* wallet_file */, uint64_t /* wallet_creation_flags */, std::string& error, std::string& /* warning */)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n+std::shared_ptr<CWallet> LoadWallet(const std::string& /* wallet_file */, std::string& /* error */, std::string& /* warning */)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n namespace interfaces {\n \n class Wallet;"
      },
      {
        "sha": "4fd7a9fc7ecb9e8daaa52fccd92937891f0f5483",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
        "patch": "@@ -38,7 +38,10 @@\n #include <univalue.h>\n \n class CWallet;\n+std::string GetWalletDir();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n+std::shared_ptr<CWallet> CreateWallet(const std::string& wallet_file, uint64_t wallet_creation_flags, std::string& error, std::string& warning);\n+std::shared_ptr<CWallet> LoadWallet(const std::string& wallet_file, std::string& error, std::string& warning);\n \n namespace interfaces {\n \n@@ -218,6 +221,10 @@ class NodeImpl : public Node\n         LOCK(::cs_main);\n         return ::pcoinsTip->GetCoin(output, coin);\n     }\n+    std::string getWalletDir() override\n+    {\n+        return GetWalletDir();\n+    }\n     std::vector<std::unique_ptr<Wallet>> getWallets() override\n     {\n         std::vector<std::unique_ptr<Wallet>> wallets;\n@@ -228,19 +235,11 @@ class NodeImpl : public Node\n     }\n     bool createWallet(const std::string& wallet_file, std::string& error, std::string& warning) override\n     {\n-#ifdef ENABLE_WALLET\n         return CreateWallet(wallet_file, 0, error, warning) != nullptr;\n-#else\n-        throw std::logic_error(\"Node::createWallet() called in non-wallet build.\");\n-#endif\n     }\n     bool loadWallet(const std::string& wallet_file, std::string& error, std::string& warning) override\n     {\n-#ifdef ENABLE_WALLET\n         return LoadWallet(wallet_file, error, warning) != nullptr;\n-#else\n-        throw std::logic_error(\"Node::loadWallet() called in non-wallet build.\");\n-#endif\n     }\n     std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) override\n     {"
      },
      {
        "sha": "4df2f4115d6367c3ff22e77dbaba51bc7eb68069",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
        "patch": "@@ -173,6 +173,9 @@ class Node\n     //! Get unspent outputs associated with a transaction.\n     virtual bool getUnspentOutput(const COutPoint& output, Coin& coin) = 0;\n \n+    //! Return default wallet directory.\n+    virtual std::string getWalletDir() = 0;\n+\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n "
      },
      {
        "sha": "1bbb050e5c33052a12e3cbff66996bf0832f694e",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
        "patch": "@@ -332,14 +332,14 @@ void BitcoinGUI::createActions()\n     openAction = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &URI...\"), this);\n     openAction->setStatusTip(tr(\"Open a bitcoin: URI or payment request\"));\n \n-    m_new_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"New &Wallet...\"), this);\n+    m_new_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"New &Wallet\"), this);\n     m_new_wallet_action->setStatusTip(tr(\"Create a wallet\"));\n \n-    m_open_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &Wallet...\"), this);\n+    m_open_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &Wallet\"), this);\n     m_open_wallet_action->setStatusTip(tr(\"Open a wallet\"));\n \n-    m_close_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Close Wallet...\"), this);\n-    m_close_wallet_action->setStatusTip(tr(\"Close wallet...\"));\n+    m_close_wallet_action = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Close Wallet\"), this);\n+    m_close_wallet_action->setStatusTip(tr(\"Close wallet\"));\n \n     showHelpMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n@@ -393,6 +393,7 @@ void BitcoinGUI::createMenuBar()\n         file->addAction(m_new_wallet_action);\n         file->addAction(m_open_wallet_action);\n         file->addAction(m_close_wallet_action);\n+        file->addSeparator();\n         file->addAction(openAction);\n         file->addAction(backupWalletAction);\n         file->addAction(signMessageAction);\n@@ -713,7 +714,7 @@ void BitcoinGUI::openClicked()\n \n void BitcoinGUI::newWallet()\n {\n-    QString file_name = QFileDialog::getSaveFileName(this, tr(\"New Wallet\"));\n+    QString file_name = QFileDialog::getSaveFileName(this, tr(\"New Wallet\"), QString::fromStdString(m_node.getWalletDir()));\n     if (file_name.isEmpty()) return;\n \n     std::string error, warning;\n@@ -728,7 +729,7 @@ void BitcoinGUI::newWallet()\n \n void BitcoinGUI::openWallet()\n {\n-    QString file_name = QFileDialog::getExistingDirectory(this, tr(\"Open Wallet\"), QString(), QFileDialog::DontResolveSymlinks);\n+    QString file_name = QFileDialog::getOpenFileName(this, tr(\"Open Wallet\"), QString::fromStdString(m_node.getWalletDir()), QString(), nullptr, QFileDialog::DontResolveSymlinks);\n     if (file_name.isEmpty()) return;\n \n     std::string error, warning;"
      },
      {
        "sha": "d046ad6f0a3ed6f08230e36a4bf39ecb9273cb35",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7a8be8d1fd624f583fe480df79228f9ea2cdaf3/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a7a8be8d1fd624f583fe480df79228f9ea2cdaf3",
        "patch": "@@ -85,10 +85,7 @@ static void GetWalletNameAndPath(const std::string& wallet_file, std::string& wa\n     wallet_path = fs::absolute(wallet_file, GetWalletDir());\n     fs::path name;\n     fs::path parent = wallet_path;\n-    while (!parent.empty()) {\n-        if (parent == GetWalletDir()) {\n-            break;\n-        }\n+    while (!parent.empty() && parent != GetWalletDir()) {\n         name = parent.filename() / name;\n         parent = parent.parent_path();\n     }"
      }
    ]
  }
]