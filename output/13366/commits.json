[
  {
    "sha": "989c8990bb765eef45c8ee471f084ca81a0bead4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODljODk5MGJiNzY1ZWVmNDVjOGVlNDcxZjA4NGNhODFhMGJlYWQ0",
    "commit": {
      "author": {
        "name": "Giulio Lombardo",
        "email": "giulio.lombardo@gmail.com",
        "date": "2018-06-04T10:54:22Z"
      },
      "committer": {
        "name": "Giulio Lombardo",
        "email": "giulio.lombardo@gmail.com",
        "date": "2018-06-04T11:04:04Z"
      },
      "message": "Rename \u201cOS X\u201d to the newer \u201cmacOS\u201d convention",
      "tree": {
        "sha": "d5f187eca0caf6dbb79d8f3a570ba60e3ce080d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5f187eca0caf6dbb79d8f3a570ba60e3ce080d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/989c8990bb765eef45c8ee471f084ca81a0bead4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/989c8990bb765eef45c8ee471f084ca81a0bead4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/989c8990bb765eef45c8ee471f084ca81a0bead4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/989c8990bb765eef45c8ee471f084ca81a0bead4/comments",
    "author": {
      "login": "giulio92",
      "id": 15996263,
      "node_id": "MDQ6VXNlcjE1OTk2MjYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15996263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giulio92",
      "html_url": "https://github.com/giulio92",
      "followers_url": "https://api.github.com/users/giulio92/followers",
      "following_url": "https://api.github.com/users/giulio92/following{/other_user}",
      "gists_url": "https://api.github.com/users/giulio92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giulio92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giulio92/subscriptions",
      "organizations_url": "https://api.github.com/users/giulio92/orgs",
      "repos_url": "https://api.github.com/users/giulio92/repos",
      "events_url": "https://api.github.com/users/giulio92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giulio92/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "giulio92",
      "id": 15996263,
      "node_id": "MDQ6VXNlcjE1OTk2MjYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15996263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giulio92",
      "html_url": "https://github.com/giulio92",
      "followers_url": "https://api.github.com/users/giulio92/followers",
      "following_url": "https://api.github.com/users/giulio92/following{/other_user}",
      "gists_url": "https://api.github.com/users/giulio92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giulio92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giulio92/subscriptions",
      "organizations_url": "https://api.github.com/users/giulio92/orgs",
      "repos_url": "https://api.github.com/users/giulio92/repos",
      "events_url": "https://api.github.com/users/giulio92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giulio92/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0de7cc848e07d942e09bb3bb60189985e53d2bb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0de7cc848e07d942e09bb3bb60189985e53d2bb5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0de7cc848e07d942e09bb3bb60189985e53d2bb5"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 34,
      "deletions": 34
    },
    "files": [
      {
        "sha": "4e830109c21dc2f1d25a01c95ce19a228a1cb772",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -52,7 +52,7 @@ There are also [regression and integration tests](/test), written\n in Python, that are run automatically on the build server.\n These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n \n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n+The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\n \n ### Manual Quality Assurance (QA) Testing\n "
      },
      {
        "sha": "8d3e57c5268cfc6af2f5ec11b7342cffaf61abec",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -5,7 +5,7 @@ Upstart: bitcoind.conf\n OpenRC:  bitcoind.openrc\n          bitcoind.openrcconf\n CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n+macOS:    org.bitcoin.bitcoind.plist\n ```\n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "482b94a64f752a90a180a1f6d1f5846111bfc86c",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -22,7 +22,7 @@ Common `host-platform-triplets` for cross compilation are:\n \n - `i686-w64-mingw32` for Win32\n - `x86_64-w64-mingw32` for Win64\n-- `x86_64-apple-darwin11` for MacOSX\n+- `x86_64-apple-darwin11` for macOS\n - `arm-linux-gnueabihf` for Linux ARM 32 bit\n - `aarch64-linux-gnu` for Linux ARM 64 bit\n \n@@ -49,7 +49,7 @@ The following can be set when running make: make FOO=bar\n \n     SOURCES_PATH: downloaded sources will be placed here\n     BASE_CACHE: built packages will be placed here\n-    SDK_PATH: Path where sdk's can be found (used by OSX)\n+    SDK_PATH: Path where sdk's can be found (used by macOS)\n     FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n     NO_QT: Don't download/build/cache qt and its dependencies\n     NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n@@ -64,7 +64,7 @@ options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n Additional targets:\n \n     download: run 'make download' to fetch all sources without building them\n-    download-osx: run 'make download-osx' to fetch all sources needed for osx builds\n+    download-osx: run 'make download-osx' to fetch all sources needed for macOS builds\n     download-win: run 'make download-win' to fetch all sources needed for win builds\n     download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n "
      },
      {
        "sha": "9fc7093be4f35f7048580e7bc8ba19cc294bff95",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -7,7 +7,7 @@ In theory, binaries for any target OS/architecture can be created, from a\n builder running any OS/architecture. In practice, build-side tools must be\n specified when the defaults don't fit, and packages must be amended to work\n on new hosts. For now, a build architecture of x86_64 is assumed, either on\n-Linux or OSX.\n+Linux or macOS.\n \n ### No reliance on timestamps\n "
      },
      {
        "sha": "45762b2374d076de2b4618561a0ce9df5775b8f4",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -22,7 +22,7 @@ Unpack the files into a directory and run:\n \n Unpack the files into a directory, and then run bitcoin-qt.exe.\n \n-### OS X\n+### macOS\n \n Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n \n@@ -38,7 +38,7 @@ Building\n The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n - [Dependencies](dependencies.md)\n-- [OS X Build Notes](build-osx.md)\n+- [macOS Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n - [Windows Build Notes](build-windows.md)\n - [OpenBSD Build Notes](build-openbsd.md)"
      },
      {
        "sha": "739e22d6341cd30bb9e28b396cf4438bc5feb5b9",
        "filename": "doc/README_osx.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -1,12 +1,12 @@\n-Deterministic OS X DMG Notes.\n+Deterministic macOS DMG Notes.\n \n-Working OS X DMGs are created in Linux by combining a recent clang,\n+Working macOS DMGs are created in Linux by combining a recent clang,\n the Apple binutils (ld, ar, etc) and DMG authoring tools.\n \n Apple uses clang extensively for development and has upstreamed the necessary\n functionality so that a vanilla clang can take advantage. It supports the use\n of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n-when building for OS X.\n+when building for macOS.\n \n Apple's version of binutils (called cctools) contains lots of functionality\n missing in the FSF's binutils. In addition to extra linker options for\n@@ -38,7 +38,7 @@ Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.1\n Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n To create a tarball suitable for Gitian input, there are two options:\n \n-Using Mac OS X, you can mount the dmg, and then create it with:\n+Using macOS, you can mount the dmg, and then create it with:\n ```\n   $ hdiutil attach Xcode_7.3.1.dmg\n   $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.11.sdk.tar.gz MacOSX10.11.sdk\n@@ -81,7 +81,7 @@ Background images and other features can be added to DMG files by inserting a\n .DS_Store before creation. This is generated by the script\n contrib/macdeploy/custom_dsstore.py.\n \n-As of OS X Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n+As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a\n requirement in order to satisfy the new Gatekeeper requirements. Because this\n private key cannot be shared, we'll have to be a bit creative in order for the\n build process to remain somewhat deterministic. Here's how it works:"
      },
      {
        "sha": "abd305cf9ab512614e0db62893a55d04f967653c",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -1,11 +1,11 @@\n-Mac OS X Build Instructions and Notes\n+macOS Build Instructions and Notes\n ====================================\n The commands in this guide should be executed in a Terminal application.\n The built-in one is located in `/Applications/Utilities/Terminal.app`.\n \n Preparation\n -----------\n-Install the OS X command line tools:\n+Install the macOS command line tools:\n \n `xcode-select --install`\n \n@@ -93,6 +93,6 @@ Other commands:\n Notes\n -----\n \n-* Tested on OS X 10.8 through 10.13 on 64-bit Intel processors only.\n+* Tested on OS X 10.8 Mountain Lion through macOS 10.13 High Sierra on 64-bit Intel processors only.\n \n * Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)"
      },
      {
        "sha": "d04f7d186a362fcb28f818ad524e2a15d9c2722b",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -15,7 +15,7 @@ Service User\n \n All three Linux startup configurations assume the existence of a \"bitcoin\" user\n and group.  They must be created before attempting to use these scripts.\n-The OS X configuration assumes bitcoind will be set up for the current user.\n+The macOS configuration assumes bitcoind will be set up for the current user.\n \n Configuration\n ---------------------------------\n@@ -65,7 +65,7 @@ reasons to make the configuration file and data directory only readable by the\n bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n can then be controlled by group membership.\n \n-### Mac OS X\n+### macOS\n \n Binary:              `/usr/local/bin/bitcoind`  \n Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n@@ -111,7 +111,7 @@ Using this script, you can adjust the path and flags to the bitcoind program by\n setting the BITCOIND and FLAGS environment variables in the file\n /etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n \n-### Mac OS X\n+### macOS\n \n Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`."
      },
      {
        "sha": "912b62079461cff541b34e1ff75acb4e9a080883",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -89,7 +89,7 @@ Ensure gitian-builder is up-to-date:\n     wget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n     popd\n \n-Create the OS X SDK tarball, see the [OS X readme](README_osx.md) for details, and copy it into the inputs directory.\n+Create the macOS SDK tarball, see the [macOS readme](README_osx.md) for details, and copy it into the inputs directory.\n \n ### Optional: Seed the Gitian sources cache and offline git repositories\n \n@@ -111,7 +111,7 @@ NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from\n \n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n-### Build and sign Bitcoin Core for Linux, Windows, and OS X:\n+### Build and sign Bitcoin Core for Linux, Windows, and macOS:\n \n     pushd ./gitian-builder\n     ./bin/gbuild --num-make 2 --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n@@ -134,7 +134,7 @@ Build output expected:\n   1. source tarball (`bitcoin-${VERSION}.tar.gz`)\n   2. linux 32-bit and 64-bit dist tarballs (`bitcoin-${VERSION}-linux[32|64].tar.gz`)\n   3. windows 32-bit and 64-bit unsigned installers and dist zips (`bitcoin-${VERSION}-win[32|64]-setup-unsigned.exe`, `bitcoin-${VERSION}-win[32|64].zip`)\n-  4. OS X unsigned installer and dist tarball (`bitcoin-${VERSION}-osx-unsigned.dmg`, `bitcoin-${VERSION}-osx64.tar.gz`)\n+  4. macOS unsigned installer and dist tarball (`bitcoin-${VERSION}-osx-unsigned.dmg`, `bitcoin-${VERSION}-osx64.tar.gz`)\n   5. Gitian signatures (in `gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/`)\n \n ### Verify other gitian builders signatures to your own. (Optional)\n@@ -161,13 +161,13 @@ Commit your signature to gitian.sigs:\n     git push  # Assuming you can push to the gitian.sigs tree\n     popd\n \n-Codesigner only: Create Windows/OS X detached signatures:\n+Codesigner only: Create Windows/macOS detached signatures:\n - Only one person handles codesigning. Everyone else should skip to the next step.\n-- Only once the Windows/OS X builds each have 3 matching signatures may they be signed with their respective release keys.\n+- Only once the Windows/macOS builds each have 3 matching signatures may they be signed with their respective release keys.\n \n-Codesigner only: Sign the osx binary:\n+Codesigner only: Sign the macOS binary:\n \n-    transfer bitcoin-osx-unsigned.tar.gz to osx for signing\n+    transfer bitcoin-osx-unsigned.tar.gz to macOS for signing\n     tar xf bitcoin-osx-unsigned.tar.gz\n     ./detached-sig-create.sh -s \"Key ID\"\n     Enter the keychain password and authorize the signature\n@@ -192,12 +192,12 @@ Codesigner only: Commit the detached codesign payloads:\n     git tag -s v${VERSION} HEAD\n     git push the current branch and new tag\n \n-Non-codesigners: wait for Windows/OS X detached signatures:\n+Non-codesigners: wait for Windows/macOS detached signatures:\n \n-- Once the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n+- Once the Windows/macOS builds each have 3 matching signatures, they will be signed with their respective release keys.\n - Detached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin-core/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n-Create (and optionally verify) the signed OS X binary:\n+Create (and optionally verify) the signed macOS binary:\n \n     pushd ./gitian-builder\n     ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n@@ -216,7 +216,7 @@ Create (and optionally verify) the signed Windows binaries:\n     mv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n     popd\n \n-Commit your signature for the signed OS X/Windows binaries:\n+Commit your signature for the signed macOS/Windows binaries:\n \n     pushd gitian.sigs\n     git add ${VERSION}-osx-signed/\"${SIGNER}\""
      },
      {
        "sha": "bf8139666c6c636635f5ca5fe8f73b30ce4eaad7",
        "filename": "src/qt/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989c8990bb765eef45c8ee471f084ca81a0bead4/src/qt/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989c8990bb765eef45c8ee471f084ca81a0bead4/src/qt/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/README.md?ref=989c8990bb765eef45c8ee471f084ca81a0bead4",
        "patch": "@@ -4,7 +4,7 @@ The current precise version for Qt 5 is specified in [qt.mk](/depends/packages/q\n \n ## Compile and run\n \n-See build instructions ([OSX](/doc/build-osx.md), [Windows](/doc/build-windows.md), [Unix](/doc/build-unix.md), etc).\n+See build instructions ([macOS](/doc/build-osx.md), [Windows](/doc/build-windows.md), [Unix](/doc/build-unix.md), etc).\n \n To run:\n \n@@ -65,7 +65,7 @@ Represents the view to a single wallet.\n * `guiconstants.h`: UI colors, app name, etc\n * `guiutil.h`: several helper functions\n * `macdockiconhandler.(h/cpp)`\n-* `macdockiconhandler.(h/cpp)`: display notifications in OSX\n+* `macdockiconhandler.(h/cpp)`: display notifications in macOS\n \n ## Contribute\n \n@@ -81,9 +81,9 @@ the UI layout.\n Download and install the community edition of [Qt Creator](https://www.qt.io/download/).\n Uncheck everything except Qt Creator during the installation process.\n \n-Instructions for OSX:\n+Instructions for macOS:\n \n-1. Make sure you installed everything through Homebrew mentioned in the [OSX build instructions](/doc/build-osx.md)\n+1. Make sure you installed everything through Homebrew mentioned in the [macOS build instructions](/doc/build-osx.md)\n 2. Use `./configure` with the `--enable-debug` flag\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n 4. Enter \"bitcoin-qt\" as project name, enter src/qt as location"
      }
    ]
  }
]