sipa,2017-02-10T01:30:27Z,"Alternative: don't allow specifying the window size, and include the output in `getblockchaininfo`.",https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-278831755,278831755,
paveljanik,2017-02-10T07:26:33Z,"I prefer having it separate from `getblockchaininfo` because it brings more flexibility - ability to query past data etc. On the other hand, adding current txrate and txcount to `getblockchaininfo`: why not :-)",https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-278876078,278876078,
laanwj,2017-02-10T08:44:51Z,"Concept ACK. Though I wonder if this shouldn't be an external script, if it's only used for computing some statistics before releases.\n\n> On the other hand, adding current txrate and txcount to getblockchaininfo: why not :-)\n\nWell we shouldn't add anything that is non-trivial to compute to `getblockchaininfo`. I think restricting that call to return state information that is up-to-date and",https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-278888576,278888576,
sipa,2017-04-05T09:32:45Z,"> Though I wonder if this shouldn't be an external script, if it's only used for computing some statistics before releases.\n\nI don't think it's unreasonable to have a built-in function to compute the transaction rate.",https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-291806864,291806864,
jnewbery,2017-04-05T20:06:44Z,"> I don't think it's unreasonable to have a built-in function to compute the transaction rate.\n\nWhat's the use case for this, other than computing the chainTxData constants? ",https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-291981292,291981292,
sipa,2017-04-06T08:03:36Z,"> What's the use case for this, other than computing the chainTxData constants?\n\nNot really a use case, except that's it's generally useful information that someone may be interested in.",https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-292099435,292099435,
jtimon,2017-04-24T19:29:17Z,"utACK 53d4292763b2896c50d1e9f3140796f563dcd350\nAlthough for plotting things an interface like initialBlockHeight, endBlockHeight feel more natural than the distance and the hash of the block. It seems there's no functionality loss since the block hash cannot be used to select a chain that is not part of the active chain anyway.\n",https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-296797626,296797626,
laanwj,2017-05-02T16:56:01Z,Can be merged if the small nits by @TheBlueMatt and @paveljanik are fixed,https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-298695010,298695010,
sipa,2017-05-03T04:27:42Z,@laanwj Done.,https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-298820863,298820863,
laanwj,2017-05-03T06:17:23Z,Merged via d4732f3,https://github.com/bitcoin/bitcoin/pull/9733#issuecomment-298830977,298830977,
paveljanik,2017-02-10T07:09:28Z,getchaintxstats vs gettxratestats,https://github.com/bitcoin/bitcoin/pull/9733#discussion_r100481090,100481090,src/rpc/blockchain.cpp
TheBlueMatt,2017-04-17T21:14:30Z,nit: const CBlockIndex,https://github.com/bitcoin/bitcoin/pull/9733#discussion_r111823409,111823409,src/rpc/blockchain.cpp
laanwj,2017-05-03T05:58:31Z,"looks like travis complains now: the `using namespace` was removed, so this should be `std::runtime_error`, will fix this up before merging",https://github.com/bitcoin/bitcoin/pull/9733#discussion_r114476190,114476190,src/rpc/blockchain.cpp
