[
  {
    "sha": "6fdfeebcc79df62c8bf1cf4b6e9e97d6aefb3eb3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmRmZWViY2M3OWRmNjJjOGJmMWNmNGI2ZTllOTdkNmFlZmIzZWIz",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-28T06:54:17Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-28T07:00:24Z"
      },
      "message": "refactor: Replace RecursiveMutex with Mutex in rpc/server.cpp",
      "tree": {
        "sha": "e7821349edb5824ea2e2d8a8efd254706b90bb95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7821349edb5824ea2e2d8a8efd254706b90bb95"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fdfeebcc79df62c8bf1cf4b6e9e97d6aefb3eb3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl74QAgACgkQQQEIES5+\nqB8/vhAAnXSvwLbffiVvZQawNjcEDqFxWAgFSuQ3NkuqaH/FapQ/7iUEhrIUvIFd\nzSQkBPV2BM587wwbdsEe6zb+uPSyuuwLniqcBOSrlDI6QUanrvQYWTaporEZCX36\np5TS8850I04pJnm3p8LuTIsSBQe5COvzcZLoZW1hcHaY8ZxK7QQj8LvogfzO0wHF\nuIbtrtySwhNVj9zdvtP5wbBA+Keb6oidJrorr6R7cusHr+S/ixy0J6qW3a+L0Uk/\nq4MbdeAmbkTQs1aIut7I74Enow6cfLFpzDBiEAgijgPNsMbeX7k3seqP/uxx38z0\nHTmdlAwbtN8H9yC2FatcIsEaKJsolRerKQRA/buJtOVAstsfq6DCg8QsnB2tvrWI\nzQhW2Vkjz7FrmpAtFgIMGUfM8jgDztQVJo2Nnqz8kcu40FC7Ikf9H5onA45mxdhW\ncQRgor8FCYYmRV/+AcqFg0B4Uc6stDnPVD+/Lm+BEHoQ/etYqGTiXdDpR0lGvf88\nenSqpteljxilBK1eQFpjBuBydmwSsLZJPqmfRic5aPajny297sIBGKbpp0XIQR1A\nnJK/EoO4EpanlgD/vAY7/pNpj7i3mfWhH/Ip4wmVMKKk3Y/Q4kMbDQx//Lm1NBi3\nTQ7rCfzSAgIluWX43l7W96uFqZXLyxb/puAVSStzyjSy/pLCSeA=\n=wV1c\n-----END PGP SIGNATURE-----",
        "payload": "tree e7821349edb5824ea2e2d8a8efd254706b90bb95\nparent d06cf34656f1c9e2919fd22c5bbc95b2b9fefebd\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1593327257 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1593327624 +0300\n\nrefactor: Replace RecursiveMutex with Mutex in rpc/server.cpp\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fdfeebcc79df62c8bf1cf4b6e9e97d6aefb3eb3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6fdfeebcc79df62c8bf1cf4b6e9e97d6aefb3eb3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fdfeebcc79df62c8bf1cf4b6e9e97d6aefb3eb3/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d06cf34656f1c9e2919fd22c5bbc95b2b9fefebd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d06cf34656f1c9e2919fd22c5bbc95b2b9fefebd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d06cf34656f1c9e2919fd22c5bbc95b2b9fefebd"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "de8791a935cdfa45cbd2892f22b8975f2e226b5e",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fdfeebcc79df62c8bf1cf4b6e9e97d6aefb3eb3/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fdfeebcc79df62c8bf1cf4b6e9e97d6aefb3eb3/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=6fdfeebcc79df62c8bf1cf4b6e9e97d6aefb3eb3",
        "patch": "@@ -20,10 +20,10 @@\n #include <mutex>\n #include <unordered_map>\n \n-static RecursiveMutex cs_rpcWarmup;\n+static Mutex g_rpc_warmup_mutex;\n static std::atomic<bool> g_rpc_running{false};\n-static bool fRPCInWarmup GUARDED_BY(cs_rpcWarmup) = true;\n-static std::string rpcWarmupStatus GUARDED_BY(cs_rpcWarmup) = \"RPC server started\";\n+static bool fRPCInWarmup GUARDED_BY(g_rpc_warmup_mutex) = true;\n+static std::string rpcWarmupStatus GUARDED_BY(g_rpc_warmup_mutex) = \"RPC server started\";\n /* Timer-creating functions */\n static RPCTimerInterface* timerInterface = nullptr;\n /* Map of name to timer. */\n@@ -327,20 +327,20 @@ void RpcInterruptionPoint()\n \n void SetRPCWarmupStatus(const std::string& newStatus)\n {\n-    LOCK(cs_rpcWarmup);\n+    LOCK(g_rpc_warmup_mutex);\n     rpcWarmupStatus = newStatus;\n }\n \n void SetRPCWarmupFinished()\n {\n-    LOCK(cs_rpcWarmup);\n+    LOCK(g_rpc_warmup_mutex);\n     assert(fRPCInWarmup);\n     fRPCInWarmup = false;\n }\n \n bool RPCIsInWarmup(std::string *outStatus)\n {\n-    LOCK(cs_rpcWarmup);\n+    LOCK(g_rpc_warmup_mutex);\n     if (outStatus)\n         *outStatus = rpcWarmupStatus;\n     return fRPCInWarmup;\n@@ -439,7 +439,7 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n {\n     // Return immediately if in warmup\n     {\n-        LOCK(cs_rpcWarmup);\n+        LOCK(g_rpc_warmup_mutex);\n         if (fRPCInWarmup)\n             throw JSONRPCError(RPC_IN_WARMUP, rpcWarmupStatus);\n     }"
      }
    ]
  }
]