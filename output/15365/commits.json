[
  {
    "sha": "faa46475d7d7dc60dcc80be34826cf98fb25dc95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWE0NjQ3NWQ3ZDdkYzYwZGNjODBiZTM0ODI2Y2Y5OGZiMjVkYzk1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-07T19:46:08Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-07T20:22:14Z"
      },
      "message": "wallet: Add lock annotation for mapAddressBook",
      "tree": {
        "sha": "09c37985d69ba643c9b0cd7693345f13acf3d282",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09c37985d69ba643c9b0cd7693345f13acf3d282"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa46475d7d7dc60dcc80be34826cf98fb25dc95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcXJN2AAoJEM4rdWl+aaVIy3MMAM4816GV57M9cDW+NSdzS+v/\nhZZJxvuhWyGXnYm2biCCddwCWyH6lWHWS3c3Uf52p+LfAV/+RtuSocKd9LRLbBfm\noNC9B6Yhefu5xKGIhU8YLJtxHalfSRmFASoKtHwtdWrI4t8XLUWL71NHOly9VF9N\nKp19hnTufz3J3CEltLhe0Pr16n/dLXY5PkPkoyPfxrn/LWbIVDOhBSr6+QP0NYwe\nzWeXkebB5M7VCjjDZCXUpKIN7tF5OzGHIkQ0sa4LD957NxkyeRmISBXECtcvnawk\neK2ubKHRfbgoWTGZfjZnv7btziRRve0FwRbBVRvwhyKxNe67chN+KsyBxpMqKBmS\nt/Mbi6qFqfLNVgglgR59F/VFqVvcdmDbLwGqUU/XskyOqEATuiFFPHdXJeOrXZ2X\njHECQiKHEaf3CgAAb4pCTCBruzy4/OMKfNVTg8sTO6pqYpLSoktuRdxht7SUKMvC\n/1QWd+/ogxB/bQoBPlGnV9Ev5bpiphYi79JctSo/Og==\n=TQl4\n-----END PGP SIGNATURE-----",
        "payload": "tree 09c37985d69ba643c9b0cd7693345f13acf3d282\nparent 72d34c0edc5ad9e69e0d054459ec15d2278f206b\nauthor MarcoFalke <falke.marco@gmail.com> 1549568768 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1549570934 -0500\n\nwallet: Add lock annotation for mapAddressBook\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa46475d7d7dc60dcc80be34826cf98fb25dc95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faa46475d7d7dc60dcc80be34826cf98fb25dc95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa46475d7d7dc60dcc80be34826cf98fb25dc95/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72d34c0edc5ad9e69e0d054459ec15d2278f206b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72d34c0edc5ad9e69e0d054459ec15d2278f206b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72d34c0edc5ad9e69e0d054459ec15d2278f206b"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "82dd8a094b2efe1a09a20f089fa32eb49038b9e9",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=faa46475d7d7dc60dcc80be34826cf98fb25dc95",
        "patch": "@@ -212,6 +212,7 @@ class WalletImpl : public Wallet\n     }\n     std::vector<std::string> getDestValues(const std::string& prefix) override\n     {\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.GetDestValues(prefix);\n     }\n     void lockCoin(const COutPoint& output) override"
      },
      {
        "sha": "7f5e92ea9fc1bb146727279dc51e4e8e08f5c69a",
        "filename": "src/qt/test/addressbooktests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/qt/test/addressbooktests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/qt/test/addressbooktests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/addressbooktests.cpp?ref=faa46475d7d7dc60dcc80be34826cf98fb25dc95",
        "patch": "@@ -95,6 +95,7 @@ void TestAddAddressesToSendBook()\n     }\n \n     auto check_addbook_size = [&wallet](int expected_size) {\n+        LOCK(wallet->cs_wallet);\n         QCOMPARE(static_cast<int>(wallet->mapAddressBook.size()), expected_size);\n     };\n "
      },
      {
        "sha": "6fd0e60d5751f4d22bb05c368c8f3c72bf3b58bb",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=faa46475d7d7dc60dcc80be34826cf98fb25dc95",
        "patch": "@@ -66,7 +66,7 @@ static std::string DecodeDumpString(const std::string &str) {\n     return ret.str();\n }\n \n-static bool GetWalletAddressesForKey(CWallet * const pwallet, const CKeyID &keyid, std::string &strAddr, std::string &strLabel)\n+static bool GetWalletAddressesForKey(CWallet* const pwallet, const CKeyID& keyid, std::string& strAddr, std::string& strLabel) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     bool fLabelFound = false;\n     CKey key;"
      },
      {
        "sha": "b9d993dc9cfdce2dba307051fed40edfe296b101",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=faa46475d7d7dc60dcc80be34826cf98fb25dc95",
        "patch": "@@ -1309,7 +1309,7 @@ static void MaybePushAddress(UniValue & entry, const CTxDestination &dest)\n  * @param  filter_ismine  The \"is mine\" filter flags.\n  * @param  filter_label   Optional label string to filter incoming transactions.\n  */\n-static void ListTransactions(interfaces::Chain::Lock& locked_chain, CWallet* const pwallet, const CWalletTx& wtx, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter_ismine, const std::string* filter_label)\n+static void ListTransactions(interfaces::Chain::Lock& locked_chain, CWallet* const pwallet, const CWalletTx& wtx, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter_ismine, const std::string* filter_label) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     CAmount nFee;\n     std::list<COutputEntry> listReceived;"
      },
      {
        "sha": "af9365337546b87be47bd12f552d71788d090930",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=faa46475d7d7dc60dcc80be34826cf98fb25dc95",
        "patch": "@@ -3172,7 +3172,7 @@ bool CWallet::SetAddressBook(const CTxDestination& address, const std::string& s\n {\n     bool fUpdated = false;\n     {\n-        LOCK(cs_wallet); // mapAddressBook\n+        LOCK(cs_wallet);\n         std::map<CTxDestination, CAddressBookData>::iterator mi = mapAddressBook.find(address);\n         fUpdated = mi != mapAddressBook.end();\n         mapAddressBook[address].name = strName;\n@@ -3189,7 +3189,7 @@ bool CWallet::SetAddressBook(const CTxDestination& address, const std::string& s\n bool CWallet::DelAddressBook(const CTxDestination& address)\n {\n     {\n-        LOCK(cs_wallet); // mapAddressBook\n+        LOCK(cs_wallet);\n \n         // Delete destdata tuples associated with address\n         std::string strAddress = EncodeDestination(address);\n@@ -3869,7 +3869,6 @@ bool CWallet::GetDestData(const CTxDestination &dest, const std::string &key, st\n \n std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n {\n-    LOCK(cs_wallet);\n     std::vector<std::string> values;\n     for (const auto& address : mapAddressBook) {\n         for (const auto& data : address.second.destdata) {"
      },
      {
        "sha": "9dde7e1f94824e9b46b5deafb0f8f2ebc9e82bb5",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=faa46475d7d7dc60dcc80be34826cf98fb25dc95",
        "patch": "@@ -788,7 +788,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     int64_t nOrderPosNext GUARDED_BY(cs_wallet) = 0;\n     uint64_t nAccountingEntryNumber = 0;\n \n-    std::map<CTxDestination, CAddressBookData> mapAddressBook;\n+    std::map<CTxDestination, CAddressBookData> mapAddressBook GUARDED_BY(cs_wallet);\n \n     std::set<COutPoint> setLockedCoins GUARDED_BY(cs_wallet);\n \n@@ -865,15 +865,15 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     bool LoadCScript(const CScript& redeemScript);\n \n     //! Adds a destination data tuple to the store, and saves it to disk\n-    bool AddDestData(const CTxDestination &dest, const std::string &key, const std::string &value);\n+    bool AddDestData(const CTxDestination& dest, const std::string& key, const std::string& value) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     //! Erases a destination data tuple in the store and on disk\n-    bool EraseDestData(const CTxDestination &dest, const std::string &key);\n+    bool EraseDestData(const CTxDestination& dest, const std::string& key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     //! Adds a destination data tuple to the store, without saving it to disk\n-    void LoadDestData(const CTxDestination &dest, const std::string &key, const std::string &value);\n+    void LoadDestData(const CTxDestination& dest, const std::string& key, const std::string& value) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     //! Look up a destination data tuple in the store, return true if found false otherwise\n-    bool GetDestData(const CTxDestination &dest, const std::string &key, std::string *value) const;\n+    bool GetDestData(const CTxDestination& dest, const std::string& key, std::string* value) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     //! Get all destination values matching a prefix.\n-    std::vector<std::string> GetDestValues(const std::string& prefix) const;\n+    std::vector<std::string> GetDestValues(const std::string& prefix) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     //! Adds a watch-only address to the store, and saves it to disk.\n     bool AddWatchOnly(const CScript& dest, int64_t nCreateTime) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n@@ -1041,7 +1041,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     bool DelAddressBook(const CTxDestination& address);\n \n-    const std::string& GetLabelName(const CScript& scriptPubKey) const;\n+    const std::string& GetLabelName(const CScript& scriptPubKey) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     void GetScriptForMining(std::shared_ptr<CReserveScript> &script);\n "
      },
      {
        "sha": "628f3fe803476d2d5f19430fea797e787422f021",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa46475d7d7dc60dcc80be34826cf98fb25dc95/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=faa46475d7d7dc60dcc80be34826cf98fb25dc95",
        "patch": "@@ -94,7 +94,6 @@ static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::pa\n \n static void WalletShowInfo(CWallet* wallet_instance)\n {\n-    // lock required because of some AssertLockHeld()\n     LOCK(wallet_instance->cs_wallet);\n \n     fprintf(stdout, \"Wallet info\\n===========\\n\");"
      }
    ]
  }
]