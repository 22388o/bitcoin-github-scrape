[
  {
    "sha": "39d53124158cb02d61079c2a8e21fd09d367b924",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOWQ1MzEyNDE1OGNiMDJkNjEwNzljMmE4ZTIxZmQwOWQzNjdiOTI0",
    "commit": {
      "author": {
        "name": "Rohit Ranjan",
        "email": "rohitrjn629@gmail.com",
        "date": "2021-08-30T15:05:51Z"
      },
      "committer": {
        "name": "Rohit Ranjan",
        "email": "rohitrjn629@gmail.com",
        "date": "2021-09-08T19:20:41Z"
      },
      "message": "fees: skip pointless fee parameter calculation during IBD\n\nBitcoin nodes update their TxConfirmStats attributes (eg. confAvg, failAvg etc..) whenever they see a new block.\nHowever, during IBD, we know our best block height, so we can skip the parameter updates up to a certain height,\nwhen we know they are not going to affect fee estimates.\n\nWe can see the max value of decay for parameters is .99931. If we do (max_decay)^6048 which is approximate 0.01,\nit means, that transactions in blocks older than this height,\ndo not affect the current fee estimates significantly. (i.e ~ Best_Block_Height - 6048).\n\nBy skipping these updates we can reduce the computation complexity\nof fee calculation during IBD significantly:\n(block_tree_size - 6048)/block_tree_size*100 which is ~ 99%.",
      "tree": {
        "sha": "ef0a0600cd82b530d3230de5d80cbaa7c1a2c482",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef0a0600cd82b530d3230de5d80cbaa7c1a2c482"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39d53124158cb02d61079c2a8e21fd09d367b924",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39d53124158cb02d61079c2a8e21fd09d367b924",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/39d53124158cb02d61079c2a8e21fd09d367b924",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39d53124158cb02d61079c2a8e21fd09d367b924/comments",
    "author": {
      "login": "RohitRanjangit",
      "id": 47271616,
      "node_id": "MDQ6VXNlcjQ3MjcxNjE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47271616?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RohitRanjangit",
      "html_url": "https://github.com/RohitRanjangit",
      "followers_url": "https://api.github.com/users/RohitRanjangit/followers",
      "following_url": "https://api.github.com/users/RohitRanjangit/following{/other_user}",
      "gists_url": "https://api.github.com/users/RohitRanjangit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RohitRanjangit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RohitRanjangit/subscriptions",
      "organizations_url": "https://api.github.com/users/RohitRanjangit/orgs",
      "repos_url": "https://api.github.com/users/RohitRanjangit/repos",
      "events_url": "https://api.github.com/users/RohitRanjangit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RohitRanjangit/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "RohitRanjangit",
      "id": 47271616,
      "node_id": "MDQ6VXNlcjQ3MjcxNjE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47271616?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RohitRanjangit",
      "html_url": "https://github.com/RohitRanjangit",
      "followers_url": "https://api.github.com/users/RohitRanjangit/followers",
      "following_url": "https://api.github.com/users/RohitRanjangit/following{/other_user}",
      "gists_url": "https://api.github.com/users/RohitRanjangit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RohitRanjangit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RohitRanjangit/subscriptions",
      "organizations_url": "https://api.github.com/users/RohitRanjangit/orgs",
      "repos_url": "https://api.github.com/users/RohitRanjangit/repos",
      "events_url": "https://api.github.com/users/RohitRanjangit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RohitRanjangit/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7be143a960e2bb9ac81144f55c45731c1bb209c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7be143a960e2bb9ac81144f55c45731c1bb209c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7be143a960e2bb9ac81144f55c45731c1bb209c5"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 27,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4ee57c654aca63baf5fbddea36e15905d22e108a",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39d53124158cb02d61079c2a8e21fd09d367b924/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39d53124158cb02d61079c2a8e21fd09d367b924/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=39d53124158cb02d61079c2a8e21fd09d367b924",
        "patch": "@@ -9,6 +9,7 @@\n #include <fs.h>\n #include <logging.h>\n #include <streams.h>\n+#include <chain.h>\n #include <txmempool.h>\n #include <util/serfloat.h>\n #include <util/system.h>\n@@ -17,6 +18,8 @@ static const char* FEE_ESTIMATES_FILENAME = \"fee_estimates.dat\";\n \n static constexpr double INF_FEERATE = 1e99;\n \n+extern CBlockIndex *pindexBestHeader;\n+\n std::string StringForFeeEstimateHorizon(FeeEstimateHorizon horizon)\n {\n     switch (horizon) {\n@@ -624,6 +627,13 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     shortStats->ClearCurrent(nBlockHeight);\n     longStats->ClearCurrent(nBlockHeight);\n \n+    assert(pindexBestHeader);\n+    if((int)nBlockHeight < pindexBestHeader->nHeight - (int)OLDEST_ESTIMATE_HISTORY){\n+        // Ignore older block transactions that won't contribute\n+        // to fees calculation significantly.\n+        return;\n+    }\n+\n     // Decay all exponential averages\n     feeStats->UpdateMovingAverages();\n     shortStats->UpdateMovingAverages();"
      },
      {
        "sha": "d5a960f05e6b4b07062a3fb741e44558c5c7478b",
        "filename": "src/test/fuzz/policy_estimator.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39d53124158cb02d61079c2a8e21fd09d367b924/src/test/fuzz/policy_estimator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39d53124158cb02d61079c2a8e21fd09d367b924/src/test/fuzz/policy_estimator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/policy_estimator.cpp?ref=39d53124158cb02d61079c2a8e21fd09d367b924",
        "patch": "@@ -8,13 +8,16 @@\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n #include <test/util/setup_common.h>\n+#include <chain.h>\n #include <txmempool.h>\n \n #include <cstdint>\n #include <optional>\n #include <string>\n #include <vector>\n \n+extern CBlockIndex *pindexBestHeader;\n+\n void initialize_policy_estimator()\n {\n     static const auto testing_setup = MakeNoLogFileContext<>();\n@@ -24,6 +27,7 @@ FUZZ_TARGET_INIT(policy_estimator, initialize_policy_estimator)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     CBlockPolicyEstimator block_policy_estimator;\n+    pindexBestHeader = new CBlockIndex();\n     while (fuzzed_data_provider.ConsumeBool()) {\n         CallOneOf(\n             fuzzed_data_provider,\n@@ -53,7 +57,8 @@ FUZZ_TARGET_INIT(policy_estimator, initialize_policy_estimator)\n                 for (const CTxMemPoolEntry& mempool_entry : mempool_entries) {\n                     ptrs.push_back(&mempool_entry);\n                 }\n-                block_policy_estimator.processBlock(fuzzed_data_provider.ConsumeIntegral<unsigned int>(), ptrs);\n+                pindexBestHeader->nHeight = std::max(fuzzed_data_provider.ConsumeIntegral<int>(),0);\n+                block_policy_estimator.processBlock(pindexBestHeader->nHeight, ptrs);\n             },\n             [&] {\n                 (void)block_policy_estimator.removeTx(ConsumeUInt256(fuzzed_data_provider), /* inBlock */ fuzzed_data_provider.ConsumeBool());\n@@ -74,4 +79,5 @@ FUZZ_TARGET_INIT(policy_estimator, initialize_policy_estimator)\n         block_policy_estimator.Write(fuzzed_auto_file);\n         block_policy_estimator.Read(fuzzed_auto_file);\n     }\n+    delete pindexBestHeader;\n }"
      },
      {
        "sha": "aeeb5a3778a5f6c95be1d663817ff247987f01d5",
        "filename": "src/test/policyestimator_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39d53124158cb02d61079c2a8e21fd09d367b924/src/test/policyestimator_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39d53124158cb02d61079c2a8e21fd09d367b924/src/test/policyestimator_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/policyestimator_tests.cpp?ref=39d53124158cb02d61079c2a8e21fd09d367b924",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <policy/fees.h>\n #include <policy/policy.h>\n+#include <chain.h>\n #include <txmempool.h>\n #include <uint256.h>\n #include <util/time.h>\n@@ -12,6 +13,8 @@\n \n #include <boost/test/unit_test.hpp>\n \n+extern CBlockIndex* pindexBestHeader;\n+\n BOOST_FIXTURE_TEST_SUITE(policyestimator_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n@@ -24,6 +27,12 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n     CAmount deltaFee(100);\n     std::vector<CAmount> feeV;\n \n+    pindexBestHeader = new CBlockIndex();\n+\n+    // Maximum value of blocknum can be 665\n+    pindexBestHeader->nHeight = 665;\n+    assert(pindexBestHeader->nHeight);\n+\n     // Populate vectors of increasing fees\n     for (int j = 0; j < 10; j++) {\n         feeV.push_back(basefee * (j+1));\n@@ -178,6 +187,7 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n     for (int i = 2; i < 9; i++) { // At 9, the original estimate was already at the bottom (b/c scale = 2)\n         BOOST_CHECK(feeEst.estimateFee(i).GetFeePerK() < origFeeEst[i-1] - deltaFee);\n     }\n+    delete pindexBestHeader;\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]