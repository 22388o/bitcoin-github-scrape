[
  {
    "sha": "dde71965a81981fb7d907874dc7c6930527f74b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGU3MTk2NWE4MTk4MWZiN2Q5MDc4NzRkYzdjNjkzMDUyN2Y3NGI4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-08-04T18:52:07Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-08-04T18:52:43Z"
      },
      "message": "RPC: Restore backward compatibility, in multiwallet mode",
      "tree": {
        "sha": "67e93439fa3730f78712b523f641adc9ed1b1803",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67e93439fa3730f78712b523f641adc9ed1b1803"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dde71965a81981fb7d907874dc7c6930527f74b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dde71965a81981fb7d907874dc7c6930527f74b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dde71965a81981fb7d907874dc7c6930527f74b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dde71965a81981fb7d907874dc7c6930527f74b8/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e222618a32a16cf0efae392e6349c10c38e57db6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e222618a32a16cf0efae392e6349c10c38e57db6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e222618a32a16cf0efae392e6349c10c38e57db6"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "da90f0dc2eb6583bf8c1c9730d9ddddb44674fcf",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dde71965a81981fb7d907874dc7c6930527f74b8/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dde71965a81981fb7d907874dc7c6930527f74b8/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=dde71965a81981fb7d907874dc7c6930527f74b8",
        "patch": "@@ -45,7 +45,7 @@ CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n         }\n         throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n     }\n-    return ::vpwallets.size() == 1 || (request.fHelp && ::vpwallets.size() > 0) ? ::vpwallets[0] : nullptr;\n+    return vpwallets.empty() ? nullptr : vpwallets[0];\n }\n \n std::string HelpRequiringPassphrase(CWallet * const pwallet)"
      },
      {
        "sha": "ddc728da06158fd44acd2e20a8fa32974d185192",
        "filename": "test/functional/multiwallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dde71965a81981fb7d907874dc7c6930527f74b8/test/functional/multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dde71965a81981fb7d907874dc7c6930527f74b8/test/functional/multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/multiwallet.py?ref=dde71965a81981fb7d907874dc7c6930527f74b8",
        "patch": "@@ -41,16 +41,13 @@ def run_test(self):\n         # accessing invalid wallet fails\n         assert_raises_jsonrpc(-18, \"Requested wallet does not exist or is not loaded\", (self.nodes[0] / \"wallet/bad\").getwalletinfo)\n \n-        # accessing wallet RPC without using wallet endpoint fails\n-        assert_raises_jsonrpc(-19, \"Wallet file not specified\", self.nodes[0].getwalletinfo)\n-\n         # check w1 wallet balance\n         w1_info = w1.getwalletinfo()\n         assert_equal(w1_info['immature_balance'], 50)\n         w1_name = w1_info['walletname']\n         assert_equal(w1_name, \"w1\")\n \n-        # check w1 wallet balance\n+        # check w2 wallet balance\n         w2 = self.nodes[0] / \"wallet/w2\"\n         w2_info = w2.getwalletinfo()\n         assert_equal(w2_info['immature_balance'], 0)\n@@ -63,6 +60,9 @@ def run_test(self):\n \n         assert_equal({\"w1\", \"w2\", \"w3\"}, {w1_name, w2_name, w3_name})\n \n+        # accessing wallet RPC without using wallet endpoint accesses w1\n+        assert_equal(self.nodes[0].getwalletinfo()['walletname'], 'w1')\n+\n         w1.generate(101)\n         assert_equal(w1.getbalance(), 100)\n         assert_equal(w2.getbalance(), 0)"
      }
    ]
  }
]