fanquake,2021-04-14 02:13:27,Concept ACK. We should also update the [`HOSTS` listing](https://github.com/bitcoin/bitcoin/tree/master/contrib/guix#as-a-tool-for-deterministic-builds) in the Guix README.,https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-819170898,819170898,
dongcarl,2021-04-14 14:13:23,"Pushed c9ea4c79c3dfb6418bc3a5b6533d81ac94793e65 -> 9e4e638750fb17abb173aae2f6a33d838befd7c3\n- Addressed: https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-819170898",https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-819550942,819550942,
laanwj,2021-04-14 15:05:14,"Concept ACK. Using canonicalized architecture tuples makes sense, I guess, it's good to rule out ambiguity when the architecture (at least the part that we care about) is the same but have slightly different tuples. I think the whole thing (architecture tuples in general, I mean) is a mess but that's how it is.",https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-819591053,819591053,
DrahtBot,2021-04-29 07:25:52,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22392 by fanquake\n* #22365 by dongcarl\n* #22237 by dgoncharov\n* #21711 by dongcarl\n\nIf you consider this pull reques",https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-829002367,829002367,
dongcarl,2021-05-04 15:50:39,Updated to be based on: #21799,https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-832048008,832048008,
dongcarl,2021-05-07 19:42:50,"Pushed 69d4d9ca9b5d51ef4db04d486333aefab2fdf2e1 -> aa0f83283504c69b57ea20f4cb127c4ec4d993f3\n- Rebased after merge of #21799",https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-834727600,834727600,
laanwj,2021-06-03 12:48:20,Code review ACK aa0f83283504c69b57ea20f4cb127c4ec4d993f3,https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-853841975,853841975,
fanquake,2021-06-10 06:00:26,"Tested that hosts are properly passed through, i.e `x86_64-linux-gnu` becomes `x86_64-pc-linux-gnu`. However this doesn't build the `x86_64-pc-linux-gnu` host for me (aa0f83283504c69b57ea20f4cb127c4ec4d993f3):\n```bash\ntime HOSTS=""x86_64-pc-linux-gnu"" BASE_CACHE=""/guix/base_cache"" SOURCES_PATH=""/guix/sources"" SDK_PATH=""/guix/SDKs"" ./contrib/guix/guix-build\n...\nINFO: Building aa0f83283504 fo",https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-858331108,858331108,
dongcarl,2021-06-15 14:59:42,"Very curious as I did not encounter this before (or perhaps I did and did not notice?)\n\nI will investigate further but the following patch fixes the problem (not in any way that we'd want in our repo), which is interesting.\n```diff\ndiff --git a/depends/funcs.mk b/depends/funcs.mk\nindex 34a030fab7..e5fcb352a8 100644\n--- a/depends/funcs.mk\n+++ b/depends/funcs.mk\n@@ -146,7 +146,7 @@ $",https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-861573493,861573493,
dongcarl,2021-06-18 18:11:30,"Pushed aa0f832835..d0e2378c1a\n\nWrote up a description of my investigation\n\n---\n\nAbstractly, our Guix builds do not treat native-builds and cross-builds differently. We always build 2 toolchains:\n\n1. A native toolchain (in depends terms: build) (namely, the `gcc-toolchain` package, with the command line name being simply `gcc`), and\n2. A cross toolchain (in depends terms: host) (n",https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-864200182,864200182,
DrahtBot,2021-07-05 16:40:28,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/21671#issuecomment-874231029,874231029,
