[
  {
    "sha": "bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjZhM2Q0YmYzN2IyNGM0NmNmNjRmM2MwZTdkOTJhYTZlOTgxYzRi",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-13T10:19:30Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-15T15:06:23Z"
      },
      "message": "MOVEONLY: IsSuperMajority() to consensus/versionbits.o",
      "tree": {
        "sha": "35dcc42a304e089cfb3d8dd2484213c2f35f224f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35dcc42a304e089cfb3d8dd2484213c2f35f224f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "304eff3c614aa18f4d5d5d367024b0dbbb4dce4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/304eff3c614aa18f4d5d5d367024b0dbbb4dce4e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/304eff3c614aa18f4d5d5d367024b0dbbb4dce4e"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 19,
      "deletions": 18
    },
    "files": [
      {
        "sha": "b2ef6b6dc938adef681335e6c35905a7f01926dd",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
        "patch": "@@ -107,11 +107,6 @@ map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(cs_main);\n map<COutPoint, set<map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(cs_main);\n void EraseOrphansFor(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-/**\n- * Returns true if there are nRequired or more blocks of minVersion or above\n- * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n- */\n-static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams);\n static void CheckBlockIndex(const Consensus::Params& consensusParams);\n \n /** Constant stuff for coinbase transactions we create: */\n@@ -3719,19 +3714,6 @@ static bool AcceptBlock(const CBlock& block, CValidationState& state, const CCha\n     return true;\n }\n \n-static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams)\n-{\n-    unsigned int nFound = 0;\n-    for (int i = 0; i < consensusParams.nMajorityWindow && nFound < nRequired && pstart != NULL; i++)\n-    {\n-        if (pstart->nVersion >= minVersion)\n-            ++nFound;\n-        pstart = pstart->pprev;\n-    }\n-    return (nFound >= nRequired);\n-}\n-\n-\n bool ProcessNewBlock(CValidationState& state, const CChainParams& chainparams, CNode* pfrom, const CBlock* pblock, bool fForceProcessing, const CDiskBlockPos* dbp)\n {\n     {"
      },
      {
        "sha": "858bf908c971c5eb9a21eff2857cc4d7e553d84e",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
        "patch": "@@ -148,3 +148,19 @@ void VersionBitsCache::Clear()\n         caches[d].clear();\n     }\n }\n+\n+/**\n+ * Returns true if there are nRequired or more blocks of minVersion or above\n+ * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n+ */\n+bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams)\n+{\n+    unsigned int nFound = 0;\n+    for (int i = 0; i < consensusParams.nMajorityWindow && nFound < nRequired && pstart != NULL; i++)\n+    {\n+        if (pstart->nVersion >= minVersion)\n+            ++nFound;\n+        pstart = pstart->pprev;\n+    }\n+    return (nFound >= nRequired);\n+}"
      },
      {
        "sha": "f89c065959c550831ea82b98b47ee4e5feb8e91f",
        "filename": "src/versionbits.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b/src/versionbits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b/src/versionbits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.h?ref=bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
        "patch": "@@ -65,4 +65,7 @@ struct VersionBitsCache\n ThresholdState VersionBitsState(const CBlockIndex* pindexPrev, const Consensus::Params& params, Consensus::DeploymentPos pos, VersionBitsCache& cache);\n uint32_t VersionBitsMask(const Consensus::Params& params, Consensus::DeploymentPos pos);\n \n+// TODO: make static again\n+bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams);\n+\n #endif"
      }
    ]
  },
  {
    "sha": "b793c61697e0afef9ee3f203e4207b7e78f12f28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzkzYzYxNjk3ZTBhZmVmOWVlM2YyMDNlNDIwN2I3ZTc4ZjEyZjI4",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-13T08:43:34Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-15T15:06:37Z"
      },
      "message": "Refactor: Introduce Consensus::GetFlags()",
      "tree": {
        "sha": "8c5da49c1f0f7a79c8781b9cacd88f18ed0d1668",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c5da49c1f0f7a79c8781b9cacd88f18ed0d1668"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b793c61697e0afef9ee3f203e4207b7e78f12f28",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b793c61697e0afef9ee3f203e4207b7e78f12f28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b793c61697e0afef9ee3f203e4207b7e78f12f28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b793c61697e0afef9ee3f203e4207b7e78f12f28/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb6a3d4bf37b24c46cf64f3c0e7d92aa6e981c4b"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 47,
      "deletions": 24
    },
    "files": [
      {
        "sha": "e8295118918da787eb7fd8b7bbc221bdf9865ef3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 24,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b793c61697e0afef9ee3f203e4207b7e78f12f28/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b793c61697e0afef9ee3f203e4207b7e78f12f28/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b793c61697e0afef9ee3f203e4207b7e78f12f28",
        "patch": "@@ -2323,6 +2323,8 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     int64_t nTime1 = GetTimeMicros(); nTimeCheck += nTime1 - nTimeStart;\n     LogPrint(\"bench\", \"    - Sanity checks: %.2fms [%.2fs]\\n\", 0.001 * (nTime1 - nTimeStart), nTimeCheck * 0.000001);\n \n+    unsigned int flags = Consensus::GetFlags(block, chainparams.GetConsensus(), pindex, versionbitscache);\n+\n     // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n     // unless those are already completely spent.\n     // If such overwrites are allowed, coinbases and transactions depending upon those\n@@ -2358,36 +2360,13 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         }\n     }\n \n-    // BIP16 didn't become active until Apr 1 2012\n-    int64_t nBIP16SwitchTime = 1333238400;\n-    bool fStrictPayToScriptHash = (pindex->GetBlockTime() >= nBIP16SwitchTime);\n-\n-    unsigned int flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n-\n-    // Start enforcing the DERSIG (BIP66) rules, for block.nVersion=3 blocks,\n-    // when 75% of the network has upgraded:\n-    if (block.nVersion >= 3 && IsSuperMajority(3, pindex->pprev, chainparams.GetConsensus().nMajorityEnforceBlockUpgrade, chainparams.GetConsensus())) {\n-        flags |= SCRIPT_VERIFY_DERSIG;\n-    }\n-\n-    // Start enforcing CHECKLOCKTIMEVERIFY, (BIP65) for block.nVersion=4\n-    // blocks, when 75% of the network has upgraded:\n-    if (block.nVersion >= 4 && IsSuperMajority(4, pindex->pprev, chainparams.GetConsensus().nMajorityEnforceBlockUpgrade, chainparams.GetConsensus())) {\n-        flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n-    }\n-\n+    // TODO unify all consensus flags, see PR #7779\n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n     int nLockTimeFlags = 0;\n     if (VersionBitsState(pindex->pprev, chainparams.GetConsensus(), Consensus::DEPLOYMENT_CSV, versionbitscache) == THRESHOLD_ACTIVE) {\n-        flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n         nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;\n     }\n \n-    // Start enforcing WITNESS rules using versionbits logic.\n-    if (IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) {\n-        flags |= SCRIPT_VERIFY_WITNESS;\n-    }\n-\n     int64_t nTime2 = GetTimeMicros(); nTimeForks += nTime2 - nTime1;\n     LogPrint(\"bench\", \"    - Fork checks: %.2fms [%.2fs]\\n\", 0.001 * (nTime2 - nTime1), nTimeForks * 0.000001);\n "
      },
      {
        "sha": "76405f5387e01cc011fe459e08a7ca2692b1eb82",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b793c61697e0afef9ee3f203e4207b7e78f12f28/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b793c61697e0afef9ee3f203e4207b7e78f12f28/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=b793c61697e0afef9ee3f203e4207b7e78f12f28",
        "patch": "@@ -5,6 +5,7 @@\n #include \"versionbits.h\"\n \n #include \"consensus/params.h\"\n+#include \"script/interpreter.h\"\n \n const struct BIP9DeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION_BITS_DEPLOYMENTS] = {\n     {\n@@ -164,3 +165,36 @@ bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequir\n     }\n     return (nFound >= nRequired);\n }\n+\n+int64_t Consensus::GetFlags(const CBlock& block, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, VersionBitsCache& cache)\n+{\n+    // BIP16 didn't become active until Apr 1 2012\n+    int64_t nBIP16SwitchTime = 1333238400;\n+    bool fStrictPayToScriptHash = (pindexPrev->GetBlockTime() >= nBIP16SwitchTime);\n+\n+    int64_t flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n+\n+    // Start enforcing the DERSIG (BIP66) rules, for block.nVersion=3 blocks,\n+    // when 75% of the network has upgraded:\n+    if (block.nVersion >= 3 && IsSuperMajority(3, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams)) {\n+        flags |= SCRIPT_VERIFY_DERSIG;\n+    }\n+\n+    // Start enforcing CHECKLOCKTIMEVERIFY, (BIP65) for block.nVersion=4\n+    // blocks, when 75% of the network has upgraded:\n+    if (block.nVersion >= 4 && IsSuperMajority(4, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams)) {\n+        flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+    }\n+\n+    // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n+    if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_CSV, cache) == THRESHOLD_ACTIVE) {\n+        flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n+    }\n+\n+    // Start enforcing WITNESS rules using versionbits logic.\n+    if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, cache) == THRESHOLD_ACTIVE) {\n+        flags |= SCRIPT_VERIFY_WITNESS;\n+    }\n+\n+    return flags;\n+}"
      },
      {
        "sha": "95783a4cda4c455ae92720a287c72c24da3ba290",
        "filename": "src/versionbits.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b793c61697e0afef9ee3f203e4207b7e78f12f28/src/versionbits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b793c61697e0afef9ee3f203e4207b7e78f12f28/src/versionbits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.h?ref=b793c61697e0afef9ee3f203e4207b7e78f12f28",
        "patch": "@@ -65,6 +65,16 @@ struct VersionBitsCache\n ThresholdState VersionBitsState(const CBlockIndex* pindexPrev, const Consensus::Params& params, Consensus::DeploymentPos pos, VersionBitsCache& cache);\n uint32_t VersionBitsMask(const Consensus::Params& params, Consensus::DeploymentPos pos);\n \n+namespace Consensus {\n+\n+/**\n+ * Get loosely defined struct containing all the consensus flags.\n+ * @TODO incomplete, not all consensus flags yet.\n+ */\n+int64_t GetFlags(const CBlock& block, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, VersionBitsCache& cache);\n+\n+} // namespace Consensus\n+\n // TODO: make static again\n bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams);\n "
      }
    ]
  },
  {
    "sha": "c0e6ca830c54fe6ebb6551d068633b13258062c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMGU2Y2E4MzBjNTRmZTZlYmI2NTUxZDA2ODYzM2IxMzI1ODA2MmM3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-15T17:32:41Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-16T12:24:18Z"
      },
      "message": "Refactor: BIP34: Introduce Consensus::VerifyTx() with BIP34\n\n- The check is moved from main::ContextualCheckBlock() to\nmain::ConnectBlock(), calling Consensus::VerifyTx() from\nconsensus/tx_verify.cpp in its main loop.\n\n- TX_COINBASE_VERIFY_BIP34 consensus flag is created.\n\n- One more call to IsSuperMajority() hidden below Consensus::GetFlags() in versionbits",
      "tree": {
        "sha": "937eb02e874925f1b926020b4dac533d0afbad52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/937eb02e874925f1b926020b4dac533d0afbad52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c0e6ca830c54fe6ebb6551d068633b13258062c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0e6ca830c54fe6ebb6551d068633b13258062c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c0e6ca830c54fe6ebb6551d068633b13258062c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0e6ca830c54fe6ebb6551d068633b13258062c7/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b793c61697e0afef9ee3f203e4207b7e78f12f28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b793c61697e0afef9ee3f203e4207b7e78f12f28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b793c61697e0afef9ee3f203e4207b7e78f12f28"
      }
    ],
    "stats": {
      "total": 78,
      "additions": 65,
      "deletions": 13
    },
    "files": [
      {
        "sha": "4c70e80e96cd1593a1769c480ddb421eba5ad878",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=c0e6ca830c54fe6ebb6551d068633b13258062c7",
        "patch": "@@ -167,6 +167,7 @@ libbitcoin_server_a_SOURCES = \\\n   blockencodings.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n+  consensus/tx_verify.cpp \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n   init.cpp \\"
      },
      {
        "sha": "ef6eb389d51b9328540e5ade70731e75203c3b84",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=c0e6ca830c54fe6ebb6551d068633b13258062c7",
        "patch": "@@ -8,6 +8,9 @@\n \n #include <stdint.h>\n \n+class CTransaction;\n+class CValidationState;\n+\n /** The maximum allowed size for a serialized block, in bytes (only for buffer size limits) */\n static const unsigned int MAX_BLOCK_SERIALIZED_SIZE = 4000000;\n /** The maximum allowed cost for a block, see BIP 141 (network rule) */\n@@ -28,4 +31,22 @@ enum {\n     LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n };\n \n+/** Transaction validation functions */\n+\n+namespace Consensus {\n+\n+/**\n+ * Checks specific to coinbase transactions.\n+ * Preconditions: tx.IsCoinBase() is true.\n+ */\n+bool CheckTxCoinbase(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight);\n+\n+/**\n+ * Fully verify a CTransaction.\n+ * @TODO this is incomplete, among other things, the scripts are not checked yet.\n+ */\n+bool VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight);\n+\n+} // namespace Consensus\n+\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "25ff1371beb331d79d0f42ded7bac1e09f42591b",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=c0e6ca830c54fe6ebb6551d068633b13258062c7",
        "patch": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus.h\"\n+\n+#include \"primitives/transaction.h\"\n+#include \"script/interpreter.h\"\n+#include \"validation.h\"\n+\n+bool Consensus::CheckTxCoinbase(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight)\n+{\n+    // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n+    if (flags & TX_COINBASE_VERIFY_BIP34) {\n+        const CScript coinbaseSigScript = tx.vin[0].scriptSig;\n+        CScript expect = CScript() << nHeight;\n+        if (coinbaseSigScript.size() < expect.size() ||\n+            !std::equal(expect.begin(), expect.end(), coinbaseSigScript.begin()))\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-height\", false, \"block height mismatch in coinbase\");\n+    }\n+\n+    return true;\n+}\n+\n+bool Consensus::VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight)\n+{\n+    if (tx.IsCoinBase())\n+        return CheckTxCoinbase(tx, state, flags, nHeight);\n+\n+    return true;\n+}"
      },
      {
        "sha": "934fe97957d1c6eef85561e44e60c528599a2ef3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 13,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c0e6ca830c54fe6ebb6551d068633b13258062c7",
        "patch": "@@ -2383,11 +2383,12 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     std::vector<std::pair<uint256, CDiskTxPos> > vPos;\n     vPos.reserve(block.vtx.size());\n     blockundo.vtxundo.reserve(block.vtx.size() - 1);\n+    const int nHeight = pindex == NULL ? 0 : pindex->nHeight + 1;\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n         const CTransaction &tx = block.vtx[i];\n-\n-        nInputs += tx.vin.size();\n+        if (!Consensus::VerifyTx(tx, state, flags, nHeight))\n+            return error(\"%s: Consensus::VerifyTx: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n \n         if (!tx.IsCoinBase())\n         {\n@@ -2449,6 +2450,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n         vPos.push_back(std::make_pair(tx.GetHash(), pos));\n         pos.nTxOffset += ::GetSerializeSize(tx, SER_DISK, CLIENT_VERSION);\n+        nInputs += tx.vin.size();\n     }\n     int64_t nTime3 = GetTimeMicros(); nTimeConnect += nTime3 - nTime2;\n     LogPrint(\"bench\", \"      - Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin) [%.2fs]\\n\", (unsigned)block.vtx.size(), 0.001 * (nTime3 - nTime2), 0.001 * (nTime3 - nTime2) / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * (nTime3 - nTime2) / (nInputs-1), nTimeConnect * 0.000001);\n@@ -3518,17 +3520,6 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n         }\n     }\n \n-    // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n-    // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n-    if (block.nVersion >= 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams))\n-    {\n-        CScript expect = CScript() << nHeight;\n-        if (block.vtx[0].vin[0].scriptSig.size() < expect.size() ||\n-            !std::equal(expect.begin(), expect.end(), block.vtx[0].vin[0].scriptSig.begin())) {\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-height\", false, \"block height mismatch in coinbase\");\n-        }\n-    }\n-\n     // Validation for witness commitments.\n     // * We compute the witness hash (which is the hash including witnesses) of all the block's transactions, except the\n     //   coinbase (where 0x0000....0000 is used instead)."
      },
      {
        "sha": "b15e0cf1ea5c33c1e9cdc7e404a80036b6e5756b",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=c0e6ca830c54fe6ebb6551d068633b13258062c7",
        "patch": "@@ -94,6 +94,9 @@ enum\n     // Making v1-v16 witness program non-standard\n     //\n     SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM = (1U << 12),\n+\n+    /* BIP34: Verify coinbase transactions commit to the current height. */\n+    TX_COINBASE_VERIFY_BIP34 = (1U << 13),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);"
      },
      {
        "sha": "b9961b8100883feeb6dd0939294dade282b0dc63",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0e6ca830c54fe6ebb6551d068633b13258062c7/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=c0e6ca830c54fe6ebb6551d068633b13258062c7",
        "patch": "@@ -174,6 +174,11 @@ int64_t Consensus::GetFlags(const CBlock& block, const Consensus::Params& consen\n \n     int64_t flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n \n+    // Start enforcing height in coinbase (BIP34), for block.nVersion=2 blocks,\n+    // when 75% of the network has upgraded:\n+    if (block.nVersion >= 2 && IsSuperMajority(2, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams))\n+        flags |= TX_COINBASE_VERIFY_BIP34;\n+    \n     // Start enforcing the DERSIG (BIP66) rules, for block.nVersion=3 blocks,\n     // when 75% of the network has upgraded:\n     if (block.nVersion >= 3 && IsSuperMajority(3, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams)) {"
      }
    ]
  },
  {
    "sha": "f255e7adb192bde06f72f9bde47f45016939c346",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjU1ZTdhZGIxOTJiZGUwNmY3MmY5YmRlNDdmNDUwMTY5MzljMzQ2",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-13T17:25:38Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-16T12:39:14Z"
      },
      "message": "Consensus: Refactor: Move BIP30 check to  Consensus::VerifyTx()\n\n- It remains being called only from ConnectBlock()\n\n- TX_VERIFY_BIP30 consensus flag is created.",
      "tree": {
        "sha": "49cf86f5afa8531e98d081f6721e683d8448c3dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49cf86f5afa8531e98d081f6721e683d8448c3dc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f255e7adb192bde06f72f9bde47f45016939c346",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f255e7adb192bde06f72f9bde47f45016939c346",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f255e7adb192bde06f72f9bde47f45016939c346",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f255e7adb192bde06f72f9bde47f45016939c346/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c0e6ca830c54fe6ebb6551d068633b13258062c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0e6ca830c54fe6ebb6551d068633b13258062c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c0e6ca830c54fe6ebb6551d068633b13258062c7"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 50,
      "deletions": 38
    },
    "files": [
      {
        "sha": "66c875bf0a9ccaa2e5ae37ccbd0fac383c16388d",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f255e7adb192bde06f72f9bde47f45016939c346/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f255e7adb192bde06f72f9bde47f45016939c346/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=f255e7adb192bde06f72f9bde47f45016939c346",
        "patch": "@@ -8,6 +8,7 @@\n \n #include <stdint.h>\n \n+class CCoinsViewCache;\n class CTransaction;\n class CValidationState;\n \n@@ -45,7 +46,7 @@ bool CheckTxCoinbase(const CTransaction& tx, CValidationState& state, const int6\n  * Fully verify a CTransaction.\n  * @TODO this is incomplete, among other things, the scripts are not checked yet.\n  */\n-bool VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight);\n+bool VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight, const CCoinsViewCache& inputs);\n \n } // namespace Consensus\n "
      },
      {
        "sha": "3e77f95b218d06f5ffecccbf07aa53b9259c5d30",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f255e7adb192bde06f72f9bde47f45016939c346/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f255e7adb192bde06f72f9bde47f45016939c346/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=f255e7adb192bde06f72f9bde47f45016939c346",
        "patch": "@@ -8,6 +8,9 @@\n #include \"script/interpreter.h\"\n #include \"validation.h\"\n \n+// TODO remove the following dependencies\n+#include \"coins.h\"\n+\n bool Consensus::CheckTxCoinbase(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight)\n {\n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n@@ -22,8 +25,16 @@ bool Consensus::CheckTxCoinbase(const CTransaction& tx, CValidationState& state,\n     return true;\n }\n \n-bool Consensus::VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight)\n+bool Consensus::VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight, const CCoinsViewCache& inputs)\n {\n+    // This could be moved to Consensus::CheckTxCoinbase() as an\n+    // optimization, but in a strict sense that would be a hardfork ?\n+    if (flags & TX_VERIFY_BIP30) { \n+        const CCoins* coins = inputs.AccessCoins(tx.GetHash());\n+        if (coins && !coins->IsPruned())\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-BIP30\");\n+    }\n+\n     if (tx.IsCoinBase())\n         return CheckTxCoinbase(tx, state, flags, nHeight);\n "
      },
      {
        "sha": "fb3d88851f684aab7e0fd0735d91733d98815df1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 36,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f255e7adb192bde06f72f9bde47f45016939c346/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f255e7adb192bde06f72f9bde47f45016939c346/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f255e7adb192bde06f72f9bde47f45016939c346",
        "patch": "@@ -2325,41 +2325,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     unsigned int flags = Consensus::GetFlags(block, chainparams.GetConsensus(), pindex, versionbitscache);\n \n-    // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n-    // unless those are already completely spent.\n-    // If such overwrites are allowed, coinbases and transactions depending upon those\n-    // can be duplicated to remove the ability to spend the first instance -- even after\n-    // being sent to another address.\n-    // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.\n-    // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n-    // already refuses previously-known transaction ids entirely.\n-    // This rule was originally applied to all blocks with a timestamp after March 15, 2012, 0:00 UTC.\n-    // Now that the whole chain is irreversibly beyond that time it is applied to all blocks except the\n-    // two in the chain that violate it. This prevents exploiting the issue against nodes during their\n-    // initial block download.\n-    bool fEnforceBIP30 = (!pindex->phashBlock) || // Enforce on CreateNewBlock invocations which don't have a hash.\n-                          !((pindex->nHeight==91842 && pindex->GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n-                           (pindex->nHeight==91880 && pindex->GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n-\n-    // Once BIP34 activated it was not possible to create new duplicate coinbases and thus other than starting\n-    // with the 2 existing duplicate coinbase pairs, not possible to create overwriting txs.  But by the\n-    // time BIP34 activated, in each of the existing pairs the duplicate coinbase had overwritten the first\n-    // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n-    // duplicate transactions descending from the known pairs either.\n-    // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n-    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n-    //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n-    fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n-\n-    if (fEnforceBIP30) {\n-        BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n-            const CCoins* coins = view.AccessCoins(tx.GetHash());\n-            if (coins && !coins->IsPruned())\n-                return state.DoS(100, error(\"ConnectBlock(): tried to overwrite transaction\"),\n-                                 REJECT_INVALID, \"bad-txns-BIP30\");\n-        }\n-    }\n-\n     // TODO unify all consensus flags, see PR #7779\n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n     int nLockTimeFlags = 0;\n@@ -2387,7 +2352,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n         const CTransaction &tx = block.vtx[i];\n-        if (!Consensus::VerifyTx(tx, state, flags, nHeight))\n+        if (!Consensus::VerifyTx(tx, state, flags, nHeight, view))\n             return error(\"%s: Consensus::VerifyTx: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n \n         if (!tx.IsCoinBase())"
      },
      {
        "sha": "320bd94810d2bf5989c868c979ce75ea5618bacb",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f255e7adb192bde06f72f9bde47f45016939c346/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f255e7adb192bde06f72f9bde47f45016939c346/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=f255e7adb192bde06f72f9bde47f45016939c346",
        "patch": "@@ -97,6 +97,9 @@ enum\n \n     /* BIP34: Verify coinbase transactions commit to the current height. */\n     TX_COINBASE_VERIFY_BIP34 = (1U << 13),\n+\n+    /* BIP30: See Consensus::GetFlags(), Consensus::VerifyTx() and http://r6.ca/blog/20120206T005236Z.html for more information */\n+    TX_VERIFY_BIP30 = (1U << 14),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);"
      },
      {
        "sha": "7e67d4803cb984f1d2efee075f723bd856f84c0b",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f255e7adb192bde06f72f9bde47f45016939c346/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f255e7adb192bde06f72f9bde47f45016939c346/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=f255e7adb192bde06f72f9bde47f45016939c346",
        "patch": "@@ -7,6 +7,9 @@\n #include \"consensus/params.h\"\n #include \"script/interpreter.h\"\n \n+// TODO remove the following dependencies\n+#include \"chain.h\"\n+\n const struct BIP9DeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION_BITS_DEPLOYMENTS] = {\n     {\n         /*.name =*/ \"testdummy\",\n@@ -174,6 +177,35 @@ int64_t Consensus::GetFlags(const CBlock& block, const Consensus::Params& consen\n \n     int64_t flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n \n+    // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n+    // unless those are already completely spent.\n+    // If such overwrites are allowed, coinbases and transactions depending upon those\n+    // can be duplicated to remove the ability to spend the first instance -- even after\n+    // being sent to another address.\n+    // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.\n+    // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n+    // already refuses previously-known transaction ids entirely.\n+    // This rule was originally applied to all blocks with a timestamp after March 15, 2012, 0:00 UTC.\n+    // Now that the whole chain is irreversibly beyond that time it is applied to all blocks except the\n+    // two in the chain that violate it. This prevents exploiting the issue against nodes during their\n+    // initial block download.\n+    bool fEnforceBIP30 = (!pindexPrev->phashBlock) || // Enforce on CreateNewBlock invocations which don't have a hash.\n+                          !((pindexPrev->nHeight==91842 && pindexPrev->GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n+                           (pindexPrev->nHeight==91880 && pindexPrev->GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n+\n+    // Once BIP34 activated it was not possible to create new duplicate coinbases and thus other than starting\n+    // with the 2 existing duplicate coinbase pairs, not possible to create overwriting txs.  But by the\n+    // time BIP34 activated, in each of the existing pairs the duplicate coinbase had overwritten the first\n+    // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n+    // duplicate transactions descending from the known pairs either.\n+    // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n+    if (fEnforceBIP30) {\n+        CBlockIndex *pindexBIP34height = pindexPrev->pprev->GetAncestor(consensusParams.BIP34Height);\n+        //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n+        if ((fEnforceBIP30) && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == consensusParams.BIP34Hash)))\n+            flags |= TX_VERIFY_BIP30;\n+    }\n+\n     // Start enforcing height in coinbase (BIP34), for block.nVersion=2 blocks,\n     // when 75% of the network has upgraded:\n     if (block.nVersion >= 2 && IsSuperMajority(2, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams))"
      }
    ]
  },
  {
    "sha": "d41d400e9a803372b402a054e7f4508f87994c0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDFkNDAwZTlhODAzMzcyYjQwMmEwNTRlN2Y0NTA4Zjg3OTk0YzBh",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-15T17:38:29Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-16T13:03:27Z"
      },
      "message": "Refactor: BIP113: Move from main::ContextualCheckBlock() to Consensus::VerifyTx()\n\n- LOCKTIME_MEDIAN_TIME_PAST is unified with the rest of consensus flags\n\n- The flag calculations are moved to Consensus::GetFlags()\n\n- The checks is moved from main::ContextualCheckBlock() to\nmain::ConnectBlock(), calling Consensus::VerifyTx() from\nconsensus/tx_verify.cpp in its main loop.",
      "tree": {
        "sha": "72f4daa962a678e5931833713d6dbafa208fc138",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72f4daa962a678e5931833713d6dbafa208fc138"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d41d400e9a803372b402a054e7f4508f87994c0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d41d400e9a803372b402a054e7f4508f87994c0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d41d400e9a803372b402a054e7f4508f87994c0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d41d400e9a803372b402a054e7f4508f87994c0a/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f255e7adb192bde06f72f9bde47f45016939c346",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f255e7adb192bde06f72f9bde47f45016939c346",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f255e7adb192bde06f72f9bde47f45016939c346"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 21,
      "deletions": 27
    },
    "files": [
      {
        "sha": "17c4f7a5d3f236a5ebebc02dcd4c203e81069ee6",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d41d400e9a803372b402a054e7f4508f87994c0a/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d41d400e9a803372b402a054e7f4508f87994c0a/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=d41d400e9a803372b402a054e7f4508f87994c0a",
        "patch": "@@ -27,9 +27,6 @@ static const int COINBASE_MATURITY = 100;\n enum {\n     /* Interpret sequence numbers as relative lock-time constraints. */\n     LOCKTIME_VERIFY_SEQUENCE = (1 << 0),\n-\n-    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n-    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n };\n \n /** Transaction validation functions */\n@@ -46,7 +43,7 @@ bool CheckTxCoinbase(const CTransaction& tx, CValidationState& state, const int6\n  * Fully verify a CTransaction.\n  * @TODO this is incomplete, among other things, the scripts are not checked yet.\n  */\n-bool VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight, const CCoinsViewCache& inputs);\n+bool VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight, const int64_t nMedianTimePast, const int64_t nBlockTime, const CCoinsViewCache& inputs);\n \n } // namespace Consensus\n "
      },
      {
        "sha": "506a1f42791cfe0893c46759b6ce69efd86804f6",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d41d400e9a803372b402a054e7f4508f87994c0a/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d41d400e9a803372b402a054e7f4508f87994c0a/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=d41d400e9a803372b402a054e7f4508f87994c0a",
        "patch": "@@ -9,6 +9,7 @@\n #include \"validation.h\"\n \n // TODO remove the following dependencies\n+#include \"main.h\" // temporary circular dependency to delay moving IsFinalTx()\n #include \"coins.h\"\n \n bool Consensus::CheckTxCoinbase(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight)\n@@ -25,8 +26,15 @@ bool Consensus::CheckTxCoinbase(const CTransaction& tx, CValidationState& state,\n     return true;\n }\n \n-bool Consensus::VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight, const CCoinsViewCache& inputs)\n+bool Consensus::VerifyTx(const CTransaction& tx, CValidationState& state, const int64_t flags, const int64_t nHeight, const int64_t nMedianTimePast, const int64_t nBlockTime, const CCoinsViewCache& inputs)\n {\n+    int64_t nLockTimeCutoff = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n+                              ? nMedianTimePast\n+                              : nBlockTime;\n+\n+    if (!IsFinalTx(tx, nHeight, nLockTimeCutoff))\n+        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n+\n     // This could be moved to Consensus::CheckTxCoinbase() as an\n     // optimization, but in a strict sense that would be a hardfork ?\n     if (flags & TX_VERIFY_BIP30) { "
      },
      {
        "sha": "08fed35ee1271f318c6d5e27a3fca4b3813a6a93",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 19,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d41d400e9a803372b402a054e7f4508f87994c0a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d41d400e9a803372b402a054e7f4508f87994c0a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d41d400e9a803372b402a054e7f4508f87994c0a",
        "patch": "@@ -2352,7 +2352,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n         const CTransaction &tx = block.vtx[i];\n-        if (!Consensus::VerifyTx(tx, state, flags, nHeight, view))\n+        if (!Consensus::VerifyTx(tx, state, flags, nHeight, pindex->GetMedianTimePast(), block.GetBlockTime(), view))\n             return error(\"%s: Consensus::VerifyTx: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n \n         if (!tx.IsCoinBase())\n@@ -3465,26 +3465,8 @@ bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& sta\n \n bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIndex * const pindexPrev)\n {\n-    const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n \n-    // Start enforcing BIP113 (Median Time Past) using versionbits logic.\n-    int nLockTimeFlags = 0;\n-    if (VersionBitsState(pindexPrev, consensusParams, Consensus::DEPLOYMENT_CSV, versionbitscache) == THRESHOLD_ACTIVE) {\n-        nLockTimeFlags |= LOCKTIME_MEDIAN_TIME_PAST;\n-    }\n-\n-    int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n-                              ? pindexPrev->GetMedianTimePast()\n-                              : block.GetBlockTime();\n-\n-    // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n-        if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n-            return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n-        }\n-    }\n-\n     // Validation for witness commitments.\n     // * We compute the witness hash (which is the hash including witnesses) of all the block's transactions, except the\n     //   coinbase (where 0x0000....0000 is used instead)."
      },
      {
        "sha": "0cedd446b627dd5c35b343d3fd184fc4fdf5fcc0",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d41d400e9a803372b402a054e7f4508f87994c0a/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d41d400e9a803372b402a054e7f4508f87994c0a/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=d41d400e9a803372b402a054e7f4508f87994c0a",
        "patch": "@@ -95,11 +95,14 @@ enum\n     //\n     SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM = (1U << 12),\n \n+    /* BIP30: See Consensus::GetFlags(), Consensus::VerifyTx() and http://r6.ca/blog/20120206T005236Z.html for more information */\n+    TX_VERIFY_BIP30 = (1U << 13),\n+\n     /* BIP34: Verify coinbase transactions commit to the current height. */\n-    TX_COINBASE_VERIFY_BIP34 = (1U << 13),\n+    TX_COINBASE_VERIFY_BIP34 = (1U << 14),\n \n-    /* BIP30: See Consensus::GetFlags(), Consensus::VerifyTx() and http://r6.ca/blog/20120206T005236Z.html for more information */\n-    TX_VERIFY_BIP30 = (1U << 14),\n+    /* BIP113: Use GetMedianTimePast() instead of nTime for end point timestamp. */\n+    LOCKTIME_MEDIAN_TIME_PAST = (1U << 15),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);"
      },
      {
        "sha": "da0f2b567fadad82119acf6b490b152520a14edc",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d41d400e9a803372b402a054e7f4508f87994c0a/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d41d400e9a803372b402a054e7f4508f87994c0a/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=d41d400e9a803372b402a054e7f4508f87994c0a",
        "patch": "@@ -223,6 +223,10 @@ int64_t Consensus::GetFlags(const CBlock& block, const Consensus::Params& consen\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n     }\n \n+    // Start enforcing BIP113 (Median Time Past) using versionbits logic.\n+    if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_CSV, cache) == THRESHOLD_ACTIVE)\n+        flags |= LOCKTIME_MEDIAN_TIME_PAST;\n+\n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n     if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_CSV, cache) == THRESHOLD_ACTIVE) {\n         flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;"
      }
    ]
  },
  {
    "sha": "6c6199be3cf9c912f0c9f861c290719414552d6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzYxOTliZTNjZjljOTEyZjBjOWY4NjFjMjkwNzE5NDE0NTUyZDZk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-13T16:17:33Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-16T13:07:19Z"
      },
      "message": "Consensus: Refactor: BIP68: Unify LOCKTIME_VERIFY_SEQUENCE in GetFlags()",
      "tree": {
        "sha": "93ca334fc472fc0c5687d3666da4bf3aae9aff7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93ca334fc472fc0c5687d3666da4bf3aae9aff7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c6199be3cf9c912f0c9f861c290719414552d6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6199be3cf9c912f0c9f861c290719414552d6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c6199be3cf9c912f0c9f861c290719414552d6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6199be3cf9c912f0c9f861c290719414552d6d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d41d400e9a803372b402a054e7f4508f87994c0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d41d400e9a803372b402a054e7f4508f87994c0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d41d400e9a803372b402a054e7f4508f87994c0a"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 5,
      "deletions": 15
    },
    "files": [
      {
        "sha": "272a0953faea3950ead4bcb7ba33753ff9aadebc",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c6199be3cf9c912f0c9f861c290719414552d6d/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c6199be3cf9c912f0c9f861c290719414552d6d/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=6c6199be3cf9c912f0c9f861c290719414552d6d",
        "patch": "@@ -23,12 +23,6 @@ static const int64_t MAX_BLOCK_SIGOPS_COST = 80000;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n-/** Flags for nSequence and nLockTime locks */\n-enum {\n-    /* Interpret sequence numbers as relative lock-time constraints. */\n-    LOCKTIME_VERIFY_SEQUENCE = (1 << 0),\n-};\n-\n /** Transaction validation functions */\n \n namespace Consensus {"
      },
      {
        "sha": "75f714c37b6b8651aaff058bc6bbc8b11216330e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c6199be3cf9c912f0c9f861c290719414552d6d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c6199be3cf9c912f0c9f861c290719414552d6d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=6c6199be3cf9c912f0c9f861c290719414552d6d",
        "patch": "@@ -2325,13 +2325,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     unsigned int flags = Consensus::GetFlags(block, chainparams.GetConsensus(), pindex, versionbitscache);\n \n-    // TODO unify all consensus flags, see PR #7779\n-    // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n-    int nLockTimeFlags = 0;\n-    if (VersionBitsState(pindex->pprev, chainparams.GetConsensus(), Consensus::DEPLOYMENT_CSV, versionbitscache) == THRESHOLD_ACTIVE) {\n-        nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;\n-    }\n-\n     int64_t nTime2 = GetTimeMicros(); nTimeForks += nTime2 - nTime1;\n     LogPrint(\"bench\", \"    - Fork checks: %.2fms [%.2fs]\\n\", 0.001 * (nTime2 - nTime1), nTimeForks * 0.000001);\n \n@@ -2380,7 +2373,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n                 }\n             }\n \n-            if (!SequenceLocks(tx, nLockTimeFlags, &prevheights, *pindex)) {\n+            if (!SequenceLocks(tx, flags, &prevheights, *pindex)) {\n                 return state.DoS(100, error(\"%s: contains a non-BIP68-final transaction\", __func__),\n                                  REJECT_INVALID, \"bad-txns-nonfinal\");\n             }"
      },
      {
        "sha": "38bd7bf6e7c5f1d555586f807a0c04df008e1f8f",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c6199be3cf9c912f0c9f861c290719414552d6d/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c6199be3cf9c912f0c9f861c290719414552d6d/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=6c6199be3cf9c912f0c9f861c290719414552d6d",
        "patch": "@@ -103,6 +103,9 @@ enum\n \n     /* BIP113: Use GetMedianTimePast() instead of nTime for end point timestamp. */\n     LOCKTIME_MEDIAN_TIME_PAST = (1U << 15),\n+\n+    /* BIP68: Interpret sequence numbers as relative lock-time constraints. */\n+    LOCKTIME_VERIFY_SEQUENCE = (1 << 16),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);"
      },
      {
        "sha": "37aacb13400a92e3b665269d087eebf420c2c89d",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c6199be3cf9c912f0c9f861c290719414552d6d/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c6199be3cf9c912f0c9f861c290719414552d6d/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=6c6199be3cf9c912f0c9f861c290719414552d6d",
        "patch": "@@ -229,7 +229,7 @@ int64_t Consensus::GetFlags(const CBlock& block, const Consensus::Params& consen\n \n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n     if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_CSV, cache) == THRESHOLD_ACTIVE) {\n-        flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n+        flags |= (SCRIPT_VERIFY_CHECKSEQUENCEVERIFY & LOCKTIME_VERIFY_SEQUENCE);\n     }\n \n     // Start enforcing WITNESS rules using versionbits logic."
      }
    ]
  },
  {
    "sha": "db9f0af4877535f1bf54c46fe0cd0f637b77a3d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjlmMGFmNDg3NzUzNWYxYmY1NGM0NmZlMGNkMGY2MzdiNzdhM2Q4",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-13T14:19:34Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-16T13:14:24Z"
      },
      "message": "fixup! style: shorten Consensus::GetFlags()",
      "tree": {
        "sha": "2114cbadf0de0aec16b93cb3295df879b8334691",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2114cbadf0de0aec16b93cb3295df879b8334691"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db9f0af4877535f1bf54c46fe0cd0f637b77a3d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db9f0af4877535f1bf54c46fe0cd0f637b77a3d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db9f0af4877535f1bf54c46fe0cd0f637b77a3d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db9f0af4877535f1bf54c46fe0cd0f637b77a3d8/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c6199be3cf9c912f0c9f861c290719414552d6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6199be3cf9c912f0c9f861c290719414552d6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c6199be3cf9c912f0c9f861c290719414552d6d"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 4,
      "deletions": 8
    },
    "files": [
      {
        "sha": "66a99bf24af1d9f0e459e0387114e9b63fc07d32",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db9f0af4877535f1bf54c46fe0cd0f637b77a3d8/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db9f0af4877535f1bf54c46fe0cd0f637b77a3d8/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=db9f0af4877535f1bf54c46fe0cd0f637b77a3d8",
        "patch": "@@ -213,29 +213,25 @@ int64_t Consensus::GetFlags(const CBlock& block, const Consensus::Params& consen\n     \n     // Start enforcing the DERSIG (BIP66) rules, for block.nVersion=3 blocks,\n     // when 75% of the network has upgraded:\n-    if (block.nVersion >= 3 && IsSuperMajority(3, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams)) {\n+    if (block.nVersion >= 3 && IsSuperMajority(3, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams))\n         flags |= SCRIPT_VERIFY_DERSIG;\n-    }\n \n     // Start enforcing CHECKLOCKTIMEVERIFY, (BIP65) for block.nVersion=4\n     // blocks, when 75% of the network has upgraded:\n-    if (block.nVersion >= 4 && IsSuperMajority(4, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams)) {\n+    if (block.nVersion >= 4 && IsSuperMajority(4, pindexPrev->pprev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams))\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n-    }\n \n     // Start enforcing BIP113 (Median Time Past) using versionbits logic.\n     if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_CSV, cache) == THRESHOLD_ACTIVE)\n         flags |= LOCKTIME_MEDIAN_TIME_PAST;\n \n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n-    if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_CSV, cache) == THRESHOLD_ACTIVE) {\n+    if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_CSV, cache) == THRESHOLD_ACTIVE)\n         flags |= (SCRIPT_VERIFY_CHECKSEQUENCEVERIFY & LOCKTIME_VERIFY_SEQUENCE);\n-    }\n \n     // Start enforcing WITNESS rules using versionbits logic.\n-    if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, cache) == THRESHOLD_ACTIVE) {\n+    if (VersionBitsState(pindexPrev->pprev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, cache) == THRESHOLD_ACTIVE)\n         flags |= SCRIPT_VERIFY_WITNESS;\n-    }\n \n     return flags;\n }"
      }
    ]
  },
  {
    "sha": "8c893cfcb949ffd03d8951f8ae916e7a0a2293ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Yzg5M2NmY2I5NDlmZmQwM2Q4OTUxZjhhZTkxNmU3YTBhMjI5M2Vk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-16T13:30:55Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-16T13:30:55Z"
      },
      "message": "Introduce VerifyBlockVersion() to make IsSuperMajority() static\n\nThis way IsSuperMajority() is completely hidden in versionbits.",
      "tree": {
        "sha": "1472dea9aa088df69a1b3125dae7b41b438d060c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1472dea9aa088df69a1b3125dae7b41b438d060c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db9f0af4877535f1bf54c46fe0cd0f637b77a3d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db9f0af4877535f1bf54c46fe0cd0f637b77a3d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db9f0af4877535f1bf54c46fe0cd0f637b77a3d8"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 20,
      "deletions": 7
    },
    "files": [
      {
        "sha": "800ed4133fffc1d51d257f5f5e7d28184aee49e8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8c893cfcb949ffd03d8951f8ae916e7a0a2293ed",
        "patch": "@@ -3447,11 +3447,8 @@ bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& sta\n     if (block.GetBlockTime() > nAdjustedTime + 2 * 60 * 60)\n         return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n \n-    // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n-    for (int32_t version = 2; version < 5; ++version) // check for version 2, 3 and 4 upgrades\n-        if (block.nVersion < version && IsSuperMajority(version, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n-            return state.Invalid(false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", version - 1),\n-                                 strprintf(\"rejected nVersion=0x%08x block\", version - 1));\n+    if (!VerifyBlockVersion(block.nVersion, state, consensusParams, pindexPrev))\n+        return false;\n \n     return true;\n }"
      },
      {
        "sha": "56c6c61cce9ee36f43c4e37362261e54706f3805",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=8c893cfcb949ffd03d8951f8ae916e7a0a2293ed",
        "patch": "@@ -5,6 +5,7 @@\n #include \"versionbits.h\"\n \n #include \"consensus/params.h\"\n+#include \"consensus/validation.h\"\n #include \"script/interpreter.h\"\n \n // TODO remove the following dependencies\n@@ -235,3 +236,14 @@ int64_t Consensus::GetFlags(const CBlock& block, const Consensus::Params& consen\n \n     return flags;\n }\n+\n+bool VerifyBlockVersion(int32_t nBlockVersion, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n+{\n+    // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n+    for (int32_t version = 2; version < 5; ++version) // check for version 2, 3 and 4 upgrades\n+        if (nBlockVersion < version && IsSuperMajority(version, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+            return state.Invalid(false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", version - 1),\n+                                 strprintf(\"rejected nVersion=0x%08x block\", version - 1));\n+    \n+    return true;\n+}"
      },
      {
        "sha": "454275f77d67406bafb9358f9ac2f698ab584d02",
        "filename": "src/versionbits.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed/src/versionbits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c893cfcb949ffd03d8951f8ae916e7a0a2293ed/src/versionbits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.h?ref=8c893cfcb949ffd03d8951f8ae916e7a0a2293ed",
        "patch": "@@ -8,6 +8,8 @@\n #include \"chain.h\"\n #include <map>\n \n+class CValidationState;\n+\n /** What block version to use for new blocks (pre versionbits) */\n static const int32_t VERSIONBITS_LAST_OLD_BLOCK_VERSION = 4;\n /** What bits to set in version for versionbits blocks */\n@@ -75,7 +77,9 @@ int64_t GetFlags(const CBlock& block, const Consensus::Params& consensusParams,\n \n } // namespace Consensus\n \n-// TODO: make static again\n-bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams);\n+/**\n+ * Called from ContextualCheckBlockHeader() to reject outdated version blocks.\n+ */\n+bool VerifyBlockVersion(int32_t nBlockVersion, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\n \n #endif"
      }
    ]
  }
]