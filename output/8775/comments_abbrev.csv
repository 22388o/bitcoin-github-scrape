jonasschnelli,2016-09-21T13:07:21Z,I don't like the coupling and the `#ifdef ENABLE_WALLET` in `rpc/server.cpp|.h`.\nI'd recommend to keep the `CRPCRequestInfo` wallet-free.\n\nI think we should pack the request path (URI) into the `CRPCRequestInfo` and or informations about the authentication (in case we want to distinct wallets based on authentication).\nThen I think there should be a method in `wallet.cpp` (or in `rpcwallet.cpp`,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-248606601,248606601,
jonasschnelli,2016-09-21T13:09:42Z,General ConceptACK on a `CRPCRequestInfo` for the RPC table commands.\nMaybe it could also include the `UniValue params` and `fHelp`?\n,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-248607190,248607190,
luke-jr,2016-09-21T20:40:26Z,"> I think we should pack the request path (URI) into the CRPCRequestInfo and or informations about the authentication (in case we want to distinct wallets based on authentication).\n> Then I think there should be a method in wallet.cpp (or in rpcwallet.cpp) that maps a CWallet \* pointer from a given URI, Auth-Info or the complete CRPCRequestInfo instance.\n\nThat sounds nice, but greatly complica",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-248736144,248736144,
MarcoFalke,2016-10-19T15:16:41Z,I think this can be closed after #8788?\n,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-254844599,254844599,
jonasschnelli,2016-10-19T15:28:54Z,Closing in favor of merged #8788\n,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-254848523,254848523,
luke-jr,2016-10-25T09:14:49Z,Rebased and refactored based on @jonasschnelli 's idea.\n,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-255981434,255981434,
laanwj,2016-10-25T11:18:26Z,"Makes sense, utACK ab5ce98\n",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-256007423,256007423,
luke-jr,2016-11-12T01:44:44Z,Rebased and addressed nit\n,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-260093239,260093239,
instagibbs,2017-01-04T18:25:55Z,utACK 7de55733c5690350c48ec94660b5be56fbb5eb39,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-270446395,270446395,
luke-jr,2017-01-05T22:53:00Z,"Minor change: Forward-declared CWallet even for non-wallet builds so it can be used in a pointer type, avoiding unnecessary casting.",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-270781446,270781446,
gmaxwell,2017-01-07T15:18:41Z,So in some cases in the RPC you get the wallet pointer from json but then the check if it's available is far below.  This is begging for someone to insert code that uses a potentially null pointer between to two and doesn't notice because their function doesn't get tested with a missing wallet.  I would recommend moving the creation of that local pointer down to the point where you're going to tes,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-271089411,271089411,
luke-jr,2017-01-07T19:15:57Z,"I liked the TryGetWalletForJSONRPCRequest/GetWalletForJSONRPCRequest refactor idea, but I don't see any clean way to do it without changing the `help` behaviours.\n\nSo I moved the one case EnsureWalletIsAvailable was delayed up, and removed the blank line between them and GetWalletForJSONRPCRequest.",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-271103735,271103735,
gmaxwell,2017-01-08T08:36:55Z,"@luke-jr Looks good to me, will test as soon as you update for matt's latest comments.",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-271138168,271138168,
luke-jr,2017-01-08T21:17:02Z,"Made changes requested by @TheBlueMatt, and rebased to resolve conflict. Also includes a quick sanity check that -wallet doesn't include path separators.",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-271180110,271180110,
TheBlueMatt,2017-01-09T16:59:46Z,"While you're at it, can you call SanitizeString (in addition to the ""/\\"" check) on the wallet param?",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-271340666,271340666,
TheBlueMatt,2017-01-09T18:03:19Z,utACK 7d1228bf7f1c398d9fcda6161e6aebfc5e5e3700,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-271357593,271357593,
gmaxwell,2017-01-11T22:12:53Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-272012262,272012262,
gmaxwell,2017-01-12T06:34:44Z,ACK.,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-272087816,272087816,
fanquake,2017-01-12T13:04:53Z,Needs rebasing again.,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-272158119,272158119,
luke-jr,2017-01-12T16:57:21Z,Rebased yet again.,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-272218728,272218728,
gmaxwell,2017-01-15T04:48:48Z,still ACK,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-272673655,272673655,
jonasschnelli,2017-03-02T19:28:15Z,"Great PR. I think we should get this in as soon as possible.\nutACK d678771c660c936a6222dd43a204cb2699100f3e",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-283753931,283753931,
laanwj,2017-03-03T12:38:39Z,utACK d678771,https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-283943067,283943067,
jtimon,2017-03-23T20:31:22Z,"By the way, I reviewed this partially after merged when rebasing #9845 (making it mostly pointless since most was done here already).\n",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-288850691,288850691,
adneerav,2019-02-05T07:39:27Z,"Hello @luke-jr ,\n\nIs there any way where we can increase the number of wallets to be in loaded state at same time.As rightnow its like if I load wallet more than 100 or 150 daemon is getting crashed/stopped. I am trying to load/unload wallet dynamically using RPC.\n\nWhat i tried is incraesing the `set_lk_max_lockers` to 400000 and also added\n`set_lg_regionmax 1048576` But still same thing",https://github.com/bitcoin/bitcoin/pull/8775#issuecomment-460541016,460541016,
paveljanik,2016-09-21T16:17:01Z,`*&`?\n,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r79872956,79872956,src/rpc/misc.cpp
luke-jr,2016-09-21T19:30:55Z,"Yes, pwallet is an alias to reqinfo.wallet which is of type CWallet*.\n",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r79913896,79913896,src/rpc/misc.cpp
laanwj,2016-10-25T11:19:35Z,"Not sure how this can pass the build w/ `--disable-wallet`, but this should be bracketed with `#ifdef ENABLE_WALLET`\n",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r84880152,84880152,src/rpc/misc.cpp
TheBlueMatt,2017-01-06T17:10:15Z,I'd kinda prefer we add another declaration outside of a header in an unrelated file...can we keep it in server.h and ifdef ENABLE_WALLET it?,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r94981313,94981313,src/rpc/rawtransaction.cpp
luke-jr,2017-01-06T17:15:50Z,I suppose we could. But then it's more likely to get used in new code (which I think we want to discourage?),https://github.com/bitcoin/bitcoin/pull/8775#discussion_r94982250,94982250,src/rpc/rawtransaction.cpp
TheBlueMatt,2017-01-06T17:17:52Z,"I'd think we can (and, more importantly, would) still nag people submitting PRs which add more uses of it outside of src/wallet/rpc*.",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r94982599,94982599,src/rpc/rawtransaction.cpp
TheBlueMatt,2017-01-06T17:18:13Z,"Here as well.\n",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r94982649,94982649,src/rpc/misc.cpp
TheBlueMatt,2017-01-06T17:30:53Z,Can we move these to some rpc.h in src/wallet? Why are we declaring functions in another file from the definition if they're both in src/wallet???,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r94984718,94984718,src/wallet/rpcdump.cpp
TheBlueMatt,2017-01-06T17:34:56Z,"Can you document this function somewhere (also probably move its definition to src/wallet/rpcwallet.h) - a few places in src/wallet assume it always returns non-NULL but this is not documented (I havent looked at the actual multi-wallet PR, but does this function then throw an RPC exception if you ask for a wallet that isnt loaded, or does it return NULL then)?",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r94985339,94985339,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-01-07T21:49:43Z,"Note that there are a ton of uses of pwalletMain in ImportScript after the first commit (""RPC/Wallet: Pass CWallet as pointer to helper functions"") which are fixed in the next (""RPC: Do all wallet access through new GetWalletForJSONRPCRequest"") when they belong in the first.",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r95066473,95066473,src/wallet/rpcdump.cpp
TheBlueMatt,2017-01-07T22:16:04Z,"Note that there are a ton of uses of pwalletMain in ListReceived after the first commit (""RPC/Wallet: Pass CWallet as pointer to helper functions"") which are fixed in the next (""RPC: Do all wallet access through new GetWalletForJSONRPCRequest"") when they belong in the first.",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r95066866,95066866,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-01-07T23:01:33Z,I super dont like the fact that the pointer to the wallet will end up in debug.log if you have debug=rpc enabled.,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r95067629,95067629,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-01-07T23:07:42Z,nit: I believe you can remove the PAIRTYPE and replace with std::pair since we're not using BOOST_FOREACH now.,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r95067711,95067711,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-01-07T23:11:30Z,nit: Here as well (no PAIRTYPE).,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r95067762,95067762,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-01-07T23:12:10Z,nit: Here as well (no PAIRTYPE).,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r95067777,95067777,src/wallet/rpcwallet.cpp
BlockMechanic,2017-02-16T23:42:24Z,"Should this not be ""count"" i.e for multiple wallet files to be created ? Adding perhaps a for loop to iterate over required num of wallets? ",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r101655579,101655579,src/wallet/wallet.cpp
luke-jr,2017-02-16T23:46:32Z,"No, because this PR is not multiwallet...",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r101656142,101656142,src/wallet/wallet.cpp
ryanofsky,2017-02-27T19:00:22Z,Seems like this could be a pointer to a const CWallet. Same for some other cases. Would suggest using `const CWallet*` instead of `CWallet*` where possible for more safety and clarity.,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r103283605,103283605,src/rpc/misc.cpp
ryanofsky,2017-02-27T19:07:12Z,">Note that there are a ton of uses of pwalletMain in ImportScript after the first commit (""RPC/Wallet: Pass CWallet as pointer to helper functions"") which are fixed in the next (""RPC: Do all wallet access through new GetWalletForJSONRPCRequest"") when they belong in the first.\n\nI'm not seeing function signatures changes in c68b5a819282363282fa06724146494717882938 `RPC: Do all wallet access thro",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r103285144,103285144,src/wallet/rpcdump.cpp
ryanofsky,2017-02-27T19:29:30Z,"Maybe squash commit 6033b43f8cfd612da436c73ff0508a00a8fb0dd5 `Move wallet RPC declarations to rpcwallet.h` into commit f757a41d7959f1ef5740c57b712fb3b89f233dcd `RPC/Wallet: Pass CWallet as pointer to helper functions`, to just add to right place instead of adding and moving.",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r103290363,103290363,src/rpc/server.h
ryanofsky,2017-02-27T19:50:02Z,"Note to reviewers: This commit (d77ad6d41666b4c41abe1ba3b63300df1903643e `RPC: Do all wallet access through new GetWalletForJSONRPCRequest`) is trivial to review if you configure your diff tool to ignore the pwallet->pwalletmain renames (much shorter and no changed lines, only inserted).",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r103295284,103295284,src/rpc/misc.cpp
ryanofsky,2017-02-27T19:55:45Z,"> I super dont like the fact that the pointer to the wallet will end up in debug.log if you have debug=rpc enabled.\n\nIs fixed in later commit c42f3a5ac3235be127bd3a63454784c3d9a00b02 `Wallet/RPC: Use filename rather than CWallet pointer, for lockwallet RPCRunLater job name`",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r103296657,103296657,src/wallet/rpcwallet.cpp
ryanofsky,2017-02-27T19:57:20Z,Is the syncrhonization not needed anymore?,https://github.com/bitcoin/bitcoin/pull/8775#discussion_r103297051,103297051,src/wallet/rpcwallet.cpp
ryanofsky,2017-02-27T19:59:00Z,"Commit 09f30767695fd585b68fa100d770c9a0a4209b51 `Reformat touched lines with C++11` looks fine, but it doesn't appear that these changes have anything to do with C++11. Maybe clarify commit message.",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r103297477,103297477,src/rpc/misc.cpp
ryanofsky,2017-02-27T20:21:17Z,"This doesn't actually seem to be needed since CWallet is also forward declared in init.h, but maybe it is better to keep it.",https://github.com/bitcoin/bitcoin/pull/8775#discussion_r103302384,103302384,src/rpc/misc.cpp
