BitcoinPullTester,2014-09-08T16:04:53Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4873_89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54843687,54843687,
gavinandresen,2014-09-08T16:36:50Z,Tested ACK.\n,https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54848531,54848531,
sipa,2014-09-08T21:32:16Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54890616,54890616,
gmaxwell,2014-09-08T23:14:25Z,ACK.\n,https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54901493,54901493,
gavinandresen,2014-09-09T15:47:44Z,"Bah: did some more testing today with MAX_ORPHAN_TRANSACTIONS = 4 and got a core dump.\n\nI'm running with this fix; so far so good:\n\n```\ndiff --git a/src/main.cpp b/src/main.cpp\nindex 2e24eb9..10f9ba9 100644\n--- a/src/main.cpp\n+++ b/src/main.cpp\n@@ -498,6 +498,8 @@ void static EraseOrphanTx(uint256 hash)\n     BOOST_FOREACH(const CTxIn& txin, it->second.vin)\n     {\n         map<uint256, ",https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54990399,54990399,
sipa,2014-09-09T15:51:44Z,"@gavinandresen Ugh, that's not good. That means the orphan pool is inconsistent.\n",https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54991041,54991041,
laanwj,2014-09-09T15:53:54Z,"Good sanity check to add, but indeed in principle it shouldn't happen.\n",https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54991396,54991396,
sipa,2014-09-09T16:02:47Z,"If we don't understand why the orphan pool is getting inconsistent, I think we should revert instead of patching it up (an assert would be fine, though).\n",https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54992838,54992838,
laanwj,2014-09-09T16:09:38Z,"We have no reason to think that this is caused by this change. Before, this problem would not have been caught (or have resulted in a crash) because the record was created every time.\n\n```\nmapOrphanTransactionsByPrev[txin.prevout.hash].erase(hash);\n```\n\nSo all that @gavinandresen's patch would do is restore the old behavior. But indeed, that would ignore the inconsistency.\n",https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-54993937,54993937,
gavinandresen,2014-09-09T17:32:46Z,"Looking at this more closely, I'm confident my proposed fix is correct.\n\nScenario 1 that tickles the bug:  Orphan transaction that spends two inputs of the same transaction.\nI think two orphan transactions that spend the same output of a parent transaction would also cause the crash.\n\nThe memory pool is consistent-- mapOrphanTransactions/mapOrphanTransactionsByPrev is just a big bag of transa",https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-55006205,55006205,
sipa,2014-09-09T18:11:43Z,"By inconsistent I just meant a discrepance between mapOrphanTransactions and mapOrphanTransactionsByPrev. But indeed, as they're identified by txid and not txid:index, a transaction spending two outputs from the same transactions does explain it. ACK on the change.\n",https://github.com/bitcoin/bitcoin/pull/4873#issuecomment-55010930,55010930,
