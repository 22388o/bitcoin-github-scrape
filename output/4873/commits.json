[
  {
    "sha": "89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWQ5MWY2YWE3NGRhNWUzZmIxYmJkMDhjZTIwYWIzYjlkNTkzYWJk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-09-08T15:37:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-09-08T15:38:43Z"
      },
      "message": "Avoid repeated lookups in mapOrphanTransactions and mapOrphanTransactionsByPrev",
      "tree": {
        "sha": "d4063afcc0ea73324a9555c21009f13ab765be9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4063afcc0ea73324a9555c21009f13ab765be9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df623d83dad6aa39141b066ebd2f870ee05acf41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df623d83dad6aa39141b066ebd2f870ee05acf41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df623d83dad6aa39141b066ebd2f870ee05acf41"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "2e24eb950f740d0102adf004243d3fae7ac8c14d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 10,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=89d91f6aa74da5e3fb1bbd08ce20ab3b9d593abd",
        "patch": "@@ -492,16 +492,17 @@ bool AddOrphanTx(const CTransaction& tx)\n \n void static EraseOrphanTx(uint256 hash)\n {\n-    if (!mapOrphanTransactions.count(hash))\n+    map<uint256, CTransaction>::iterator it = mapOrphanTransactions.find(hash);\n+    if (it == mapOrphanTransactions.end())\n         return;\n-    const CTransaction& tx = mapOrphanTransactions[hash];\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+    BOOST_FOREACH(const CTxIn& txin, it->second.vin)\n     {\n-        mapOrphanTransactionsByPrev[txin.prevout.hash].erase(hash);\n-        if (mapOrphanTransactionsByPrev[txin.prevout.hash].empty())\n-            mapOrphanTransactionsByPrev.erase(txin.prevout.hash);\n+        map<uint256, set<uint256> >::iterator itPrev = mapOrphanTransactionsByPrev.find(txin.prevout.hash);\n+        itPrev->second.erase(hash);\n+        if (itPrev->second.empty())\n+            mapOrphanTransactionsByPrev.erase(itPrev);\n     }\n-    mapOrphanTransactions.erase(hash);\n+    mapOrphanTransactions.erase(it);\n }\n \n unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n@@ -3769,9 +3770,11 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             // Recursively process any orphan transactions that depended on this one\n             for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n             {\n-                uint256 hashPrev = vWorkQueue[i];\n-                for (set<uint256>::iterator mi = mapOrphanTransactionsByPrev[hashPrev].begin();\n-                     mi != mapOrphanTransactionsByPrev[hashPrev].end();\n+                map<uint256, set<uint256> >::iterator itByPrev = mapOrphanTransactionsByPrev.find(vWorkQueue[i]);\n+                if (itByPrev == mapOrphanTransactionsByPrev.end())\n+                    continue;\n+                for (set<uint256>::iterator mi = itByPrev->second.begin();\n+                     mi != itByPrev->second.end();\n                      ++mi)\n                 {\n                     const uint256& orphanHash = *mi;"
      }
    ]
  }
]