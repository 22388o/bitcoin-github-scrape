[
  {
    "sha": "ea6f76b66ecc52360719053489e0ec9f9a673eab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTZmNzZiNjZlY2M1MjM2MDcxOTA1MzQ4OWUwZWM5ZjlhNjczZWFi",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-04T10:28:47Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-06T07:06:27Z"
      },
      "message": "test: improve zero-value explicit fee rate coverage",
      "tree": {
        "sha": "4dfb3f0ec253a4818bc661699a38d1ed3a4b2549",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4dfb3f0ec253a4818bc661699a38d1ed3a4b2549"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea6f76b66ecc52360719053489e0ec9f9a673eab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmCTlXMACgkQT1chs9Dj\nkh0tgA/8CjhG/WHnuk5NRgk9srlIpZUn6aY2dwc7nHwJBUD2Gw2DaPyTuvbd0Lp6\n93t89FwgVKc+X7UGXfwzlxn+ICI7cXxtCQPF4mSfpOe3Vfj5irBDpvDsDhND59Lv\n7GS4rY90KCWOpKGw+uGXSJSPqPS2LUrIyENeTjiyJwqAFXw1sm8bj+PbdYoYfQ3B\ng5TIV7pIBEL9Ug+tGgNVc6kU3P1dZAkKuXBaV+LzbRmUm+CBOzUH1bjrMUQmI6g+\nWR95u4ZCw3h9GsDC9tEH3+wMuSLeUtJ/qrHu6V815BAHG6RTVv/NtVkK9qHKbbft\nuvnIbvkNsgmXeUZbVeXFosnHisoAr8pDp05Rmj6lipQWTeZd2n+hSAuq0Qix7P6k\nQaKqBONZz9Zq4HyafebtReMHT7q4AjLRr475zJSoxTexSosiUgDk54RXsFdI0lTJ\nvAHlOmOx0g+EF3qNuS4Tp3CA+wtaec62YI06fawIxvPnv+XTOqebhtgLDxqT0BDr\ndCisxZ20vg1qTNvzitadsurEY9oZRPTU1LEwMzG1iGc67FtmUbDdUC6Xeh5RgU2D\n+Wp1p4S8kvtLR7wae8j41en/0ekU69MjQNgiCTsVSRom+TUcWRUJIqkZ9YAKgElC\nvsF8/KH04yOknOLo0XCS4uiUZ5/uQJEXhO/fmhsuEDmjHFFP1ck=\n=MTaE\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIB9uonzvVOKEGSzAc4HegLeHmwpVM19kQkM8GGLBgtcQCP/wEEiVJH7Y3X7i\n9r+Tlgt0asoI8SDuU7ARTRzbMr619UmY71PaB+tA55IeH2pRb77fsDdzEAjwIJLy\n15/5O4E/1kT4lvarJ2Dcka7G0O0ZlolNFAt8rOimCPEEYJOVdfAItZ0NEnlSTOAA\ng9/jDS75DI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ//wEF32ET73db8veFhT1Ui+rwwI8SChVC+K8SOVjM/OXckwF65a1us4\nUVu3psAGzty6NdmjPQjxIJ90rNY0WLAHUZ6u+SC/gzCntoRJwlpijMQ3ZhKXwCML\nCPEEYJOVdPAIFA66tsKmy7UAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxl\nbmRhci5vcGVudGltZXN0YW1wcy5vcmfwEGiUKrMiIbRIKNV9+AOIadEI8QRgk5V0\n8AjqUsbk9mk/ZACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 4dfb3f0ec253a4818bc661699a38d1ed3a4b2549\nparent 9c05da4a5c57d7fd0fc53817ad6f0a07c0f08b5b\nauthor Jon Atack <jon@atack.com> 1607077727 +0100\ncommitter Jon Atack <jon@atack.com> 1620284787 +0200\n\ntest: improve zero-value explicit fee rate coverage\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea6f76b66ecc52360719053489e0ec9f9a673eab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea6f76b66ecc52360719053489e0ec9f9a673eab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea6f76b66ecc52360719053489e0ec9f9a673eab/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c05da4a5c57d7fd0fc53817ad6f0a07c0f08b5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c05da4a5c57d7fd0fc53817ad6f0a07c0f08b5b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c05da4a5c57d7fd0fc53817ad6f0a07c0f08b5b"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 31,
      "deletions": 17
    },
    "files": [
      {
        "sha": "90c5d5bad289b1a7dda23b7dbf5881b063794fda",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=ea6f76b66ecc52360719053489e0ec9f9a673eab",
        "patch": "@@ -5,6 +5,8 @@\n \"\"\"Test the fundrawtransaction RPC.\"\"\"\n \n from decimal import Decimal\n+from itertools import product\n+\n from test_framework.descriptors import descsum_create\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n@@ -723,17 +725,16 @@ def test_option_feerate(self):\n         result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n         result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 10 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n         result4 = node.fundrawtransaction(rawtx, {\"feeRate\": str(10 * self.min_relay_tx_fee)})\n-        # Test that funding non-standard \"zero-fee\" transactions is valid.\n-        result5 = self.nodes[3].fundrawtransaction(rawtx, {\"fee_rate\": 0})\n-        result6 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 0})\n \n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n         assert_fee_amount(result1['fee'], count_bytes(result1['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n         assert_fee_amount(result4['fee'], count_bytes(result4['hex']), 10 * result_fee_rate)\n-        assert_fee_amount(result5['fee'], count_bytes(result5['hex']), 0)\n-        assert_fee_amount(result6['fee'], count_bytes(result6['hex']), 0)\n+\n+        # Test that funding non-standard \"zero-fee\" transactions is valid.\n+        for param, zero_value in product([\"fee_rate\", \"feeRate\"], [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]):\n+            assert_equal(self.nodes[3].fundrawtransaction(rawtx, {param: zero_value})[\"fee\"], 0)\n \n         # With no arguments passed, expect fee of 141 satoshis.\n         assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)"
      },
      {
        "sha": "2a2e6b99401f333445d7683cbe06b311067d25be",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=ea6f76b66ecc52360719053489e0ec9f9a673eab",
        "patch": "@@ -6,6 +6,8 @@\n \"\"\"\n \n from decimal import Decimal\n+from itertools import product\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_approx,\n@@ -199,8 +201,8 @@ def run_test(self):\n         assert_approx(res4[\"fee\"], 0.00000381, 0.0000001)\n \n         self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed and that funding non-standard 'zero-fee' transactions is valid\")\n-        for param in [\"fee_rate\", \"feeRate\"]:\n-            assert_equal(self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {param: 0, \"add_inputs\": True})[\"fee\"], 0)\n+        for param, zero_value in product([\"fee_rate\", \"feeRate\"], [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]):\n+            assert_equal(0, self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {param: zero_value, \"add_inputs\": True})[\"fee\"])\n \n         self.log.info(\"Test invalid fee rate settings\")\n         for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1)}:"
      },
      {
        "sha": "e810cb928d825a7c27404a4573d20a7e404271a6",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=ea6f76b66ecc52360719053489e0ec9f9a673eab",
        "patch": "@@ -267,8 +267,11 @@ def run_test(self):\n             self.nodes[2].sendmany, amounts={address: 10}, fee_rate=0.99999999)\n \n         self.log.info(\"Test sendmany raises if fee_rate of 0 or -1 is passed\")\n-        assert_raises_rpc_error(-6, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\n-            self.nodes[2].sendmany, amounts={address: 10}, fee_rate=0)\n+        # Test fee_rate with zero values.\n+        msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\n+            assert_raises_rpc_error(-6, msg, self.nodes[2].sendmany, amounts={address: 1}, fee_rate=zero_value)\n+        # Test fee_rate out of range (negative number).\n         assert_raises_rpc_error(-3, OUT_OF_RANGE, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=-1)\n \n         self.log.info(\"Test sendmany raises if an invalid conf_target or estimate_mode is passed\")\n@@ -450,8 +453,11 @@ def run_test(self):\n                 self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=0.99999999)\n \n             self.log.info(\"Test sendtoaddress raises if fee_rate of 0 or -1 is passed\")\n-            assert_raises_rpc_error(-6, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\n-                self.nodes[2].sendtoaddress, address=address, amount=10, fee_rate=0)\n+            # Test fee_rate with zero values.\n+            msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+            for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\n+                assert_raises_rpc_error(-6, msg, self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=zero_value)\n+            # Test fee_rate out of range (negative number).\n             assert_raises_rpc_error(-3, OUT_OF_RANGE, self.nodes[2].sendtoaddress, address=address, amount=1.0, fee_rate=-1)\n \n             self.log.info(\"Test sendtoaddress raises if an invalid conf_target or estimate_mode is passed\")"
      },
      {
        "sha": "d2005140a49870a8bc3308d4e7d21e223d358585",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=ea6f76b66ecc52360719053489e0ec9f9a673eab",
        "patch": "@@ -110,9 +110,13 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n         self.log.info(\"Test invalid fee rate settings\")\n-        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n         assert_raises_rpc_error(-4, \"Specified or calculated fee 0.141 is too high (cannot be higher than -maxtxfee 0.10\",\n             rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n+        # Test fee_rate with zero values.\n+        msg = \"Insufficient total fee 0.00\"\n+        for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\n+            assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {\"fee_rate\": zero_value})\n+        # Test fee_rate out of range (negative number).\n         assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n         for value in [{\"foo\": \"bar\"}, True]:\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\", rbf_node.bumpfee, rbfid, {\"fee_rate\": value})"
      },
      {
        "sha": "ac64f44f1fa771c7008a97f8e8efcd82acd4f0f8",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea6f76b66ecc52360719053489e0ec9f9a673eab/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=ea6f76b66ecc52360719053489e0ec9f9a673eab",
        "patch": "@@ -349,16 +349,17 @@ def run_test(self):\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n                     expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n \n-        # Test setting explicit fee rate just below the minimum and at zero.\n+        # Test setting explicit fee rate just below the minimum of 1 sat/vB.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n             expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n             expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0,\n-            expect_error=(-4, \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        # Test fee_rate with zero values.\n+        msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=zero_value, expect_error=(-4, msg))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=zero_value, expect_error=(-4, msg))\n \n         # TODO: Return hex if fee rate is below -maxmempool\n         # res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\", add_to_wallet=False)"
      }
    ]
  },
  {
    "sha": "c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWZkNDM0NGY3ZmNjMjU3MDYyYTYxMGM4ZmYyNmZmY2M5YjUzOTUz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-03T09:55:15Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-09T10:49:47Z"
      },
      "message": "test: explicit fee rates with invalid amounts",
      "tree": {
        "sha": "1c764d5f3df844da1dcc162102213ce7feb9d532",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c764d5f3df844da1dcc162102213ce7feb9d532"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmCXvlIACgkQT1chs9Dj\nkh2V6g/+NCKWYZaYwzrJ10gqxnfFAsF4Hhc7BQMnCWhxjo1rd5CecHCaUITLLamB\nxuOcY+zNJCdaGTNd42OPdaYDjfUgicTRtnGFvDEYCNj9+pt2cQp0U4bxOF5Nu6p4\n70H2Fp8YlAE3kgtMJgwf/DvMjenXmnvKQ8YnszmHI8neMfDvGDgzRRFzDAo/YQrM\nO7BUbImF+veg+RyfNcpSuxJp97hXjaR9813hbi4X1H7mbfIJ06xm3acTmvc3jujo\nUqGCLyWZ9M6yxlz18FHa1ZzviVMqpoEn1lPf6yLBWHTzyH9OyNsHUY/MjyR//UtQ\ng4fbJc1TsL/cDRIzCIh0DzXs2aIpu72rk+bC50+YseSkUwk4/CXH/MLyCwqaERV9\nckki334kYyMhGMfzeBnnxSZLfpJfDsBwvuyMbg3dpiMpIXudNBttVpjPKz61AT7k\nwnJwnzwKWWVxbphHrasl+bRHWx1QF1jezYpk7kCHg6cIFTf9MuQqeb9sGDO6OL+h\naE8z/X7hbRd2A5swSmANdO1Ki3fGxHn16G2FGnG3Kg+K4QKvjTW8jqm00Aefjn6R\nyh5tEtyi0Jt9/e5AqHFx09aY2aA7OLBlE8LG+3nwQFBAQldyRsesTxbrv+1Xu5cE\n7PP9mL2nBYBRyQgjBWyWFQRR5mNUuJZhnDFIXaczTMPRbqb5SHs=\n=A+zs\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIF0ZjTimd9M2AjjEGNvTe/lABLm29AbSl7Fq90a56lwSCP/wECMEcIqv/vys\ntASOdTHQLVwI8QRgl75T8Ahlf1Di2qi0qACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEGW1VDJS32A/w0FqVb8PxYcI8QRgl75T\n8AikCw1sQOuiRgCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQxJZsuT+PV6H0PGjQGWrkygjxBGCXvlPwCINomtTs\nFuULAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 1c764d5f3df844da1dcc162102213ce7feb9d532\nparent ea6f76b66ecc52360719053489e0ec9f9a673eab\nauthor Jon Atack <jon@atack.com> 1606989315 +0100\ncommitter Jon Atack <jon@atack.com> 1620557387 +0200\n\ntest: explicit fee rates with invalid amounts\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea6f76b66ecc52360719053489e0ec9f9a673eab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea6f76b66ecc52360719053489e0ec9f9a673eab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea6f76b66ecc52360719053489e0ec9f9a673eab"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 26,
      "deletions": 7
    },
    "files": [
      {
        "sha": "345c20389c97ca733a231ff4112a2bbf18ee6db0",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
        "patch": "@@ -768,8 +768,9 @@ def test_option_feerate(self):\n                 node.fundrawtransaction, rawtx, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n                 node.fundrawtransaction, rawtx, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n-            assert_raises_rpc_error(-3, \"Invalid amount\",\n-                node.fundrawtransaction, rawtx, {param: \"\", \"add_inputs\": True})\n+            # Test fee rate values that don't pass fixed-point parsing checks.\n+            for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n+                assert_raises_rpc_error(-3, \"Invalid amount\", node.fundrawtransaction, rawtx, {param: invalid_value, \"add_inputs\": True})\n \n         self.log.info(\"Test min fee rate checks are bypassed with fundrawtxn, e.g. a fee_rate under 1 sat/vB is allowed\")\n         node.fundrawtransaction(rawtx, {\"fee_rate\": 0.99999999, \"add_inputs\": True})"
      },
      {
        "sha": "05e7523b574f4ed9b0c1e9618b7468bc3d5b2392",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
        "patch": "@@ -212,8 +212,10 @@ def run_test(self):\n                 self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: -1, \"add_inputs\": True})\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\",\n                 self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: {\"foo\": \"bar\"}, \"add_inputs\": True})\n-            assert_raises_rpc_error(-3, \"Invalid amount\",\n-                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: \"\", \"add_inputs\": True})\n+            # Test fee rate values that don't pass fixed-point parsing checks.\n+            for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n+                assert_raises_rpc_error(-3, \"Invalid amount\",\n+                    self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: invalid_value, \"add_inputs\": True})\n \n         self.log.info(\"- raises RPC error if both feeRate and fee_rate are passed\")\n         assert_raises_rpc_error(-8, \"Cannot specify both fee_rate (sat/vB) and feeRate (BTC/kvB)\","
      },
      {
        "sha": "96e86ff9f9dd54162505bc26a59f1d28204f77be",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
        "patch": "@@ -266,11 +266,15 @@ def run_test(self):\n         assert_raises_rpc_error(-6, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\n             self.nodes[2].sendmany, amounts={address: 10}, fee_rate=0.99999999)\n \n-        self.log.info(\"Test sendmany raises if fee_rate of 0 or -1 is passed\")\n+        self.log.info(\"Test sendmany raises if an invalid fee_rate is passed\")\n         # Test fee_rate with zero values.\n         msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n         for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\n             assert_raises_rpc_error(-6, msg, self.nodes[2].sendmany, amounts={address: 1}, fee_rate=zero_value)\n+        msg = \"Invalid amount\"\n+        # Test fee_rate values that don't pass fixed-point parsing checks.\n+        for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n+            assert_raises_rpc_error(-3, msg, self.nodes[2].sendmany, amounts={address: 1.0}, fee_rate=invalid_value)\n         # Test fee_rate out of range (negative number).\n         assert_raises_rpc_error(-3, OUT_OF_RANGE, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=-1)\n \n@@ -452,11 +456,15 @@ def run_test(self):\n             assert_raises_rpc_error(-6, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\n                 self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=0.99999999)\n \n-            self.log.info(\"Test sendtoaddress raises if fee_rate of 0 or -1 is passed\")\n+            self.log.info(\"Test sendtoaddress raises if an invalid fee_rate is passed\")\n             # Test fee_rate with zero values.\n             msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n             for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\n                 assert_raises_rpc_error(-6, msg, self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=zero_value)\n+            msg = \"Invalid amount\"\n+            # Test fee_rate values that don't pass fixed-point parsing checks.\n+            for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n+                assert_raises_rpc_error(-3, msg, self.nodes[2].sendtoaddress, address=address, amount=1.0, fee_rate=invalid_value)\n             # Test fee_rate out of range (negative number).\n             assert_raises_rpc_error(-3, OUT_OF_RANGE, self.nodes[2].sendtoaddress, address=address, amount=1.0, fee_rate=-1)\n "
      },
      {
        "sha": "895db7d47239c45db931759d0092bfd9c607c22c",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
        "patch": "@@ -116,11 +116,14 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         msg = \"Insufficient total fee 0.00\"\n         for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\n             assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {\"fee_rate\": zero_value})\n+        msg = \"Invalid amount\"\n+        # Test fee_rate values that don't pass fixed-point parsing checks.\n+        for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n+            assert_raises_rpc_error(-3, msg, rbf_node.bumpfee, rbfid, {\"fee_rate\": invalid_value})\n         # Test fee_rate out of range (negative number).\n         assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n         for value in [{\"foo\": \"bar\"}, True]:\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\", rbf_node.bumpfee, rbfid, {\"fee_rate\": value})\n-        assert_raises_rpc_error(-3, \"Invalid amount\", rbf_node.bumpfee, rbfid, {\"fee_rate\": \"\"})\n \n         self.log.info(\"Test explicit fee rate raises RPC error if both fee_rate and conf_target are passed\")\n         assert_raises_rpc_error(-8, \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \""
      },
      {
        "sha": "4b3aac3158d5f27196db2df9d5d92b732e3d368d",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5fd4344f7fcc257062a610c8ff26ffcc9b53953/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
        "patch": "@@ -360,6 +360,11 @@ def run_test(self):\n         for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=zero_value, expect_error=(-4, msg))\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=zero_value, expect_error=(-4, msg))\n+        msg = \"Invalid amount\"\n+        # Test fee_rate values that don't pass fixed-point parsing checks.\n+        for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=invalid_value, expect_error=(-3, msg))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=invalid_value, expect_error=(-3, msg))\n \n         # TODO: Return hex if fee rate is below -maxmempool\n         # res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\", add_to_wallet=False)"
      }
    ]
  },
  {
    "sha": "b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTAzMzI3NTk3OWEyYTQ5NWIwMmIyNWY3MGNhZGJkY2M4YjZlYjZh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-04T11:51:34Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-09T10:49:56Z"
      },
      "message": "test: type error and out of range fee rates where missing",
      "tree": {
        "sha": "a49ad225b9ac20750a5fa48767eb8d078c735091",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a49ad225b9ac20750a5fa48767eb8d078c735091"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmCXvlQACgkQT1chs9Dj\nkh2wgw/+JI4sqaWLY5fwsugr3iSnGMpEqHxeYFkfAy0dm06NNShgUraei8mEMOsO\nFLRR/Dnz6+CtK32EttHLfMdeJErR95q1Y7XL9zkQzec6ZZJH9IdRe+/Jd2XL8oFd\nevTA6zchXMSAgQy1LdRR5CbkclWp2TaRTid9LFETmyAq1/4gOvoA8m2Q26BaOiUP\njkd4C2PC05i94GmcOsuG1SPvt6vFRBIxGkArw/PODYAhC3A0F/O6sO7X21X9Jel7\nfBSSBXH+RH3pKjzWs88oa0aDDrmUzcKWIxbA3W8bKm8qTO4PuBejhbqr/1RCDtM8\n0mQYjJr5F4WMBpoY0Jo0hsLdrDbMVDGlsuf2UtzOxxbiaXYSOwm4RkpGdUmt6t8g\n6em/nZLThycnlTovZ2LOJ3DDKDwSDfjkQJ9Gsh5dknjxSYmINWJkrAiVMuVsjmBm\nE03SBm3NJAFkgsNZec3hc7LmMf0WcgacRocjHEqZm7igam756BNDy+xlyJrmsQzN\nry7mnbJ/hAU0MW+ZQJt9cGOAj/ZU2jfO7mTVsBiqbKZAzGoSpTKa1faeawvXhnWv\ngTKu2mvpAqmoazA3MVR7UTygIhWol5kC3N0/os8tqqX3d3gcuHKWCp+VFSu8fnlf\nPkhUldE03qw/+mQBbHUvpDjvPxHIk0vENZtpUN0guDQfdm4CzH4=\n=B/hS\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIE3LpskUedpwF4Yr4oy5v2LVChUkPzO63l182RqPvV5qCP/wEEGUEM9cVU+n\nVjKfDHJIJY8I8QRgl75V8AisZhyIK2HH+gCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQlS6rK4sS1KzNjDSw\nPdBmwgjxBGCXvlXwCI6slaxGyI6IAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t8BCiLi9XDT00wLSW6s0QQ/67CPEEYJe+VfAIjQPg\nskVhcv0Ag9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a49ad225b9ac20750a5fa48767eb8d078c735091\nparent c5fd4344f7fcc257062a610c8ff26ffcc9b53953\nauthor Jon Atack <jon@atack.com> 1607082694 +0100\ncommitter Jon Atack <jon@atack.com> 1620557396 +0200\n\ntest: type error and out of range fee rates where missing\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5033275979a2a495b02b25f70cadbdcc8b6eb6a/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5fd4344f7fcc257062a610c8ff26ffcc9b53953",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5fd4344f7fcc257062a610c8ff26ffcc9b53953"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 20,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f46c79b6090829f97760699d0f0452cfe2d9e2c2",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5033275979a2a495b02b25f70cadbdcc8b6eb6a/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5033275979a2a495b02b25f70cadbdcc8b6eb6a/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
        "patch": "@@ -15,6 +15,7 @@\n )\n from test_framework.wallet_util import test_address\n \n+NOT_A_NUMBER_OR_STRING = \"Amount is not a number or string\"\n OUT_OF_RANGE = \"Amount out of range\"\n \n \n@@ -277,6 +278,9 @@ def run_test(self):\n             assert_raises_rpc_error(-3, msg, self.nodes[2].sendmany, amounts={address: 1.0}, fee_rate=invalid_value)\n         # Test fee_rate out of range (negative number).\n         assert_raises_rpc_error(-3, OUT_OF_RANGE, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=-1)\n+        # Test type error.\n+        for invalid_value in [True, {\"foo\": \"bar\"}]:\n+            assert_raises_rpc_error(-3, NOT_A_NUMBER_OR_STRING, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=invalid_value)\n \n         self.log.info(\"Test sendmany raises if an invalid conf_target or estimate_mode is passed\")\n         for target, mode in product([-1, 0, 1009], [\"economical\", \"conservative\"]):\n@@ -467,6 +471,9 @@ def run_test(self):\n                 assert_raises_rpc_error(-3, msg, self.nodes[2].sendtoaddress, address=address, amount=1.0, fee_rate=invalid_value)\n             # Test fee_rate out of range (negative number).\n             assert_raises_rpc_error(-3, OUT_OF_RANGE, self.nodes[2].sendtoaddress, address=address, amount=1.0, fee_rate=-1)\n+            # Test type error.\n+            for invalid_value in [True, {\"foo\": \"bar\"}]:\n+                assert_raises_rpc_error(-3, NOT_A_NUMBER_OR_STRING, self.nodes[2].sendtoaddress, address=address, amount=1.0, fee_rate=invalid_value)\n \n             self.log.info(\"Test sendtoaddress raises if an invalid conf_target or estimate_mode is passed\")\n             for target, mode in product([-1, 0, 1009], [\"economical\", \"conservative\"]):"
      },
      {
        "sha": "3d7d236dcf731dd365685beaeffe09cb2603e07c",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5033275979a2a495b02b25f70cadbdcc8b6eb6a/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5033275979a2a495b02b25f70cadbdcc8b6eb6a/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
        "patch": "@@ -122,6 +122,7 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n             assert_raises_rpc_error(-3, msg, rbf_node.bumpfee, rbfid, {\"fee_rate\": invalid_value})\n         # Test fee_rate out of range (negative number).\n         assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n+        # Test type error.\n         for value in [{\"foo\": \"bar\"}, True]:\n             assert_raises_rpc_error(-3, \"Amount is not a number or string\", rbf_node.bumpfee, rbfid, {\"fee_rate\": value})\n "
      },
      {
        "sha": "58dc81797e9e47ed98d085d09a459d5468b5d80a",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5033275979a2a495b02b25f70cadbdcc8b6eb6a/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5033275979a2a495b02b25f70cadbdcc8b6eb6a/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
        "patch": "@@ -343,11 +343,10 @@ def run_test(self):\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0.1, arg_estimate_mode=mode, expect_error=(-8, msg))\n             assert_raises_rpc_error(-8, msg, w0.send, {w1.getnewaddress(): 1}, 0.1, mode)\n \n-        for mode in [\"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n-            self.log.debug(\"{}\".format(mode))\n-            for k, v in {\"string\": \"true\", \"object\": {\"foo\": \"bar\"}}.items():\n+        for mode in [\"economical\", \"conservative\"]:\n+            for k, v in {\"string\": \"true\", \"bool\": True, \"object\": {\"foo\": \"bar\"}}.items():\n                 self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\n-                    expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\n+                    expect_error=(-3, f\"Expected type number for conf_target, got {k}\"))\n \n         # Test setting explicit fee rate just below the minimum of 1 sat/vB.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n@@ -365,6 +364,15 @@ def run_test(self):\n         for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=invalid_value, expect_error=(-3, msg))\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=invalid_value, expect_error=(-3, msg))\n+        # Test fee_rate out of range (negative number).\n+        msg = \"Amount out of range\"\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=-1, expect_error=(-3, msg))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=-1, expect_error=(-3, msg))\n+        # Test type error.\n+        msg = \"Amount is not a number or string\"\n+        for invalid_value in [True, {\"foo\": \"bar\"}]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=invalid_value, expect_error=(-3, msg))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=invalid_value, expect_error=(-3, msg))\n \n         # TODO: Return hex if fee rate is below -maxmempool\n         # res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\", add_to_wallet=False)"
      }
    ]
  },
  {
    "sha": "8ce3ef57a3e9ad13c0aaa4648e8584241d53592d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Y2UzZWY1N2EzZTlhZDEzYzBhYWE0NjQ4ZTg1ODQyNDFkNTM1OTJk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-27T09:00:20Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-09T10:49:58Z"
      },
      "message": "test: ParseFixedPoint with 3 decimals for sat/vB fee rates",
      "tree": {
        "sha": "52fb177ee9c1b89fecf8e5771a4fc4a6ddfef66f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52fb177ee9c1b89fecf8e5771a4fc4a6ddfef66f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ce3ef57a3e9ad13c0aaa4648e8584241d53592d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmCXvlYACgkQT1chs9Dj\nkh2uLA/9E28TTQ7OibUKMxOIrfKdqwnEAVpLfQv3tC8EE5pu8uZLcuNvn0sUPnw7\nxJvobS7f1uTmpOd55IiJzGlN4JKzDlvwB3FxbfgRe+zbddloqSKqQBfAKdv7tJi6\nuysHop2XgYa6lqWJTjcZRyald96KnruxghddfHpLlCEFMIc9+WmzYSeXhDAJboWb\nGf2YYseob+j1jlZjXmYNPsN3eySXxN3ZsAhfc0+Pr0T0sshtYyfwehZ/a1sc1QLg\n/iGf8Sb37Yld5o/g0vMgKqEdKo8jgGeyLZyPCdyHI6/Adc+fv5mmLiFpqY37qfQj\nqIAbDILClee4udv/MlhYVv4i3R1r7x4enfb1E+l5N2OMOvzJbIBkcC9q7uIWnyI8\nGIQB5LztVBGYKhrjXFeuTR7pshRJlZxphAkTR2f8MZU7wfOkxYSJTn1JdCnhS8S+\nCQ/2ZdlsgaiP/74LMUcmhlGgQE28Ok6F/fL94QVIed4ZTksgdy/W3VCIrBNU9MX3\nlHCngx/cs/o7cPp4AxGTRWdIbW6U1HBLXp3RcE0BrPoPIcShqPuCqgu6lAU4oBPS\nJMN7KB2iR6vt/uWEQ/s6lPMz2GLazia4YAfksaPksML3VBqKcQUVf9YaBsmwrcEP\n38ZiqhQ3ftcc+cbMA305M7UyyeUG6aZZcsxWvflUHbqQXTjxedw=\n=UeJ3\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEz522sC12ZFTiJVuUBoIGyxFDvNhYcKdEHMxBIf9msCCP/wEAb5qXz5EjPw\nGXBUNrPq6soI8QRgl75X8Ajb6rx/7+0tKACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEHNFbHCjXYQJ0U626XF4\nnUUI8QRgl75X8AhvneG2wlIuhgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbfAQeA0Y5mjUcE3o8Ng1MCA7mgjxBGCXvlfwCOI8qZyB\nrdwpAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 52fb177ee9c1b89fecf8e5771a4fc4a6ddfef66f\nparent b5033275979a2a495b02b25f70cadbdcc8b6eb6a\nauthor Jon Atack <jon@atack.com> 1619514020 +0200\ncommitter Jon Atack <jon@atack.com> 1620557398 +0200\n\ntest: ParseFixedPoint with 3 decimals for sat/vB fee rates\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ce3ef57a3e9ad13c0aaa4648e8584241d53592d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ce3ef57a3e9ad13c0aaa4648e8584241d53592d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ce3ef57a3e9ad13c0aaa4648e8584241d53592d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5033275979a2a495b02b25f70cadbdcc8b6eb6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5033275979a2a495b02b25f70cadbdcc8b6eb6a"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "534d28e5de0983fe3dededcd23e6c5f59069201e",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ce3ef57a3e9ad13c0aaa4648e8584241d53592d/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ce3ef57a3e9ad13c0aaa4648e8584241d53592d/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=8ce3ef57a3e9ad13c0aaa4648e8584241d53592d",
        "patch": "@@ -1759,6 +1759,15 @@ BOOST_AUTO_TEST_CASE(test_ParseFixedPoint)\n     BOOST_CHECK(!ParseFixedPoint(\"1.1e\", 8, &amount));\n     BOOST_CHECK(!ParseFixedPoint(\"1.1e-\", 8, &amount));\n     BOOST_CHECK(!ParseFixedPoint(\"1.\", 8, &amount));\n+\n+    // Test with 3 decimal places for fee rates in sat/vB.\n+    BOOST_CHECK(ParseFixedPoint(\"0.001\", 3, &amount));\n+    BOOST_CHECK_EQUAL(amount, CAmount{1});\n+    BOOST_CHECK(!ParseFixedPoint(\"0.0009\", 3, &amount));\n+    BOOST_CHECK(!ParseFixedPoint(\"31.00100001\", 3, &amount));\n+    BOOST_CHECK(!ParseFixedPoint(\"31.0011\", 3, &amount));\n+    BOOST_CHECK(!ParseFixedPoint(\"31.99999999\", 3, &amount));\n+    BOOST_CHECK(!ParseFixedPoint(\"31.999999999999999999999\", 3, &amount));\n }\n \n static void TestOtherThread(fs::path dirname, std::string lockname, bool *result)"
      }
    ]
  },
  {
    "sha": "0742c7840f03505597fd2de87db97f12597ef667",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzQyYzc4NDBmMDM1MDU1OTdmZDJkZTg3ZGI5N2YxMjU5N2VmNjY3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-27T08:54:44Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-09T10:50:00Z"
      },
      "message": "rpc: enable passing decimals to AmountFromValue, add doxygen",
      "tree": {
        "sha": "3ec1c0e2202c7b1d09902a7c203671aa5b9449aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ec1c0e2202c7b1d09902a7c203671aa5b9449aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0742c7840f03505597fd2de87db97f12597ef667",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmCXvlgACgkQT1chs9Dj\nkh2KzQ//cp8aDcnSe+IpwkDR73qAlKpnQ5kgCQsRZ2nB2pwnG9gnkt0iz+qStaMe\nNLV/bHah/RDOnCYDnX9vkKYt1OvGQ/tRn5d7Npwi9teGx8KdxY+q4N5OZujXjDRm\nX/05IqX620N8P3JH/66mGK56eyUPLBD5t+Lr0DmXr3vGDhkt2X5SviBVifjF1DcG\ndrodPRFfcl13ZuBQibxGUnMAS0rcBglEsqbCk3Q9dUxGY2Bs5ZdmCYG4JC4vhSZO\n6BqCZcLkqPjZnlLVLbKkXokXf5j99Zmwdzzj6Q4pPkQnl52z/j/afX+VM+ztOPCE\nluuodKJso+ZJ98vuwi8xNOmaQGOEFncFibrHxfJEln/fpvKWFJ24yvCWo5pyppTf\nzeLS+wKojHDna3ap/ohhzbCKfeOqA/kdyesPvu/7oiDpTQE0BJGEYB6NEhSs/Inl\nWnHLa7Qqlmfp7E4NkuqCGayCz+jjpDwbnK5Upr2E2FalkX5FLDa0ruHYdE4jn2eW\nJ6U74PkMjdYXT2tXscpg3xUP7ZDU9sYhf4fWZVhilVu9TG7AKdZFNTP2SUCYureU\nsllLYzHjNWxmGvyhlsL2uHhLovY6tqan1130iqA7kjY2kx88MZRvDACKC1Pf2j7h\nr5aOqnzAxr7gYirdt3KHRSqJg85ga7B4YGqkIog7i8axEJ278U0=\n=GkIj\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGR7opBXjdTLWzNiSPa2E/JIosAabRna0XLqmKwyd7zGCP/wEGYrqiIZvo+H\nARIEXDHZGsMI8QRgl75Z8AgbynqCVgQx2gCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEGucrbkZrt32cLnSRTi4xsII8SDFyTti\nGhwRXXzQwCWiDg26LVCXtsXRKvW7EqMOg2O+LQjxBGCXvlnwCMJBFEK0jipuAIPf\n4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmfwEO/v1pBVBgRzuwjcw2GWpNwI8QRgl75Z8AhXOn4F22fQCQCD3+MNLvkM\njiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 3ec1c0e2202c7b1d09902a7c203671aa5b9449aa\nparent 8ce3ef57a3e9ad13c0aaa4648e8584241d53592d\nauthor Jon Atack <jon@atack.com> 1619513684 +0200\ncommitter Jon Atack <jon@atack.com> 1620557400 +0200\n\nrpc: enable passing decimals to AmountFromValue, add doxygen\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0742c7840f03505597fd2de87db97f12597ef667",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0742c7840f03505597fd2de87db97f12597ef667",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0742c7840f03505597fd2de87db97f12597ef667/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ce3ef57a3e9ad13c0aaa4648e8584241d53592d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ce3ef57a3e9ad13c0aaa4648e8584241d53592d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ce3ef57a3e9ad13c0aaa4648e8584241d53592d"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7cf25e0c82e3fd89eaef7213d9e747589b691e17",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0742c7840f03505597fd2de87db97f12597ef667/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0742c7840f03505597fd2de87db97f12597ef667/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=0742c7840f03505597fd2de87db97f12597ef667",
        "patch": "@@ -74,12 +74,12 @@ void RPCTypeCheckObj(const UniValue& o,\n     }\n }\n \n-CAmount AmountFromValue(const UniValue& value)\n+CAmount AmountFromValue(const UniValue& value, int decimals)\n {\n     if (!value.isNum() && !value.isStr())\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Amount is not a number or string\");\n     CAmount amount;\n-    if (!ParseFixedPoint(value.getValStr(), 8, &amount))\n+    if (!ParseFixedPoint(value.getValStr(), decimals, &amount))\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");\n     if (!MoneyRange(amount))\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Amount out of range\");"
      },
      {
        "sha": "41cbcc603206ffa2ab7454c59740cd9d52f84e5c",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0742c7840f03505597fd2de87db97f12597ef667/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0742c7840f03505597fd2de87db97f12597ef667/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=0742c7840f03505597fd2de87db97f12597ef667",
        "patch": "@@ -77,7 +77,14 @@ extern uint256 ParseHashO(const UniValue& o, std::string strKey);\n extern std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName);\n extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n \n-extern CAmount AmountFromValue(const UniValue& value);\n+/**\n+ * Validate and return a CAmount from a UniValue number or string.\n+ *\n+ * @param[in] value     UniValue number or string to parse.\n+ * @param[in] decimals  Number of significant digits (default: 8).\n+ * @returns a CAmount if the various checks pass.\n+ */\n+extern CAmount AmountFromValue(const UniValue& value, int decimals = 8);\n \n using RPCArgList = std::vector<std::pair<std::string, UniValue>>;\n extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);"
      }
    ]
  },
  {
    "sha": "06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmE5MGZhMDM4MWM3OTBmN2JkZTJhYjliZjQ3ZDJiMjJhY2VmNGE1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-27T09:04:10Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-09T10:50:02Z"
      },
      "message": "rpc: for sat/vB fee rates, limit ParseFixedPoint decimals to 3",
      "tree": {
        "sha": "0791ce660a9700afec5b85184483f1e7d3003a50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0791ce660a9700afec5b85184483f1e7d3003a50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmCXvloACgkQT1chs9Dj\nkh00wRAAwfCIak8UU338w+LetxVw3tDIyN04A2FsLSm8PP/ZVj9NVQ5L3HKXKGyU\nJHjS//lJH274VYsQjjhIvdZRqBFcfNXoeGS2wLJ+EVuNmNBKcFusAqlIgNn8iOLK\nLW8Zb0ume6kseY+Im2wtrzliIUeM2kF7YI/DnweYYKYGUxxF5/wCim+/3h5LBsCR\nai1jNPBEYCh2wkue/ILqZ14EjZJQrWxcQG8AExICCe2yjdEocfTVw6ACY6FVpvqk\ndmmz70BHukRrzFCElVL1MruDbiT52P81s8F7uqddpqgk3Z7uDOi0Jzw8L0YzX05g\nnM6wiADLzQZvWYpXHqhhOE4KSipMYEnvzWUnCjmnPC2GxKHHhRj+1QfJpyFxQ/Wc\nrtDtrihJ5RDCEwRXyuoK7cofWo/ljagWW3opUmKE2kpZ+c7svskaa/ubYzxd5xJW\nvwgETQ0MggObJLgvdv4652ZrAup7eQyJWv9xjnP71aRcxmTgtxgBsZ+YALZ0MEUD\nTi7ByFILhHRpkeeHkTR3lOEwKKS5shu5p2GiD4AJImYRcjOfqP7CJOdyQTtMYycx\n1Y1KXvQcQA/BQwaIjMvHct+nR9/E8OpdMn7VJ/6Tx2LllWdo9R+gXi4zNoa2b91H\n7bZYc5t6T1FN7aGh7VjEgQfwA1QOTLHw9jnESCykNW0bwV3NS9Q=\n=cBts\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKJ5G7vgkFiNTXbqN8hpJt00ZF1NsYf8UsALs5jx+cOJCP/wEB/omFjjQEd2\nedJiIPlN8o4I8QRgl75b8AjZKwCwF1VZVQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEHOPy+l8QaTIdrEyOGbZaKoI8SAa5MJu\nbA+e6GziIUkd0lUc7c1ofd845M1ZzW02oc/oWwjxIKXBwIMdwQEiZsziIVX/owSF\n50VItzmsZnbfyj1Enj0MCPAgs2498O8YG4EyF6piDonpja/V6xWKWyr59jyA+Y4A\nPn4I8QRgl75b8AhNd+L9owNH6gCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BD8DDgNXLhIuyFt0f8xi8aUCPAg\npgGYSD0glo25wKKIXpttnqebQ9QQEgP9F7mKbSX0mDUI8CB3LbMuPGHt6lOC9IaX\nx6f/9O8aSVY1hez5heREjYBwXQjxBGCXvlvwCBcJVqKx9sYtAIPf4w0u+QyOLCto\ndHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0791ce660a9700afec5b85184483f1e7d3003a50\nparent 0742c7840f03505597fd2de87db97f12597ef667\nauthor Jon Atack <jon@atack.com> 1619514250 +0200\ncommitter Jon Atack <jon@atack.com> 1620557402 +0200\n\nrpc: for sat/vB fee rates, limit ParseFixedPoint decimals to 3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0742c7840f03505597fd2de87db97f12597ef667",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0742c7840f03505597fd2de87db97f12597ef667",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0742c7840f03505597fd2de87db97f12597ef667"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 11,
      "deletions": 9
    },
    "files": [
      {
        "sha": "31b90374bd066e648b31d35241172d6c759784c2",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
        "patch": "@@ -216,7 +216,8 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        // Fee rates in sat/vB cannot represent more than 3 significant digits.\n+        cc.m_feerate = CFeeRate{AmountFromValue(fee_rate, /* decimals */ 3)};\n         if (override_min_fee) cc.fOverrideFeeRate = true;\n         // Default RBF to true for explicit fee_rate, if unset.\n         if (!cc.m_signal_bip125_rbf) cc.m_signal_bip125_rbf = true;"
      },
      {
        "sha": "256f6c610cac9bc2578c8063eb3a51209f38c272",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
        "patch": "@@ -773,7 +773,7 @@ def test_option_feerate(self):\n                 assert_raises_rpc_error(-3, \"Invalid amount\", node.fundrawtransaction, rawtx, {param: invalid_value, \"add_inputs\": True})\n \n         self.log.info(\"Test min fee rate checks are bypassed with fundrawtxn, e.g. a fee_rate under 1 sat/vB is allowed\")\n-        node.fundrawtransaction(rawtx, {\"fee_rate\": 0.99999999, \"add_inputs\": True})\n+        node.fundrawtransaction(rawtx, {\"fee_rate\": 0.999, \"add_inputs\": True})\n         node.fundrawtransaction(rawtx, {\"feeRate\": 0.00000999, \"add_inputs\": True})\n \n         self.log.info(\"- raises RPC error if both feeRate and fee_rate are passed\")"
      },
      {
        "sha": "bd382a09f3d5503b62279e7c0cc286357e9dc0b4",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
        "patch": "@@ -195,7 +195,7 @@ def run_test(self):\n         assert_approx(res2[\"fee\"], 0.055, 0.005)\n \n         self.log.info(\"Test min fee rate checks with walletcreatefundedpsbt are bypassed, e.g. a fee_rate under 1 sat/vB is allowed\")\n-        res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": \"0.99999999\", \"add_inputs\": True})\n+        res3 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": \"0.999\", \"add_inputs\": True})\n         assert_approx(res3[\"fee\"], 0.00000381, 0.0000001)\n         res4 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.00000999, \"add_inputs\": True})\n         assert_approx(res4[\"fee\"], 0.00000381, 0.0000001)"
      },
      {
        "sha": "262e50479b88a6100c47ea46ce5fc769d33f9172",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
        "patch": "@@ -265,7 +265,7 @@ def run_test(self):\n         # Test setting explicit fee rate just below the minimum.\n         self.log.info(\"Test sendmany raises 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n         assert_raises_rpc_error(-6, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\n-            self.nodes[2].sendmany, amounts={address: 10}, fee_rate=0.99999999)\n+            self.nodes[2].sendmany, amounts={address: 10}, fee_rate=0.999)\n \n         self.log.info(\"Test sendmany raises if an invalid fee_rate is passed\")\n         # Test fee_rate with zero values.\n@@ -458,7 +458,7 @@ def run_test(self):\n             # Test setting explicit fee rate just below the minimum.\n             self.log.info(\"Test sendtoaddress raises 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n             assert_raises_rpc_error(-6, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\n-                self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=0.99999999)\n+                self.nodes[2].sendtoaddress, address=address, amount=1, fee_rate=0.999)\n \n             self.log.info(\"Test sendtoaddress raises if an invalid fee_rate is passed\")\n             # Test fee_rate with zero values."
      },
      {
        "sha": "817b4d8331d1fe9074965045cfc3ce74e5753b05",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
        "patch": "@@ -350,10 +350,11 @@ def run_test(self):\n \n         # Test setting explicit fee rate just below the minimum of 1 sat/vB.\n         self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if fee_rate of 0.99999999 is passed\")\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.99999999,\n-            expect_error=(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"))\n+        msg = \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=0.999, expect_error=(-4, msg))\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=0.999, expect_error=(-4, msg))\n+\n+        self.log.info(\"Explicit fee rate raises if invalid fee_rate is passed\")\n         # Test fee_rate with zero values.\n         msg = \"Fee rate (0.000 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\"\n         for zero_value in [0, 0.000, 0.00000000, \"0\", \"0.000\", \"0.00000000\"]:"
      }
    ]
  },
  {
    "sha": "847288df07b45ca535c849e518b22818ab492896",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDcyODhkZjA3YjQ1Y2E1MzVjODQ5ZTUxOGIyMjgxOGFiNDkyODk2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-02T12:55:26Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-05-09T10:50:04Z"
      },
      "message": "test: fee rate values that cannot be represented as sat/vB",
      "tree": {
        "sha": "74a66d7c4ca910a1662e9afd087053707f57f0fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74a66d7c4ca910a1662e9afd087053707f57f0fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/847288df07b45ca535c849e518b22818ab492896",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmCXvlwACgkQT1chs9Dj\nkh28hRAArEB904v9QSBsA0em5f5ZgWVB6uP3DHdJGo/HoLffIt8pQZeqaNGr4p1y\n2/DaBcpabI6v5LTppzOom1pf7rPxEW9HOkSmhIGtXh8UHiSRa0zceByqYF7q4gXD\n09D59OZpnmNFc5qq+ggL4mvPWSdRrIx9mNpQykHf3/h9YtQHhqD2mia+hdJRzWSH\n25oFx4//PdsA4s0vT75XLOvK3Lj2vkFfIwQ+Ob2oS+OPqlRf2ST5U57tKz8Km2vy\nY82C7kkqz3J4/UjXCwSWCzBlfMZuOCAQRBRInTOTE0C09pD++WZyj753cxKbC1tD\nxzVq1pq2DRdLKksRJL2O/g87ecfC3E5eXBkN/YhVUz0oqmbl02Ag/S147CWLOGil\nO4h+fFDLFPJzCeYNxqw1CS2yg4L0INVFUsJhOK/jjMoJL4HUvXh0eOsB4Bw8C2aG\nLTkJQI+Zh9B+/yGqs2GEM3obKSPkbtUD4uVm5F0acFyW39R4fx5WHnJ85WlkCtrC\nnpHqYb2dXokqELncSWdt6//7QmiopD6FELr160wI5B7Hic1Mno/1FHbeCo25H14L\n16kz7h/wOwhXi5hBGATuDdJZHxxf8C/IadTessjtM4lMJXbXztOWl/uVvG9xdLz0\nc0B4lOxECMCT4HP0xUV7qbTGYMi0ZySdcaYRLji/VE37vFjICwc=\n=rXlr\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIHinl8R9oAVTR9AxVPUrEDiLPiaV1x4RZYUXxhLcqjkCP/wEIJoDdNVVY3d\nz415w7UZByII8QRgl75d8AhmhIJ+oOTlzQCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQu7Zi0NNfjn4tMyoO\nDvnhIAjxBGCXvl3wCKGvQo0eg+UkAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BDyeImXtVuOgIvcHTtFnf/jCPEE\nYJe+XfAIWEGTmss1XcYAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNh\ndGFsbGF4eS5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 74a66d7c4ca910a1662e9afd087053707f57f0fb\nparent 06a90fa0381c790f7bde2ab9bf47d2b22acef4a5\nauthor Jon Atack <jon@atack.com> 1606913726 +0100\ncommitter Jon Atack <jon@atack.com> 1620557404 +0200\n\ntest: fee rate values that cannot be represented as sat/vB\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/847288df07b45ca535c849e518b22818ab492896",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/847288df07b45ca535c849e518b22818ab492896",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/847288df07b45ca535c849e518b22818ab492896/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06a90fa0381c790f7bde2ab9bf47d2b22acef4a5"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0cce5493fc51a25668578e87469b91d691027f1d",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/847288df07b45ca535c849e518b22818ab492896/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/847288df07b45ca535c849e518b22818ab492896/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=847288df07b45ca535c849e518b22818ab492896",
        "patch": "@@ -771,6 +771,10 @@ def test_option_feerate(self):\n             # Test fee rate values that don't pass fixed-point parsing checks.\n             for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n                 assert_raises_rpc_error(-3, \"Invalid amount\", node.fundrawtransaction, rawtx, {param: invalid_value, \"add_inputs\": True})\n+        # Test fee_rate values that cannot be represented in sat/vB.\n+        for invalid_value in [0.0001, 0.00000001, 0.00099999, 31.99999999, \"0.0001\", \"0.00000001\", \"0.00099999\", \"31.99999999\"]:\n+            assert_raises_rpc_error(-3, \"Invalid amount\",\n+                node.fundrawtransaction, rawtx, {\"fee_rate\": invalid_value, \"add_inputs\": True})\n \n         self.log.info(\"Test min fee rate checks are bypassed with fundrawtxn, e.g. a fee_rate under 1 sat/vB is allowed\")\n         node.fundrawtransaction(rawtx, {\"fee_rate\": 0.999, \"add_inputs\": True})"
      },
      {
        "sha": "c6e96e4a92294952e014a7e3f15cc9f4e1273bed",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/847288df07b45ca535c849e518b22818ab492896/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/847288df07b45ca535c849e518b22818ab492896/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=847288df07b45ca535c849e518b22818ab492896",
        "patch": "@@ -216,6 +216,10 @@ def run_test(self):\n             for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n                 assert_raises_rpc_error(-3, \"Invalid amount\",\n                     self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {param: invalid_value, \"add_inputs\": True})\n+        # Test fee_rate values that cannot be represented in sat/vB.\n+        for invalid_value in [0.0001, 0.00000001, 0.00099999, 31.99999999, \"0.0001\", \"0.00000001\", \"0.00099999\", \"31.99999999\"]:\n+            assert_raises_rpc_error(-3, \"Invalid amount\",\n+                self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": invalid_value, \"add_inputs\": True})\n \n         self.log.info(\"- raises RPC error if both feeRate and fee_rate are passed\")\n         assert_raises_rpc_error(-8, \"Cannot specify both fee_rate (sat/vB) and feeRate (BTC/kvB)\","
      },
      {
        "sha": "4a1d25bbc5882327434365e0944aed6ecc4728cc",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/847288df07b45ca535c849e518b22818ab492896/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/847288df07b45ca535c849e518b22818ab492896/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=847288df07b45ca535c849e518b22818ab492896",
        "patch": "@@ -276,6 +276,9 @@ def run_test(self):\n         # Test fee_rate values that don't pass fixed-point parsing checks.\n         for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n             assert_raises_rpc_error(-3, msg, self.nodes[2].sendmany, amounts={address: 1.0}, fee_rate=invalid_value)\n+        # Test fee_rate values that cannot be represented in sat/vB.\n+        for invalid_value in [0.0001, 0.00000001, 0.00099999, 31.99999999, \"0.0001\", \"0.00000001\", \"0.00099999\", \"31.99999999\"]:\n+            assert_raises_rpc_error(-3, msg, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=invalid_value)\n         # Test fee_rate out of range (negative number).\n         assert_raises_rpc_error(-3, OUT_OF_RANGE, self.nodes[2].sendmany, amounts={address: 10}, fee_rate=-1)\n         # Test type error.\n@@ -469,6 +472,9 @@ def run_test(self):\n             # Test fee_rate values that don't pass fixed-point parsing checks.\n             for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n                 assert_raises_rpc_error(-3, msg, self.nodes[2].sendtoaddress, address=address, amount=1.0, fee_rate=invalid_value)\n+            # Test fee_rate values that cannot be represented in sat/vB.\n+            for invalid_value in [0.0001, 0.00000001, 0.00099999, 31.99999999, \"0.0001\", \"0.00000001\", \"0.00099999\", \"31.99999999\"]:\n+                assert_raises_rpc_error(-3, msg, self.nodes[2].sendtoaddress, address=address, amount=10, fee_rate=invalid_value)\n             # Test fee_rate out of range (negative number).\n             assert_raises_rpc_error(-3, OUT_OF_RANGE, self.nodes[2].sendtoaddress, address=address, amount=1.0, fee_rate=-1)\n             # Test type error."
      },
      {
        "sha": "ff5070c1faeae5ff130111a69a73f88f3d2edda9",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/847288df07b45ca535c849e518b22818ab492896/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/847288df07b45ca535c849e518b22818ab492896/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=847288df07b45ca535c849e518b22818ab492896",
        "patch": "@@ -120,6 +120,9 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         # Test fee_rate values that don't pass fixed-point parsing checks.\n         for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n             assert_raises_rpc_error(-3, msg, rbf_node.bumpfee, rbfid, {\"fee_rate\": invalid_value})\n+        # Test fee_rate values that cannot be represented in sat/vB.\n+        for invalid_value in [0.0001, 0.00000001, 0.00099999, 31.99999999, \"0.0001\", \"0.00000001\", \"0.00099999\", \"31.99999999\"]:\n+            assert_raises_rpc_error(-3, msg, rbf_node.bumpfee, rbfid, {\"fee_rate\": invalid_value})\n         # Test fee_rate out of range (negative number).\n         assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n         # Test type error."
      },
      {
        "sha": "e061fa952c205b5cda39599cee9d7a30b346ee71",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/847288df07b45ca535c849e518b22818ab492896/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/847288df07b45ca535c849e518b22818ab492896/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=847288df07b45ca535c849e518b22818ab492896",
        "patch": "@@ -365,6 +365,10 @@ def run_test(self):\n         for invalid_value in [\"\", 0.000000001, 1e-09, 1.111111111, 1111111111111111, \"31.999999999999999999999\"]:\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=invalid_value, expect_error=(-3, msg))\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=invalid_value, expect_error=(-3, msg))\n+        # Test fee_rate values that cannot be represented in sat/vB.\n+        for invalid_value in [0.0001, 0.00000001, 0.00099999, 31.99999999, \"0.0001\", \"0.00000001\", \"0.00099999\", \"31.99999999\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=invalid_value, expect_error=(-3, msg))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=invalid_value, expect_error=(-3, msg))\n         # Test fee_rate out of range (negative number).\n         msg = \"Amount out of range\"\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, fee_rate=-1, expect_error=(-3, msg))"
      }
    ]
  }
]