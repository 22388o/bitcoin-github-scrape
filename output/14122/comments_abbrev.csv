laanwj,2018-09-01T06:19:50Z,ACK 8dfc2f30dea6bde0f74d23691377f248966011ab,https://github.com/bitcoin/bitcoin/pull/14122#issuecomment-417836561,417836561,
ken2812221,2018-09-01T06:23:05Z,utACK  8dfc2f3,https://github.com/bitcoin/bitcoin/pull/14122#issuecomment-417836681,417836681,
promag,2018-08-31T22:45:22Z,"nit, drop `( )`?",https://github.com/bitcoin/bitcoin/pull/14122#discussion_r214490508,214490508,test/functional/rpc_help.py
promag,2018-08-31T22:50:46Z,"nit, my preference is\n```py\nif is_zmq_enabled(self):\n    assert_equal(titles, ['Blockchain', 'Control', 'Generating', 'Mining', 'Network', 'Rawtransactions', 'Util', 'Wallet', 'Zmq'])\nelse:\n    assert_equal(titles, ['Blockchain', 'Control', 'Generating', 'Mining', 'Network', 'Rawtransactions', 'Util', 'Wallet'])\n```",https://github.com/bitcoin/bitcoin/pull/14122#discussion_r214491112,214491112,test/functional/rpc_help.py
Kvaciral,2018-08-31T22:59:35Z,"I disagree, my code is more flexible..",https://github.com/bitcoin/bitcoin/pull/14122#discussion_r214492055,214492055,test/functional/rpc_help.py
laanwj,2018-08-31T23:03:10Z,"there might be more optional categories in the future, which would result in a combination blow-up (say, if we ever make the functional tests run without wallet). I prefer adding them one by one as it is now.",https://github.com/bitcoin/bitcoin/pull/14122#discussion_r214492401,214492401,test/functional/rpc_help.py
promag,2018-08-31T23:16:16Z,Makes sense!,https://github.com/bitcoin/bitcoin/pull/14122#discussion_r214493600,214493600,test/functional/rpc_help.py
Kvaciral,2018-08-31T23:26:04Z,"Oops, of course!!",https://github.com/bitcoin/bitcoin/pull/14122#discussion_r214494491,214494491,test/functional/rpc_help.py
