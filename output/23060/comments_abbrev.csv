jonatack,2021-09-22 08:29:13,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-924703733,924703733,
MarcoFalke,2021-09-22 10:39:18,"review ACK 182de7ba10811ec39e24ec5bec7cd2119f776f2f\n\n\nAlso tested on `debian:stretch` with the following diff:\n\n\n```diff\ndiff --git a/ci/test/00_setup_env_native_nowallet.sh b/ci/test/00_setup_env_native_nowallet.sh\nindex e9a20fca7..6d0b36295 100755\n--- a/ci/test/00_setup_env_native_nowallet.sh\n+++ b/ci/test/00_setup_env_native_nowallet.sh\n@@ -9,6 +9,6 @@ export LC_ALL=C.UTF-",https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-924805587,924805587,
MarcoFalke,2021-09-22 10:50:00,"Thinking about bumping to clang-8 as well, because `debian:stretch` will enter commercial ELTS next year. So anyone paying for that can also pay for someone to compile Bitcoin Core. It is not even possible to run the functional tests on stretch, due to python3.5.",https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-924815482,924815482,
DrahtBot,2021-09-22 17:35:57,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20744](https://github.com/bitcoin/bitcoin/pull/20744) (Use std::filesystem. Remove Boost Filesystem & System by fanquake",https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-925138645,925138645,
fanquake,2021-09-23 08:49:58,"> Thinking about bumping to clang-8 as well, \n\nIf we did do that, we should increase the minimum required libc++ version to 8 as well, and revert #22342. I can't imagine anyone would be building with Clang 8 against libc++ 7.",https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-925619794,925619794,
laanwj,2021-09-23 09:30:03,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-925647575,925647575,
laanwj,2021-09-23 12:12:03,Would this unblock #20457 and #20452?,https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-925752893,925752893,
fanquake,2021-09-23 12:50:53,"> Would this unblock #20457 and #20452?\n\nYes. This PR as is, should be enough to unblock those, as support for the `*_chars` funcs ([Elementary string conversions](https://en.cppreference.com/w/cpp/compiler_support/17)) landed in `libstdc++` 8.",https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-925787140,925787140,
hebasto,2021-09-25 16:47:39,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/23060#issuecomment-927150033,927150033,
MarcoFalke,2021-09-22 08:27:39,"```suggestion\nexport DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic gcc-8 (with libstdc++-8) can compile our C++17 and run our functional tests in python3, see doc/dependencies.md\n```",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713711417,713711417,ci/test/00_setup_env_native_qt5.sh
MarcoFalke,2021-09-22 08:29:31,"```suggestion\nexport PACKAGES=""python3-zmq clang-7 llvm-7 libc++abi-7-dev libc++-7-dev""  # Use clang-7 (with libc++-7) to test C++17 compatibility, see doc/dependencies.md\n```",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713713083,713713083,ci/test/00_setup_env_native_nowallet.sh
fanquake,2021-09-22 08:35:26,"If you're compiling using GCC, using `libstdc++` of the same version should be implied. I don't even think you can use libc++ with GCC?",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713717935,713717935,ci/test/00_setup_env_native_qt5.sh
MarcoFalke,2021-09-22 08:39:41,Fair enough,https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713721543,713721543,ci/test/00_setup_env_native_qt5.sh
fanquake,2021-09-22 08:56:43,"> Is there a reason in ci to check libstdc++-8 twice\n\nIt's not quite twice, given one build is Clang and one GCC. I had wanted this so that the Clang & libstdc++ case was tested, given that is going to be the most likely case when developers / users are compiling using (older) Clang. However happy to change this to use libc++ instead. ",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713735950,713735950,ci/test/00_setup_env_native_nowallet.sh
MarcoFalke,2021-09-22 09:18:27,"Currently no test coverage exists for libc++, so CI can't catch ""bugs"" like #22342.\n\nWas there ever a time when clang&libstdc++ was broken, but gcc and clang&libc++ both worked?",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713754026,713754026,ci/test/00_setup_env_native_nowallet.sh
fanquake,2021-09-22 09:53:39,"> so CI can't catch ""bugs"" like #22342.\n\nYea for this case it's worth using libc++.",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713781683,713781683,ci/test/00_setup_env_native_nowallet.sh
MarcoFalke,2021-09-22 10:06:25,"The wallet code is disabled, so it can't catch *this* specific instance, but in consensus code it should be able to catch.",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713791281,713791281,ci/test/00_setup_env_native_nowallet.sh
fanquake,2021-09-22 10:09:06,"Sure, I'm just talking about introducing code that will break the libc++ 7 requirement.",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r713793241,713793241,ci/test/00_setup_env_native_nowallet.sh
hebasto,2021-09-25 17:52:32,"182de7ba10811ec39e24ec5bec7cd2119f776f2f\n\nPassing `CC`and `CXX` to `DEP_OPTS` does not work as expected. From the [log](https://api.cirrus-ci.com/v1/task/5298955543117824/logs/ci.log):\n```\n...\nConfiguring qt...\n...\n\nConfigure summary:\n\nBuilding on: linux-g++ (x86_64, CPU features: mmx sse sse2)\nBuilding for: linux-g++-64 (x86_64, CPU features: mmx sse sse2)\nTarget compiler:",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r716077050,716077050,ci/test/00_setup_env_native_nowallet.sh
fanquake,2021-09-28 05:30:14,"> Passing CC and CXX to DEP_OPTS does not work as expected. \n\nIt works as expected with everything except for Qt, and that's not an issue introduced by this PR.\n\n> Reported in #22344, fixed in #22814, some relevant discussion in\n\nAnother Qt specific issue, that isn't introduced by this PR.\n\nFrankly I'm getting sick of fighting against Qts build system, and don't consider either of ",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r717235252,717235252,ci/test/00_setup_env_native_nowallet.sh
hebasto,2021-09-28 09:10:43,"> ... isn't introduced by this PR.\n\nThis PR builds dependencies with the `-stdlib=libc++`. It was not the case before.",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r717381099,717381099,ci/test/00_setup_env_native_nowallet.sh
fanquake,2021-09-28 09:35:16,"> This PR builds dependencies with the -stdlib=libc++. It was not the case before.\n\nThe underlying issue, which is that the Qt build doesn't work properly in regards to building with ` -stdlib=libc++`, was not introduced in this PR. I don't think it's an issue that we have one less CI building Qt in depends.",https://github.com/bitcoin/bitcoin/pull/23060#discussion_r717400282,717400282,ci/test/00_setup_env_native_nowallet.sh
