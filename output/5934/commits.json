[
  {
    "sha": "fb2db9363bce18c95694d72b871b57a92ba2d382",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjJkYjkzNjNiY2UxOGM5NTY5NGQ3MmI4NzFiNTdhOTJiYTJkMzgy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-02-03T19:21:00Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-23T19:55:37Z"
      },
      "message": "[Modularization] add possibility to extend or overwrite RPC calls\n\n- this will allow a upcomming modularization of the wallet or other components",
      "tree": {
        "sha": "5e0650a89b040c0109b973654533da8883671855",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e0650a89b040c0109b973654533da8883671855"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb2db9363bce18c95694d72b871b57a92ba2d382",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb2db9363bce18c95694d72b871b57a92ba2d382",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb2db9363bce18c95694d72b871b57a92ba2d382",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb2db9363bce18c95694d72b871b57a92ba2d382/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91389e51c78ae3565b037e31dd5382b52bd75136",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91389e51c78ae3565b037e31dd5382b52bd75136",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91389e51c78ae3565b037e31dd5382b52bd75136"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 47,
      "deletions": 2
    },
    "files": [
      {
        "sha": "37e98f370612bfa1997ef7c57c6e5ff625cebdee",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb2db9363bce18c95694d72b871b57a92ba2d382/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb2db9363bce18c95694d72b871b57a92ba2d382/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=fb2db9363bce18c95694d72b871b57a92ba2d382",
        "patch": "@@ -403,6 +403,16 @@ const CRPCCommand *CRPCTable::operator[](const std::string& name) const\n     return (*it).second;\n }\n \n+void CRPCTable::AddOrReplaceCommand(const CRPCCommand command)\n+{\n+    // search after existing key in hashmap and remove it\n+    map<string, const CRPCCommand*>::iterator it = mapCommands.find(command.name);\n+    if (it != mapCommands.end())\n+        mapCommands.erase(it);\n+    \n+    // add new command to the dispatch table\n+    mapCommands[command.name] = &command;\n+}\n \n bool HTTPAuthorized(map<string, string>& mapHeaders)\n {\n@@ -1041,4 +1051,4 @@ std::string HelpExampleRpc(const std::string& methodname, const std::string& arg\n         \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n }\n \n-const CRPCTable tableRPC;\n+CRPCTable tableRPC;"
      },
      {
        "sha": "37915b621e0f0408c133b1becaae97dc7f260c1e",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb2db9363bce18c95694d72b871b57a92ba2d382/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb2db9363bce18c95694d72b871b57a92ba2d382/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=fb2db9363bce18c95694d72b871b57a92ba2d382",
        "patch": "@@ -113,6 +113,12 @@ class CRPCTable\n     const CRPCCommand* operator[](const std::string& name) const;\n     std::string help(const std::string& name) const;\n \n+    /**\n+     * add or replace a CRPCCommand to the dispatch table\n+     * @param command rpc command to add or replace\n+     */ \n+    void AddOrReplaceCommand(const CRPCCommand command);\n+\n     /**\n      * Execute a method.\n      * @param method   Method to execute\n@@ -123,7 +129,7 @@ class CRPCTable\n     UniValue execute(const std::string &method, const UniValue &params) const;\n };\n \n-extern const CRPCTable tableRPC;\n+extern CRPCTable tableRPC;\n \n /**\n  * Utilities: convert hex-encoded Values"
      },
      {
        "sha": "92834a5de449223fb7dd9448b8dfa8c5520d8e5e",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb2db9363bce18c95694d72b871b57a92ba2d382/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb2db9363bce18c95694d72b871b57a92ba2d382/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=fb2db9363bce18c95694d72b871b57a92ba2d382",
        "patch": "@@ -17,7 +17,18 @@\n \n using namespace std;\n \n+<<<<<<< HEAD\n UniValue\n+=======\n+Value ping_overwrite_tests(const Array& params, bool fHelp)\n+{\n+    Object obj;\n+    obj.push_back(Pair(\"Test\", \"123\"));\n+    return obj;\n+}\n+\n+Array\n+>>>>>>> [Modularization] add possibility to extend or overwrite RPC calls\n createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL)\n {\n     UniValue result(UniValue::VARR);\n@@ -260,4 +271,22 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     BOOST_CHECK_EQUAL(adr.get_str(), \"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\");\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_flex_table)\n+{\n+    UniValue r = CallRPC(string(\"ping\"));\n+    BOOST_CHECK(r.is_null());\n+ \n+    const CRPCCommand newCmd = { \"network\",\"testcmd\",  &ping_overwrite_tests,true,false,false };\n+    tableRPC.AddOrReplaceCommand(newCmd);\n+    \n+    BOOST_CHECK_NO_THROW(r = CallRPC(string(\"testcmd\")));\n+    BOOST_CHECK_EQUAL(find_value(r.get_obj(), \"Test\").get_str(), \"123\");\n+    \n+    const CRPCCommand newPingCmd = { \"network\",\"ping\",  &ping_overwrite_tests,true,false,false };\n+    tableRPC.AddOrReplaceCommand(newPingCmd);\n+    \n+    BOOST_CHECK_NO_THROW(r = CallRPC(string(\"ping\")));\n+    BOOST_CHECK_EQUAL(find_value(r.get_obj(), \"Test\").get_str(), \"123\");\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "326dce820e7e81e068ddd5e8cbccd3558b898e9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjZkY2U4MjBlN2U4MWUwNjhkZGQ1ZThjYmNjZDM1NThiODk4ZTlm",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-03-07T09:06:16Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-23T19:58:28Z"
      },
      "message": "[Modularization] allow to add entries to the JSON conversion table\n\n- add method to insert custom conversion entries\n\nConflicts:\n\tsrc/test/rpc_tests.cpp",
      "tree": {
        "sha": "db1a788f68c57722b632d3f9bae3fcf790d87151",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db1a788f68c57722b632d3f9bae3fcf790d87151"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/326dce820e7e81e068ddd5e8cbccd3558b898e9f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/326dce820e7e81e068ddd5e8cbccd3558b898e9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/326dce820e7e81e068ddd5e8cbccd3558b898e9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/326dce820e7e81e068ddd5e8cbccd3558b898e9f/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb2db9363bce18c95694d72b871b57a92ba2d382",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb2db9363bce18c95694d72b871b57a92ba2d382",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb2db9363bce18c95694d72b871b57a92ba2d382"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 47,
      "deletions": 7
    },
    "files": [
      {
        "sha": "50f3512928ee4d12fee268b889d87856305ea114",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326dce820e7e81e068ddd5e8cbccd3558b898e9f/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326dce820e7e81e068ddd5e8cbccd3558b898e9f/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=326dce820e7e81e068ddd5e8cbccd3558b898e9f",
        "patch": "@@ -106,6 +106,10 @@ class CRPCConvertTable\n public:\n     CRPCConvertTable();\n \n+    void add(const std::string& method, int idx) {\n+        members.insert(std::make_pair(method, idx));\n+    }\n+\n     bool convert(const std::string& method, int idx) {\n         return (members.count(std::make_pair(method, idx)) > 0);\n     }\n@@ -136,6 +140,12 @@ UniValue ParseNonRFCJSONValue(const std::string& strVal)\n     return jVal[0];\n }\n \n+/** Add new conversion to the JSON RPC conversion table */\n+void RPCAddConversion(const std::string& method, int idx)\n+{\n+    rpcCvtTable.add(method, idx);\n+}\n+\n /** Convert strings to command-specific RPC representation */\n UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n {"
      },
      {
        "sha": "0236c572032fa81ced6426b77f612f7e2aca08ea",
        "filename": "src/rpcclient.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326dce820e7e81e068ddd5e8cbccd3558b898e9f/src/rpcclient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326dce820e7e81e068ddd5e8cbccd3558b898e9f/src/rpcclient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.h?ref=326dce820e7e81e068ddd5e8cbccd3558b898e9f",
        "patch": "@@ -13,5 +13,16 @@ UniValue RPCConvertValues(const std::string& strMethod, const std::vector<std::s\n  * as well as objects and arrays.\n  */\n UniValue ParseNonRFCJSONValue(const std::string& strVal);\n+/**\n+ * Add new conversion to the JSON RPC conversion table\n+ * @param method name of the method\n+ * @param idx    0-based index of the paramter\n+ */\n+void RPCAddConversion(const std::string& method, int idx);\n+\n+/**\n+ * Convert strings to command-specific RPC representation\n+ **/\n+UniValue RPCConvertValues(const std::string& strMethod, const std::vector<std::string>& strParams);\n \n #endif // BITCOIN_RPCCLIENT_H"
      },
      {
        "sha": "d0693e73ed7a51fa08a34a510132d7351321a617",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 7,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326dce820e7e81e068ddd5e8cbccd3558b898e9f/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326dce820e7e81e068ddd5e8cbccd3558b898e9f/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=326dce820e7e81e068ddd5e8cbccd3558b898e9f",
        "patch": "@@ -17,19 +17,14 @@\n \n using namespace std;\n \n-<<<<<<< HEAD\n-UniValue\n-=======\n-Value ping_overwrite_tests(const Array& params, bool fHelp)\n+UniValue ping_overwrite_tests(const UniValue& params, bool fHelp)\n {\n     Object obj;\n     obj.push_back(Pair(\"Test\", \"123\"));\n     return obj;\n }\n \n-Array\n->>>>>>> [Modularization] add possibility to extend or overwrite RPC calls\n-createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL)\n+UniValue createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL)\n {\n     UniValue result(UniValue::VARR);\n     result.push_back(nRequired);\n@@ -289,4 +284,28 @@ BOOST_AUTO_TEST_CASE(rpc_flex_table)\n     BOOST_CHECK_EQUAL(find_value(r.get_obj(), \"Test\").get_str(), \"123\");\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_add_conversion)\n+{\n+    RPCAddConversion(\"testcommand\", 1);\n+    RPCAddConversion(\"testcommand\", 2);\n+\n+    std::vector<std::string> vstrParams;\n+\n+    vstrParams.push_back(\"1234\");\n+    vstrParams.push_back(\"false\");\n+    vstrParams.push_back(\"481516\");\n+\n+    Array params = RPCConvertValues(\"testcommand\", vstrParams);\n+\n+    BOOST_CHECK_NO_THROW(params[0].get_str());\n+    BOOST_CHECK_NO_THROW(params[1].get_bool());\n+    BOOST_CHECK_NO_THROW(params[2].get_int());\n+\n+    BOOST_CHECK_THROW(params[0].get_int(), std::runtime_error);\n+\n+    BOOST_CHECK_EQUAL(params[0].get_str(), \"1234\");\n+    BOOST_CHECK_EQUAL(params[1].get_bool(), false);\n+    BOOST_CHECK_EQUAL(params[2].get_int(), 481516);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "0e0f5624321c82ec3fe3fbaf43bad24687e61cf2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTBmNTYyNDMyMWM4MmVjM2ZlM2ZiYWY0M2JhZDI0Njg3ZTYxY2Yy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-03-13T15:47:40Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-23T19:58:29Z"
      },
      "message": "[Modularization] flexible RPC table overhaul",
      "tree": {
        "sha": "aec41740eaed3713644e4e36317b47cda51d70f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aec41740eaed3713644e4e36317b47cda51d70f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "326dce820e7e81e068ddd5e8cbccd3558b898e9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/326dce820e7e81e068ddd5e8cbccd3558b898e9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/326dce820e7e81e068ddd5e8cbccd3558b898e9f"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 2,
      "deletions": 7
    },
    "files": [
      {
        "sha": "af82a75fc3dfa28e450a8e1584b702e7be7b9cf3",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=0e0f5624321c82ec3fe3fbaf43bad24687e61cf2",
        "patch": "@@ -405,11 +405,6 @@ const CRPCCommand *CRPCTable::operator[](const std::string& name) const\n \n void CRPCTable::AddOrReplaceCommand(const CRPCCommand command)\n {\n-    // search after existing key in hashmap and remove it\n-    map<string, const CRPCCommand*>::iterator it = mapCommands.find(command.name);\n-    if (it != mapCommands.end())\n-        mapCommands.erase(it);\n-    \n     // add new command to the dispatch table\n     mapCommands[command.name] = &command;\n }"
      },
      {
        "sha": "d53805fb56533db3237bb7b6f2000c7c85eff825",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=0e0f5624321c82ec3fe3fbaf43bad24687e61cf2",
        "patch": "@@ -271,13 +271,13 @@ BOOST_AUTO_TEST_CASE(rpc_flex_table)\n     UniValue r = CallRPC(string(\"ping\"));\n     BOOST_CHECK(r.is_null());\n  \n-    const CRPCCommand newCmd = { \"network\",\"testcmd\",  &ping_overwrite_tests,true,false,false };\n+    const CRPCCommand newCmd = { \"network\",\"testcmd\",  &ping_overwrite_tests,true,false };\n     tableRPC.AddOrReplaceCommand(newCmd);\n     \n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"testcmd\")));\n     BOOST_CHECK_EQUAL(find_value(r.get_obj(), \"Test\").get_str(), \"123\");\n     \n-    const CRPCCommand newPingCmd = { \"network\",\"ping\",  &ping_overwrite_tests,true,false,false };\n+    const CRPCCommand newPingCmd = { \"network\",\"ping\",  &ping_overwrite_tests,true,false };\n     tableRPC.AddOrReplaceCommand(newPingCmd);\n     \n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"ping\")));"
      }
    ]
  },
  {
    "sha": "f3fb24e710198b2de15b3a66142e76c88da653e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmM2ZiMjRlNzEwMTk4YjJkZTE1YjNhNjYxNDJlNzZjODhkYTY1M2U2",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-03-13T00:03:59Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-23T19:58:29Z"
      },
      "message": "[Modularization] use pointers when adding or replacing RPC commands\n\nUsing pointers signals the responsibility of managing object lifetime is in the hand of the caller.",
      "tree": {
        "sha": "0ec693c6b075f588077ab2b451eeff642a3d117d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ec693c6b075f588077ab2b451eeff642a3d117d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3fb24e710198b2de15b3a66142e76c88da653e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3fb24e710198b2de15b3a66142e76c88da653e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3fb24e710198b2de15b3a66142e76c88da653e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3fb24e710198b2de15b3a66142e76c88da653e6/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e0f5624321c82ec3fe3fbaf43bad24687e61cf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e0f5624321c82ec3fe3fbaf43bad24687e61cf2"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 14,
      "deletions": 14
    },
    "files": [
      {
        "sha": "dfa63cae8ef8c73b896a3b766e160a32a2c564fa",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3fb24e710198b2de15b3a66142e76c88da653e6/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3fb24e710198b2de15b3a66142e76c88da653e6/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=f3fb24e710198b2de15b3a66142e76c88da653e6",
        "patch": "@@ -403,10 +403,10 @@ const CRPCCommand *CRPCTable::operator[](const std::string& name) const\n     return (*it).second;\n }\n \n-void CRPCTable::AddOrReplaceCommand(const CRPCCommand command)\n+void CRPCTable::AddOrReplaceCommand(const CRPCCommand* pcommand)\n {\n     // add new command to the dispatch table\n-    mapCommands[command.name] = &command;\n+    mapCommands[pcommand->name] = pcommand;\n }\n \n bool HTTPAuthorized(map<string, string>& mapHeaders)"
      },
      {
        "sha": "4520e0c2fd81389d48e35bb50416169957a9c6e2",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3fb24e710198b2de15b3a66142e76c88da653e6/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3fb24e710198b2de15b3a66142e76c88da653e6/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=f3fb24e710198b2de15b3a66142e76c88da653e6",
        "patch": "@@ -114,10 +114,10 @@ class CRPCTable\n     std::string help(const std::string& name) const;\n \n     /**\n-     * add or replace a CRPCCommand to the dispatch table\n-     * @param command rpc command to add or replace\n-     */ \n-    void AddOrReplaceCommand(const CRPCCommand command);\n+     * Add or replace a CRPCCommand to the dispatch table\n+     * @param pcommand RPC command to add or replace\n+     */\n+    void AddOrReplaceCommand(const CRPCCommand* pcommand);\n \n     /**\n      * Execute a method."
      },
      {
        "sha": "1f008451e874359cf7ae348e3f6f76c5f4bdd8be",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3fb24e710198b2de15b3a66142e76c88da653e6/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3fb24e710198b2de15b3a66142e76c88da653e6/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=f3fb24e710198b2de15b3a66142e76c88da653e6",
        "patch": "@@ -270,16 +270,16 @@ BOOST_AUTO_TEST_CASE(rpc_flex_table)\n {\n     UniValue r = CallRPC(string(\"ping\"));\n     BOOST_CHECK(r.is_null());\n- \n-    const CRPCCommand newCmd = { \"network\",\"testcmd\",  &ping_overwrite_tests,true,false };\n-    tableRPC.AddOrReplaceCommand(newCmd);\n-    \n+\n+    const CRPCCommand newCmd = { \"network\", \"testcmd\", &ping_overwrite_tests, true, false };\n+    tableRPC.AddOrReplaceCommand(&newCmd);\n+\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"testcmd\")));\n     BOOST_CHECK_EQUAL(find_value(r.get_obj(), \"Test\").get_str(), \"123\");\n-    \n-    const CRPCCommand newPingCmd = { \"network\",\"ping\",  &ping_overwrite_tests,true,false };\n-    tableRPC.AddOrReplaceCommand(newPingCmd);\n-    \n+\n+    const CRPCCommand newPingCmd = { \"network\", \"ping\", &ping_overwrite_tests, true, false };\n+    tableRPC.AddOrReplaceCommand(&newPingCmd);\n+\n     BOOST_CHECK_NO_THROW(r = CallRPC(string(\"ping\")));\n     BOOST_CHECK_EQUAL(find_value(r.get_obj(), \"Test\").get_str(), \"123\");\n }"
      }
    ]
  },
  {
    "sha": "a6b659a6b0081ade565a3042c601285dbf42d796",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmI2NTlhNmIwMDgxYWRlNTY1YTMwNDJjNjAxMjg1ZGJmNDJkNzk2",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-03-21T21:12:58Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-24T06:43:25Z"
      },
      "message": "[Refactor] decouple wallet rpc commands\n\nincludes #5744",
      "tree": {
        "sha": "96e5a39d3f52407348573e2f0032a8b760329c18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96e5a39d3f52407348573e2f0032a8b760329c18"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6b659a6b0081ade565a3042c601285dbf42d796",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6b659a6b0081ade565a3042c601285dbf42d796",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6b659a6b0081ade565a3042c601285dbf42d796",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6b659a6b0081ade565a3042c601285dbf42d796/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3fb24e710198b2de15b3a66142e76c88da653e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3fb24e710198b2de15b3a66142e76c88da653e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f3fb24e710198b2de15b3a66142e76c88da653e6"
      }
    ],
    "stats": {
      "total": 202,
      "additions": 111,
      "deletions": 91
    },
    "files": [
      {
        "sha": "549a0ed5f9610b92b1b95054cd125f9652581df5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6b659a6b0081ade565a3042c601285dbf42d796/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6b659a6b0081ade565a3042c601285dbf42d796/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a6b659a6b0081ade565a3042c601285dbf42d796",
        "patch": "@@ -925,6 +925,11 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     CScheduler::Function serviceLoop = boost::bind(&CScheduler::serviceQueue, &scheduler);\n     threadGroup.create_thread(boost::bind(&TraceThread<CScheduler::Function>, \"scheduler\", serviceLoop));\n \n+    // Register RPC Commands\n+#ifdef ENABLE_WALLET\n+    CWallet::RegisterRPCCommands(); //TODO: modularize rpc command registering (avoid usage of CWallet)\n+#endif\n+\n     /* Start the RPC server already.  It will be started in \"warmup\" mode\n      * and not really process calls already (but it will signify connections\n      * that the server is there and will be ready later).  Warmup mode will"
      },
      {
        "sha": "e1a593fa8c9223bebd4b80e00f737f828f3712ef",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 50,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6b659a6b0081ade565a3042c601285dbf42d796/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6b659a6b0081ade565a3042c601285dbf42d796/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=a6b659a6b0081ade565a3042c601285dbf42d796",
        "patch": "@@ -8,7 +8,6 @@\n #include \"base58.h\"\n #include \"init.h\"\n #include \"random.h\"\n-#include \"sync.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n@@ -332,55 +331,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"util\",               \"estimatepriority\",       &estimatepriority,       true  },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        true  },\n-    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        true  },\n-    { \"hidden\",             \"setmocktime\",            &setmocktime,            true  },\n-#ifdef ENABLE_WALLET\n-    { \"hidden\",             \"resendwallettransactions\", &resendwallettransactions, true},\n-#endif\n-\n-#ifdef ENABLE_WALLET\n-    /* Wallet */\n-    { \"wallet\",             \"addmultisigaddress\",     &addmultisigaddress,     true  },\n-    { \"wallet\",             \"backupwallet\",           &backupwallet,           true  },\n-    { \"wallet\",             \"dumpprivkey\",            &dumpprivkey,            true  },\n-    { \"wallet\",             \"dumpwallet\",             &dumpwallet,             true  },\n-    { \"wallet\",             \"encryptwallet\",          &encryptwallet,          true  },\n-    { \"wallet\",             \"getaccountaddress\",      &getaccountaddress,      true  },\n-    { \"wallet\",             \"getaccount\",             &getaccount,             true  },\n-    { \"wallet\",             \"getaddressesbyaccount\",  &getaddressesbyaccount,  true  },\n-    { \"wallet\",             \"getbalance\",             &getbalance,             false },\n-    { \"wallet\",             \"getnewaddress\",          &getnewaddress,          true  },\n-    { \"wallet\",             \"getrawchangeaddress\",    &getrawchangeaddress,    true  },\n-    { \"wallet\",             \"getreceivedbyaccount\",   &getreceivedbyaccount,   false },\n-    { \"wallet\",             \"getreceivedbyaddress\",   &getreceivedbyaddress,   false },\n-    { \"wallet\",             \"gettransaction\",         &gettransaction,         false },\n-    { \"wallet\",             \"getunconfirmedbalance\",  &getunconfirmedbalance,  false },\n-    { \"wallet\",             \"getwalletinfo\",          &getwalletinfo,          false },\n-    { \"wallet\",             \"importprivkey\",          &importprivkey,          true  },\n-    { \"wallet\",             \"importwallet\",           &importwallet,           true  },\n-    { \"wallet\",             \"importaddress\",          &importaddress,          true  },\n-    { \"wallet\",             \"keypoolrefill\",          &keypoolrefill,          true  },\n-    { \"wallet\",             \"listaccounts\",           &listaccounts,           false },\n-    { \"wallet\",             \"listaddressgroupings\",   &listaddressgroupings,   false },\n-    { \"wallet\",             \"listlockunspent\",        &listlockunspent,        false },\n-    { \"wallet\",             \"listreceivedbyaccount\",  &listreceivedbyaccount,  false },\n-    { \"wallet\",             \"listreceivedbyaddress\",  &listreceivedbyaddress,  false },\n-    { \"wallet\",             \"listsinceblock\",         &listsinceblock,         false },\n-    { \"wallet\",             \"listtransactions\",       &listtransactions,       false },\n-    { \"wallet\",             \"listunspent\",            &listunspent,            false },\n-    { \"wallet\",             \"lockunspent\",            &lockunspent,            true  },\n-    { \"wallet\",             \"move\",                   &movecmd,                false },\n-    { \"wallet\",             \"sendfrom\",               &sendfrom,               false },\n-    { \"wallet\",             \"sendmany\",               &sendmany,               false },\n-    { \"wallet\",             \"sendtoaddress\",          &sendtoaddress,          false },\n-    { \"wallet\",             \"setaccount\",             &setaccount,             true  },\n-    { \"wallet\",             \"settxfee\",               &settxfee,               true  },\n-    { \"wallet\",             \"signmessage\",            &signmessage,            true  },\n-    { \"wallet\",             \"walletlock\",             &walletlock,             true  },\n-    { \"wallet\",             \"walletpassphrasechange\", &walletpassphrasechange, true  },\n-    { \"wallet\",             \"walletpassphrase\",       &walletpassphrase,       true  },\n-#endif // ENABLE_WALLET\n+    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        true,      false },\n+    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        true,      false },\n+    { \"hidden\",             \"setmocktime\",            &setmocktime,            true,      false },\n };\n \n CRPCTable::CRPCTable()"
      },
      {
        "sha": "371bc7a236fb747a4b179dd058bd2e415861f0a9",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6b659a6b0081ade565a3042c601285dbf42d796/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6b659a6b0081ade565a3042c601285dbf42d796/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=a6b659a6b0081ade565a3042c601285dbf42d796",
        "patch": "@@ -181,49 +181,15 @@ extern UniValue submitblock(const UniValue& params, bool fHelp);\n extern UniValue estimatefee(const UniValue& params, bool fHelp);\n extern UniValue estimatepriority(const UniValue& params, bool fHelp);\n \n-extern UniValue getnewaddress(const UniValue& params, bool fHelp); // in rpcwallet.cpp\n-extern UniValue getaccountaddress(const UniValue& params, bool fHelp);\n-extern UniValue getrawchangeaddress(const UniValue& params, bool fHelp);\n-extern UniValue setaccount(const UniValue& params, bool fHelp);\n-extern UniValue getaccount(const UniValue& params, bool fHelp);\n-extern UniValue getaddressesbyaccount(const UniValue& params, bool fHelp);\n-extern UniValue sendtoaddress(const UniValue& params, bool fHelp);\n-extern UniValue signmessage(const UniValue& params, bool fHelp);\n extern UniValue verifymessage(const UniValue& params, bool fHelp);\n-extern UniValue getreceivedbyaddress(const UniValue& params, bool fHelp);\n-extern UniValue getreceivedbyaccount(const UniValue& params, bool fHelp);\n-extern UniValue getbalance(const UniValue& params, bool fHelp);\n-extern UniValue getunconfirmedbalance(const UniValue& params, bool fHelp);\n-extern UniValue movecmd(const UniValue& params, bool fHelp);\n-extern UniValue sendfrom(const UniValue& params, bool fHelp);\n-extern UniValue sendmany(const UniValue& params, bool fHelp);\n-extern UniValue addmultisigaddress(const UniValue& params, bool fHelp);\n extern UniValue createmultisig(const UniValue& params, bool fHelp);\n-extern UniValue listreceivedbyaddress(const UniValue& params, bool fHelp);\n-extern UniValue listreceivedbyaccount(const UniValue& params, bool fHelp);\n-extern UniValue listtransactions(const UniValue& params, bool fHelp);\n-extern UniValue listaddressgroupings(const UniValue& params, bool fHelp);\n-extern UniValue listaccounts(const UniValue& params, bool fHelp);\n-extern UniValue listsinceblock(const UniValue& params, bool fHelp);\n-extern UniValue gettransaction(const UniValue& params, bool fHelp);\n-extern UniValue backupwallet(const UniValue& params, bool fHelp);\n-extern UniValue keypoolrefill(const UniValue& params, bool fHelp);\n-extern UniValue walletpassphrase(const UniValue& params, bool fHelp);\n-extern UniValue walletpassphrasechange(const UniValue& params, bool fHelp);\n-extern UniValue walletlock(const UniValue& params, bool fHelp);\n-extern UniValue encryptwallet(const UniValue& params, bool fHelp);\n extern UniValue validateaddress(const UniValue& params, bool fHelp);\n extern UniValue getinfo(const UniValue& params, bool fHelp);\n-extern UniValue getwalletinfo(const UniValue& params, bool fHelp);\n extern UniValue getblockchaininfo(const UniValue& params, bool fHelp);\n extern UniValue getnetworkinfo(const UniValue& params, bool fHelp);\n extern UniValue setmocktime(const UniValue& params, bool fHelp);\n-extern UniValue resendwallettransactions(const UniValue& params, bool fHelp);\n \n extern UniValue getrawtransaction(const UniValue& params, bool fHelp); // in rcprawtransaction.cpp\n-extern UniValue listunspent(const UniValue& params, bool fHelp);\n-extern UniValue lockunspent(const UniValue& params, bool fHelp);\n-extern UniValue listlockunspent(const UniValue& params, bool fHelp);\n extern UniValue createrawtransaction(const UniValue& params, bool fHelp);\n extern UniValue decoderawtransaction(const UniValue& params, bool fHelp);\n extern UniValue decodescript(const UniValue& params, bool fHelp);\n@@ -236,7 +202,6 @@ extern UniValue verifytxoutproof(const UniValue& params, bool fHelp);\n extern UniValue getblockcount(const UniValue& params, bool fHelp); // in rpcblockchain.cpp\n extern UniValue getbestblockhash(const UniValue& params, bool fHelp);\n extern UniValue getdifficulty(const UniValue& params, bool fHelp);\n-extern UniValue settxfee(const UniValue& params, bool fHelp);\n extern UniValue getmempoolinfo(const UniValue& params, bool fHelp);\n extern UniValue getrawmempool(const UniValue& params, bool fHelp);\n extern UniValue getblockhash(const UniValue& params, bool fHelp);"
      },
      {
        "sha": "e37a2fd006d1eb65ff655429311810c0cf4bc757",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6b659a6b0081ade565a3042c601285dbf42d796/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6b659a6b0081ade565a3042c601285dbf42d796/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=a6b659a6b0081ade565a3042c601285dbf42d796",
        "patch": "@@ -44,6 +44,7 @@ TestingSetup::TestingSetup()\n {\n #ifdef ENABLE_WALLET\n         bitdb.MakeMock();\n+        CWallet::RegisterRPCCommands();\n #endif\n         ClearDatadirCache();\n         pathTemp = GetTempPath() / strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(GetRand(100000)));"
      },
      {
        "sha": "c692527b05952f4e5c3c09b52347ff2c541c6349",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6b659a6b0081ade565a3042c601285dbf42d796/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6b659a6b0081ade565a3042c601285dbf42d796/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a6b659a6b0081ade565a3042c601285dbf42d796",
        "patch": "@@ -12,6 +12,7 @@\n #include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"rpcserver.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n #include \"timedata.h\"\n@@ -42,6 +43,60 @@ bool fPayAtLeastCustomFee = true;\n  */\n CFeeRate CWallet::minTxFee = CFeeRate(1000);\n \n+\n+static const CRPCCommand vWalletRPCCommands[] =\n+{\n+    { \"wallet\",             \"addmultisigaddress\",       &addmultisigaddress,     true},\n+    { \"wallet\",             \"backupwallet\",             &backupwallet,           true},\n+    { \"wallet\",             \"dumpprivkey\",              &dumpprivkey,            true},\n+    { \"wallet\",             \"dumpwallet\",               &dumpwallet,             true},\n+    { \"wallet\",             \"encryptwallet\",            &encryptwallet,          true},\n+    { \"wallet\",             \"getaccountaddress\",        &getaccountaddress,      true},\n+    { \"wallet\",             \"getaccount\",               &getaccount,             true},\n+    { \"wallet\",             \"getaddressesbyaccount\",    &getaddressesbyaccount,  true},\n+    { \"wallet\",             \"getbalance\",               &getbalance,             false},\n+    { \"wallet\",             \"getnewaddress\",            &getnewaddress,          true},\n+    { \"wallet\",             \"getrawchangeaddress\",      &getrawchangeaddress,    true},\n+    { \"wallet\",             \"getreceivedbyaccount\",     &getreceivedbyaccount,   false},\n+    { \"wallet\",             \"getreceivedbyaddress\",     &getreceivedbyaddress,   false},\n+    { \"wallet\",             \"gettransaction\",           &gettransaction,         false},\n+    { \"wallet\",             \"getunconfirmedbalance\",    &getunconfirmedbalance,  false},\n+    { \"wallet\",             \"getwalletinfo\",            &getwalletinfo,          false},\n+    { \"wallet\",             \"importprivkey\",            &importprivkey,          true},\n+    { \"wallet\",             \"importwallet\",             &importwallet,           true},\n+    { \"wallet\",             \"importaddress\",            &importaddress,          true},\n+    { \"wallet\",             \"keypoolrefill\",            &keypoolrefill,          true},\n+    { \"wallet\",             \"listaccounts\",             &listaccounts,           false},\n+    { \"wallet\",             \"listaddressgroupings\",     &listaddressgroupings,   false},\n+    { \"wallet\",             \"listlockunspent\",          &listlockunspent,        false},\n+    { \"wallet\",             \"listreceivedbyaccount\",    &listreceivedbyaccount,  false},\n+    { \"wallet\",             \"listreceivedbyaddress\",    &listreceivedbyaddress,  false},\n+    { \"wallet\",             \"listsinceblock\",           &listsinceblock,         false},\n+    { \"wallet\",             \"listtransactions\",         &listtransactions,       false},\n+    { \"wallet\",             \"listunspent\",              &listunspent,            false},\n+    { \"wallet\",             \"lockunspent\",              &lockunspent,            true},\n+    { \"wallet\",             \"move\",                     &movecmd,                false},\n+    { \"wallet\",             \"sendfrom\",                 &sendfrom,               false},\n+    { \"wallet\",             \"sendmany\",                 &sendmany,               false},\n+    { \"wallet\",             \"sendtoaddress\",            &sendtoaddress,          false},\n+    { \"wallet\",             \"setaccount\",               &setaccount,             true},\n+    { \"wallet\",             \"settxfee\",                 &settxfee,               true},\n+    { \"wallet\",             \"signmessage\",              &signmessage,            true},\n+    { \"wallet\",             \"walletlock\",               &walletlock,             true},\n+    { \"wallet\",             \"walletpassphrasechange\",   &walletpassphrasechange, true},\n+    { \"wallet\",             \"walletpassphrase\",         &walletpassphrase,       true},\n+    { \"hidden\",             \"resendwallettransactions\", &resendwallettransactions, true},\n+};\n+\n+void CWallet::RegisterRPCCommands()\n+{\n+    for (unsigned int vcidx = 0; vcidx < (sizeof(vWalletRPCCommands) / sizeof(vWalletRPCCommands[0])); vcidx++)\n+    {\n+        const CRPCCommand *newCmd = &vWalletRPCCommands[vcidx];\n+        tableRPC.AddOrReplaceCommand(newCmd);\n+    }\n+}\n+\n /** @defgroup mapWallet\n  *\n  * @{"
      },
      {
        "sha": "f1ff090e9c4492cd747aff0bcf9e3e9e33ba442b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 47,
        "deletions": 6,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6b659a6b0081ade565a3042c601285dbf42d796/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6b659a6b0081ade565a3042c601285dbf42d796/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=a6b659a6b0081ade565a3042c601285dbf42d796",
        "patch": "@@ -28,6 +28,8 @@\n #include <utility>\n #include <vector>\n \n+#include \"univalue/univalue.h\"\n+\n /**\n  * Settings\n  */\n@@ -525,18 +527,15 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     }\n \n     std::map<uint256, CWalletTx> mapWallet;\n-\n     int64_t nOrderPosNext;\n     std::map<uint256, int> mapRequestCount;\n-\n     std::map<CTxDestination, CAddressBookData> mapAddressBook;\n-\n     CPubKey vchDefaultKey;\n-\n     std::set<COutPoint> setLockedCoins;\n-\n     int64_t nTimeFirstKey;\n \n+    static void RegisterRPCCommands();\n+    \n     const CWalletTx* GetWalletTx(const uint256& hash) const;\n \n     //! check whether we are allowed to upgrade (or already support) to the named feature\n@@ -871,4 +870,46 @@ class CAccountingEntry\n     std::vector<char> _ssExtra;\n };\n \n-#endif // BITCOIN_WALLET_WALLET_H\n+//Wallet RPC Commands\n+extern UniValue addmultisigaddress(const UniValue& params, bool fHelp);\n+extern UniValue backupwallet(const UniValue& params, bool fHelp);\n+extern UniValue dumpprivkey(const UniValue& params, bool fHelp); // in rpcdump.cpp\n+extern UniValue dumpwallet(const UniValue& params, bool fHelp);\n+extern UniValue encryptwallet(const UniValue& params, bool fHelp);\n+extern UniValue getaccountaddress(const UniValue& params, bool fHelp);\n+extern UniValue getaccount(const UniValue& params, bool fHelp);\n+extern UniValue getaddressesbyaccount(const UniValue& params, bool fHelp);\n+extern UniValue getbalance(const UniValue& params, bool fHelp);\n+extern UniValue getnewaddress(const UniValue& params, bool fHelp); // in rpcwallet.cpp\n+extern UniValue getrawchangeaddress(const UniValue& params, bool fHelp);\n+extern UniValue getreceivedbyaddress(const UniValue& params, bool fHelp);\n+extern UniValue getreceivedbyaccount(const UniValue& params, bool fHelp);\n+extern UniValue gettransaction(const UniValue& params, bool fHelp);\n+extern UniValue getunconfirmedbalance(const UniValue& params, bool fHelp);\n+extern UniValue getwalletinfo(const UniValue& params, bool fHelp);\n+extern UniValue importaddress(const UniValue& params, bool fHelp);\n+extern UniValue importprivkey(const UniValue& params, bool fHelp);\n+extern UniValue importwallet(const UniValue& params, bool fHelp);\n+extern UniValue keypoolrefill(const UniValue& params, bool fHelp);\n+extern UniValue listaccounts(const UniValue& params, bool fHelp);\n+extern UniValue listaddressgroupings(const UniValue& params, bool fHelp);\n+extern UniValue listlockunspent(const UniValue& params, bool fHelp);\n+extern UniValue listreceivedbyaccount(const UniValue& params, bool fHelp);\n+extern UniValue listreceivedbyaddress(const UniValue& params, bool fHelp);\n+extern UniValue listsinceblock(const UniValue& params, bool fHelp);\n+extern UniValue listtransactions(const UniValue& params, bool fHelp);\n+extern UniValue listunspent(const UniValue& params, bool fHelp);\n+extern UniValue lockunspent(const UniValue& params, bool fHelp);\n+extern UniValue movecmd(const UniValue& params, bool fHelp);\n+extern UniValue sendfrom(const UniValue& params, bool fHelp);\n+extern UniValue sendmany(const UniValue& params, bool fHelp);\n+extern UniValue sendtoaddress(const UniValue& params, bool fHelp);\n+extern UniValue setaccount(const UniValue& params, bool fHelp);\n+extern UniValue settxfee(const UniValue& params, bool fHelp);\n+extern UniValue signmessage(const UniValue& params, bool fHelp);\n+extern UniValue walletlock(const UniValue& params, bool fHelp);\n+extern UniValue walletpassphrasechange(const UniValue& params, bool fHelp);\n+extern UniValue walletpassphrase(const UniValue& params, bool fHelp);\n+extern UniValue resendwallettransactions(const UniValue& params, bool fHelp);\n+\n+#endif // BITCOIN_WALLET_H"
      }
    ]
  }
]