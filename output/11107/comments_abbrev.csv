meshcollider,2017-08-22T09:45:57Z,"Travis error looks unrelated, timeout in sendheaders.py - `assert(wait_until(test_function, timeout=60))`",https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-323976215,323976215,
TheBlueMatt,2017-08-23T19:22:42Z,"While you're at it, want to make fReindex atomic so that the ThreadImport write doesn't ""race"" with net_processing reads?",https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-324436946,324436946,
meshcollider,2017-09-05T01:36:57Z,Ping @TheBlueMatt if you have a bit of time :),https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-327049312,327049312,
TheBlueMatt,2017-09-07T18:47:35Z,utACK 731065b114452ff770320d09639448b3c9a74b0a,https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-327889832,327889832,
jtimon,2017-09-07T20:00:03Z,utACK 731065b,https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-327911755,327911755,
meshcollider,2017-09-09T23:30:14Z,"Added a new commit to make fUseCrypto atomic as well, see https://github.com/bitcoin/bitcoin/pull/10916#issuecomment-317340990 @TheBlueMatt @jonasschnelli ",https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-328309589,328309589,
meshcollider,2017-09-24T01:46:57Z,"Friendly ping @jonasschnelli and/or @TheBlueMatt if you have time, the last commit is only a 2 line change so shouldn't be too time consuming to review ;)",https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-331680952,331680952,
TheBlueMatt,2017-10-03T23:30:46Z,utACK c626dcb50eed496462fd4ac3e05bf79164749ebe,https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-334008510,334008510,
jonasschnelli,2017-10-04T05:36:34Z,"utACK https://github.com/bitcoin/bitcoin/commit/c626dcb50eed496462fd4ac3e05bf79164749ebe\nGenerally ""unrelated"" cleanups (like 731065b114452ff770320d09639448b3c9a74b0a) should be avoided.",https://github.com/bitcoin/bitcoin/pull/11107#issuecomment-334054563,334054563,
jonasschnelli,2017-08-22T09:35:33Z,I guess it would make sense to also cover `mapBlockIndex` and `chainActive` to make this move-safe.,https://github.com/bitcoin/bitcoin/pull/11107#discussion_r134430940,134430940,src/init.cpp
meshcollider,2017-08-22T09:44:57Z,"chainActive.Height() is also accessed on line 1652, you want to bring it in too?",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r134433097,134433097,src/init.cpp
promag,2017-08-23T03:56:54Z,"If chainActive is added then update descriptions accordingly.\n\nDid you search for other cases?",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r134652364,134652364,src/init.cpp
meshcollider,2017-08-23T04:35:04Z,"No haven't modified the pull yet, it still just fixes the issue linked",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r134655343,134655343,src/init.cpp
TheBlueMatt,2017-09-06T00:31:29Z,nit: EOL whitespace here.,https://github.com/bitcoin/bitcoin/pull/11107#discussion_r137147538,137147538,src/init.cpp
TheBlueMatt,2017-09-06T00:35:41Z,"Might as well use the atomic or here since we're making it atomic, no?",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r137147993,137147993,src/validation.cpp
TheBlueMatt,2017-09-06T00:36:06Z,"Indeed, ight as well pull chainActive.Height() into the cs_main here.",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r137148038,137148038,src/init.cpp
meshcollider,2017-09-06T01:26:15Z,"`|=`? It is only defined on atomic integral types I believe, not bool",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r137153082,137153082,src/validation.cpp
TheBlueMatt,2017-09-06T20:36:33Z,"Err, indeed, quivalent is to do an if(fReindexing) fReindex = true",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r137382782,137382782,src/validation.cpp
meshcollider,2017-09-07T00:01:08Z,"Yeah true that's cleaner, will do",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r137419603,137419603,src/validation.cpp
jtimon,2017-09-07T19:59:34Z,What's wrong with |= ?,https://github.com/bitcoin/bitcoin/pull/11107#discussion_r137640798,137640798,src/validation.cpp
meshcollider,2017-09-07T20:05:58Z,"See my reply to @TheBlueMatt's comment above, it's not implemented for atomic bool :)",https://github.com/bitcoin/bitcoin/pull/11107#discussion_r137642162,137642162,src/validation.cpp
