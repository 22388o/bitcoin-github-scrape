[
  {
    "sha": "ac14bcc1f12d2407516bcdfef57b2740df48381b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzE0YmNjMWYxMmQyNDA3NTE2YmNkZmVmNTdiMjc0MGRmNDgzODFi",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-05-10T12:54:20Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-06-10T16:23:56Z"
      },
      "message": "small formatting, indentation and comment fixes\n\n- contains zero code changes",
      "tree": {
        "sha": "1f9164b9aea8f3e4740886d9cfbe2047299307a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f9164b9aea8f3e4740886d9cfbe2047299307a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac14bcc1f12d2407516bcdfef57b2740df48381b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac14bcc1f12d2407516bcdfef57b2740df48381b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac14bcc1f12d2407516bcdfef57b2740df48381b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac14bcc1f12d2407516bcdfef57b2740df48381b/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3d7399cb171c2468b81a9179cb04358c56b4c7c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d7399cb171c2468b81a9179cb04358c56b4c7c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d7399cb171c2468b81a9179cb04358c56b4c7c4"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 21,
      "deletions": 21
    },
    "files": [
      {
        "sha": "f53d20fbb4622e45b2746022965549c468fa00b2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ac14bcc1f12d2407516bcdfef57b2740df48381b",
        "patch": "@@ -1985,7 +1985,7 @@ bool static DisconnectTip(CValidationState &state) {\n     BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n         // ignore validation errors in resurrected transactions\n         list<CTransaction> removed;\n-        CValidationState stateDummy; \n+        CValidationState stateDummy;\n         if (!tx.IsCoinBase())\n             if (!AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL))\n                 mempool.remove(tx, removed, true);\n@@ -2213,7 +2213,6 @@ CBlockIndex* AddToBlockIndex(CBlockHeader& block)\n     return pindexNew;\n }\n \n-\n // Mark a block as having its data received and checked (up to BLOCK_VALID_TRANSACTIONS).\n bool ReceivedBlockTransactions(const CBlock &block, CValidationState& state, CBlockIndex *pindexNew, const CDiskBlockPos& pos)\n {\n@@ -2246,7 +2245,6 @@ bool ReceivedBlockTransactions(const CBlock &block, CValidationState& state, CBl\n     return true;\n }\n \n-\n bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAddSize, unsigned int nHeight, uint64_t nTime, bool fKnown = false)\n {\n     bool fUpdatedLast = false;\n@@ -2341,7 +2339,6 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     return true;\n }\n \n-\n bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW)\n {\n     // Check proof of work matches claimed amount\n@@ -4455,8 +4452,8 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // in flight for over two minutes, since we first had a chance to\n         // process an incoming block.\n         int64_t nNow = GetTimeMicros();\n-        if (!pto->fDisconnect && state.nBlocksInFlight && \n-            state.nLastBlockReceive < state.nLastBlockProcess - BLOCK_DOWNLOAD_TIMEOUT*1000000 && \n+        if (!pto->fDisconnect && state.nBlocksInFlight &&\n+            state.nLastBlockReceive < state.nLastBlockProcess - BLOCK_DOWNLOAD_TIMEOUT*1000000 &&\n             state.vBlocksInFlight.front().nTime < state.nLastBlockProcess - 2*BLOCK_DOWNLOAD_TIMEOUT*1000000) {\n             LogPrintf(\"Peer %s is stalling block download, disconnecting\\n\", state.name.c_str());\n             pto->fDisconnect = true;"
      },
      {
        "sha": "e0cbbd25c302ec1b69d875d5c89708e9e058ed78",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=ac14bcc1f12d2407516bcdfef57b2740df48381b",
        "patch": "@@ -1019,7 +1019,6 @@ class CValidationState {\n /** RAII wrapper for VerifyDB: Verify consistency of the block and coin databases */\n class CVerifyDB {\n public:\n-\n     CVerifyDB();\n     ~CVerifyDB();\n     bool VerifyDB(int nCheckLevel, int nCheckDepth);"
      },
      {
        "sha": "a0a728fb81be6508621014a9bed4a7f739e94537",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=ac14bcc1f12d2407516bcdfef57b2740df48381b",
        "patch": "@@ -677,4 +677,3 @@ void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads)\n }\n \n #endif\n-"
      },
      {
        "sha": "dcd61d8fd9eaf76c4117b85f94d091426fa46fa4",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=ac14bcc1f12d2407516bcdfef57b2740df48381b",
        "patch": "@@ -10,11 +10,12 @@\n \n class CBlock;\n class CBlockIndex;\n-struct CBlockTemplate;\n class CReserveKey;\n class CScript;\n class CWallet;\n \n+struct CBlockTemplate;\n+\n /** Run the miner threads */\n void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads);\n /** Generate a new block, without valid proof-of-work */"
      },
      {
        "sha": "5e0173dcf242ffc4f9c2453aaacfa638fb3d1340",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=ac14bcc1f12d2407516bcdfef57b2740df48381b",
        "patch": "@@ -3,10 +3,10 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"rpcserver.h\"\n+#include \"checkpoints.h\"\n #include \"main.h\"\n+#include \"rpcserver.h\"\n #include \"sync.h\"\n-#include \"checkpoints.h\"\n \n #include <stdint.h>\n "
      },
      {
        "sha": "3caf7d89fe7caee9d355e1ec196db4b81e804ed9",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=ac14bcc1f12d2407516bcdfef57b2740df48381b",
        "patch": "@@ -13,9 +13,11 @@\n #include \"db.h\"\n #include \"wallet.h\"\n #endif\n+\n #include <stdint.h>\n \n #include <boost/assign/list_of.hpp>\n+\n #include \"json/json_spirit_utils.h\"\n #include \"json/json_spirit_value.h\"\n "
      },
      {
        "sha": "cccf2df484076d24df5bfcef79efa6d8e3b2f1fa",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 10,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac14bcc1f12d2407516bcdfef57b2740df48381b/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=ac14bcc1f12d2407516bcdfef57b2740df48381b",
        "patch": "@@ -962,13 +962,15 @@ const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n void ClearDatadirCache()\n {\n     std::fill(&pathCached[0], &pathCached[CChainParams::MAX_NETWORK_TYPES+1],\n-              boost::filesystem::path());\n+        boost::filesystem::path());\n }\n \n boost::filesystem::path GetConfigFile()\n {\n     boost::filesystem::path pathConfigFile(GetArg(\"-conf\", \"bitcoin.conf\"));\n-    if (!pathConfigFile.is_complete()) pathConfigFile = GetDataDir(false) / pathConfigFile;\n+    if (!pathConfigFile.is_complete())\n+        pathConfigFile = GetDataDir(false) / pathConfigFile;\n+\n     return pathConfigFile;\n }\n \n@@ -1028,9 +1030,9 @@ bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest)\n #endif /* WIN32 */\n }\n \n-\n-// Ignores exceptions thrown by boost's create_directory if the requested directory exists.\n-//   Specifically handles case where path p exists, but it wasn't possible for the user to write to the parent directory.\n+// Ignores exceptions thrown by Boost's create_directory if the requested directory exists.\n+// Specifically handles case where path p exists, but it wasn't possible for the user to\n+// write to the parent directory.\n bool TryCreateDirectory(const boost::filesystem::path& p)\n {\n     try\n@@ -1381,19 +1383,19 @@ bool ParseInt32(const std::string& str, int32_t *out)\n \n void SetupEnvironment()\n {\n-    #ifndef WIN32\n+#ifndef WIN32\n     try\n     {\n-\t#if BOOST_FILESYSTEM_VERSION == 3\n+#if BOOST_FILESYSTEM_VERSION == 3\n             boost::filesystem::path::codecvt(); // Raises runtime error if current locale is invalid\n-\t#else\t\t\t\t          // boost filesystem v2\n+#else // boost filesystem v2\n             std::locale();                      // Raises runtime error if current locale is invalid\n-\t#endif\n+#endif\n     } catch(std::runtime_error &e)\n     {\n         setenv(\"LC_ALL\", \"C\", 1); // Force C locale\n     }\n-    #endif\n+#endif\n }\n \n std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime)"
      }
    ]
  }
]