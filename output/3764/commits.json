[
  {
    "sha": "2e36866fecb7420cd73047a7aa762a6e5e225695",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTM2ODY2ZmVjYjc0MjBjZDczMDQ3YTdhYTc2MmE2ZTVlMjI1Njk1",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-02-27T01:55:04Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-07-04T02:38:44Z"
      },
      "message": "Show nodeid instead of addresses (for anonymity) unless otherwise requested.",
      "tree": {
        "sha": "8722a5d841711574d6cd1b3106fa2e67935fbd85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8722a5d841711574d6cd1b3106fa2e67935fbd85"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e36866fecb7420cd73047a7aa762a6e5e225695",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e36866fecb7420cd73047a7aa762a6e5e225695",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e36866fecb7420cd73047a7aa762a6e5e225695",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e36866fecb7420cd73047a7aa762a6e5e225695/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f04f1234078288d4806aaab0952d60f137337e81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f04f1234078288d4806aaab0952d60f137337e81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f04f1234078288d4806aaab0952d60f137337e81"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 35,
      "deletions": 25
    },
    "files": [
      {
        "sha": "397ce6e065a91a4a931beb37cefbe1e52525b65b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e36866fecb7420cd73047a7aa762a6e5e225695/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e36866fecb7420cd73047a7aa762a6e5e225695/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2e36866fecb7420cd73047a7aa762a6e5e225695",
        "patch": "@@ -288,6 +288,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n     strUsage += \"  -genproclimit=<n>      \" + _(\"Set the processor limit for when generation is on (-1 = unlimited, default: -1)\") + \"\\n\";\n     strUsage += \"  -help-debug            \" + _(\"Show all debugging options (usage: --help -help-debug)\") + \"\\n\";\n+    strUsage += \"  -logips                \" + _(\"Include IP addresses in debug output (default: 0)\") + \"\\n\";\n     strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp (default: 1)\") + \"\\n\";\n     if (GetBoolArg(\"-help-debug\", false))\n     {\n@@ -585,6 +586,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     fServer = GetBoolArg(\"-server\", false);\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n+    fLogIPs = GetBoolArg(\"-logips\", false);\n     setvbuf(stdout, NULL, _IOLBF, 0);\n #ifdef ENABLE_WALLET\n     bool fDisableWallet = GetBoolArg(\"-disablewallet\", false);"
      },
      {
        "sha": "a461c5c613c2689bbc9418363ae3e0fd81dbb0e1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e36866fecb7420cd73047a7aa762a6e5e225695/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e36866fecb7420cd73047a7aa762a6e5e225695/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2e36866fecb7420cd73047a7aa762a6e5e225695",
        "patch": "@@ -3547,7 +3547,7 @@ void static ProcessGetData(CNode* pfrom)\n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n {\n     RandAddSeedPerfmon();\n-    LogPrint(\"net\", \"received: %s (%u bytes)\\n\", strCommand, vRecv.size());\n+    LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", strCommand, vRecv.size(), pfrom->id);\n     if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n     {\n         LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n@@ -3579,7 +3579,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (pfrom->nVersion < MIN_PEER_PROTO_VERSION)\n         {\n             // disconnect from peers older than this proto version\n-            LogPrintf(\"partner %s using obsolete version %i; disconnecting\\n\", pfrom->addr.ToString(), pfrom->nVersion);\n+            LogPrintf(\"peer=%d using obsolete version %i; disconnecting\\n\", pfrom->id, pfrom->nVersion);\n             pfrom->PushMessage(\"reject\", strCommand, REJECT_OBSOLETE,\n                                strprintf(\"Version must be %d or greater\", MIN_PEER_PROTO_VERSION));\n             pfrom->fDisconnect = true;\n@@ -3660,7 +3660,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n         pfrom->fSuccessfullyConnected = true;\n \n-        LogPrintf(\"receive version message: %s: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", pfrom->cleanSubVer, pfrom->nVersion, pfrom->nStartingHeight, addrMe.ToString(), addrFrom.ToString(), pfrom->addr.ToString());\n+        LogPrintf(\"receive version message: %s: version %d, blocks=%d, us=%s, peer=%d\\n\", pfrom->cleanSubVer, pfrom->nVersion, pfrom->nStartingHeight, addrMe.ToString(), pfrom->id);\n \n         AddTimeData(pfrom->addr, nTime);\n     }\n@@ -3767,7 +3767,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             pfrom->AddInventoryKnown(inv);\n \n             bool fAlreadyHave = AlreadyHave(inv);\n-            LogPrint(\"net\", \"  got inventory: %s  %s\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\");\n+            LogPrint(\"net\", \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom->id);\n \n             if (!fAlreadyHave) {\n                 if (!fImporting && !fReindex) {\n@@ -3800,10 +3800,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         if (fDebug || (vInv.size() != 1))\n-            LogPrint(\"net\", \"received getdata (%u invsz)\\n\", vInv.size());\n+            LogPrint(\"net\", \"received getdata (%u invsz) peer=%d\\n\", vInv.size(), pfrom->id);\n \n         if ((fDebug && vInv.size() > 0) || (vInv.size() == 1))\n-            LogPrint(\"net\", \"received getdata for: %s\\n\", vInv[0].ToString());\n+            LogPrint(\"net\", \"received getdata for: %s peer=%d\\n\", vInv[0].ToString(), pfrom->id);\n \n         pfrom->vRecvGetData.insert(pfrom->vRecvGetData.end(), vInv.begin(), vInv.end());\n         ProcessGetData(pfrom);\n@@ -3825,7 +3825,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (pindex)\n             pindex = chainActive.Next(pindex);\n         int nLimit = 500;\n-        LogPrint(\"net\", \"getblocks %d to %s limit %d\\n\", (pindex ? pindex->nHeight : -1), hashStop==uint256(0) ? \"end\" : hashStop.ToString(), nLimit);\n+        LogPrint(\"net\", \"getblocks %d to %s limit %d from peer=%d\\n\", (pindex ? pindex->nHeight : -1), hashStop==uint256(0) ? \"end\" : hashStop.ToString(), nLimit, pfrom->id);\n         for (; pindex; pindex = chainActive.Next(pindex))\n         {\n             if (pindex->GetBlockHash() == hashStop)\n@@ -3908,8 +3908,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             vEraseQueue.push_back(inv.hash);\n \n \n-            LogPrint(\"mempool\", \"AcceptToMemoryPool: %s %s : accepted %s (poolsz %u)\\n\",\n-                pfrom->addr.ToString(), pfrom->cleanSubVer,\n+            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d %s : accepted %s (poolsz %u)\\n\",\n+                pfrom->id, pfrom->cleanSubVer,\n                 tx.GetHash().ToString(),\n                 mempool.mapTx.size());\n \n@@ -3962,8 +3962,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n         {\n-            LogPrint(\"mempool\", \"%s from %s %s was not accepted into the memory pool: %s\\n\", tx.GetHash().ToString(),\n-                pfrom->addr.ToString(), pfrom->cleanSubVer,\n+            LogPrint(\"mempool\", \"%s from peer=%d %s was not accepted into the memory pool: %s\\n\", tx.GetHash().ToString(),\n+                pfrom->id, pfrom->cleanSubVer,\n                 state.GetRejectReason());\n             pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n                                state.GetRejectReason(), inv.hash);\n@@ -3978,7 +3978,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         CBlock block;\n         vRecv >> block;\n \n-        LogPrint(\"net\", \"received block %s\\n\", block.GetHash().ToString());\n+        LogPrint(\"net\", \"received block %s peer=%d\\n\", block.GetHash().ToString(), pfrom->id);\n         // block.print();\n \n         CInv inv(MSG_BLOCK, block.GetHash());\n@@ -4095,8 +4095,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         if (!(sProblem.empty())) {\n-            LogPrint(\"net\", \"pong %s %s: %s, %x expected, %x received, %u bytes\\n\",\n-                pfrom->addr.ToString(),\n+            LogPrint(\"net\", \"pong peer=%d %s: %s, %x expected, %x received, %u bytes\\n\",\n+                pfrom->id,\n                 pfrom->cleanSubVer,\n                 sProblem,\n                 pfrom->nPingNonceSent,\n@@ -4336,7 +4336,7 @@ bool ProcessMessages(CNode* pfrom)\n         }\n \n         if (!fRet)\n-            LogPrintf(\"ProcessMessage(%s, %u bytes) FAILED\\n\", strCommand, nMessageSize);\n+            LogPrintf(\"ProcessMessage(%s, %u bytes) FAILED peer=%d\\n\", strCommand, nMessageSize, pfrom->id);\n \n         break;\n     }\n@@ -4540,7 +4540,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             uint256 hash = state.vBlocksToDownload.front();\n             vGetData.push_back(CInv(MSG_BLOCK, hash));\n             MarkBlockAsInFlight(pto->GetId(), hash);\n-            LogPrint(\"net\", \"Requesting block %s from %s\\n\", hash.ToString(), state.name);\n+            LogPrint(\"net\", \"Requesting block %s peer=%d\\n\", hash.ToString(), pto->id);\n             if (vGetData.size() >= 1000)\n             {\n                 pto->PushMessage(\"getdata\", vGetData);\n@@ -4557,7 +4557,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             if (!AlreadyHave(inv))\n             {\n                 if (fDebug)\n-                    LogPrint(\"net\", \"sending getdata: %s\\n\", inv.ToString());\n+                    LogPrint(\"net\", \"Requesting %s peer=%d\\n\", inv.ToString(), pto->id);\n                 vGetData.push_back(inv);\n                 if (vGetData.size() >= 1000)\n                 {"
      },
      {
        "sha": "c7bdb83aad28d513918fc7642878f87035a11f3d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e36866fecb7420cd73047a7aa762a6e5e225695/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e36866fecb7420cd73047a7aa762a6e5e225695/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2e36866fecb7420cd73047a7aa762a6e5e225695",
        "patch": "@@ -491,8 +491,6 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n     {\n         addrman.Attempt(addrConnect);\n \n-        LogPrint(\"net\", \"connected %s\\n\", pszDest ? pszDest : addrConnect.ToString());\n-\n         // Set to non-blocking\n #ifdef WIN32\n         u_long nOne = 1;\n@@ -513,6 +511,7 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n         }\n \n         pnode->nTimeConnected = GetTime();\n+\n         return pnode;\n     }\n \n@@ -524,7 +523,7 @@ void CNode::CloseSocketDisconnect()\n     fDisconnect = true;\n     if (hSocket != INVALID_SOCKET)\n     {\n-        LogPrint(\"net\", \"disconnecting node %s\\n\", addrName);\n+        LogPrint(\"net\", \"disconnecting peer=%d\\n\", id);\n         closesocket(hSocket);\n         hSocket = INVALID_SOCKET;\n     }\n@@ -548,7 +547,10 @@ void CNode::PushVersion()\n     CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(\"0.0.0.0\",0)));\n     CAddress addrMe = GetLocalAddress(&addr);\n     RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n-    LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), addrYou.ToString(), addr.ToString());\n+    if (fLogIPs)\n+        LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), addrYou.ToString(), id);\n+    else\n+        LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), id);\n     PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n                 nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>()), nBestHeight, true);\n }\n@@ -950,7 +952,6 @@ void ThreadSocketHandler()\n                 }\n                 else\n                 {\n-                    LogPrint(\"net\", \"accepted connection %s\\n\", addr.ToString());\n                     CNode* pnode = new CNode(hSocket, addr, \"\", true);\n                     pnode->AddRef();\n \n@@ -1040,7 +1041,7 @@ void ThreadSocketHandler()\n             {\n                 if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n                 {\n-                    LogPrint(\"net\", \"socket no message in first 60 seconds, %d %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0);\n+                    LogPrint(\"net\", \"socket no message in first 60 seconds, %d %d from %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0, pnode->id);\n                     pnode->fDisconnect = true;\n                 }\n                 else if (nTime - pnode->nLastSend > TIMEOUT_INTERVAL)"
      },
      {
        "sha": "3b169f442fa3d6efeebe6a0be50ddfcee850370f",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e36866fecb7420cd73047a7aa762a6e5e225695/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e36866fecb7420cd73047a7aa762a6e5e225695/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=2e36866fecb7420cd73047a7aa762a6e5e225695",
        "patch": "@@ -330,6 +330,11 @@ class CNode\n             id = nLastNodeId++;\n         }\n \n+        if (fLogIPs)\n+            LogPrint(\"net\", \"Added connection to %s peer=%d\\n\", addrName, id);\n+        else\n+            LogPrint(\"net\", \"Added connection peer=%d\\n\", id);\n+\n         // Be shy and don't send version until we hear\n         if (hSocket != INVALID_SOCKET && !fInbound)\n             PushVersion();\n@@ -446,7 +451,7 @@ class CNode\n             nRequestTime = it->second;\n         else\n             nRequestTime = 0;\n-        LogPrint(\"net\", \"askfor %s   %d (%s)\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n+        LogPrint(\"net\", \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str(), id);\n \n         // Make sure not to reuse time indexes to keep things in the same order\n         int64_t nNow = GetTimeMicros() - 1000000;\n@@ -514,7 +519,7 @@ class CNode\n         assert(ssSend.size () >= CMessageHeader::CHECKSUM_OFFSET + sizeof(nChecksum));\n         memcpy((char*)&ssSend[CMessageHeader::CHECKSUM_OFFSET], &nChecksum, sizeof(nChecksum));\n \n-        LogPrint(\"net\", \"(%d bytes)\\n\", nSize);\n+        LogPrint(\"net\", \"(%d bytes) peer=%d\\n\", nSize, id);\n \n         std::deque<CSerializeData>::iterator it = vSendMsg.insert(vSendMsg.end(), CSerializeData());\n         ssSend.GetAndClear(*it);"
      },
      {
        "sha": "081484c37d99ad4b9a62bd1f0a08c63b89266274",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e36866fecb7420cd73047a7aa762a6e5e225695/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e36866fecb7420cd73047a7aa762a6e5e225695/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=2e36866fecb7420cd73047a7aa762a6e5e225695",
        "patch": "@@ -95,6 +95,7 @@ bool fDaemon = false;\n bool fServer = false;\n string strMiscWarning;\n bool fLogTimestamps = false;\n+bool fLogIPs = false;\n volatile bool fReopenDebugLog = false;\n CClientUIInterface uiInterface;\n "
      },
      {
        "sha": "60db71bfd0a1842869dee5b614ab8f2bc3104eb5",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e36866fecb7420cd73047a7aa762a6e5e225695/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e36866fecb7420cd73047a7aa762a6e5e225695/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=2e36866fecb7420cd73047a7aa762a6e5e225695",
        "patch": "@@ -100,6 +100,7 @@ extern bool fPrintToDebugLog;\n extern bool fServer;\n extern std::string strMiscWarning;\n extern bool fLogTimestamps;\n+extern bool fLogIPs;\n extern volatile bool fReopenDebugLog;\n \n void RandAddSeed();"
      }
    ]
  }
]