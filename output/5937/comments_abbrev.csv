jonasschnelli,2015-03-22T19:34:23Z,"Looks good to me. utACK (will test).\nIt would be nice if we would have some rpc tests for this in `qa/rpc-tests/`.\nIf you do like to do this, you might start by taking this: https://github.com/jonasschnelli/bitcoin/blob/2014_12_fundtransaction/qa/rpc-tests/rawtransactions.py from PR #5503 \n",https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-84684008,84684008,
jgarzik,2015-03-23T11:42:42Z,ut ACK\n\nAgree w/ @jonasschnelli RE tests\n,https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-84961598,84961598,
dexX7,2015-03-23T17:59:06Z,"The two tests are not generic, but use hardcoded values, such as the private key used for signing.\n\nExpected behavior:\n\nTest 1: create and sign a valid raw transaction with one input:\n- 1) The transaction has a complete set of signatures\n- 2) No script verification error occurred\n\nTest 2: create and sign a raw transaction with one valid, and one invalid input script:\n- 3) The transaction ",https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-85124177,85124177,
jonasschnelli,2015-03-23T19:16:10Z,"@dexX7 test looks good! Nice.\nWe should try to keep the amount of rpc test scripts at minimum because of possible time limits during a test run (iirc travis has one). So maybe ""rawtransactions.py"" would be a better name (other rawtransaction testes could be added there).\n",https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-85154630,85154630,
jgarzik,2015-03-23T19:24:15Z,Added:  bitcoin-tx does the same function.  It would be nice to update that at the same time.\n,https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-85156906,85156906,
sipa,2015-03-24T12:58:23Z,utACK.\n\nAdding it to bitcoin-tx (along with an equivalent unit test for bitcoin-tx?) can be added later.\n,https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-85485303,85485303,
dexX7,2015-03-26T18:00:27Z,"@jgarzik: Once this is final, I can add something similar to bitcoin-tx.\n\n@jonasschnelli: I see, I renamed the test to `rawtransactions.py`, but I guess there are going to be some conflicts, so please let me know, if there is something specific to change.\n\nTo cover all cases where `complete` is `false` I extended the error reporting, and missing or already spent inputs are now also shown, with",https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-86647950,86647950,
jonasschnelli,2015-04-07T18:24:30Z,Tested ACK.\n@dexX7 don't worry about `rawtransactions.py` (in qa/rpc-tests/) conflicts. Depends on merge time there will be merge conflicts in this or other PRs. But trivial to solve.\n,https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-90689289,90689289,
laanwj,2015-05-04T11:41:09Z,Needs rebase again (sorry)\n,https://github.com/bitcoin/bitcoin/pull/5937#issuecomment-98684778,98684778,
sipa,2015-04-07T21:59:35Z,"It wasn't clear to me that the txid and vout here are about the outputs being spent, not about the transaction itself.\n",https://github.com/bitcoin/bitcoin/pull/5937#discussion_r27925254,27925254,src/rpcrawtransaction.cpp
sipa,2015-04-07T21:59:56Z,Seems overkill...\n,https://github.com/bitcoin/bitcoin/pull/5937#discussion_r27925278,27925278,src/rpcrawtransaction.cpp
dexX7,2015-04-08T00:09:31Z,"Hm.. I'm not sure, if the purpose of this PR was not clearly communicated by me, or if I misread your comment, or if the labels are faulty. The goal is to report any errors related to the signing and spending when using `signrawtransaction` - basically anything that causes a result with `""complete"": false`. Reporting which inputs in particular caused failures should help to locate the underlying i",https://github.com/bitcoin/bitcoin/pull/5937#discussion_r27933089,27933089,src/rpcrawtransaction.cpp
sipa,2015-04-08T04:33:26Z,"Sorry if I wasn't clear. I just suggest making the help output a bit clearer. I understand what it does and why, but the help text doesn't explain _which_ txid is being reported.\n",https://github.com/bitcoin/bitcoin/pull/5937#discussion_r27942217,27942217,src/rpcrawtransaction.cpp
sipa,2015-04-08T04:34:29Z,"Sequence number only has an effect on finality of transactions, which shouldn't usually be a cause of non-acceptance (if it is, it'll just be reported as non-final...).\n",https://github.com/bitcoin/bitcoin/pull/5937#discussion_r27942260,27942260,src/rpcrawtransaction.cpp
dexX7,2015-04-09T20:46:50Z,"Ahh, good point. I updated it to:\n- The hash of the referenced, previous transaction\n- The index of the output to spent and used as input\n- Verification or signing error related to the input\n",https://github.com/bitcoin/bitcoin/pull/5937#discussion_r28100931,28100931,src/rpcrawtransaction.cpp
