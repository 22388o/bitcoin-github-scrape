[
  {
    "sha": "3e6f7377f600e47e5e3d439fc5d6ccf3db210038",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTZmNzM3N2Y2MDBlNDdlNWUzZDQzOWZjNWQ2Y2NmM2RiMjEwMDM4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-27T16:19:52Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-05T17:39:38Z"
      },
      "message": "Improve getbalances coverage in wallet_balance tests\n\nand shift some getunconfirmedbalance calls to getbalances, as the former is\ndeprecated, while leaving essential coverage for it in test_balances().",
      "tree": {
        "sha": "5a0b2453f86e4d8b256c8b380eefe7ed629cb20e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a0b2453f86e4d8b256c8b380eefe7ed629cb20e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e6f7377f600e47e5e3d439fc5d6ccf3db210038",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6KGAcACgkQT1chs9Dj\nkh3HnQ/+P8sCl4Nd2whFBr84pyaSVC8jlc5NuAVwLsxtERXiqI/r6lwd+Dy7SZ8o\n7qR6LDxaJchunBhABc3Fk7TdmDiUVbNa6WSn0lZ8FZFmXd4XulS4F5fF56r7XVot\nQyZ6ZkEaGR5QQmQdESX52gnQIj0rZpL3e/uR2wxoCKlHHEyEI6Z5bYgOAliDkisv\nryl3/PfPcPWPg46XZynamFI9VRzN/Zu6n5r4Ke1We9sX06MWBVPlTYW2b3ZSnBAb\nTyBOWL46h6uuIAd4BEJgKTJwHLnWP3gyIe8y8VzOmtr44I3aMXcHueiI8DqoYq+I\neEgolUx6RisSkeo50mLWVKKhhchWhDtkuxWtibjhEDyltBBjLlnZ3R6Ocq5Pxdn6\nJS7oBS+7cDpGIS0n7slVaGD2I1HLBS1Q3f2tb9wuw0q6zGl7qIsr6S/k+LTTSAGQ\n5kmcw+IYWNxtmqVc0VF4X4NvkCt6lhjsG+xZrv20L/VkQudncbcK0gVvmeb53DSU\nhfTRKLH1lWyOPFQ52H4Zla88IYAWqpA99oVw722FS07jj3054ryPokUehHpMzS7b\nTfMYt3BjYrMkN/3dWWtkgVDQko3TahNESw1+rkbn18HHDX6qOyOS6Ynx28pF0z9L\namcz6iA8GEklz9TItb5E0MykgMj8qYLLgwusnsVVHW/2lNW8/H0=\n=+BF8\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGChLwqri2ECSXxhRyRLvTRDRD0atgGCZ/KNwcs7fXBSCP/wEEIvHTPssw38\nc51uOex4edcI8CD315NfxmTy3QbuyNzwQgOO23T+BcAYzCBmwEx+PwuIugjxBF6K\nGAjwCGoKiPpQD6MFAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQj8YJPiup4hbIVcvHXEXj5wjxIKYMqpsGTZk5YdQf\nVa2PKKrst9ZV1zmIMO9onsufqYLvCPEEXooYCPAIyRyNWbRAaUYAg9/jDS75DI4s\nK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmf/8BDJ\nX3Rke/lTpylWWYUx7UKvCPEEXooYCfAImMM1lbQlENIAg9/jDS75DI4uLWh0dHBz\nOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ658vrBNZ\ncSgQ82Py5Nne2AjxBF6KGAjwCK6+HJ+jA3evAIPf4w0u+QyOIyJodHRwczovL2J0\nYy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5a0b2453f86e4d8b256c8b380eefe7ed629cb20e\nparent 96a30b98c925b4ca63993759ddf7b4dd1fa58ec1\nauthor Jon Atack <jon@atack.com> 1585325992 +0100\ncommitter Jon Atack <jon@atack.com> 1586108378 +0200\n\nImprove getbalances coverage in wallet_balance tests\n\nand shift some getunconfirmedbalance calls to getbalances, as the former is\ndeprecated, while leaving essential coverage for it in test_balances().\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e6f7377f600e47e5e3d439fc5d6ccf3db210038",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e6f7377f600e47e5e3d439fc5d6ccf3db210038",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e6f7377f600e47e5e3d439fc5d6ccf3db210038/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96a30b98c925b4ca63993759ddf7b4dd1fa58ec1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96a30b98c925b4ca63993759ddf7b4dd1fa58ec1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96a30b98c925b4ca63993759ddf7b4dd1fa58ec1"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 24,
      "deletions": 10
    },
    "files": [
      {
        "sha": "58eb34e66cb689626efac7bfa97bc937e8f5cda3",
        "filename": "test/functional/wallet_balance.py",
        "status": "modified",
        "additions": 24,
        "deletions": 10,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e6f7377f600e47e5e3d439fc5d6ccf3db210038/test/functional/wallet_balance.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e6f7377f600e47e5e3d439fc5d6ccf3db210038/test/functional/wallet_balance.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_balance.py?ref=3e6f7377f600e47e5e3d439fc5d6ccf3db210038",
        "patch": "@@ -107,7 +107,7 @@ def run_test(self):\n         # First argument of getbalance must be set to \"*\"\n         assert_raises_rpc_error(-32, \"dummy first argument must be excluded or set to \\\"*\\\"\", self.nodes[1].getbalance, \"\")\n \n-        self.log.info(\"Test getbalance and getunconfirmedbalance with unconfirmed inputs\")\n+        self.log.info(\"Test balances with unconfirmed inputs\")\n \n         # Before `test_balance()`, we have had two nodes with a balance of 50\n         # each and then we:\n@@ -148,6 +148,18 @@ def run_test(self):\n \n \n         def test_balances(*, fee_node_1=0):\n+            # getbalances\n+            expected_balances_0 = {'mine':      {'immature':          Decimal('0E-8'),\n+                                                 'trusted':           Decimal('9.99'),  # change from node 0's send\n+                                                 'untrusted_pending': Decimal('60.0')},\n+                                   'watchonly': {'immature':          Decimal('5000'),\n+                                                 'trusted':           Decimal('50.0'),\n+                                                 'untrusted_pending': Decimal('0E-8')}}\n+            expected_balances_1 = {'mine':      {'immature':          Decimal('0E-8'),\n+                                                 'trusted':           Decimal('0E-8'),  # node 1's send had an unsafe input\n+                                                 'untrusted_pending': Decimal('30.0') - fee_node_1}}  # Doesn't include output of node 0's send since it was spent\n+            assert_equal(self.nodes[0].getbalances(), expected_balances_0)\n+            assert_equal(self.nodes[1].getbalances(), expected_balances_1)\n             # getbalance without any arguments includes unconfirmed transactions, but not untrusted transactions\n             assert_equal(self.nodes[0].getbalance(), Decimal('9.99'))  # change from node 0's send\n             assert_equal(self.nodes[1].getbalance(), Decimal('0'))  # node 1's send had an unsafe input\n@@ -160,11 +172,9 @@ def test_balances(*, fee_node_1=0):\n             assert_equal(self.nodes[1].getbalance(minconf=1), Decimal('0'))\n             # getunconfirmedbalance\n             assert_equal(self.nodes[0].getunconfirmedbalance(), Decimal('60'))  # output of node 1's spend\n-            assert_equal(self.nodes[0].getbalances()['mine']['untrusted_pending'], Decimal('60'))\n-            assert_equal(self.nodes[0].getwalletinfo()[\"unconfirmed_balance\"], Decimal('60'))\n-\n             assert_equal(self.nodes[1].getunconfirmedbalance(), Decimal('30') - fee_node_1)  # Doesn't include output of node 0's send since it was spent\n-            assert_equal(self.nodes[1].getbalances()['mine']['untrusted_pending'], Decimal('30') - fee_node_1)\n+            # getwalletinfo.unconfirmed_balance\n+            assert_equal(self.nodes[0].getwalletinfo()[\"unconfirmed_balance\"], Decimal('60'))\n             assert_equal(self.nodes[1].getwalletinfo()[\"unconfirmed_balance\"], Decimal('30') - fee_node_1)\n \n         test_balances(fee_node_1=Decimal('0.01'))\n@@ -174,15 +184,19 @@ def test_balances(*, fee_node_1=0):\n         self.nodes[0].sendrawtransaction(txs[1]['hex'])  # sending on both nodes is faster than waiting for propagation\n         self.sync_all()\n \n-        self.log.info(\"Test getbalance and getunconfirmedbalance with conflicted unconfirmed inputs\")\n+        self.log.info(\"Test getbalance and getbalances.mine.untrusted_pending with conflicted unconfirmed inputs\")\n         test_balances(fee_node_1=Decimal('0.02'))\n \n         self.nodes[1].generatetoaddress(1, ADDRESS_WATCHONLY)\n         self.sync_all()\n \n         # balances are correct after the transactions are confirmed\n-        assert_equal(self.nodes[0].getbalance(), Decimal('69.99'))  # node 1's send plus change from node 0's send\n-        assert_equal(self.nodes[1].getbalance(), Decimal('29.98'))  # change from node 0's send\n+        balance_node0 = Decimal('69.99')  # node 1's send plus change from node 0's send\n+        balance_node1 = Decimal('29.98')  # change from node 0's send\n+        assert_equal(self.nodes[0].getbalances()['mine']['trusted'], balance_node0)\n+        assert_equal(self.nodes[1].getbalances()['mine']['trusted'], balance_node1)\n+        assert_equal(self.nodes[0].getbalance(), balance_node0)\n+        assert_equal(self.nodes[1].getbalance(), balance_node1)\n \n         # Send total balance away from node 1\n         txs = create_transactions(self.nodes[1], self.nodes[0].getnewaddress(), Decimal('29.97'), [Decimal('0.01')])\n@@ -200,13 +214,13 @@ def test_balances(*, fee_node_1=0):\n \n         # check mempool transactions count for wallet unconfirmed balance after\n         # dynamically loading the wallet.\n-        before = self.nodes[1].getunconfirmedbalance()\n+        before = self.nodes[1].getbalances()['mine']['untrusted_pending']\n         dst = self.nodes[1].getnewaddress()\n         self.nodes[1].unloadwallet('')\n         self.nodes[0].sendtoaddress(dst, 0.1)\n         self.sync_all()\n         self.nodes[1].loadwallet('')\n-        after = self.nodes[1].getunconfirmedbalance()\n+        after = self.nodes[1].getbalances()['mine']['untrusted_pending']\n         assert_equal(before + Decimal('0.1'), after)\n \n         # Create 3 more wallet txs, where the last is not accepted to the"
      }
    ]
  },
  {
    "sha": "7eacdc5167c8db94df84e206db85817bc64e4921",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZWFjZGM1MTY3YzhkYjk0ZGY4NGUyMDZkYjg1ODE3YmM2NGU0OTIx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-27T16:21:14Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-05T17:40:25Z"
      },
      "message": "Shift coverage from getunconfirmedbalance to getbalances in wallet_abandonconflict tests",
      "tree": {
        "sha": "5c5e701a576c64f9b9d34c539c371301a554961a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c5e701a576c64f9b9d34c539c371301a554961a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7eacdc5167c8db94df84e206db85817bc64e4921",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6KGAoACgkQT1chs9Dj\nkh1h4Q//Yzfae2oz5C/hZys0q0H9R42ZOL3mYqkTXtMythpShI4y+OAWGs8yJv6M\nqc1nribfGWNkvPAtqt8zvl8P+EwdlRGyQJuFhv7zFpfxmsuBshAKB+OWgHGHc9Bd\nd7rSTXgB3D+23LiKVbs+xiGMPnbiohViqNadh09KRzDvKo+RxWcKqRl5XqnUm0yz\nyHpUQBO0xCy2WX0qk+PDstcqE/cQiebHCezdx65AXZbOCgAgBPpD6ELm+slszxPr\nn7ls/0jUh4kXO8EEz62v++Fga0ux1Cf/RTgk1HXrmfBfQud+68BoqzvtaAsVfqbs\nMpIH7eol++k6cXXbKgVFw/0zGIfJ9RkX7Hnz4I4m7iHIzggUcsXFQ1Q0KKLtPHlN\n2Cm5D4gk1plfqzU8Pmd/CHAoL38r9/ZWgs49cX7vMS5mx6uh7EaUswnlxgkgQF9b\nhQcAlO9TXudPM7haGJRekT3ix9o/SjvHr2UWkSc/cxyPGF+J3XgdCT69Op439Aqv\n6U3ucLCSYLvGWaiQyDANvD//teQEStEXvvetZvyIpRmSlRScd0sB198mr/5fdEx4\n0XMav9qZpIFAz1v+i7bCRyjrTUhgF+arqw8B5U6KvbwG3R2I4Sz0qudsY7BhM1+B\nRAv0WP6IoY5KSnETEpClPyMCC1dL/WlT5wr7s1rfczIwRl8dPLY=\n=9llA\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJvFhNNIuXZr1d2tpLnA5olQw3fglGClWz62tP0rkc8sCP/wEAtkV0Ect2RX\nm6G6x+AbX6gI8QReihgL8AghSe0PQiKWYACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wECrZzMCaIZEZT0CUAvgw2jMI8QReihgL\n8Ah8D1UeySxcawCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEMyMFB8RSuE3cM8oaiLvbXoI8QReihgL8AjGaBlRprCY\nxwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BDlGODRIG5ypHjm++2Cxa7GCPEEXooYC/AIBljjogPCNfsAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5c5e701a576c64f9b9d34c539c371301a554961a\nparent 3e6f7377f600e47e5e3d439fc5d6ccf3db210038\nauthor Jon Atack <jon@atack.com> 1585326074 +0100\ncommitter Jon Atack <jon@atack.com> 1586108425 +0200\n\nShift coverage from getunconfirmedbalance to getbalances in wallet_abandonconflict tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eacdc5167c8db94df84e206db85817bc64e4921",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7eacdc5167c8db94df84e206db85817bc64e4921",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eacdc5167c8db94df84e206db85817bc64e4921/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e6f7377f600e47e5e3d439fc5d6ccf3db210038",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e6f7377f600e47e5e3d439fc5d6ccf3db210038",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e6f7377f600e47e5e3d439fc5d6ccf3db210038"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d63ab28d611b2d4d80591dc614eab19a97ec0255",
        "filename": "test/functional/wallet_abandonconflict.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eacdc5167c8db94df84e206db85817bc64e4921/test/functional/wallet_abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eacdc5167c8db94df84e206db85817bc64e4921/test/functional/wallet_abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_abandonconflict.py?ref=7eacdc5167c8db94df84e206db85817bc64e4921",
        "patch": "@@ -110,8 +110,8 @@ def run_test(self):\n         assert_equal(newbalance, balance - signed3_change)\n         # Unconfirmed received funds that are not in mempool, also shouldn't show\n         # up in unconfirmed balance\n-        unconfbalance = self.nodes[0].getunconfirmedbalance() + self.nodes[0].getbalance()\n-        assert_equal(unconfbalance, newbalance)\n+        balances = self.nodes[0].getbalances()['mine']\n+        assert_equal(balances['untrusted_pending'] + balances['trusted'], newbalance)\n         # Also shouldn't show up in listunspent\n         assert not txABC2 in [utxo[\"txid\"] for utxo in self.nodes[0].listunspent(0)]\n         balance = newbalance"
      }
    ]
  },
  {
    "sha": "0306d78cb49d1684cc96ba3512b582a1fdaf78cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMzA2ZDc4Y2I0OWQxNjg0Y2M5NmJhMzUxMmI1ODJhMWZkYWY3OGNj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-27T16:20:28Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-05T17:40:28Z"
      },
      "message": "Use getbalances in wallet_address_types tests",
      "tree": {
        "sha": "7715f86f777902c0b12ad06be7de09c654be0885",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7715f86f777902c0b12ad06be7de09c654be0885"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0306d78cb49d1684cc96ba3512b582a1fdaf78cc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6KGAwACgkQT1chs9Dj\nkh0QSA//eOnnKvZJOfvWul8/zn2ggOrAOVMyrdxkN0TH+MjWjthKovcGdpLL2G8g\ndh4/KdxOdC5EHZ+gkhybVYT4lGeFjfs3GmjeCC1YZ2P0VHcOqgVo+TKPQARtBEJd\nxvcj3aiUPMEczLSjfu+Q3tQtTrTRWocIqBSOaHs5OMsn+Mk6ujCvF80GIyVtbtiz\nYPExBPDEe+42hFskXT1ki+x5mxFrmrq54CZ3/1gN54P6tM4675HRpiBmWBmfgCXb\nfBomWZi5nunKDXjgjpd4fWXFVV5sc3gyFQKChumRnUGGXZTac36mzQm6x6fSl7aO\nWpQatwm7tm+YZwRfCJ1KLJ2OIpYexpRoZLcfSa4x6erUrkBG5ACBq05JWH5XWgdL\nbuUyReSA0cO5FIDGra+/vnYLWBPXKh+s0alhB6Ejqaobd3DJfzUG1jdknC1N0BDE\nb9ORQFnhDvNW78kuUNsNCP6TMCLT42Jl8oBY1cYWJSTlAEd8sOIPSYOSSvu8LsG0\n7wsaEE9hc04FnD1SBnPaxjQrPzAFvXJoGfF5zUtG+QfAqFQvLc3VUt8eht9ahBeY\nkL3UFI0OWFVLjRYktOB0dp+b3bYNYeETBQhIwUMsrD/qJQHJYDJ3jycu7LYNshvl\nQK/8Y822cQyzioydGYmKTsNQIISADsAmzCG9RjxQ3z3p1dk7mlo=\n=Ajvm\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOisZT/yFf0iiTy2M+gXVVYWxGBBHSR19KYSyQ3hLNFVCP/wEEq2glL/FH5n\nzQ9XmvePit0I8SDFQtzSAH5RR1kdsXcVRFSY1a4eXSD+wQswoJjuWL5jQQjxBF6K\nGA3wCATwKjeaNA0zAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQT8nYFYYXCWyPuTMRz4DxrgjwINaFj+ZrogRq\nXT1NvplBdT568MEgJkSVNNzEE1GHLVTdCPEEXooYDfAImjGVdvRCMngAg9/jDS75\nDI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23/8BCF\nxrymD8ATPtxowI4elwfdCPEEXooYDvAIjZnI3szv5QoAg9/jDS75DI4jImh0dHBz\nOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23wEN+hZK9yT8OSAqwYbycgdyUI\n8SAja4oSmB2BfQcNCl5+mJ7sJ8ld7tJye1CfauwiFbZ/lgjxBF6KGA7wCLoDAiao\n6YAsAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 7715f86f777902c0b12ad06be7de09c654be0885\nparent 7eacdc5167c8db94df84e206db85817bc64e4921\nauthor Jon Atack <jon@atack.com> 1585326028 +0100\ncommitter Jon Atack <jon@atack.com> 1586108428 +0200\n\nUse getbalances in wallet_address_types tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0306d78cb49d1684cc96ba3512b582a1fdaf78cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0306d78cb49d1684cc96ba3512b582a1fdaf78cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0306d78cb49d1684cc96ba3512b582a1fdaf78cc/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7eacdc5167c8db94df84e206db85817bc64e4921",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eacdc5167c8db94df84e206db85817bc64e4921",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7eacdc5167c8db94df84e206db85817bc64e4921"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "065764dcac2535e672c6b7b9f54ddd227b03f87f",
        "filename": "test/functional/wallet_address_types.py",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0306d78cb49d1684cc96ba3512b582a1fdaf78cc/test/functional/wallet_address_types.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0306d78cb49d1684cc96ba3512b582a1fdaf78cc/test/functional/wallet_address_types.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_address_types.py?ref=0306d78cb49d1684cc96ba3512b582a1fdaf78cc",
        "patch": "@@ -97,12 +97,9 @@ def setup_network(self):\n                 connect_nodes(self.nodes[i], j)\n         self.sync_all()\n \n-    def get_balances(self, confirmed=True):\n-        \"\"\"Return a list of confirmed or unconfirmed balances.\"\"\"\n-        if confirmed:\n-            return [self.nodes[i].getbalance() for i in range(4)]\n-        else:\n-            return [self.nodes[i].getunconfirmedbalance() for i in range(4)]\n+    def get_balances(self, key='trusted'):\n+        \"\"\"Return a list of balances.\"\"\"\n+        return [self.nodes[i].getbalances()['mine'][key] for i in range(4)]\n \n     # Quick test of python bech32 implementation\n     def test_python_bech32(self, addr):\n@@ -307,7 +304,7 @@ def run_test(self):\n             self.nodes[from_node].sendmany(\"\", sends)\n             self.sync_mempools()\n \n-            unconf_balances = self.get_balances(False)\n+            unconf_balances = self.get_balances('untrusted_pending')\n             self.log.debug(\"Check unconfirmed balances: {}\".format(unconf_balances))\n             assert_equal(unconf_balances[from_node], 0)\n             for n, to_node in enumerate(range(from_node + 1, from_node + 4)):"
      }
    ]
  }
]