[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300093712",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300093712",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300093712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDA5MzcxMg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T08:13:42Z",
    "updated_at": "2017-05-09T08:13:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 6e43829\r\n\r\nVery good! This will make Python linting easier!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300093712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300523187",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300523187",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300523187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDUyMzE4Nw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T15:40:21Z",
    "updated_at": "2017-05-10T15:46:05Z",
    "author_association": "MEMBER",
    "body": "I still question this goal, because I think having to (for example) manually add each script opcode as an import when you want to use one in a test is needlessly time-wasting for test writers, but for now I'd like to make the more important observation that merging this will likely cause substantive PRs to need to be rebased (punishment for actually including or updating a test!).\r\n\r\nFor reference, my earlier comments on this idea: https://github.com/bitcoin/bitcoin/pull/9876#issuecomment-283057363",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300523187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300529110",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300529110",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300529110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDUyOTExMA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T15:58:19Z",
    "updated_at": "2017-05-10T15:58:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sdaftuar Do you have any examples of substantive PRs that would need to be rebased after merging this one?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300529110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300533895",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300533895",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300533895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDUzMzg5NQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T16:14:10Z",
    "updated_at": "2017-05-10T16:14:10Z",
    "author_association": "MEMBER",
    "body": "> This will make Python linting easier!\n\nEven though I can understand the desire to have a single style or converge\nthe whole python code base to pep8, I tend to object based on the\nmaintenance overhead. The python syntax is already rather strict and\ncurrently we should not make it more strict without clear reasoning. The\nthread Suhas liked to, explains why wildcards could be useful to write\ntests more productively and with less hassle.\n\nPlease note that we don't have a general coding guide for python code at\nthis point and refactoring for the sake of pep8 without previous discussion\nmight cause more hassle than it is worth.\n\nSo Concept NACK on this pull for now, as it would conflict with the ongoing\ntest_framework refactoring. More precisely, it would go in the wrong\ndirection, when i see `+ stop_node` in the diff, which is planned to be\nmade a private method of the test framework, so should not be added to the\nlist of imports.\n\n\nOn Wed, May 10, 2017 at 5:40 PM, Suhas Daftuar <notifications@github.com>\nwrote:\n\n> I still question this goal, because I think having to (for example)\n> manually add each script opcode as an import when you want to use one in a\n> test is needlessly time-wasting for test writers, but for now I'd like to\n> make the more important observation that merging this will cause\n> substantive PRs to all need to be rebased (punishment for actually\n> including or updating a test!).\n>\n> For reference, my earlier comments on this idea: #9876 (comment)\n> <https://github.com/bitcoin/bitcoin/pull/9876>\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300523187>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGGmv1zMoNpRFfmh65687T0aL6yBNvJfks5r4dp7gaJpZM4NUs4F>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300533895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300535680",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300535680",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300535680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDUzNTY4MA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T16:20:29Z",
    "updated_at": "2017-05-10T16:20:29Z",
    "author_association": "MEMBER",
    "body": "@sdaftuar I have to respectfully disagree. Adding opcodes as you use them makes perfect sense to me. It also gives you an overview of what opcodes are actually being checked, as an added bonus, just by looking at the imports and not the tests themselves (which can be a bit long-winded at times, unfortunately). I also have a hard time believing this PR would cause conflicts in a lot of test PRs, and I am fairly sure most of the test developers agree that * imports are just generally bad.\r\n\r\n@MarcoFalke It's no so much about a style but about proper development. Importing * means you lose control over what is going where, just like rampant usage of using namespace xyz in C++. In core proper it can be flat out dangerous and lead to unpredictable behavior with version upgrades, which may not necessarily be the case with functional tests, but it's still a step in the right direction.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300535680/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300537401",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300537401",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300537401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDUzNzQwMQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T16:26:28Z",
    "updated_at": "2017-05-10T16:26:28Z",
    "author_association": "MEMBER",
    "body": "I agree it is a step in the right direction, but right now is not a good\ntime to do global refactors that stall progress of other pulls. I think we\nshould wait until less refactoring happens in the core files of the test\nframework (such as https://github.com/bitcoin/bitcoin/pull/10359/files#diff-\nbf6de4c07d2e9114c8f01eea45c6cab3L11) and revisit this pull after the dust\nhas settled.\n\nOn Wed, May 10, 2017 at 6:20 PM, kallewoof <notifications@github.com> wrote:\n\n> @sdaftuar <https://github.com/sdaftuar> I have to respectfully disagree.\n> Adding opcodes as you use them makes perfect sense to me. It also gives you\n> an overview of what opcodes are actually being checked, as an added bonus,\n> just by looking at the imports and not the tests themselves (which can be a\n> bit long-winded at times, unfortunately). I also have a hard time believing\n> this PR would cause conflicts in a lot of test PRs, and I am fairly sure\n> most of the test developers agree that * imports are just generally bad.\n>\n> @MarcoFalke <https://github.com/MarcoFalke> It's no so much about a style\n> but about proper development. Importing * means you lose control over what\n> is going where, just like rampant usage of using namespace xyz in C++. In\n> core proper it can be flat out dangerous and lead to unpredictable behavior\n> with version upgrades, which may not necessarily be the case with\n> functional tests, but it's still a step in the right direction.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300535680>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGGmvwlNzvLJbPYa-xieJMvnPjetCp2Eks5r4ePhgaJpZM4NUs4F>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300537401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300604902",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300604902",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300604902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDYwNDkwMg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T20:36:34Z",
    "updated_at": "2017-05-10T20:36:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke When mentioning the linting improvements I was specifically thinking about finding unused imports (see below on why that matters), not full PEP-8 compliance :-)\r\n\r\nExplicit imports in tests make it easier to get a quick feeling for what a specific test case covers. And perhaps more importantly, by using explicit imports while at the same time removing unused imports it makes it very clear what is **not** covered by a specific test case (not imported \u21d4 not tested).\r\n\r\nStrong concept ACK!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300604902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300609124",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300609124",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300609124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDYwOTEyNA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T20:53:20Z",
    "updated_at": "2017-05-10T20:53:20Z",
    "author_association": "MEMBER",
    "body": "The tests in /functional/ are not supposed to test the test framework,\nbut the bitcoind/qt api and internals, so test coverage can not be\ninferred from which utility methods are (or are not) imported from the\ntest framework.\n\n> by using explicit imports while at the same time removing unused imports\n\nAs mentioned earlier, removing unused imports is a cleanup that should\nhappen every couple of months, not on a regular basis... Another\nreason against explicit imports is that people will start opening\ndaily pulls to sort all of those alphabetically (see #10302)\n\nOn Wed, May 10, 2017 at 10:36 PM, practicalswift\n<notifications@github.com> wrote:\n> @MarcoFalke When mentioning the linting improvements I was specifically\n> thinking about finding unused imports (see below on why that matters), not\n> full PEP-8 compliance :-)\n>\n> Explicit imports in tests make it easier to get a quick feeling for what a\n> specific test case covers. And perhaps more importantly, by using explicit\n> imports while at the same time removing unused imports it makes it very\n> clear what is not covered by a specific test case (not imported \u21d4 not\n> tested).\n>\n> Strong concept ACK!\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300609124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300610914",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300610914",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300610914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDYxMDkxNA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T20:59:58Z",
    "updated_at": "2017-05-10T21:04:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke Let's agree that sorting imports alphabetically daily is a waste of time :-)  That kind of PR:s can perhaps be avoided by adding a clear policy in `developer-notes.md`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300610914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300639008",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300639008",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300639008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDYzOTAwOA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T23:17:35Z",
    "updated_at": "2017-05-10T23:18:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is a good change because `import *` can make unfamiliar python code really hard to read (you have no idea where identifiers are coming from).\r\n\r\nI also think @sdaftuar has a good point about script opcodes, and if there could be a solution for referencing opcodes that doesn't rely on `import *` before making this change, that would also make this PR smaller and a little easier to review. Maybe the solution could be defining an `Op` class and replacing `OP_RETURN` with `Op.RETURN`, etc. Or just accepting strings like `\"OP_RETURN\"`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300639008/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300655896",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300655896",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300655896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY1NTg5Ng==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-11T01:20:35Z",
    "updated_at": "2017-05-11T01:20:35Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky There is the\r\n```Python\r\nimport test_framework.script as script\r\n[...]\r\n        p2sh_program = CScript([script.OP_TRUE])\r\n[...]\r\n```\r\napproach. A bit verbose perhaps, but better than import *.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300655896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300661371",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-300661371",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 300661371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY2MTM3MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-11T01:59:42Z",
    "updated_at": "2017-05-11T02:05:29Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke \r\n> I agree it is a step in the right direction, but right now is not a good\r\ntime to do global refactors that stall progress of other pulls. I think we\r\nshould wait until less refactoring happens in the core files of the test\r\nframework (such as https://github.com/bitcoin/bitcoin/pull/10359/files#diff-\r\nbf6de4c07d2e9114c8f01eea45c6cab3L11) and revisit this pull after the dust\r\nhas settled.\r\n\r\nI don't see what would be stalled by replacing the import statements with explicit ones, aside from the cases of new imports. I'm perfectly content waiting on #10359 and other PR's that are considered high priority though, but I am also fairly certain @jnewbery (author of #10359) is all for this PR being merged, considering he tried the same thing in #9876.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300661371/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315744154",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-315744154",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 315744154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTc0NDE1NA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-17T12:40:40Z",
    "updated_at": "2017-07-17T12:40:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Needs rebase :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315744154/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315957996",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-315957996",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 315957996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk1Nzk5Ng==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-18T04:55:44Z",
    "updated_at": "2017-07-18T04:55:44Z",
    "author_association": "MEMBER",
    "body": "Rebased!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315957996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315987531",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-315987531",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 315987531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk4NzUzMQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-18T07:56:05Z",
    "updated_at": "2017-07-18T07:56:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for rebasing.\r\n\r\nIt appears as if `test/functional/merkle_blocks.py` needs to import `assert_raises_jsonrpc` from `test_framework.util` :-)\r\n\r\nThe use of `assert_raises_jsonrpc` was introduced in @jnewbery:s commit 6294f3283a5b6919795621dc067ec80c0cd2a334.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/315987531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331621171",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-331621171",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 331621171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTYyMTE3MQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-23T08:57:47Z",
    "updated_at": "2017-09-23T09:00:24Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, needs rebase\r\n\r\nEDIT: Although I think it's fine to have small exceptions like for the example of the opcodes (these examples can be separated to their own files).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331621171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331783253",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-331783253",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 331783253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTc4MzI1Mw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-25T05:50:31Z",
    "updated_at": "2017-09-25T05:50:31Z",
    "author_association": "MEMBER",
    "body": "@jtimon That might make sense, yeah. (As for rebasing, I will hold off on that until I know we are ready to move forward with this.)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331783253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371244299",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10366#issuecomment-371244299",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10366",
    "id": 371244299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI0NDI5OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-07T18:53:34Z",
    "updated_at": "2018-03-07T18:53:34Z",
    "author_association": "MEMBER",
    "body": "Closing this, this seems to be somewhat controversial, and that's not desirable for something that makes changes all over the test framework and causes lots of necessary rebases of other commits.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371244299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]