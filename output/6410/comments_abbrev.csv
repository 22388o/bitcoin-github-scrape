laanwj,2015-07-10T10:57:42Z,Tested ACK.\n\nNit: I'd slightly prefer `DynamicUsage` for eg `uint256` as helper functions outside the class instead of added members.\n,https://github.com/bitcoin/bitcoin/pull/6410#issuecomment-120384632,120384632,
sipa,2015-07-10T14:55:26Z,Updated to retain the totaltxsize field in the RPC output.\n\n@laanwj I avoided the need for a DynamicMemoryUsage for uint256 altogether now.\n,https://github.com/bitcoin/bitcoin/pull/6410#issuecomment-120428723,120428723,
laanwj,2015-07-10T15:08:01Z,"Ok, even better.\n",https://github.com/bitcoin/bitcoin/pull/6410#issuecomment-120431695,120431695,
jonasschnelli,2015-07-11T09:48:39Z,"Review ACK.\nutACK (code is now running on bitcoin.jonasschnelli.ch)\nvery minor nit: some ifs have opening brackets on the same line, some not. But i don't care.\n",https://github.com/bitcoin/bitcoin/pull/6410#issuecomment-120600125,120600125,
sipa,2015-07-11T10:44:47Z,"Re code style: I'm aware, but I'm always following the style of the\nsurroundig code.\n",https://github.com/bitcoin/bitcoin/pull/6410#issuecomment-120603391,120603391,
jtimon,2015-07-11T11:36:09Z,"utACK\n\nRegarding style, I believe https://github.com/bitcoin/bitcoin/blob/master/src/.clang-format says always in the same line for if, else, for, switch and always in the next line for functions/methods (unless they are defined in one line, which is allowed). That's what I'm doing when I need to touch the lines, but I have to admit I'm not 100% sure. Anyway, style nits...\n",https://github.com/bitcoin/bitcoin/pull/6410#issuecomment-120606435,120606435,
jonasschnelli,2015-07-11T13:48:55Z,Here are also some stats done with a node running this PR: http://bitcoin.jonasschnelli.ch/charts/mempool/\n,https://github.com/bitcoin/bitcoin/pull/6410#issuecomment-120621383,120621383,
petertodd,2015-07-11T13:58:04Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6410#issuecomment-120623171,120623171,
morcos,2015-07-13T21:00:17Z,Any reason we're not counting the other member variables? Seems like there are another 53 bytes per CTMemPoolEntry?\n,https://github.com/bitcoin/bitcoin/pull/6410#discussion_r34511243,34511243,src/txmempool.h
sipa,2015-07-13T21:05:54Z,"Maybe it should have been called IndirectMemoryUsage. The size of the CTxMemPoolEntry structure itself is accounted for through memusage::DynamicUsage(mapTx), in which the entries are included. That allows for accurately taking alignment and malloc overhead into account.\n",https://github.com/bitcoin/bitcoin/pull/6410#discussion_r34511862,34511862,src/txmempool.h
