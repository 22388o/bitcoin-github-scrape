dcousens,2016-09-05T07:02:32Z,"utACK 8a87470\n\nSubmitted a PR for your PR, see https://github.com/NicolasDorier/bitcoin/pull/1\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-244672228,244672228,
luke-jr,2016-09-05T07:09:29Z,"This means we're not enforcing it on the genesis block? Doesn't look like a practical problem today, but feels like a booby-trap. :/\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-244673248,244673248,
NicolasDorier,2016-09-05T07:38:08Z,"@luke-jr yes, there is two calls to it, one check explicitely it is not the genesis\n\nhttps://github.com/NicolasDorier/bitcoin/blob/8a87470ebbd289b502e7aec5476368dcfc3c18bb/src/main.cpp#L3655\n\nAnd the other is TestBlockValidity, which test a block which got mined, so obviously not the genesis.\n\nhttps://github.com/NicolasDorier/bitcoin/blob/8a87470ebbd289b502e7aec5476368dcfc3c18bb/src/main.cpp",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-244678235,244678235,
NicolasDorier,2016-09-09T02:55:48Z,"Added [one more assert](https://github.com/bitcoin/bitcoin/pull/8665/commits/34a37bad84330126b97fbc31ca1c01a9ed1c5664) which make review more easy. This one bit me quite a few time, as pIndex sometimes refers to the block being evaluated, and sometimes to the previous one.\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-245804886,245804886,
dcousens,2016-09-09T03:05:15Z,utACK 34a37ba\n,https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-245806204,245806204,
NicolasDorier,2016-09-09T04:50:06Z,"mmh failure with last commit, investigating it. Interesting.\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-245818845,245818845,
NicolasDorier,2016-09-09T13:29:44Z,"yuk, the problem was that `pindex->phashBlock == NULL` is used as a flag to know if it is called by CreateNewBlock...\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-245913004,245913004,
morcos,2016-09-12T20:00:09Z,"I don't think we should tag PR's like this with ""Trivial""\nPerhaps I'm misremembering, but I thought ""Trivial"" was for things that only changed comments or strings that couldn't possibly change behavior.  This PR takes at least a little bit of thinking about.\n\nI don't have much of an opinion on the actual changes.\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-246472492,246472492,
sipa,2016-09-12T20:16:22Z,"I agree, this is not trivial. Trivial is for comment and documentation\nchanges. Not just ""this does not change behaviour"", but ""this so obviously\ndoes not change behaviour that it does not need review"".\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-246477296,246477296,
NicolasDorier,2016-09-13T09:54:24Z,"Actually I thought that we were in the ""this so obviously does not change behaviour that it does not need review"" condition, until I saw that phashBlock could be NULL...\n\nIf it is not obvious then maybe this PR is not worth the review time, I can remove some commits if needed to make it trivial again.\n\nBut on the other side, I added assert to make non trivial things more visible...\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-246632613,246632613,
dcousens,2016-09-13T10:32:02Z,"I think the PR is still worth it for the simple fact it adds more information/context to the code.\nHowever,  perhaps as discussed on IRC,  it might be better to just remove the assertions and de-reference the pointers at the call sites by using a C++ reference.\n",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-246641147,246641147,
laanwj,2016-09-13T15:30:13Z,"> If it is not obvious then maybe this PR is not worth the review time, I can remove some commits if needed to make it trivial again.\n\nI think these changes are okay, let's just not call it trivial. As @morcos says the trivial denomination is for puls that don't change code, e.g. documentation typos, string typos, comment changes. Asserts generate code and can in principle create bad situations ",https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-246720886,246720886,
MarcoFalke,2016-09-30T17:23:55Z,utACK dc64a16af92bf459dde32c32cea11b266db54f04\n,https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-250802947,250802947,
MarcoFalke,2016-12-04T16:38:21Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-264714192,264714192,
NicolasDorier,2017-02-16T01:52:37Z,rebased,https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-280204809,280204809,
NicolasDorier,2017-02-19T05:03:44Z,addressed TheBlueMatt comment,https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-280896556,280896556,
NicolasDorier,2017-02-23T08:45:23Z,Anything missing ?,https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-281930708,281930708,
NicolasDorier,2017-03-14T05:52:13Z,not sure what to do with this PR. I think it increases readability... but it has been open since september. Do I keep open ?,https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-286328956,286328956,
laanwj,2017-03-14T09:36:42Z,Yeah let's merge it. Asserting out is better than crashing with a NULL pointer dereference.,https://github.com/bitcoin/bitcoin/pull/8665#issuecomment-286368530,286368530,
laanwj,2016-09-13T08:18:20Z,This case (Genesis block) is never actually necessary?\n,https://github.com/bitcoin/bitcoin/pull/8665#discussion_r78515172,78515172,src/pow.cpp
dcousens,2016-09-13T08:49:41Z,"`GetNextWorkRequired` is never called with `pindexLast == NULL` (as written, not as tested, aka, per the code base)\n",https://github.com/bitcoin/bitcoin/pull/8665#discussion_r78519709,78519709,src/pow.cpp
TheBlueMatt,2017-02-19T01:45:47Z,"(or, generally, by TestBlockValidity)",https://github.com/bitcoin/bitcoin/pull/8665#discussion_r101906834,101906834,src/validation.cpp
