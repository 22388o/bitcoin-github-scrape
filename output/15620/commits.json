[
  {
    "sha": "fa965e03c73ea8172d7ec948da76f7b27b2be63f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk2NWUwM2M3M2VhODE3MmQ3ZWM5NDhkYTc2ZjdiMjdiMmJlNjNm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-03-18T17:58:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-03-18T17:55:19Z"
      },
      "message": "rpc: Use IsValidNumArgs over hardcoded size checks",
      "tree": {
        "sha": "3b4bf312e7b6ba7830410bece31468b8bc461ac8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b4bf312e7b6ba7830410bece31468b8bc461ac8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa965e03c73ea8172d7ec948da76f7b27b2be63f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcj9uHAAoJEM4rdWl+aaVIsFQL/iOhaiFgiaUL9MaYIRM8ZEVx\ne+MDlhBuoBmE8f1aeObEGxtjDnUHD1u+eTWw999xSutP3dceP/EZGZEQZCdCw3ZV\nwuPgS0BH0x+7KsVSkQ4EeVNCxlRaPEOtgSx0EuB6CJ3lq7awFZb+I9NmFZ9kS5OS\n+FKo1GituO2mCtKO4MJYDqyxfOfEfkSHXR7NOWyOT3HFUuhgh3mEJLnOXCQNGVaP\n0JN92Z+kSws9AZfT1RCrLzaHEGbNL9hE2cC5VYqqZ9sAvzBMZgiWtHC4mtBtwi/e\nnh34DUmeVrfrG9oqdehnsnR53ocAmMXXJd79z4aBjpWbkx52GZ3kUmZFy3UwWFXV\nKmslxCuUJNWnJq8cdpHsy69nfYZbh8WcYEPk8qMA+SJVmRnD7V58K9iCoXb/ciUg\nZslHKtkJWQkCE9wRGORHstDVpN6frg5AYpSIAOypwg+SkAFTrnAMxpRc/7thaTEG\nZQ1hiuQF/2fPQZA03GN03tDaPpEXrGoXK2F/qL8Dxg==\n=aFDb\n-----END PGP SIGNATURE-----",
        "payload": "tree 3b4bf312e7b6ba7830410bece31468b8bc461ac8\nparent c033c4b5cef89a654e4d9d5c5f9bd823871b068b\nauthor MarcoFalke <falke.marco@gmail.com> 1552931884 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1552931719 -0400\n\nrpc: Use IsValidNumArgs over hardcoded size checks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa965e03c73ea8172d7ec948da76f7b27b2be63f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa965e03c73ea8172d7ec948da76f7b27b2be63f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa965e03c73ea8172d7ec948da76f7b27b2be63f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c033c4b5cef89a654e4d9d5c5f9bd823871b068b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c033c4b5cef89a654e4d9d5c5f9bd823871b068b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c033c4b5cef89a654e4d9d5c5f9bd823871b068b"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "13f02f0174981ce9452ea3a48e291eda34fbe59b",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa965e03c73ea8172d7ec948da76f7b27b2be63f/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa965e03c73ea8172d7ec948da76f7b27b2be63f/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fa965e03c73ea8172d7ec948da76f7b27b2be63f",
        "patch": "@@ -1033,9 +1033,7 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n \n static UniValue sendrawtransaction(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw std::runtime_error(\n-            RPCHelpMan{\"sendrawtransaction\",\n+    const RPCHelpMan help{\"sendrawtransaction\",\n                 \"\\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\\n\"\n                 \"\\nAlso see createrawtransaction and signrawtransactionwithkey calls.\\n\",\n                 {\n@@ -1055,7 +1053,11 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n                 },\n-            }.ToString());\n+    };\n+\n+    if (request.fHelp || !help.IsValidNumArgs(request.params.size())) {\n+        throw std::runtime_error(help.ToString());\n+    }\n \n     RPCTypeCheck(request.params, {\n         UniValue::VSTR,\n@@ -1095,9 +1097,7 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n \n static UniValue testmempoolaccept(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n-        throw std::runtime_error(\n-            RPCHelpMan{\"testmempoolaccept\",\n+    const RPCHelpMan help{\"testmempoolaccept\",\n                 \"\\nReturns result of mempool acceptance tests indicating if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n                 \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n                 \"\\nSee sendrawtransaction call.\\n\",\n@@ -1130,7 +1130,10 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n             \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n                 },\n-            }.ToString());\n+    };\n+\n+    if (request.fHelp || !help.IsValidNumArgs(request.params.size())) {\n+        throw std::runtime_error(help.ToString());\n     }\n \n     RPCTypeCheck(request.params, {"
      }
    ]
  },
  {
    "sha": "fa96d7642178b5472b7aa76de9c8b86e7b9cde54",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk2ZDc2NDIxNzhiNTQ3MmI3YWE3NmRlOWM4Yjg2ZTdiOWNkZTU0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-03-18T18:00:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-03-18T17:56:56Z"
      },
      "message": "rpc: Uncouple rpcs from maxTxFee global",
      "tree": {
        "sha": "2ec9c9aceb50a78326291d54abcc860b97c99839",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ec9c9aceb50a78326291d54abcc860b97c99839"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa96d7642178b5472b7aa76de9c8b86e7b9cde54",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcj9voAAoJEM4rdWl+aaVI3wUL/3LUOKJKjIRnTjYVVNZpnMvw\n+QZ1su5EULjaczBiBrYshuFzKY9hwLGSlJXRftbeW4qVoHg+aESWKKzRp9I4nX3P\nTZqLDJUzLW4HiEUCzk8qg+I+RXBrMoSoUPAxdUUADTAZjZbMtfLa9MjIxpHc8aAU\n0GxuUnTQNDARpZ5Mxs0WWs5y7du9BgPGfUdLXd5IJ/2Rr2gB0TAz+ZkIuiFBj2qE\n90xwgeAzPOzQanFnk5mODc96iFXEdm5XOLPCdN0b8b16BSlpdCBQp+nGvyEbMXo/\n4E0m/RExTiqw8QvZRviuKiXain0Q5vtae0VpI8w8WDHYvEaMWx0jNVNAfzvE8v+g\nQy7l5gtlsBHnAF4Bw1pZKK915pYxjvPcLIdjIFk4V+jBu3fqPzklsGYHGjR3keMT\noNuwXUAMcRxjRkH+YwnjfVqyYkvJb+QnxDtbw5WVGQDnGiSbN2dIXS+BsoHb/rt7\npXFW6Txmiy7/+5/v/wxT4gAj09kMib0oRsQWfzKc3A==\n=vEWa\n-----END PGP SIGNATURE-----",
        "payload": "tree 2ec9c9aceb50a78326291d54abcc860b97c99839\nparent fa965e03c73ea8172d7ec948da76f7b27b2be63f\nauthor MarcoFalke <falke.marco@gmail.com> 1552932023 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1552931816 -0400\n\nrpc: Uncouple rpcs from maxTxFee global\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa96d7642178b5472b7aa76de9c8b86e7b9cde54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa96d7642178b5472b7aa76de9c8b86e7b9cde54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa96d7642178b5472b7aa76de9c8b86e7b9cde54/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa965e03c73ea8172d7ec948da76f7b27b2be63f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa965e03c73ea8172d7ec948da76f7b27b2be63f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa965e03c73ea8172d7ec948da76f7b27b2be63f"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6564ce5b9aeebfaf657d5e266b39190306ceca37",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa96d7642178b5472b7aa76de9c8b86e7b9cde54/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa96d7642178b5472b7aa76de9c8b86e7b9cde54/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fa96d7642178b5472b7aa76de9c8b86e7b9cde54",
        "patch": "@@ -500,7 +500,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-mocktime=<n>\", \"Replace actual time with <n> seconds since epoch (default: 0)\", true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-maxsigcachesize=<n>\", strprintf(\"Limit sum of signature cache and script execution cache sizes to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-maxtipage=<n>\", strprintf(\"Maximum tip age in seconds to consider node in initial block download (default: %u)\", DEFAULT_MAX_TIP_AGE), true, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-maxtxfee=<amt>\", strprintf(\"Maximum total fees (in %s) to use in a single wallet transaction or raw transaction; setting this too low may abort large transactions (default: %s)\",\n+    gArgs.AddArg(\"-maxtxfee=<amt>\", strprintf(\"Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\", // TODO move setting to wallet\n         CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-printpriority\", strprintf(\"Log transaction fee per kB when mining blocks (default: %u)\", DEFAULT_PRINTPRIORITY), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", false, OptionsCategory::DEBUG_TEST);"
      },
      {
        "sha": "57754ce854b4ed7dc0a1fee6be5e404793551d9b",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa96d7642178b5472b7aa76de9c8b86e7b9cde54/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa96d7642178b5472b7aa76de9c8b86e7b9cde54/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fa96d7642178b5472b7aa76de9c8b86e7b9cde54",
        "patch": "@@ -39,6 +39,7 @@\n \n #include <univalue.h>\n \n+constexpr static CAmount DEFAULT_MAX_RAW_TX_FEE{COIN / 10};\n \n static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n {\n@@ -1038,7 +1039,7 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n                 \"\\nAlso see createrawtransaction and signrawtransactionwithkey calls.\\n\",\n                 {\n                     {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n-                    {\"maxfeerate\", RPCArg::Type::AMOUNT, /* default */ FormatMoney(maxTxFee), \"Reject transactions whose fee rate is higher than the specified value, expressed in \" + CURRENCY_UNIT + \"/kB\\n\"},\n+                    {\"maxfeerate\", RPCArg::Type::AMOUNT, /* default */ FormatMoney(DEFAULT_MAX_RAW_TX_FEE), \"Reject transactions whose fee rate is higher than the specified value, expressed in \" + CURRENCY_UNIT + \"/kB\\n\"},\n                 },\n                 RPCResult{\n             \"\\\"hex\\\"             (string) The transaction hash in hex\\n\"\n@@ -1070,7 +1071,7 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n \n-    CAmount max_raw_tx_fee = maxTxFee;\n+    CAmount max_raw_tx_fee = DEFAULT_MAX_RAW_TX_FEE;\n     // TODO: temporary migration code for old clients. Remove in v0.20\n     if (request.params[1].isBool()) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second argument must be numeric (maxfeerate) and no longer supports a boolean. To allow a transaction with high fees, set maxfeerate to 0.\");\n@@ -1108,7 +1109,7 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n                             {\"rawtx\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n                         },\n                         },\n-                    {\"maxfeerate\", RPCArg::Type::AMOUNT, /* default */ FormatMoney(maxTxFee), \"Reject transactions whose fee rate is higher than the specified value, expressed in \" + CURRENCY_UNIT + \"/kB\\n\"},\n+                    {\"maxfeerate\", RPCArg::Type::AMOUNT, /* default */ FormatMoney(DEFAULT_MAX_RAW_TX_FEE), \"Reject transactions whose fee rate is higher than the specified value, expressed in \" + CURRENCY_UNIT + \"/kB\\n\"},\n                 },\n                 RPCResult{\n             \"[                   (array) The result of the mempool acceptance test for each raw transaction in the input array.\\n\"\n@@ -1152,7 +1153,7 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n     const uint256& tx_hash = tx->GetHash();\n \n-    CAmount max_raw_tx_fee = maxTxFee;\n+    CAmount max_raw_tx_fee = DEFAULT_MAX_RAW_TX_FEE;\n     // TODO: temporary migration code for old clients. Remove in v0.20\n     if (request.params[1].isBool()) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second argument must be numeric (maxfeerate) and no longer supports a boolean. To allow a transaction with high fees, set maxfeerate to 0.\");"
      }
    ]
  },
  {
    "sha": "fa1ad200d378fc3a4dc4c54214965d3c852db7d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFhZDIwMGQzNzhmYzNhNGRjNGM1NDIxNDk2NWQzYzg1MmRiN2Q3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-03-20T17:15:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-03-19T21:06:43Z"
      },
      "message": "doc: Add release notes for 15620",
      "tree": {
        "sha": "d2167474443ee93d66277d6503e0420d8b7bbe3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2167474443ee93d66277d6503e0420d8b7bbe3c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1ad200d378fc3a4dc4c54214965d3c852db7d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJckVnjAAoJEM4rdWl+aaVIHQkL/0Ql2YSgRDPkEvB7alYNLvTU\nD9VA1bhffCdCW+frsRMldV6RSgFEl126zGW0lB/c31XN691pTgU5IhjrZhSKKqxi\nDZoeYCWCmDBqlxQ1CnWwAIk9XDKZvGefhVKYY/2YJ/60GdWoy5ZOJM1VOHh5yvvp\nLZm2bpCUYdayji6/ZfEKZ3m0/Mv6yROcS+cB+cTRKfCI0wVE63iXP08gs+SaYzeP\nSLyP9wAz33bmPb1xW0vpYXhSk8o2/aczupahGfPa+1LSxZc0GdQaXCQJycht9jna\nBKqaj6PSAQ3AJiBTTMCJMic3pgQIYTntJdSG5AaN+30F/L/qVZ19YXwx2YRYzIUo\n2lcE+g+GSfHl7CHrtQbjyY9M3P3sn9e1+IQ5j32NWyctCE9qHHczB4SdQGhI2rtb\nIX+stX6dqCzwqAyxTkmL5yFo26sihwkNqWS7hXHkA1h87/j3pVywcaHViOpmBSdF\ntmUD/KpmhrozRj8ONOBF5dHdiOkfzzGoKZ//4QJ5mw==\n=KiQY\n-----END PGP SIGNATURE-----",
        "payload": "tree d2167474443ee93d66277d6503e0420d8b7bbe3c\nparent fa96d7642178b5472b7aa76de9c8b86e7b9cde54\nauthor MarcoFalke <falke.marco@gmail.com> 1553102105 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1553029603 -0400\n\ndoc: Add release notes for 15620\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1ad200d378fc3a4dc4c54214965d3c852db7d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1ad200d378fc3a4dc4c54214965d3c852db7d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1ad200d378fc3a4dc4c54214965d3c852db7d7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa96d7642178b5472b7aa76de9c8b86e7b9cde54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa96d7642178b5472b7aa76de9c8b86e7b9cde54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa96d7642178b5472b7aa76de9c8b86e7b9cde54"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bf89a70a4eb81ca393237112467675d3b78feab7",
        "filename": "doc/release-notes-15620.md",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1ad200d378fc3a4dc4c54214965d3c852db7d7/doc/release-notes-15620.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1ad200d378fc3a4dc4c54214965d3c852db7d7/doc/release-notes-15620.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15620.md?ref=fa1ad200d378fc3a4dc4c54214965d3c852db7d7",
        "patch": "@@ -0,0 +1,13 @@\n+Updated RPCs\n+------------\n+\n+* The -maxtxfee setting no longer has any effect on non-wallet RPCs.\n+\n+  The `sendrawtransaction` and `testmempoolaccept` RPC methods previously\n+  accepted an `allowhighfees` parameter to fail the mempool acceptance in case\n+  the transaction's fee would exceed the value of the command line argument\n+  `-maxtxfee`. To uncouple the RPCs from the global option, they now have a\n+  hardcoded default for the maximum transaction fee, that can be changed for\n+  both RPCs on a per-call basis with the `maxfeerate` parameter. The\n+  `allowhighfees` boolean option has been removed and replaced by the\n+  `maxfeerate` numeric option."
      },
      {
        "sha": "effc6b61a8961cea88e170c59a096bd74246f31c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1ad200d378fc3a4dc4c54214965d3c852db7d7/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1ad200d378fc3a4dc4c54214965d3c852db7d7/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fa1ad200d378fc3a4dc4c54214965d3c852db7d7",
        "patch": "@@ -39,6 +39,10 @@\n \n #include <univalue.h>\n \n+/** High fee for sendrawtransaction and testmempoolaccept.\n+ * By default, transaction with a fee higher than this will be rejected by the\n+ * RPCs. This can be overriden with the maxfeerate argument.\n+ */\n constexpr static CAmount DEFAULT_MAX_RAW_TX_FEE{COIN / 10};\n \n static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)"
      }
    ]
  }
]