Diapolo,2012-07-06T16:41:29Z,"Updated and removed the global and another #define, which also did not need to be there.\n",https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-6810117,6810117,
TheBlueMatt,2012-07-06T16:55:04Z,"There are some useful changes in here, by there appears to be a lot of diff here that has no purpose aside from just providing more diff?\n",https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-6810474,6810474,
Diapolo,2012-07-07T14:38:23Z,"Rebased, fixing merge conflict.\n",https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-6823514,6823514,
TheBlueMatt,2012-07-07T22:32:53Z,"In terms of the actual code changes in this pull, ACK...the rest of it...dont care, not up to me.\n",https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-6827159,6827159,
laanwj,2012-07-08T08:23:38Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-6829699,6829699,
Diapolo,2012-07-10T11:28:14Z,"Rebased fixing a merge conflict and included some changes to the Mac exclusion code (needed after https://github.com/bitcoin/bitcoin/commit/4060d64fc9de6f11ae69f3961d4f1f0450dd8286), that needed the changed functions in it.\n",https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-6872868,6872868,
Diapolo,2012-07-16T07:39:56Z,@laanwj Further problems / hints for this one?\n,https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-7000093,7000093,
laanwj,2012-07-17T06:18:07Z,ACK (but needs rebase)\n,https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-7027616,7027616,
Diapolo,2012-07-17T07:38:30Z,Rebased (was needed after the thread names patch) and removed ipcThread() and ipcThread2() from the OSX #ifdef.\n,https://github.com/bitcoin/bitcoin/pull/1564#issuecomment-7028606,7028606,
TheBlueMatt,2012-07-06T15:42:06Z,"Yuck, more global flags?\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1113728,1113728,src/qt/qtipcserver.h
Diapolo,2012-07-06T16:32:25Z,"After looking at how the code works, I guess I can just remove this. Even if the IPC thread doesn't run or something happened we don't rely on this to ensure a working Bitcoin-Qt. It was a left-over from my former pull.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114236,1114236,src/qt/qtipcserver.h
TheBlueMatt,2012-07-06T16:48:24Z,Now you copy the string instead of using it as-is for no clear benefit?\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114387,1114387,src/qt/bitcoin.cpp
TheBlueMatt,2012-07-06T16:48:58Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114392,1114392,src/qt/bitcoin.cpp
TheBlueMatt,2012-07-06T16:49:53Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114398,1114398,src/qt/qtipcserver.cpp
TheBlueMatt,2012-07-06T16:51:40Z,Same as above.\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114423,1114423,src/qt/bitcoin.cpp
TheBlueMatt,2012-07-06T16:53:02Z,Why cant we use these namespaces?\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114437,1114437,src/qt/qtipcserver.cpp
TheBlueMatt,2012-07-06T16:56:08Z,"Not blaming you for this, but why on earth do we have a guiconstants.h file? That just seems broken - shouldn't constants go in the header for the file in which they are used?\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114466,1114466,src/qt/guiconstants.h
Diapolo,2012-07-06T16:57:52Z,"Well this is the same code you took a look at in the last pull? There you did not mention this. Well idea was to avoid char \* where possible, as std::string should be more robust.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114486,1114486,src/qt/bitcoin.cpp
TheBlueMatt,2012-07-06T16:58:52Z,copying an existing const char\* isnt more robust than copying its contents to a std::string.\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114494,1114494,src/qt/bitcoin.cpp
Diapolo,2012-07-06T16:59:53Z,"I think, when they are used in multiple files they should reside here, when they are ONLY used e.g. in one source-file, then yes it should just be in the header. Well this one will soon be used by qrcodedialog.cpp, too ... so at least this one should go here. I guess @laanwj introduced that file some time ago, perhaps he can explain the idea of it?\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114508,1114508,src/qt/guiconstants.h
TheBlueMatt,2012-07-06T17:02:31Z,"The point is if you already have to import eg qtipcserver.h in any files which are going to be using MAX_URI_LENGTH, there is no reason to have it separate in a guiconstants.h, it could just reside in qtipcserver.h, and I'd think the same is true of all the other constants here.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114532,1114532,src/qt/guiconstants.h
Diapolo,2012-07-06T17:06:04Z,"We can, but in terms of readability I really like to see to which namespace a function or variable belongs to. But I guess you just want me ""force"" in a friedly manner to revert that change ^^?\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114559,1114559,src/qt/qtipcserver.cpp
Diapolo,2012-07-06T17:09:39Z,"My point was MAX_URI_LENGTH is used in qtipcserver.cpp and qrcodedialog.cpp. Now both of them include guiconstants.h., which seems just fine, no? qtipcserver.h is of course not included in qrcodedialog.cpp.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114594,1114594,src/qt/guiconstants.h
TheBlueMatt,2012-07-06T17:11:17Z,"I dont have any strong opinion as to which is significantly more readable, but it seems like a ton of this pull is just diff for diffs sake, which seems overly confusing, makes it hard to verify the pull, and just seems pointless?\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114609,1114609,src/qt/qtipcserver.cpp
TheBlueMatt,2012-07-06T17:12:35Z,"Why is MAX_URI_LENGTH used in qrcodedialog.cpp?  MAX_URI_LENGTH is not a part of the URI spec, it is part of bitcoin-qt's implementation, there is nothing wrong with a QR Code with a URI longer than MAX_URI_LENGTH.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114620,1114620,src/qt/guiconstants.h
Diapolo,2012-07-06T17:16:26Z,"I re-introduced that now, sorry ...\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114652,1114652,src/qt/qtipcserver.cpp
Diapolo,2012-07-06T17:20:26Z,"This is what @laanwj had written to this change in the other pull:\n""I think it's more consistent to use C++ string handling everywhere instead of strlen() and friends (performance is not an argument here). In most implementations, c_str doesn't perform a copy, but it simply returns a pointer to the internal buffer. Though it'd be better to use .data() if you don't rely on it being zero-terminated",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114694,1114694,src/qt/bitcoin.cpp
Diapolo,2012-07-06T17:23:09Z,"Sometimes I feel like I'm the bad guy that did something wrong. Well in a patch some weeks ago, we introduced a limit for the URI length used in generation of QR Codes, which is the same as this one here. I indeed SEE a problem, the QR Codes which would get longer would not be valid for Bitcoin-Qt, so why not use the same limit?\n\nSee:\nhttps://github.com/bitcoin/bitcoin/commit/b1a99c3a1fb2613e9c",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114712,1114712,src/qt/guiconstants.h
TheBlueMatt,2012-07-06T17:46:44Z,"Its not necessarily more consistent to use a std::string when we already have a const char*, because you are now using both...anyway, it goes back to the ""diff for diffs sake"" here, there is no difference in the code (std::string(const char*) is no doubt using strlen anyway) but its just more lines of diff.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114874,1114874,src/qt/bitcoin.cpp
TheBlueMatt,2012-07-06T17:49:49Z,"Ah, its used for importing URIs, not exporting, sorry...I still dont like the idea of a constants header, but I suppose for MAX_URI_LENGTH it makes some sense.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1114897,1114897,src/qt/guiconstants.h
Diapolo,2012-07-07T00:32:53Z,"I'm going to revert this, so that in the end the diff is much smaller now (after some reverts and removing silly stuff). I consider your feedback very constructive and I'm glad you took the time to look over the code :).\n\nEdit: Reverted\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1117654,1117654,src/qt/bitcoin.cpp
Diapolo,2012-07-07T00:44:58Z,Reverted\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1117691,1117691,src/qt/bitcoin.cpp
laanwj,2012-07-07T11:55:48Z,"I do like the constants header, as it keeps all the tweakable values together. But regard it more like a hard-coded configuration header than really ""constants"" as the values are arbitrary and changeable.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1118219,1118219,src/qt/guiconstants.h
laanwj,2012-07-08T08:12:48Z,"I don't get this code. Where does this 2 come from? This is not part of the diff, but it looks a bit flaky.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1119041,1119041,src/qt/qtipcserver.cpp
Diapolo,2012-07-08T10:23:37Z,"It was in from the very beginning, didn't ever touch it.\n\nSee: https://github.com/bitcoin/bitcoin/commit/7d145a0f591dab109eae9adcfaf59303cce0431a#L10R63 which is a commit from @TheBlueMatt\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1119172,1119172,src/qt/qtipcserver.cpp
TheBlueMatt,2012-07-10T22:45:35Z,"Its the same constant that is used when creating the message queue to set the maximum number of items in the queue, its essentially a fail-safe in case we are getting DoS'd.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1136482,1136482,src/qt/qtipcserver.cpp
laanwj,2012-07-16T18:13:34Z,"ipcThread and ipcThread2 are never called from outside qtipcserver.cpp. They should be static and local, not exported in the header file.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1171687,1171687,src/qt/qtipcserver.h
Diapolo,2012-07-16T20:10:49Z,"That is indeed a very good idea :), thanks.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1172826,1172826,src/qt/qtipcserver.h
Diapolo,2012-07-16T20:37:11Z,ipcThread() and ipcThread2() are now static functions :).\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1173053,1173053,src/qt/qtipcserver.h
laanwj,2012-07-17T06:17:30Z,"These can go, too :) No need for dummy unused static declarations.\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1175995,1175995,src/qt/qtipcserver.cpp
Diapolo,2012-07-17T07:10:22Z,"So remove ipcThread() and ipcThread2() from here, but leave the OSX #ifdef and ipcInit()? Just to be sure :).\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1176173,1176173,src/qt/qtipcserver.cpp
laanwj,2012-07-17T07:14:53Z,"Yes, you need to retain ipcInit as it is called. The others can go :)\n",https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1176183,1176183,src/qt/qtipcserver.cpp
Diapolo,2012-07-17T07:40:14Z,RenameThread() is now placed here.\n,https://github.com/bitcoin/bitcoin/pull/1564#discussion_r1176275,1176275,src/qt/qtipcserver.cpp
