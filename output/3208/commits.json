[
  {
    "sha": "95caf98e701c34f4381b3039ae4a5dba83c251f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWNhZjk4ZTcwMWMzNGY0MzgxYjMwMzlhZTRhNWRiYTgzYzI1MWYx",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-11-05T18:07:49Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-11-05T18:07:49Z"
      },
      "message": "[Qt] allow drag and drop of payment request URLs on main window\n\n- this change extends our working drag and drop feature for bitcoin: URIs\n  by adding support for payment request URIs (payment request files should\n  be easy to do in another pull also)\n- removes code from BitcoinGUI and lets PaymentServer handle it\n- makes eventFilter() in PaymentServer protected",
      "tree": {
        "sha": "11b8d6327681a53311e71257ebb06d18b86c1524",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11b8d6327681a53311e71257ebb06d18b86c1524"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95caf98e701c34f4381b3039ae4a5dba83c251f1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95caf98e701c34f4381b3039ae4a5dba83c251f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95caf98e701c34f4381b3039ae4a5dba83c251f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95caf98e701c34f4381b3039ae4a5dba83c251f1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c82cddcc5565867fa1ccb8b2ab1bec3e1058de96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c82cddcc5565867fa1ccb8b2ab1bec3e1058de96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c82cddcc5565867fa1ccb8b2ab1bec3e1058de96"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 25,
      "deletions": 37
    },
    "files": [
      {
        "sha": "d295810e815424f61b5e36ebad23e8571f76f33f",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95caf98e701c34f4381b3039ae4a5dba83c251f1/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95caf98e701c34f4381b3039ae4a5dba83c251f1/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=95caf98e701c34f4381b3039ae4a5dba83c251f1",
        "patch": "@@ -711,30 +711,6 @@ void BitcoinGUI::dragEnterEvent(QDragEnterEvent *event)\n         event->acceptProposedAction();\n }\n \n-void BitcoinGUI::dropEvent(QDropEvent *event)\n-{\n-    if(event->mimeData()->hasUrls())\n-    {\n-        int nValidUrisFound = 0;\n-        QList<QUrl> uris = event->mimeData()->urls();\n-        foreach(const QUrl &uri, uris)\n-        {\n-            SendCoinsRecipient r;\n-            if (GUIUtil::parseBitcoinURI(uri, &r) && walletFrame->handlePaymentRequest(r))\n-                nValidUrisFound++;\n-        }\n-\n-        // if valid URIs were found\n-        if (nValidUrisFound)\n-            walletFrame->gotoSendCoinsPage();\n-        else\n-            message(tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n-                CClientUIInterface::ICON_WARNING);\n-    }\n-\n-    event->acceptProposedAction();\n-}\n-\n bool BitcoinGUI::eventFilter(QObject *object, QEvent *event)\n {\n     // Catch status tip events"
      },
      {
        "sha": "59c14bda4d377daddf62cc9c8119c38c7d5a7737",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95caf98e701c34f4381b3039ae4a5dba83c251f1/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95caf98e701c34f4381b3039ae4a5dba83c251f1/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=95caf98e701c34f4381b3039ae4a5dba83c251f1",
        "patch": "@@ -66,7 +66,6 @@ class BitcoinGUI : public QMainWindow\n     void changeEvent(QEvent *e);\n     void closeEvent(QCloseEvent *event);\n     void dragEnterEvent(QDragEnterEvent *event);\n-    void dropEvent(QDropEvent *event);\n     bool eventFilter(QObject *object, QEvent *event);\n \n private:"
      },
      {
        "sha": "6295ea0daf18230cdfc0d93df20ab0843e0567d0",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 8,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95caf98e701c34f4381b3039ae4a5dba83c251f1/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95caf98e701c34f4381b3039ae4a5dba83c251f1/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=95caf98e701c34f4381b3039ae4a5dba83c251f1",
        "patch": "@@ -290,24 +290,36 @@ PaymentServer::~PaymentServer()\n     google::protobuf::ShutdownProtobufLibrary();\n }\n \n-//\n-// OSX-specific way of handling bitcoin: URIs and\n-// PaymentRequest mime types\n-//\n-bool PaymentServer::eventFilter(QObject *, QEvent *event)\n+bool PaymentServer::eventFilter(QObject *object, QEvent *event)\n {\n-    // clicking on bitcoin: URIs creates FileOpen events on the Mac:\n+    // clicking on bitcoin: URIs creates FileOpen events on the Mac\n     if (event->type() == QEvent::FileOpen)\n     {\n-        QFileOpenEvent* fileEvent = static_cast<QFileOpenEvent*>(event);\n+        QFileOpenEvent *fileEvent = static_cast<QFileOpenEvent*>(event);\n         if (!fileEvent->file().isEmpty())\n             handleURIOrFile(fileEvent->file());\n         else if (!fileEvent->url().isEmpty())\n             handleURIOrFile(fileEvent->url().toString());\n \n         return true;\n     }\n-    return false;\n+    // handle dropping payment request URLs or normal bitcoin: URIs\n+    else if (event->type() == QEvent::Drop)\n+    {\n+        QDropEvent *dropEvent = static_cast<QDropEvent*>(event);\n+        if (dropEvent->mimeData()->hasUrls())\n+        {\n+            QList<QUrl> uris = dropEvent->mimeData()->urls();\n+            foreach(const QUrl &uri, uris)\n+            {\n+                handleURIOrFile(uri.toString());\n+            }\n+        }\n+\n+        return true;\n+    }\n+\n+    return QObject::eventFilter(object, event);\n }\n \n void PaymentServer::initNetManager()"
      },
      {
        "sha": "96d37a4489c0c4ff0a1f7647643d684a572353cb",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95caf98e701c34f4381b3039ae4a5dba83c251f1/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95caf98e701c34f4381b3039ae4a5dba83c251f1/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=95caf98e701c34f4381b3039ae4a5dba83c251f1",
        "patch": "@@ -80,10 +80,6 @@ class PaymentServer : public QObject\n     // Setup networking\n     void initNetManager();\n \n-    // Constructor registers this on the parent QApplication to\n-    // receive QEvent::FileOpen events\n-    bool eventFilter(QObject *object, QEvent *event);\n-\n     // OptionsModel is used for getting proxy settings and display unit\n     void setOptionsModel(OptionsModel *optionsModel);\n \n@@ -111,6 +107,11 @@ private slots:\n     void reportSslErrors(QNetworkReply*, const QList<QSslError> &);\n     void handlePaymentACK(const QString& paymentACKMsg);\n \n+protected:\n+    // Constructor registers this on the parent QApplication to\n+    // receive QEvent::FileOpen and QEvent:Drop events\n+    bool eventFilter(QObject *object, QEvent *event);\n+\n private:\n     static bool readPaymentRequest(const QString& filename, PaymentRequestPlus& request);\n     bool processPaymentRequest(PaymentRequestPlus& request, QList<SendCoinsRecipient>& recipients);"
      }
    ]
  }
]