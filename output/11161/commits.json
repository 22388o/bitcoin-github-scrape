[
  {
    "sha": "b426e24678eb65d791cb505011e3ba4655aef1cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDI2ZTI0Njc4ZWI2NWQ3OTFjYjUwNTAxMWUzYmE0NjU1YWVmMWNk",
    "commit": {
      "author": {
        "name": "Dan Raviv",
        "email": "dan@soundradix.com",
        "date": "2017-08-26T13:36:46Z"
      },
      "committer": {
        "name": "Dan Raviv",
        "email": "dan@soundradix.com",
        "date": "2017-08-27T22:29:48Z"
      },
      "message": "Remove redundant explicitly defined copy ctors\n\nCFeeRate and CTxMemPoolEntry have explicitly defined copy ctors which has the same functionality as the implicit default copy ctors which would have been generated otherwise.\n\nBesides being redundant, it violates the rule of three (see https://en.wikipedia.org/wiki/Rule_of_three_(C%2B%2B_programming) ).\n(Of course, the rule of three doesn't -really- cause a resource management issue here, but the reason for that is exactly that there is no need for an explicit copy ctor in the first place since no resources are being managed).\nCFeeRate has an explicitly defined copy ctor which has the same functionality as the implicit default copy ctor which would h\nave been generated otherwise.",
      "tree": {
        "sha": "eb76718af998f0eb41aa20ce82fb51365222bb71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb76718af998f0eb41aa20ce82fb51365222bb71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b426e24678eb65d791cb505011e3ba4655aef1cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b426e24678eb65d791cb505011e3ba4655aef1cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b426e24678eb65d791cb505011e3ba4655aef1cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b426e24678eb65d791cb505011e3ba4655aef1cd/comments",
    "author": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fd49d01dc2ea444ba4d81d0cfa17486b03c8515",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fd49d01dc2ea444ba4d81d0cfa17486b03c8515",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fd49d01dc2ea444ba4d81d0cfa17486b03c8515"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "7e519e3efaab3910b541dcb446ec4f9a5da33ecd",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b426e24678eb65d791cb505011e3ba4655aef1cd/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b426e24678eb65d791cb505011e3ba4655aef1cd/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=b426e24678eb65d791cb505011e3ba4655aef1cd",
        "patch": "@@ -26,7 +26,6 @@ class CFeeRate\n     explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n     /** Constructor for a fee rate in satoshis per kB. The size in bytes must not exceed (2^63 - 1)*/\n     CFeeRate(const CAmount& nFeePaid, size_t nBytes);\n-    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n     /**\n      * Return the fee in satoshis for the given size in bytes.\n      */"
      },
      {
        "sha": "f68d677646e2c30954564fd1b51ddb7f2550ab1c",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b426e24678eb65d791cb505011e3ba4655aef1cd/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b426e24678eb65d791cb505011e3ba4655aef1cd/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=b426e24678eb65d791cb505011e3ba4655aef1cd",
        "patch": "@@ -39,11 +39,6 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& _tx, const CAmount& _nFe\n     nSigOpCostWithAncestors = sigOpCost;\n }\n \n-CTxMemPoolEntry::CTxMemPoolEntry(const CTxMemPoolEntry& other)\n-{\n-    *this = other;\n-}\n-\n void CTxMemPoolEntry::UpdateFeeDelta(int64_t newFeeDelta)\n {\n     nModFeesWithDescendants += newFeeDelta - feeDelta;"
      },
      {
        "sha": "65586a6e6e8ea2beed0f208ec5bd099a02609974",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b426e24678eb65d791cb505011e3ba4655aef1cd/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b426e24678eb65d791cb505011e3ba4655aef1cd/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=b426e24678eb65d791cb505011e3ba4655aef1cd",
        "patch": "@@ -95,8 +95,6 @@ class CTxMemPoolEntry\n                     bool spendsCoinbase,\n                     int64_t nSigOpsCost, LockPoints lp);\n \n-    CTxMemPoolEntry(const CTxMemPoolEntry& other);\n-\n     const CTransaction& GetTx() const { return *this->tx; }\n     CTransactionRef GetSharedTx() const { return this->tx; }\n     const CAmount& GetFee() const { return nFee; }"
      }
    ]
  }
]