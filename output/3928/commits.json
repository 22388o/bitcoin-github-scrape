[
  {
    "sha": "392783697c21a0c4cf3db6b0946d3d44d7fed537",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTI3ODM2OTdjMjFhMGM0Y2YzZGI2YjA5NDZkM2Q0NGQ3ZmVkNTM3",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-03-18T23:26:14Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-04-02T01:48:07Z"
      },
      "message": "[Qt] rescan progress",
      "tree": {
        "sha": "9f0808ba972d629af5cae087b57c398bbd015b95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f0808ba972d629af5cae087b57c398bbd015b95"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/392783697c21a0c4cf3db6b0946d3d44d7fed537",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/392783697c21a0c4cf3db6b0946d3d44d7fed537",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/392783697c21a0c4cf3db6b0946d3d44d7fed537",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/392783697c21a0c4cf3db6b0946d3d44d7fed537/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "397521d632b4a49e61c8ea2246135f9cc00e57c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397521d632b4a49e61c8ea2246135f9cc00e57c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/397521d632b4a49e61c8ea2246135f9cc00e57c4"
      }
    ],
    "stats": {
      "total": 122,
      "additions": 113,
      "deletions": 9
    },
    "files": [
      {
        "sha": "9ab8b6844322cd1adf69756f7227d120b5ced361",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -21,7 +21,7 @@ namespace Checkpoints\n     // every system. When reindexing from a fast disk with a slow CPU, it\n     // can be up to 20, while when downloading from a slow network with a\n     // fast multicore CPU, it won't be much higher than 1.\n-    static const double fSigcheckVerificationFactor = 5.0;\n+    static const double SIGCHECK_VERIFICATION_FACTOR = 5.0;\n \n     struct CCheckpointData {\n         const MapCheckpoints *mapCheckpoints;\n@@ -104,12 +104,13 @@ namespace Checkpoints\n     }\n \n     // Guess how far we are in the verification process at the given block index\n-    double GuessVerificationProgress(CBlockIndex *pindex) {\n+    double GuessVerificationProgress(CBlockIndex *pindex, bool fSigchecks) {\n         if (pindex==NULL)\n             return 0.0;\n \n         int64_t nNow = time(NULL);\n \n+        double fSigcheckVerificationFactor = fSigchecks ? SIGCHECK_VERIFICATION_FACTOR : 1.0;\n         double fWorkBefore = 0.0; // Amount of work done before pindex\n         double fWorkAfter = 0.0;  // Amount of work left after pindex (estimated)\n         // Work is defined as: 1.0 per transaction before the last checkpoint, and"
      },
      {
        "sha": "1b4aacee20ad53d4fd4f6444bad098f12e18a6bb",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -24,7 +24,7 @@ namespace Checkpoints\n     // Returns last CBlockIndex* in mapBlockIndex that is a checkpoint\n     CBlockIndex* GetLastCheckpoint(const std::map<uint256, CBlockIndex*>& mapBlockIndex);\n \n-    double GuessVerificationProgress(CBlockIndex *pindex);\n+    double GuessVerificationProgress(CBlockIndex *pindex, bool fSigchecks = true);\n \n     extern bool fEnabled;\n }"
      },
      {
        "sha": "7c79b0efd0fd8ac76ea5bfe121ae5c26c50c18d8",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -5,8 +5,12 @@\n #include \"splashscreen.h\"\n \n #include \"clientversion.h\"\n+#include \"init.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#ifdef ENABLE_WALLET\n+#include \"wallet.h\"\n+#endif\n \n #include <QApplication>\n #include <QPainter>\n@@ -109,14 +113,33 @@ static void InitMessage(SplashScreen *splash, const std::string &message)\n         Q_ARG(QColor, QColor(55,55,55)));\n }\n \n+static void ShowProgress(SplashScreen *splash, const std::string &title, int nProgress)\n+{\n+    InitMessage(splash, title + strprintf(\"%d\", nProgress) + \"%\");\n+}\n+\n+#ifdef ENABLE_WALLET\n+static void ConnectWallet(SplashScreen *splash, CWallet* wallet)\n+{\n+    wallet->ShowProgress.connect(boost::bind(ShowProgress, splash, _1, _2));\n+}\n+#endif\n+\n void SplashScreen::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.InitMessage.connect(boost::bind(InitMessage, this, _1));\n+#ifdef ENABLE_WALLET\n+    uiInterface.LoadWallet.connect(boost::bind(ConnectWallet, this, _1));\n+#endif\n }\n \n void SplashScreen::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from client\n     uiInterface.InitMessage.disconnect(boost::bind(InitMessage, this, _1));\n+#ifdef ENABLE_WALLET\n+    if(pwalletMain)\n+        pwalletMain->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n+#endif\n }"
      },
      {
        "sha": "424c9ee279f69e971ff89e74824e7d29aa2bc96c",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -419,8 +419,17 @@ static void NotifyAddressBookChanged(WalletModel *walletmodel, CWallet *wallet,\n                               Q_ARG(int, status));\n }\n \n+// queue notifications to show a non freezing progress dialog e.g. for rescan\n+static bool fQueueNotifications = false;\n+static std::vector<std::pair<uint256, ChangeType> > vQueueNotifications;\n static void NotifyTransactionChanged(WalletModel *walletmodel, CWallet *wallet, const uint256 &hash, ChangeType status)\n {\n+    if (fQueueNotifications)\n+    {\n+        vQueueNotifications.push_back(make_pair(hash, status));\n+        return;\n+    }\n+\n     QString strHash = QString::fromStdString(hash.GetHex());\n \n     qDebug() << \"NotifyTransactionChanged : \" + strHash + \" status= \" + QString::number(status);\n@@ -429,12 +438,32 @@ static void NotifyTransactionChanged(WalletModel *walletmodel, CWallet *wallet,\n                               Q_ARG(int, status));\n }\n \n+static void ShowProgress(WalletModel *walletmodel, const std::string &title, int nProgress)\n+{\n+    // emits signal \"showProgress\"\n+    QMetaObject::invokeMethod(walletmodel, \"showProgress\", Qt::QueuedConnection,\n+                              Q_ARG(QString, QString::fromStdString(title)),\n+                              Q_ARG(int, nProgress));\n+\n+    if (nProgress == 0)\n+        fQueueNotifications = true;\n+\n+    if (nProgress == 100)\n+    {\n+        fQueueNotifications = false;\n+        BOOST_FOREACH(const PAIRTYPE(uint256, ChangeType)& notification, vQueueNotifications)\n+            NotifyTransactionChanged(walletmodel, NULL, notification.first, notification.second);\n+        std::vector<std::pair<uint256, ChangeType> >().swap(vQueueNotifications); // clear\n+    }\n+}\n+\n void WalletModel::subscribeToCoreSignals()\n {\n     // Connect signals to wallet\n     wallet->NotifyStatusChanged.connect(boost::bind(&NotifyKeyStoreStatusChanged, this, _1));\n     wallet->NotifyAddressBookChanged.connect(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5, _6));\n     wallet->NotifyTransactionChanged.connect(boost::bind(NotifyTransactionChanged, this, _1, _2, _3));\n+    wallet->ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n }\n \n void WalletModel::unsubscribeFromCoreSignals()\n@@ -443,6 +472,7 @@ void WalletModel::unsubscribeFromCoreSignals()\n     wallet->NotifyStatusChanged.disconnect(boost::bind(&NotifyKeyStoreStatusChanged, this, _1));\n     wallet->NotifyAddressBookChanged.disconnect(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5, _6));\n     wallet->NotifyTransactionChanged.disconnect(boost::bind(NotifyTransactionChanged, this, _1, _2, _3));\n+    wallet->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n }\n \n // WalletModel::UnlockContext implementation"
      },
      {
        "sha": "ccf590aaed60cb9f397be2ce92e4857dd47f5808",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -237,6 +237,9 @@ class WalletModel : public QObject\n     // Coins sent: from wallet, to recipient, in (serialized) transaction:\n     void coinsSent(CWallet* wallet, SendCoinsRecipient recipient, QByteArray transaction);\n \n+    // Show progress dialog e.g. for rescan\n+    void showProgress(const QString &title, int nProgress);\n+\n public slots:\n     /* Wallet status might have changed */\n     void updateStatus();"
      },
      {
        "sha": "1cef48344fc44611372911e868423ef831bd56cc",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -24,6 +24,7 @@\n #include <QActionGroup>\n #include <QFileDialog>\n #include <QHBoxLayout>\n+#include <QProgressDialog>\n #include <QPushButton>\n #include <QVBoxLayout>\n \n@@ -127,6 +128,9 @@ void WalletView::setWalletModel(WalletModel *walletModel)\n \n         // Ask for passphrase if needed\n         connect(walletModel, SIGNAL(requireUnlock()), this, SLOT(unlockWallet()));\n+\n+        // Show progress dialog\n+        connect(walletModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n     }\n }\n \n@@ -277,3 +281,26 @@ void WalletView::usedReceivingAddresses()\n     dlg->setModel(walletModel->getAddressTableModel());\n     dlg->show();\n }\n+\n+void WalletView::showProgress(const QString &title, int nProgress)\n+{\n+    if (nProgress == 0)\n+    {\n+        progressDialog = new QProgressDialog(title, \"\", 0, 100);\n+        progressDialog->setWindowModality(Qt::ApplicationModal);\n+        progressDialog->setMinimumDuration(0);\n+        progressDialog->setCancelButton(0);\n+        progressDialog->setAutoClose(false);\n+        progressDialog->setValue(0);\n+    }\n+    else if (nProgress == 100)\n+    {\n+        if (progressDialog)\n+        {\n+            progressDialog->close();\n+            progressDialog->deleteLater();\n+        }\n+    }\n+    else if (progressDialog)\n+        progressDialog->setValue(nProgress);\n+}"
      },
      {
        "sha": "9cfa8d67609c621e1d8ee8e46f3979b152e1f0eb",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -18,6 +18,7 @@ class WalletModel;\n \n QT_BEGIN_NAMESPACE\n class QModelIndex;\n+class QProgressDialog;\n QT_END_NAMESPACE\n \n /*\n@@ -60,6 +61,8 @@ class WalletView : public QStackedWidget\n \n     TransactionView *transactionView;\n \n+    QProgressDialog *progressDialog;\n+\n public slots:\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();\n@@ -97,6 +100,9 @@ public slots:\n     /** Re-emit encryption status signal */\n     void updateEncryptionStatus();\n \n+    /** Show progress dialog e.g. for rescan */\n+    void showProgress(const QString &title, int nProgress);\n+\n signals:\n     /** Signal that we want to show the main window */\n     void showNormalIfMinimized();"
      },
      {
        "sha": "7b655ac9517eb74c38b3c6980402641070fb6059",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -91,6 +91,9 @@ class CClientUIInterface\n      * @note called with lock cs_mapAlerts held.\n      */\n     boost::signals2::signal<void (const uint256 &hash, ChangeType status)> NotifyAlertChanged;\n+\n+    /** A wallet has been loaded. */\n+    boost::signals2::signal<void (CWallet* wallet)> LoadWallet;\n };\n \n extern CClientUIInterface uiInterface;"
      },
      {
        "sha": "775eb8f580b5d34138cfa1aea807f6736b3aba55",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -835,14 +835,19 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n     CBlockIndex* pindex = pindexStart;\n     {\n         LOCK(cs_wallet);\n+\n+        // no need to read and scan block, if block was created before\n+        // our wallet birthday (as adjusted for block time variability)\n+        while (pindex && nTimeFirstKey && (pindex->nTime < (nTimeFirstKey - 7200)))\n+            pindex = chainActive.Next(pindex);\n+\n+        ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n+        double dProgressStart = Checkpoints::GuessVerificationProgress(pindex, false);\n+        double dProgressTip = Checkpoints::GuessVerificationProgress(chainActive.Tip(), false);\n         while (pindex)\n         {\n-            // no need to read and scan block, if block was created before\n-            // our wallet birthday (as adjusted for block time variability)\n-            if (nTimeFirstKey && (pindex->nTime < (nTimeFirstKey - 7200))) {\n-                pindex = chainActive.Next(pindex);\n-                continue;\n-            }\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((Checkpoints::GuessVerificationProgress(pindex, false) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n \n             CBlock block;\n             ReadBlockFromDisk(block, pindex);\n@@ -857,6 +862,7 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, Checkpoints::GuessVerificationProgress(pindex));\n             }\n         }\n+        ShowProgress(_(\"Rescanning...\"), 100); // hide progress dialog in GUI\n     }\n     return ret;\n }\n@@ -1492,6 +1498,8 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n         return nLoadWalletRet;\n     fFirstRunRet = !vchDefaultKey.IsValid();\n \n+    uiInterface.LoadWallet(this);\n+\n     return DB_LOAD_OK;\n }\n "
      },
      {
        "sha": "5fd56d0af63b4dcfba8917933fc6b176b122a172",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/392783697c21a0c4cf3db6b0946d3d44d7fed537/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=392783697c21a0c4cf3db6b0946d3d44d7fed537",
        "patch": "@@ -391,6 +391,9 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n      */\n     boost::signals2::signal<void (CWallet *wallet, const uint256 &hashTx,\n             ChangeType status)> NotifyTransactionChanged;\n+\n+    /** Show progress e.g. for rescan */\n+    boost::signals2::signal<void (const std::string &title, int nProgress)> ShowProgress;\n };\n \n /** A key allocated from the key pool. */"
      }
    ]
  }
]