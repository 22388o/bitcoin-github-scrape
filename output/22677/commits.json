[
  {
    "sha": "1b3a11e126b258fba975ed7c452221608f2c5472",
    "node_id": "C_kwDOABII59oAKDFiM2ExMWUxMjZiMjU4ZmJhOTc1ZWQ3YzQ1MjIyMTYwOGYyYzU0NzI",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-30T11:21:02Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-30T11:56:46Z"
      },
      "message": "MOVEONLY: TestLockPointValidity to txmempool",
      "tree": {
        "sha": "cb15b7aebd9f281a7fc41d57c8c6521f40c03762",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb15b7aebd9f281a7fc41d57c8c6521f40c03762"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b3a11e126b258fba975ed7c452221608f2c5472",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b3a11e126b258fba975ed7c452221608f2c5472",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1b3a11e126b258fba975ed7c452221608f2c5472",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b3a11e126b258fba975ed7c452221608f2c5472/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e521c5589e253b1a6631d085b3ac578751883082",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e521c5589e253b1a6631d085b3ac578751883082",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e521c5589e253b1a6631d085b3ac578751883082"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 24,
      "deletions": 23
    },
    "files": [
      {
        "sha": "05b22bb39bfb6a59ad3bb3c8893b0cb4b83385ea",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b3a11e126b258fba975ed7c452221608f2c5472/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b3a11e126b258fba975ed7c452221608f2c5472/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=1b3a11e126b258fba975ed7c452221608f2c5472",
        "patch": "@@ -74,6 +74,24 @@ struct update_lock_points\n     const LockPoints& lp;\n };\n \n+bool TestLockPointValidity(CChain& active_chain, const LockPoints* lp)\n+{\n+    AssertLockHeld(cs_main);\n+    assert(lp);\n+    // If there are relative lock times then the maxInputBlock will be set\n+    // If there are no relative lock times, the LockPoints don't depend on the chain\n+    if (lp->maxInputBlock) {\n+        // Check whether active_chain is an extension of the block at which the LockPoints\n+        // calculation was valid.  If not LockPoints are no longer valid\n+        if (!active_chain.Contains(lp->maxInputBlock)) {\n+            return false;\n+        }\n+    }\n+\n+    // LockPoints still valid\n+    return true;\n+}\n+\n CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& tx, CAmount fee,\n                                  int64_t time, unsigned int entry_height,\n                                  bool spends_coinbase, int64_t sigops_cost, LockPoints lp)"
      },
      {
        "sha": "412c2fbb7435a50083d9c5405db502a5ab78c05a",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b3a11e126b258fba975ed7c452221608f2c5472/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b3a11e126b258fba975ed7c452221608f2c5472/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=1b3a11e126b258fba975ed7c452221608f2c5472",
        "patch": "@@ -14,6 +14,7 @@\n #include <utility>\n #include <vector>\n \n+#include <chain.h>\n #include <coins.h>\n #include <consensus/amount.h>\n #include <indirectmap.h>\n@@ -49,6 +50,11 @@ struct LockPoints {\n     CBlockIndex* maxInputBlock{nullptr};\n };\n \n+/**\n+ * Test whether the LockPoints height and time are still valid on the current chain\n+ */\n+bool TestLockPointValidity(CChain& active_chain, const LockPoints* lp) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n struct CompareIteratorByHash {\n     // SFINAE for T where T is either a pointer type (e.g., a txiter) or a reference_wrapper<T>\n     // (e.g. a wrapped CTxMemPoolEntry&)"
      },
      {
        "sha": "322e77afe6cab827e607d554e9d77701e97cdad5",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b3a11e126b258fba975ed7c452221608f2c5472/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b3a11e126b258fba975ed7c452221608f2c5472/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=1b3a11e126b258fba975ed7c452221608f2c5472",
        "patch": "@@ -212,24 +212,6 @@ bool CheckFinalTx(const CBlockIndex* active_chain_tip, const CTransaction &tx, i\n     return IsFinalTx(tx, nBlockHeight, nBlockTime);\n }\n \n-bool TestLockPointValidity(CChain& active_chain, const LockPoints* lp)\n-{\n-    AssertLockHeld(cs_main);\n-    assert(lp);\n-    // If there are relative lock times then the maxInputBlock will be set\n-    // If there are no relative lock times, the LockPoints don't depend on the chain\n-    if (lp->maxInputBlock) {\n-        // Check whether active_chain is an extension of the block at which the LockPoints\n-        // calculation was valid.  If not LockPoints are no longer valid\n-        if (!active_chain.Contains(lp->maxInputBlock)) {\n-            return false;\n-        }\n-    }\n-\n-    // LockPoints still valid\n-    return true;\n-}\n-\n bool CheckSequenceLocks(CBlockIndex* tip,\n                         const CCoinsView& coins_view,\n                         const CTransaction& tx,"
      },
      {
        "sha": "a81188b5f222cee472aad5b045bcbb65c57a65b1",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b3a11e126b258fba975ed7c452221608f2c5472/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b3a11e126b258fba975ed7c452221608f2c5472/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=1b3a11e126b258fba975ed7c452221608f2c5472",
        "patch": "@@ -249,11 +249,6 @@ PackageMempoolAcceptResult ProcessNewPackage(CChainState& active_chainstate, CTx\n  */\n bool CheckFinalTx(const CBlockIndex* active_chain_tip, const CTransaction &tx, int flags = -1) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-/**\n- * Test whether the LockPoints height and time are still valid on the current chain\n- */\n-bool TestLockPointValidity(CChain& active_chain, const LockPoints* lp) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-\n /**\n  * Check if transaction will be BIP68 final in the next block to be created on top of tip.\n  * @param[in]   tip             Chain tip to check tx sequence locks against. For example,"
      }
    ]
  },
  {
    "sha": "bedf246f1e2497a3641093c6e8fa11fb34dddac4",
    "node_id": "C_kwDOABII59oAKGJlZGYyNDZmMWUyNDk3YTM2NDEwOTNjNmU4ZmExMWZiMzRkZGRhYzQ",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-30T11:15:58Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-30T12:10:19Z"
      },
      "message": "[mempool] only update lockpoints for non-removed entries\n\nEach entry's lockpoints are independent of one another, so there isn't\nany reason to update lockpoints for entries that will be removed.\nSeparating the loops also allows us to move validation logic out and\nleave lockpoints in txmempool.",
      "tree": {
        "sha": "0c949ec52314dc8419e15179450c5eea9643bcb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c949ec52314dc8419e15179450c5eea9643bcb8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bedf246f1e2497a3641093c6e8fa11fb34dddac4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bedf246f1e2497a3641093c6e8fa11fb34dddac4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bedf246f1e2497a3641093c6e8fa11fb34dddac4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bedf246f1e2497a3641093c6e8fa11fb34dddac4/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1b3a11e126b258fba975ed7c452221608f2c5472",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b3a11e126b258fba975ed7c452221608f2c5472",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1b3a11e126b258fba975ed7c452221608f2c5472"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4cde0993a84135869abb974094c2be9f2a44a791",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bedf246f1e2497a3641093c6e8fa11fb34dddac4/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bedf246f1e2497a3641093c6e8fa11fb34dddac4/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=bedf246f1e2497a3641093c6e8fa11fb34dddac4",
        "patch": "@@ -642,7 +642,7 @@ void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n     for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->GetTx();\n         LockPoints lp = it->GetLockPoints();\n-        bool validLP =  TestLockPointValidity(active_chainstate.m_chain, &lp);\n+        const bool validLP = TestLockPointValidity(active_chainstate.m_chain, &lp);\n         CCoinsViewMemPool view_mempool(&active_chainstate.CoinsTip(), *this);\n         if (!CheckFinalTx(active_chainstate.m_chain.Tip(), tx, flags)\n             || !CheckSequenceLocks(active_chainstate.m_chain.Tip(), view_mempool, tx, flags, &lp, validLP)) {\n@@ -663,15 +663,19 @@ void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n                 }\n             }\n         }\n-        if (!validLP) {\n-            mapTx.modify(it, update_lock_points(lp));\n-        }\n     }\n     setEntries setAllRemoves;\n     for (txiter it : txToRemove) {\n         CalculateDescendants(it, setAllRemoves);\n     }\n     RemoveStaged(setAllRemoves, false, MemPoolRemovalReason::REORG);\n+    auto chain = active_chainstate.m_chain;\n+    for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n+        LockPoints lp = it->GetLockPoints();\n+        if (!TestLockPointValidity(chain, &lp)) {\n+            mapTx.modify(it, update_lock_points(lp));\n+        }\n+    }\n }\n \n void CTxMemPool::removeConflicts(const CTransaction &tx)"
      }
    ]
  },
  {
    "sha": "bb9078ed51159fa162484f16993313ed6cf980e3",
    "node_id": "C_kwDOABII59oAKGJiOTA3OGVkNTExNTlmYTE2MjQ4NGYxNjk5MzMxM2VkNmNmOTgwZTM",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-29T19:30:32Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-30T12:21:39Z"
      },
      "message": "[refactor] put finality and maturity checking into a lambda\n\nNo behavior change.",
      "tree": {
        "sha": "a258f71ad6ef97e996a4fc94dc239f9d882356c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a258f71ad6ef97e996a4fc94dc239f9d882356c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb9078ed51159fa162484f16993313ed6cf980e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb9078ed51159fa162484f16993313ed6cf980e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb9078ed51159fa162484f16993313ed6cf980e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb9078ed51159fa162484f16993313ed6cf980e3/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bedf246f1e2497a3641093c6e8fa11fb34dddac4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bedf246f1e2497a3641093c6e8fa11fb34dddac4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bedf246f1e2497a3641093c6e8fa11fb34dddac4"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "088a560e15166f10e7d92a0bc32217930a15e9dc",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb9078ed51159fa162484f16993313ed6cf980e3/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb9078ed51159fa162484f16993313ed6cf980e3/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=bb9078ed51159fa162484f16993313ed6cf980e3",
        "patch": "@@ -638,8 +638,13 @@ void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n {\n     // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     AssertLockHeld(cs);\n-    setEntries txToRemove;\n-    for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n+    AssertLockHeld(::cs_main);\n+\n+    const auto check_final_and_mature = [this, &active_chainstate, flags](txiter it)\n+        EXCLUSIVE_LOCKS_REQUIRED(cs, ::cs_main) {\n+        bool should_remove = false;\n+        AssertLockHeld(cs);\n+        AssertLockHeld(::cs_main);\n         const CTransaction& tx = it->GetTx();\n         LockPoints lp = it->GetLockPoints();\n         const bool validLP = TestLockPointValidity(active_chainstate.m_chain, &lp);\n@@ -648,7 +653,7 @@ void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n             || !CheckSequenceLocks(active_chainstate.m_chain.Tip(), view_mempool, tx, flags, &lp, validLP)) {\n             // Note if CheckSequenceLocks fails the LockPoints may still be invalid\n             // So it's critical that we remove the tx and not depend on the LockPoints.\n-            txToRemove.insert(it);\n+            should_remove = true;\n         } else if (it->GetSpendsCoinbase()) {\n             for (const CTxIn& txin : tx.vin) {\n                 indexed_transaction_set::const_iterator it2 = mapTx.find(txin.prevout.hash);\n@@ -658,11 +663,17 @@ void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n                 if (m_check_ratio != 0) assert(!coin.IsSpent());\n                 unsigned int nMemPoolHeight = active_chainstate.m_chain.Tip()->nHeight + 1;\n                 if (coin.IsSpent() || (coin.IsCoinBase() && ((signed long)nMemPoolHeight) - coin.nHeight < COINBASE_MATURITY)) {\n-                    txToRemove.insert(it);\n+                    should_remove = true;\n                     break;\n                 }\n             }\n         }\n+        return should_remove; \n+    };\n+\n+    setEntries txToRemove;\n+    for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n+        if (check_final_and_mature(it)) txToRemove.insert(it);\n     }\n     setEntries setAllRemoves;\n     for (txiter it : txToRemove) {"
      }
    ]
  },
  {
    "sha": "64e4963c635ec3a73a5fa3f32f6ec08e70609f60",
    "node_id": "C_kwDOABII59oAKDY0ZTQ5NjNjNjM1ZWMzYTczYTVmYTNmMzJmNmVjMDhlNzA2MDlmNjA",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-29T19:55:07Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-30T12:21:56Z"
      },
      "message": "[mempool] always assert coin spent\n\nThis is an extremely cheap function (just checks that the coin CTxOut\nisn't null) that doesn't need to be gated on check_ratio.",
      "tree": {
        "sha": "e4a0c29bd3fcafa8f17baf44c2d21ee5fdaedbb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4a0c29bd3fcafa8f17baf44c2d21ee5fdaedbb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64e4963c635ec3a73a5fa3f32f6ec08e70609f60",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64e4963c635ec3a73a5fa3f32f6ec08e70609f60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64e4963c635ec3a73a5fa3f32f6ec08e70609f60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64e4963c635ec3a73a5fa3f32f6ec08e70609f60/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb9078ed51159fa162484f16993313ed6cf980e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb9078ed51159fa162484f16993313ed6cf980e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb9078ed51159fa162484f16993313ed6cf980e3"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "43b15be83de055a48a89999a5ff8e75aec5a5700",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64e4963c635ec3a73a5fa3f32f6ec08e70609f60/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64e4963c635ec3a73a5fa3f32f6ec08e70609f60/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=64e4963c635ec3a73a5fa3f32f6ec08e70609f60",
        "patch": "@@ -660,7 +660,7 @@ void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n                 if (it2 != mapTx.end())\n                     continue;\n                 const Coin &coin = active_chainstate.CoinsTip().AccessCoin(txin.prevout);\n-                if (m_check_ratio != 0) assert(!coin.IsSpent());\n+                assert(!coin.IsSpent());\n                 unsigned int nMemPoolHeight = active_chainstate.m_chain.Tip()->nHeight + 1;\n                 if (coin.IsSpent() || (coin.IsCoinBase() && ((signed long)nMemPoolHeight) - coin.nHeight < COINBASE_MATURITY)) {\n                     should_remove = true;"
      }
    ]
  },
  {
    "sha": "a64078e38563ef3ac5e5ec20c07569441c87eeee",
    "node_id": "C_kwDOABII59oAKGE2NDA3OGUzODU2M2VmM2FjNWU1ZWMyMGMwNzU2OTQ0MWM4N2VlZWU",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-09-29T19:52:04Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-11-30T12:21:56Z"
      },
      "message": "Break validation <-> txmempool circular dependency\n\nNo behavior change.\n\nParameterize removeForReorg using a CChain and callable that\nencapsulates validation logic.  The mempool shouldn't need to know a\nbunch of details about coinbase maturity and lock finality. Instead,\njust pass in a callable function that says true/false. Breaks circular\ndependency by removing txmempool's dependency on validation.",
      "tree": {
        "sha": "3a4968f341333b819884b28e94f74007fd24c1fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a4968f341333b819884b28e94f74007fd24c1fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a64078e38563ef3ac5e5ec20c07569441c87eeee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a64078e38563ef3ac5e5ec20c07569441c87eeee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a64078e38563ef3ac5e5ec20c07569441c87eeee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a64078e38563ef3ac5e5ec20c07569441c87eeee/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64e4963c635ec3a73a5fa3f32f6ec08e70609f60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64e4963c635ec3a73a5fa3f32f6ec08e70609f60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64e4963c635ec3a73a5fa3f32f6ec08e70609f60"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 37,
      "deletions": 38
    },
    "files": [
      {
        "sha": "27fbb8acac75442f5a5c15472bd14eadd0058a4c",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 34,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a64078e38563ef3ac5e5ec20c07569441c87eeee/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a64078e38563ef3ac5e5ec20c07569441c87eeee/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=a64078e38563ef3ac5e5ec20c07569441c87eeee",
        "patch": "@@ -16,7 +16,6 @@\n #include <util/moneystr.h>\n #include <util/system.h>\n #include <util/time.h>\n-#include <validation.h>\n #include <validationinterface.h>\n \n #include <cmath>\n@@ -634,43 +633,12 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, MemPoolRemovalReaso\n         RemoveStaged(setAllRemoves, false, reason);\n }\n \n-void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n+void CTxMemPool::removeForReorg(CChain& chain, std::function<bool(txiter)> check_final_and_mature)\n {\n     // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     AssertLockHeld(cs);\n     AssertLockHeld(::cs_main);\n \n-    const auto check_final_and_mature = [this, &active_chainstate, flags](txiter it)\n-        EXCLUSIVE_LOCKS_REQUIRED(cs, ::cs_main) {\n-        bool should_remove = false;\n-        AssertLockHeld(cs);\n-        AssertLockHeld(::cs_main);\n-        const CTransaction& tx = it->GetTx();\n-        LockPoints lp = it->GetLockPoints();\n-        const bool validLP = TestLockPointValidity(active_chainstate.m_chain, &lp);\n-        CCoinsViewMemPool view_mempool(&active_chainstate.CoinsTip(), *this);\n-        if (!CheckFinalTx(active_chainstate.m_chain.Tip(), tx, flags)\n-            || !CheckSequenceLocks(active_chainstate.m_chain.Tip(), view_mempool, tx, flags, &lp, validLP)) {\n-            // Note if CheckSequenceLocks fails the LockPoints may still be invalid\n-            // So it's critical that we remove the tx and not depend on the LockPoints.\n-            should_remove = true;\n-        } else if (it->GetSpendsCoinbase()) {\n-            for (const CTxIn& txin : tx.vin) {\n-                indexed_transaction_set::const_iterator it2 = mapTx.find(txin.prevout.hash);\n-                if (it2 != mapTx.end())\n-                    continue;\n-                const Coin &coin = active_chainstate.CoinsTip().AccessCoin(txin.prevout);\n-                assert(!coin.IsSpent());\n-                unsigned int nMemPoolHeight = active_chainstate.m_chain.Tip()->nHeight + 1;\n-                if (coin.IsSpent() || (coin.IsCoinBase() && ((signed long)nMemPoolHeight) - coin.nHeight < COINBASE_MATURITY)) {\n-                    should_remove = true;\n-                    break;\n-                }\n-            }\n-        }\n-        return should_remove; \n-    };\n-\n     setEntries txToRemove;\n     for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         if (check_final_and_mature(it)) txToRemove.insert(it);\n@@ -680,7 +648,6 @@ void CTxMemPool::removeForReorg(CChainState& active_chainstate, int flags)\n         CalculateDescendants(it, setAllRemoves);\n     }\n     RemoveStaged(setAllRemoves, false, MemPoolRemovalReason::REORG);\n-    auto chain = active_chainstate.m_chain;\n     for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         LockPoints lp = it->GetLockPoints();\n         if (!TestLockPointValidity(chain, &lp)) {"
      },
      {
        "sha": "c6e08a3ca57fd5c071c09bbd56e6193d5b083322",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a64078e38563ef3ac5e5ec20c07569441c87eeee/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a64078e38563ef3ac5e5ec20c07569441c87eeee/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=a64078e38563ef3ac5e5ec20c07569441c87eeee",
        "patch": "@@ -589,7 +589,10 @@ class CTxMemPool\n     void addUnchecked(const CTxMemPoolEntry& entry, setEntries& setAncestors, bool validFeeEstimate = true) EXCLUSIVE_LOCKS_REQUIRED(cs, cs_main);\n \n     void removeRecursive(const CTransaction& tx, MemPoolRemovalReason reason) EXCLUSIVE_LOCKS_REQUIRED(cs);\n-    void removeForReorg(CChainState& active_chainstate, int flags) EXCLUSIVE_LOCKS_REQUIRED(cs, cs_main);\n+    /** After reorg, check if mempool entries are now non-final, premature coinbase spends, or have\n+     * invalid lockpoints. Update lockpoints and remove entries (and descendants of entries) that\n+     * are no longer valid. */\n+    void removeForReorg(CChain& chain, std::function<bool(txiter)> check_final_and_mature) EXCLUSIVE_LOCKS_REQUIRED(cs, cs_main);\n     void removeConflicts(const CTransaction& tx) EXCLUSIVE_LOCKS_REQUIRED(cs);\n     void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight) EXCLUSIVE_LOCKS_REQUIRED(cs);\n "
      },
      {
        "sha": "714eab1f77ffb1ec6a9b9c645728fc1e698f9e35",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 1,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a64078e38563ef3ac5e5ec20c07569441c87eeee/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a64078e38563ef3ac5e5ec20c07569441c87eeee/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=a64078e38563ef3ac5e5ec20c07569441c87eeee",
        "patch": "@@ -350,8 +350,39 @@ void CChainState::MaybeUpdateMempoolForReorg(\n     // the disconnectpool that were added back and cleans up the mempool state.\n     m_mempool->UpdateTransactionsFromBlock(vHashUpdate);\n \n+    const auto check_final_and_mature = [this, flags=STANDARD_LOCKTIME_VERIFY_FLAGS](CTxMemPool::txiter it)\n+        EXCLUSIVE_LOCKS_REQUIRED(m_mempool->cs, ::cs_main) {\n+        bool should_remove = false;\n+        AssertLockHeld(m_mempool->cs);\n+        AssertLockHeld(::cs_main);\n+        const CTransaction& tx = it->GetTx();\n+        LockPoints lp = it->GetLockPoints();\n+        bool validLP = TestLockPointValidity(m_chain, &lp);\n+        CCoinsViewMemPool view_mempool(&CoinsTip(), *m_mempool);\n+        if (!CheckFinalTx(m_chain.Tip(), tx, flags)\n+            || !CheckSequenceLocks(m_chain.Tip(), view_mempool, tx, flags, &lp, validLP)) {\n+            // Note if CheckSequenceLocks fails the LockPoints may still be invalid\n+            // So it's critical that we remove the tx and not depend on the LockPoints.\n+            should_remove = true;\n+        } else if (it->GetSpendsCoinbase()) {\n+            for (const CTxIn& txin : tx.vin) {\n+                auto it2 = m_mempool->mapTx.find(txin.prevout.hash);\n+                if (it2 != m_mempool->mapTx.end())\n+                    continue;\n+                const Coin &coin = CoinsTip().AccessCoin(txin.prevout);\n+                assert(!coin.IsSpent());\n+                unsigned int nMemPoolHeight = m_chain.Tip()->nHeight + 1;\n+                if (coin.IsSpent() || (coin.IsCoinBase() && ((signed long)nMemPoolHeight) - coin.nHeight < COINBASE_MATURITY)) {\n+                    should_remove = true;\n+                    break;\n+                }\n+            }\n+        }\n+        return should_remove;\n+    };\n+\n     // We also need to remove any now-immature transactions\n-    m_mempool->removeForReorg(*this, STANDARD_LOCKTIME_VERIFY_FLAGS);\n+    m_mempool->removeForReorg(m_chain, check_final_and_mature);\n     // Re-limit mempool size, in case we added any transactions\n     LimitMempoolSize(\n         *m_mempool,"
      },
      {
        "sha": "69185090d1228734d2f55c4c68fb88886eb3d5f6",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a64078e38563ef3ac5e5ec20c07569441c87eeee/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a64078e38563ef3ac5e5ec20c07569441c87eeee/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=a64078e38563ef3ac5e5ec20c07569441c87eeee",
        "patch": "@@ -15,12 +15,10 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"index/base -> validation -> index/blockfilterindex -> index/base\"\n     \"index/coinstatsindex -> node/coinstats -> index/coinstatsindex\"\n     \"policy/fees -> txmempool -> policy/fees\"\n-    \"policy/rbf -> txmempool -> validation -> policy/rbf\"\n     \"qt/addresstablemodel -> qt/walletmodel -> qt/addresstablemodel\"\n     \"qt/recentrequeststablemodel -> qt/walletmodel -> qt/recentrequeststablemodel\"\n     \"qt/sendcoinsdialog -> qt/walletmodel -> qt/sendcoinsdialog\"\n     \"qt/transactiontablemodel -> qt/walletmodel -> qt/transactiontablemodel\"\n-    \"txmempool -> validation -> txmempool\"\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n     \"node/coinstats -> validation -> node/coinstats\""
      }
    ]
  }
]