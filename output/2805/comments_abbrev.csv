theuni,2013-07-05T18:36:07Z,@jgarzik @laanwj @sipa ping. Any comments?\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-20533093,20533093,
sipa,2013-07-07T12:48:25Z,"Changes look good to me, except that I do not want to maintain two build systems in parallel. If we switch to autotools, we switch, and the existing makefiles go away. Gitian determinism can be fixed later (though just builds should be verified to work). Unfortunately; I can't test myself now (I'm not at home).\n\nAbout -Qt, you'll want an ACK from @laanwj \n\nI have no opinion about recursive mak",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-20570245,20570245,
luke-jr,2013-07-17T05:50:36Z,"I don't see any code to look for bdb headers, much less figure out whether they're in the standard /usr/include/db4.8 path or somewhere else common...\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21093468,21093468,
theuni,2013-07-17T05:55:07Z,"Hmm, you're correct on bdb headers, I'll add the check. As for uncommon paths, it'll be up to the user to add it to cppflags.\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21093588,21093588,
theuni,2013-07-18T04:38:32Z,"I've pushed the obvious fixes to your comments above. Thanks for the review. These will of course be squashed when ready.\n\nI didn't add the --with-frontends because with only 2 (tests would be separate), I think that is quite confusing. I hope you'll agree and that can be addressed if/when a new frontend is added.\n\nWaiting on replies to my comments on the rest.\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21162280,21162280,
luke-jr,2013-07-18T04:55:01Z,"Addressed later means builders need to change their configure lines based on the version they are building, even if both versions support the same features. Better to have something extensible from the start IMO.\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21162626,21162626,
theuni,2013-07-18T05:03:16Z,"Fair enough. But with 2 frontend's, and 1 required, there's no way to avoid an awkward syntax.\n\nCompare:\n\nDisable qt:\n--with-frontends=bitcoind\n\nSome future (non-auto-enabled) thing:\n--with-frontends=bitcoind,bitcoin-qt,bitcoin-foo\n\nvs.\n\nDisable qt:\n--without-qt\n\nSome future (non-auto-enabled) thing:\n--with-bitcoin-foo\n\nImo, with-frontends is not extensible, it's just a complicat",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21162850,21162850,
luke-jr,2013-07-18T05:20:43Z,Disable qt:\n--without-frontends=bitcoin-qt\n\nSome future (non-auto-enabled) thing:\n--with-frontends=bitcoin-qt\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21163212,21163212,
theuni,2013-07-18T05:32:07Z,"--without-frontends sets the withval to 'no'. afaik --without-frontends=foo has no meaning, or at best would not be portable. Is there some magic I'm not aware of for determining that a withval was also negated?\n\nRegardless of that, even if it is valid somehow, I've never seen that syntax, and a quick google search shows no results either. So I can't imagine any user stumbling upon it...\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21163477,21163477,
luke-jr,2013-07-18T05:37:13Z,"Hmm, I've seen this kind of thing before with KVM/qemu. They do ""all targets"" by default (and --target-list overrides entirely), nor use autoconf.\n\nHow about just building bitcoind by default and just --with-frontends=bitcoin-qt?\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21163603,21163603,
theuni,2013-07-18T05:45:02Z,"So then you still have to add it for each one you want to build, but you've disabled the default for what (arguably) most builders will want. I still don't see how it's a step up in any way from --with-qt (or --with-bitcoin-qt) or --without-qt.\n\nIf we're talking >5 or so front-ends in the future, sure. But presumably at that point they'd have to be split into separate projects by then anyway.\n\",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21163810,21163810,
luke-jr,2013-07-18T06:09:48Z,"--with-qt implies it's the same client being built with or without Qt, which isn't exactly the case here.\nYou may have a point with regard to prioritizing splitting up the repositories before too many implementations grow on it.\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21164453,21164453,
theuni,2013-07-18T06:11:24Z,Compromise at --with-qt-frontend ?\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21164493,21164493,
theuni,2013-07-18T06:17:43Z,"or even --enable-qt-frontend, since qt-frontend would be a feature in this case rather than a library for inclusion.\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21164657,21164657,
luke-jr,2013-07-18T06:19:16Z,Would it be hard to leave it out entirely so the builder just does:\nmake bitcoin-qt\nmake bitcoind\nmake all\n?\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21164702,21164702,
theuni,2013-07-18T06:25:47Z,"Sure, those already work.\n\nThey're awkward with the recursive makefiles, which is one of the reasons I was against. You have to be in the correct dir for them to work:\n\nmake (makes all)\ncd src; make bitcoind\ncd src/qt; make bitcoin-qt\n\nBut some phony targets would be no-brainers to add, then they'd work anywhere.\n\nHowever you still need to be able to check for things. If you didn't, you ",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21164910,21164910,
luke-jr,2013-07-18T06:28:27Z,"If qrencode is missing, it should be a warning (and disable itself), not an error, unless --with-qrencode is specified ;)\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21164991,21164991,
theuni,2013-07-18T06:38:56Z,"It is, but qrencode is never checked unless qt is enabled. Nor should it be.\n\nThis discussion has gone way off track, and this is the kind of thing I was afraid of. This thing will never be merged if the points of contention are cosmetic. I'm happy to change those to whatever makes you guys happy and argue them post-merge.\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21165320,21165320,
luke-jr,2013-07-18T07:11:39Z,I don't think anyone considers this an obstacle to merging. I believe that is just waiting on @laanwj at this point.\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21166438,21166438,
laanwj,2013-07-22T18:34:18Z,"I preferred a non-recursive makefile as well, but I don't want to bikeshed about this.\n\nACK after squash\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21365418,21365418,
jgarzik,2013-07-24T16:40:14Z,"Looks really, really good.\n\nThe only issue I found during review:  bitcoin-config.h should normally be the -very- first include, because it may need to change the behavior of certain includes that follow.  This may or may not be needed with bitcoin, but it is general practice when coding autotools code.\n\nAlso, make sure bitcoin-config.h includes the standard header #ifndef FOO_H ... guard at t",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21498157,21498157,
theuni,2013-07-24T21:54:05Z,"@jgarzik good suggestion on bitcoin-configh.h, thanks. Done. As for the header order, I've changed it as requested, though I would disagree and say that if (in-project) include order matters, something else is broken somewhere. But that's way out of scope here :)\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21519185,21519185,
theuni,2013-07-24T22:00:55Z,"@jgarzik as for BitcoinPullTester, I'm not sure. It seems to have a hard-coded build process. If that's the case, it should change to:\n\n```\n./autogen.sh && ./configure && make check\n```\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21519668,21519668,
gavinandresen,2013-07-25T05:22:31Z,RE: the pull tester:\n\nThe pull tester build/test script lives at:\n   https://github.com/TheBlueMatt/test-scripts/blob/master/build-script.sh\n\nA patch that checks for configure.ac (or whatever) and Does the Right Thing in the right places would be nifty.\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21533832,21533832,
BitcoinPullTester,2013-07-26T00:36:07Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/bad255871be523773c07fc3ac64f7d5f03032041 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in contrib/tes",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-21594611,21594611,
wtogami,2013-08-18T05:59:19Z,What needs to be done to move this forward?\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-22825319,22825319,
sipa,2013-08-18T14:05:41Z,"I believe all that is left is rebasing, squashing, removing the old makefiles, and updating some documentation?\n\nFixing determinism can be done after merge, IMHO, but the build should work on all supported environments. Fixing pulltester can only be done after merging as well.\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-22831012,22831012,
theuni,2013-08-19T20:41:56Z,I have a bunch of work in a local branch that needs to be cleaned up and pushed here.\n\nI'll have this merge-ready without fail by this time next week (my schedule is back to normal then).\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-22902506,22902506,
theuni,2013-08-27T03:11:30Z,Closing in favor of a new (final) PR.\n,https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-23310487,23310487,
theuni,2013-08-27T03:27:28Z,"Edit: Whoops, fixed link.\nContinued at https://github.com/bitcoin/bitcoin/pull/2943.\n",https://github.com/bitcoin/bitcoin/pull/2805#issuecomment-23310937,23310937,
luke-jr,2013-07-17T05:26:24Z,AC_ARG_WITH is for dependencies.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234858,5234858,configure.ac
luke-jr,2013-07-17T05:26:49Z,"AC_ARG_ENABLE([upnp], ...) makes sense here (after the dependency is moved to AC_ARG_WITH)\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234860,5234860,configure.ac
luke-jr,2013-07-17T05:27:36Z,Wouldn't it be better to just edit the gitian yml to not set it until after configure?\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234862,5234862,configure.ac
luke-jr,2013-07-17T05:31:15Z,"Rather, you mean --disable-maintainer-mode can...\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234875,5234875,configure.ac
theuni,2013-07-17T05:31:55Z,"No, that doesn't work. Makefile attempts to re-run configure because it think's it's been touched post-configure.\n\nBesides, I would like to be able to create deterministic builds without the use of gitian. For now they're only deterministic relative to the builder, but I hope to improve that soon.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234882,5234882,configure.ac
luke-jr,2013-07-17T05:32:05Z,"AC_ARG_WITH([qt],...)\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234883,5234883,configure.ac
luke-jr,2013-07-17T05:32:28Z,This is usually a property of CXXFLAGS passed to configure.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234884,5234884,configure.ac
theuni,2013-07-17T05:32:39Z,Will change.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234887,5234887,configure.ac
luke-jr,2013-07-17T05:33:02Z,"AC_ARG_WITH([qrencode],...)\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234890,5234890,configure.ac
luke-jr,2013-07-17T05:33:19Z,"AC_ARG_WITH([qtdbus],...)\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234892,5234892,configure.ac
theuni,2013-07-17T05:33:51Z,"Correct, will fix.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234899,5234899,configure.ac
luke-jr,2013-07-17T05:34:02Z,Also usually a property of CXXFLAGS\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234900,5234900,configure.ac
luke-jr,2013-07-17T05:34:18Z,This shouldn't be necessary... ccache is transparent\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234903,5234903,configure.ac
theuni,2013-07-17T05:35:26Z,"This was added to mimic the debug flags in the current makefile, in an attempt to avoid complaints about missing features in the new buildsystem. I agree that it should not be here long-term.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234912,5234912,configure.ac
theuni,2013-07-17T05:36:02Z,See above\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234915,5234915,configure.ac
theuni,2013-07-17T05:37:29Z,"Only if CXX is specified. Many other projects use this trick, it was added here for convenience. I can remove if necessary.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234929,5234929,configure.ac
luke-jr,2013-07-17T05:39:08Z,-frandom-seed should be different for every file compiled!\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234942,5234942,configure.ac
luke-jr,2013-07-17T05:41:44Z,Wouldn't it be better to just define MSG_NOSIGNAL here and get rid of the ifdefs all over that just define it?\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234966,5234966,configure.ac
theuni,2013-07-17T05:42:43Z,This was pulled from the old makefiles and gitian descriptors. It's required for deterministic builds.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234977,5234977,configure.ac
luke-jr,2013-07-17T05:43:29Z,"qt and tests should probably be replaced by a --with-frontends=bitcoind,bitcoin-qt,test_bitcoin so it's cleanly extensible\nEven if we only support building one at a time right now, doing this now will make things nicer in the future when all can be built together.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234990,5234990,configure.ac
theuni,2013-07-17T05:44:06Z,"There's nothing to define it to.. the test is to see if the host toolchain defines it. If not, a definition must be spoofed as is currently done.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5234995,5234995,configure.ac
luke-jr,2013-07-17T05:44:43Z,"If boost chrono is available, it is probably needed.\nThis isn't an OS-specific thing - newer boost require it on OSX and Linux too.\nAnd in cases it isn't, we could use --as-needed...\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235001,5235001,configure.ac
theuni,2013-07-17T05:45:42Z,"For qt/bitcoind, I completely agree. Disagree on tests though. --disable-tests is very common, and one of the first things likely to drive a distro package maintainer crazy if missing.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235017,5235017,configure.ac
luke-jr,2013-07-17T05:46:10Z,"Huh? Why do we need Chinese, Japanese, Korean, and Taiwanese codecs to compile Bitcoin-Qt???\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235021,5235021,configure.ac
theuni,2013-07-17T05:46:52Z,Iirc for the first autotools attempt it was windows only. I suppose that's changed now. Will fix.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235028,5235028,configure.ac
luke-jr,2013-07-17T05:47:25Z,Probably shouldn't even check for them if Bitcoin-Qt isn't being built?\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235033,5235033,configure.ac
theuni,2013-07-17T05:49:24Z,"See:\nbitcoin-qt.pro:    QTPLUGIN += qcncodecs qjpcodecs qtwcodecs qkrcodecs qtaccessiblewidgets\nand:\nsrc/qt/bitcoin.cpp:Q_IMPORT_PLUGIN(qtwcodecs)\n\nWin32 links plugins in static.\n\nRather than changing behavior, I opted to take the (hopefully) less controversial route in order to get the buildsystem merged in more easily.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235053,5235053,configure.ac
luke-jr,2013-07-17T05:51:27Z,Did you use --disable-maintainer-mode in gitian's configure? That should solve it.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235067,5235067,configure.ac
theuni,2013-07-17T05:52:35Z,"That is the case already.\n\nErr.. looks like the qr lib will be checked anyway, will fix that one.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235080,5235080,configure.ac
luke-jr,2013-07-17T05:53:03Z,I'm pretty sure it's only used by gitian right now. Just because gitian does something (in a known/controlled environment) does not mean we want every build doing it... Gitian can still pass CXXFLAGS to configure.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235083,5235083,configure.ac
luke-jr,2013-07-17T05:53:50Z,"AC_DEFINE([MSG_NOSIGNAL],[0],[Defined if MSG_NOSIGNAL is missing from system headers])\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235090,5235090,configure.ac
luke-jr,2013-07-17T05:54:53Z,Sounds reasonable to keep tests separate. I'd forgotten the tests vary based on targets anyhow.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235106,5235106,configure.ac
luke-jr,2013-07-17T05:55:25Z,"It's a disaster now: we're using it only for Mac and Windows, but that's because we lack any way to detect if it's _really_ needed. Automake fixes this :)\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235113,5235113,configure.ac
theuni,2013-07-17T05:58:33Z,"I'm not sure that I see the harm, but I'll back down on this until I have something to show.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235135,5235135,configure.ac
theuni,2013-07-17T06:00:06Z,"I verified that it does not. Gitian does use --disable-maintainer-mode anyway though, for a separate reason that I can't recall atm.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235145,5235145,configure.ac
luke-jr,2013-07-17T06:02:49Z,CPPFLAGS and LDFLAGS should usually be on the right side of ./configure\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235155,5235155,contrib/gitian-descriptors/gitian-win32.yml
theuni,2013-07-17T06:03:40Z,"That defies all convention. The correct thing would be to have a wrapper.h that includes such headers as necessary, and attempts to define them if missing. Then only one define is needed.\n\nSorry, but a big -1 from me on that one.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235161,5235161,configure.ac
theuni,2013-07-17T06:05:49Z,sure.\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5235172,5235172,contrib/gitian-descriptors/gitian-win32.yml
Diapolo,2013-07-24T20:45:26Z,"Just a quick question, what about MSG_DONTWAIT? Why not add such a thing for this also?\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5383531,5383531,configure.ac
Diapolo,2013-07-24T20:48:05Z,"How are these updated in the future (adding new ones to Bitcoin-Qt happens sometimes, when I create a Transifex sync pull)? \n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5383615,5383615,src/qt/Makefile.am
theuni,2013-07-24T21:45:01Z,Just add them to QT_TS and QT_QM here. Is that what you meant?\n,https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5385121,5385121,src/qt/Makefile.am
Diapolo,2013-07-25T05:47:59Z,"I mean currently the files need to be listed in src/qt/bitcoin.qrc to be usable by Bitcoin-Qt. Does this whole pull move completely away from our bitcoin-qt.pro file and qmake? If that is a dumb question, sorry I'm that Windows guy and makefiles are magic for me ^^.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5391347,5391347,src/qt/Makefile.am
theuni,2013-07-25T10:24:14Z,"No problem.\n\nYes, this does away with the need for qmake, instead we run the same tools that qmake uses, but we run them ourselves instead of describing the process in a .pro file.\n",https://github.com/bitcoin/bitcoin/pull/2805#discussion_r5394880,5394880,src/qt/Makefile.am
