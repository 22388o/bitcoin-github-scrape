[
  {
    "sha": "0ceb0471915f6ad124c7eb59add31e407e651695",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowY2ViMDQ3MTkxNWY2YWQxMjRjN2ViNTlhZGQzMWU0MDdlNjUxNjk1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-05-27T23:55:01Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-30T20:22:24Z"
      },
      "message": "autotools: cleanup usage of MSG_NOSIGNAL\n\nThis is Part of an autotools buildsystem port.\n\nPreviously MSG_NOSIGNAL was defined in a few places, and -DMSG_NOSIGNAL=0 was\npassed by the osx build to signify that it was unavailable there. For Win32, it\nwas assumed to be unavailable.\n\nThis commit flips the logic so that the unix build declares the feature. The\nHAVE_MSG_NOSIGNAL define will be (automatically detected and) set by autotools\nas well, so that both build methods will give the same results.\n\nThere should be no observable changes in functionality here.",
      "tree": {
        "sha": "7503c365aff19b81f3f51ad09f832afe3add2be9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7503c365aff19b81f3f51ad09f832afe3add2be9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ceb0471915f6ad124c7eb59add31e407e651695",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ceb0471915f6ad124c7eb59add31e407e651695",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ceb0471915f6ad124c7eb59add31e407e651695",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ceb0471915f6ad124c7eb59add31e407e651695/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "28bcf3b7ef804f7084938b21708b29c1f5d7c8f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28bcf3b7ef804f7084938b21708b29c1f5d7c8f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28bcf3b7ef804f7084938b21708b29c1f5d7c8f8"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "28eee5f8d96900f65dc32ab537233c62b5f96213",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ceb0471915f6ad124c7eb59add31e407e651695/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ceb0471915f6ad124c7eb59add31e407e651695/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=0ceb0471915f6ad124c7eb59add31e407e651695",
        "patch": "@@ -28,7 +28,6 @@\n \n typedef u_int SOCKET;\n #ifdef WIN32\n-#define MSG_NOSIGNAL        0\n #define MSG_DONTWAIT        0\n typedef int socklen_t;\n #else"
      },
      {
        "sha": "b656757f07d39a2409e1a24a1222f20bd1ba32c0",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ceb0471915f6ad124c7eb59add31e407e651695/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ceb0471915f6ad124c7eb59add31e407e651695/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=0ceb0471915f6ad124c7eb59add31e407e651695",
        "patch": "@@ -56,7 +56,7 @@ LIBS += \\\n TESTDEFS += -DBOOST_TEST_DYN_LINK\n endif\n \n-DEFS=-DMAC_OSX -DMSG_NOSIGNAL=0 -DBOOST_SPIRIT_THREADSAFE\n+DEFS=-DMAC_OSX -DBOOST_SPIRIT_THREADSAFE\n \n ifdef RELEASE\n # Compile for maximum compatibility and smallest size."
      },
      {
        "sha": "7df27aeedd9f335df3f7ae0d0c21ed0599d66ba0",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ceb0471915f6ad124c7eb59add31e407e651695/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ceb0471915f6ad124c7eb59add31e407e651695/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=0ceb0471915f6ad124c7eb59add31e407e651695",
        "patch": "@@ -13,7 +13,7 @@ USE_IPV6:=1\n \n LINK:=$(CXX)\n \n-DEFS=-DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64\n+DEFS=-DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64 -DHAVE_MSG_NOSIGNAL\n \n DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))\n LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))"
      },
      {
        "sha": "02509d962a40f2a74c9f5237d256e178c91dcb72",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ceb0471915f6ad124c7eb59add31e407e651695/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ceb0471915f6ad124c7eb59add31e407e651695/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=0ceb0471915f6ad124c7eb59add31e407e651695",
        "patch": "@@ -24,6 +24,9 @@\n \n // Dump addresses to peers.dat every 15 minutes (900s)\n #define DUMP_ADDRESSES_INTERVAL 900\n+#if !defined(HAVE_MSG_NOSIGNAL)\n+#define MSG_NOSIGNAL 0\n+#endif\n \n using namespace std;\n using namespace boost;"
      },
      {
        "sha": "27bb11982e80284f7a1433c6e0eef2f130ae1f20",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ceb0471915f6ad124c7eb59add31e407e651695/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ceb0471915f6ad124c7eb59add31e407e651695/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=0ceb0471915f6ad124c7eb59add31e407e651695",
        "patch": "@@ -15,6 +15,10 @@\n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n \n+#if !defined(HAVE_MSG_NOSIGNAL)\n+#define MSG_NOSIGNAL 0\n+#endif\n+\n using namespace std;\n \n // Settings"
      },
      {
        "sha": "73783bda6fa390f8e03889aaef82eacdeb421e65",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ceb0471915f6ad124c7eb59add31e407e651695/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ceb0471915f6ad124c7eb59add31e407e651695/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=0ceb0471915f6ad124c7eb59add31e407e651695",
        "patch": "@@ -92,7 +92,6 @@ T* alignup(T* p)\n }\n \n #ifdef WIN32\n-#define MSG_NOSIGNAL        0\n #define MSG_DONTWAIT        0\n \n #ifndef S_IRUSR"
      }
    ]
  },
  {
    "sha": "10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGZiMTc2Njg3YmEyYzZlODk3MGE3YTNmZmVmODAyMWRjZmZmNWNi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-03T22:37:18Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-30T20:22:24Z"
      },
      "message": "autotools: include bitcoin-config.h for autotools builds",
      "tree": {
        "sha": "2855cf119b6162018773370d32b27f11e67997b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2855cf119b6162018773370d32b27f11e67997b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0ceb0471915f6ad124c7eb59add31e407e651695",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ceb0471915f6ad124c7eb59add31e407e651695",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ceb0471915f6ad124c7eb59add31e407e651695"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 37,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b376a67c8a763f150dc57458719a85b11d3d61f2",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -1,6 +1,9 @@\n #ifndef CLIENTVERSION_H\n #define CLIENTVERSION_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#else\n //\n // client versioning and copyright year\n //\n@@ -18,6 +21,8 @@\n // Todo: update this when changing our copyright comments in the source\n #define COPYRIGHT_YEAR 2013\n \n+#endif //HAVE_CONFIG_H\n+\n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!\n #define STRINGIZE(X) DO_STRINGIZE(X)"
      },
      {
        "sha": "43677bad7e375183478c7f232031e37ae068a451",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -22,6 +22,10 @@\n #include <boost/algorithm/string/predicate.hpp>\n #include <openssl/crypto.h>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #ifndef WIN32\n #include <signal.h>\n #endif"
      },
      {
        "sha": "6f0bf74ca3bc8dbc2590a2425f19b10dee9d13e0",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -13,6 +13,10 @@\n \n #include <list>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n class CWallet;\n class CBlock;\n class CBlockIndex;"
      },
      {
        "sha": "118d3730ce0f2c578021f3954c15269da946a7a0",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -11,6 +11,10 @@\n #include \"ui_interface.h\"\n #include \"script.h\"\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #ifdef WIN32\n #include <string.h>\n #endif"
      },
      {
        "sha": "6beea77dffe5877f9065bebbc9d1160a633fb0a9",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -10,6 +10,10 @@\n #include \"serialize.h\"\n #include \"compat.h\"\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n extern int nConnectTimeout;\n \n #ifdef WIN32"
      },
      {
        "sha": "0451060075fde6ceaf2b2ff5361c9ce883d1b5c1",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -8,6 +8,10 @@\n #include \"csvmodelwriter.h\"\n #include \"guiutil.h\"\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #ifdef USE_QRCODE\n #include \"qrcodedialog.h\"\n #endif"
      },
      {
        "sha": "fffc34decde03ee0e3013c581538995da036b122",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -4,6 +4,10 @@\n #include <QObject>\n #include <QIcon>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n QT_BEGIN_NAMESPACE\n class QSystemTrayIcon;\n #ifdef USE_DBUS"
      },
      {
        "sha": "47955e9c33f22112f4320d306541e1d99f9f3b24",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -11,6 +11,10 @@\n #include <QLocale>\n #include <QMessageBox>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n OptionsDialog::OptionsDialog(QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::OptionsDialog),"
      },
      {
        "sha": "b2cd6f75f49976c15a3c6c11896c246538bd2145",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "patch": "@@ -7,6 +7,10 @@\n \n #include <QSettings>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n OptionsModel::OptionsModel(QObject *parent) :\n     QAbstractListModel(parent)\n {"
      }
    ]
  },
  {
    "sha": "070ad14d4dcebe08769d58e0317abecc63d0630b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzBhZDE0ZDRkY2ViZTA4NzY5ZDU4ZTAzMTdhYmVjYzYzZDA2MzBi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-30T20:16:26Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-30T21:27:51Z"
      },
      "message": "autotools: add srcdir param for genbuild.sh\n\nThis allows us to search for .git, so that we can make a guess as to whether\nwe're in a repository or just an extracted tarball.\n\nTODO: might want to check for GIT_DIR env var as well.",
      "tree": {
        "sha": "38a22ef4daf99c189365dd0400ce69e395a4bb80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/38a22ef4daf99c189365dd0400ce69e395a4bb80"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/070ad14d4dcebe08769d58e0317abecc63d0630b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/070ad14d4dcebe08769d58e0317abecc63d0630b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/070ad14d4dcebe08769d58e0317abecc63d0630b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/070ad14d4dcebe08769d58e0317abecc63d0630b/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10fb176687ba2c6e8970a7a3ffef8021dcfff5cb"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "da50b0d1099d4337c967e85dfe2f6c25e5d9924f",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/070ad14d4dcebe08769d58e0317abecc63d0630b/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/070ad14d4dcebe08769d58e0317abecc63d0630b/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=070ad14d4dcebe08769d58e0317abecc63d0630b",
        "patch": "@@ -1,17 +1,19 @@\n #!/bin/sh\n-\n+if [ $# -gt 1 ]; then\n+    cd \"$2\"\n+fi\n if [ $# -gt 0 ]; then\n     FILE=\"$1\"\n     shift\n     if [ -f \"$FILE\" ]; then\n         INFO=\"$(head -n 1 \"$FILE\")\"\n     fi\n else\n-    echo \"Usage: $0 <filename>\"\n+    echo \"Usage: $0 <filename> <srcroot>\"\n     exit 1\n fi\n \n-if [ -e \"$(which git)\" ]; then\n+if [ -e \"$(which git)\" -a -d \".git\" ]; then\n     # clean 'dirty' status of touched files that haven't been modified\n     git diff >/dev/null 2>/dev/null \n "
      }
    ]
  },
  {
    "sha": "a877f183e3af0a199356fc53b2de197bc6c6d15c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODc3ZjE4M2UzYWYwYTE5OTM1NmZjNTNiMmRlMTk3YmM2YzZkMTVj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-16T22:50:42Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-01T04:51:15Z"
      },
      "message": "autotools: add autotools files",
      "tree": {
        "sha": "dc31de73307007ab43f6905dbf72e3140bfd02c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc31de73307007ab43f6905dbf72e3140bfd02c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a877f183e3af0a199356fc53b2de197bc6c6d15c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a877f183e3af0a199356fc53b2de197bc6c6d15c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a877f183e3af0a199356fc53b2de197bc6c6d15c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a877f183e3af0a199356fc53b2de197bc6c6d15c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "070ad14d4dcebe08769d58e0317abecc63d0630b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/070ad14d4dcebe08769d58e0317abecc63d0630b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/070ad14d4dcebe08769d58e0317abecc63d0630b"
      }
    ],
    "stats": {
      "total": 2403,
      "additions": 2402,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d8393fdb95f2463b02f74424e5719fdf1387f4ff",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -1,7 +1,38 @@\n src/*.exe\n src/bitcoin\n src/bitcoind\n-src/test_bitcoin\n+src/test/test_bitcoin\n+src/qt/test/test_bitcoin-qt\n+\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+config.log\n+config.status\n+configure\n+src/.deps/\n+src/Makefile.in\n+src/bitcoin-config.h\n+src/bitcoin-config.h.in\n+src/build-aux/\n+src/qt/Makefile.in\n+src/stamp-h1\n+\n+src/leveldb/.deps/\n+\n+src/test/.deps\n+src/test/.dirstamp\n+\n+src/qt/.deps/\n+src/qt/.dirstamp\n+src/qt/*.moc\n+src/qt/moc_*.cpp\n+src/qt/forms/ui_*.h\n+\n+src/qt/test/.deps/\n+src/qt/test/.dirstamp\n+src/qt/test/moc*.cpp\n+\n .*.swp\n *.*~*\n *.bak\n@@ -10,6 +41,7 @@ src/test_bitcoin\n *.o\n *.patch\n .bitcoin\n+*.a\n \n # Compilation and Qt preprocessor part\n *.qm"
      },
      {
        "sha": "13853dc50afd51d66544bcd1049dfc75994f3b7c",
        "filename": "Makefile.am",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,16 @@\n+ACLOCAL_AMFLAGS = -I src/m4\n+SUBDIRS = src\n+EXTRA_DIST = share/genbuild.sh\n+\n+dist-hook:\n+\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n+\t-$(GIT) archive --format=tar HEAD -- src/version.cpp | $(AMTAR) -C $(top_distdir) -xf -\n+\n+distcheck-hook:\n+\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n+\tcp -rf $(top_srcdir)/src/leveldb/ $(top_distdir)/_build/src/\n+\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n+\n+distcleancheck:\n+\t@:\n+           "
      },
      {
        "sha": "4e7011a59658c80bd81d28ea744da0e4405181e6",
        "filename": "autogen.sh",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1 @@\n+autoreconf -vif"
      },
      {
        "sha": "01bf9352fec59b2d2c8e972e64b0ce66d2b0dd1d",
        "filename": "configure.ac",
        "status": "added",
        "additions": 518,
        "deletions": 0,
        "changes": 518,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,518 @@\n+dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n+AC_PREREQ([2.60])\n+define(_CLIENT_VERSION_MAJOR, 0)\n+define(_CLIENT_VERSION_MINOR, 8)\n+define(_CLIENT_VERSION_REVISION, 99)\n+define(_CLIENT_VERSION_BUILD, 0)\n+define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_COPYRIGHT_YEAR, 2013)\n+AC_INIT([Bitcoin],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[info@bitcoin.org],[bitcoin])\n+AC_CONFIG_AUX_DIR([src/build-aux])\n+AC_CONFIG_MACRO_DIR([src/m4])\n+AC_CANONICAL_HOST\n+\n+dnl reset CXXFLAGS if empty (autoconf adds its own defaults otherwise)\n+:${CFLAGS=\"\"}\n+:${CXXFLAGS=\"\"}\n+\n+dnl faketime breaks configure and is only needed for make. Disable it here.\n+unset FAKETIME\n+\n+dnl ==============================================================\n+dnl Setup for automake\n+dnl ==============================================================\n+\n+AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n+\n+dnl faketime messes with timestamps and causes configure to be re-run.\n+dnl maintainer-mode can be used to bypass this.\n+AM_MAINTAINER_MODE([enable])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+\n+AC_ARG_ENABLE([upnp],\n+  [AS_HELP_STRING([--enable-upnp],\n+  [enable UPNP (default is yes if libminiupnpc is found)])],\n+  [use_upnp=$enableval],\n+  [use_upnp=auto])\n+\n+AC_ARG_ENABLE([upnp-default],\n+  [AS_HELP_STRING([--enable-upnp-default],\n+  [if UPNP is enabled, turn it on at startup (default is no)])],\n+  [use_upnp_default=$enableval],\n+  [use_upnp_default=no])\n+\n+dnl enable ipv6 support\n+AC_ARG_ENABLE([ipv6],\n+  [AS_HELP_STRING([--enable-ipv6],\n+  [enable ipv6 (default is yes)])],\n+  [use_ipv6=$enableval],\n+  [use_ipv6=yes])\n+\n+dnl enable qt support\n+AC_ARG_ENABLE([qt],\n+  [AS_HELP_STRING([--enable-qt],\n+  [enable qt (default is yes)])],\n+  [use_qt=$enableval],\n+  [use_qt=yes])\n+\n+dnl compile with full warnings and debugging symbols\n+AC_ARG_ENABLE(debug,\n+    AS_HELP_STRING([--enable-debug],[compile with debug symbols (default is no)]),\n+    [use_debug=$enableval],\n+    [use_debug=no])\n+    AC_MSG_CHECKING([if compiling with debugging symbols])\n+\n+AC_ARG_ENABLE(tests,\n+    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n+    [use_tests=$enableval],\n+    [use_tests=yes])\n+\n+AC_ARG_ENABLE([qr],\n+  [AS_HELP_STRING([--enable-qr],\n+  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n+  [use_qr=$enableval],\n+  [use_qr=auto])\n+\n+AC_ARG_ENABLE([dbus],\n+  [AS_HELP_STRING([--enable-dbus],\n+  [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n+  [use_dbus=$enableval],\n+  [use_dbus=auto])\n+\n+AC_ARG_ENABLE([hardening],\n+  [AS_HELP_STRING([--enable-hardening],\n+  [attempt to harden the resulting executables (default is yes)])],\n+  [use_hardening=$enableval],\n+  [use_hardening=yes])\n+\n+AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [qt_include_path=])\n+AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [qt_lib_path=])\n+AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path (overridden by pkgconfig)])], [qt_bin_path=$withval], [qt_bin_path=])\n+AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [qt_plugin_path=])\n+\n+AC_CONFIG_SRCDIR([src])\n+AC_CONFIG_HEADERS([src/bitcoin-config.h])\n+\n+dnl Checks for programs.\n+AC_PROG_CXX\n+AC_PROG_CC\n+AC_PROG_CPP\n+AC_PROG_INSTALL\n+AC_PROG_OBJC\n+AC_PROG_MKDIR_P\n+AC_CHECK_TOOL(AR, ar)\n+AC_CHECK_TOOL(RANLIB, ranlib)\n+AC_PATH_PROG([GIT], [git], git)\n+AC_PATH_PROGS([MOC], [moc moc-qt4], moc, $qt_bin_path:$PATH)\n+AC_PATH_PROGS([UIC], [uic uic-qt4], uic, $qt_bin_path:$PATH)\n+AC_PATH_PROG([RCC], [rcc], rcc, $qt_bin_path:$PATH)\n+AC_PATH_PROG([LRELEASE], [lrelease], lrelease, $qt_bin_path:$PATH)\n+\n+## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n+##       compatibility with the legacy buildsystem.\n+##\n+CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -frandom-seed=bitcoin\"\n+CPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO\"\n+DEBUG_CXXFLAGS=\"-g -ggdb\"\n+RELEASE_CXXFLAGS=\"-O2\"\n+\n+use_pkgconfig=yes\n+case $host in\n+  *mingw*)\n+\n+     #pkgconfig does more harm than good with mingw\n+     use_pkgconfig=no\n+\n+     TARGET_OS=windows\n+     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n+     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n+     CXXFLAGS=\"$CXXFLAGS -w\"\n+     ;;\n+  *darwin*)\n+     TARGET_OS=darwin\n+     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\n+     if  test x$cross_compiling != xyes; then\n+       AC_CHECK_PROG([PORT],port, port)\n+       if test x$PORT = xport; then\n+         dnl add default macports paths\n+         CPPFLAGS=\"$CPPFLAGS -I/opt/local/include -I/opt/local/include/db48\"\n+         LDFLAGS=\"$LDFLAGS -L/opt/local/lib -L/opt/local/lib/db48\"\n+       fi\n+\n+       AC_CHECK_PROG([BREW],brew, brew)\n+       if test x$BREW = xbrew; then\n+         dnl add default homebrew paths\n+         CPPFLAGS=\"$CPPFLAGS -I/usr/local/opt/berkeley-db4/include\"\n+         LDFLAGS=\"$LDFLAGS -L/usr/local/opt/berkeley-db4/lib\"\n+       fi\n+     fi\n+\n+     if test x$use_qt = xyes; then\n+       MOC_DEFS=\"-DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([$base_frameworks],[LDFLAGS=\"$LDFLAGS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+     fi\n+\n+     RELEASE_CXXFLAGS=\"$RELEASE_CXXFLAGS -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 -arch i386 -O3\"\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n+     ;;\n+   *)\n+     TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n+     ;;\n+esac\n+\n+if test x$use_debug != xno; then\n+  CXXFLAGS=\"$DEBUG_CXXFLAGS $CXXFLAGS\"\n+else\n+  CXXFLAGS=\"$RELEASE_CXXFLAGS $CXXFLAGS\"\n+fi\n+\n+AC_LANG_PUSH([C++])\n+dnl Require little endian\n+AC_C_BIGENDIAN([AC_MSG_ERROR(\"Big Endian not supported\")])\n+\n+dnl Check for pthread compile/link requirements\n+AX_PTHREAD\n+INCLUDES=\"$INCLUDES $PTHREAD_CFLAGS\"\n+\n+AX_CHECK_LINK_FLAG([-Wl,--large-address-aware], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n+\n+if test x$use_hardening != xno; then\n+  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n+  AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+\n+  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"])\n+\n+  AX_CHECK_LINK_FLAG([-Wl,--dynamicbase], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n+  AX_CHECK_LINK_FLAG([-Wl,--nxcompat], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n+\n+  if test x$TARGET_OS != xwindows; then\n+    # -fstack-protector-all can produce broken binaries with mingw\n+    AX_CHECK_COMPILE_FLAG([-fno-stack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fno-stack-protector\"])\n+    AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n+\n+    # -pie will link successfully with mingw, but it's unsupported and leads to undeterministic binaries\n+    AX_CHECK_LINK_FLAG([-pie], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n+  fi\n+\n+  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n+  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n+fi\n+\n+dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n+if test x$TARGET_OS = xdarwin; then\n+  AX_CHECK_LINK_FLAG([-dead-strip], [LDFLAGS=\"$LDFLAGS -dead_strip\"])\n+fi\n+\n+AC_CHECK_HEADERS([stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h])\n+\n+dnl Check for MSG_NOSIGNAL\n+AC_MSG_CHECKING(for MSG_NOSIGNAL)\n+AC_TRY_COMPILE([#include <sys/socket.h>],\n+ [ int f = MSG_NOSIGNAL; ],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for libdb_cxx\n+AC_CHECK_LIB([db_cxx], [main],, AC_MSG_ERROR(libdb missing))\n+\n+dnl Check for libminiupnpc (optional)\n+if test x$use_upnp != xno; then\n+  AC_CHECK_LIB([miniupnpc], [main],, [have_miniupnpc=no])\n+fi\n+\n+dnl Check for boost libs\n+AX_BOOST_BASE\n+AX_BOOST_SYSTEM\n+AX_BOOST_FILESYSTEM\n+AX_BOOST_PROGRAM_OPTIONS\n+AX_BOOST_THREAD\n+AX_BOOST_UNIT_TEST_FRAMEWORK\n+AX_BOOST_CHRONO\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n+BOOST_INCLUDES=\"$BOOST_CPPFLAGS\"\n+\n+if test x$TARGET_OS = xwindows; then\n+  BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\"\n+fi\n+\n+if test x$use_pkgconfig = xyes; then\n+  : #NOP\n+  m4_ifdef(\n+    [PKG_CHECK_MODULES],\n+    [\n+      PKG_CHECK_MODULES([SSL], [libssl], [INCLUDES=\"$INCLUDES $SSL_CFLAGS\"; LIBS=\"$LIBS $SSL_LIBS\"], [AC_MSG_ERROR(openssl  not found.)])\n+      PKG_CHECK_MODULES([CRYPTO], [libcrypto], [INCLUDES=\"$CRYPTO_CFLAGS\"; LIBS=\"$LIBS $CRYPTO_LIBS\"], [AC_MSG_ERROR(libcrypto  not found.)])\n+\n+      if test x$use_qt = xyes; then\n+        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+        if test x$use_tests = xyes; then\n+          PKG_CHECK_MODULES([QT_TEST], [QtTest], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+        fi\n+        if test x$use_dbus != xno; then\n+          PKG_CHECK_MODULES([QT_DBUS], [QtDBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+        fi\n+      fi\n+      if test x$use_qr != xno; then\n+        PKG_CHECK_MODULES([QR], [libqrencode], [INCLUDES=\"$QR_CFLAGS\"; LIBS=\"$LIBS $QR_LIBS\"; have_qrencode=yes], [have_qrencode=no])\n+      fi\n+    ]\n+  )\n+else\n+  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n+  AC_CHECK_LIB([crypto],      [main],, AC_MSG_ERROR(libcrypto missing))\n+\n+  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n+  AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR(libssl missing))\n+\n+  if test x$use_qt = xyes; then\n+    TEMP_LIBS=\"$LIBS\"\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_lib_path\"\n+      LIBS=\"$QT_LIBS\"\n+    fi\n+    if test x$qt_plugin_path != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+      LIBS=\"$QT_LIBS\"\n+    fi\n+    AC_CHECK_LIB([qcncodecs],      [main],, AC_MSG_ERROR(libqcncodecs not found. Install it or use --disable-qt.))\n+    AC_CHECK_LIB([qjpcodecs],      [main],, AC_MSG_ERROR(libqjpcodecs not found. Install it or use --disable-qt.))\n+    AC_CHECK_LIB([qkrcodecs],      [main],, AC_MSG_ERROR(libqkrcodecs not found. Install it or use --disable-qt.))\n+    AC_CHECK_LIB([qtwcodecs],      [main],, AC_MSG_ERROR(libqtwcodecs not found. Install it or use --disable-qt.))\n+    AC_CHECK_LIB([imm32],      [main],, AC_MSG_ERROR(libimm32 not found. Install it or use --disable-qt.))\n+    AC_CHECK_LIB([QtCore],      [main],, AC_MSG_ERROR(libQtCore not found. Install it or use --disable-qt.))\n+    AC_CHECK_LIB([QtGui],      [main],, AC_MSG_ERROR(libQtGui not found. Install it or use --disable-qt.))\n+    AC_CHECK_LIB([QtNetwork],      [main],, AC_MSG_ERROR(libQtNetwork not found. Install it or use --disable-qt.))\n+    QT_LIBS=\"$LIBS\"\n+    LIBS=\"$TEMP_LIBS\"\n+\n+    TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+    if test x$qt_include_path != x; then\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n+    fi\n+    AC_CHECK_HEADER([QtPlugin],, AC_MSG_ERROR(QtCore headers missing. Install them or use --disable-qt.),)\n+    AC_CHECK_HEADER([QApplication],, AC_MSG_ERROR(QtGUI headers missing. Install them or use --disable-qt.),)\n+    AC_CHECK_HEADER([QLocalSocket],, AC_MSG_ERROR(QtNetwork headers missing. Install them or use --disable-qt.),)\n+\n+    if test x$use_tests = xyes; then\n+      TEMP_LIBS=\"$LIBS\"\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([QtTest],      [main],, have_qt_test=no)\n+      AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+      QT_TEST_LIBS=\"$LIBS\"\n+      LIBS=\"$TEMP_LIBS\"\n+    fi\n+    if test x$use_dbus != xno; then\n+      TEMP_LIBS=\"$LIBS\"\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([QtDBus],      [main],, have_qt_dbus=no)\n+      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+      QT_DBUS_LIBS=\"$LIBS\"\n+      LIBS=\"$TEMP_LIBS\"\n+    fi\n+    CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+    if test x$use_qr != xno; then\n+      AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])\n+      AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)\n+    fi\n+  fi\n+fi\n+\n+if test x$use_ipv6 = xyes; then\n+  dnl Check for ipv6 build requirements\n+  AC_MSG_CHECKING(for IPV6 build support)\n+  AC_TRY_LINK([\n+  #if defined(_WINDOWS)\n+  #include <winsock2.h>\n+  #else\n+  #include <sys/types.h>\n+  #include <sys/socket.h>\n+  #include <netinet/in.h>\n+  #endif\n+  ],[\n+  #if !defined(_WINDOWS)\n+  struct in6_addr ipv6Addr;\n+  struct sockaddr_in6 addr;\n+  #endif\n+  int temp = socket(AF_INET6, SOCK_STREAM, 0);],\n+  [AC_MSG_RESULT(yes); have_ipv6=yes; AC_DEFINE(HAVE_IPV6, 1, [Define this symbol if you have ipv6 build support])],\n+  [AC_MSG_RESULT(no)]; have_ipv6=no)\n+fi\n+AC_LANG_POP\n+\n+dnl enable ipv6 support\n+AC_MSG_CHECKING([if ipv6 should be enabled])\n+if test x$have_ipv6 = xno; then\n+  if test x$use_ipv6 = xyes; then\n+     AC_MSG_ERROR(\"ipv6 requested but cannot be built. use --disable-ipv6\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_ipv6 = xyes; then\n+      AC_MSG_RESULT(yes)\n+      AC_DEFINE([USE_IPV6],[1],[Define if ipv6 support should be compiled in])\n+  else\n+      AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl enable upnp support\n+AC_MSG_CHECKING([if upnp should be enabled])\n+if test x$have_miniupnpc = xno; then\n+  if test x$use_upnp = xyes; then\n+     AC_MSG_ERROR(\"upnp requested but cannot be built. use --disable-upnp\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_upnp != xno; then\n+    AC_MSG_RESULT(yes)\n+    AC_MSG_CHECKING([if upnp should be on by default])\n+    use_upnp=yes\n+    upnp_setting=0\n+    if test x$use_upnp_default != xno; then\n+      use_upnp_default=yes\n+      upnp_setting=1\n+    fi\n+    AC_MSG_RESULT($use_upnp_default)\n+    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[Define to 1 for upnp runtime support])\n+    if test x$TARGET_OS = xwindows; then\n+      CPPFLAGS=\"$CPPFLAGS -DSTATICLIB\"\n+    fi\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl enable qt support\n+AC_MSG_CHECKING([if qt should be enabled])\n+if test x$use_qt = xyes; then\n+  if test x$have_qt = xno; then\n+     AC_MSG_ERROR(\"qt support requested but qt could not be located. use --disable-qt\")\n+  fi\n+  if test x$MOC = x; then\n+    AC_MSG_ERROR(\"qt support requested but moc was not found. use --disable-qt\")\n+  fi\n+  if test x$UIC = x; then\n+    AC_MSG_WARN(\"qt support requested but uic was not found.\")\n+  fi\n+  if test x$RCC = x; then\n+    AC_MSG_WARN(\"qt support requested but rcc was not found.\")\n+  fi\n+  if test x$LRELEASE = x; then\n+    AC_MSG_WARN(\"qt support requested but lrelease was not found.\")\n+  fi\n+  if test x$use_tests = xyes; then\n+    if test x$have_qt_test = xno; then\n+      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --disable-qt.\")\n+    fi\n+  fi\n+  if test x$have_qt_dbus = xno;  then\n+    use_dbus=no\n+    if test x$use_dbus = xyes; then\n+      AC_MSG_ERROR(\"libQtDBus not found. Use --disable-dbus.\")\n+    fi\n+  fi\n+  BUILD_QT=qt\n+fi\n+\n+AC_MSG_RESULT($use_qt)\n+\n+dnl these are only used when qt is enabled\n+if test x$use_qt = xyes; then\n+\n+  dnl enable dbus support\n+  AC_MSG_CHECKING([if dbus should be enabled])\n+  if test x$use_dbus != xno; then\n+    use_dbus=yes\n+    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n+  else\n+    use_dbus=no\n+  fi\n+  AC_MSG_RESULT($use_dbus)\n+\n+  dnl enable qr support\n+  AC_MSG_CHECKING([if qr should be enabled])\n+  if test x$have_qrencode = xno; then\n+    if test x$use_qr != xno; then\n+     AC_MSG_ERROR(\"QR support requested but cannot be built. use --disable-qr\")\n+    fi\n+    AC_MSG_RESULT(no)\n+  else\n+    if test x$use_qr != xno; then\n+      AC_MSG_RESULT(yes)\n+      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n+      use_qr=yes\n+    else\n+      AC_MSG_RESULT(no)\n+    fi\n+  fi\n+\n+  if test x$use_tests = xyes; then\n+    BUILD_TEST_QT=\"test\"\n+  fi\n+fi\n+\n+if test x$use_tests = xyes; then\n+  BUILD_TEST=\"test\"\n+fi\n+\n+AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n+AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n+\n+AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n+AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n+AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n+AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n+AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+\n+AC_SUBST(USE_UPNP)\n+AC_SUBST(USE_QRCODE)\n+AC_SUBST(USE_IPV6)\n+AC_SUBST(INCLUDES)\n+AC_SUBST(BOOST_LIBS)\n+AC_SUBST(MOC_DEFS)\n+AC_SUBST(QT_INCLUDES)\n+AC_SUBST(QT_TEST_LIBS)\n+AC_SUBST(QT_LIBS)\n+AC_SUBST(QT_DBUS_LIBS)\n+AC_SUBST(QT_DBUS_INCLUDES)\n+AC_SUBST(QT_TEST_INCLUDES)\n+AC_SUBST(TESTDEFS)\n+AC_SUBST(LEVELDB_TARGET_FLAGS)\n+AC_SUBST(BUILD_QT)\n+AC_SUBST(BUILD_TEST)\n+AC_SUBST(BUILD_TEST_QT)\n+AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile])\n+AC_OUTPUT"
      },
      {
        "sha": "f93f1ba816dae3b566e900573a3e1558f324dd4e",
        "filename": "src/Makefile.am",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,64 @@\n+AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n+  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src/leveldb/helpers \\\n+  $(BOOST_INCLUDES)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+\n+noinst_LIBRARIES = libbitcoin.a\n+\n+bin_PROGRAMS = bitcoind\n+\n+SUBDIRS = . $(BUILD_QT) $(BUILD_TEST)\n+DIST_SUBDIRS = . qt test\n+.PHONY: FORCE\n+# bitcoin core #\n+BITCOIN_CORE_H = addrman.h alert.h allocators.h base58.h bignum.h \\\n+  bitcoinrpc.h bloom.h checkpoints.h checkqueue.h clientversion.h compat.h \\\n+  crypter.h db.h hash.h init.h key.h keystore.h leveldb.h limitedmap.h main.h \\\n+  mruset.h netbase.h net.h protocol.h script.h serialize.h sync.h \\\n+  threadsafety.h txdb.h ui_interface.h uint256.h util.h version.h walletdb.h \\\n+  core.h wallet.h chainparams.h core.h\n+\n+JSON_H = json/json_spirit.h json/json_spirit_error_position.h \\\n+  json/json_spirit_reader.h json/json_spirit_reader_template.h \\\n+  json/json_spirit_stream_reader.h json/json_spirit_utils.h \\\n+  json/json_spirit_value.h json/json_spirit_writer.h \\\n+  json/json_spirit_writer_template.h\n+\n+obj/build.h: FORCE\n+\t@$(MKDIR_P) $(abs_top_builddir)/src/obj\n+\t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n+\t  $(abs_top_srcdir)\n+version.cpp: obj/build.h\n+\n+libbitcoin_a_SOURCES = alert.cpp version.cpp checkpoints.cpp netbase.cpp \\\n+  addrman.cpp crypter.cpp key.cpp db.cpp init.cpp keystore.cpp main.cpp \\\n+  net.cpp protocol.cpp bitcoinrpc.cpp rpcdump.cpp rpcnet.cpp rpcmining.cpp \\\n+  rpcwallet.cpp rpcblockchain.cpp rpcrawtransaction.cpp script.cpp sync.cpp \\\n+  util.cpp wallet.cpp walletdb.cpp hash.cpp bloom.cpp noui.cpp leveldb.cpp \\\n+  txdb.cpp chainparams.cpp core.cpp $(BITCOIN_CORE_H) $(JSON_H)\n+nodist_libbitcoin_a_SOURCES = $(top_srcdir)/src/obj/build.h\n+#\n+\n+# bitcoind binary #\n+bitcoind_LDADD = libbitcoin.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n+  $(BOOST_LIBS)\n+bitcoind_SOURCES = bitcoind.cpp\n+#\n+\n+leveldb/libleveldb.a:\n+\t@echo \"Building LevelDB ...\" && cd leveldb && CXX=$(CXX) CC=$(CC) \\\n+\t  PLATFORM=$(TARGET_OS) AR=$(AR) $(MAKE) $(LEVELDB_TARGET_FLAGS) OPT=\"$(CXXFLAGS) $(CPPFLAGS)\" libleveldb.a\n+\n+leveldb/libmemenv.a:\n+\t@echo \"Building LevelDB ...\" && cd leveldb && CXX=$(CXX) CC=$(CC) \\\n+\t  PLATFORM=$(TARGET_OS) AR=$(AR) $(MAKE) $(LEVELDB_TARGET_FLAGS) OPT=\"$(CXXFLAGS) $(CPPFLAGS)\" libmemenv.a\n+\n+CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a\n+\n+DISTCLEANFILES = obj/build.h\n+\n+EXTRA_DIST = leveldb Makefile.include\n+\n+clean-local:\n+\t-$(MAKE) -C leveldb clean\n+"
      },
      {
        "sha": "25e901af15eaf458af77bf19c8aecd454e7683be",
        "filename": "src/Makefile.include",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,32 @@\n+.PHONY: FORCE\n+\n+LIBBITCOIN=$(top_builddir)/src/libbitcoin.a\n+LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a\n+LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a\n+LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n+\n+$(LIBBITCOIN):\n+\t$(MAKE) -C $(top_builddir)/src $(@F)\n+\n+$(LIBLEVELDB) $(LIBMEMENV):\n+\t$(MAKE) -C $(top_builddir)/src leveldb/$(@F)\n+\n+$(LIBBITCOINQT):\n+\t$(MAKE) -C $(top_builddir)/src/qt $(@F)\n+\n+.mm.o:\n+\t$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n+\n+ui_%.h: %.ui\n+\t@test -f $(UIC) && $(UIC) -o $@ $< || echo error: could not build $@\n+\n+%.moc: %.cpp\n+\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\n+moc_%.cpp: %.h\n+\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\n+%.qm: %.ts\n+\t@test -f $(LRELEASE) && $(LRELEASE) $< $@ || \\\n+\t  echo error: could not build $@"
      },
      {
        "sha": "54a2a1bee74e97f9c20eae32667dc6cf66c05bdd",
        "filename": "src/m4/ax_boost_base.m4",
        "status": "added",
        "additions": 258,
        "deletions": 0,
        "changes": 258,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_base.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,258 @@\n+# ===========================================================================\n+#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# DESCRIPTION\n+#\n+#   Test for the Boost C++ libraries of a particular version (or newer)\n+#\n+#   If no path to the installed boost library is given the macro searchs\n+#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   $BOOST_ROOT environment variable. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Peter Adolphs\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_BASE],\n+[\n+AC_ARG_WITH([boost],\n+  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n+    [use Boost library from a standard location (ARG=yes),\n+     from the specified location (ARG=<path>),\n+     or disable it (ARG=no)\n+     @<:@ARG=yes@:>@ ])],\n+    [\n+    if test \"$withval\" = \"no\"; then\n+        want_boost=\"no\"\n+    elif test \"$withval\" = \"yes\"; then\n+        want_boost=\"yes\"\n+        ac_boost_path=\"\"\n+    else\n+        want_boost=\"yes\"\n+        ac_boost_path=\"$withval\"\n+    fi\n+    ],\n+    [want_boost=\"yes\"])\n+\n+\n+AC_ARG_WITH([boost-libdir],\n+        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n+        [\n+        if test -d \"$withval\"\n+        then\n+                ac_boost_lib_path=\"$withval\"\n+        else\n+                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n+        fi\n+        ],\n+        [ac_boost_lib_path=\"\"]\n+)\n+\n+if test \"x$want_boost\" = \"xyes\"; then\n+    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n+    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n+    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n+        boost_lib_version_req_sub_minor=\"0\"\n+        fi\n+    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n+    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n+    succeeded=no\n+\n+    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n+    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n+    dnl this (as it rises problems for generic multi-arch support).\n+    dnl The last entry in the list is chosen by default when no libraries\n+    dnl are found, e.g. when only header-only libraries are installed!\n+    libsubdirs=\"lib\"\n+    ax_arch=`uname -m`\n+    if test $ax_arch = x86_64 -o $ax_arch = ppc64 -o $ax_arch = s390x -o $ax_arch = sparc64; then\n+        libsubdirs=\"lib64 lib lib64\"\n+    fi\n+\n+    dnl first we check the system location for boost libraries\n+    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl or if you install boost with RPM\n+    if test \"$ac_boost_path\" != \"\"; then\n+        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n+        for ac_boost_path_tmp in $libsubdirs; do\n+                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n+                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n+                        break\n+                fi\n+        done\n+    elif test \"$cross_compiling\" != yes; then\n+        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n+                break;\n+            fi\n+        done\n+    fi\n+\n+    dnl overwrite ld flags if we have required special directory with\n+    dnl --with-boost-libdir parameter\n+    if test \"$ac_boost_lib_path\" != \"\"; then\n+       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n+    fi\n+\n+    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    export CPPFLAGS\n+\n+    LDFLAGS_SAVED=\"$LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+    export LDFLAGS\n+\n+    AC_REQUIRE([AC_PROG_CXX])\n+    AC_LANG_PUSH(C++)\n+        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    @%:@include <boost/version.hpp>\n+    ]], [[\n+    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+    // Everything is okay\n+    #else\n+    #  error Boost version is too old\n+    #endif\n+    ]])],[\n+        AC_MSG_RESULT(yes)\n+    succeeded=yes\n+    found_system=yes\n+        ],[\n+        ])\n+    AC_LANG_POP([C++])\n+\n+\n+\n+    dnl if we found no boost with system layout we search for boost libraries\n+    dnl built and installed without the --layout=system option or for a staged(not installed) version\n+    if test \"x$succeeded\" != \"xyes\"; then\n+        _version=0\n+        if test \"$ac_boost_path\" != \"\"; then\n+            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                    V_CHECK=`expr $_version_tmp \\> $_version`\n+                    if test \"$V_CHECK\" = \"1\" ; then\n+                        _version=$_version_tmp\n+                    fi\n+                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                done\n+            fi\n+        else\n+            if test \"$cross_compiling\" != yes; then\n+                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                            V_CHECK=`expr $_version_tmp \\> $_version`\n+                            if test \"$V_CHECK\" = \"1\" ; then\n+                                _version=$_version_tmp\n+                                best_path=$ac_boost_path\n+                            fi\n+                        done\n+                    fi\n+                done\n+\n+                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n+                if test \"$ac_boost_lib_path\" = \"\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n+                fi\n+            fi\n+\n+            if test \"x$BOOST_ROOT\" != \"x\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n+                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n+                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n+                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n+                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n+                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n+                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n+                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n+                    fi\n+                fi\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_LANG_PUSH(C++)\n+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        @%:@include <boost/version.hpp>\n+        ]], [[\n+        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+        // Everything is okay\n+        #else\n+        #  error Boost version is too old\n+        #endif\n+        ]])],[\n+            AC_MSG_RESULT(yes)\n+        succeeded=yes\n+        found_system=yes\n+            ],[\n+            ])\n+        AC_LANG_POP([C++])\n+    fi\n+\n+    if test \"$succeeded\" != \"yes\" ; then\n+        if test \"$_version\" = \"0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+        else\n+            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n+        fi\n+        # execute ACTION-IF-NOT-FOUND (if present):\n+        ifelse([$3], , :, [$3])\n+    else\n+        AC_SUBST(BOOST_CPPFLAGS)\n+        AC_SUBST(BOOST_LDFLAGS)\n+        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n+        # execute ACTION-IF-FOUND (if present):\n+        ifelse([$2], , :, [$2])\n+    fi\n+\n+    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+    LDFLAGS=\"$LDFLAGS_SAVED\"\n+fi\n+\n+])"
      },
      {
        "sha": "9b3958ec74d2c32a02a0d32b7b23cba46e9fc383",
        "filename": "src/m4/ax_boost_chrono.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_chrono.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_CHRONO\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CHRONO_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_CHRONO\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 1\n+\n+AC_DEFUN([AX_BOOST_CHRONO],\n+[\n+\tAC_ARG_WITH([boost-chrono],\n+\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n+                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_chrono_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_chrono_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n+\t\t\t\t\t   ax_cv_boost_chrono,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n+                                   [[boost::chrono::system_clock::time_point time;]])],\n+                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_chrono\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                   [link_chrono=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "2a62da8d89f9e284edbe4f00a0988cc984dce23d",
        "filename": "src/m4/ax_boost_filesystem.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_filesystem.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_FILESYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for Filesystem library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_FILESYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 21\n+\n+AC_DEFUN([AX_BOOST_FILESYSTEM],\n+[\n+\tAC_ARG_WITH([boost-filesystem],\n+\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n+                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_filesystem_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_filesystem_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+\t\tLIBS_SAVED=$LIBS\n+\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n+\t\texport LIBS\n+\n+        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n+\t\t\t\t\t   ax_cv_boost_filesystem,\n+        [AC_LANG_PUSH([C++])\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n+                                   [[using namespace boost::filesystem;\n+                                   path my_path( \"foo/bar/data.txt\" );\n+                                   return 0;]])],\n+\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_filesystem*.so* $BOOSTLIBDIR/libboost_filesystem*.dylib* $BOOSTLIBDIR/libboost_filesystem*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_filesystem.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_filesystem.*\\)\\.a*$;\\1;' -e 's;^lib\\(boost_filesystem.*\\)\\.dylib$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_filesystem*.{dll,a}* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_filesystem.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_filesystem.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+\t\t    fi\n+            else\n+               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                   [link_filesystem=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\t\tLIBS=\"$LIBS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "d612f91da36a2d55f8676f958cb46397c4509135",
        "filename": "src/m4/ax_boost_program_options.m4",
        "status": "added",
        "additions": 108,
        "deletions": 0,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_program_options.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,108 @@\n+# ============================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n+# ============================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROGRAM_OPTIONS\n+#\n+# DESCRIPTION\n+#\n+#   Test for program options library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROGRAM_OPTIONS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n+[\n+\tAC_ARG_WITH([boost-program-options],\n+\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n+                       [use the program options library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_program_options_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_program_options_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t    export want_boost\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n+\t\t\t\t\t   ax_cv_boost_program_options,\n+\t\t\t\t\t   [AC_LANG_PUSH(C++)\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+                                                          ]],\n+                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                   return 0;]])],\n+                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n+\t\t\t\t\tAC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n+\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n+                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                fi\n+                else\n+                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n+                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                   [link_program_options=\"no\"])\n+                  done\n+                fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n+\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n+\t\t\t\tfi\n+\t\tfi\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "7fbf6d360d7f2ab8e9811ce0cfb6d40cef64ed17",
        "filename": "src/m4/ax_boost_system.m4",
        "status": "added",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_system.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,120 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_SYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_SYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_SYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 14\n+\n+AC_DEFUN([AX_BOOST_SYSTEM],\n+[\n+\tAC_ARG_WITH([boost-system],\n+\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n+                   [use the System library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_system_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_system_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::System library is available,\n+\t\t\t\t\t   ax_cv_boost_system,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n+                                   [[boost::system::system_category]])],\n+                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_system*.so* $BOOSTLIBDIR/libboost_system*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_system.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_system.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_system\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_system*.{dll,a}* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_system.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_system.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                   [link_system=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_system\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "d9cd8a1d1d4bf04e121976a9989dccf4b5c88a38",
        "filename": "src/m4/ax_boost_thread.m4",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_thread.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,153 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_THREAD\n+#\n+# DESCRIPTION\n+#\n+#   Test for Thread library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_THREAD_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_THREAD\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+AC_DEFUN([AX_BOOST_THREAD],\n+[\n+\tAC_ARG_WITH([boost-thread],\n+\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_thread_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n+\t\t\t\t\t   ax_cv_boost_thread,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t # let us handle platform dependent issues in\n+\t\t\t # configure.ac\n+\n+\t\t\t # if test \"x$build_os\" = \"xsolaris\" ; then\n+\t\t\t # \t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+\t\t\t # elif test \"x$build_os\" = \"xming32\" ; then\n+\t\t\t # \t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+\t\t\t # else\n+\t\t\t # \tCXXFLAGS=\"-pthread $CXXFLAGS\"\n+\t\t\t # fi\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n+                                   [[boost::thread_group thrds;\n+                                   return 0;]])],\n+                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+           # if test \"x$build_os\" = \"xsolaris\" ; then\n+\t   # \t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+\t   # \t   elif test \"x$build_os\" = \"xming32\" ; then\n+\t   # \t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+\t   # \t   else\n+\t   # \t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+\t   # \t   fi\n+\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+                        # case \"x$build_os\" in\n+                        #   *bsd* )\n+                        #        LDFLAGS=\"-pthread $LDFLAGS\"\n+                        #   break;\n+                        #   ;;\n+                        # esac\n+            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_thread*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_thread.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_thread.*\\)\\.a*$;\\1;'`; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_thread\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_thread*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_thread.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_thread.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                   [link_thread=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\t# if test \"x$link_thread\" = \"xno\"; then\n+\t\t\t# \tAC_MSG_ERROR(Could not link against $ax_lib !)\n+                        # else\n+                        #    case \"x$build_os\" in\n+                        #       *bsd* )\n+\t\t\t# \tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        #       break;\n+                        #       ;;\n+                        #    esac\n+\n+\t\t\t# fi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "1115f551212ae50807a3ae7aefe9477418a0103e",
        "filename": "src/m4/ax_boost_unit_test_framework.m4",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_unit_test_framework.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,137 @@\n+# ================================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# ================================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# DESCRIPTION\n+#\n+#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n+#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n+#   is available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 19\n+\n+AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n+[\n+\tAC_ARG_WITH([boost-unit-test-framework],\n+\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n+                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_unit_test_framework_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n+\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n+                                    [[using boost::unit_test::test_suite;\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n+                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n+                    if test -r $monitor_library ; then\n+                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t  break\n+\t\t\t\t    fi\n+                done\n+                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n+                                 [link_unit_test_framework=\"no\"])\n+\t\t\t\tdone\n+                fi\n+            else\n+                link_unit_test_framework=\"no\"\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n+                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      break;\n+                   fi\n+                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n+                   if test -r $unittest_library ; then\n+                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t    break\n+\t\t\t\t    fi\n+                  done\n+               done\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "c3a8d695a1bcda95fd91cb6d8c03a94cdcb5b9c7",
        "filename": "src/m4/ax_check_compile_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_compile_flag.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's compiler\n+#   or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the current language's default\n+#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n+#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n+#   force the compiler to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n+  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "e2d0d363e4c4ac672d36a2c964973136d007be73",
        "filename": "src/m4/ax_check_link_flag.m4",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_link_flag.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,71 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the linker or gives an error.\n+#   (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n+#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n+#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n+#   issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_LINK_FLAG],\n+[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$LDFLAGS\n+  LDFLAGS=\"$LDFLAGS $4 $1\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  LDFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "b1cfef6b86dd6ed3321fe2b92e215a06cfbdbcdd",
        "filename": "src/m4/ax_check_preproc_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_preproc_flag.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's\n+#   preprocessor or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n+#   flags when the check is done.  The check is thus made with the flags:\n+#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n+#   preprocessor to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$CPPFLAGS\n+  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  CPPFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "6d400ed4e8e29dfc7a650e2ca704a228d0dc61ba",
        "filename": "src/m4/ax_pthread.m4",
        "status": "added",
        "additions": 317,
        "deletions": 0,
        "changes": 317,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_pthread.m4?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,317 @@\n+# ===========================================================================\n+#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out how to build C programs using POSIX threads. It\n+#   sets the PTHREAD_LIBS output variable to the threads library and linker\n+#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n+#   flags that are needed. (The user can also force certain compiler\n+#   flags/libs to be tested by setting these environment variables.)\n+#\n+#   Also sets PTHREAD_CC to any special C compiler that is needed for\n+#   multi-threaded programs (defaults to the value of CC otherwise). (This\n+#   is necessary on AIX to use the special cc_r compiler alias.)\n+#\n+#   NOTE: You are assumed to not only compile your program with these flags,\n+#   but also link it with them as well. e.g. you should link with\n+#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#\n+#   If you are only building threads programs, you may wish to use these\n+#   variables in your default LIBS, CFLAGS, and CC:\n+#\n+#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n+#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CC=\"$PTHREAD_CC\"\n+#\n+#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n+#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n+#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#\n+#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n+#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n+#   PTHREAD_CFLAGS.\n+#\n+#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n+#   is not found. If ACTION-IF-FOUND is not specified, the default action\n+#   will define HAVE_PTHREAD.\n+#\n+#   Please let the authors know if this macro fails on any platform, or if\n+#   you have any other suggestions or comments. This macro was based on work\n+#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n+#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n+#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n+#   grateful for the helpful feedback of numerous users.\n+#\n+#   Updated for Autoconf 2.68 by Daniel Richard G.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n+#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 20\n+\n+AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n+AC_DEFUN([AX_PTHREAD], [\n+AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_LANG_PUSH([C])\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on True64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n+        AC_TRY_LINK_FUNC(pthread_join, ax_pthread_ok=yes)\n+        AC_MSG_RESULT($ax_pthread_ok)\n+        if test x\"$ax_pthread_ok\" = xno; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try.  Items starting with a \"-\" are\n+# C compiler flags, and other items are library names, except for \"none\"\n+# which indicates that we try without any flags at all, and \"pthread-config\"\n+# which is a program returning the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n+# -pthreads: Solaris/gcc\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads too;\n+#      also defines -D_REENTRANT)\n+#      ... -mt is also the pthreads flag for HP/aCC\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case ${host_os} in\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n+        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n+        # a function called by this macro, so we could check for that, but\n+        # who knows whether they'll stub that too in a future libc.)  So,\n+        # we'll just look for -pthreads and -lpthread first:\n+\n+        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n+        ;;\n+\n+        darwin*)\n+        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+if test x\"$ax_pthread_ok\" = xno; then\n+for flag in $ax_pthread_flags; do\n+\n+        case $flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $flag])\n+                PTHREAD_CFLAGS=\"$flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG(ax_pthread_config, pthread-config, yes, no)\n+                if test x\"$ax_pthread_config\" = xno; then continue; fi\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$flag])\n+                PTHREAD_LIBS=\"-l$flag\"\n+                ;;\n+        esac\n+\n+        save_LIBS=\"$LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+                        static void routine(void *a) { a = 0; }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+                [ax_pthread_ok=yes],\n+                [])\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        AC_MSG_RESULT($ax_pthread_ok)\n+        if test \"x$ax_pthread_ok\" = xyes; then\n+                break;\n+        fi\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = xyes; then\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        AC_MSG_CHECKING([for joinable pthread attribute])\n+        attr_name=unknown\n+        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                           [int attr = $attr; return attr /* ; */])],\n+                [attr_name=$attr; break],\n+                [])\n+        done\n+        AC_MSG_RESULT($attr_name)\n+        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n+            AC_DEFINE_UNQUOTED(PTHREAD_CREATE_JOINABLE, $attr_name,\n+                               [Define to necessary symbol if this constant\n+                                uses a non-standard name on your system.])\n+        fi\n+\n+        AC_MSG_CHECKING([if more special flags are required for pthreads])\n+        flag=no\n+        case ${host_os} in\n+            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n+            osf* | hpux*) flag=\"-D_REENTRANT\";;\n+            solaris*)\n+            if test \"$GCC\" = \"yes\"; then\n+                flag=\"-D_REENTRANT\"\n+            else\n+                flag=\"-mt -D_REENTRANT\"\n+            fi\n+            ;;\n+        esac\n+        AC_MSG_RESULT(${flag})\n+        if test \"x$flag\" != xno; then\n+            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n+        fi\n+\n+        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n+            ax_cv_PTHREAD_PRIO_INHERIT, [\n+                AC_LINK_IFELSE([\n+                    AC_LANG_PROGRAM([[#include <pthread.h>]], [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n+            AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], 1, [Have PTHREAD_PRIO_INHERIT.]))\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != xyes; then\n+            case $host_os in\n+                aix*)\n+                AS_CASE([\"x/$CC\"],\n+                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                  [#handle absolute path differently from PATH based program lookup\n+                   AS_CASE([\"x$CC\"],\n+                     [x/*],\n+                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+AC_SUBST(PTHREAD_LIBS)\n+AC_SUBST(PTHREAD_CFLAGS)\n+AC_SUBST(PTHREAD_CC)\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test x\"$ax_pthread_ok\" = xyes; then\n+        ifelse([$1],,AC_DEFINE(HAVE_PTHREAD,1,[Define if you have POSIX threads libraries and header files.]),[$1])\n+        :\n+else\n+        ax_pthread_ok=no\n+        $2\n+fi\n+AC_LANG_POP\n+])dnl AX_PTHREAD"
      },
      {
        "sha": "b79b562b4099235a8e5ab129d99c2e89293082f2",
        "filename": "src/qt/Makefile.am",
        "status": "added",
        "additions": 134,
        "deletions": 0,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,134 @@\n+include $(top_srcdir)/src/Makefile.include\n+\n+AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n+  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src \\\n+  -I$(top_srcdir)/src/leveldb/helpers -I$(builddir)/src/qt $(BOOST_INCLUDES)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+bin_PROGRAMS = bitcoin-qt\n+noinst_LIBRARIES = libbitcoinqt.a\n+SUBDIRS = $(BUILD_TEST_QT)\n+DIST_SUBDIRS = test\n+\n+# bitcoin qt core #\n+QT_TS = locale/bitcoin_af_ZA.ts locale/bitcoin_ar.ts locale/bitcoin_bg.ts \\\n+  locale/bitcoin_bs.ts locale/bitcoin_ca_ES.ts locale/bitcoin_ca.ts \\\n+  locale/bitcoin_cs.ts locale/bitcoin_cy.ts locale/bitcoin_da.ts \\\n+  locale/bitcoin_de.ts locale/bitcoin_el_GR.ts locale/bitcoin_en.ts \\\n+  locale/bitcoin_eo.ts locale/bitcoin_es_CL.ts locale/bitcoin_es.ts \\\n+  locale/bitcoin_et.ts locale/bitcoin_eu_ES.ts locale/bitcoin_fa_IR.ts \\\n+  locale/bitcoin_fa.ts locale/bitcoin_fi.ts locale/bitcoin_fr_CA.ts \\\n+  locale/bitcoin_fr.ts locale/bitcoin_gu_IN.ts locale/bitcoin_he.ts \\\n+  locale/bitcoin_hi_IN.ts locale/bitcoin_hr.ts locale/bitcoin_hu.ts \\\n+  locale/bitcoin_it.ts locale/bitcoin_ja.ts locale/bitcoin_la.ts \\\n+  locale/bitcoin_lt.ts locale/bitcoin_lv_LV.ts locale/bitcoin_nb.ts \\\n+  locale/bitcoin_nl.ts locale/bitcoin_pl.ts locale/bitcoin_pt_BR.ts \\\n+  locale/bitcoin_pt_PT.ts locale/bitcoin_ro_RO.ts locale/bitcoin_ru.ts \\\n+  locale/bitcoin_sk.ts locale/bitcoin_sr.ts locale/bitcoin_sv.ts \\\n+  locale/bitcoin_th_TH.ts locale/bitcoin_tr.ts locale/bitcoin_uk.ts \\\n+  locale/bitcoin_zh_CN.ts locale/bitcoin_zh_TW.ts\n+\n+QT_QM = locale/bitcoin_af_ZA.qm locale/bitcoin_ar.qm locale/bitcoin_bg.qm \\\n+  locale/bitcoin_bs.qm locale/bitcoin_ca_ES.qm locale/bitcoin_ca.qm \\\n+  locale/bitcoin_cs.qm locale/bitcoin_cy.qm locale/bitcoin_da.qm \\\n+  locale/bitcoin_de.qm locale/bitcoin_el_GR.qm locale/bitcoin_en.qm \\\n+  locale/bitcoin_eo.qm locale/bitcoin_es_CL.qm locale/bitcoin_es.qm \\\n+  locale/bitcoin_et.qm locale/bitcoin_eu_ES.qm locale/bitcoin_fa_IR.qm \\\n+  locale/bitcoin_fa.qm locale/bitcoin_fi.qm locale/bitcoin_fr_CA.qm \\\n+  locale/bitcoin_fr.qm locale/bitcoin_gu_IN.qm locale/bitcoin_he.qm \\\n+  locale/bitcoin_hi_IN.qm locale/bitcoin_hr.qm locale/bitcoin_hu.qm \\\n+  locale/bitcoin_it.qm locale/bitcoin_ja.qm locale/bitcoin_la.qm \\\n+  locale/bitcoin_lt.qm locale/bitcoin_lv_LV.qm locale/bitcoin_nb.qm \\\n+  locale/bitcoin_nl.qm locale/bitcoin_pl.qm locale/bitcoin_pt_BR.qm \\\n+  locale/bitcoin_pt_PT.qm locale/bitcoin_ro_RO.qm locale/bitcoin_ru.qm \\\n+  locale/bitcoin_sk.qm locale/bitcoin_sr.qm locale/bitcoin_sv.qm \\\n+  locale/bitcoin_th_TH.qm locale/bitcoin_tr.qm locale/bitcoin_uk.qm \\\n+  locale/bitcoin_zh_CN.qm locale/bitcoin_zh_TW.qm\n+\n+QT_FORMS_UI = forms/aboutdialog.ui forms/addressbookpage.ui \\\n+  forms/askpassphrasedialog.ui forms/editaddressdialog.ui \\\n+  forms/optionsdialog.ui forms/overviewpage.ui \\\n+  forms/qrcodedialog.ui forms/rpcconsole.ui forms/sendcoinsdialog.ui \\\n+  forms/sendcoinsentry.ui forms/signverifymessagedialog.ui \\\n+  forms/transactiondescdialog.ui\n+\n+QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \\\n+  moc_addresstablemodel.cpp moc_askpassphrasedialog.cpp \\\n+  moc_bitcoinaddressvalidator.cpp moc_bitcoinamountfield.cpp \\\n+  moc_bitcoingui.cpp moc_bitcoinunits.cpp moc_clientmodel.cpp \\\n+  moc_csvmodelwriter.cpp moc_editaddressdialog.cpp moc_guiutil.cpp \\\n+  moc_monitoreddatamapper.cpp moc_notificator.cpp moc_optionsdialog.cpp \\\n+  moc_optionsmodel.cpp moc_paymentserver.cpp moc_qrcodedialog.cpp \\\n+  moc_qvalidatedlineedit.cpp moc_qvaluecombobox.cpp moc_sendcoinsdialog.cpp \\\n+  moc_sendcoinsentry.cpp moc_signverifymessagedialog.cpp moc_splashscreen.cpp \\\n+  moc_transactiondesc.cpp moc_transactiondescdialog.cpp \\\n+  moc_transactionfilterproxy.cpp moc_transactiontablemodel.cpp \\\n+  moc_transactionview.cpp moc_walletframe.cpp moc_walletmodel.cpp \\\n+  moc_walletstack.cpp moc_walletview.cpp moc_rpcconsole.cpp \\\n+  moc_overviewpage.cpp moc_macdockiconhandler.cpp \\\n+  moc_macnotificationhandler.cpp\n+\n+QT_MOC = overviewpage.moc rpcconsole.moc\n+\n+QT_QRC_CPP = qrc_bitcoin.cpp\n+QT_QRC = bitcoin.qrc\n+\n+QT_FORMS_H = forms/ui_aboutdialog.h forms/ui_askpassphrasedialog.h \\\n+  forms/ui_optionsdialog.h forms/ui_sendcoinsentry.h \\\n+  forms/ui_transactiondescdialog.h forms/ui_addressbookpage.h \\\n+  forms/ui_editaddressdialog.h forms/ui_overviewpage.h \\\n+  forms/ui_qrcodedialog.h forms/ui_rpcconsole.h forms/ui_sendcoinsdialog.h \\\n+  forms/ui_signverifymessagedialog.h\n+\n+BITCOIN_QT_H  = aboutdialog.h addressbookpage.h addresstablemodel.h \\\n+  askpassphrasedialog.h bitcoinaddressvalidator.h bitcoinamountfield.h \\\n+  bitcoingui.h bitcoinunits.h clientmodel.h csvmodelwriter.h \\\n+  editaddressdialog.h guiconstants.h guiutil.h macdockiconhandler.h \\\n+  macnotificationhandler.h monitoreddatamapper.h notificator.h optionsdialog.h \\\n+  optionsmodel.h overviewpage.h paymentserver.h qrcodedialog.h \\\n+  qvalidatedlineedit.h qvaluecombobox.h rpcconsole.h sendcoinsdialog.h \\\n+  sendcoinsentry.h signverifymessagedialog.h splashscreen.h transactiondesc.h \\\n+  transactiondescdialog.h transactionfilterproxy.h transactionrecord.h \\\n+  transactiontablemodel.h transactionview.h walletframe.h walletmodel.h \\\n+  walletstack.h walletview.h\n+\n+libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n+  -I$(top_srcdir)/src/qt/forms $(QT_DBUS_INCLUDES)\n+libbitcoinqt_a_SOURCES = aboutdialog.cpp addressbookpage.cpp \\\n+  addresstablemodel.cpp askpassphrasedialog.cpp bitcoinaddressvalidator.cpp \\\n+  bitcoinamountfield.cpp bitcoingui.cpp bitcoinstrings.cpp bitcoinunits.cpp \\\n+  clientmodel.cpp csvmodelwriter.cpp editaddressdialog.cpp guiutil.cpp \\\n+  monitoreddatamapper.cpp notificator.cpp optionsdialog.cpp optionsmodel.cpp \\\n+  overviewpage.cpp paymentserver.cpp qrc_bitcoin.cpp qvalidatedlineedit.cpp \\\n+  qvaluecombobox.cpp rpcconsole.cpp sendcoinsdialog.cpp sendcoinsentry.cpp \\\n+  signverifymessagedialog.cpp splashscreen.cpp transactiondesc.cpp \\\n+  transactiondescdialog.cpp transactionfilterproxy.cpp transactionrecord.cpp \\\n+  transactiontablemodel.cpp transactionview.cpp walletframe.cpp \\\n+  walletmodel.cpp walletstack.cpp walletview.cpp $(QT_FORMS_H) $(QT_QM) \\\n+  $(QT_QRC_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) $(QT_QRC) $(QT_TS)\n+\n+nodist_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC)\n+\n+BUILT_SOURCES = $(QT_FORMS_H) $(QT_MOC_CPP) $(QT_QRC_CPP) $(QT_QM) $(QT_MOC)\n+\n+if TARGET_DARWIN\n+  libbitcoinqt_a_SOURCES += macdockiconhandler.mm macnotificationhandler.mm\n+endif\n+if USE_QRCODE\n+  libbitcoinqt_a_SOURCES += qrcodedialog.cpp\n+endif\n+#\n+\n+# bitcoin-qt binary #\n+bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n+  -I$(top_srcdir)/src/qt/forms\n+bitcoin_qt_SOURCES = bitcoin.cpp\n+bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN) $(LIBLEVELDB) $(LIBMEMENV) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS)\n+$(QT_QRC_CPP): $(QT_QRC) $(QT_QM)\n+\t@test -f $(RCC) && $(RCC) -name bitcoin -o $@ $< || \\\n+\t  echo error: could not build $@\n+\n+CLEANFILES = $(BUILT_SOURCES)\n+\n+EXTRA_DIST = res\n+"
      },
      {
        "sha": "563f228fc3850dfe666306c7cb0eb647397a60db",
        "filename": "src/qt/test/Makefile.am",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,23 @@\n+include $(top_srcdir)/src/Makefile.include\n+\n+AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n+  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src \\\n+  -I$(top_srcdir)/src/leveldb/helpers -I$(builddir)/src/qt $(BOOST_INCLUDES)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+bin_PROGRAMS = test_bitcoin-qt\n+TESTS = test_bitcoin-qt\n+\n+TEST_QT_MOC_CPP = moc_uritests.cpp\n+\n+TEST_QT_H = uritests.h\n+\n+BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n+\n+test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n+test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp $(TEST_QT_H)\n+nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN) $(LIBLEVELDB) \\\n+  $(LIBMEMENV) $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS)\n+\n+CLEANFILES = $(BUILT_SOURCES)\n+"
      },
      {
        "sha": "fe43d0f44d3be1accc27ebf5d85187e1334817a3",
        "filename": "src/test/Makefile.am",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a877f183e3af0a199356fc53b2de197bc6c6d15c/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "patch": "@@ -0,0 +1,37 @@\n+include $(top_srcdir)/src/Makefile.include\n+\n+AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n+  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src/leveldb/helpers \\\n+  -I$(top_srcdir)/src $(BOOST_INCLUDES)\n+\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+\n+bin_PROGRAMS = test_bitcoin\n+\n+TESTS = test_bitcoin\n+\n+TEST_DATA_DIR=$(top_srcdir)/src/test/data\n+\n+TEST_DATA_FILES= $(TEST_DATA_DIR)/script_valid.json \\\n+  $(TEST_DATA_DIR)/base58_keys_valid.json $(TEST_DATA_DIR)/sig_canonical.json \\\n+  $(TEST_DATA_DIR)/sig_noncanonical.json \\\n+  $(TEST_DATA_DIR)/base58_encode_decode.json $(TEST_DATA_DIR)/alertTests \\\n+  $(TEST_DATA_DIR)/base58_keys_invalid.json \\\n+  $(TEST_DATA_DIR)/script_invalid.json $(TEST_DATA_DIR)/tx_invalid.json \\\n+  $(TEST_DATA_DIR)/tx_valid.json\n+\n+# test_bitcoin binary #\n+test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS) \\\n+  -DTEST_DATA_DIR=$(TEST_DATA_DIR)\n+test_bitcoin_LDADD = $(LIBBITCOIN) $(LIBLEVELDB) $(LIBMEMENV) \\\n+  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+test_bitcoin_SOURCES = accounting_tests.cpp alert_tests.cpp \\\n+  allocator_tests.cpp base32_tests.cpp base58_tests.cpp base64_tests.cpp \\\n+  bignum_tests.cpp bloom_tests.cpp canonical_tests.cpp checkblock_tests.cpp \\\n+  Checkpoints_tests.cpp compress_tests.cpp DoS_tests.cpp getarg_tests.cpp \\\n+  key_tests.cpp miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n+  netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp script_P2SH_tests.cpp \\\n+  script_tests.cpp serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \\\n+  transaction_tests.cpp uint160_tests.cpp uint256_tests.cpp util_tests.cpp \\\n+  wallet_tests.cpp $(TEST_DATA_FILES)\n+"
      }
    ]
  },
  {
    "sha": "ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzQ0YjU1YjRiYmVmNjIwMGI2MjEzMjI1ZjliZTJmYzdjMGU5Yjdj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-30T21:26:39Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-01T04:51:15Z"
      },
      "message": "autotools: update gitian descriptors",
      "tree": {
        "sha": "e0a6dd77545fd40ce6739ed55595051b621d4b0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0a6dd77545fd40ce6739ed55595051b621d4b0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a877f183e3af0a199356fc53b2de197bc6c6d15c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a877f183e3af0a199356fc53b2de197bc6c6d15c"
      }
    ],
    "stats": {
      "total": 117,
      "additions": 53,
      "deletions": 64
    },
    "files": [
      {
        "sha": "b31a49760bcda840ee0a6e86bb3776b531f978d4",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "modified",
        "additions": 7,
        "deletions": 12,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
        "patch": "@@ -13,8 +13,8 @@ remotes: []\n files:\n - \"boost_1_50_0.tar.bz2\"\n script: |\n-  TMPDIR=\"$HOME/tmpdir\"\n-  mkdir -p $TMPDIR/bin/$GBUILD_BITS $TMPDIR/include\n+  INSTALLPREFIX=\"$OUTDIR/staging/boost\"\n+  mkdir -p \"$INSTALLPREFIX\"\n   tar xjf boost_1_50_0.tar.bz2\n   cd boost_1_50_0\n   echo \"using gcc : 4.4 : i586-mingw32msvc-g++\n@@ -24,15 +24,10 @@ script: |\n         <cxxflags>-frandom-seed=boost1\n   ;\" > user-config.jam\n   ./bootstrap.sh --without-icu\n-  ./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete $MAKEOPTS stage\n-  for lib in chrono date_time exception filesystem graph iostreams math_c99f math_c99l math_c99 math_tr1f math_tr1l math_tr1 prg_exec_monitor program_options random regex serialization signals system test_exec_monitor thread_win32 unit_test_framework wave wserialization; do\n-      mkdir $lib\n-      (cd $lib ; ar xf ../stage/lib/libboost_${lib}-mt-s.a)\n-      mv $lib $TMPDIR/bin/$GBUILD_BITS\n-  done\n-  cp -a boost $TMPDIR/include\n-  cd $TMPDIR\n+  ./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete --prefix=\"$INSTALLPREFIX\" $MAKEOPTS install\n+\n+  cd \"$INSTALLPREFIX\"\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n-  zip -r boost-win32-1.50.0-gitian2.zip *\n-  cp boost-win32-1.50.0-gitian2.zip $OUTDIR\n+  zip -r boost-win32-1.50.0-gitian3.zip *\n+  cp boost-win32-1.50.0-gitian3.zip $OUTDIR"
      },
      {
        "sha": "98f69dddf0348b5040a0bc185449780eed832692",
        "filename": "contrib/gitian-descriptors/deps-win32.yml",
        "status": "modified",
        "additions": 24,
        "deletions": 14,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/contrib/gitian-descriptors/deps-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/contrib/gitian-descriptors/deps-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win32.yml?ref=ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
        "patch": "@@ -25,48 +25,58 @@ script: |\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC\n+  export INSTALLPREFIX=$OUTDIR/staging/deps\n+  export HOST=i586-mingw32msvc\n   #\n+  mkdir -p $INSTALLPREFIX\n+\n   tar xzf openssl-1.0.1c.tar.gz\n   cd openssl-1.0.1c\n-  ./Configure --cross-compile-prefix=i586-mingw32msvc- mingw\n+  ./Configure --cross-compile-prefix=$HOST- mingw --openssldir=$INSTALLPREFIX\n   make\n+  make install_sw\n   cd ..\n   #\n   tar xzf db-4.8.30.NC.tar.gz\n   cd db-4.8.30.NC/build_unix\n-  ../dist/configure --enable-mingw --enable-cxx --host=i586-mingw32msvc CFLAGS=\"-I/usr/i586-mingw32msvc/include\"\n-  make $MAKEOPTS\n+  ../dist/configure --prefix=$INSTALLPREFIX --enable-mingw --enable-cxx --host=$HOST\n+  make $MAKEOPTS library_build\n+  make install_lib install_include\n   cd ../..\n   #\n   tar xzf miniupnpc-1.6.tar.gz\n   cd miniupnpc-1.6\n   sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw\n   sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw\n-  make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar\n+  mkdir -p dll\n+  make -f Makefile.mingw DLLWRAP=$HOST-dllwrap CC=$HOST-gcc AR=$HOST-ar libminiupnpc.a\n+  install -d $INSTALLPREFIX/include/miniupnpc\n+  install *.h $INSTALLPREFIX/include/miniupnpc\n+  install libminiupnpc.a  $INSTALLPREFIX/lib\n   cd ..\n-  mv miniupnpc-1.6 miniupnpc\n   #\n   tar xzf zlib-1.2.6.tar.gz\n   cd zlib-1.2.6\n-  make -f win32/Makefile.gcc PREFIX=i586-mingw32msvc- $MAKEOPTS\n+  CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static\n+  make\n+  make install\n   cd ..\n   #\n   tar xzf libpng-1.5.9.tar.gz\n   cd libpng-1.5.9\n-  ./configure -disable-shared CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld LDFLAGS=\"-L../zlib-1.2.6/\" CFLAGS=\"-I../zlib-1.2.6/\"\n+  CFLAGS=\"-I$INSTALLPREFIX/include\" LDFLAGS=\"-L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n   make $MAKEOPTS\n+  make install\n   cd ..\n   #\n   tar xjf qrencode-3.2.0.tar.bz2\n   cd qrencode-3.2.0\n-  ./configure CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld png_LIBS=\"../libpng-1.5.9/.libs/libpng15.a ../zlib-1.2.6/libz.a\" png_CFLAGS=\"-I../libpng-1.5.9\"\n-  make $MAKEOPTS\n+  png_CFLAGS=\"-I$INSTALLPREFIX/include\" png_LIBS=\"-L$INSTALLPREFIX/lib -lpng\" ./configure --prefix=$INSTALLPREFIX --host=i586-mingw32msvc\n+  make\n+  make install\n   cd ..\n   #\n-  zip -r $OUTDIR/bitcoin-deps-0.0.5.zip \\\n-    $(ls qrencode-*/{qrencode.h,.libs/libqrencode.{,l}a} | sort) \\\n-    $(ls db-*/build_unix/{libdb_cxx.a,db.h,db_cxx.h,libdb.a,.libs/libdb_cxx-?.?.a} | sort) \\\n-    $(find openssl-* -name '*.a' -o -name '*.h' | sort) \\\n-    $(find miniupnpc -name '*.h' -o -name 'libminiupnpc.a' | sort)\n+  cd $INSTALLPREFIX\n+  zip -r $OUTDIR/bitcoin-deps-0.0.6.zip include lib\n   # Kill wine processes as gitian won't figure out we are done otherwise\n   killall wineserver services.exe explorer.exe winedevice.exe"
      },
      {
        "sha": "bc28cb4a5b19cda344b590b5de9c638e6f11b545",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 16,
        "deletions": 31,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
        "patch": "@@ -10,38 +10,27 @@ packages:\n - \"unzip\"\n - \"nsis\"\n - \"faketime\"\n+- \"autoconf2.13\"\n+- \"libtool\"\n+- \"automake\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n - \"qt-win32-4.8.3-gitian-r1.zip\"\n-- \"boost-win32-1.50.0-gitian2.zip\"\n-- \"bitcoin-deps-0.0.5.zip\"\n+- \"boost-win32-1.50.0-gitian3.zip\"\n+- \"bitcoin-deps-0.0.6.zip\"\n script: |\n   #\n-  mkdir $HOME/qt\n-  cd $HOME/qt\n+  STAGING=$HOME/staging\n+  mkdir -p $STAGING\n+  cd $STAGING\n   unzip ../build/qt-win32-4.8.3-gitian-r1.zip\n-  cd $HOME/build/\n-  export PATH=$HOME/qt/bin/:$PATH\n-  #\n-  mkdir boost_1_50_0\n-  cd boost_1_50_0\n-  mkdir -p stage/lib\n-  unzip ../boost-win32-1.50.0-gitian2.zip\n-  cd bin/$GBUILD_BITS\n-  for lib in *; do\n-    i586-mingw32msvc-ar rc ../../stage/lib/libboost_${lib}-mt-s.a $lib/*.o\n-    i586-mingw32msvc-ranlib ../../stage/lib/libboost_${lib}-mt-s.a\n-  done\n-  cd ../..\n-  mv include/boost .\n-  cd ..\n-  #\n-  unzip bitcoin-deps-0.0.5.zip\n-  #\n+  unzip ../build/boost-win32-1.50.0-gitian3.zip\n+  unzip ../build/bitcoin-deps-0.0.6.zip\n   find -type f | xargs touch --date=\"$REFERENCE_DATETIME\"\n+  cd $HOME/build/\n   #\n   cd bitcoin\n   mkdir -p $OUTDIR/src\n@@ -51,24 +40,20 @@ script: |\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC\n-  $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_50_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_50_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1c OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1c/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 USE_QRCODE=1 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n-  make $MAKEOPTS\n-  cp release/bitcoin-qt.exe $OUTDIR/\n-  #\n   cd src\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  make -f makefile.linux-mingw $MAKEOPTS DEPSDIR=$HOME/build bitcoind.exe USE_UPNP=0 DEBUGFLAGS=\"-frandom-seed=bitcoin\"\n+  ./autogen.sh\n+  CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" ./configure --prefix=$STAGING --host=i586-mingw32msvc --with-qt-bindir=$STAGING/bin --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-boost=$STAGING --disable-maintainer-mode --disable-dependency-tracking\n+  make $MAKEOPTS\n   i586-mingw32msvc-strip bitcoind.exe\n   mkdir $OUTDIR/daemon\n+  cp bitcoin-qt.exe $OUTDIR/\n   cp bitcoind.exe $OUTDIR/daemon\n   cd ..\n   mkdir nsis\n   git archive HEAD | tar -x -C nsis\n   cd nsis/src\n   mkdir ../release\n-  cp ../../release/* ../release/\n+  cp ../../src/*.exe ../release/\n   cp ../../src/*.exe .\n   makensis ../share/setup.nsi\n   cp ../share/bitcoin-*-win32-setup.exe $OUTDIR/"
      },
      {
        "sha": "74b4b837c305d832f00010f991e4f0c729bda597",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
        "patch": "@@ -18,6 +18,9 @@ packages:\n - \"unzip\"\n - \"pkg-config\"\n - \"libpng12-dev\"\n+- \"autoconf2.13\"\n+- \"libtool\"\n+- \"automake\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n@@ -45,11 +48,7 @@ script: |\n   git archive HEAD | tar -x -C $OUTDIR/src\n   cp $OUTDIR/src/doc/README.md $OUTDIR\n   cp $OUTDIR/src/COPYING $OUTDIR\n-  cd src\n-  make -f makefile.unix STATIC=1 OPENSSL_INCLUDE_PATH=\"$INSTDIR/include\" OPENSSL_LIB_PATH=\"$INSTDIR/lib\" $MAKEOPTS bitcoind USE_UPNP=0 DEBUGFLAGS=\n-  mkdir -p $OUTDIR/bin/$GBUILD_BITS\n-  install -s bitcoind $OUTDIR/bin/$GBUILD_BITS\n-  cd ..\n-  qmake INCLUDEPATH=\"$INSTDIR/include\" LIBS=\"-L$INSTDIR/lib\" RELEASE=1 USE_QRCODE=1\n+  ./autogen.sh\n+  CPPFLAGS=\"-I$INSTDIR/include\" LDFLAGS=\"-L$INSTDIR/lib\" ./configure --prefix=$OUTDIR --disable-maintainer-mode --disable-dependency-tracking\n   make $MAKEOPTS\n-  install bitcoin-qt $OUTDIR/bin/$GBUILD_BITS\n+  make install"
      }
    ]
  },
  {
    "sha": "019637587121c5935cc08214d943caad73f630c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTk2Mzc1ODcxMjFjNTkzNWNjMDgyMTRkOTQzY2FhZDczZjYzMGMx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-04T07:30:47Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-04T07:30:47Z"
      },
      "message": "leveldb: quote CC and CXX so that they can contain whitespace\n\nFor example, CC=\"ccache gcc\" or CXX=\"ccache g++\"",
      "tree": {
        "sha": "008daeafe473ddf69e8a27a3e4ebef1311b19f8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/008daeafe473ddf69e8a27a3e4ebef1311b19f8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/019637587121c5935cc08214d943caad73f630c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/019637587121c5935cc08214d943caad73f630c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/019637587121c5935cc08214d943caad73f630c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/019637587121c5935cc08214d943caad73f630c1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec44b55b4bbef6200b6213225f9be2fc7c0e9b7c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "797c012cca4bb20062b7e4062f4970d8d8a4807f",
        "filename": "src/leveldb/Makefile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/019637587121c5935cc08214d943caad73f630c1/src/leveldb/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/019637587121c5935cc08214d943caad73f630c1/src/leveldb/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/Makefile?ref=019637587121c5935cc08214d943caad73f630c1",
        "patch": "@@ -12,7 +12,7 @@ OPT ?= -O2 -DNDEBUG       # (A) Production use (optimized mode)\n #-----------------------------------------------\n \n # detect what platform we're building on\n-$(shell CC=$(CC) CXX=$(CXX) TARGET_OS=$(TARGET_OS) \\\n+$(shell CC=\"$(CC)\" CXX=\"$(CXX)\" TARGET_OS=$(TARGET_OS) \\\n     ./build_detect_platform build_config.mk ./)\n # this file is generated by the previous line to set build flags and sources\n include build_config.mk"
      }
    ]
  },
  {
    "sha": "b627f2821cb8b675bf5ca0d62937df4bc9db1eb0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjI3ZjI4MjFjYjhiNjc1YmY1Y2EwZDYyOTM3ZGY0YmM5ZGIxZWIw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-04T07:32:36Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-05T20:36:10Z"
      },
      "message": "squash me. autotools: quote vars when passing them to leveldb make",
      "tree": {
        "sha": "f2912aa02bbe084a02943c48a27b87469df065f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2912aa02bbe084a02943c48a27b87469df065f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b627f2821cb8b675bf5ca0d62937df4bc9db1eb0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b627f2821cb8b675bf5ca0d62937df4bc9db1eb0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b627f2821cb8b675bf5ca0d62937df4bc9db1eb0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b627f2821cb8b675bf5ca0d62937df4bc9db1eb0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "019637587121c5935cc08214d943caad73f630c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/019637587121c5935cc08214d943caad73f630c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/019637587121c5935cc08214d943caad73f630c1"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2a04abafff6a62a81bce815b4dda280acb8ea3ce",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b627f2821cb8b675bf5ca0d62937df4bc9db1eb0/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b627f2821cb8b675bf5ca0d62937df4bc9db1eb0/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b627f2821cb8b675bf5ca0d62937df4bc9db1eb0",
        "patch": "@@ -46,12 +46,12 @@ bitcoind_SOURCES = bitcoind.cpp\n #\n \n leveldb/libleveldb.a:\n-\t@echo \"Building LevelDB ...\" && cd leveldb && CXX=$(CXX) CC=$(CC) \\\n-\t  PLATFORM=$(TARGET_OS) AR=$(AR) $(MAKE) $(LEVELDB_TARGET_FLAGS) OPT=\"$(CXXFLAGS) $(CPPFLAGS)\" libleveldb.a\n+\t@echo \"Building LevelDB ...\" && cd leveldb && CXX=\"$(CXX)\" CC=\"$(CC)\" \\\n+\t  PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(MAKE) $(LEVELDB_TARGET_FLAGS) OPT=\"$(CXXFLAGS) $(CPPFLAGS)\" libleveldb.a\n \n leveldb/libmemenv.a:\n-\t@echo \"Building LevelDB ...\" && cd leveldb && CXX=$(CXX) CC=$(CC) \\\n-\t  PLATFORM=$(TARGET_OS) AR=$(AR) $(MAKE) $(LEVELDB_TARGET_FLAGS) OPT=\"$(CXXFLAGS) $(CPPFLAGS)\" libmemenv.a\n+\t@echo \"Building LevelDB ...\" && cd leveldb && CXX=\"$(CXX)\" CC=\"$(CC)\" \\\n+\t  PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(MAKE) $(LEVELDB_TARGET_FLAGS) OPT=\"$(CXXFLAGS) $(CPPFLAGS)\" libmemenv.a\n \n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a\n "
      }
    ]
  },
  {
    "sha": "f184fbad9593876d962242055784c322dc2524b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTg0ZmJhZDk1OTM4NzZkOTYyMjQyMDU1Nzg0YzMyMmRjMjUyNGIw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-04T07:33:09Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-05T20:36:10Z"
      },
      "message": "squash me. autotools: add ccache support\n\nSpeeds builds up a substantial amount, as expected. Local tests show full clean\nbuilds are 25x-40x faster.",
      "tree": {
        "sha": "2704be6d9103280e2aae40c1eb97dc0073d8111a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2704be6d9103280e2aae40c1eb97dc0073d8111a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f184fbad9593876d962242055784c322dc2524b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f184fbad9593876d962242055784c322dc2524b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f184fbad9593876d962242055784c322dc2524b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f184fbad9593876d962242055784c322dc2524b0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b627f2821cb8b675bf5ca0d62937df4bc9db1eb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b627f2821cb8b675bf5ca0d62937df4bc9db1eb0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b627f2821cb8b675bf5ca0d62937df4bc9db1eb0"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 24,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d66f9c1eb111e74d3533437ded4aafa660024d7e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f184fbad9593876d962242055784c322dc2524b0/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f184fbad9593876d962242055784c322dc2524b0/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f184fbad9593876d962242055784c322dc2524b0",
        "patch": "@@ -87,6 +87,12 @@ AC_ARG_ENABLE([hardening],\n   [use_hardening=$enableval],\n   [use_hardening=yes])\n \n+AC_ARG_ENABLE([ccache],\n+  [AS_HELP_STRING([--enable-ccache],\n+  [enable building with ccache (default is yes if ccache is found)])],\n+  [use_ccache=$enableval],\n+  [use_ccache=auto])\n+\n AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [qt_include_path=])\n AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [qt_lib_path=])\n AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path (overridden by pkgconfig)])], [qt_bin_path=$withval], [qt_bin_path=])\n@@ -109,6 +115,7 @@ AC_PATH_PROGS([MOC], [moc moc-qt4], moc, $qt_bin_path:$PATH)\n AC_PATH_PROGS([UIC], [uic uic-qt4], uic, $qt_bin_path:$PATH)\n AC_PATH_PROG([RCC], [rcc], rcc, $qt_bin_path:$PATH)\n AC_PATH_PROG([LRELEASE], [lrelease], lrelease, $qt_bin_path:$PATH)\n+AC_PATH_PROG(CCACHE,ccache,none)\n \n ## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n ##       compatibility with the legacy buildsystem.\n@@ -371,6 +378,23 @@ if test x$use_ipv6 = xyes; then\n fi\n AC_LANG_POP\n \n+if test \"x$use_ccache\" != \"xno\"; then\n+  AC_MSG_CHECKING(if ccache should be enabled)\n+  if test x\"$CCACHE\" = x\"none\"; then\n+    if test \"x$use_ccache\" = \"xyes\"; then\n+      AC_MSG_ERROR([ccache not found.]);\n+    else\n+      AC_MSG_NOTICE([ccache not found. Falling back to default CC])\n+      use_ccache=no\n+    fi\n+  else\n+    use_ccache=yes\n+    CC=\"$ac_cv_path_CCACHE $CC\"\n+    CXX=\"$ac_cv_path_CCACHE $CXX\"\n+  fi\n+  AC_MSG_RESULT($use_ccache)\n+fi\n+\n dnl enable ipv6 support\n AC_MSG_CHECKING([if ipv6 should be enabled])\n if test x$have_ipv6 = xno; then"
      }
    ]
  },
  {
    "sha": "323ed237d1398d216c3fbf4014b3dc69bb98c7f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjNlZDIzN2QxMzk4ZDIxNmMzZmJmNDAxNGIzZGM2OWJiOThjN2Yz",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-04T07:35:44Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-05T20:36:10Z"
      },
      "message": "squash me. autotools: only test for boost_test if tests are enabled",
      "tree": {
        "sha": "fc6a3d577d5ff6012635e0d115883d2cc8df3d4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc6a3d577d5ff6012635e0d115883d2cc8df3d4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/323ed237d1398d216c3fbf4014b3dc69bb98c7f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/323ed237d1398d216c3fbf4014b3dc69bb98c7f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/323ed237d1398d216c3fbf4014b3dc69bb98c7f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/323ed237d1398d216c3fbf4014b3dc69bb98c7f3/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f184fbad9593876d962242055784c322dc2524b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f184fbad9593876d962242055784c322dc2524b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f184fbad9593876d962242055784c322dc2524b0"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "52e042fae88324dddb470afa941d37c6b26dd21f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/323ed237d1398d216c3fbf4014b3dc69bb98c7f3/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/323ed237d1398d216c3fbf4014b3dc69bb98c7f3/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=323ed237d1398d216c3fbf4014b3dc69bb98c7f3",
        "patch": "@@ -257,8 +257,12 @@ AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_PROGRAM_OPTIONS\n AX_BOOST_THREAD\n-AX_BOOST_UNIT_TEST_FRAMEWORK\n AX_BOOST_CHRONO\n+\n+if test x$use_tests = xyes; then\n+  AX_BOOST_UNIT_TEST_FRAMEWORK\n+fi\n+\n BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n BOOST_INCLUDES=\"$BOOST_CPPFLAGS\"\n "
      }
    ]
  },
  {
    "sha": "a36135b92c3eeafee4df4457fb71415af774ed87",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzYxMzViOTJjM2VlYWZlZTRkZjQ0NTdmYjcxNDE1YWY3NzRlZDg3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-04T07:36:48Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-05T20:36:10Z"
      },
      "message": "squash me. gitian linux build needs libboost-test",
      "tree": {
        "sha": "367d89e5e6645e88ecfdec62a89e09692442aa10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/367d89e5e6645e88ecfdec62a89e09692442aa10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a36135b92c3eeafee4df4457fb71415af774ed87",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a36135b92c3eeafee4df4457fb71415af774ed87",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a36135b92c3eeafee4df4457fb71415af774ed87",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a36135b92c3eeafee4df4457fb71415af774ed87/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "323ed237d1398d216c3fbf4014b3dc69bb98c7f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/323ed237d1398d216c3fbf4014b3dc69bb98c7f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/323ed237d1398d216c3fbf4014b3dc69bb98c7f3"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7af247bff908deec505b786ee808ef6b18c147ce",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a36135b92c3eeafee4df4457fb71415af774ed87/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a36135b92c3eeafee4df4457fb71415af774ed87/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=a36135b92c3eeafee4df4457fb71415af774ed87",
        "patch": "@@ -13,6 +13,7 @@ packages:\n - \"libboost-filesystem-dev\"\n - \"libboost-program-options-dev\"\n - \"libboost-thread-dev\"\n+- \"libboost-test-dev\"\n - \"libssl-dev\"\n - \"git-core\"\n - \"unzip\""
      }
    ]
  },
  {
    "sha": "1b0732d6b56a98ec6d31f679e304f638ef1fe28f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYjA3MzJkNmI1NmE5OGVjNmQzMWY2NzllMzA0ZjYzOGVmMWZlMjhm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T03:28:29Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:37:17Z"
      },
      "message": "autotools: detect proper boost sleep in configure\n\nAdditionally, link in boost_crypto if necessary.",
      "tree": {
        "sha": "d8b3959c0bbef83f09e4e551dcfa1e1c55ae6138",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8b3959c0bbef83f09e4e551dcfa1e1c55ae6138"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b0732d6b56a98ec6d31f679e304f638ef1fe28f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b0732d6b56a98ec6d31f679e304f638ef1fe28f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1b0732d6b56a98ec6d31f679e304f638ef1fe28f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b0732d6b56a98ec6d31f679e304f638ef1fe28f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "a36135b92c3eeafee4df4457fb71415af774ed87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a36135b92c3eeafee4df4457fb71415af774ed87",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a36135b92c3eeafee4df4457fb71415af774ed87"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 51,
      "deletions": 5
    },
    "files": [
      {
        "sha": "41658dc385b7bbbc2dcf4d5d68fff9aacd2492ff",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 46,
        "deletions": 2,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b0732d6b56a98ec6d31f679e304f638ef1fe28f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b0732d6b56a98ec6d31f679e304f638ef1fe28f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=1b0732d6b56a98ec6d31f679e304f638ef1fe28f",
        "patch": "@@ -266,8 +266,52 @@ fi\n BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n BOOST_INCLUDES=\"$BOOST_CPPFLAGS\"\n \n-if test x$TARGET_OS = xwindows; then\n-  BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\"\n+dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n+dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n+dnl a working version is available, else fall back to sleep. sleep was removed\n+dnl after 1.56.\n+dnl If neither is available, abort.\n+dnl If sleep_for is used, boost_chrono becomes a requirement.\n+if test x$ax_cv_boost_chrono = xyes; then\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$LIBS $BOOST_LIBS $BOOST_CHRONO_LIB\"\n+AC_TRY_LINK([\n+  #include <boost/thread/thread.hpp>\n+  #include <boost/version.hpp>\n+  ],[\n+  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n+      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n+  #else\n+   choke me\n+  #endif\n+  ],\n+  [boost_sleep=yes; BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\";\n+     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n+  [boost_sleep=no])\n+LIBS=\"$TEMP_LIBS\"\n+fi\n+\n+if test x$boost_sleep != xyes; then\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$LIBS $BOOST_LIBS\"\n+AC_TRY_LINK([\n+  #include <boost/version.hpp>\n+  #include <boost/thread.hpp>\n+  #include <boost/date_time/posix_time/posix_time_types.hpp>\n+  ],[\n+  #if BOOST_VERSION <= 105600\n+      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n+  #else\n+   choke me\n+  #endif\n+  ],\n+  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n+  [boost_sleep=no])\n+LIBS=\"$TEMP_LIBS\"\n+fi\n+\n+if test x$boost_sleep != xyes; then\n+  AC_MSG_ERROR(No working boost sleep implementation found)\n fi\n \n if test x$use_pkgconfig = xyes; then"
      },
      {
        "sha": "ae9df8ea5936fde659093c1408218b28bf64bb71",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1b0732d6b56a98ec6d31f679e304f638ef1fe28f/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1b0732d6b56a98ec6d31f679e304f638ef1fe28f/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=1b0732d6b56a98ec6d31f679e304f638ef1fe28f",
        "patch": "@@ -107,11 +107,13 @@ inline void MilliSleep(int64 n)\n // Boost's sleep_for was uninterruptable when backed by nanosleep from 1.50\n // until fixed in 1.52. Use the deprecated sleep method for the broken case.\n // See: https://svn.boost.org/trac/boost/ticket/7238\n-\n-#if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n+#if defined(HAVE_WORKING_BOOST_SLEEP_FOR)\n     boost::this_thread::sleep_for(boost::chrono::milliseconds(n));\n-#else\n+#elif defined(HAVE_WORKING_BOOST_SLEEP)\n     boost::this_thread::sleep(boost::posix_time::milliseconds(n));\n+#else\n+  //should never get here\n+#error missing boost sleep implementation\n #endif\n }\n "
      }
    ]
  },
  {
    "sha": "f48b27b0c648bace6869bfc675abcee71cd8d094",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDhiMjdiMGM2NDhiYWNlNjg2OWJmYzY3NWFiY2VlNzFjZDhkMDk0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T03:41:52Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:37:17Z"
      },
      "message": "autotools: change ARG_ENABLE to ARG_WITH for dependencies",
      "tree": {
        "sha": "cdcdf9a0416bc35e1b378f0be654d78071269cdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cdcdf9a0416bc35e1b378f0be654d78071269cdb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f48b27b0c648bace6869bfc675abcee71cd8d094",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48b27b0c648bace6869bfc675abcee71cd8d094",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f48b27b0c648bace6869bfc675abcee71cd8d094",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48b27b0c648bace6869bfc675abcee71cd8d094/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1b0732d6b56a98ec6d31f679e304f638ef1fe28f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b0732d6b56a98ec6d31f679e304f638ef1fe28f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1b0732d6b56a98ec6d31f679e304f638ef1fe28f"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 25,
      "deletions": 25
    },
    "files": [
      {
        "sha": "b47f4c7c0438e35ce648f8a25faec00141fa37e3",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48b27b0c648bace6869bfc675abcee71cd8d094/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48b27b0c648bace6869bfc675abcee71cd8d094/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f48b27b0c648bace6869bfc675abcee71cd8d094",
        "patch": "@@ -31,8 +31,8 @@ AM_MAINTAINER_MODE([enable])\n dnl make the compilation flags quiet unless V=1 is used\n m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n \n-AC_ARG_ENABLE([upnp],\n-  [AS_HELP_STRING([--enable-upnp],\n+AC_ARG_WITH([miniupnpc],\n+  [AS_HELP_STRING([--with-miniupnpc],\n   [enable UPNP (default is yes if libminiupnpc is found)])],\n   [use_upnp=$enableval],\n   [use_upnp=auto])\n@@ -51,8 +51,8 @@ AC_ARG_ENABLE([ipv6],\n   [use_ipv6=yes])\n \n dnl enable qt support\n-AC_ARG_ENABLE([qt],\n-  [AS_HELP_STRING([--enable-qt],\n+AC_ARG_WITH([qt],\n+  [AS_HELP_STRING([--with-qt],\n   [enable qt (default is yes)])],\n   [use_qt=$enableval],\n   [use_qt=yes])\n@@ -69,14 +69,14 @@ AC_ARG_ENABLE(tests,\n     [use_tests=$enableval],\n     [use_tests=yes])\n \n-AC_ARG_ENABLE([qr],\n-  [AS_HELP_STRING([--enable-qr],\n+AC_ARG_WITH([qrencode],\n+  [AS_HELP_STRING([--with-qrencode],\n   [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n   [use_qr=$enableval],\n   [use_qr=auto])\n \n-AC_ARG_ENABLE([dbus],\n-  [AS_HELP_STRING([--enable-dbus],\n+AC_ARG_WITH([qtdbus],\n+  [AS_HELP_STRING([--with-qtdbus],\n   [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n   [use_dbus=$enableval],\n   [use_dbus=auto])\n@@ -354,14 +354,14 @@ else\n       QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n       LIBS=\"$QT_LIBS\"\n     fi\n-    AC_CHECK_LIB([qcncodecs],      [main],, AC_MSG_ERROR(libqcncodecs not found. Install it or use --disable-qt.))\n-    AC_CHECK_LIB([qjpcodecs],      [main],, AC_MSG_ERROR(libqjpcodecs not found. Install it or use --disable-qt.))\n-    AC_CHECK_LIB([qkrcodecs],      [main],, AC_MSG_ERROR(libqkrcodecs not found. Install it or use --disable-qt.))\n-    AC_CHECK_LIB([qtwcodecs],      [main],, AC_MSG_ERROR(libqtwcodecs not found. Install it or use --disable-qt.))\n-    AC_CHECK_LIB([imm32],      [main],, AC_MSG_ERROR(libimm32 not found. Install it or use --disable-qt.))\n-    AC_CHECK_LIB([QtCore],      [main],, AC_MSG_ERROR(libQtCore not found. Install it or use --disable-qt.))\n-    AC_CHECK_LIB([QtGui],      [main],, AC_MSG_ERROR(libQtGui not found. Install it or use --disable-qt.))\n-    AC_CHECK_LIB([QtNetwork],      [main],, AC_MSG_ERROR(libQtNetwork not found. Install it or use --disable-qt.))\n+    AC_CHECK_LIB([qcncodecs],      [main],, AC_MSG_ERROR(libqcncodecs not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([qjpcodecs],      [main],, AC_MSG_ERROR(libqjpcodecs not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([qkrcodecs],      [main],, AC_MSG_ERROR(libqkrcodecs not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([qtwcodecs],      [main],, AC_MSG_ERROR(libqtwcodecs not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([imm32],      [main],, AC_MSG_ERROR(libimm32 not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([QtCore],      [main],, AC_MSG_ERROR(libQtCore not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([QtGui],      [main],, AC_MSG_ERROR(libQtGui not found. Install it or use --without-qt.))\n+    AC_CHECK_LIB([QtNetwork],      [main],, AC_MSG_ERROR(libQtNetwork not found. Install it or use --without-qt.))\n     QT_LIBS=\"$LIBS\"\n     LIBS=\"$TEMP_LIBS\"\n \n@@ -370,9 +370,9 @@ else\n       QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n       CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n     fi\n-    AC_CHECK_HEADER([QtPlugin],, AC_MSG_ERROR(QtCore headers missing. Install them or use --disable-qt.),)\n-    AC_CHECK_HEADER([QApplication],, AC_MSG_ERROR(QtGUI headers missing. Install them or use --disable-qt.),)\n-    AC_CHECK_HEADER([QLocalSocket],, AC_MSG_ERROR(QtNetwork headers missing. Install them or use --disable-qt.),)\n+    AC_CHECK_HEADER([QtPlugin],, AC_MSG_ERROR(QtCore headers missing. Install them or use --without-qt.),)\n+    AC_CHECK_HEADER([QApplication],, AC_MSG_ERROR(QtGUI headers missing. Install them or use --without-qt.),)\n+    AC_CHECK_HEADER([QLocalSocket],, AC_MSG_ERROR(QtNetwork headers missing. Install them or use --without-qt.),)\n \n     if test x$use_tests = xyes; then\n       TEMP_LIBS=\"$LIBS\"\n@@ -463,7 +463,7 @@ dnl enable upnp support\n AC_MSG_CHECKING([if upnp should be enabled])\n if test x$have_miniupnpc = xno; then\n   if test x$use_upnp = xyes; then\n-     AC_MSG_ERROR(\"upnp requested but cannot be built. use --disable-upnp\")\n+     AC_MSG_ERROR(\"upnp requested but cannot be built. use --without-miniupnpc\")\n   fi\n   AC_MSG_RESULT(no)\n else\n@@ -490,10 +490,10 @@ dnl enable qt support\n AC_MSG_CHECKING([if qt should be enabled])\n if test x$use_qt = xyes; then\n   if test x$have_qt = xno; then\n-     AC_MSG_ERROR(\"qt support requested but qt could not be located. use --disable-qt\")\n+     AC_MSG_ERROR(\"qt support requested but qt could not be located. use --without-qt\")\n   fi\n   if test x$MOC = x; then\n-    AC_MSG_ERROR(\"qt support requested but moc was not found. use --disable-qt\")\n+    AC_MSG_ERROR(\"qt support requested but moc was not found. use --without-qt\")\n   fi\n   if test x$UIC = x; then\n     AC_MSG_WARN(\"qt support requested but uic was not found.\")\n@@ -506,13 +506,13 @@ if test x$use_qt = xyes; then\n   fi\n   if test x$use_tests = xyes; then\n     if test x$have_qt_test = xno; then\n-      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --disable-qt.\")\n+      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --without-qt.\")\n     fi\n   fi\n   if test x$have_qt_dbus = xno;  then\n     use_dbus=no\n     if test x$use_dbus = xyes; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Use --disable-dbus.\")\n+      AC_MSG_ERROR(\"libQtDBus not found. Use --without-qtdbus.\")\n     fi\n   fi\n   BUILD_QT=qt\n@@ -537,7 +537,7 @@ if test x$use_qt = xyes; then\n   AC_MSG_CHECKING([if qr should be enabled])\n   if test x$have_qrencode = xno; then\n     if test x$use_qr != xno; then\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --disable-qr\")\n+     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n     fi\n     AC_MSG_RESULT(no)\n   else"
      }
    ]
  },
  {
    "sha": "e66711c1fe244ff7908dfd71ae87753e663735e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjY3MTFjMWZlMjQ0ZmY3OTA4ZGZkNzFhZTg3NzUzZTY2MzczNWU5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T03:57:20Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:37:18Z"
      },
      "message": "autotools: fix broken output when qt is disabled",
      "tree": {
        "sha": "76a8249352ade51b7f9783521858e22eed055dfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76a8249352ade51b7f9783521858e22eed055dfc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e66711c1fe244ff7908dfd71ae87753e663735e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e66711c1fe244ff7908dfd71ae87753e663735e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e66711c1fe244ff7908dfd71ae87753e663735e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e66711c1fe244ff7908dfd71ae87753e663735e9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f48b27b0c648bace6869bfc675abcee71cd8d094",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48b27b0c648bace6869bfc675abcee71cd8d094",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f48b27b0c648bace6869bfc675abcee71cd8d094"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "aeae6e9132b654f98a10613e815a4386e1f86e7e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e66711c1fe244ff7908dfd71ae87753e663735e9/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e66711c1fe244ff7908dfd71ae87753e663735e9/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e66711c1fe244ff7908dfd71ae87753e663735e9",
        "patch": "@@ -516,6 +516,8 @@ if test x$use_qt = xyes; then\n     fi\n   fi\n   BUILD_QT=qt\n+else\n+  use_qt=no\n fi\n \n AC_MSG_RESULT($use_qt)"
      }
    ]
  },
  {
    "sha": "fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzhjOGE1Nzg3ZTQ0OTYyYThiZDlkYjIxZGQyMTA0Y2M4ZmUwZTFj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T03:59:25Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:37:18Z"
      },
      "message": "autotools: don't check for qrencode if qt is disabled",
      "tree": {
        "sha": "46447a959b5bfebdcc0722db3baa5e42d6a27ce9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46447a959b5bfebdcc0722db3baa5e42d6a27ce9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e66711c1fe244ff7908dfd71ae87753e663735e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e66711c1fe244ff7908dfd71ae87753e663735e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e66711c1fe244ff7908dfd71ae87753e663735e9"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "cc386b369a63eda5480b9a6109ce597ad179e71d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c",
        "patch": "@@ -330,9 +330,9 @@ if test x$use_pkgconfig = xyes; then\n         if test x$use_dbus != xno; then\n           PKG_CHECK_MODULES([QT_DBUS], [QtDBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n         fi\n-      fi\n-      if test x$use_qr != xno; then\n-        PKG_CHECK_MODULES([QR], [libqrencode], [INCLUDES=\"$QR_CFLAGS\"; LIBS=\"$LIBS $QR_LIBS\"; have_qrencode=yes], [have_qrencode=no])\n+        if test x$use_qr != xno; then\n+          PKG_CHECK_MODULES([QR], [libqrencode], [INCLUDES=\"$QR_CFLAGS\"; LIBS=\"$LIBS $QR_LIBS\"; have_qrencode=yes], [have_qrencode=no])\n+        fi\n       fi\n     ]\n   )"
      }
    ]
  },
  {
    "sha": "d48ed1b40f6089ddcae69ccebe64a464318b3ca5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDhlZDFiNDBmNjA4OWRkY2FlNjljY2ViZTY0YTQ2NDMxOGIzY2E1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:04:11Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:37:18Z"
      },
      "message": "autotools: check for bdb headers and cosmetics",
      "tree": {
        "sha": "b0180cd9c642e535ea66f2770252917b91ebce30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0180cd9c642e535ea66f2770252917b91ebce30"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d48ed1b40f6089ddcae69ccebe64a464318b3ca5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d48ed1b40f6089ddcae69ccebe64a464318b3ca5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d48ed1b40f6089ddcae69ccebe64a464318b3ca5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d48ed1b40f6089ddcae69ccebe64a464318b3ca5/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc8c8a5787e44962a8bd9db21dd2104cc8fe0e1c"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "86139c978b49095d97e358341b9069bc505e72f8",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d48ed1b40f6089ddcae69ccebe64a464318b3ca5/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d48ed1b40f6089ddcae69ccebe64a464318b3ca5/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=d48ed1b40f6089ddcae69ccebe64a464318b3ca5",
        "patch": "@@ -244,7 +244,8 @@ AC_TRY_COMPILE([#include <sys/socket.h>],\n )\n \n dnl Check for libdb_cxx\n-AC_CHECK_LIB([db_cxx], [main],, AC_MSG_ERROR(libdb missing))\n+AC_CHECK_HEADER([db_cxx.h],,AC_MSG_ERROR(libdb_cxx headers missing))\n+AC_CHECK_LIB([db_cxx], [main],, AC_MSG_ERROR(libdb_cxx missing))\n \n dnl Check for libminiupnpc (optional)\n if test x$use_upnp != xno; then"
      }
    ]
  },
  {
    "sha": "b7c68c0351764bf2a09df2473d751251500d3182",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2M2OGMwMzUxNzY0YmYyYTA5ZGYyNDczZDc1MTI1MTUwMGQzMTgy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:04:57Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:37:18Z"
      },
      "message": "autotools: remove frandom-seed. Let gitian set it.",
      "tree": {
        "sha": "2b49c9f9c78c9276b89d116dcdc089305288a2d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b49c9f9c78c9276b89d116dcdc089305288a2d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7c68c0351764bf2a09df2473d751251500d3182",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7c68c0351764bf2a09df2473d751251500d3182",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7c68c0351764bf2a09df2473d751251500d3182",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7c68c0351764bf2a09df2473d751251500d3182/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d48ed1b40f6089ddcae69ccebe64a464318b3ca5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d48ed1b40f6089ddcae69ccebe64a464318b3ca5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d48ed1b40f6089ddcae69ccebe64a464318b3ca5"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b772d867bcb281fc1b1ea19cffd630058608dc34",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7c68c0351764bf2a09df2473d751251500d3182/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7c68c0351764bf2a09df2473d751251500d3182/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b7c68c0351764bf2a09df2473d751251500d3182",
        "patch": "@@ -120,7 +120,7 @@ AC_PATH_PROG(CCACHE,ccache,none)\n ## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n ##       compatibility with the legacy buildsystem.\n ##\n-CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -frandom-seed=bitcoin\"\n+CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\n CPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO\"\n DEBUG_CXXFLAGS=\"-g -ggdb\"\n RELEASE_CXXFLAGS=\"-O2\""
      }
    ]
  },
  {
    "sha": "fa98a160205a04dc38f58d21aa1423d05292753c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk4YTE2MDIwNWEwNGRjMzhmNThkMjFhYTE0MjNkMDUyOTI3NTNj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:06:07Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:37:18Z"
      },
      "message": "autotools: move flags to rhs of configure",
      "tree": {
        "sha": "1bb9690723f82e1673d1bd1a2c7735535b7481e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bb9690723f82e1673d1bd1a2c7735535b7481e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa98a160205a04dc38f58d21aa1423d05292753c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa98a160205a04dc38f58d21aa1423d05292753c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa98a160205a04dc38f58d21aa1423d05292753c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa98a160205a04dc38f58d21aa1423d05292753c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b7c68c0351764bf2a09df2473d751251500d3182",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7c68c0351764bf2a09df2473d751251500d3182",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7c68c0351764bf2a09df2473d751251500d3182"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b3dceddd1747754c80d934f3e5597da7f25b826d",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa98a160205a04dc38f58d21aa1423d05292753c/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa98a160205a04dc38f58d21aa1423d05292753c/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=fa98a160205a04dc38f58d21aa1423d05292753c",
        "patch": "@@ -42,7 +42,7 @@ script: |\n   export TZ=UTC\n   cd src\n   ./autogen.sh\n-  CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" ./configure --prefix=$STAGING --host=i586-mingw32msvc --with-qt-bindir=$STAGING/bin --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-boost=$STAGING --disable-maintainer-mode --disable-dependency-tracking\n+  ./configure CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" --prefix=$STAGING --host=i586-mingw32msvc --with-qt-bindir=$STAGING/bin --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-boost=$STAGING --disable-maintainer-mode --disable-dependency-tracking\n   make $MAKEOPTS\n   i586-mingw32msvc-strip bitcoind.exe\n   mkdir $OUTDIR/daemon"
      }
    ]
  },
  {
    "sha": "834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzRlZTFiYjYyOTg4Y2NjYmFmOGEzN2Q1YjZlMzdkNGRkN2VkZGU4",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:11:06Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-18T04:37:18Z"
      },
      "message": "autotools: fixup comment",
      "tree": {
        "sha": "6089f687f5c2c9b439aeee645bcc48f7c693cb63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6089f687f5c2c9b439aeee645bcc48f7c693cb63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "fa98a160205a04dc38f58d21aa1423d05292753c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa98a160205a04dc38f58d21aa1423d05292753c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa98a160205a04dc38f58d21aa1423d05292753c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "deb72c1ac955623b40c75d28854bffd8255467ae",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8",
        "patch": "@@ -25,7 +25,7 @@ dnl ==============================================================\n AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n \n dnl faketime messes with timestamps and causes configure to be re-run.\n-dnl maintainer-mode can be used to bypass this.\n+dnl --disable-maintainer-mode can be used to bypass this.\n AM_MAINTAINER_MODE([enable])\n \n dnl make the compilation flags quiet unless V=1 is used"
      }
    ]
  },
  {
    "sha": "2b9711199b7c4b986ee648b277a1479745ac65cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjk3MTExOTliN2M0Yjk4NmVlNjQ4YjI3N2ExNDc5NzQ1YWM2NWNk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-24T21:46:45Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-24T21:46:45Z"
      },
      "message": "autotool: add multiple-include guard for bitcoin-config.h",
      "tree": {
        "sha": "9318a9d3cc43c9ae6059be62da74629f76ac9845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9318a9d3cc43c9ae6059be62da74629f76ac9845"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b9711199b7c4b986ee648b277a1479745ac65cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b9711199b7c4b986ee648b277a1479745ac65cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b9711199b7c4b986ee648b277a1479745ac65cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b9711199b7c4b986ee648b277a1479745ac65cd/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/834ee1bb62988cccbaf8a37d5b6e37d4dd7edde8"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8f93c281f9ea9218e994588ed07477158feb7d92",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b9711199b7c4b986ee648b277a1479745ac65cd/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b9711199b7c4b986ee648b277a1479745ac65cd/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=2b9711199b7c4b986ee648b277a1479745ac65cd",
        "patch": "@@ -10,6 +10,9 @@ AC_INIT([Bitcoin],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_R\n AC_CONFIG_AUX_DIR([src/build-aux])\n AC_CONFIG_MACRO_DIR([src/m4])\n AC_CANONICAL_HOST\n+AH_TOP([#ifndef BITCOIN_CONFIG_H])\n+AH_TOP([#define BITCOIN_CONFIG_H])\n+AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n \n dnl reset CXXFLAGS if empty (autoconf adds its own defaults otherwise)\n :${CFLAGS=\"\"}"
      }
    ]
  },
  {
    "sha": "add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZGQ4ZjhiMGE5NGFhZDQ5Y2Q3ZmQyYTRiZjgzYmM4MTcwNWY1MjM0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-24T21:54:17Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-24T21:54:17Z"
      },
      "message": "autotools: always include bitcoin-config.h first",
      "tree": {
        "sha": "78f7c4fe0f1dc6c0c6bc46be0d67ff55b95f77ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78f7c4fe0f1dc6c0c6bc46be0d67ff55b95f77ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "2b9711199b7c4b986ee648b277a1479745ac65cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b9711199b7c4b986ee648b277a1479745ac65cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b9711199b7c4b986ee648b277a1479745ac65cd"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 31,
      "deletions": 31
    },
    "files": [
      {
        "sha": "53eb31395ce86c26086fe66517da85358dc13214",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "patch": "@@ -3,6 +3,10 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"init.h\"\n #include \"main.h\"\n #include \"core.h\"\n@@ -22,10 +26,6 @@\n #include <boost/algorithm/string/predicate.hpp>\n #include <openssl/crypto.h>\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #ifndef WIN32\n #include <signal.h>\n #endif"
      },
      {
        "sha": "7af27af79df7a5c1d03dc27f87754388e786b356",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "patch": "@@ -5,6 +5,10 @@\n #ifndef BITCOIN_MAIN_H\n #define BITCOIN_MAIN_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"core.h\"\n #include \"bignum.h\"\n #include \"sync.h\"\n@@ -13,10 +17,6 @@\n \n #include <list>\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n class CWallet;\n class CBlock;\n class CBlockIndex;"
      },
      {
        "sha": "4b161c56435eef7ba042843bf093aaa2cc7fbe96",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "patch": "@@ -3,6 +3,10 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"chainparams.h\"\n #include \"db.h\"\n #include \"net.h\"\n@@ -11,10 +15,6 @@\n #include \"ui_interface.h\"\n #include \"script.h\"\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #ifdef WIN32\n #include <string.h>\n #endif"
      },
      {
        "sha": "8d5135e970c2585be9ce813157547252e76df910",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "patch": "@@ -4,16 +4,16 @@\n #ifndef BITCOIN_NETBASE_H\n #define BITCOIN_NETBASE_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include <string>\n #include <vector>\n \n #include \"serialize.h\"\n #include \"compat.h\"\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n extern int nConnectTimeout;\n \n #ifdef WIN32"
      },
      {
        "sha": "5b8d44481e6461e39d1e95edb1d91aa0dad40238",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "patch": "@@ -1,3 +1,7 @@\n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"addressbookpage.h\"\n #include \"ui_addressbookpage.h\"\n \n@@ -8,10 +12,6 @@\n #include \"csvmodelwriter.h\"\n #include \"guiutil.h\"\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n #ifdef USE_QRCODE\n #include \"qrcodedialog.h\"\n #endif"
      },
      {
        "sha": "6c9a46bcf708351db316662060f35e579261343e",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "patch": "@@ -1,13 +1,13 @@\n #ifndef NOTIFICATOR_H\n #define NOTIFICATOR_H\n \n-#include <QObject>\n-#include <QIcon>\n-\n #if defined(HAVE_CONFIG_H)\n #include \"bitcoin-config.h\"\n #endif\n \n+#include <QObject>\n+#include <QIcon>\n+\n QT_BEGIN_NAMESPACE\n class QSystemTrayIcon;\n #ifdef USE_DBUS"
      },
      {
        "sha": "7ccda6cdd43380f517e9a22d71da6610065f30fa",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "patch": "@@ -1,3 +1,7 @@\n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"optionsdialog.h\"\n #include \"ui_optionsdialog.h\"\n \n@@ -11,10 +15,6 @@\n #include <QLocale>\n #include <QMessageBox>\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n OptionsDialog::OptionsDialog(QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::OptionsDialog),"
      },
      {
        "sha": "9e7f15f32b95b16eb3e4403611f5f87e0c65f316",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "patch": "@@ -1,3 +1,7 @@\n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include \"optionsmodel.h\"\n \n #include \"bitcoinunits.h\"\n@@ -7,10 +11,6 @@\n \n #include <QSettings>\n \n-#if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n-#endif\n-\n OptionsModel::OptionsModel(QObject *parent) :\n     QAbstractListModel(parent)\n {"
      }
    ]
  },
  {
    "sha": "bc7e977b887e08ea3673720b3e56220a51fe25ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzdlOTc3Yjg4N2UwOGVhMzY3MzcyMGIzZTU2MjIwYTUxZmUyNWNh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-25T03:28:03Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-25T03:28:03Z"
      },
      "message": "autotools: fix bad copy/paste",
      "tree": {
        "sha": "106cef8542cb836f51e5229c76b13cfe005f6bca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/106cef8542cb836f51e5229c76b13cfe005f6bca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc7e977b887e08ea3673720b3e56220a51fe25ca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc7e977b887e08ea3673720b3e56220a51fe25ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc7e977b887e08ea3673720b3e56220a51fe25ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc7e977b887e08ea3673720b3e56220a51fe25ca/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/add8f8b0a94aad49cd7fd2a4bf83bc81705f5234"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "8a132d8aa1d93ddc44863da52e6d47980e647442",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7e977b887e08ea3673720b3e56220a51fe25ca/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7e977b887e08ea3673720b3e56220a51fe25ca/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bc7e977b887e08ea3673720b3e56220a51fe25ca",
        "patch": "@@ -37,7 +37,7 @@ m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n AC_ARG_WITH([miniupnpc],\n   [AS_HELP_STRING([--with-miniupnpc],\n   [enable UPNP (default is yes if libminiupnpc is found)])],\n-  [use_upnp=$enableval],\n+  [use_upnp=$withval],\n   [use_upnp=auto])\n \n AC_ARG_ENABLE([upnp-default],\n@@ -57,7 +57,7 @@ dnl enable qt support\n AC_ARG_WITH([qt],\n   [AS_HELP_STRING([--with-qt],\n   [enable qt (default is yes)])],\n-  [use_qt=$enableval],\n+  [use_qt=$withval],\n   [use_qt=yes])\n \n dnl compile with full warnings and debugging symbols\n@@ -75,13 +75,13 @@ AC_ARG_ENABLE(tests,\n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n   [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n-  [use_qr=$enableval],\n+  [use_qr=$withval],\n   [use_qr=auto])\n \n AC_ARG_WITH([qtdbus],\n   [AS_HELP_STRING([--with-qtdbus],\n   [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-  [use_dbus=$enableval],\n+  [use_dbus=$withval],\n   [use_dbus=auto])\n \n AC_ARG_ENABLE([hardening],"
      }
    ]
  },
  {
    "sha": "7784ea19193c6c742ba229d572ead8db8eb2c9da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Nzg0ZWExOTE5M2M2Yzc0MmJhMjI5ZDU3MmVhZDhkYjhlYjJjOWRh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-25T20:28:29Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-25T20:50:55Z"
      },
      "message": "autotools: add windows-deploy target\n\nThis uses makensis to create the win32 installer exe.\n\nUsage: make windows-deploy",
      "tree": {
        "sha": "d88392b246dbbcf2c3d5f9ee13bebf8acc09a868",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d88392b246dbbcf2c3d5f9ee13bebf8acc09a868"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7784ea19193c6c742ba229d572ead8db8eb2c9da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7784ea19193c6c742ba229d572ead8db8eb2c9da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7784ea19193c6c742ba229d572ead8db8eb2c9da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7784ea19193c6c742ba229d572ead8db8eb2c9da/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "bc7e977b887e08ea3673720b3e56220a51fe25ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc7e977b887e08ea3673720b3e56220a51fe25ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc7e977b887e08ea3673720b3e56220a51fe25ca"
      }
    ],
    "stats": {
      "total": 369,
      "additions": 204,
      "deletions": 165
    },
    "files": [
      {
        "sha": "eef92d668c6a520585c38a7c0a3f4fc3270333cf",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 28,
        "deletions": 2,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7784ea19193c6c742ba229d572ead8db8eb2c9da/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7784ea19193c6c742ba229d572ead8db8eb2c9da/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=7784ea19193c6c742ba229d572ead8db8eb2c9da",
        "patch": "@@ -1,6 +1,14 @@\n ACLOCAL_AMFLAGS = -I src/m4\n SUBDIRS = src\n-EXTRA_DIST = share/genbuild.sh\n+.PHONY: windows-deploy osx-deploy FORCE\n+\n+BITCOIND_BIN=$(top_builddir)/src/bitcoind$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n+\n+WINDOWS_PACKAGING =  $(top_srcdir)/share/setup.nsi.in \\\n+  $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+  $(top_srcdir)/share/pixmaps/nsis-header.bmp share/pixmaps/nsis-wizard.bmp \\\n+  $(top_srcdir)/doc/README_windows.txt\n \n dist-hook:\n \t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n@@ -13,4 +21,22 @@ distcheck-hook:\n \n distcleancheck:\n \t@:\n-           \n+\n+$(PACKAGE)-$(PACKAGE_VERSION)-win32-setup.exe: $(BITCOIND_BIN) $(BITCOIN_QT_BIN)\n+\tmkdir -p $(top_srcdir)/release\n+\tcp -f $(top_builddir)/src/bitcoind$(EXEEXT) $(top_srcdir)/release\n+\tcp -f $(top_builddir)/src/qt/bitcoin-qt$(EXEEXT) $(top_srcdir)/release\n+\t$(STRIP) $(top_srcdir)/release/bitcoind$(EXEEXT)\n+\t$(STRIP) $(top_srcdir)/release/bitcoin-qt$(EXEEXT)\n+\t@test -f $(MAKENSIS) && $(MAKENSIS) $(top_srcdir)/share/setup.nsi || \\\n+          echo error: could not build $@\n+\n+$(BITCOIND_BIN):\n+\tmake -C $(top_srcdir)/src bitcoind$(EXEEXT)\n+\n+$(BITCOIN_QT_BIN):\n+\tmake -C $(top_srcdir)/src/qt bitcoin-qt$(EXEEXT)\n+\n+windows-deploy: $(PACKAGE)-$(PACKAGE_VERSION)-win32-setup.exe\n+\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh $(WINDOWS_PACKAGING)"
      },
      {
        "sha": "7d08fea479badeb68a3b9bec4115ac0b57458b93",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7784ea19193c6c742ba229d572ead8db8eb2c9da/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7784ea19193c6c742ba229d572ead8db8eb2c9da/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=7784ea19193c6c742ba229d572ead8db8eb2c9da",
        "patch": "@@ -154,6 +154,12 @@ case $host in\n      AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n      AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n      AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n+\n+     AC_PATH_PROG([MAKENSIS], [makensis], none)\n+     if test x$MAKENSIS = xnone; then\n+       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n+     fi\n+\n      CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n      LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n      CXXFLAGS=\"$CXXFLAGS -w\"\n@@ -574,6 +580,13 @@ AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n+AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n+AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n+AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n+AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n+AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+\n \n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n@@ -592,5 +605,5 @@ AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST)\n AC_SUBST(BUILD_TEST_QT)\n-AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile])\n+AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile share/setup.nsi])\n AC_OUTPUT"
      },
      {
        "sha": "e0256b5ee9ab541d5a95706bcfbf49e7d15afd8f",
        "filename": "share/setup.nsi.in",
        "status": "renamed",
        "additions": 162,
        "deletions": 162,
        "changes": 324,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7784ea19193c6c742ba229d572ead8db8eb2c9da/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7784ea19193c6c742ba229d572ead8db8eb2c9da/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=7784ea19193c6c742ba229d572ead8db8eb2c9da",
        "patch": "@@ -1,162 +1,162 @@\n-Name Bitcoin\r\n-\r\n-RequestExecutionLevel highest\r\n-SetCompressor /SOLID lzma\r\n-\r\n-# General Symbol Definitions\r\n-!define REGKEY \"SOFTWARE\\$(^Name)\"\r\n-!define VERSION 0.8.2\r\n-!define COMPANY \"Bitcoin project\"\r\n-!define URL http://www.bitcoin.org/\r\n-\r\n-# MUI Symbol Definitions\r\n-!define MUI_ICON \"../share/pixmaps/bitcoin.ico\"\r\n-!define MUI_WELCOMEFINISHPAGE_BITMAP \"../share/pixmaps/nsis-wizard.bmp\"\r\n-!define MUI_HEADERIMAGE\r\n-!define MUI_HEADERIMAGE_RIGHT\r\n-!define MUI_HEADERIMAGE_BITMAP \"../share/pixmaps/nsis-header.bmp\"\r\n-!define MUI_FINISHPAGE_NOAUTOCLOSE\r\n-!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM\r\n-!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}\r\n-!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup\r\n-!define MUI_STARTMENUPAGE_DEFAULTFOLDER Bitcoin\r\n-!define MUI_FINISHPAGE_RUN $INSTDIR\\bitcoin-qt.exe\r\n-!define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall.ico\"\r\n-!define MUI_UNWELCOMEFINISHPAGE_BITMAP \"../share/pixmaps/nsis-wizard.bmp\"\r\n-!define MUI_UNFINISHPAGE_NOAUTOCLOSE\r\n-\r\n-# Included files\r\n-!include Sections.nsh\r\n-!include MUI2.nsh\r\n-\r\n-# Variables\r\n-Var StartMenuGroup\r\n-\r\n-# Installer pages\r\n-!insertmacro MUI_PAGE_WELCOME\r\n-!insertmacro MUI_PAGE_DIRECTORY\r\n-!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup\r\n-!insertmacro MUI_PAGE_INSTFILES\r\n-!insertmacro MUI_PAGE_FINISH\r\n-!insertmacro MUI_UNPAGE_CONFIRM\r\n-!insertmacro MUI_UNPAGE_INSTFILES\r\n-\r\n-# Installer languages\r\n-!insertmacro MUI_LANGUAGE English\r\n-\r\n-# Installer attributes\r\n-OutFile bitcoin-0.8.2-win32-setup.exe\r\n-InstallDir $PROGRAMFILES\\Bitcoin\r\n-CRCCheck on\r\n-XPStyle on\r\n-BrandingText \" \"\r\n-ShowInstDetails show\r\n-VIProductVersion 0.8.2.2\r\n-VIAddVersionKey ProductName Bitcoin\r\n-VIAddVersionKey ProductVersion \"${VERSION}\"\r\n-VIAddVersionKey CompanyName \"${COMPANY}\"\r\n-VIAddVersionKey CompanyWebsite \"${URL}\"\r\n-VIAddVersionKey FileVersion \"${VERSION}\"\r\n-VIAddVersionKey FileDescription \"\"\r\n-VIAddVersionKey LegalCopyright \"\"\r\n-InstallDirRegKey HKCU \"${REGKEY}\" Path\r\n-ShowUninstDetails show\r\n-\r\n-# Installer sections\r\n-Section -Main SEC0000\r\n-    SetOutPath $INSTDIR\r\n-    SetOverwrite on\r\n-    File ../release/bitcoin-qt.exe\r\n-    File /oname=COPYING.txt ../COPYING\r\n-    File /oname=readme.txt ../doc/README_windows.txt\r\n-    SetOutPath $INSTDIR\\daemon\r\n-    File ../src/bitcoind.exe\r\n-    SetOutPath $INSTDIR\\src\r\n-    File /r /x *.exe /x *.o ../src\\*.*\r\n-    SetOutPath $INSTDIR\r\n-    WriteRegStr HKCU \"${REGKEY}\\Components\" Main 1\r\n-\r\n-    # Remove old wxwidgets-based-bitcoin executable and locales:\r\n-    Delete /REBOOTOK $INSTDIR\\bitcoin.exe\r\n-    RMDir /r /REBOOTOK $INSTDIR\\locale\r\n-SectionEnd\r\n-\r\n-Section -post SEC0001\r\n-    WriteRegStr HKCU \"${REGKEY}\" Path $INSTDIR\r\n-    SetOutPath $INSTDIR\r\n-    WriteUninstaller $INSTDIR\\uninstall.exe\r\n-    !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\r\n-    CreateDirectory $SMPROGRAMS\\$StartMenuGroup\r\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Bitcoin.lnk\" $INSTDIR\\bitcoin-qt.exe\r\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall Bitcoin.lnk\" $INSTDIR\\uninstall.exe\r\n-    !insertmacro MUI_STARTMENU_WRITE_END\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayVersion \"${VERSION}\"\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" Publisher \"${COMPANY}\"\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" URLInfoAbout \"${URL}\"\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayIcon $INSTDIR\\uninstall.exe\r\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" UninstallString $INSTDIR\\uninstall.exe\r\n-    WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\r\n-    WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\r\n-    WriteRegStr HKCR \"bitcoin\" \"URL Protocol\" \"\"\r\n-    WriteRegStr HKCR \"bitcoin\" \"\" \"URL:Bitcoin\"\r\n-    WriteRegStr HKCR \"bitcoin\\DefaultIcon\" \"\" $INSTDIR\\bitcoin-qt.exe\r\n-    WriteRegStr HKCR \"bitcoin\\shell\\open\\command\" \"\" '\"$INSTDIR\\bitcoin-qt.exe\" \"%1\"'\r\n-SectionEnd\r\n-\r\n-# Macro for selecting uninstaller sections\r\n-!macro SELECT_UNSECTION SECTION_NAME UNSECTION_ID\r\n-    Push $R0\r\n-    ReadRegStr $R0 HKCU \"${REGKEY}\\Components\" \"${SECTION_NAME}\"\r\n-    StrCmp $R0 1 0 next${UNSECTION_ID}\r\n-    !insertmacro SelectSection \"${UNSECTION_ID}\"\r\n-    GoTo done${UNSECTION_ID}\r\n-next${UNSECTION_ID}:\r\n-    !insertmacro UnselectSection \"${UNSECTION_ID}\"\r\n-done${UNSECTION_ID}:\r\n-    Pop $R0\r\n-!macroend\r\n-\r\n-# Uninstaller sections\r\n-Section /o -un.Main UNSEC0000\r\n-    Delete /REBOOTOK $INSTDIR\\bitcoin-qt.exe\r\n-    Delete /REBOOTOK $INSTDIR\\COPYING.txt\r\n-    Delete /REBOOTOK $INSTDIR\\readme.txt\r\n-    RMDir /r /REBOOTOK $INSTDIR\\daemon\r\n-    RMDir /r /REBOOTOK $INSTDIR\\src\r\n-    DeleteRegValue HKCU \"${REGKEY}\\Components\" Main\r\n-SectionEnd\r\n-\r\n-Section -un.post UNSEC0001\r\n-    DeleteRegKey HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\r\n-    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall Bitcoin.lnk\"\r\n-    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Bitcoin.lnk\"\r\n-    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\r\n-    Delete /REBOOTOK $INSTDIR\\uninstall.exe\r\n-    Delete /REBOOTOK $INSTDIR\\debug.log\r\n-    Delete /REBOOTOK $INSTDIR\\db.log\r\n-    DeleteRegValue HKCU \"${REGKEY}\" StartMenuGroup\r\n-    DeleteRegValue HKCU \"${REGKEY}\" Path\r\n-    DeleteRegKey /IfEmpty HKCU \"${REGKEY}\\Components\"\r\n-    DeleteRegKey /IfEmpty HKCU \"${REGKEY}\"\r\n-    DeleteRegKey HKCR \"bitcoin\"\r\n-    RmDir /REBOOTOK $SMPROGRAMS\\$StartMenuGroup\r\n-    RmDir /REBOOTOK $INSTDIR\r\n-    Push $R0\r\n-    StrCpy $R0 $StartMenuGroup 1\r\n-    StrCmp $R0 \">\" no_smgroup\r\n-no_smgroup:\r\n-    Pop $R0\r\n-SectionEnd\r\n-\r\n-# Installer functions\r\n-Function .onInit\r\n-    InitPluginsDir\r\n-FunctionEnd\r\n-\r\n-# Uninstaller functions\r\n-Function un.onInit\r\n-    ReadRegStr $INSTDIR HKCU \"${REGKEY}\" Path\r\n-    !insertmacro MUI_STARTMENU_GETFOLDER Application $StartMenuGroup\r\n-    !insertmacro SELECT_UNSECTION Main ${UNSEC0000}\r\n-FunctionEnd\r\n+Name @PACKAGE_NAME@\n+\n+RequestExecutionLevel highest\n+SetCompressor /SOLID lzma\n+\n+# General Symbol Definitions\n+!define REGKEY \"SOFTWARE\\$(^Name)\"\n+!define VERSION @CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@\n+!define COMPANY \"Bitcoin project\"\n+!define URL http://www.bitcoin.org/\n+\n+# MUI Symbol Definitions\n+!define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/bitcoin.ico\"\n+!define MUI_WELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n+!define MUI_HEADERIMAGE\n+!define MUI_HEADERIMAGE_RIGHT\n+!define MUI_HEADERIMAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-header.bmp\"\n+!define MUI_FINISHPAGE_NOAUTOCLOSE\n+!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM\n+!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}\n+!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup\n+!define MUI_STARTMENUPAGE_DEFAULTFOLDER @PACKAGE_NAME@\n+!define MUI_FINISHPAGE_RUN $INSTDIR\\bitcoin-qt.exe\n+!define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall.ico\"\n+!define MUI_UNWELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n+!define MUI_UNFINISHPAGE_NOAUTOCLOSE\n+\n+# Included files\n+!include Sections.nsh\n+!include MUI2.nsh\n+\n+# Variables\n+Var StartMenuGroup\n+\n+# Installer pages\n+!insertmacro MUI_PAGE_WELCOME\n+!insertmacro MUI_PAGE_DIRECTORY\n+!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup\n+!insertmacro MUI_PAGE_INSTFILES\n+!insertmacro MUI_PAGE_FINISH\n+!insertmacro MUI_UNPAGE_CONFIRM\n+!insertmacro MUI_UNPAGE_INSTFILES\n+\n+# Installer languages\n+!insertmacro MUI_LANGUAGE English\n+\n+# Installer attributes\n+OutFile @abs_top_srcdir@/bitcoin-${VERSION}-win32-setup.exe\n+InstallDir $PROGRAMFILES\\Bitcoin\n+CRCCheck on\n+XPStyle on\n+BrandingText \" \"\n+ShowInstDetails show\n+VIProductVersion ${VERSION}.@CLIENT_VERSION_BUILD@\n+VIAddVersionKey ProductName Bitcoin\n+VIAddVersionKey ProductVersion \"${VERSION}\"\n+VIAddVersionKey CompanyName \"${COMPANY}\"\n+VIAddVersionKey CompanyWebsite \"${URL}\"\n+VIAddVersionKey FileVersion \"${VERSION}\"\n+VIAddVersionKey FileDescription \"\"\n+VIAddVersionKey LegalCopyright \"\"\n+InstallDirRegKey HKCU \"${REGKEY}\" Path\n+ShowUninstDetails show\n+\n+# Installer sections\n+Section -Main SEC0000\n+    SetOutPath $INSTDIR\n+    SetOverwrite on\n+    File @abs_top_srcdir@/release/bitcoin-qt.exe\n+    File /oname=COPYING.txt @abs_top_srcdir@/COPYING\n+    File /oname=readme.txt @abs_top_srcdir@/doc/README_windows.txt\n+    SetOutPath $INSTDIR\\daemon\n+    File @abs_top_srcdir@/release/bitcoind.exe\n+    SetOutPath $INSTDIR\\src\n+    File /r /x *.exe /x *.o /x *.a /x *.Po @abs_top_srcdir@/src\\*.*\n+    SetOutPath $INSTDIR\n+    WriteRegStr HKCU \"${REGKEY}\\Components\" Main 1\n+\n+    # Remove old wxwidgets-based-bitcoin executable and locales:\n+    Delete /REBOOTOK $INSTDIR\\bitcoin.exe\n+    RMDir /r /REBOOTOK $INSTDIR\\locale\n+SectionEnd\n+\n+Section -post SEC0001\n+    WriteRegStr HKCU \"${REGKEY}\" Path $INSTDIR\n+    SetOutPath $INSTDIR\n+    WriteUninstaller $INSTDIR\\uninstall.exe\n+    !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\n+    CreateDirectory $SMPROGRAMS\\$StartMenuGroup\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Bitcoin.lnk\" $INSTDIR\\bitcoin-qt.exe\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall Bitcoin.lnk\" $INSTDIR\\uninstall.exe\n+    !insertmacro MUI_STARTMENU_WRITE_END\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayVersion \"${VERSION}\"\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" Publisher \"${COMPANY}\"\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" URLInfoAbout \"${URL}\"\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayIcon $INSTDIR\\uninstall.exe\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" UninstallString $INSTDIR\\uninstall.exe\n+    WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n+    WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\n+    WriteRegStr HKCR \"bitcoin\" \"URL Protocol\" \"\"\n+    WriteRegStr HKCR \"bitcoin\" \"\" \"URL:Bitcoin\"\n+    WriteRegStr HKCR \"bitcoin\\DefaultIcon\" \"\" $INSTDIR\\bitcoin-qt.exe\n+    WriteRegStr HKCR \"bitcoin\\shell\\open\\command\" \"\" '\"$INSTDIR\\bitcoin-qt.exe\" \"%1\"'\n+SectionEnd\n+\n+# Macro for selecting uninstaller sections\n+!macro SELECT_UNSECTION SECTION_NAME UNSECTION_ID\n+    Push $R0\n+    ReadRegStr $R0 HKCU \"${REGKEY}\\Components\" \"${SECTION_NAME}\"\n+    StrCmp $R0 1 0 next${UNSECTION_ID}\n+    !insertmacro SelectSection \"${UNSECTION_ID}\"\n+    GoTo done${UNSECTION_ID}\n+next${UNSECTION_ID}:\n+    !insertmacro UnselectSection \"${UNSECTION_ID}\"\n+done${UNSECTION_ID}:\n+    Pop $R0\n+!macroend\n+\n+# Uninstaller sections\n+Section /o -un.Main UNSEC0000\n+    Delete /REBOOTOK $INSTDIR\\bitcoin-qt.exe\n+    Delete /REBOOTOK $INSTDIR\\COPYING.txt\n+    Delete /REBOOTOK $INSTDIR\\readme.txt\n+    RMDir /r /REBOOTOK $INSTDIR\\daemon\n+    RMDir /r /REBOOTOK $INSTDIR\\src\n+    DeleteRegValue HKCU \"${REGKEY}\\Components\" Main\n+SectionEnd\n+\n+Section -un.post UNSEC0001\n+    DeleteRegKey HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\n+    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\n+    Delete /REBOOTOK $INSTDIR\\uninstall.exe\n+    Delete /REBOOTOK $INSTDIR\\debug.log\n+    Delete /REBOOTOK $INSTDIR\\db.log\n+    DeleteRegValue HKCU \"${REGKEY}\" StartMenuGroup\n+    DeleteRegValue HKCU \"${REGKEY}\" Path\n+    DeleteRegKey /IfEmpty HKCU \"${REGKEY}\\Components\"\n+    DeleteRegKey /IfEmpty HKCU \"${REGKEY}\"\n+    DeleteRegKey HKCR \"bitcoin\"\n+    RmDir /REBOOTOK $SMPROGRAMS\\$StartMenuGroup\n+    RmDir /REBOOTOK $INSTDIR\n+    Push $R0\n+    StrCpy $R0 $StartMenuGroup 1\n+    StrCmp $R0 \">\" no_smgroup\n+no_smgroup:\n+    Pop $R0\n+SectionEnd\n+\n+# Installer functions\n+Function .onInit\n+    InitPluginsDir\n+FunctionEnd\n+\n+# Uninstaller functions\n+Function un.onInit\n+    ReadRegStr $INSTDIR HKCU \"${REGKEY}\" Path\n+    !insertmacro MUI_STARTMENU_GETFOLDER Application $StartMenuGroup\n+    !insertmacro SELECT_UNSECTION Main ${UNSEC0000}\n+FunctionEnd",
        "previous_filename": "share/setup.nsi"
      }
    ]
  },
  {
    "sha": "bad255871be523773c07fc3ac64f7d5f03032041",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYWQyNTU4NzFiZTUyMzc3M2MwN2ZjM2FjNjRmN2Q1ZjAzMDMyMDQx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-25T23:34:41Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-07-25T23:34:41Z"
      },
      "message": "autotools: remove timestamps from qt generated files",
      "tree": {
        "sha": "fb79f42d64818140a4e983c8a0581626e17992d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb79f42d64818140a4e983c8a0581626e17992d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bad255871be523773c07fc3ac64f7d5f03032041",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bad255871be523773c07fc3ac64f7d5f03032041",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bad255871be523773c07fc3ac64f7d5f03032041",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bad255871be523773c07fc3ac64f7d5f03032041/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7784ea19193c6c742ba229d572ead8db8eb2c9da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7784ea19193c6c742ba229d572ead8db8eb2c9da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7784ea19193c6c742ba229d572ead8db8eb2c9da"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0737e0fff6b6a945933221afc9e34dd224b4d0fa",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bad255871be523773c07fc3ac64f7d5f03032041/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bad255871be523773c07fc3ac64f7d5f03032041/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=bad255871be523773c07fc3ac64f7d5f03032041",
        "patch": "@@ -20,12 +20,18 @@ $(LIBBITCOINQT):\n \n ui_%.h: %.ui\n \t@test -f $(UIC) && $(UIC) -o $@ $< || echo error: could not build $@\n+\tsed -i '/^\\*\\*.*Created:/d' $@\n+\tsed -i '/^\\*\\*.*by:/d' $@\n \n %.moc: %.cpp\n \t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\tsed -i '/^\\*\\*.*Created:/d' $@\n+\tsed -i '/^\\*\\*.*by:/d' $@\n \n moc_%.cpp: %.h\n \t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\tsed -i '/^\\*\\*.*Created:/d' $@\n+\tsed -i '/^\\*\\*.*by:/d' $@\n \n %.qm: %.ts\n \t@test -f $(LRELEASE) && $(LRELEASE) $< $@ || \\"
      },
      {
        "sha": "58a13a48527199eee7dd1559355d86abf2e8c2c3",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bad255871be523773c07fc3ac64f7d5f03032041/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bad255871be523773c07fc3ac64f7d5f03032041/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=bad255871be523773c07fc3ac64f7d5f03032041",
        "patch": "@@ -127,6 +127,8 @@ bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN) $(LIBLEVELDB) $(LIBMEMENV) \\\n $(QT_QRC_CPP): $(QT_QRC) $(QT_QM)\n \t@test -f $(RCC) && $(RCC) -name bitcoin -o $@ $< || \\\n \t  echo error: could not build $@\n+\tsed -i '/^\\*\\*.*Created:/d' $@\n+\tsed -i '/^\\*\\*.*by:/d' $@\n \n CLEANFILES = $(BUILT_SOURCES)\n "
      }
    ]
  }
]