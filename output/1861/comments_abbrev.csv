jgarzik,2012-09-24T07:46:31Z,"lockunspent does the minimum necessary to accomplish the use case at hand (protecting smartcoins from being spent), but I'm open to other opinions, if people see other uses.\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8809641,8809641,
BitcoinPullTester,2012-09-24T18:35:31Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6c5b4dc30d2b9538cc154750d96efa1849eb42eb for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8829423,8829423,
gavinandresen,2012-09-24T20:35:40Z,"I like the simplicity; I vote for a listlockunspent to get the current list of locked inputs, which should at the very least be handy when debugging.\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8833698,8833698,
xblitz,2012-09-25T19:10:51Z,I would rather prefer that listunspent to have an option to filter which one we want ( locked || unlocked || locked && unlocked )  .. and both would be the default   instead of having adding new rpc calls\n,https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8866380,8866380,
jgarzik,2012-09-25T19:18:32Z,"More, simple RPC calls are preferred over making existing RPC calls ever more complicated.\n\n""listunspent"" displays the coins available for spending... let's not make it more complicated than that.\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8866655,8866655,
jgarzik,2012-09-27T00:56:27Z,"Updated to add RPC ""listlockunspent"", and to use RPCTypeCheck()\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8915161,8915161,
xblitz,2012-09-27T13:06:31Z,"would it be more proper for the command to be called ""listlockedunspent"" ?\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8935332,8935332,
BitcoinPullTester,2012-09-27T15:22:14Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/67e7021f3183bfeee047f5879cbd04ff974c3f3c for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8939923,8939923,
BitcoinPullTester,2012-09-28T03:53:16Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/029e4952f6351b91efdd8dfef1d2335860575e9d for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-8963992,8963992,
gmaxwell,2012-10-20T23:45:01Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-9638093,9638093,
BitcoinPullTester,2012-10-21T05:06:34Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ab76dd1a08f2fa524db9c0cdc02a51f0ad77ead8 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-9639854,9639854,
jgarzik,2012-11-16T02:32:48Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-10434604,10434604,
BitcoinPullTester,2012-11-23T21:41:37Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/fdbb537d263497529c8f9deb0bb98371530839c3 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-10670299,10670299,
gavinandresen,2012-12-01T00:16:33Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1861#issuecomment-10909457,10909457,
luke-jr,2012-09-24T07:27:11Z,"It might be nice to accept a String address or txid to allow simpler locks (lock all to address, or all output from txid).\n",https://github.com/bitcoin/bitcoin/pull/1861#discussion_r1670715,1670715,src/rpcwallet.cpp
luke-jr,2012-09-24T07:28:05Z,Wouldn't it make more sense to add a boolean/methods to COutPoint?\n,https://github.com/bitcoin/bitcoin/pull/1861#discussion_r1670720,1670720,src/rpcwallet.cpp
gavinandresen,2012-09-24T20:31:27Z,"I wrote a RPCTypeCheck(object,...) method for the raw transactions API that would save you a few lines of code and should give slightly nicer error messages.\n\nWould be:\nRPCTypeCheck(o, boost::assign::map_list_of(""txid"", str_type)(""vout"", int_type));\n",https://github.com/bitcoin/bitcoin/pull/1861#discussion_r1677484,1677484,src/rpcwallet.cpp
xblitz,2012-09-27T14:09:13Z,was this tested?  maybe this could work if we ret.push_back(o) ...  but it still doesnt show locked unspent outputs\n,https://github.com/bitcoin/bitcoin/pull/1861#discussion_r1707092,1707092,src/rpcwallet.cpp
sipa,2012-09-28T14:12:56Z,No please... outpoints shouldn't know whether they are part of some wallet structure!\n,https://github.com/bitcoin/bitcoin/pull/1861#discussion_r1717634,1717634,src/rpcwallet.cpp
jgarzik,2012-09-29T00:10:15Z,"@sipa RPC ""listunspent"" already works on the wallet structure, thus ""lockunspent"" works with the information found in ""listunspent""\n\nMaking ""lockunspent"" work globally, even for 'sendrawtransactions' coins not in the wallet is doable, but it creates a disconnect between the dataset manipulated by ""listunspent"" and the one manipulated by ""lockunspent"".\n\nIs that disconnect acceptable?\n",https://github.com/bitcoin/bitcoin/pull/1861#discussion_r1722704,1722704,src/rpcwallet.cpp
sipa,2012-10-07T13:56:09Z,@jgarzik I'm only replying to Luke's suggestion to have the locking functionality inside COutPoint. That would be a bad idea.\n\nNo objection to having a method on a wallet to lock a certain output.\n,https://github.com/bitcoin/bitcoin/pull/1861#discussion_r1780648,1780648,src/rpcwallet.cpp
