[
  {
    "sha": "6ddf861078e465dcb89e14e8cad6229c7abf64bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGRmODYxMDc4ZTQ2NWRjYjg5ZTE0ZThjYWQ2MjI5YzdhYmY2NGJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-05-07T19:49:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-05-09T05:45:47Z"
      },
      "message": "Organize optionsdialog (split off Window and Network page)",
      "tree": {
        "sha": "1186f1e29bbf9aec3eb18b705f9f1eca075e4714",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1186f1e29bbf9aec3eb18b705f9f1eca075e4714"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ddf861078e465dcb89e14e8cad6229c7abf64bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ddf861078e465dcb89e14e8cad6229c7abf64bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ddf861078e465dcb89e14e8cad6229c7abf64bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ddf861078e465dcb89e14e8cad6229c7abf64bb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6bdb06a7b1d07a0b8ce7f1977cb1511e37dfe0b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6bdb06a7b1d07a0b8ce7f1977cb1511e37dfe0b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6bdb06a7b1d07a0b8ce7f1977cb1511e37dfe0b6"
      }
    ],
    "stats": {
      "total": 262,
      "additions": 160,
      "deletions": 102
    },
    "files": [
      {
        "sha": "56dc87c8faf16242d9b785c847dd0d071f95cdb1",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 157,
        "deletions": 95,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ddf861078e465dcb89e14e8cad6229c7abf64bb/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ddf861078e465dcb89e14e8cad6229c7abf64bb/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=6ddf861078e465dcb89e14e8cad6229c7abf64bb",
        "patch": "@@ -20,72 +20,96 @@\n #include <QRegExpValidator>\n #include <QDialogButtonBox>\n \n-/* First page of options */\n-class MainOptionsPage : public QWidget\n+class OptionsPage: public QWidget\n+{\n+    Q_OBJECT\n+public:\n+    explicit OptionsPage(QWidget *parent=0): QWidget(parent) {}\n+\n+    virtual void setMapper(MonitoredDataMapper *mapper) = 0;\n+};\n+\n+class MainOptionsPage: public OptionsPage\n {\n     Q_OBJECT\n public:\n     explicit MainOptionsPage(QWidget *parent=0);\n \n-    void setMapper(MonitoredDataMapper *mapper);\n+    virtual void setMapper(MonitoredDataMapper *mapper);\n+private:\n+    QCheckBox *detach_database;\n+    BitcoinAmountField *fee_edit;\n+};\n+\n+class WindowOptionsPage: public OptionsPage\n+{\n+    Q_OBJECT\n+public:\n+    explicit WindowOptionsPage(QWidget *parent=0);\n+\n+    virtual void setMapper(MonitoredDataMapper *mapper);\n private:\n     QCheckBox *bitcoin_at_startup;\n #ifndef Q_WS_MAC\n     QCheckBox *minimize_to_tray;\n #endif\n-    QCheckBox *map_port_upnp;\n #ifndef Q_WS_MAC\n     QCheckBox *minimize_on_close;\n #endif\n-    QCheckBox *connect_socks4;\n-    QCheckBox *detach_database;\n-    QLineEdit *proxy_ip;\n-    QLineEdit *proxy_port;\n-    BitcoinAmountField *fee_edit;\n-\n-signals:\n-\n-public slots:\n-\n };\n \n-class DisplayOptionsPage : public QWidget\n+class DisplayOptionsPage: public OptionsPage\n {\n     Q_OBJECT\n public:\n     explicit DisplayOptionsPage(QWidget *parent=0);\n \n-    void setMapper(MonitoredDataMapper *mapper);\n+    virtual void setMapper(MonitoredDataMapper *mapper);\n private:\n     QValueComboBox *unit;\n     QCheckBox *display_addresses;\n-signals:\n+};\n \n-public slots:\n+class NetworkOptionsPage: public OptionsPage\n+{\n+    Q_OBJECT\n+public:\n+    explicit NetworkOptionsPage(QWidget *parent=0);\n \n+    virtual void setMapper(MonitoredDataMapper *mapper);\n+private:\n+    QCheckBox *map_port_upnp;\n+    QCheckBox *connect_socks4;\n+    QLineEdit *proxy_ip;\n+    QLineEdit *proxy_port;\n+    BitcoinAmountField *fee_edit;\n };\n \n+\n #include \"optionsdialog.moc\"\n \n OptionsDialog::OptionsDialog(QWidget *parent):\n     QDialog(parent), contents_widget(0), pages_widget(0),\n-    model(0), main_page(0), display_page(0)\n+    model(0)\n {\n     contents_widget = new QListWidget();\n     contents_widget->setMaximumWidth(128);\n \n     pages_widget = new QStackedWidget();\n-    pages_widget->setMinimumWidth(300);\n+    pages_widget->setMinimumWidth(500);\n+    pages_widget->setMinimumHeight(300);\n \n-    QListWidgetItem *item_main = new QListWidgetItem(tr(\"Main\"));\n-    contents_widget->addItem(item_main);\n-    main_page = new MainOptionsPage(this);\n-    pages_widget->addWidget(main_page);\n+    pages.append(new MainOptionsPage(this));\n+    pages.append(new NetworkOptionsPage(this));\n+    pages.append(new WindowOptionsPage(this));\n+    pages.append(new DisplayOptionsPage(this));\n \n-    QListWidgetItem *item_display = new QListWidgetItem(tr(\"Display\"));\n-    contents_widget->addItem(item_display);\n-    display_page = new DisplayOptionsPage(this);\n-    pages_widget->addWidget(display_page);\n+    foreach(OptionsPage *page, pages)\n+    {\n+        QListWidgetItem *item = new QListWidgetItem(page->windowTitle());\n+        contents_widget->addItem(item);\n+        pages_widget->addWidget(page);\n+    }\n \n     contents_widget->setCurrentRow(0);\n \n@@ -125,8 +149,11 @@ void OptionsDialog::setModel(OptionsModel *model)\n     this->model = model;\n \n     mapper->setModel(model);\n-    main_page->setMapper(mapper);\n-    display_page->setMapper(mapper);\n+\n+    foreach(OptionsPage *page, pages)\n+    {\n+        page->setMapper(mapper);\n+    }\n \n     mapper->toFirst();\n }\n@@ -163,11 +190,86 @@ void OptionsDialog::disableApply()\n     apply_button->setEnabled(false);\n }\n \n+/* Main options */\n MainOptionsPage::MainOptionsPage(QWidget *parent):\n-        QWidget(parent)\n+        OptionsPage(parent)\n+{\n+    QVBoxLayout *layout = new QVBoxLayout();\n+    setWindowTitle(tr(\"Main\"));\n+\n+    QLabel *fee_help = new QLabel(tr(\"Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.\"));\n+    fee_help->setWordWrap(true);\n+    layout->addWidget(fee_help);\n+\n+    QHBoxLayout *fee_hbox = new QHBoxLayout();\n+    fee_hbox->addSpacing(18);\n+    QLabel *fee_label = new QLabel(tr(\"Pay transaction &fee\"));\n+    fee_hbox->addWidget(fee_label);\n+    fee_edit = new BitcoinAmountField();\n+\n+    fee_label->setBuddy(fee_edit);\n+    fee_hbox->addWidget(fee_edit);\n+    fee_hbox->addStretch(1);\n+\n+    layout->addLayout(fee_hbox);\n+\n+    detach_database = new QCheckBox(tr(\"Detach databases at shutdown\"));\n+    detach_database->setToolTip(tr(\"Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.\"));\n+    layout->addWidget(detach_database);\n+\n+    layout->addStretch(1); // Extra space at bottom\n+    setLayout(layout);\n+}\n+\n+void MainOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+{\n+    // Map model to widgets\n+    mapper->addMapping(fee_edit, OptionsModel::Fee);\n+    mapper->addMapping(detach_database, OptionsModel::DetachDatabases);\n+}\n+\n+/* Display options */\n+DisplayOptionsPage::DisplayOptionsPage(QWidget *parent):\n+        OptionsPage(parent)\n {\n+    setWindowTitle(tr(\"Display\"));\n+\n     QVBoxLayout *layout = new QVBoxLayout();\n \n+    QHBoxLayout *unit_hbox = new QHBoxLayout();\n+    unit_hbox->addSpacing(18);\n+    QLabel *unit_label = new QLabel(tr(\"&Unit to show amounts in: \"));\n+    unit_hbox->addWidget(unit_label);\n+    unit = new QValueComboBox(this);\n+    unit->setModel(new BitcoinUnits(this));\n+    unit->setToolTip(tr(\"Choose the default subdivision unit to show in the interface, and when sending coins\"));\n+\n+    unit_label->setBuddy(unit);\n+    unit_hbox->addWidget(unit);\n+\n+    layout->addLayout(unit_hbox);\n+\n+    display_addresses = new QCheckBox(tr(\"&Display addresses in transaction list\"), this);\n+    display_addresses->setToolTip(tr(\"Whether to show Bitcoin addresses in the transaction list\"));\n+    layout->addWidget(display_addresses);\n+\n+    layout->addStretch();\n+    setLayout(layout);\n+}\n+\n+void DisplayOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+{\n+    mapper->addMapping(unit, OptionsModel::DisplayUnit);\n+    mapper->addMapping(display_addresses, OptionsModel::DisplayAddresses);\n+}\n+\n+/* Window options */\n+WindowOptionsPage::WindowOptionsPage(QWidget *parent):\n+        OptionsPage(parent)\n+{\n+    QVBoxLayout *layout = new QVBoxLayout();\n+    setWindowTitle(tr(\"Window\"));\n+\n     bitcoin_at_startup = new QCheckBox(tr(\"&Start Bitcoin on window system startup\"));\n     bitcoin_at_startup->setToolTip(tr(\"Automatically start Bitcoin after the computer is turned on\"));\n     layout->addWidget(bitcoin_at_startup);\n@@ -182,6 +284,29 @@ MainOptionsPage::MainOptionsPage(QWidget *parent):\n     layout->addWidget(minimize_on_close);\n #endif\n \n+    layout->addStretch(1); // Extra space at bottom\n+    setLayout(layout);\n+}\n+\n+void WindowOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+{\n+    // Map model to widgets\n+    mapper->addMapping(bitcoin_at_startup, OptionsModel::StartAtStartup);\n+#ifndef Q_WS_MAC\n+    mapper->addMapping(minimize_to_tray, OptionsModel::MinimizeToTray);\n+#endif\n+#ifndef Q_WS_MAC\n+    mapper->addMapping(minimize_on_close, OptionsModel::MinimizeOnClose);\n+#endif\n+}\n+\n+/* Network options */\n+NetworkOptionsPage::NetworkOptionsPage(QWidget *parent):\n+        OptionsPage(parent)\n+{\n+    QVBoxLayout *layout = new QVBoxLayout();\n+    setWindowTitle(tr(\"Network\"));\n+\n     map_port_upnp = new QCheckBox(tr(\"Map port using &UPnP\"));\n     map_port_upnp->setToolTip(tr(\"Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.\"));\n     layout->addWidget(map_port_upnp);\n@@ -211,30 +336,9 @@ MainOptionsPage::MainOptionsPage(QWidget *parent):\n     proxy_port_label->setBuddy(proxy_port);\n     proxy_hbox->addWidget(proxy_port);\n     proxy_hbox->addStretch(1);\n-\n     layout->addLayout(proxy_hbox);\n-    QLabel *fee_help = new QLabel(tr(\"Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.\"));\n-    fee_help->setWordWrap(true);\n-    layout->addWidget(fee_help);\n-\n-    QHBoxLayout *fee_hbox = new QHBoxLayout();\n-    fee_hbox->addSpacing(18);\n-    QLabel *fee_label = new QLabel(tr(\"Pay transaction &fee\"));\n-    fee_hbox->addWidget(fee_label);\n-    fee_edit = new BitcoinAmountField();\n-\n-    fee_label->setBuddy(fee_edit);\n-    fee_hbox->addWidget(fee_edit);\n-    fee_hbox->addStretch(1);\n-\n-    layout->addLayout(fee_hbox);\n-\n-    detach_database = new QCheckBox(tr(\"Detach databases at shutdown\"));\n-    detach_database->setToolTip(tr(\"Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.\"));\n-    layout->addWidget(detach_database);\n \n     layout->addStretch(1); // Extra space at bottom\n-\n     setLayout(layout);\n \n     connect(connect_socks4, SIGNAL(toggled(bool)), proxy_ip, SLOT(setEnabled(bool)));\n@@ -245,53 +349,11 @@ MainOptionsPage::MainOptionsPage(QWidget *parent):\n #endif\n }\n \n-void MainOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+void NetworkOptionsPage::setMapper(MonitoredDataMapper *mapper)\n {\n     // Map model to widgets\n-    mapper->addMapping(bitcoin_at_startup, OptionsModel::StartAtStartup);\n-#ifndef Q_WS_MAC\n-    mapper->addMapping(minimize_to_tray, OptionsModel::MinimizeToTray);\n-#endif\n     mapper->addMapping(map_port_upnp, OptionsModel::MapPortUPnP);\n-#ifndef Q_WS_MAC\n-    mapper->addMapping(minimize_on_close, OptionsModel::MinimizeOnClose);\n-#endif\n     mapper->addMapping(connect_socks4, OptionsModel::ConnectSOCKS4);\n     mapper->addMapping(proxy_ip, OptionsModel::ProxyIP);\n     mapper->addMapping(proxy_port, OptionsModel::ProxyPort);\n-    mapper->addMapping(fee_edit, OptionsModel::Fee);\n-    mapper->addMapping(detach_database, OptionsModel::DetachDatabases);\n-}\n-\n-DisplayOptionsPage::DisplayOptionsPage(QWidget *parent):\n-        QWidget(parent)\n-{\n-    QVBoxLayout *layout = new QVBoxLayout();\n-\n-    QHBoxLayout *unit_hbox = new QHBoxLayout();\n-    unit_hbox->addSpacing(18);\n-    QLabel *unit_label = new QLabel(tr(\"&Unit to show amounts in: \"));\n-    unit_hbox->addWidget(unit_label);\n-    unit = new QValueComboBox(this);\n-    unit->setModel(new BitcoinUnits(this));\n-    unit->setToolTip(tr(\"Choose the default subdivision unit to show in the interface, and when sending coins\"));\n-\n-    unit_label->setBuddy(unit);\n-    unit_hbox->addWidget(unit);\n-\n-    layout->addLayout(unit_hbox);\n-\n-    display_addresses = new QCheckBox(tr(\"&Display addresses in transaction list\"), this);\n-    display_addresses->setToolTip(tr(\"Whether to show Bitcoin addresses in the transaction list\"));\n-    layout->addWidget(display_addresses);\n-\n-    layout->addStretch();\n-\n-    setLayout(layout);\n-}\n-\n-void DisplayOptionsPage::setMapper(MonitoredDataMapper *mapper)\n-{\n-    mapper->addMapping(unit, OptionsModel::DisplayUnit);\n-    mapper->addMapping(display_addresses, OptionsModel::DisplayAddresses);\n }"
      },
      {
        "sha": "ea0cbb8bfcc199e88af6090e338221b50919454f",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ddf861078e465dcb89e14e8cad6229c7abf64bb/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ddf861078e465dcb89e14e8cad6229c7abf64bb/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=6ddf861078e465dcb89e14e8cad6229c7abf64bb",
        "patch": "@@ -2,6 +2,7 @@\n #define OPTIONSDIALOG_H\n \n #include <QDialog>\n+#include <QList>\n \n QT_BEGIN_NAMESPACE\n class QStackedWidget;\n@@ -10,8 +11,7 @@ class QListWidgetItem;\n class QPushButton;\n QT_END_NAMESPACE\n class OptionsModel;\n-class MainOptionsPage;\n-class DisplayOptionsPage;\n+class OptionsPage;\n class MonitoredDataMapper;\n \n /** Preferences dialog. */\n@@ -43,11 +43,7 @@ private slots:\n     MonitoredDataMapper *mapper;\n     QPushButton *apply_button;\n \n-    // Pages\n-    MainOptionsPage *main_page;\n-    DisplayOptionsPage *display_page;\n-\n-    void setupMainPage();\n+    QList<OptionsPage*> pages;\n };\n \n #endif // OPTIONSDIALOG_H"
      }
    ]
  },
  {
    "sha": "5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWMxMTRjNzU2NmI3ZDNhYTMyYjkzMTI0Y2NiNWU1ZTM2NGVkYzI1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-05-08T21:03:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-05-09T05:45:47Z"
      },
      "message": "Make it possible to set user interface language from options dialog",
      "tree": {
        "sha": "2ef59f40ec0827a957255efb1eaa7fa1e05a12aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ef59f40ec0827a957255efb1eaa7fa1e05a12aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ddf861078e465dcb89e14e8cad6229c7abf64bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ddf861078e465dcb89e14e8cad6229c7abf64bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ddf861078e465dcb89e14e8cad6229c7abf64bb"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 58,
      "deletions": 8
    },
    "files": [
      {
        "sha": "6b4e037cc54170397f97ea4d430c604affb9f9f6",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 1,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
        "patch": "@@ -19,6 +19,8 @@\n #include <QDoubleValidator>\n #include <QRegExpValidator>\n #include <QDialogButtonBox>\n+#include <QDir>\n+#include <QMessageBox>\n \n class OptionsPage: public QWidget\n {\n@@ -66,8 +68,12 @@ class DisplayOptionsPage: public OptionsPage\n \n     virtual void setMapper(MonitoredDataMapper *mapper);\n private:\n+    QValueComboBox *lang;\n     QValueComboBox *unit;\n     QCheckBox *display_addresses;\n+    bool restart_warning_displayed;\n+private slots:\n+    void showRestartWarning();\n };\n \n class NetworkOptionsPage: public OptionsPage\n@@ -230,12 +236,33 @@ void MainOptionsPage::setMapper(MonitoredDataMapper *mapper)\n \n /* Display options */\n DisplayOptionsPage::DisplayOptionsPage(QWidget *parent):\n-        OptionsPage(parent)\n+    OptionsPage(parent), restart_warning_displayed(false)\n {\n     setWindowTitle(tr(\"Display\"));\n \n     QVBoxLayout *layout = new QVBoxLayout();\n \n+    QHBoxLayout *lang_hbox = new QHBoxLayout();\n+    lang_hbox->addSpacing(18);\n+    QLabel *lang_label = new QLabel(tr(\"User Interface &Language: \"));\n+    lang_hbox->addWidget(lang_label);\n+    lang = new QValueComboBox(this);\n+    // Make list of languages\n+    QDir translations(\":translations\");\n+    lang->addItem(\"(default)\", QVariant(\"\"));\n+    foreach(const QString &langStr, translations.entryList())\n+    {\n+        lang->addItem(langStr, QVariant(langStr));\n+    }\n+\n+    lang->setToolTip(tr(\"The user interface language can be set here. This setting will only take effect after restarting Bitcoin.\"));\n+    connect(lang, SIGNAL(activated(int)), this, SLOT(showRestartWarning()));\n+\n+    lang_label->setBuddy(lang);\n+    lang_hbox->addWidget(lang);\n+\n+    layout->addLayout(lang_hbox);\n+\n     QHBoxLayout *unit_hbox = new QHBoxLayout();\n     unit_hbox->addSpacing(18);\n     QLabel *unit_label = new QLabel(tr(\"&Unit to show amounts in: \"));\n@@ -259,10 +286,20 @@ DisplayOptionsPage::DisplayOptionsPage(QWidget *parent):\n \n void DisplayOptionsPage::setMapper(MonitoredDataMapper *mapper)\n {\n+    mapper->addMapping(lang, OptionsModel::Language);\n     mapper->addMapping(unit, OptionsModel::DisplayUnit);\n     mapper->addMapping(display_addresses, OptionsModel::DisplayAddresses);\n }\n \n+void DisplayOptionsPage::showRestartWarning()\n+{\n+    if(!restart_warning_displayed)\n+    {\n+        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n+        restart_warning_displayed = true;\n+    }\n+}\n+\n /* Window options */\n WindowOptionsPage::WindowOptionsPage(QWidget *parent):\n         OptionsPage(parent)"
      },
      {
        "sha": "78448d3ee1c4cd85bcb277f15c8a6e0078261685",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
        "patch": "@@ -21,6 +21,7 @@ void OptionsModel::Init()\n     fMinimizeToTray = settings.value(\"fMinimizeToTray\", false).toBool();\n     fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n     nTransactionFee = settings.value(\"nTransactionFee\").toLongLong();\n+    language = settings.value(\"language\", \"\").toString();\n \n     // These are shared with core bitcoin; we want\n     // command-line options to override the GUI settings:\n@@ -30,6 +31,8 @@ void OptionsModel::Init()\n         SoftSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString());\n     if (settings.contains(\"detachDB\"))\n         SoftSetBoolArg(\"-detachdb\", settings.value(\"detachDB\").toBool());\n+    if (!language.isEmpty())\n+        SoftSetArg(\"-lang\", language.toStdString());\n }\n \n bool OptionsModel::Upgrade()\n@@ -125,6 +128,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return QVariant(bDisplayAddresses);\n         case DetachDatabases:\n             return QVariant(fDetachDB);\n+        case Language:\n+            return settings.value(\"language\", \"\");\n         default:\n             return QVariant();\n         }\n@@ -213,6 +218,10 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             settings.setValue(\"detachDB\", fDetachDB);\n             }\n             break;\n+        case Language: {\n+            settings.setValue(\"language\", value);\n+            }\n+            break;\n         default:\n             break;\n         }"
      },
      {
        "sha": "4315a33f8c7ba93cd2ac89df7b09afaf61bb9051",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
        "patch": "@@ -27,6 +27,7 @@ class OptionsModel : public QAbstractListModel\n         DisplayUnit, // BitcoinUnits::Unit\n         DisplayAddresses, // bool\n         DetachDatabases, // bool\n+        Language, // QString\n         OptionIDRowCount,\n     };\n \n@@ -45,11 +46,13 @@ class OptionsModel : public QAbstractListModel\n     bool getMinimizeOnClose();\n     int getDisplayUnit();\n     bool getDisplayAddresses();\n+    QString getLanguage() { return language; }\n private:\n     int nDisplayUnit;\n     bool bDisplayAddresses;\n     bool fMinimizeToTray;\n     bool fMinimizeOnClose;\n+    QString language;\n signals:\n     void displayUnitChanged(int unit);\n "
      },
      {
        "sha": "d7ce3d0130b47d7349688a612bec70fe9bcb0876",
        "filename": "src/qt/qvaluecombobox.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/qvaluecombobox.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/qvaluecombobox.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qvaluecombobox.cpp?ref=5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
        "patch": "@@ -6,12 +6,12 @@ QValueComboBox::QValueComboBox(QWidget *parent) :\n     connect(this, SIGNAL(currentIndexChanged(int)), this, SLOT(handleSelectionChanged(int)));\n }\n \n-int QValueComboBox::value() const\n+QVariant QValueComboBox::value() const\n {\n-    return itemData(currentIndex(), role).toInt();\n+    return itemData(currentIndex(), role);\n }\n \n-void QValueComboBox::setValue(int value)\n+void QValueComboBox::setValue(const QVariant &value)\n {\n     setCurrentIndex(findData(value, role));\n }"
      },
      {
        "sha": "1a47bb6565c62dbad048e613d5d2bf1d41f0f4c5",
        "filename": "src/qt/qvaluecombobox.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/qvaluecombobox.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ac114c7566b7d3aa32b93124ccb5e5e364edc25/src/qt/qvaluecombobox.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qvaluecombobox.h?ref=5ac114c7566b7d3aa32b93124ccb5e5e364edc25",
        "patch": "@@ -2,19 +2,20 @@\n #define QVALUECOMBOBOX_H\n \n #include <QComboBox>\n+#include <QVariant>\n \n /* QComboBox that can be used with QDataWidgetMapper to select ordinal values from a model. */\n class QValueComboBox : public QComboBox\n {\n     Q_OBJECT\n-    Q_PROPERTY(int value READ value WRITE setValue NOTIFY valueChanged USER true)\n+    Q_PROPERTY(QVariant value READ value WRITE setValue NOTIFY valueChanged USER true)\n public:\n     explicit QValueComboBox(QWidget *parent = 0);\n \n-    int value() const;\n-    void setValue(int value);\n+    QVariant value() const;\n+    void setValue(const QVariant &value);\n \n-    /** Specify model role to use as ordinal value */\n+    /** Specify model role to use as ordinal value (defaults to Qt::UserRole) */\n     void setRole(int role);\n \n signals:"
      }
    ]
  }
]