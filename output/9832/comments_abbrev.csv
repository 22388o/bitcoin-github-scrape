laanwj,2017-03-03T15:14:38Z,"Makes sense.\nutACK https://github.com/bitcoin/bitcoin/pull/9832/commits/5737be099f83dfb367a342c36f7f0ae5ea31bc29",https://github.com/bitcoin/bitcoin/pull/9832#issuecomment-283979982,283979982,
jonasschnelli,2017-03-03T15:32:48Z,"Thanks.\nutACK 5737be099f83dfb367a342c36f7f0ae5ea31bc29.\nThis is also required for #9662.",https://github.com/bitcoin/bitcoin/pull/9832#issuecomment-283984957,283984957,
NicolasDorier,2017-03-05T16:51:11Z,nits of @jnewbery addressed,https://github.com/bitcoin/bitcoin/pull/9832#issuecomment-284242676,284242676,
MarcoFalke,2017-03-05T17:24:37Z,Please squash.\n,https://github.com/bitcoin/bitcoin/pull/9832#issuecomment-284244970,284244970,
NicolasDorier,2017-03-06T08:22:11Z,squashed @MarcoFalke ,https://github.com/bitcoin/bitcoin/pull/9832#issuecomment-284330629,284330629,
MarcoFalke,2017-03-06T09:44:22Z,Post merge utACK 025dec0e5bf001ba297f7430affe4098627ea5ce,https://github.com/bitcoin/bitcoin/pull/9832#issuecomment-284348455,284348455,
jnewbery,2017-03-03T20:22:43Z,"I don't think this if/else construction is needed. subprocess.Popen's stderr argument defaults to None, so you can just call `bitcoind_processes[i] = subprocess.Popen(args, stderr=stderr)`",https://github.com/bitcoin/bitcoin/pull/9832#discussion_r104235233,104235233,qa/rpc-tests/test_framework/util.py
jnewbery,2017-03-03T20:25:40Z,"yuck! raising an exception in expectation of catching it in the very next line.\n\nI think try/except/else is a much cleaner construction, as in:\n\n```python\ntry:\n    thing_we_expect_to_fail()\nexcept ExceptionType as e:\n    do_some_asserts_on_the_exception_raised()\nelse:\n    # oops, we were expecting an exception\n    assert False, ""we were expecting an exception!""\n```",https://github.com/bitcoin/bitcoin/pull/9832#discussion_r104235719,104235719,qa/rpc-tests/test_framework/util.py
jnewbery,2017-03-03T20:29:23Z,"Consider opening the file using the `with log_stderr as...` form. That means the file will be closed automatically (even if an exception is raised on the way), and you won't have to close it yourself with the `finally` branch at the bottom.",https://github.com/bitcoin/bitcoin/pull/9832#discussion_r104236301,104236301,qa/rpc-tests/test_framework/util.py
jnewbery,2017-03-03T20:30:51Z,"minor nit: assert is a statement, not a function. This should be:\n\nassert 'bitcoind exited' in str(e)",https://github.com/bitcoin/bitcoin/pull/9832#discussion_r104236548,104236548,qa/rpc-tests/test_framework/util.py
MarcoFalke,2017-03-06T09:44:00Z,"\n\nNit: No need to stop the node here. This is done by the test framework.\n",https://github.com/bitcoin/bitcoin/pull/9832#discussion_r104375439,104375439,qa/rpc-tests/test_framework/util.py
NicolasDorier,2017-03-06T11:20:49Z,"It does need to be stopped, or this function would not be side effect free.\n\nEDIT: Ah no it does not, as if it passes here, the test is finished, which would close the node anyway.",https://github.com/bitcoin/bitcoin/pull/9832#discussion_r104392299,104392299,qa/rpc-tests/test_framework/util.py
MarcoFalke,2017-03-06T11:43:42Z,"Right this line is only executed in exceptional circumstances, in which case the whole frameworks shuts down.",https://github.com/bitcoin/bitcoin/pull/9832#discussion_r104395601,104395601,qa/rpc-tests/test_framework/util.py
