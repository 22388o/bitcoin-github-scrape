[
  {
    "sha": "025dec0e5bf001ba297f7430affe4098627ea5ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjVkZWMwZTViZjAwMWJhMjk3Zjc0MzBhZmZlNDA5ODYyN2VhNWNl",
    "commit": {
      "author": {
        "name": "NicolasDorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2017-02-23T06:16:44Z"
      },
      "committer": {
        "name": "NicolasDorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2017-03-06T08:21:03Z"
      },
      "message": "[qa] assert_start_raises_init_error",
      "tree": {
        "sha": "0dcdee4ae350a160c4755e165f66b4a1a148d105",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0dcdee4ae350a160c4755e165f66b4a1a148d105"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/025dec0e5bf001ba297f7430affe4098627ea5ce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/025dec0e5bf001ba297f7430affe4098627ea5ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/025dec0e5bf001ba297f7430affe4098627ea5ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/025dec0e5bf001ba297f7430affe4098627ea5ce/comments",
    "author": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bed5b30a5622782b35d0d28fccde979e188901f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bed5b30a5622782b35d0d28fccde979e188901f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bed5b30a5622782b35d0d28fccde979e188901f1"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 29,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2d96f29bbeb48463456cc148b2be3ac27721beb5",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 22,
        "deletions": 2,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/025dec0e5bf001ba297f7430affe4098627ea5ce/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/025dec0e5bf001ba297f7430affe4098627ea5ce/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=025dec0e5bf001ba297f7430affe4098627ea5ce",
        "patch": "@@ -19,6 +19,7 @@\n import random\n import shutil\n import subprocess\n+import tempfile\n import time\n import re\n import errno\n@@ -329,7 +330,7 @@ def _rpchost_to_args(rpchost):\n         rv += ['-rpcport=' + rpcport]\n     return rv\n \n-def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n+def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=None, stderr=None):\n     \"\"\"\n     Start a bitcoind and return RPC connection to it\n     \"\"\"\n@@ -338,7 +339,7 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n         binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n     args = [ binary, \"-datadir=\"+datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-mocktime=\"+str(get_mocktime()) ]\n     if extra_args is not None: args.extend(extra_args)\n-    bitcoind_processes[i] = subprocess.Popen(args)\n+    bitcoind_processes[i] = subprocess.Popen(args, stderr=stderr)\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n         print(\"start_node: bitcoind started, waiting for RPC to come up\")\n     url = rpc_url(i, rpchost)\n@@ -352,6 +353,25 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n \n     return proxy\n \n+def assert_start_raises_init_error(i, dirname, extra_args=None, expected_msg=None):\n+    with tempfile.SpooledTemporaryFile(max_size=2**16) as log_stderr:\n+        try:\n+            node = start_node(i, dirname, extra_args, stderr=log_stderr)\n+            stop_node(node, i)\n+        except Exception as e:\n+            assert 'bitcoind exited' in str(e) #node must have shutdown\n+            if expected_msg is not None:\n+                log_stderr.seek(0)\n+                stderr = log_stderr.read().decode('utf-8')\n+                if expected_msg not in stderr:\n+                    raise AssertionError(\"Expected error \\\"\" + expected_msg + \"\\\" not found in:\\n\" + stderr)\n+        else:\n+            if expected_msg is None:\n+                assert_msg = \"bitcoind should have exited with an error\"\n+            else:\n+                assert_msg = \"bitcoind should have exited with expected error \" + expected_msg\n+            raise AssertionError(assert_msg)\n+\n def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, timewait=None, binary=None):\n     \"\"\"\n     Start multiple bitcoinds, return RPC connections to them"
      },
      {
        "sha": "ba1ffee5252f47ecb2bfcf4762b6bd28f9414c2c",
        "filename": "qa/rpc-tests/wallet-hd.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/025dec0e5bf001ba297f7430affe4098627ea5ce/qa/rpc-tests/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/025dec0e5bf001ba297f7430affe4098627ea5ce/qa/rpc-tests/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-hd.py?ref=025dec0e5bf001ba297f7430affe4098627ea5ce",
        "patch": "@@ -9,6 +9,7 @@\n     start_node,\n     assert_equal,\n     connect_nodes_bi,\n+    assert_start_raises_init_error\n )\n import os\n import shutil\n@@ -30,6 +31,12 @@ def setup_network(self):\n     def run_test (self):\n         tmpdir = self.options.tmpdir\n \n+        # Make sure can't switch off usehd after wallet creation\n+        self.stop_node(1)\n+        assert_start_raises_init_error(1, self.options.tmpdir, ['-usehd=0'], 'already existing HD wallet')\n+        self.nodes[1] = start_node(1, self.options.tmpdir, self.node_args[1])\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n         # Make sure we use hd, keep masterkeyid\n         masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n         assert_equal(len(masterkeyid), 40)"
      }
    ]
  }
]