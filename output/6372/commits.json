[
  {
    "sha": "e3c42973b2f6fb1ceb277b2681e8ebccd6b588df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2M0Mjk3M2IyZjZmYjFjZWIyNzdiMjY4MWU4ZWJjY2Q2YjU4OGRm",
    "commit": {
      "author": {
        "name": "Paul Georgiou",
        "email": "pavlos1998@gmail.com",
        "date": "2015-07-10T16:21:21Z"
      },
      "committer": {
        "name": "Paul Georgiou",
        "email": "pavlos1998@gmail.com",
        "date": "2015-07-10T16:21:21Z"
      },
      "message": "Update Linearize tool to support Windows paths",
      "tree": {
        "sha": "0b2a02e4e38c03a406e51c477db135fc8231aea1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b2a02e4e38c03a406e51c477db135fc8231aea1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3c42973b2f6fb1ceb277b2681e8ebccd6b588df",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3c42973b2f6fb1ceb277b2681e8ebccd6b588df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3c42973b2f6fb1ceb277b2681e8ebccd6b588df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3c42973b2f6fb1ceb277b2681e8ebccd6b588df/comments",
    "author": {
      "login": "veqtrus",
      "id": 3521837,
      "node_id": "MDQ6VXNlcjM1MjE4Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3521837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veqtrus",
      "html_url": "https://github.com/veqtrus",
      "followers_url": "https://api.github.com/users/veqtrus/followers",
      "following_url": "https://api.github.com/users/veqtrus/following{/other_user}",
      "gists_url": "https://api.github.com/users/veqtrus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veqtrus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veqtrus/subscriptions",
      "organizations_url": "https://api.github.com/users/veqtrus/orgs",
      "repos_url": "https://api.github.com/users/veqtrus/repos",
      "events_url": "https://api.github.com/users/veqtrus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veqtrus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "veqtrus",
      "id": 3521837,
      "node_id": "MDQ6VXNlcjM1MjE4Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3521837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veqtrus",
      "html_url": "https://github.com/veqtrus",
      "followers_url": "https://api.github.com/users/veqtrus/followers",
      "following_url": "https://api.github.com/users/veqtrus/following{/other_user}",
      "gists_url": "https://api.github.com/users/veqtrus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veqtrus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veqtrus/subscriptions",
      "organizations_url": "https://api.github.com/users/veqtrus/orgs",
      "repos_url": "https://api.github.com/users/veqtrus/repos",
      "events_url": "https://api.github.com/users/veqtrus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veqtrus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66e546577315750ea36eeb26d96842cb768b4315",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66e546577315750ea36eeb26d96842cb768b4315",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66e546577315750ea36eeb26d96842cb768b4315"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "06f278f3b3c710ed237ee81b1357970b583bd457",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3c42973b2f6fb1ceb277b2681e8ebccd6b588df/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3c42973b2f6fb1ceb277b2681e8ebccd6b588df/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=e3c42973b2f6fb1ceb277b2681e8ebccd6b588df",
        "patch": "@@ -3,7 +3,7 @@ Construct a linear, no-fork, best version of the blockchain.\n \n ## Step 1: Download hash list\n \n-   $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n+    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n \n Required configuration file settings for linearize-hashes:\n * RPC: rpcuser, rpcpassword\n@@ -14,7 +14,7 @@ Optional config file setting for linearize-hashes:\n \n ## Step 2: Copy local block data\n \n-   $ ./linearize-data.py linearize.cfg\n+    $ ./linearize-data.py linearize.cfg\n \n Required configuration file settings:\n * \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n@@ -26,7 +26,7 @@ output.\n \n Optional config file setting for linearize-data:\n * \"netmagic\": network magic number\n-* \"max_out_sz\": maximum output file size (default 1000*1000*1000)\n+* \"max_out_sz\": maximum output file size (default `1000*1000*1000`)\n * \"split_timestamp\": Split files when a new month is first seen, in addition to\n reaching a maximum file size.\n * \"file_timestamp\": Set each file's last-modified time to that of the"
      },
      {
        "sha": "0f6fde2a6e05216873f29cb8ec47d416f5c484d3",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3c42973b2f6fb1ceb277b2681e8ebccd6b588df/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3c42973b2f6fb1ceb277b2681e8ebccd6b588df/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=e3c42973b2f6fb1ceb277b2681e8ebccd6b588df",
        "patch": "@@ -12,6 +12,7 @@\n import struct\n import re\n import os\n+import os.path\n import base64\n import httplib\n import sys\n@@ -115,19 +116,20 @@ def __init__(self, settings, blkindex, blkmap):\n \t\t\tself.setFileTime = True\n \t\tif settings['split_timestamp'] != 0:\n \t\t\tself.timestampSplit = True\n-        # Extents and cache for out-of-order blocks\n+\t\t# Extents and cache for out-of-order blocks\n \t\tself.blockExtents = {}\n \t\tself.outOfOrderData = {}\n \t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n \n \tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n-\t\tif not self.fileOutput and ((self.outsz + self.inLen) > self.maxOutSz):\n+\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n+\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n \t\t\tself.outF.close()\n \t\t\tif self.setFileTime:\n \t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n \t\t\tself.outF = None\n \t\t\tself.outFname = None\n-\t\t\tself.outFn = outFn + 1\n+\t\t\tself.outFn = self.outFn + 1\n \t\t\tself.outsz = 0\n \n \t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n@@ -147,7 +149,7 @@ def writeBlock(self, inhdr, blk_hdr, rawblock):\n \t\t\tif self.fileOutput:\n \t\t\t\toutFname = self.settings['output_file']\n \t\t\telse:\n-\t\t\t\toutFname = \"%s/blk%05d.dat\" % (self.settings['output'], outFn)\n+\t\t\t\toutFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n \t\t\tprint(\"Output file \" + outFname)\n \t\t\tself.outF = open(outFname, \"wb\")\n \n@@ -165,7 +167,7 @@ def writeBlock(self, inhdr, blk_hdr, rawblock):\n \t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n \n \tdef inFileName(self, fn):\n-\t\treturn \"%s/blk%05d.dat\" % (self.settings['input'], fn)\n+\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n \n \tdef fetchBlock(self, extent):\n \t\t'''Fetch block contents from disk given extents'''"
      }
    ]
  }
]