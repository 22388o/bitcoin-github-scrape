[
  {
    "sha": "c6563285a99d80a51368ca4611292b85d2ccfba8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjU2MzI4NWE5OWQ4MGE1MTM2OGNhNDYxMTI5MmI4NWQyY2NmYmE4",
    "commit": {
      "author": {
        "name": "Dylan Noblesmith",
        "email": "nobled@dreamwidth.org",
        "date": "2011-06-24T03:03:17Z"
      },
      "committer": {
        "name": "Dylan Noblesmith",
        "email": "nobled@dreamwidth.org",
        "date": "2011-06-24T03:03:17Z"
      },
      "message": "mlock() all private keys in memory\n\nInline comment and idea come from the encprivkeys branch\nby Matt Corallo <matt@bluematt.me>.",
      "tree": {
        "sha": "f25dd3ca2832c23b406fce77eed22fadc83f19b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f25dd3ca2832c23b406fce77eed22fadc83f19b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6563285a99d80a51368ca4611292b85d2ccfba8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6563285a99d80a51368ca4611292b85d2ccfba8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c6563285a99d80a51368ca4611292b85d2ccfba8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6563285a99d80a51368ca4611292b85d2ccfba8/comments",
    "author": {
      "login": "nobled",
      "id": 29161,
      "node_id": "MDQ6VXNlcjI5MTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/29161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nobled",
      "html_url": "https://github.com/nobled",
      "followers_url": "https://api.github.com/users/nobled/followers",
      "following_url": "https://api.github.com/users/nobled/following{/other_user}",
      "gists_url": "https://api.github.com/users/nobled/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nobled/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nobled/subscriptions",
      "organizations_url": "https://api.github.com/users/nobled/orgs",
      "repos_url": "https://api.github.com/users/nobled/repos",
      "events_url": "https://api.github.com/users/nobled/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nobled/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "nobled",
      "id": 29161,
      "node_id": "MDQ6VXNlcjI5MTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/29161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nobled",
      "html_url": "https://github.com/nobled",
      "followers_url": "https://api.github.com/users/nobled/followers",
      "following_url": "https://api.github.com/users/nobled/following{/other_user}",
      "gists_url": "https://api.github.com/users/nobled/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nobled/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nobled/subscriptions",
      "organizations_url": "https://api.github.com/users/nobled/orgs",
      "repos_url": "https://api.github.com/users/nobled/repos",
      "events_url": "https://api.github.com/users/nobled/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nobled/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1179257bfd1d0f7742d57449b37c40c28464f152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1179257bfd1d0f7742d57449b37c40c28464f152",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1179257bfd1d0f7742d57449b37c40c28464f152"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 22,
      "deletions": 1
    },
    "files": [
      {
        "sha": "94eacdd724e70fcb64a017db0f1263ee936c9567",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6563285a99d80a51368ca4611292b85d2ccfba8/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6563285a99d80a51368ca4611292b85d2ccfba8/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=c6563285a99d80a51368ca4611292b85d2ccfba8",
        "patch": "@@ -13,6 +13,8 @@\n #include <cstring>\n #include <cstdio>\n \n+#include <sys/mman.h>\n+\n #include <boost/type_traits/is_fundamental.hpp>\n #include <boost/tuple/tuple.hpp>\n #include <boost/tuple/tuple_comparison.hpp>\n@@ -28,6 +30,15 @@ typedef unsigned long long  uint64;\n #if defined(_MSC_VER) && _MSC_VER < 1300\n #define for  if (false) ; else for\n #endif\n+\n+#ifdef __WXMSW__\n+// This is used to attempt to keep keying material out of swap\n+// Note that VirtualLock does not provide this as a guarantee on Windows,\n+// but, in practice, memory that has been VirtualLock'd almost never gets written to\n+// the pagefile except in rare circumstances where memory is extremely low.\n+#define mlock(p, n) VirtualLock((p), (n));\n+#endif\n+\n class CScript;\n class CDataStream;\n class CAutoFile;\n@@ -755,7 +766,8 @@ struct ser_streamplaceholder\n \n \n //\n-// Allocator that clears its contents before deletion\n+// Allocator that locks its contents from being paged\n+// out of memory and clears its contents before deletion.\n //\n template<typename T>\n struct secure_allocator : public std::allocator<T>\n@@ -777,6 +789,15 @@ struct secure_allocator : public std::allocator<T>\n     template<typename _Other> struct rebind\n     { typedef secure_allocator<_Other> other; };\n \n+    T* allocate(std::size_t n, const void *hint = 0)\n+    {\n+        T *p;\n+        p = std::allocator<T>::allocate(n, hint);\n+        if (p != NULL)\n+            mlock(p, sizeof(T) * n);\n+        return p;\n+    }\n+\n     void deallocate(T* p, std::size_t n)\n     {\n         if (p != NULL)"
      }
    ]
  }
]