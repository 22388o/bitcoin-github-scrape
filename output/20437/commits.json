[
  {
    "sha": "8c09c0c1d18885ef94f79b3f2d073f43269bc95d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzA5YzBjMWQxODg4NWVmOTRmNzliM2YyZDA3M2Y0MzI2OWJjOTVk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-19T21:25:14Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-12-01T13:18:34Z"
      },
      "message": "fuzz: Avoid time-based \"non-determinism\" in fuzzing harnesses by using mocked GetTime()",
      "tree": {
        "sha": "3279e20f8757142551941c4c271f50e8df3211df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3279e20f8757142551941c4c271f50e8df3211df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c09c0c1d18885ef94f79b3f2d073f43269bc95d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c09c0c1d18885ef94f79b3f2d073f43269bc95d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c09c0c1d18885ef94f79b3f2d073f43269bc95d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfd0b700886cab7cd2fcf4958a214b098fe18152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfd0b700886cab7cd2fcf4958a214b098fe18152",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dfd0b700886cab7cd2fcf4958a214b098fe18152"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0776848a95873ea6c6260236a60052b0c1d19b6f",
        "filename": "src/test/fuzz/banman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/src/test/fuzz/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/src/test/fuzz/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/banman.cpp?ref=8c09c0c1d18885ef94f79b3f2d073f43269bc95d",
        "patch": "@@ -32,6 +32,7 @@ void initialize()\n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    SetMockTime(ConsumeTime(fuzzed_data_provider));\n     const fs::path banlist_file = GetDataDir() / \"fuzzed_banlist.dat\";\n     fs::remove(banlist_file);\n     {"
      },
      {
        "sha": "b5d402cdd35d0f7e44875f6d492eaa09734d68c5",
        "filename": "src/test/fuzz/connman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/src/test/fuzz/connman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/src/test/fuzz/connman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/connman.cpp?ref=8c09c0c1d18885ef94f79b3f2d073f43269bc95d",
        "patch": "@@ -23,6 +23,7 @@ void initialize()\n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    SetMockTime(ConsumeTime(fuzzed_data_provider));\n     CConnman connman{fuzzed_data_provider.ConsumeIntegral<uint64_t>(), fuzzed_data_provider.ConsumeIntegral<uint64_t>(), fuzzed_data_provider.ConsumeBool()};\n     CAddress random_address;\n     CNetAddr random_netaddr;"
      },
      {
        "sha": "39b19c6bcd602648058d2e5df73397d3839ac65d",
        "filename": "src/test/fuzz/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/src/test/fuzz/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/src/test/fuzz/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/net.cpp?ref=8c09c0c1d18885ef94f79b3f2d073f43269bc95d",
        "patch": "@@ -27,7 +27,7 @@ void initialize()\n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n-\n+    SetMockTime(ConsumeTime(fuzzed_data_provider));\n     const std::optional<CAddress> address = ConsumeDeserializable<CAddress>(fuzzed_data_provider);\n     if (!address) {\n         return;"
      },
      {
        "sha": "58167c394c956427db7e9ead16e86d93cfa175ad",
        "filename": "src/test/fuzz/rbf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/src/test/fuzz/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c09c0c1d18885ef94f79b3f2d073f43269bc95d/src/test/fuzz/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rbf.cpp?ref=8c09c0c1d18885ef94f79b3f2d073f43269bc95d",
        "patch": "@@ -18,6 +18,7 @@\n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    SetMockTime(ConsumeTime(fuzzed_data_provider));\n     std::optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n     if (!mtx) {\n         return;"
      }
    ]
  }
]