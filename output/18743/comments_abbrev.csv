DrahtBot,2020-04-23 04:45:36,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-618174811,618174811,
fanquake,2020-04-25 13:13:51,Thanks for splitting this out. Will review.,https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-619377965,619377965,
DrahtBot,2020-04-26 22:20:56,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 65276c7737176a5269b052ceae78dbb44b216bf4<br>(master) | commit 3eef5a85cdb2b74b161ea6f19e9426e398017bf2<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.20.99-aarch64-linux-gnu-debug.tar.gz | [`673ecc74f832f550...`](https://drahtbot.space/gitian/bitcoin/bitcoin/65276c7737176a5269b052ceae78dbb44b216bf4/bitcoin-0.20.99-,https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-619633792,619633792,
fanquake,2020-04-27 11:48:18,"ACK 1e94a2bcbc5ff8ae61eed9f31317ea534649116d - I think this change is ok, and I prefer it to the previous patch. Thanks for the summary in the PR description. I played around with Xcode and the CLT; I think previously I didn't fully grok the slight differences between the two.\n\nThis output was produced from a test.cpp containing just `#include <stdlib.h>`.\n\nCLT Clang vs CLT Clang with `-is",https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-619932195,619932195,
dongcarl,2020-04-27 12:07:21,Is `/Library/Developer/CommandLineTools` a symlink to `/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain` or vice versa?,https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-619942973,619942973,
fanquake,2020-04-27 12:33:51,"> Is /Library/Developer/CommandLineTools a symlink to /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain or vice versa?\n\nNo, they are standalone, and there are decent differences between the content of either. Xcode has a bunch more Swift modules, Apple simulator components and dylibs bundled with it. For example, you can see a diff of `/Library/Developer/CommandLin",https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-619957575,619957575,
ryanofsky,2020-04-27 14:36:23,"> ACK [1e94a2b](https://github.com/bitcoin/bitcoin/commit/1e94a2bcbc5ff8ae61eed9f31317ea534649116d) - I think this change is ok, and I prefer it to the previous patch.\n\nThe current change 1e94a2bcbc5ff8ae61eed9f31317ea534649116d is the original fix I made for the issue before Cory's suggestion in https://github.com/bitcoin/bitcoin/pull/16367#issuecomment-595393546.\n\nIt seems safe and good.",https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-620027368,620027368,
fanquake,2020-05-02 13:26:40,@dongcarl did you have something specific you wanted to follow up with here in regards to the symlink query?,https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-622953577,622953577,
dongcarl,2020-05-04 17:50:15,"@fanquake No not really. My initial impression here is that we should remove all the `xcrun` invocations if we can, as doing that makes explicit we're expecting a standard toolchain for building (open source) applications from source. Will need to test that it works though.",https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-623609571,623609571,
fanquake,2020-05-07 12:37:12,"@dongcarl Ok, lets follow up with that then. Want to open an issue to track? I'm going to merge this now to unblock Russ and #18677.",https://github.com/bitcoin/bitcoin/pull/18743#issuecomment-625229108,625229108,
