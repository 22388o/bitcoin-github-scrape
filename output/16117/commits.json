[
  {
    "sha": "fa4620be782c2bf6b5ffddf4f671194fdd1536f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQ2MjBiZTc4MmMyYmY2YjVmZmRkZjRmNjcxMTk0ZmRkMTUzNmYz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-21T17:19:57Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-21T17:49:37Z"
      },
      "message": "util: Add UnintrruptibleSleep",
      "tree": {
        "sha": "38abb4235c76ec658fc4c23360fc4e66975041c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/38abb4235c76ec658fc4c23360fc4e66975041c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4620be782c2bf6b5ffddf4f671194fdd1536f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4620be782c2bf6b5ffddf4f671194fdd1536f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4620be782c2bf6b5ffddf4f671194fdd1536f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4620be782c2bf6b5ffddf4f671194fdd1536f3/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36f42e1bf43f2c9f3b4642814051cedf66f05a5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36f42e1bf43f2c9f3b4642814051cedf66f05a5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36f42e1bf43f2c9f3b4642814051cedf66f05a5e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5c1182850e0188c03c87135b42ae630d964e5c5c",
        "filename": "src/util/time.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4620be782c2bf6b5ffddf4f671194fdd1536f3/src/util/time.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4620be782c2bf6b5ffddf4f671194fdd1536f3/src/util/time.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.cpp?ref=fa4620be782c2bf6b5ffddf4f671194fdd1536f3",
        "patch": "@@ -13,8 +13,12 @@\n #include <boost/date_time/posix_time/posix_time.hpp>\n #include <boost/thread.hpp>\n #include <ctime>\n+#include <thread>\n+\n #include <tinyformat.h>\n \n+void UninterruptibleSleep(const std::chrono::microseconds& n) { std::this_thread::sleep_for(n); }\n+\n static std::atomic<int64_t> nMockTime(0); //!< For unit testing\n \n int64_t GetTime()\n@@ -124,4 +128,4 @@ int64_t ParseISO8601DateTime(const std::string& str)\n     if (ptime.is_not_a_date_time() || epoch > ptime)\n         return 0;\n     return (ptime - epoch).total_seconds();\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "445ca3acb3ebb75d1ffdc74e3144a92c238fcfc4",
        "filename": "src/util/time.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4620be782c2bf6b5ffddf4f671194fdd1536f3/src/util/time.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4620be782c2bf6b5ffddf4f671194fdd1536f3/src/util/time.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.h?ref=fa4620be782c2bf6b5ffddf4f671194fdd1536f3",
        "patch": "@@ -10,6 +10,8 @@\n #include <string>\n #include <chrono>\n \n+void UninterruptibleSleep(const std::chrono::microseconds& n);\n+\n /**\n  * Helper to count the seconds of a duration.\n  *"
      }
    ]
  },
  {
    "sha": "fa9af06d91e9357e86863781746f0e78a509967e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTlhZjA2ZDkxZTkzNTdlODY4NjM3ODE3NDZmMGU3OGE1MDk5Njdl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-21T17:20:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-21T18:06:21Z"
      },
      "message": "scripted-diff: Replace MilliSleep with UninterruptibleSleep\n\nThis is safe because MilliSleep is never executed in a boost::thread,\nthe only type of thread that is interruptible.\n\n* The RPC server uses std::thread\n* The wallet is either executed in an RPC thread or the main thread\n* bitcoin-cli, benchmarks and tests are only one thread (the main thread)\n\n-BEGIN VERIFY SCRIPT-\nsed -i --regexp-extended -e 's/MilliSleep\\((\\S+)\\);/UninterruptibleSleep(std::chrono::milliseconds{\\1});/g' $(git grep -l MilliSleep)\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "84da5bbd0c028648b9ec383dabc80849d2f15d18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84da5bbd0c028648b9ec383dabc80849d2f15d18"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9af06d91e9357e86863781746f0e78a509967e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhFKgv/RdoJ61k6edvox3OprOYlrcgItjeMsyuhqwGFuFBt86vDNCLu39mQ9zGF\n0aIhqC3nS4HxF6K/FmcUxJCfWoc6xvN7sSwvyNIQk+8kYn3hOUwAeDujbVcfxJcm\nZ8TCyDDc3eCgMyrOQU0Ju5Uxb7RB8z0WVWoaY9GpYJSZpDe6d25S+2nB7xZn9K6z\ngusLPl2ALxzzdYkivSJyLjogMXaAvTzALIe6a6Q29mM+YUh2S+pHhTPFbXcSfhf4\n8ItWaIzR1hhhapb+q0iwHOPWltZVlOMLupxtwkG7GHrrOs6MFkuvfiazfDAdD/xw\ndxiUYqUnwURlkw66q9ISt5eg5wwK1KAcOMIqBkHsg6uQwT+KAHUyeLEVkBDo0XSS\nheAR4xAQTUoLO/GQikTKBBH4IsTBV81NGRHz6VquknYlFvXiaFZrhVfudhJoMIal\nfzXNIppnwwRtSb+6UALkCWAgU8YbeeA3BXVovMVqO6PKoU9mx9Nf+0mw6pavT6Rv\nmD/+6VZC\n=eyrp\n-----END PGP SIGNATURE-----",
        "payload": "tree 84da5bbd0c028648b9ec383dabc80849d2f15d18\nparent fa4620be782c2bf6b5ffddf4f671194fdd1536f3\nauthor MarcoFalke <falke.marco@gmail.com> 1582305651 -0800\ncommitter MarcoFalke <falke.marco@gmail.com> 1582308381 -0800\n\nscripted-diff: Replace MilliSleep with UninterruptibleSleep\n\nThis is safe because MilliSleep is never executed in a boost::thread,\nthe only type of thread that is interruptible.\n\n* The RPC server uses std::thread\n* The wallet is either executed in an RPC thread or the main thread\n* bitcoin-cli, benchmarks and tests are only one thread (the main thread)\n\n-BEGIN VERIFY SCRIPT-\nsed -i --regexp-extended -e 's/MilliSleep\\((\\S+)\\);/UninterruptibleSleep(std::chrono::milliseconds{\\1});/g' $(git grep -l MilliSleep)\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9af06d91e9357e86863781746f0e78a509967e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9af06d91e9357e86863781746f0e78a509967e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9af06d91e9357e86863781746f0e78a509967e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa4620be782c2bf6b5ffddf4f671194fdd1536f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4620be782c2bf6b5ffddf4f671194fdd1536f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4620be782c2bf6b5ffddf4f671194fdd1536f3"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "a2fdab560962a44d5b73276cb062c3527b57ceaa",
        "filename": "src/bench/examples.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/bench/examples.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/bench/examples.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/examples.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -10,7 +10,7 @@\n static void Sleep100ms(benchmark::State& state)\n {\n     while (state.KeepRunning()) {\n-        MilliSleep(100);\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n     }\n }\n "
      },
      {
        "sha": "6982eaab61d69ec3fa5c6238d131d8dbde546468",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -524,7 +524,7 @@ static int CommandLineRPC(int argc, char *argv[])\n             }\n             catch (const CConnectionFailed&) {\n                 if (fWait)\n-                    MilliSleep(1000);\n+                    UninterruptibleSleep(std::chrono::milliseconds{1000});\n                 else\n                     throw;\n             }"
      },
      {
        "sha": "e284dce0d5d57aaae8bbaeae0bc17b72631d9c05",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -29,7 +29,7 @@ static void WaitForShutdown(NodeContext& node)\n {\n     while (!ShutdownRequested())\n     {\n-        MilliSleep(200);\n+        UninterruptibleSleep(std::chrono::milliseconds{200});\n     }\n     Interrupt(node);\n }"
      },
      {
        "sha": "4d497361409d9886be6202ee3d7a6d8917bf5e2f",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -174,7 +174,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n         /* Deter brute-forcing\n            If this results in a DoS the user really\n            shouldn't have their RPC port exposed. */\n-        MilliSleep(250);\n+        UninterruptibleSleep(std::chrono::milliseconds{250});\n \n         req->WriteHeader(\"WWW-Authenticate\", WWW_AUTH_HEADER_DATA);\n         req->WriteReply(HTTP_UNAUTHORIZED);"
      },
      {
        "sha": "4670a28a1b00236950e779b7f58f00b30cddbb53",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -169,7 +169,7 @@ UniValue stop(const JSONRPCRequest& jsonRequest)\n     // this reply will get back to the client.\n     StartShutdown();\n     if (jsonRequest.params[0].isNum()) {\n-        MilliSleep(jsonRequest.params[0].get_int());\n+        UninterruptibleSleep(std::chrono::milliseconds{jsonRequest.params[0].get_int()});\n     }\n     return PACKAGE_NAME \" stopping\";\n }"
      },
      {
        "sha": "5e52dc268fcc8b00f724ca32c7aa2001d1b02ea2",
        "filename": "src/test/blockfilter_index_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/test/blockfilter_index_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/test/blockfilter_index_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_index_tests.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -138,7 +138,7 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, BuildChainTestingSetup)\n     int64_t time_start = GetTimeMillis();\n     while (!filter_index.BlockUntilSyncedToCurrentChain()) {\n         BOOST_REQUIRE(time_start + timeout_ms > GetTimeMillis());\n-        MilliSleep(100);\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n     }\n \n     // Check that filter index has all blocks that were in the chain before it started."
      },
      {
        "sha": "a9628e85f9527834d7d04828c4c5cbcfe80ae4c8",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -393,7 +393,7 @@ BOOST_AUTO_TEST_CASE(test_CheckQueueControl_Locks)\n                     CCheckQueueControl<FakeCheck> control(queue.get());\n                     // While sleeping, no other thread should execute to this point\n                     auto observed = ++nThreads;\n-                    MilliSleep(10);\n+                    UninterruptibleSleep(std::chrono::milliseconds{10});\n                     fails += observed  != nThreads;\n                     });\n         }"
      },
      {
        "sha": "6474711cade6c1503e8fef84d88dea0c0620bd8d",
        "filename": "src/test/txindex_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/test/txindex_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/test/txindex_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txindex_tests.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -34,7 +34,7 @@ BOOST_FIXTURE_TEST_CASE(txindex_initial_sync, TestChain100Setup)\n     int64_t time_start = GetTimeMillis();\n     while (!txindex.BlockUntilSyncedToCurrentChain()) {\n         BOOST_REQUIRE(time_start + timeout_ms > GetTimeMillis());\n-        MilliSleep(100);\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n     }\n \n     // Check that txindex excludes genesis block transactions."
      },
      {
        "sha": "949d8e6673b0157ab467f1e369d8e611a5c993a7",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -1322,7 +1322,7 @@ BOOST_AUTO_TEST_CASE(util_time_GetTime)\n     SetMockTime(111);\n     // Check that mock time does not change after a sleep\n     for (const auto& num_sleep : {0, 1}) {\n-        MilliSleep(num_sleep);\n+        UninterruptibleSleep(std::chrono::milliseconds{num_sleep});\n         BOOST_CHECK_EQUAL(111, GetTime()); // Deprecated time getter\n         BOOST_CHECK_EQUAL(111, GetTime<std::chrono::seconds>().count());\n         BOOST_CHECK_EQUAL(111000, GetTime<std::chrono::milliseconds>().count());\n@@ -1333,7 +1333,7 @@ BOOST_AUTO_TEST_CASE(util_time_GetTime)\n     // Check that system time changes after a sleep\n     const auto ms_0 = GetTime<std::chrono::milliseconds>();\n     const auto us_0 = GetTime<std::chrono::microseconds>();\n-    MilliSleep(1);\n+    UninterruptibleSleep(std::chrono::milliseconds{1});\n     BOOST_CHECK(ms_0 < GetTime<std::chrono::milliseconds>());\n     BOOST_CHECK(us_0 < GetTime<std::chrono::microseconds>());\n }"
      },
      {
        "sha": "f2c862011d6441a68f0e64008b0223abf0eddee5",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -205,7 +205,7 @@ BOOST_AUTO_TEST_CASE(processnewblock_signals_ordering)\n         t.join();\n     }\n     while (GetMainSignals().CallbacksPending() > 0) {\n-        MilliSleep(100);\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n     }\n \n     UnregisterValidationInterface(&sub);"
      },
      {
        "sha": "aa6e91c05e07d0e20784eb892cefff2d3fee63ae",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9af06d91e9357e86863781746f0e78a509967e/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9af06d91e9357e86863781746f0e78a509967e/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=fa9af06d91e9357e86863781746f0e78a509967e",
        "patch": "@@ -756,7 +756,7 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n                 return fSuccess;\n             }\n         }\n-        MilliSleep(100);\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n     }\n }\n \n@@ -887,7 +887,7 @@ bool BerkeleyDatabase::Backup(const std::string& strDest)\n                 }\n             }\n         }\n-        MilliSleep(100);\n+        UninterruptibleSleep(std::chrono::milliseconds{100});\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "fae86c38bca5c960462e53975314a0749db5d17d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWU4NmMzOGJjYTVjOTYwNDYyZTUzOTc1MzE0YTA3NDlkYjVkMTdk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-21T17:48:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-21T18:06:27Z"
      },
      "message": "util: Remove unused MilliSleep",
      "tree": {
        "sha": "ab37c90ad339526d73e7680091bb28967c90a74a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab37c90ad339526d73e7680091bb28967c90a74a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae86c38bca5c960462e53975314a0749db5d17d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjG0Qv+LwHPs997t2Cw1SMoePHQFSbeqALvrOPRMPTpmVEEhmv+7P9OKVYB6dPf\nRJwApEri+jPdcs3NVu+MePk+VwmA7w0Qo+KpGasGtG0ERPQn3XI+uE6LjtV6pssV\nAMyuDDNtVmq5ftkqhXgy2eInA4c0+W9QCHzafnPr+ZxOx/9MhSXwOefQJ3SXB3EQ\nXkEZ/1yhcU5PrLzNcGW5Vr67L1feTtQw0v5A/GGDekXynDT8Dz/jPKX3BcxxEHWU\nIH4gRtq1hlsDzlaLM3mxuo7R3WsmOoA7DxDmjjCUKmlmSerVJ+h7DuVjNLw95x5d\nAH/ASuWRsdHhS6Inqg2GRIzO2KkeNZto691Xq3YCA5GL1Bs8TwthuRJTGwa3CheC\nYZKhQrE3mgVhYTnNKeItTCSONp/LtSE+loWFr/VEuCaDLjR7EaWMUstemZtg6sf7\n8n01FJUKUTBUNqE7XkAydhxISX/5s48mDcxc7wv3a4r/AMpWWfRYP7yRYgqALGNs\nlAHBbhDe\n=T8Au\n-----END PGP SIGNATURE-----",
        "payload": "tree ab37c90ad339526d73e7680091bb28967c90a74a\nparent fa9af06d91e9357e86863781746f0e78a509967e\nauthor MarcoFalke <falke.marco@gmail.com> 1582307307 -0800\ncommitter MarcoFalke <falke.marco@gmail.com> 1582308387 -0800\n\nutil: Remove unused MilliSleep\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae86c38bca5c960462e53975314a0749db5d17d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae86c38bca5c960462e53975314a0749db5d17d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae86c38bca5c960462e53975314a0749db5d17d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa9af06d91e9357e86863781746f0e78a509967e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9af06d91e9357e86863781746f0e78a509967e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9af06d91e9357e86863781746f0e78a509967e"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 2,
      "deletions": 91
    },
    "files": [
      {
        "sha": "47c0a5f4079bef5e1e6e7471bbfaf1e3956f5dc0",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae86c38bca5c960462e53975314a0749db5d17d/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae86c38bca5c960462e53975314a0749db5d17d/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=fae86c38bca5c960462e53975314a0749db5d17d",
        "patch": "@@ -258,12 +258,6 @@\n /* Define if the visibility attribute is supported. */\n #define HAVE_VISIBILITY_ATTRIBUTE 1\n \n-/* Define this symbol if boost sleep works */\n-/* #undef HAVE_WORKING_BOOST_SLEEP */\n-\n-/* Define this symbol if boost sleep_for works */\n-#define HAVE_WORKING_BOOST_SLEEP_FOR 1\n-\n /* Define to the sub-directory where libtool stores uninstalled libraries. */\n #define LT_OBJDIR \".libs/\"\n "
      },
      {
        "sha": "e757940c3ed3cc0b21a0bd4d0f78592f8f28d1b6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae86c38bca5c960462e53975314a0749db5d17d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae86c38bca5c960462e53975314a0749db5d17d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fae86c38bca5c960462e53975314a0749db5d17d",
        "patch": "@@ -1231,57 +1231,6 @@ AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n LIBS=\"$TEMP_LIBS\"\n CPPFLAGS=\"$TEMP_CPPFLAGS\"\n \n-dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n-dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n-dnl a working version is available, else fall back to sleep. sleep was removed\n-dnl after 1.56.\n-dnl If neither is available, abort.\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/thread/thread.hpp>\n-  #include <boost/version.hpp>\n-  ]],[[\n-  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n-      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes;\n-     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-if test x$boost_sleep != xyes; then\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/version.hpp>\n-  #include <boost/thread.hpp>\n-  #include <boost/date_time/posix_time/posix_time_types.hpp>\n-  ]],[[\n-  #if BOOST_VERSION <= 105600\n-      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-\n-if test x$boost_sleep != xyes; then\n-  AC_MSG_ERROR(No working boost sleep implementation found.)\n-fi\n-\n fi\n \n if test x$use_pkgconfig = xyes; then"
      },
      {
        "sha": "058dd1deda09c14536cda2eef2db0e1a221b27f8",
        "filename": "src/test/scheduler_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 13,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae86c38bca5c960462e53975314a0749db5d17d/src/test/scheduler_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae86c38bca5c960462e53975314a0749db5d17d/src/test/scheduler_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/scheduler_tests.cpp?ref=fae86c38bca5c960462e53975314a0749db5d17d",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <random.h>\n #include <scheduler.h>\n+#include <util/time.h>\n \n #include <boost/thread.hpp>\n #include <boost/test/unit_test.hpp>\n@@ -23,18 +24,6 @@ static void microTask(CScheduler& s, boost::mutex& mutex, int& counter, int delt\n     }\n }\n \n-static void MicroSleep(uint64_t n)\n-{\n-#if defined(HAVE_WORKING_BOOST_SLEEP_FOR)\n-    boost::this_thread::sleep_for(boost::chrono::microseconds(n));\n-#elif defined(HAVE_WORKING_BOOST_SLEEP)\n-    boost::this_thread::sleep(boost::posix_time::microseconds(n));\n-#else\n-    //should never get here\n-    #error missing boost sleep implementation\n-#endif\n-}\n-\n BOOST_AUTO_TEST_CASE(manythreads)\n {\n     // Stress test: hundreds of microsecond-scheduled tasks,\n@@ -81,7 +70,7 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     for (int i = 0; i < 5; i++)\n         microThreads.create_thread(std::bind(&CScheduler::serviceQueue, &microTasks));\n \n-    MicroSleep(600);\n+    UninterruptibleSleep(std::chrono::microseconds{600});\n     now = boost::chrono::system_clock::now();\n \n     // More threads and more tasks:"
      },
      {
        "sha": "f6d0dd4da6bdda63b67acc4feb61775ab436851c",
        "filename": "src/util/time.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae86c38bca5c960462e53975314a0749db5d17d/src/util/time.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae86c38bca5c960462e53975314a0749db5d17d/src/util/time.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.cpp?ref=fae86c38bca5c960462e53975314a0749db5d17d",
        "patch": "@@ -11,7 +11,6 @@\n \n #include <atomic>\n #include <boost/date_time/posix_time/posix_time.hpp>\n-#include <boost/thread.hpp>\n #include <ctime>\n #include <thread>\n \n@@ -76,24 +75,6 @@ int64_t GetSystemTimeInSeconds()\n     return GetTimeMicros()/1000000;\n }\n \n-void MilliSleep(int64_t n)\n-{\n-\n-/**\n- * Boost's sleep_for was uninterruptible when backed by nanosleep from 1.50\n- * until fixed in 1.52. Use the deprecated sleep method for the broken case.\n- * See: https://svn.boost.org/trac/boost/ticket/7238\n- */\n-#if defined(HAVE_WORKING_BOOST_SLEEP_FOR)\n-    boost::this_thread::sleep_for(boost::chrono::milliseconds(n));\n-#elif defined(HAVE_WORKING_BOOST_SLEEP)\n-    boost::this_thread::sleep(boost::posix_time::milliseconds(n));\n-#else\n-//should never get here\n-#error missing boost sleep implementation\n-#endif\n-}\n-\n std::string FormatISO8601DateTime(int64_t nTime) {\n     struct tm ts;\n     time_t time_val = nTime;"
      },
      {
        "sha": "77de1e047d8e54b6bdd1c7cc8923a9ee0791d2e2",
        "filename": "src/util/time.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae86c38bca5c960462e53975314a0749db5d17d/src/util/time.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae86c38bca5c960462e53975314a0749db5d17d/src/util/time.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.h?ref=fae86c38bca5c960462e53975314a0749db5d17d",
        "patch": "@@ -38,8 +38,6 @@ void SetMockTime(int64_t nMockTimeIn);\n /** For testing */\n int64_t GetMockTime();\n \n-void MilliSleep(int64_t n);\n-\n /** Return system time (or mocked time, if set) */\n template <typename T>\n T GetTime();"
      }
    ]
  }
]