[
  {
    "sha": "49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWMxMGE5Y2E0MDk2N2QyOGFlMTZkZmVhOWNjY2M2ZjNhNjYyNGEx",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-08-11T01:30:04Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-22T02:01:29Z"
      },
      "message": "[log] Add connection type to log statement\n\nIn addition to adding more specificity to the log statement about the type of\nconnection, this change also consolidates two statements into one. Previously,\nthe second one should have never been hit, since block-relay connections would\nmatch the \"!IsInboundConn()\" condition and return early.",
      "tree": {
        "sha": "46b2eb17cde91c46c4d17c56ab6251fa46d9744f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46b2eb17cde91c46c4d17c56ab6251fa46d9744f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77376034d4abab292be6ade8486bc472c5f75fe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77376034d4abab292be6ade8486bc472c5f75fe3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77376034d4abab292be6ade8486bc472c5f75fe3"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 23,
      "deletions": 5
    },
    "files": [
      {
        "sha": "15675a68adc574c4b8df0f7f184996364f04fe95",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
        "patch": "@@ -488,6 +488,26 @@ void CConnman::AddWhitelistPermissionFlags(NetPermissionFlags& flags, const CNet\n     }\n }\n \n+std::string CNode::ConnectionTypeAsString() const\n+{\n+    switch (m_conn_type) {\n+    case ConnectionType::INBOUND:\n+        return \"inbound\";\n+    case ConnectionType::MANUAL:\n+        return \"manual\";\n+    case ConnectionType::FEELER:\n+        return \"feeler\";\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        return \"outbound-full-relay\";\n+    case ConnectionType::BLOCK_RELAY:\n+        return \"block-relay-only\";\n+    case ConnectionType::ADDR_FETCH:\n+        return \"addr-fetch\";\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n std::string CNode::GetAddrName() const {\n     LOCK(cs_addrName);\n     return addrName;"
      },
      {
        "sha": "61a208802cfc32b92593359314c60c20f94d7ada",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
        "patch": "@@ -1145,6 +1145,8 @@ class CNode\n     std::string GetAddrName() const;\n     //! Sets the addrName only if it was not previously set\n     void MaybeSetAddrName(const std::string& addrNameIn);\n+\n+    std::string ConnectionTypeAsString() const;\n };\n \n /** Return a timestamp in the future (in microseconds) for exponentially distributed events. */"
      },
      {
        "sha": "859b67755d35cd444667f446569f808725eb864e",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
        "patch": "@@ -3521,11 +3521,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n         if (!pfrom.IsInboundConn()) {\n-            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from outbound connection. peer=%d\\n\", pfrom.GetId());\n-            return;\n-        }\n-        if (!pfrom.RelayAddrsWithConn()) {\n-            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from block-relay-only connection. peer=%d\\n\", pfrom.GetId());\n+            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from %s connection. peer=%d\\n\", pfrom.ConnectionTypeAsString(), pfrom.GetId());\n             return;\n         }\n "
      }
    ]
  },
  {
    "sha": "395acfa83a5436790c1a722a5609ac9d48df235f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTVhY2ZhODNhNTQzNjc5MGMxYTcyMmE1NjA5YWM5ZDQ4ZGYyMzVm",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-08-12T20:57:13Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-22T02:01:29Z"
      },
      "message": "[rpc] Add connection type to getpeerinfo RPC, update tests",
      "tree": {
        "sha": "523f1a77f69da9ff7e44f4bc602bbaf2dc14aa2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/523f1a77f69da9ff7e44f4bc602bbaf2dc14aa2b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/395acfa83a5436790c1a722a5609ac9d48df235f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/395acfa83a5436790c1a722a5609ac9d48df235f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/395acfa83a5436790c1a722a5609ac9d48df235f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/395acfa83a5436790c1a722a5609ac9d48df235f/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49c10a9ca40967d28ae16dfea9cccc6f3a6624a1"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5b533d7d17ec4645d0b84115b7f226795d800b9a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/395acfa83a5436790c1a722a5609ac9d48df235f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/395acfa83a5436790c1a722a5609ac9d48df235f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=395acfa83a5436790c1a722a5609ac9d48df235f",
        "patch": "@@ -602,6 +602,8 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n     // Leave string empty if addrLocal invalid (not filled in yet)\n     CService addrLocalUnlocked = GetAddrLocal();\n     stats.addrLocal = addrLocalUnlocked.IsValid() ? addrLocalUnlocked.ToString() : \"\";\n+\n+    stats.m_conn_type_string = ConnectionTypeAsString();\n }\n #undef X\n "
      },
      {
        "sha": "5e134ca7c80618b672b9ff7e65329f550dc69cff",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/395acfa83a5436790c1a722a5609ac9d48df235f/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/395acfa83a5436790c1a722a5609ac9d48df235f/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=395acfa83a5436790c1a722a5609ac9d48df235f",
        "patch": "@@ -114,6 +114,14 @@ struct CSerializedNetMsg\n     std::string m_type;\n };\n \n+const std::vector<std::string> CONNECTION_TYPE_DOC{\n+    \"outbound-full-relay (default automatic connections)\",\n+    \"block-relay-only (does not relay transactions or addresses)\",\n+    \"inbound (initiated by the peer)\",\n+    \"manual (added via addnode RPC or -addnode/-connect configuration options)\",\n+    \"addr-fetch (short-lived automatic connection for soliciting addresses)\",\n+    \"feeler (short-lived automatic connection for testing addresses)\"};\n+\n /** Different types of connections to a peer. This enum encapsulates the\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n@@ -692,6 +700,7 @@ class CNodeStats\n     // Bind address of our side of the connection\n     CAddress addrBind;\n     uint32_t m_mapped_as;\n+    std::string m_conn_type_string;\n };\n \n "
      },
      {
        "sha": "e480bd2a40dbcec2b98bd68fe74e635a030a864e",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/395acfa83a5436790c1a722a5609ac9d48df235f/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/395acfa83a5436790c1a722a5609ac9d48df235f/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=395acfa83a5436790c1a722a5609ac9d48df235f",
        "patch": "@@ -113,6 +113,7 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n                             {RPCResult::Type::STR, \"subver\", \"The string version\"},\n                             {RPCResult::Type::BOOL, \"inbound\", \"Inbound (true) or Outbound (false)\"},\n                             {RPCResult::Type::BOOL, \"addnode\", \"Whether connection was due to addnode/-connect or if it was an automatic/inbound connection\"},\n+                            {RPCResult::Type::STR, \"connection_type\", \"Type of connection: \\n\" + Join(CONNECTION_TYPE_DOC, \",\\n\") + \".\"},\n                             {RPCResult::Type::NUM, \"startingheight\", \"The starting height (block) of the peer\"},\n                             {RPCResult::Type::NUM, \"banscore\", \"The ban score (DEPRECATED, returned only if config option -deprecatedrpc=banscore is passed)\"},\n                             {RPCResult::Type::NUM, \"synced_headers\", \"The last header we have in common with this peer\"},\n@@ -228,6 +229,7 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n                 recvPerMsgCmd.pushKV(i.first, i.second);\n         }\n         obj.pushKV(\"bytesrecv_per_msg\", recvPerMsgCmd);\n+        obj.pushKV(\"connection_type\", stats.m_conn_type_string);\n \n         ret.push_back(obj);\n     }"
      },
      {
        "sha": "b8a04f494d494ca45280bbbbc9b4398c872a848f",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/395acfa83a5436790c1a722a5609ac9d48df235f/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/395acfa83a5436790c1a722a5609ac9d48df235f/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=395acfa83a5436790c1a722a5609ac9d48df235f",
        "patch": "@@ -175,6 +175,12 @@ def test_getpeerinfo(self):\n         for info in peer_info:\n             assert_net_servicesnames(int(info[0][\"services\"], 0x10), info[0][\"servicesnames\"])\n \n+        assert_equal(peer_info[0][0]['connection_type'], 'inbound')\n+        assert_equal(peer_info[0][1]['connection_type'], 'manual')\n+\n+        assert_equal(peer_info[1][0]['connection_type'], 'manual')\n+        assert_equal(peer_info[1][1]['connection_type'], 'inbound')\n+\n     def test_service_flags(self):\n         self.log.info(\"Test service flags\")\n         self.nodes[0].add_p2p_connection(P2PInterface(), services=(1 << 4) | (1 << 63))"
      }
    ]
  },
  {
    "sha": "df091b9b509f0b10e4315c0bfa2da0cc0c31c22f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjA5MWI5YjUwOWYwYjEwZTQzMTVjMGJmYTJkYTBjYzBjMzFjMjJm",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-08-12T22:50:19Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-22T02:01:29Z"
      },
      "message": "[refactor] Rename test file to allow any getpeerinfo deprecations.\n\nSimple rename/restructure to allow for upcoming test additions.",
      "tree": {
        "sha": "111ac234541defc42b34200d01651ca4cdb63b04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/111ac234541defc42b34200d01651ca4cdb63b04"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "395acfa83a5436790c1a722a5609ac9d48df235f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/395acfa83a5436790c1a722a5609ac9d48df235f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/395acfa83a5436790c1a722a5609ac9d48df235f"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a4c2f7ccf82befb51c1c7376719bffc99509a735",
        "filename": "test/functional/rpc_getpeerinfo_deprecation.py",
        "status": "renamed",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f/test/functional/rpc_getpeerinfo_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f/test/functional/rpc_getpeerinfo_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getpeerinfo_deprecation.py?ref=df091b9b509f0b10e4315c0bfa2da0cc0c31c22f",
        "patch": "@@ -2,23 +2,25 @@\n # Copyright (c) 2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test deprecation of getpeerinfo RPC banscore field.\"\"\"\n+\"\"\"Test deprecation of getpeerinfo RPC fields.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n \n \n-class GetpeerinfoBanscoreDeprecationTest(BitcoinTestFramework):\n+class GetpeerinfoDeprecationTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.extra_args = [[], [\"-deprecatedrpc=banscore\"]]\n \n     def run_test(self):\n+        self.test_banscore_deprecation()\n+\n+    def test_banscore_deprecation(self):\n         self.log.info(\"Test getpeerinfo by default no longer returns a banscore field\")\n         assert \"banscore\" not in self.nodes[0].getpeerinfo()[0].keys()\n \n         self.log.info(\"Test getpeerinfo returns banscore with -deprecatedrpc=banscore\")\n         assert \"banscore\" in self.nodes[1].getpeerinfo()[0].keys()\n \n-\n if __name__ == \"__main__\":\n-    GetpeerinfoBanscoreDeprecationTest().main()\n+    GetpeerinfoDeprecationTest().main()",
        "previous_filename": "test/functional/rpc_getpeerinfo_banscore_deprecation.py"
      },
      {
        "sha": "c8cf173d5f969c845a7d29e34b35f9523ff7c6e8",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=df091b9b509f0b10e4315c0bfa2da0cc0c31c22f",
        "patch": "@@ -251,7 +251,7 @@\n     'feature_config_args.py',\n     'feature_settings.py',\n     'rpc_getdescriptorinfo.py',\n-    'rpc_getpeerinfo_banscore_deprecation.py',\n+    'rpc_getpeerinfo_deprecation.py',\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',"
      }
    ]
  },
  {
    "sha": "50f94b34a33c954f6e207f509c93d33267a5c3e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGY5NGIzNGEzM2M5NTRmNmUyMDdmNTA5YzkzZDMzMjY3YTVjM2Uy",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-08-12T23:04:50Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-22T02:01:29Z"
      },
      "message": "[rpc] Deprecate getpeerinfo addnode field\n\nThis field is now redundant since the connection type field will indicate\nMANUAL for addnode connections.",
      "tree": {
        "sha": "3ad8267877ba8e6e634707c79e22525b49d640ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ad8267877ba8e6e634707c79e22525b49d640ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50f94b34a33c954f6e207f509c93d33267a5c3e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f94b34a33c954f6e207f509c93d33267a5c3e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50f94b34a33c954f6e207f509c93d33267a5c3e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f94b34a33c954f6e207f509c93d33267a5c3e2/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df091b9b509f0b10e4315c0bfa2da0cc0c31c22f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df091b9b509f0b10e4315c0bfa2da0cc0c31c22f"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 19,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e195affd542c915299c0976360aff4e47f7f606b",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50f94b34a33c954f6e207f509c93d33267a5c3e2/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50f94b34a33c954f6e207f509c93d33267a5c3e2/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=50f94b34a33c954f6e207f509c93d33267a5c3e2",
        "patch": "@@ -112,7 +112,8 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n                             {RPCResult::Type::NUM, \"version\", \"The peer version, such as 70001\"},\n                             {RPCResult::Type::STR, \"subver\", \"The string version\"},\n                             {RPCResult::Type::BOOL, \"inbound\", \"Inbound (true) or Outbound (false)\"},\n-                            {RPCResult::Type::BOOL, \"addnode\", \"Whether connection was due to addnode/-connect or if it was an automatic/inbound connection\"},\n+                            {RPCResult::Type::BOOL, \"addnode\", \"Whether connection was due to addnode/-connect or if it was an automatic/inbound connection\\n\"\n+                                                               \"(DEPRECATED, returned only if the config option -deprecatedrpc=getpeerinfo_addnode is passed)\"},\n                             {RPCResult::Type::STR, \"connection_type\", \"Type of connection: \\n\" + Join(CONNECTION_TYPE_DOC, \",\\n\") + \".\"},\n                             {RPCResult::Type::NUM, \"startingheight\", \"The starting height (block) of the peer\"},\n                             {RPCResult::Type::NUM, \"banscore\", \"The ban score (DEPRECATED, returned only if config option -deprecatedrpc=banscore is passed)\"},\n@@ -193,7 +194,10 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n         // their ver message.\n         obj.pushKV(\"subver\", stats.cleanSubVer);\n         obj.pushKV(\"inbound\", stats.fInbound);\n-        obj.pushKV(\"addnode\", stats.m_manual_connection);\n+        if (IsDeprecatedRPCEnabled(\"getpeerinfo_addnode\")) {\n+            // addnode is deprecated in v0.21 for removal in v0.22\n+            obj.pushKV(\"addnode\", stats.m_manual_connection);\n+        }\n         obj.pushKV(\"startingheight\", stats.nStartingHeight);\n         if (fStateStats) {\n             if (IsDeprecatedRPCEnabled(\"banscore\")) {"
      },
      {
        "sha": "287c40ae3e19fbb41107f0171aa4adbf111cc8cd",
        "filename": "test/functional/rpc_getpeerinfo_deprecation.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50f94b34a33c954f6e207f509c93d33267a5c3e2/test/functional/rpc_getpeerinfo_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50f94b34a33c954f6e207f509c93d33267a5c3e2/test/functional/rpc_getpeerinfo_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getpeerinfo_deprecation.py?ref=50f94b34a33c954f6e207f509c93d33267a5c3e2",
        "patch": "@@ -5,6 +5,7 @@\n \"\"\"Test deprecation of getpeerinfo RPC fields.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import connect_nodes\n \n \n class GetpeerinfoDeprecationTest(BitcoinTestFramework):\n@@ -14,6 +15,7 @@ def set_test_params(self):\n \n     def run_test(self):\n         self.test_banscore_deprecation()\n+        self.test_addnode_deprecation()\n \n     def test_banscore_deprecation(self):\n         self.log.info(\"Test getpeerinfo by default no longer returns a banscore field\")\n@@ -22,5 +24,16 @@ def test_banscore_deprecation(self):\n         self.log.info(\"Test getpeerinfo returns banscore with -deprecatedrpc=banscore\")\n         assert \"banscore\" in self.nodes[1].getpeerinfo()[0].keys()\n \n+    def test_addnode_deprecation(self):\n+        self.restart_node(1, [\"-deprecatedrpc=getpeerinfo_addnode\"])\n+        connect_nodes(self.nodes[0], 1)\n+\n+        self.log.info(\"Test getpeerinfo by default no longer returns an addnode field\")\n+        assert \"addnode\" not in self.nodes[0].getpeerinfo()[0].keys()\n+\n+        self.log.info(\"Test getpeerinfo returns addnode with -deprecatedrpc=addnode\")\n+        assert \"addnode\" in self.nodes[1].getpeerinfo()[0].keys()\n+\n+\n if __name__ == \"__main__\":\n     GetpeerinfoDeprecationTest().main()"
      }
    ]
  },
  {
    "sha": "a512925e19a70d7f6b80ac530a169f45ffaafa1c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTEyOTI1ZTE5YTcwZDdmNmI4MGFjNTMwYTE2OWY0NWZmYWFmYTFj",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-08-12T23:45:26Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-22T02:03:40Z"
      },
      "message": "[doc] Release notes",
      "tree": {
        "sha": "6fb374c2389ffa8e0ecc10dde07c42af86c51d84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6fb374c2389ffa8e0ecc10dde07c42af86c51d84"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a512925e19a70d7f6b80ac530a169f45ffaafa1c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a512925e19a70d7f6b80ac530a169f45ffaafa1c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a512925e19a70d7f6b80ac530a169f45ffaafa1c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a512925e19a70d7f6b80ac530a169f45ffaafa1c/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50f94b34a33c954f6e207f509c93d33267a5c3e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50f94b34a33c954f6e207f509c93d33267a5c3e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50f94b34a33c954f6e207f509c93d33267a5c3e2"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "059c8cd029b30099e1473bc11f618b81bfedcfcf",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a512925e19a70d7f6b80ac530a169f45ffaafa1c/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a512925e19a70d7f6b80ac530a169f45ffaafa1c/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=a512925e19a70d7f6b80ac530a169f45ffaafa1c",
        "patch": "@@ -105,6 +105,17 @@ will trigger BIP 125 (replace-by-fee) opt-in. (#11413)\n - The `testmempoolaccept` RPC returns `vsize` and a `fee` object with the `base` fee\n   if the transaction passes validation. (#19940)\n \n+- The `getpeerinfo` RPC now returns a `connection_type` field. This indicates\n+  the type of connection established with the peer. It will return one of six\n+  options. For more information, see the `getpeerinfo` help documentation.\n+  (#19725)\n+\n+- The `getpeerinfo` RPC no longer returns the `addnode` field by default. This\n+  field will be fully removed in the next major release.  It can be accessed\n+  with the configuration option `-deprecatedrpc=getpeerinfo_addnode`. However,\n+  it is recommended to instead use the `connection_type` field (it will return\n+  `manual` when addnode is true). (#19725)\n+\n - The `walletcreatefundedpsbt` RPC call will now fail with\n   `Insufficient funds` when inputs are manually selected but are not enough to cover\n   the outputs and fee. Additional inputs can automatically be added through the"
      }
    ]
  }
]