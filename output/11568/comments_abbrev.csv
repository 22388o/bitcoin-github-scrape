sdaftuar,2017-10-26T20:40:31Z,Needed rebase,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-339794211,339794211,
TheBlueMatt,2017-10-26T21:57:32Z,utACK 8ca0ffa127e1a11dca3a17f6d9b3079e92fd3771,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-339812899,339812899,
theuni,2017-10-27T07:05:19Z,"Concept ACK. No hostility intended, I'm just still having a hard time understanding the intended ban/disconnect behavior.",https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-339890772,339890772,
sdaftuar,2017-10-27T18:14:02Z,"I reworked the disconnect logic to (hopefully) be much clearer, and narrowly tailored to the situation that we're interested in.",https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340045820,340045820,
achow101,2017-10-27T18:25:20Z,utACK 4cde638d4ce054ffdadc3bf65ae5dfa81b01aee2,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340048564,340048564,
jnewbery,2017-10-27T20:10:02Z,"Somewhat tested ACK 4cde638d4ce054ffdadc3bf65ae5dfa81b01aee2.\n\nI have a test case that proves a peer gets kicked for sending an invalid header here: https://github.com/jnewbery/bitcoin/tree/pr11568.2 so I can verify that this PR works in the positive case (ie it disconnects when it's supposed to). I don't think that there are corner cases where this PR might cause other changes in existing beh",https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340073347,340073347,
theuni,2017-10-27T20:18:11Z,utACK other than https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147494692,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340075148,340075148,
TheBlueMatt,2017-10-27T20:24:11Z,ewww-ewww-ewww-ewww-ewww-I've-already-started-working-on-rewriting-DoS-interface utACK bf5494badac903af51802e9aeb1ca1ca0f83a59c,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340076377,340076377,
theuni,2017-10-27T20:27:37Z,"@sdaftuar Thanks!\n\n@TheBlueMatt Please consider working on top of #11457 (will rebase) which allows for much more straightforward banning.",https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340077055,340077055,
sdaftuar,2017-10-27T20:31:42Z,Squashed https://github.com/sdaftuar/bitcoin/commits/11568.0 -> 37886d5e2f9992678dea4b1bd893f4f10d61d3ad,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340077898,340077898,
theuni,2017-10-27T20:41:21Z,Verified same as unsquashed. utACK 37886d5.,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340079974,340079974,
laanwj,2017-10-28T16:41:20Z,utACK 37886d5,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340203848,340203848,
meshcollider,2017-10-28T20:15:53Z,Posthumous utACK https://github.com/bitcoin/bitcoin/commit/37886d5e2f9992678dea4b1bd893f4f10d61d3ad,https://github.com/bitcoin/bitcoin/pull/11568#issuecomment-340217002,340217002,
theuni,2017-10-27T06:55:15Z,"Carrying forward my cranky-old-man-rant from: https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144654182\n\nThis is crazy-confusing to read. If the header was bad enough to earn them some ban points, put the points on the score-board and carry on. But if it wasn't bad enough for points, kick them immediately.\n\nIf we're punishing for invalid, I think the disconnect needs to always ha",https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147334764,147334764,src/net_processing.cpp
theuni,2017-10-27T06:57:37Z,"It's weird to have a punish_invalid param that only punishes based on its own criteria. That means that both sites have to consider all constraints.\n\nInstead, from the ::HEADERS handler, how about something like:\n```c++\nbool punish_invalid = !pfrom->fInbound && !pfrom->m_manual_connection;\nProcessHeadersMessage(..., should_punish);\n```",https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147335063,147335063,src/net_processing.cpp
achow101,2017-10-27T15:31:39Z,I agree with @theuni. Think this should be `if ...` not `else if ...` so that we always disconnect on invalid blocks.,https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147442770,147442770,src/net_processing.cpp
TheBlueMatt,2017-10-27T15:38:26Z,"Obviously this is very, very much a stop-gap for 0.15.0.2. Next up is refactoring the CValidationState logic to have a concept of *what* went wrong (bad-by-soft-fork, bad-by-prev-block, bad-by-....) and then just move all of the DoS logic into net_processing. I believe a switch to if instead of else if may break the ""prev block not found"" handling, so I'm happy to commit to pushing for a DoS overh",https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147444455,147444455,src/net_processing.cpp
ryanofsky,2017-10-27T15:46:15Z,Can you add a comment saying why this avoids disconnecting on compact block messages with invalid headers? It's unclear whether it's important not to disconnect or whether it's an arbitrary decision and you're just being conservative. You could also consider renaming punish_invalid to disconnect_invalid or similar to be more specific.,https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147446565,147446565,src/net_processing.cpp
ryanofsky,2017-10-27T15:50:41Z,"This suggestion doesn't apply if you make the changes Cory and Andrew are asking, but otherwise it would be nice if this comment said something about why it avoids disconnecting when nDoS > 0.",https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147447693,147447693,src/net_processing.cpp
sdaftuar,2017-10-27T16:19:25Z,Sounds good.,https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147454687,147454687,src/net_processing.cpp
sdaftuar,2017-10-27T18:00:57Z,"After further analysis, I think the logic I've presented here is undesirable, because there is at least one situation where we should not disconnect an outbound peer for an invalid block header, which is when the block timestamp is too far in the future.  This is a problem whether or not we break this `else if` out into its own `if` clause.\n\nI'm going to add a commit that reworks this to expli",https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147477607,147477607,src/net_processing.cpp
sdaftuar,2017-10-27T18:47:19Z,Done,https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147488855,147488855,src/net_processing.cpp
sdaftuar,2017-10-27T18:47:37Z,Reworked this and added an explanatory comment.,https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147488919,147488919,src/net_processing.cpp
theuni,2017-10-27T19:13:55Z,I think the hacky vHeadersMsg serialization stuff can be removed now that ProcessHeadersMessage is factored out.,https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147494692,147494692,src/net_processing.cpp
sdaftuar,2017-10-27T20:18:38Z,"Thanks, I had been looking forward to nuking that, and then forgot! Done.",https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147507583,147507583,src/net_processing.cpp
laanwj,2017-10-28T16:43:57Z,"Thanks for adding a comment before the argument, that's a good way to avoid boolean arguments turning into an unreadable blob of arguments.",https://github.com/bitcoin/bitcoin/pull/11568#discussion_r147558672,147558672,src/net_processing.cpp
