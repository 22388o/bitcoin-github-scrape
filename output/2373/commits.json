[
  {
    "sha": "8bd02881899bbae2d8e5082081e02c7d577994e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YmQwMjg4MTg5OWJiYWUyZDhlNTA4MjA4MWUwMmM3ZDU3Nzk5NGU1",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-15T17:10:34Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-15T22:40:41Z"
      },
      "message": "CheckBlock rule until 15-May for 10,000 BDB lock compatibility",
      "tree": {
        "sha": "691b1e9fdfdc0dd90ad7d647c6969e41bfdedbf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/691b1e9fdfdc0dd90ad7d647c6969e41bfdedbf5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bd02881899bbae2d8e5082081e02c7d577994e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bd02881899bbae2d8e5082081e02c7d577994e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8bd02881899bbae2d8e5082081e02c7d577994e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bd02881899bbae2d8e5082081e02c7d577994e5/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44d7f4cbebd446f8f4a48ff9048d4549c0e2448a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44d7f4cbebd446f8f4a48ff9048d4549c0e2448a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44d7f4cbebd446f8f4a48ff9048d4549c0e2448a"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 85,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a7cd975d53333c505b752d5759b4c2745fbadc40",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bd02881899bbae2d8e5082081e02c7d577994e5/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bd02881899bbae2d8e5082081e02c7d577994e5/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8bd02881899bbae2d8e5082081e02c7d577994e5",
        "patch": "@@ -2053,6 +2053,25 @@ bool CBlock::CheckBlock(CValidationState &state, bool fCheckPOW, bool fCheckMerk\n     if (vtx.empty() || vtx.size() > MAX_BLOCK_SIZE || ::GetSerializeSize(*this, SER_NETWORK, PROTOCOL_VERSION) > MAX_BLOCK_SIZE)\n         return state.DoS(100, error(\"CheckBlock() : size limits failed\"));\n \n+    // Special short-term limits to avoid 10,000 BDB lock limit:\n+    if (GetBlockTime() > 1363039171 && // 11 March 2013, timestamp of block before the big fork\n+        GetBlockTime() < 1368576000)  // 15 May 2013 00:00:00\n+    {\n+        // Rule is: #unique txids referenced <= 4,500\n+        // ... to prevent 10,000 BDB lock exhaustion on old clients\n+        set<uint256> setTxIn;\n+        for (size_t i = 0; i < vtx.size(); i++)\n+        {\n+            setTxIn.insert(vtx[i].GetHash());\n+            if (i == 0) continue; // skip coinbase txin\n+            BOOST_FOREACH(const CTxIn& txin, vtx[i].vin)\n+                setTxIn.insert(txin.prevout.hash);\n+        }\n+        size_t nTxids = setTxIn.size();\n+        if (nTxids > 4500)\n+            return error(\"CheckBlock() : 15 May maxlocks violation\");\n+    }\n+\n     // Check proof of work matches claimed amount\n     if (fCheckPOW && !CheckProofOfWork(GetHash(), nBits))\n         return state.DoS(50, error(\"CheckBlock() : proof of work failed\"));"
      },
      {
        "sha": "e167defb2789bed7bcf2b39f83c6f7598d64f561",
        "filename": "src/test/checkblock_tests.cpp",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bd02881899bbae2d8e5082081e02c7d577994e5/src/test/checkblock_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bd02881899bbae2d8e5082081e02c7d577994e5/src/test/checkblock_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkblock_tests.cpp?ref=8bd02881899bbae2d8e5082081e02c7d577994e5",
        "patch": "@@ -0,0 +1,66 @@\n+//\n+// Unit tests for block.CheckBlock()\n+//\n+#include <algorithm>\n+\n+#include <boost/assign/list_of.hpp> // for 'map_list_of()'\n+#include <boost/date_time/posix_time/posix_time_types.hpp>\n+#include <boost/test/unit_test.hpp>\n+#include <boost/foreach.hpp>\n+\n+#include \"main.h\"\n+#include \"wallet.h\"\n+#include \"net.h\"\n+#include \"util.h\"\n+\n+BOOST_AUTO_TEST_SUITE(CheckBlock_tests)\n+\n+bool\n+read_block(const std::string& filename, CBlock& block)\n+{\n+    namespace fs = boost::filesystem;\n+    fs::path testFile = fs::current_path() / \"test\" / \"data\" / filename;\n+#ifdef TEST_DATA_DIR\n+    if (!fs::exists(testFile))\n+    {\n+        testFile = fs::path(BOOST_PP_STRINGIZE(TEST_DATA_DIR)) / filename;\n+    }\n+#endif\n+    FILE* fp = fopen(testFile.string().c_str(), \"rb\");\n+    if (!fp) return false;\n+\n+    fseek(fp, 8, SEEK_SET); // skip msgheader/size\n+\n+    CAutoFile filein = CAutoFile(fp, SER_DISK, CLIENT_VERSION);\n+    if (!filein) return false;\n+\n+    filein >> block;\n+\n+    return true;\n+}\n+\n+BOOST_AUTO_TEST_CASE(May15)\n+{\n+    // Putting a 1MB binary file in the git repository is not a great\n+    // idea, so this test is only run if you manually download\n+    // test/data/Mar12Fork.dat from\n+    // http://sourceforge.net/projects/bitcoin/files/Bitcoin/blockchain/Mar12Fork.dat/download\n+    unsigned int tMay15 = 1368576000;\n+    SetMockTime(tMay15); // Test as if it was right at May 15\n+\n+    CBlock forkingBlock;\n+    if (read_block(\"Mar12Fork.dat\", forkingBlock))\n+    {\n+        CValidationState state;\n+        BOOST_CHECK(!forkingBlock.CheckBlock(state, true, true));\n+        BOOST_CHECK(!forkingBlock.CheckBlock(state, false, false));\n+\n+        // After May 15'th, big blocks are OK:\n+        forkingBlock.nTime = tMay15; // Invalidates PoW\n+        BOOST_CHECK(forkingBlock.CheckBlock(state, false, false));\n+    }\n+\n+    SetMockTime(0);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "298db97f231661a5cafab37dc9a591f1980b7f5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOThkYjk3ZjIzMTY2MWE1Y2FmYWIzN2RjOWE1OTFmMTk4MGI3ZjVh",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-15T18:43:33Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-15T22:40:41Z"
      },
      "message": "Before 15 May, limit created block size to 500K",
      "tree": {
        "sha": "33f4bde2b9128c7e5741e49ce98e097df8a394de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33f4bde2b9128c7e5741e49ce98e097df8a394de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/298db97f231661a5cafab37dc9a591f1980b7f5a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/298db97f231661a5cafab37dc9a591f1980b7f5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/298db97f231661a5cafab37dc9a591f1980b7f5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/298db97f231661a5cafab37dc9a591f1980b7f5a/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bd02881899bbae2d8e5082081e02c7d577994e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bd02881899bbae2d8e5082081e02c7d577994e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bd02881899bbae2d8e5082081e02c7d577994e5"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8626fa56a616a6cc7a387ede67185bb4b5a765b2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/298db97f231661a5cafab37dc9a591f1980b7f5a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/298db97f231661a5cafab37dc9a591f1980b7f5a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=298db97f231661a5cafab37dc9a591f1980b7f5a",
        "patch": "@@ -4152,6 +4152,10 @@ CBlockTemplate* CreateNewBlock(CReserveKey& reservekey)\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));\n \n+    // Special compatibility rule before 15 May: limit size to 500,000 bytes:\n+    if (GetAdjustedTime() < 1368576000)\n+        nBlockMaxSize = std::min(nBlockMaxSize, (unsigned int)(MAX_BLOCK_SIZE_GEN));\n+\n     // How much of the block should be dedicated to high-priority transactions,\n     // included regardless of the fees they pay\n     unsigned int nBlockPrioritySize = GetArg(\"-blockprioritysize\", 27000);"
      }
    ]
  }
]