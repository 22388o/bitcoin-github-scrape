[
  {
    "sha": "6a318e48a67a8f9834e14c960bd4f5b6e295b2dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTMxOGU0OGE2N2E4Zjk4MzRlMTRjOTYwYmQ0ZjViNmUyOTViMmRj",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-25T20:49:33Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-26T10:08:08Z"
      },
      "message": "Reduce variable scopes",
      "tree": {
        "sha": "bc7803e9200604881fc9059ba3d5e23da8d0e563",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc7803e9200604881fc9059ba3d5e23da8d0e563"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7466a26cab5d66665991433947964a638f5b957e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7466a26cab5d66665991433947964a638f5b957e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7466a26cab5d66665991433947964a638f5b957e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "f045053c3b91b12dac6442096f532ece9a7d53bd",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=6a318e48a67a8f9834e14c960bd4f5b6e295b2dc",
        "patch": "@@ -139,10 +139,9 @@ bool RecentRequestsTableModel::removeRows(int row, int count, const QModelIndex\n \n     if(count > 0 && row >= 0 && (row+count) <= list.size())\n     {\n-        const RecentRequestEntry *rec;\n         for (int i = 0; i < count; ++i)\n         {\n-            rec = &list[row+i];\n+            const RecentRequestEntry* rec = &list[row+i];\n             if (!walletModel->saveReceiveRequest(rec->recipient.address.toStdString(), rec->id, \"\"))\n                 return false;\n         }"
      },
      {
        "sha": "9390a93b99f8c3b72da66dd081c5ff81539f1c46",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=6a318e48a67a8f9834e14c960bd4f5b6e295b2dc",
        "patch": "@@ -145,9 +145,9 @@ TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>&\n     for (const CMutableTransaction& tx : txns)\n         block.vtx.push_back(MakeTransactionRef(tx));\n     // IncrementExtraNonce creates a valid coinbase and merkleRoot\n-    unsigned int extraNonce = 0;\n     {\n         LOCK(cs_main);\n+        unsigned int extraNonce = 0;\n         IncrementExtraNonce(&block, chainActive.Tip(), extraNonce);\n     }\n "
      },
      {
        "sha": "b0c5c53016161265ffff0ae5e7a51ce7b719f6d0",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a318e48a67a8f9834e14c960bd4f5b6e295b2dc/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=6a318e48a67a8f9834e14c960bd4f5b6e295b2dc",
        "patch": "@@ -704,9 +704,8 @@ static constexpr char ExitCommand = 'X';\n static void TestOtherProcess(fs::path dirname, std::string lockname, int fd)\n {\n     char ch;\n-    int rv;\n     while (true) {\n-        rv = read(fd, &ch, 1); // Wait for command\n+        int rv = read(fd, &ch, 1); // Wait for command\n         assert(rv == 1);\n         switch(ch) {\n         case LockCommand:"
      }
    ]
  }
]