[
  {
    "sha": "c63198f1c787d69052d6332c5e52118f58eacf56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjMxOThmMWM3ODdkNjkwNTJkNjMzMmM1ZTUyMTE4ZjU4ZWFjZjU2",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-11-29T01:00:11Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-03T07:17:28Z"
      },
      "message": "Make QT runawayException call GetWarnings instead of directly access strMiscWarning.\n\nThis is a first step in avoiding racy accesses to strMiscWarning.\n\nThe change required moving GetWarnings and related globals to util.",
      "tree": {
        "sha": "3f2debf1c040c2168f1e38aaf9ffaee738a89a82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f2debf1c040c2168f1e38aaf9ffaee738a89a82"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c63198f1c787d69052d6332c5e52118f58eacf56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c63198f1c787d69052d6332c5e52118f58eacf56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c63198f1c787d69052d6332c5e52118f58eacf56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c63198f1c787d69052d6332c5e52118f58eacf56/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2efcfa5acfacb958973d9e8125e1d81f102e2dfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2efcfa5acfacb958973d9e8125e1d81f102e2dfd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2efcfa5acfacb958973d9e8125e1d81f102e2dfd"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 59,
      "deletions": 49
    },
    "files": [
      {
        "sha": "ba49830297559eb24cdd2605bdcf641474bff298",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c63198f1c787d69052d6332c5e52118f58eacf56/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c63198f1c787d69052d6332c5e52118f58eacf56/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=c63198f1c787d69052d6332c5e52118f58eacf56",
        "patch": "@@ -260,7 +260,7 @@ BitcoinCore::BitcoinCore():\n void BitcoinCore::handleRunawayException(const std::exception *e)\n {\n     PrintExceptionContinue(e, \"Runaway exception\");\n-    Q_EMIT runawayException(QString::fromStdString(strMiscWarning));\n+    Q_EMIT runawayException(QString::fromStdString(GetWarnings(\"gui\")));\n }\n \n void BitcoinCore::initialize()\n@@ -691,10 +691,10 @@ int main(int argc, char *argv[])\n         app.exec();\n     } catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"Runaway exception\");\n-        app.handleRunawayException(QString::fromStdString(strMiscWarning));\n+        app.handleRunawayException(QString::fromStdString(GetWarnings(\"gui\")));\n     } catch (...) {\n         PrintExceptionContinue(NULL, \"Runaway exception\");\n-        app.handleRunawayException(QString::fromStdString(strMiscWarning));\n+        app.handleRunawayException(QString::fromStdString(GetWarnings(\"gui\")));\n     }\n     return app.getReturnValue();\n }"
      },
      {
        "sha": "a2e6b85d297d6ffc7ef6090494ed63455b18c4cc",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c63198f1c787d69052d6332c5e52118f58eacf56/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c63198f1c787d69052d6332c5e52118f58eacf56/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=c63198f1c787d69052d6332c5e52118f58eacf56",
        "patch": "@@ -107,7 +107,11 @@ map<string, vector<string> > mapMultiArgs;\n bool fDebug = false;\n bool fPrintToConsole = false;\n bool fPrintToDebugLog = true;\n+\n string strMiscWarning;\n+bool fLargeWorkForkFound = false;\n+bool fLargeWorkInvalidChainFound = false;\n+\n bool fLogTimestamps = DEFAULT_LOGTIMESTAMPS;\n bool fLogTimeMicros = DEFAULT_LOGTIMEMICROS;\n bool fLogIPs = DEFAULT_LOGIPS;\n@@ -808,3 +812,46 @@ std::string CopyrightHolders(const std::string& strPrefix)\n     }\n     return strCopyrightHolders;\n }\n+\n+std::string GetWarnings(const std::string& strFor)\n+{\n+    string strStatusBar;\n+    string strRPC;\n+    string strGUI;\n+    const string uiAlertSeperator = \"<hr />\";\n+\n+    if (!CLIENT_VERSION_IS_RELEASE) {\n+        strStatusBar = \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\";\n+        strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n+    }\n+\n+    if (GetBoolArg(\"-testsafemode\", DEFAULT_TESTSAFEMODE))\n+        strStatusBar = strRPC = strGUI = \"testsafemode enabled\";\n+\n+    // Misc warnings like out of disk space and clock is wrong\n+    if (strMiscWarning != \"\")\n+    {\n+        strStatusBar = strMiscWarning;\n+        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + strMiscWarning;\n+    }\n+\n+    if (fLargeWorkForkFound)\n+    {\n+        strStatusBar = strRPC = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n+        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n+    }\n+    else if (fLargeWorkInvalidChainFound)\n+    {\n+        strStatusBar = strRPC = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n+        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n+    }\n+\n+    if (strFor == \"gui\")\n+        return strGUI;\n+    else if (strFor == \"statusbar\")\n+        return strStatusBar;\n+    else if (strFor == \"rpc\")\n+        return strRPC;\n+    assert(!\"GetWarnings(): invalid parameter\");\n+    return \"error\";\n+}"
      },
      {
        "sha": "edc190e1e5257df97c1eaf5de3136ac24f0376a4",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c63198f1c787d69052d6332c5e52118f58eacf56/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c63198f1c787d69052d6332c5e52118f58eacf56/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=c63198f1c787d69052d6332c5e52118f58eacf56",
        "patch": "@@ -46,7 +46,12 @@ extern std::map<std::string, std::vector<std::string> > mapMultiArgs;\n extern bool fDebug;\n extern bool fPrintToConsole;\n extern bool fPrintToDebugLog;\n+\n+static const bool DEFAULT_TESTSAFEMODE = false;\n extern std::string strMiscWarning;\n+extern bool fLargeWorkForkFound;\n+extern bool fLargeWorkInvalidChainFound;\n+\n extern bool fLogTimestamps;\n extern bool fLogTimeMicros;\n extern bool fLogIPs;\n@@ -224,4 +229,6 @@ template <typename Callable> void TraceThread(const char* name,  Callable func)\n \n std::string CopyrightHolders(const std::string& strPrefix);\n \n+std::string GetWarnings(const std::string& strFor);\n+\n #endif // BITCOIN_UTIL_H"
      },
      {
        "sha": "a17ae041db3251d498e688bbd8f807de046600bc",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 45,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c63198f1c787d69052d6332c5e52118f58eacf56/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c63198f1c787d69052d6332c5e52118f58eacf56/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=c63198f1c787d69052d6332c5e52118f58eacf56",
        "patch": "@@ -1149,8 +1149,6 @@ bool IsInitialBlockDownload()\n     return false;\n }\n \n-bool fLargeWorkForkFound = false;\n-bool fLargeWorkInvalidChainFound = false;\n CBlockIndex *pindexBestForkTip = NULL, *pindexBestForkBase = NULL;\n \n static void AlertNotify(const std::string& strMessage)\n@@ -4005,51 +4003,10 @@ void static CheckBlockIndex(const Consensus::Params& consensusParams)\n     assert(nNodes == forward.size());\n }\n \n-std::string GetWarnings(const std::string& strFor)\n+std::string CBlockFileInfo::ToString() const\n {\n-    string strStatusBar;\n-    string strRPC;\n-    string strGUI;\n-    const string uiAlertSeperator = \"<hr />\";\n-\n-    if (!CLIENT_VERSION_IS_RELEASE) {\n-        strStatusBar = \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\";\n-        strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n-    }\n-\n-    if (GetBoolArg(\"-testsafemode\", DEFAULT_TESTSAFEMODE))\n-        strStatusBar = strRPC = strGUI = \"testsafemode enabled\";\n-\n-    // Misc warnings like out of disk space and clock is wrong\n-    if (strMiscWarning != \"\")\n-    {\n-        strStatusBar = strMiscWarning;\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + strMiscWarning;\n-    }\n-\n-    if (fLargeWorkForkFound)\n-    {\n-        strStatusBar = strRPC = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n-    }\n-    else if (fLargeWorkInvalidChainFound)\n-    {\n-        strStatusBar = strRPC = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n-    }\n-\n-    if (strFor == \"gui\")\n-        return strGUI;\n-    else if (strFor == \"statusbar\")\n-        return strStatusBar;\n-    else if (strFor == \"rpc\")\n-        return strRPC;\n-    assert(!\"GetWarnings(): invalid parameter\");\n-    return \"error\";\n+    return strprintf(\"CBlockFileInfo(blocks=%u, size=%u, heights=%u...%u, time=%s...%s)\", nBlocks, nSize, nHeightFirst, nHeightLast, DateTimeStrFormat(\"%Y-%m-%d\", nTimeFirst), DateTimeStrFormat(\"%Y-%m-%d\", nTimeLast));\n }\n- std::string CBlockFileInfo::ToString() const {\n-     return strprintf(\"CBlockFileInfo(blocks=%u, size=%u, heights=%u...%u, time=%s...%s)\", nBlocks, nSize, nHeightFirst, nHeightLast, DateTimeStrFormat(\"%Y-%m-%d\", nTimeFirst), DateTimeStrFormat(\"%Y-%m-%d\", nTimeLast));\n- }\n \n ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n {"
      },
      {
        "sha": "7049cd232f1f7cebaaa5737d07945434cf87e2e6",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c63198f1c787d69052d6332c5e52118f58eacf56/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c63198f1c787d69052d6332c5e52118f58eacf56/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=c63198f1c787d69052d6332c5e52118f58eacf56",
        "patch": "@@ -137,7 +137,6 @@ static const bool DEFAULT_CHECKPOINTS_ENABLED = true;\n static const bool DEFAULT_TXINDEX = false;\n static const unsigned int DEFAULT_BANSCORE_THRESHOLD = 100;\n \n-static const bool DEFAULT_TESTSAFEMODE = false;\n /** Default for -mempoolreplacement */\n static const bool DEFAULT_ENABLE_REPLACEMENT = true;\n /** Default for using fee filter */"
      }
    ]
  },
  {
    "sha": "e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2JhMGVmOTU2MzYyOTBhM2JiNTk3ZGRkMjVkMTNlYTEzYjAzNGFh",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-11-29T09:46:19Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-03T07:17:34Z"
      },
      "message": "Eliminate data races for strMiscWarning and fLargeWork*Found.\n\nThis moves all access to these datastructures through accessor functions\n and protects them with a lock.",
      "tree": {
        "sha": "41f2d20d968a2437bdde4ac3a3ded4700220fb4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41f2d20d968a2437bdde4ac3a3ded4700220fb4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c63198f1c787d69052d6332c5e52118f58eacf56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c63198f1c787d69052d6332c5e52118f58eacf56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c63198f1c787d69052d6332c5e52118f58eacf56"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 53,
      "deletions": 16
    },
    "files": [
      {
        "sha": "256c91016dbc98c9dadc1821be47e7ff753e0d83",
        "filename": "src/timedata.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/src/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/src/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.cpp?ref=e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
        "patch": "@@ -103,8 +103,8 @@ void AddTimeData(const CNetAddr& ip, int64_t nOffsetSample)\n                 if (!fMatch)\n                 {\n                     fDone = true;\n-                    string strMessage = strprintf(_(\"Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.\"), _(PACKAGE_NAME));\n-                    strMiscWarning = strMessage;\n+                    std::string strMessage = strprintf(_(\"Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.\"), _(PACKAGE_NAME));\n+                    SetMiscWarning(strMessage);\n                     uiInterface.ThreadSafeMessageBox(strMessage, \"\", CClientUIInterface::MSG_WARNING);\n                 }\n             }"
      },
      {
        "sha": "92a5b34a3ff2ad280d9268c3b728e549c5182a30",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
        "patch": "@@ -108,6 +108,7 @@ bool fDebug = false;\n bool fPrintToConsole = false;\n bool fPrintToDebugLog = true;\n \n+CCriticalSection cs_warnings;\n string strMiscWarning;\n bool fLargeWorkForkFound = false;\n bool fLargeWorkInvalidChainFound = false;\n@@ -813,13 +814,45 @@ std::string CopyrightHolders(const std::string& strPrefix)\n     return strCopyrightHolders;\n }\n \n+void SetMiscWarning(const std::string& strWarning)\n+{\n+    LOCK(cs_warnings);\n+    strMiscWarning = strWarning;\n+}\n+\n+void SetfLargeWorkForkFound(bool flag)\n+{\n+    LOCK(cs_warnings);\n+    fLargeWorkForkFound = flag;\n+}\n+\n+bool GetfLargeWorkForkFound()\n+{\n+    LOCK(cs_warnings);\n+    return fLargeWorkForkFound;\n+}\n+\n+void SetfLargeWorkInvalidChainFound(bool flag)\n+{\n+    LOCK(cs_warnings);\n+    fLargeWorkInvalidChainFound = flag;\n+}\n+\n+bool GetfLargeWorkInvalidChainFound()\n+{\n+    LOCK(cs_warnings);\n+    return fLargeWorkInvalidChainFound;\n+}\n+\n std::string GetWarnings(const std::string& strFor)\n {\n     string strStatusBar;\n     string strRPC;\n     string strGUI;\n     const string uiAlertSeperator = \"<hr />\";\n \n+    LOCK(cs_warnings);\n+\n     if (!CLIENT_VERSION_IS_RELEASE) {\n         strStatusBar = \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\";\n         strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");"
      },
      {
        "sha": "b34966fd805130558235c63cc06eceb62d670814",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
        "patch": "@@ -48,9 +48,6 @@ extern bool fPrintToConsole;\n extern bool fPrintToDebugLog;\n \n static const bool DEFAULT_TESTSAFEMODE = false;\n-extern std::string strMiscWarning;\n-extern bool fLargeWorkForkFound;\n-extern bool fLargeWorkInvalidChainFound;\n \n extern bool fLogTimestamps;\n extern bool fLogTimeMicros;\n@@ -229,6 +226,11 @@ template <typename Callable> void TraceThread(const char* name,  Callable func)\n \n std::string CopyrightHolders(const std::string& strPrefix);\n \n+void SetMiscWarning(const std::string& strWarning);\n+void SetfLargeWorkForkFound(bool flag);\n+bool GetfLargeWorkForkFound();\n+void SetfLargeWorkInvalidChainFound(bool flag);\n+bool GetfLargeWorkInvalidChainFound();\n std::string GetWarnings(const std::string& strFor);\n \n #endif // BITCOIN_UTIL_H"
      },
      {
        "sha": "fde52ea74def88f3ba6b3cb2c87a9ad86b091f0a",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3ba0ef95636290a3bb597ddd25d13ea13b034aa/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
        "patch": "@@ -1183,7 +1183,7 @@ void CheckForkWarningConditions()\n \n     if (pindexBestForkTip || (pindexBestInvalid && pindexBestInvalid->nChainWork > chainActive.Tip()->nChainWork + (GetBlockProof(*chainActive.Tip()) * 6)))\n     {\n-        if (!fLargeWorkForkFound && pindexBestForkBase)\n+        if (!GetfLargeWorkForkFound() && pindexBestForkBase)\n         {\n             std::string warning = std::string(\"'Warning: Large-work fork detected, forking after block \") +\n                 pindexBestForkBase->phashBlock->ToString() + std::string(\"'\");\n@@ -1194,18 +1194,18 @@ void CheckForkWarningConditions()\n             LogPrintf(\"%s: Warning: Large valid fork found\\n  forking the chain at height %d (%s)\\n  lasting to height %d (%s).\\nChain state database corruption likely.\\n\", __func__,\n                    pindexBestForkBase->nHeight, pindexBestForkBase->phashBlock->ToString(),\n                    pindexBestForkTip->nHeight, pindexBestForkTip->phashBlock->ToString());\n-            fLargeWorkForkFound = true;\n+            SetfLargeWorkForkFound(true);\n         }\n         else\n         {\n             LogPrintf(\"%s: Warning: Found invalid chain at least ~6 blocks longer than our best chain.\\nChain state database corruption likely.\\n\", __func__);\n-            fLargeWorkInvalidChainFound = true;\n+            SetfLargeWorkInvalidChainFound(true);\n         }\n     }\n     else\n     {\n-        fLargeWorkForkFound = false;\n-        fLargeWorkInvalidChainFound = false;\n+        SetfLargeWorkForkFound(false);\n+        SetfLargeWorkInvalidChainFound(false);\n     }\n }\n \n@@ -1481,7 +1481,7 @@ bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uin\n /** Abort with a message */\n bool AbortNode(const std::string& strMessage, const std::string& userMessage=\"\")\n {\n-    strMiscWarning = strMessage;\n+    SetMiscWarning(strMessage);\n     LogPrintf(\"*** %s\\n\", strMessage);\n     uiInterface.ThreadSafeMessageBox(\n         userMessage.empty() ? _(\"Error: A fatal internal error occurred, see debug.log for details\") : userMessage,\n@@ -2050,9 +2050,10 @@ void static UpdateTip(CBlockIndex *pindexNew, const CChainParams& chainParams) {\n             ThresholdState state = checker.GetStateFor(pindex, chainParams.GetConsensus(), warningcache[bit]);\n             if (state == THRESHOLD_ACTIVE || state == THRESHOLD_LOCKED_IN) {\n                 if (state == THRESHOLD_ACTIVE) {\n-                    strMiscWarning = strprintf(_(\"Warning: unknown new rules activated (versionbit %i)\"), bit);\n+                    std::string strWarning = strprintf(_(\"Warning: unknown new rules activated (versionbit %i)\"), bit);\n+                    SetMiscWarning(strWarning);\n                     if (!fWarned) {\n-                        AlertNotify(strMiscWarning);\n+                        AlertNotify(strWarning);\n                         fWarned = true;\n                     }\n                 } else {\n@@ -2072,10 +2073,11 @@ void static UpdateTip(CBlockIndex *pindexNew, const CChainParams& chainParams) {\n             warningMessages.push_back(strprintf(\"%d of last 100 blocks have unexpected version\", nUpgraded));\n         if (nUpgraded > 100/2)\n         {\n-            // strMiscWarning is read by GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n-            strMiscWarning = _(\"Warning: Unknown block versions being mined! It's possible unknown rules are in effect\");\n+            std::string strWarning = _(\"Warning: Unknown block versions being mined! It's possible unknown rules are in effect\");\n+            // notify GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n+            SetMiscWarning(strWarning);\n             if (!fWarned) {\n-                AlertNotify(strMiscWarning);\n+                AlertNotify(strWarning);\n                 fWarned = true;\n             }\n         }"
      }
    ]
  },
  {
    "sha": "749be013f5cba0bbb01f1f89df77106aea5a4cc1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDliZTAxM2Y1Y2JhMGJiYjAxZjFmODlkZjc3MTA2YWVhNWE0Y2Mx",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-11-30T06:07:42Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-12-03T07:17:34Z"
      },
      "message": "Move GetWarnings() into its own file.",
      "tree": {
        "sha": "cc7f3f435e14003091859ad654f7bb0b3aab225a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc7f3f435e14003091859ad654f7bb0b3aab225a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/749be013f5cba0bbb01f1f89df77106aea5a4cc1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749be013f5cba0bbb01f1f89df77106aea5a4cc1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/749be013f5cba0bbb01f1f89df77106aea5a4cc1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749be013f5cba0bbb01f1f89df77106aea5a4cc1/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3ba0ef95636290a3bb597ddd25d13ea13b034aa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3ba0ef95636290a3bb597ddd25d13ea13b034aa"
      }
    ],
    "stats": {
      "total": 205,
      "additions": 116,
      "deletions": 89
    },
    "files": [
      {
        "sha": "89f2ed5e996c1bc2efe4b6cfdc747a04d35152fc",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -154,6 +154,7 @@ BITCOIN_CORE_H = \\\n   wallet/rpcwallet.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n+  warnings.h \\\n   zmq/zmqabstractnotifier.h \\\n   zmq/zmqconfig.h\\\n   zmq/zmqnotificationinterface.h \\\n@@ -305,6 +306,7 @@ libbitcoin_common_a_SOURCES = \\\n   scheduler.cpp \\\n   script/sign.cpp \\\n   script/standard.cpp \\\n+  warnings.cpp \\\n   $(BITCOIN_CORE_H)\n \n # util: shared between all executables."
      },
      {
        "sha": "33a30277b868f23ceeb919a8b8e41e9ac9c34b0f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -41,6 +41,7 @@\n #ifdef ENABLE_WALLET\n #include \"wallet/wallet.h\"\n #endif\n+#include \"warnings.h\"\n #include <stdint.h>\n #include <stdio.h>\n #include <memory>"
      },
      {
        "sha": "cfd0955a749b8c7e2fa9cf96c0bd8dcf0dac9319",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -30,6 +30,7 @@\n #include \"scheduler.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#include \"warnings.h\"\n \n #ifdef ENABLE_WALLET\n #include \"wallet/wallet.h\""
      },
      {
        "sha": "b3cbdcf8832619468de1325068e285a8521c0b1b",
        "filename": "src/timedata.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.cpp?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -13,6 +13,7 @@\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n+#include \"warnings.h\"\n \n #include <boost/foreach.hpp>\n "
      },
      {
        "sha": "76eab7ca5f5ee2d61bcca0169e7e033063b34a9a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 80,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -108,11 +108,6 @@ bool fDebug = false;\n bool fPrintToConsole = false;\n bool fPrintToDebugLog = true;\n \n-CCriticalSection cs_warnings;\n-string strMiscWarning;\n-bool fLargeWorkForkFound = false;\n-bool fLargeWorkInvalidChainFound = false;\n-\n bool fLogTimestamps = DEFAULT_LOGTIMESTAMPS;\n bool fLogTimeMicros = DEFAULT_LOGTIMEMICROS;\n bool fLogIPs = DEFAULT_LOGIPS;\n@@ -813,78 +808,3 @@ std::string CopyrightHolders(const std::string& strPrefix)\n     }\n     return strCopyrightHolders;\n }\n-\n-void SetMiscWarning(const std::string& strWarning)\n-{\n-    LOCK(cs_warnings);\n-    strMiscWarning = strWarning;\n-}\n-\n-void SetfLargeWorkForkFound(bool flag)\n-{\n-    LOCK(cs_warnings);\n-    fLargeWorkForkFound = flag;\n-}\n-\n-bool GetfLargeWorkForkFound()\n-{\n-    LOCK(cs_warnings);\n-    return fLargeWorkForkFound;\n-}\n-\n-void SetfLargeWorkInvalidChainFound(bool flag)\n-{\n-    LOCK(cs_warnings);\n-    fLargeWorkInvalidChainFound = flag;\n-}\n-\n-bool GetfLargeWorkInvalidChainFound()\n-{\n-    LOCK(cs_warnings);\n-    return fLargeWorkInvalidChainFound;\n-}\n-\n-std::string GetWarnings(const std::string& strFor)\n-{\n-    string strStatusBar;\n-    string strRPC;\n-    string strGUI;\n-    const string uiAlertSeperator = \"<hr />\";\n-\n-    LOCK(cs_warnings);\n-\n-    if (!CLIENT_VERSION_IS_RELEASE) {\n-        strStatusBar = \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\";\n-        strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n-    }\n-\n-    if (GetBoolArg(\"-testsafemode\", DEFAULT_TESTSAFEMODE))\n-        strStatusBar = strRPC = strGUI = \"testsafemode enabled\";\n-\n-    // Misc warnings like out of disk space and clock is wrong\n-    if (strMiscWarning != \"\")\n-    {\n-        strStatusBar = strMiscWarning;\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + strMiscWarning;\n-    }\n-\n-    if (fLargeWorkForkFound)\n-    {\n-        strStatusBar = strRPC = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n-    }\n-    else if (fLargeWorkInvalidChainFound)\n-    {\n-        strStatusBar = strRPC = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n-    }\n-\n-    if (strFor == \"gui\")\n-        return strGUI;\n-    else if (strFor == \"statusbar\")\n-        return strStatusBar;\n-    else if (strFor == \"rpc\")\n-        return strRPC;\n-    assert(!\"GetWarnings(): invalid parameter\");\n-    return \"error\";\n-}"
      },
      {
        "sha": "3ec38a7c7db2ba35cf56411899f5ad567c512773",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -47,8 +47,6 @@ extern bool fDebug;\n extern bool fPrintToConsole;\n extern bool fPrintToDebugLog;\n \n-static const bool DEFAULT_TESTSAFEMODE = false;\n-\n extern bool fLogTimestamps;\n extern bool fLogTimeMicros;\n extern bool fLogIPs;\n@@ -226,11 +224,4 @@ template <typename Callable> void TraceThread(const char* name,  Callable func)\n \n std::string CopyrightHolders(const std::string& strPrefix);\n \n-void SetMiscWarning(const std::string& strWarning);\n-void SetfLargeWorkForkFound(bool flag);\n-bool GetfLargeWorkForkFound();\n-void SetfLargeWorkInvalidChainFound(bool flag);\n-bool GetfLargeWorkInvalidChainFound();\n-std::string GetWarnings(const std::string& strFor);\n-\n #endif // BITCOIN_UTIL_H"
      },
      {
        "sha": "55632ebdf22e7984652fec5f1071603183416843",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -34,6 +34,7 @@\n #include \"utilstrencodings.h\"\n #include \"validationinterface.h\"\n #include \"versionbits.h\"\n+#include \"warnings.h\"\n \n #include <atomic>\n #include <sstream>"
      },
      {
        "sha": "2c1b1b0e12d8f784f4f41614e0428524827a8e1c",
        "filename": "src/warnings.cpp",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -0,0 +1,89 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"sync.h\"\n+#include \"clientversion.h\"\n+#include \"util.h\"\n+#include \"warnings.h\"\n+\n+CCriticalSection cs_warnings;\n+std::string strMiscWarning;\n+bool fLargeWorkForkFound = false;\n+bool fLargeWorkInvalidChainFound = false;\n+\n+void SetMiscWarning(const std::string& strWarning)\n+{\n+    LOCK(cs_warnings);\n+    strMiscWarning = strWarning;\n+}\n+\n+void SetfLargeWorkForkFound(bool flag)\n+{\n+    LOCK(cs_warnings);\n+    fLargeWorkForkFound = flag;\n+}\n+\n+bool GetfLargeWorkForkFound()\n+{\n+    LOCK(cs_warnings);\n+    return fLargeWorkForkFound;\n+}\n+\n+void SetfLargeWorkInvalidChainFound(bool flag)\n+{\n+    LOCK(cs_warnings);\n+    fLargeWorkInvalidChainFound = flag;\n+}\n+\n+bool GetfLargeWorkInvalidChainFound()\n+{\n+    LOCK(cs_warnings);\n+    return fLargeWorkInvalidChainFound;\n+}\n+\n+std::string GetWarnings(const std::string& strFor)\n+{\n+    std::string strStatusBar;\n+    std::string strRPC;\n+    std::string strGUI;\n+    const std::string uiAlertSeperator = \"<hr />\";\n+\n+    LOCK(cs_warnings);\n+\n+    if (!CLIENT_VERSION_IS_RELEASE) {\n+        strStatusBar = \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\";\n+        strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n+    }\n+\n+    if (GetBoolArg(\"-testsafemode\", DEFAULT_TESTSAFEMODE))\n+        strStatusBar = strRPC = strGUI = \"testsafemode enabled\";\n+\n+    // Misc warnings like out of disk space and clock is wrong\n+    if (strMiscWarning != \"\")\n+    {\n+        strStatusBar = strMiscWarning;\n+        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + strMiscWarning;\n+    }\n+\n+    if (fLargeWorkForkFound)\n+    {\n+        strStatusBar = strRPC = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n+        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n+    }\n+    else if (fLargeWorkInvalidChainFound)\n+    {\n+        strStatusBar = strRPC = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n+        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n+    }\n+\n+    if (strFor == \"gui\")\n+        return strGUI;\n+    else if (strFor == \"statusbar\")\n+        return strStatusBar;\n+    else if (strFor == \"rpc\")\n+        return strRPC;\n+    assert(!\"GetWarnings(): invalid parameter\");\n+    return \"error\";\n+}"
      },
      {
        "sha": "a7aa6574264c157ab767e88a273b7fda0d125618",
        "filename": "src/warnings.h",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/warnings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749be013f5cba0bbb01f1f89df77106aea5a4cc1/src/warnings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.h?ref=749be013f5cba0bbb01f1f89df77106aea5a4cc1",
        "patch": "@@ -0,0 +1,21 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WARNINGS_H\n+#define BITCOIN_WARNINGS_H\n+\n+#include <stdlib.h>\n+#include <string>\n+\n+void SetMiscWarning(const std::string& strWarning);\n+void SetfLargeWorkForkFound(bool flag);\n+bool GetfLargeWorkForkFound();\n+void SetfLargeWorkInvalidChainFound(bool flag);\n+bool GetfLargeWorkInvalidChainFound();\n+std::string GetWarnings(const std::string& strFor);\n+\n+static const bool DEFAULT_TESTSAFEMODE = false;\n+\n+#endif //  BITCOIN_WARNINGS_H"
      }
    ]
  }
]