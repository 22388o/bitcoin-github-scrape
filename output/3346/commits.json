[
  {
    "sha": "328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjhiZGIxY2Q2M2E0NmFmM2JjYzE0MzFmZmEyNGRkOGZlMzEyNWU3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-18T19:08:24Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: Ensure correct link order\n\nIf optional libs don't appear in QT_LIBS, they need to be listed first for\nproper static linking.",
      "tree": {
        "sha": "10771e9953c288ace4b653801d0345b932da3462",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10771e9953c288ace4b653801d0345b932da3462"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62e9d774966c9f4344f0356c59ddadcc5ff17212"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "01505243377679fa9f7b155c60b8c9f82bb081f4",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
        "patch": "@@ -18,7 +18,7 @@ test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n-  $(LIBMEMENV) $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) \\\n+  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n CLEANFILES = $(BUILT_SOURCES) *.gcda *.gcno"
      }
    ]
  },
  {
    "sha": "c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjE0YmQ3MThiOTFlYzU1NjBhMTRjYTg1YmZmYTVlOWEzZTc4Yjg0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-19T01:29:24Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: fix a build issue with osx and qtdbus\n\nSee comment in notificator.cpp for details.",
      "tree": {
        "sha": "56e2a4ce521369c1097d36ae3c15f656e96f3bf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56e2a4ce521369c1097d36ae3c15f656e96f3bf0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c614bd718b91ec5560a14ca85bffa5e9a3e78b84/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "38a029dbe5b435688873b9ec92362756be4276cd",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c614bd718b91ec5560a14ca85bffa5e9a3e78b84/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c614bd718b91ec5560a14ca85bffa5e9a3e78b84/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
        "patch": "@@ -14,18 +14,18 @@\n #include <QSystemTrayIcon>\n #include <QTemporaryFile>\n #include <QVariant>\n-\n-#ifdef Q_OS_MAC\n-#include \"macnotificationhandler.h\"\n-\n-#include <ApplicationServices/ApplicationServices.h>\n-#endif\n-\n #ifdef USE_DBUS\n #include <stdint.h>\n-\n #include <QtDBus>\n #endif\n+// Include ApplicationServices.h after QtDbus to avoid redefinition of check().\n+// This affects at least OSX 10.6. See /usr/include/AssertMacros.h for details.\n+// Note: This could also be worked around using:\n+// #define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0\n+#ifdef Q_OS_MAC\n+#include <ApplicationServices/ApplicationServices.h>\n+#include \"macnotificationhandler.h\"\n+#endif\n \n \n // https://wiki.ubuntu.com/NotificationDevelopmentGuidelines recommends at least 128"
      }
    ]
  },
  {
    "sha": "c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGJhOGVmNjU0NTllNWRiMGNiNzg3YzM5MDkxYzQ1OTE0YmJiMmZi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-13T20:19:02Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: split out qt config and add qt5 support\n\nQt5 detection is a big ugly mess, but at least we can fence it off.",
      "tree": {
        "sha": "f3f684d9a30b11f160cbc266c754917f4eb2a1a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3f684d9a30b11f160cbc266c754917f4eb2a1a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c614bd718b91ec5560a14ca85bffa5e9a3e78b84"
      }
    ],
    "stats": {
      "total": 596,
      "additions": 405,
      "deletions": 191
    },
    "files": [
      {
        "sha": "3c7d4db4af78fd70500be61451a8f1b15b786598",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 31,
        "deletions": 191,
        "changes": 222,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
        "patch": "@@ -63,38 +63,6 @@ AC_ARG_ENABLE([ipv6],\n   [use_ipv6=$enableval],\n   [use_ipv6=yes])\n \n-dnl enable qt support\n-AC_ARG_WITH([qt],\n-  [AS_HELP_STRING([--with-qt],\n-  [enable qt (default is yes)])],\n-  [use_qt=$withval],\n-  [use_qt=auto])\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$use_qt\" = \"xauto\"; then\n-    AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    use_qt=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$use_qt\" != \"xno\"; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    AC_PATH_PROGS($1,$2,$3,$4)\n-    if test \"x$$1\" = \"x\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n AC_ARG_ENABLE(tests,\n     AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n     [use_tests=$enableval],\n@@ -116,12 +84,6 @@ AC_ARG_WITH([qrencode],\n   [use_qr=$withval],\n   [use_qr=auto])\n \n-AC_ARG_WITH([qtdbus],\n-  [AS_HELP_STRING([--with-qtdbus],\n-  [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-  [use_dbus=$withval],\n-  [use_dbus=auto])\n-\n AC_ARG_ENABLE([hardening],\n   [AS_HELP_STRING([--enable-hardening],\n   [attempt to harden the resulting executables (default is yes)])],\n@@ -140,10 +102,6 @@ AC_ARG_ENABLE([lcov],\n   [use_lcov=yes],\n   [use_lcov=no])\n \n-AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n \n@@ -168,13 +126,7 @@ AC_PATH_PROG(LCOV, lcov)\n AC_PATH_PROG(JAVA, java)\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n-BITCOIN_QT_PATH_PROGS([MOC], [moc-qt4 moc4 moc],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([UIC], [uic-qt4 uic4 uic],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt4 rcc4 rcc],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt4 lrelease4 lrelease],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],, $protoc_bin_path:$PATH)\n AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROGS([LUPDATE], [lupdate-qt4 lupdate4 lupdate],, $qt_bin_path:$PATH)\n AC_PATH_PROG(XGETTEXT,xgettext)\n AC_PATH_PROG(HEXDUMP,hexdump)\n PKG_PROG_PKG_CONFIG\n@@ -254,12 +206,6 @@ case $host in\n        fi\n      fi\n \n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"-DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[LIBS=\"$LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n      TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n      ;;\n@@ -452,6 +398,8 @@ if test x$boost_sleep != xyes; then\n   AC_MSG_ERROR(No working boost sleep implementation found)\n fi\n \n+BITCOIN_QT_INIT\n+\n if test x$use_pkgconfig = xyes; then\n \n   if test x$PKG_CONFIG == x; then\n@@ -464,23 +412,10 @@ if test x$use_pkgconfig = xyes; then\n     [\n       PKG_CHECK_MODULES([SSL], [libssl], [INCLUDES=\"$INCLUDES $SSL_CFLAGS\"; LIBS=\"$LIBS $SSL_LIBS\"], [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto], [INCLUDES=\"$INCLUDES $CRYPTO_CFLAGS\"; LIBS=\"$LIBS $CRYPTO_LIBS\"], [AC_MSG_ERROR(libcrypto  not found.)])\n-\n-      BITCOIN_QT_CHECK([\n-        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[\n-          have_qt=no\n-          BITCOIN_QT_FAIL([Qt dependencies not found])\n-        ])\n-        if test x$use_tests = xyes; then\n-          PKG_CHECK_MODULES([QT_TEST], [QtTest], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-        fi\n-        if test x$use_dbus != xno; then\n-          PKG_CHECK_MODULES([QT_DBUS], [QtDBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-        fi\n-        if test x$use_qr != xno; then\n-          PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])\n-        fi\n-        PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [AC_MSG_ERROR(libprotobuf not found.)])\n-      ])\n+      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      if test x$use_qr != xno; then\n+        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+      fi\n     ]\n   )\n else\n@@ -490,81 +425,18 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR(libssl missing))\n \n-  BITCOIN_QT_CHECK([\n-    TEMP_LIBS=\"$LIBS\"\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_lib_path\"\n-      LIBS=\"$QT_LIBS\"\n-    fi\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-      LIBS=\"$QT_LIBS\"\n-    fi\n-\n-    if test x$TARGET_OS == xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n-    fi\n-  ])\n-\n-    #TODO: These are only needed when they're linked directly to parent libs. It really has nothing to do with windows.\n-    #Instead, check for missing functions in parent libs and assume static if they're absent.\n-    if test x$TARGET_OS == xwindows; then\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qcncodecs],[main],,BITCOIN_QT_FAIL(libqcncodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qjpcodecs],[main],,BITCOIN_QT_FAIL(libqjpcodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qkrcodecs],[main],,BITCOIN_QT_FAIL(libqkrcodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qtwcodecs],[main],,BITCOIN_QT_FAIL(libqtwcodecs not found)))\n-    fi\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],,BITCOIN_QT_FAIL(libprotobuf not found)))\n+  if test x$use_qr != xno; then\n+    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+  fi\n+fi\n \n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtCore]   ,[main],,BITCOIN_QT_FAIL(libQtCore not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtGui]    ,[main],,BITCOIN_QT_FAIL(libQtGui not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtNetwork],[main],,BITCOIN_QT_FAIL(libQtNetwork not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],,BITCOIN_QT_FAIL(libprotobuf not found)))\n+BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-  BITCOIN_QT_CHECK([\n-    QT_LIBS=\"$LIBS\"\n-    LIBS=\"$TEMP_LIBS\"\n+dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt4])\n \n-    TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-    if test x$qt_include_path != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n-      CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n-    fi\n-  ])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n-\n-  BITCOIN_QT_CHECK([\n-    if test x$use_tests = xyes; then\n-      TEMP_LIBS=\"$LIBS\"\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([QtTest],      [main],, have_qt_test=no)\n-      AC_CHECK_HEADER([QTest],, have_qt_test=no)\n-      QT_TEST_LIBS=\"$LIBS\"\n-      LIBS=\"$TEMP_LIBS\"\n-    fi\n-    if test x$use_dbus != xno; then\n-      TEMP_LIBS=\"$LIBS\"\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([QtDBus],      [main],, have_qt_dbus=no)\n-      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n-      QT_DBUS_LIBS=\"$LIBS\"\n-      LIBS=\"$TEMP_LIBS\"\n-    fi\n-    CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-    if test x$use_qr != xno; then\n-      AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])\n-      AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)\n-    fi\n-  ])\n-fi\n \n if test x$use_ipv6 = xyes; then\n   dnl Check for ipv6 build requirements\n@@ -613,10 +485,6 @@ if test x$enable_wallet != xno; then\n \n else\n   AC_MSG_RESULT(no)\n-\n-  if test \"x$use_qt\" != \"xno\"; then\n-    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n-  fi\n fi\n \n dnl enable ipv6 support\n@@ -662,46 +530,15 @@ else\n   fi\n fi\n \n-dnl enable qt support\n-AC_MSG_CHECKING([if qt should be enabled])\n-BITCOIN_QT_CHECK([\n-  use_qt=yes\n-  BUILD_QT=qt\n-  if test x$use_tests = xyes; then\n-    if test x$have_qt_test = xno; then\n-      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --without-qt.\")\n-    fi\n-  fi\n-  if test x$have_qt_dbus = xno;  then\n-    if test x$use_dbus = xyes; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n-    fi\n-    use_dbus=no\n-  fi\n-  if test x$XGETTEXT == x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-  if test x$LUPDATE == x; then\n-    AC_MSG_WARN(\"lupdate is required to update qt translations\")\n-  fi\n-],[\n-  use_qt=no\n-])\n-\n-AC_MSG_RESULT($use_qt)\n-\n dnl these are only used when qt is enabled\n-if test x$use_qt = xyes; then\n-\n+if test x$bitcoin_enable_qt != xno; then\n+  BUILD_QT=qt\n   dnl enable dbus support\n   AC_MSG_CHECKING([if dbus should be enabled])\n-  if test x$use_dbus != xno; then\n-    use_dbus=yes\n+  if test x$bitcoin_enable_qt_dbus != xno; then\n     AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  else\n-    use_dbus=no\n   fi\n-  AC_MSG_RESULT($use_dbus)\n+  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n \n   dnl enable qr support\n   AC_MSG_CHECKING([if qr should be enabled])\n@@ -720,8 +557,18 @@ if test x$use_qt = xyes; then\n     fi\n   fi\n \n-  if test x$use_tests$have_qt_test = xyesyes; then\n+  if test x$XGETTEXT == x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+\n+  if test x$use_tests = xyes; then\n     BUILD_TEST_QT=\"test\"\n+    if test x$bitcoin_enable_qt_test != xyes; then\n+      AC_MSG_ERROR(\"QT Test lib not found. Use --disable-tests or --without-qt.\")\n+    fi\n+  fi\n+  if test x$enable_wallet == xno; then\n+    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n   fi\n fi\n \n@@ -756,17 +603,10 @@ AC_SUBST(USE_QRCODE)\n AC_SUBST(USE_IPV6)\n AC_SUBST(INCLUDES)\n AC_SUBST(BOOST_LIBS)\n-AC_SUBST(MOC_DEFS)\n-AC_SUBST(QT_INCLUDES)\n-AC_SUBST(QT_TEST_LIBS)\n-AC_SUBST(QT_LIBS)\n-AC_SUBST(QT_DBUS_LIBS)\n-AC_SUBST(QT_DBUS_INCLUDES)\n-AC_SUBST(QT_TEST_INCLUDES)\n AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST)\n+AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST_QT)\n AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile share/setup.nsi share/qt/Info.plist])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])"
      },
      {
        "sha": "f04db33bd5dff5a6dc23337b4f1e316f02946b37",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "added",
        "additions": 374,
        "deletions": 0,
        "changes": 374,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
        "patch": "@@ -0,0 +1,374 @@\n+dnl Helper for cases where a qt dependency is not met.\n+dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$bitcoin_qt_want_version\" = \"xauto\"; then\n+    if test x$bitcoin_enable_qt != xno; then\n+      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+    fi\n+    bitcoin_enable_qt=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+\n+dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl Helper for finding the path of programs needed for QT.\n+dnl Inputs: $1: Variable to be set\n+dnl Inputs: $2: List of programs to search for\n+dnl Inputs: $3: Look for $2 here before $PATH\n+dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n+dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    if test \"x$3\" != \"x\"; then\n+      AC_PATH_PROGS($1,$2,,$3)\n+    else\n+      AC_PATH_PROGS($1,$2)\n+    fi\n+    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n+\n+dnl Initialize qt input.\n+dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl input variables are set correctly.\n+dnl CAUTION: Do not use this inside of a conditional.\n+AC_DEFUN([BITCOIN_QT_INIT],[\n+  dnl enable qt support\n+  AC_ARG_WITH([qt],\n+    [AS_HELP_STRING([--with-qt],\n+    [with qt (no|qt4|qt5|auto. default is auto, qt4 tried first.)])],\n+    [bitcoin_qt_want_version=$withval],\n+    [bitcoin_qt_want_version=auto])\n+\n+  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+\n+  AC_ARG_WITH([qtdbus],\n+    [AS_HELP_STRING([--with-qtdbus],\n+    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n+    [use_dbus=$withval],\n+    [use_dbus=auto])\n+])\n+\n+dnl Find the appropriate version of Qt libraries and includes.\n+dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n+dnl Inputs: $2: If $1 is \"yes\" and --with-qt=auto, which qt version should be\n+dnl         tried first.\n+dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: Sets variables for all qt-related tools.\n+dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n+AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+  use_pkgconfig=$1\n+\n+  if test x$use_pkgconfig == x; then\n+    use_pkgconfig=yes\n+  fi\n+\n+  if test x$use_pkgconfig = xyes; then\n+    if test x$PKG_CONFIG == x; then\n+      AC_MSG_ERROR(pkg-config not found.)\n+    fi\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+  else\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+  fi\n+\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+\n+  case $host in\n+    *darwin*)\n+     BITCOIN_QT_CHECK([\n+       MOC_DEFS=\"-DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+       AC_SUBST(MOC_DEFS)\n+     ])\n+    ;;\n+  esac\n+\n+\n+  dnl enable qt support\n+  AC_MSG_CHECKING(if QT should be enabled)\n+  BITCOIN_QT_CHECK([\n+    bitcoin_enable_qt=yes\n+    bitcoin_enable_qt_test=yes\n+    if test x$have_qt_test = xno; then\n+      bitcoin_enable_qt_test=no\n+    fi\n+    bitcoin_enable_qt_dbus=yes\n+    if test x$have_qt_dbus = xno;  then\n+      bitcoin_enable_qt_dbus=no\n+      if test x$use_dbus = xyes; then\n+        AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+      fi\n+    fi\n+    if test x$LUPDATE == x; then\n+      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+    fi\n+  ],[\n+    bitcoin_enable_qt=no\n+  ])\n+  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+\n+  AC_SUBST(QT_INCLUDES)\n+  AC_SUBST(QT_LIBS)\n+  AC_SUBST(QT_DBUS_INCLUDES)\n+  AC_SUBST(QT_DBUS_LIBS)\n+  AC_SUBST(QT_TEST_INCLUDES)\n+  AC_SUBST(QT_TEST_LIBS)\n+  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+])\n+\n+dnl All macros below are internal and should _not_ be used from the main\n+dnl configure.ac.\n+dnl ----\n+\n+dnl Internal. Check if the included version of QT is Qt5.\n+dnl Requires: INCLUDES must be populated as necessary.\n+dnl Output: bitcoin_cv_qt5=yes|no\n+AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for QT 5, bitcoin_cv_qt5,[\n+  AC_TRY_COMPILE(\n+    [#include <QtCore>],\n+    [\n+      #if QT_VERSION < 0x050000\n+      choke me\n+      #else\n+      return 0;\n+      #endif\n+    ],\n+    bitcoin_cv_qt5=yes,\n+    bitcoin_cv_qt5=no)\n+])])\n+\n+dnl Internal. Check if the linked version of QT was built as static libs.\n+dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n+AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static QT, bitcoin_cv_static_qt,[\n+  AC_TRY_COMPILE(\n+    [#include <QtCore>],\n+    [\n+      #if defined(QT_STATIC)\n+      return 0;\n+      #else\n+      choke me\n+      #endif\n+    ],\n+    [bitcoin_cv_static_qt=yes],\n+    [bitcoin_cv_static_qt=no])\n+  ])\n+  if test xbitcoin_cv_static_qt = xyes; then\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static QT plugins])\n+  fi\n+])\n+\n+dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $2: The libraries that resolve $1.\n+dnl Output: QT_LIBS is prepended or configure exits.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+  AC_MSG_CHECKING(for static QT plugins: $2)\n+  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  AC_TRY_LINK([\n+    #define QT_STATICPLUGIN\n+    #include <QtPlugin>\n+    $1],\n+    [return 0;],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(no)]; BITCOIN_QT_FAIL(Could not resolve: $2))\n+  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n+])\n+\n+dnl Internal. Find Qt libraries using pkg-config.\n+dnl Inputs: bitcoin_qt_want_version (from --with-qt=). The version to check\n+dnl         first.\n+dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl         first.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+  m4_ifdef([PKG_CHECK_MODULES],[\n+  auto_priority_version=$1\n+  if test x$auto_priority_version == x; then\n+    auto_priority_version=qt5\n+  fi\n+    if test x$bitcoin_qt_want_version == xqt5 ||  ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt5 ); then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n+    qt4_modules=\"QtCore QtGui QtNetwork\"\n+    BITCOIN_QT_CHECK([\n+      if test x$bitcoin_qt_want_version == xqt5 || ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt5 ); then\n+        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n+      elif test x$bitcoin_qt_want_version == xqt4 || ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt4 ); then\n+        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+      fi\n+\n+      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n+      if test x$have_qt == xno && test x$bitcoin_qt_want_version == xauto; then\n+        if x$auto_priority_version = x$qt5; then\n+          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+        else\n+          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+        fi\n+      fi\n+      if test x$have_qt != xyes; then\n+        have_qt=no\n+        BITCOIN_QT_FAIL([Qt dependencies not found])\n+      fi\n+    ])\n+    BITCOIN_QT_CHECK([\n+      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+      if test x$use_dbus != xno; then\n+        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+      fi\n+    ])\n+  ])\n+  true; dnl\n+])\n+\n+dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n+dnl from the discovered headers.\n+dnl Inputs: bitcoin_qt_want_version (from --with-qt=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_LIBS=\"$LIBS\"\n+  BITCOIN_QT_CHECK([\n+    if test x$qt_include_path != x; then\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_want_version = xauto; then\n+      _BITCOIN_QT_CHECK_QT5\n+    fi\n+    if test x$bitcoin_cv_qt5 == xyes || test x$bitcoin_qt_want_version = xqt5; then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"$LIBS -L$qt_lib_path\"\n+    fi\n+    if test x$qt_plugin_path != x; then\n+      LIBS=\"$LIBS -L$qt_plugin_path/accessible\"\n+      if test x$bitcoin_qt_got_major_vers == x5; then\n+        LIBS=\"$LIBS -L$qt_plugin_path/platforms\"\n+      else\n+        LIBS=\"$LIBS -L$qt_plugin_path/codecs\"\n+      fi\n+    fi\n+\n+    if test x$TARGET_OS == xwindows; then\n+      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,BITCOIN_QT_FAIL(zlib not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$bitcoin_qt_got_major_vers == x5; then\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  fi\n+  QT_LIBS=\"$LIBS\"\n+  LIBS=\"$TEMP_LIBS\"\n+\n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n+  dnl check a header to find out. When Qt is built statically, some plugins must\n+  dnl be linked into the final binary as well. These plugins have changed between\n+  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n+  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is \n+  dnl assumed for all non-pkg-config builds.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_got_major_vers == x5; then\n+      _BITCOIN_QT_IS_STATIC\n+      if test x$bitcoin_cv_static_qt == xyes; then \n+        AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+        if test x$TARGET_OS == xwindows; then\n+          _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        fi\n+      fi\n+    else\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+         Q_IMPORT_PLUGIN(qcncodecs)\n+         Q_IMPORT_PLUGIN(qjpcodecs)\n+         Q_IMPORT_PLUGIN(qtwcodecs)\n+         Q_IMPORT_PLUGIN(qkrcodecs)\n+         Q_IMPORT_PLUGIN(AccessibleFactory)],\n+         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"-L$qt_lib_path\"\n+    fi\n+    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n+    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+    QT_TEST_LIBS=\"$LIBS\"\n+    if test x$use_dbus != xno; then\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n+      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+      QT_DBUS_LIBS=\"$LIBS\"\n+    fi\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  LIBS=\"$TEMP_LIBS\"\n+])\n+"
      }
    ]
  },
  {
    "sha": "60dc589477f963d9848be7bb7fb0589a30deb912",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGRjNTg5NDc3Zjk2M2Q5ODQ4YmU3YmI3ZmIwNTg5YTMwZGViOTEy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-02T21:54:19Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: Use the info gleaned from configure for plugin importing",
      "tree": {
        "sha": "949eb48e9dca0fd3874eb65bc0baa692803a82a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/949eb48e9dca0fd3874eb65bc0baa692803a82a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60dc589477f963d9848be7bb7fb0589a30deb912",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc589477f963d9848be7bb7fb0589a30deb912",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60dc589477f963d9848be7bb7fb0589a30deb912",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc589477f963d9848be7bb7fb0589a30deb912/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8ba8ef65459e5db0cb787c39091c45914bbb2fb"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 11,
      "deletions": 7
    },
    "files": [
      {
        "sha": "794d12f69b4dcd30a7c6ffdc9dbd0332bce59039",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60dc589477f963d9848be7bb7fb0589a30deb912/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60dc589477f963d9848be7bb7fb0589a30deb912/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=60dc589477f963d9848be7bb7fb0589a30deb912",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"bitcoin-config.h\"\n #include \"bitcoingui.h\"\n \n #include \"clientmodel.h\"\n@@ -30,19 +31,22 @@\n #include <QTimer>\n #include <QTranslator>\n \n-#if QT_VERSION < 0x050000\n-#include <QTextCodec>\n-#endif\n-\n-#if defined(BITCOIN_NEED_QT_PLUGINS) && !defined(_BITCOIN_QT_PLUGINS_INCLUDED)\n-#define _BITCOIN_QT_PLUGINS_INCLUDED\n-#define __INSURE__\n+#if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n+#if QT_VERSION < 0x050000\n Q_IMPORT_PLUGIN(qcncodecs)\n Q_IMPORT_PLUGIN(qjpcodecs)\n Q_IMPORT_PLUGIN(qtwcodecs)\n Q_IMPORT_PLUGIN(qkrcodecs)\n Q_IMPORT_PLUGIN(qtaccessiblewidgets)\n+#else\n+Q_IMPORT_PLUGIN(AccessibleFactory)\n+Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n+#endif\n+#endif\n+\n+#if QT_VERSION < 0x050000\n+#include <QTextCodec>\n #endif\n \n // Declare meta types used for QMetaObject::invokeMethod"
      }
    ]
  },
  {
    "sha": "47ffb505331b8f6257a6879b02415e604ad85da0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0N2ZmYjUwNTMzMWI4ZjYyNTdhNjg3OWIwMjQxNWU2MDRhZDg1ZGEw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-02T21:55:37Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: Use QT_SELECT for debian-based distros.\n\nAt least Debian/Ubuntu use 'qtchooser' for switching between qt4/qt5 binaries.\nIt is a wrapper for all qt tools, and calls the named tool of the default\nversion unless overridden by the -qt= option or QT_SELECT environment variable.\nQT_SELECT is set by configure once the qt version has been chosen.\n\nTake for example, moc.\n\n$ which moc\n    /usr/bin/moc\n\n$ ls -go /usr/bin/moc\n    lrwxrwxrwx 1 9 Jul  3 21:33 /usr/bin/moc -> qtchooser\n\n$ qtchooser -print-env\n    QT_SELECT=\"default\"\n    QTTOOLDIR=\"/usr/lib/x86_64-linux-gnu/qt4/bin\"\n    QTLIBDIR=\"/usr/lib/x86_64-linux-gnu\"\n\n$ QT_SELECT=qt5 qtchooser -print-env\n    QT_SELECT=\"qt5\"\n    QTTOOLDIR=\"/usr/lib/x86_64-linux-gnu/qt5/bin\"\n    QTLIBDIR=\"/usr/lib/x86_64-linux-gnu\"\n\n$ moc -v\n    Qt Meta Object Compiler version 63 (Qt 4.8.4)\n\n$ QT_SELECT=qt5 moc -v\n    Qt Meta Object Compiler version 67 (Qt 5.0.1)\n\nThis should be harmless elsewhere.",
      "tree": {
        "sha": "277064dc0ae9200a587f856eacd6adf8864d8b7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/277064dc0ae9200a587f856eacd6adf8864d8b7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47ffb505331b8f6257a6879b02415e604ad85da0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47ffb505331b8f6257a6879b02415e604ad85da0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/47ffb505331b8f6257a6879b02415e604ad85da0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47ffb505331b8f6257a6879b02415e604ad85da0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60dc589477f963d9848be7bb7fb0589a30deb912",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc589477f963d9848be7bb7fb0589a30deb912",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60dc589477f963d9848be7bb7fb0589a30deb912"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b9e6c262ca5b6515cd0303db455decf071f7195a",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47ffb505331b8f6257a6879b02415e604ad85da0/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47ffb505331b8f6257a6879b02415e604ad85da0/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=47ffb505331b8f6257a6879b02415e604ad85da0",
        "patch": "@@ -32,23 +32,23 @@ $(LIBBITCOINQT):\n \n ui_%.h: %.ui\n \t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(UIC) && $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n+\t@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak\n \n %.moc: %.cpp\n-\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n \n moc_%.cpp: %.h\n-\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n \n %.qm: %.ts\n \t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(LRELEASE) && $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n+\t@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n \t echo error: could not build $(abs_builddir)/$@\n \n %.pb.cc %.pb.h: %.proto"
      },
      {
        "sha": "abd8a9f118a59d70a843f4ca40f6de180b2199d3",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47ffb505331b8f6257a6879b02415e604ad85da0/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47ffb505331b8f6257a6879b02415e604ad85da0/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=47ffb505331b8f6257a6879b02415e604ad85da0",
        "patch": "@@ -220,10 +220,10 @@ bitcoinstrings.cpp: FORCE\n \n translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t@$(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n+\t@QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n \n $(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n-\t@cd $(abs_srcdir); test -f $(RCC) && $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n+\t@cd $(abs_srcdir); test -f $(RCC) && QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n \t  echo error: could not build $@\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak"
      }
    ]
  },
  {
    "sha": "8b0f608815aa3de43208d4ac334a11bc4c408167",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjBmNjA4ODE1YWEzZGU0MzIwOGQ0YWMzMzRhMTFiYzRjNDA4MTY3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-18T20:46:48Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: tests: Make sure static plugin symbols are pulled in\n\nSince we're now properly linking against static plugins for qt binaries,\nwe need to ensure that they're Imported properly.\n\nWithout these Imports, the linker drops some of the unused linked libs, causing\nundefined symbols in QtCore.",
      "tree": {
        "sha": "c706b11d298ed3dc9b4068cf7cb485ec84e301e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c706b11d298ed3dc9b4068cf7cb485ec84e301e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b0f608815aa3de43208d4ac334a11bc4c408167",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b0f608815aa3de43208d4ac334a11bc4c408167",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b0f608815aa3de43208d4ac334a11bc4c408167",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b0f608815aa3de43208d4ac334a11bc4c408167/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "47ffb505331b8f6257a6879b02415e604ad85da0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47ffb505331b8f6257a6879b02415e604ad85da0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47ffb505331b8f6257a6879b02415e604ad85da0"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ad0dfd9823bde873e28931c8022270594fd90c97",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b0f608815aa3de43208d4ac334a11bc4c408167/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b0f608815aa3de43208d4ac334a11bc4c408167/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=8b0f608815aa3de43208d4ac334a11bc4c408167",
        "patch": "@@ -1,10 +1,19 @@\n+#include \"bitcoin-config.h\"\n #include \"paymentservertests.h\"\n #include \"uritests.h\"\n \n #include <QCoreApplication>\n #include <QObject>\n #include <QTest>\n \n+#if defined(QT_STATICPLUGIN) && QT_VERSION < 0x050000\n+#include <QtPlugin>\n+Q_IMPORT_PLUGIN(qcncodecs)\n+Q_IMPORT_PLUGIN(qjpcodecs)\n+Q_IMPORT_PLUGIN(qtwcodecs)\n+Q_IMPORT_PLUGIN(qkrcodecs)\n+#endif\n+\n // This is all you need to run all the tests\n int main(int argc, char *argv[])\n {"
      }
    ]
  },
  {
    "sha": "2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjkxY2JjNGIzYzk3YTQ2OGIyM2YyYzExZGJlOTkyZGZiM2Y4YmNi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-03T01:16:45Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: Force macports default include path to be searched last\n\nAllows outside includes to take precedence. In particular, this allows for\na specified Qt to be used without clashing with macports' headers.",
      "tree": {
        "sha": "8af085cfc2051ca0656c9fd04c23b4a2df7e1b2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8af085cfc2051ca0656c9fd04c23b4a2df7e1b2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b0f608815aa3de43208d4ac334a11bc4c408167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b0f608815aa3de43208d4ac334a11bc4c408167",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b0f608815aa3de43208d4ac334a11bc4c408167"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "11a9a3118e562499046cff7a80f0968a5735e32d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
        "patch": "@@ -191,7 +191,7 @@ case $host in\n        AC_CHECK_PROG([PORT],port, port)\n        if test x$PORT = xport; then\n          dnl add default macports paths\n-         CPPFLAGS=\"$CPPFLAGS -I/opt/local/include -I/opt/local/include/db48\"\n+         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include -I/opt/local/include/db48\"\n          LIBS=\"$LIBS -L/opt/local/lib -L/opt/local/lib/db48\"\n        fi\n "
      }
    ]
  },
  {
    "sha": "371f3f6ba553dbc99c3bd2788c2ba38882112bef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzFmM2Y2YmE1NTNkYmM5OWMzYmQyNzg4YzJiYTM4ODgyMTEyYmVm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:28:57Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: fix --with-qt with no arguments",
      "tree": {
        "sha": "1db424f11db78d8a2dbb0cd72430288f77fb37b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1db424f11db78d8a2dbb0cd72430288f77fb37b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/371f3f6ba553dbc99c3bd2788c2ba38882112bef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/371f3f6ba553dbc99c3bd2788c2ba38882112bef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/371f3f6ba553dbc99c3bd2788c2ba38882112bef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/371f3f6ba553dbc99c3bd2788c2ba38882112bef/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 26,
      "deletions": 4
    },
    "files": [
      {
        "sha": "fdfb1867bc6ce2813d55e1a2bc70e2ddb5b99ddf",
        "filename": "qa/rpc-tests/send.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/send.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/send.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/send.sh?ref=371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "patch": "@@ -0,0 +1,14 @@\n+#!/bin/bash\n+TIMEOUT=10\n+SIGNAL=HUP\n+if [ $# -eq 0 ]; then\n+  echo -e \"Usage:\\t$0 <cmd>\"\n+  echo -e \"\\tRuns <cmd> and wait ${TIMEOUT} seconds or until SIG${SIGNAL} is received.\"\n+  echo -e \"\\tReturns: 0 if SIG${SIGNAL} is received, 1 otherwise.\"\n+  exit 0\n+fi\n+trap '[[ ${PID} ]] && kill ${PID}' ${SIGNAL}\n+\"$@\"\n+sleep ${TIMEOUT} & PID=$!\n+wait ${PID} && exit 1\n+exit 0"
      },
      {
        "sha": "fed7d325615116bf06c224b0f97cb0688130903e",
        "filename": "qa/rpc-tests/util.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "patch": "@@ -23,6 +23,7 @@ function CreateDataDir {\n   echo \"rpcuser=rt\" >> $CONF\n   echo \"rpcpassword=rt\" >> $CONF\n   echo \"rpcwait=1\" >> $CONF\n+  echo \"walletnotify=killall -HUP `basename ${SENDANDWAIT}`\" >> $CONF\n   shift\n   while (( \"$#\" )); do\n       echo $1 >> $CONF\n@@ -59,7 +60,7 @@ function Send {\n   to=$2\n   amount=$3\n   address=$(Address $to)\n-  txid=$( $CLI $from sendtoaddress $address $amount )\n+  txid=$( ${SENDANDWAIT} $CLI $from sendtoaddress $address $amount )\n }\n \n # Use: Unspent <datadir> <n'th-last-unspent> <var>\n@@ -80,7 +81,7 @@ function CreateTxn1 {\n \n # Use: SendRawTxn <datadir> <hex_txn_data>\n function SendRawTxn {\n-  $CLI $1 sendrawtransaction $2\n+  ${SENDANDWAIT} $CLI $1 sendrawtransaction $2\n }\n \n # Use: GetBlocks <datadir>"
      },
      {
        "sha": "8d5a6cdc78bb4211575554bb1b439d0882dfb84e",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "patch": "@@ -12,6 +12,7 @@ BITCOIND=${1}/bitcoind\n CLI=${1}/bitcoin-cli\n \n DIR=\"${BASH_SOURCE%/*}\"\n+SENDANDWAIT=\"${DIR}/send.sh\"\n if [[ ! -d \"$DIR\" ]]; then DIR=\"$PWD\"; fi\n . \"$DIR/util.sh\"\n "
      },
      {
        "sha": "f7cb935d6dae7ff337ed7696030aaeb56b4574af",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/371f3f6ba553dbc99c3bd2788c2ba38882112bef/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/371f3f6ba553dbc99c3bd2788c2ba38882112bef/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "patch": "@@ -1,7 +1,7 @@\n dnl Helper for cases where a qt dependency is not met.\n dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\"; then\n+  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n     if test x$bitcoin_enable_qt != xno; then\n       AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n     fi\n@@ -50,7 +50,13 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n   AC_ARG_WITH([qt],\n     [AS_HELP_STRING([--with-qt],\n     [with qt (no|qt4|qt5|auto. default is auto, qt4 tried first.)])],\n-    [bitcoin_qt_want_version=$withval],\n+    [\n+     bitcoin_qt_want_version=$withval\n+     if test x$bitcoin_qt_want_version = xyes; then\n+       bitcoin_qt_force=yes\n+       bitcoin_qt_want_version=auto\n+     fi\n+    ],\n     [bitcoin_qt_want_version=auto])\n \n   AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])"
      }
    ]
  },
  {
    "sha": "42cc96737ca05a3b539ce5d1a734a7a62407d31c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmNjOTY3MzdjYTA1YTNiNTM5Y2U1ZDFhNzM0YTdhNjI0MDdkMzFj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:04Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:34Z"
      },
      "message": "qt5: fix typo causing broken selection logic",
      "tree": {
        "sha": "e4ac226f869351d475be7d1f26d005d0db3c42f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4ac226f869351d475be7d1f26d005d0db3c42f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42cc96737ca05a3b539ce5d1a734a7a62407d31c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cc96737ca05a3b539ce5d1a734a7a62407d31c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42cc96737ca05a3b539ce5d1a734a7a62407d31c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cc96737ca05a3b539ce5d1a734a7a62407d31c/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/371f3f6ba553dbc99c3bd2788c2ba38882112bef"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "91c399eef077f3340717a7d16724faa60daa3ac1",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cc96737ca05a3b539ce5d1a734a7a62407d31c/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cc96737ca05a3b539ce5d1a734a7a62407d31c/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=42cc96737ca05a3b539ce5d1a734a7a62407d31c",
        "patch": "@@ -241,7 +241,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n \n       dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n       if test x$have_qt == xno && test x$bitcoin_qt_want_version == xauto; then\n-        if x$auto_priority_version = x$qt5; then\n+        if test x$auto_priority_version = x$qt5; then\n           PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n         else\n           PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])"
      }
    ]
  }
]