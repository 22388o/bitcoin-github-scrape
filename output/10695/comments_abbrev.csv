sdaftuar,2017-06-29T17:31:55Z,@jnewbery Thanks for the review; I addressed all your nits except the one I responded to.,https://github.com/bitcoin/bitcoin/pull/10695#issuecomment-312037243,312037243,
sdaftuar,2017-07-06T14:15:01Z,Bumped travis after spurious zapwallettxs error popped up (appeared to be an instance of #10678),https://github.com/bitcoin/bitcoin/pull/10695#issuecomment-313408718,313408718,
jnewbery,2017-07-10T13:48:16Z,"Tested ACK https://github.com/bitcoin/bitcoin/pull/10695/commits/4ccc12a54a217892bd4ccfd94c46052a11cdb3fb. ~It'd be nice to add asserting on reject messages, but that can wait for a future PR.~\n\n**Update**: I'm an idiot. You've already added testing reject messages.\n\nACK",https://github.com/bitcoin/bitcoin/pull/10695#issuecomment-314110705,314110705,
MarcoFalke,2017-08-08T20:57:26Z,utACK 4ccc12a54a217892bd4ccfd94c46052a11cdb3fb,https://github.com/bitcoin/bitcoin/pull/10695#issuecomment-321079698,321079698,
TheBlueMatt,2017-06-28T22:13:30Z,"For my own sanity it'd be nice if cltv_invalidate looked much more like cltv_validate, which would make it more obvious that the invalid tx is clearly invalid due to the CLTV and not some other reason, and while you're at it would be nice to test other ways CLTV can be invalid (both tx doesnt meet sequence requirements and tx doesnt meet locktime requirements).",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124670279,124670279,test/functional/bip65-cltv-p2p.py
jnewbery,2017-06-29T09:02:42Z,"The node-under-test sends a reject message at this point:\n\n```\n2017-06-29 08:56:00.945000 TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11900: msg_reject: b'block' 17 b'bad-version(0x00000002)' [7bb0412e9813a1d13cd14ff2277a906e101d183f93b0136c848bdb94ffd1d6b7]\n```\n\nIt'd be nice to add an assert that mininode received that reject.\n\nI know that there's talk of remov",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124746991,124746991,test/functional/bipdersig-p2p.py
jnewbery,2017-06-29T09:05:24Z,"Again, it'd be good to assert that we received a reject, this time with cause `'block-validation-failed'`",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124747578,124747578,test/functional/bipdersig-p2p.py
jnewbery,2017-06-29T09:13:36Z,nit: this import is unused and can be removed,https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124749366,124749366,test/functional/bipdersig-p2p.py
jnewbery,2017-06-29T09:16:00Z,nit: trailing whitespace,https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124749877,124749877,test/functional/bipdersig-p2p.py
jnewbery,2017-06-29T09:16:25Z,nit: trailing whitespace,https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124749958,124749958,test/functional/bipdersig-p2p.py
jnewbery,2017-06-29T09:18:31Z,"Are transactions with non-DER signatures added to the mempool or relayed after BIP66 activation? If not, is it possible to add a sub-test here to test that?",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124750421,124750421,test/functional/bipdersig-p2p.py
jnewbery,2017-06-29T09:29:54Z,nit: import time not used,https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124753006,124753006,test/functional/bip65-cltv-p2p.py
jnewbery,2017-06-29T09:32:12Z,"nit: perhaps combine this with the line above, rather than have a throwaway variable.",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124753529,124753529,test/functional/bip65-cltv-p2p.py
jnewbery,2017-06-29T09:34:20Z,Not required. Just use the base `NodeConnCB` below.,https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124753994,124753994,test/functional/bip65-cltv-p2p.py
jnewbery,2017-06-29T09:36:02Z,This doesn't need to be a method in `BIP65Test`. Consider moving it above the class definition to be a module-level function (alongside `cltv_invalidate()` and `cltv_validate()`),https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124754384,124754384,test/functional/bip65-cltv-p2p.py
jnewbery,2017-06-29T09:38:39Z,"`self.nodes[0]` is used throughout this test. Consider adding an alias:\n\n```py\nnode = self.nodes[0]\n```\nand then using `node` throughout the test.\n\nI think that looks slightly neater for tests that only use one node, but that's just personal preference.",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124754971,124754971,test/functional/bip65-cltv-p2p.py
jnewbery,2017-06-29T09:48:44Z,"`block.solve()` calls `block.rehash()`, so there's no need for all of these explicit calls to `block.rehash()`. Up to you if you want to remove them all.",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124756991,124756991,test/functional/bip65-cltv-p2p.py
jnewbery,2017-06-29T09:50:20Z,I've added a comment to bipdersig-p2p.py about asserting on reject messages. Same comment applies here,https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124757364,124757364,test/functional/bip65-cltv-p2p.py
sdaftuar,2017-06-29T17:27:13Z,"Agree that this would be nice, but left this as a todo for now.",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124863431,124863431,test/functional/bip65-cltv-p2p.py
sdaftuar,2017-06-29T17:31:09Z,"Default policy is to enforce DERSIG and CLTV on all transactions entering the mempool.  I suppose it might be nice to add a test that the policy is enforcing these rules, but in this test I set custom script flags so that I could show that a transaction is valid under script flags that don't include the soft fork, but invalid under the soft fork.\n\nIt might be nice to add a second node to these",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124864359,124864359,test/functional/bipdersig-p2p.py
sdaftuar,2017-06-29T17:33:55Z,"I did add a test that shows that the transaction is accepted to the node's mempool, which is using -promiscuousmempoolflags so that it's not enforcing the soft-fork rule.  So hopefully that helps assuage the concern that the transaction might be invalid for non-soft-fork related reasons.\n\n(Also, this helps sneak in a test that is useful post-#10192, by verifying that a block is invalid even if",https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124865025,124865025,test/functional/bip65-cltv-p2p.py
