[
  {
    "sha": "963a68f63aeff44e3f166188cecea45afc9f6f9e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjNhNjhmNjNhZWZmNDRlM2YxNjYxODhjZWNlYTQ1YWZjOWY2Zjll",
    "commit": {
      "author": {
        "name": "Barry Deeney",
        "email": "mxaddict@codedmaster.com",
        "date": "2019-06-05T10:41:17Z"
      },
      "committer": {
        "name": "Barry Deeney",
        "email": "mxaddict@codedmaster.com",
        "date": "2019-06-05T10:41:17Z"
      },
      "message": "Updated more NULL -> nullptr",
      "tree": {
        "sha": "5e63e6a4bbfe8939f464e01338ac42858c57e8cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e63e6a4bbfe8939f464e01338ac42858c57e8cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/963a68f63aeff44e3f166188cecea45afc9f6f9e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/963a68f63aeff44e3f166188cecea45afc9f6f9e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/963a68f63aeff44e3f166188cecea45afc9f6f9e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/963a68f63aeff44e3f166188cecea45afc9f6f9e/comments",
    "author": {
      "login": "mxaddict",
      "id": 1060905,
      "node_id": "MDQ6VXNlcjEwNjA5MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1060905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mxaddict",
      "html_url": "https://github.com/mxaddict",
      "followers_url": "https://api.github.com/users/mxaddict/followers",
      "following_url": "https://api.github.com/users/mxaddict/following{/other_user}",
      "gists_url": "https://api.github.com/users/mxaddict/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mxaddict/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mxaddict/subscriptions",
      "organizations_url": "https://api.github.com/users/mxaddict/orgs",
      "repos_url": "https://api.github.com/users/mxaddict/repos",
      "events_url": "https://api.github.com/users/mxaddict/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mxaddict/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mxaddict",
      "id": 1060905,
      "node_id": "MDQ6VXNlcjEwNjA5MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1060905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mxaddict",
      "html_url": "https://github.com/mxaddict",
      "followers_url": "https://api.github.com/users/mxaddict/followers",
      "following_url": "https://api.github.com/users/mxaddict/following{/other_user}",
      "gists_url": "https://api.github.com/users/mxaddict/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mxaddict/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mxaddict/subscriptions",
      "organizations_url": "https://api.github.com/users/mxaddict/orgs",
      "repos_url": "https://api.github.com/users/mxaddict/repos",
      "events_url": "https://api.github.com/users/mxaddict/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mxaddict/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51858c57f0e2e270894a57028650dfdaf16b6cc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51858c57f0e2e270894a57028650dfdaf16b6cc2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51858c57f0e2e270894a57028650dfdaf16b6cc2"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "57b511ab41df3f8db01b53ff34e77d8b275917ac",
        "filename": "src/univalue/lib/univalue.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/963a68f63aeff44e3f166188cecea45afc9f6f9e/src/univalue/lib/univalue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/963a68f63aeff44e3f166188cecea45afc9f6f9e/src/univalue/lib/univalue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue.cpp?ref=963a68f63aeff44e3f166188cecea45afc9f6f9e",
        "patch": "@@ -228,7 +228,7 @@ const char *uvTypeName(UniValue::VType t)\n     }\n \n     // not reached\n-    return NULL;\n+    return nullptr;\n }\n \n const UniValue& find_value(const UniValue& obj, const std::string& name)"
      },
      {
        "sha": "ae1071fce98105f95e638a1e89c912783dfec1d4",
        "filename": "src/univalue/lib/univalue_get.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/963a68f63aeff44e3f166188cecea45afc9f6f9e/src/univalue/lib/univalue_get.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/963a68f63aeff44e3f166188cecea45afc9f6f9e/src/univalue/lib/univalue_get.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_get.cpp?ref=963a68f63aeff44e3f166188cecea45afc9f6f9e",
        "patch": "@@ -31,7 +31,7 @@ bool ParseInt32(const std::string& str, int32_t *out)\n {\n     if (!ParsePrechecks(str))\n         return false;\n-    char *endp = NULL;\n+    char *endp = nullptr;\n     errno = 0; // strtol will not set errno if valid\n     long int n = strtol(str.c_str(), &endp, 10);\n     if(out) *out = (int32_t)n;\n@@ -47,7 +47,7 @@ bool ParseInt64(const std::string& str, int64_t *out)\n {\n     if (!ParsePrechecks(str))\n         return false;\n-    char *endp = NULL;\n+    char *endp = nullptr;\n     errno = 0; // strtoll will not set errno if valid\n     long long int n = strtoll(str.c_str(), &endp, 10);\n     if(out) *out = (int64_t)n;"
      },
      {
        "sha": "5ab852d92fb6e0d27d74880df62fe0e065d3ef99",
        "filename": "src/univalue/test/unitester.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/963a68f63aeff44e3f166188cecea45afc9f6f9e/src/univalue/test/unitester.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/963a68f63aeff44e3f166188cecea45afc9f6f9e/src/univalue/test/unitester.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/unitester.cpp?ref=963a68f63aeff44e3f166188cecea45afc9f6f9e",
        "patch": "@@ -58,7 +58,7 @@ static void runtest_file(const char *filename_)\n         std::string basename(filename_);\n         std::string filename = srcdir + \"/\" + basename;\n         FILE *f = fopen(filename.c_str(), \"r\");\n-        assert(f != NULL);\n+        assert(f != nullptr);\n \n         std::string jdata;\n "
      },
      {
        "sha": "dc2e35f42783778363f1bd613013f9db554d2355",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/963a68f63aeff44e3f166188cecea45afc9f6f9e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/963a68f63aeff44e3f166188cecea45afc9f6f9e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=963a68f63aeff44e3f166188cecea45afc9f6f9e",
        "patch": "@@ -4164,7 +4164,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     } else if (wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) {\n         // Make it impossible to disable private keys after creation\n         chain.initError(strprintf(_(\"Error loading %s: Private keys can only be disabled during creation\"), walletFile));\n-        return NULL;\n+        return nullptr;\n     } else if (walletInstance->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         LOCK(walletInstance->cs_KeyStore);\n         if (!walletInstance->mapKeys.empty() || !walletInstance->mapCryptedKeys.empty()) {"
      }
    ]
  }
]