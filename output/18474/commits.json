[
  {
    "sha": "fac3716b09bb9ee121db629873d9694a95cae942",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWMzNzE2YjA5YmI5ZWUxMjFkYjYyOTg3M2Q5Njk0YTk1Y2FlOTQy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-30T19:57:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-30T19:51:05Z"
      },
      "message": "test: check that peer is connected when calling sync_*",
      "tree": {
        "sha": "11018099f466c55a9f661472b8cf60404bc53d55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11018099f466c55a9f661472b8cf60404bc53d55"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac3716b09bb9ee121db629873d9694a95cae942",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgqYgv+IXwmIp3/F2EP++4BnUeueX5GUVv0oB7ECBISEtgQsggEwEeA3CYUGRom\niuap2yd9OhP3IuL0Lc138kn8Pw1jEaBj1jxMML0qyoV4QccKkfqCPXIA3WHjoSYJ\n+5L5KwTOPfb3yStrZ1Ol7kLF7oVWXbQRqln9iK9XHk/N9dYRgFufP+NMtNkvNjW2\n+LgHJWUYNy33KRhrByFS2EWZBvXRHZ8rDDFryyeTSaTh71FHl4xtAlm896XxNnJv\n642qGLu9AErp/lmKJKkaU2nR9euYIeftCYfdanIHVpZbKQkb0UP+ugNiSebiogyc\nyYfzq4QLyVBivVqn6Bii+NSaO6DQaifGB630xjL/viQmZVEvOR6a0/4fa1yjxVKw\nxPldHlOElFl0URNqRKgjBFDOTc5tpLV6LHukISMN25ZZlRUvqJN4jAjZOI2VrjRI\nZl0MmKEYbNGOLPx85VvNdj8KeXpXP4CMY7L8hnQp28UQ8Ncj33W7Q9b+QMPAMNYe\nszWmxH1j\n=51yb\n-----END PGP SIGNATURE-----",
        "payload": "tree 11018099f466c55a9f661472b8cf60404bc53d55\nparent 7e1fc03b185d89f21da1bee2f8b7900d65745b30\nauthor MarcoFalke <falke.marco@gmail.com> 1585598264 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1585597865 -0400\n\ntest: check that peer is connected when calling sync_*\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac3716b09bb9ee121db629873d9694a95cae942",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac3716b09bb9ee121db629873d9694a95cae942",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac3716b09bb9ee121db629873d9694a95cae942/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e1fc03b185d89f21da1bee2f8b7900d65745b30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e1fc03b185d89f21da1bee2f8b7900d65745b30",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e1fc03b185d89f21da1bee2f8b7900d65745b30"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e89b4e9879940469dd83bd1a0ba0cec60f4917b1",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac3716b09bb9ee121db629873d9694a95cae942/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac3716b09bb9ee121db629873d9694a95cae942/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fac3716b09bb9ee121db629873d9694a95cae942",
        "patch": "@@ -393,6 +393,7 @@ def connect_nodes(from_connection, node_num):\n     # with transaction relaying\n     wait_until(lambda:  all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n \n+\n def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n     \"\"\"\n     Wait until everybody has the same tip.\n@@ -406,9 +407,12 @@ def sync_blocks(rpc_connections, *, wait=1, timeout=60):\n         best_hash = [x.getbestblockhash() for x in rpc_connections]\n         if best_hash.count(best_hash[0]) == len(rpc_connections):\n             return\n+        # Check that each peer has at least one connection\n+        assert (all([len(x.getpeerinfo()) for x in rpc_connections]))\n         time.sleep(wait)\n     raise AssertionError(\"Block sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(b) for b in best_hash)))\n \n+\n def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n     \"\"\"\n     Wait until everybody has the same transactions in their memory\n@@ -422,6 +426,8 @@ def sync_mempools(rpc_connections, *, wait=1, timeout=60, flush_scheduler=True):\n                 for r in rpc_connections:\n                     r.syncwithvalidationinterfacequeue()\n             return\n+        # Check that each peer has at least one connection\n+        assert (all([len(x.getpeerinfo()) for x in rpc_connections]))\n         time.sleep(wait)\n     raise AssertionError(\"Mempool sync timed out:{}\".format(\"\".join(\"\\n  {!r}\".format(m) for m in pool)))\n "
      }
    ]
  }
]