[
  {
    "sha": "9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjY4ZWQ2YjZkMWE5YzY0MzZjZTM3OTEzNjY2MTY1ZjJiMTgwZWUz",
    "commit": {
      "author": {
        "name": "Veres Lajos",
        "email": "vlajos@gmail.com",
        "date": "2015-08-08T23:17:27Z"
      },
      "committer": {
        "name": "Veres Lajos",
        "email": "vlajos@gmail.com",
        "date": "2015-08-10T21:06:27Z"
      },
      "message": "typofixes (found by misspell_fixer)",
      "tree": {
        "sha": "353f0c636a1f27824afb150fc16692456a00d5f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/353f0c636a1f27824afb150fc16692456a00d5f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/comments",
    "author": {
      "login": "vlajos",
      "id": 3994645,
      "node_id": "MDQ6VXNlcjM5OTQ2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3994645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vlajos",
      "html_url": "https://github.com/vlajos",
      "followers_url": "https://api.github.com/users/vlajos/followers",
      "following_url": "https://api.github.com/users/vlajos/following{/other_user}",
      "gists_url": "https://api.github.com/users/vlajos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vlajos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vlajos/subscriptions",
      "organizations_url": "https://api.github.com/users/vlajos/orgs",
      "repos_url": "https://api.github.com/users/vlajos/repos",
      "events_url": "https://api.github.com/users/vlajos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vlajos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vlajos",
      "id": 3994645,
      "node_id": "MDQ6VXNlcjM5OTQ2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3994645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vlajos",
      "html_url": "https://github.com/vlajos",
      "followers_url": "https://api.github.com/users/vlajos/followers",
      "following_url": "https://api.github.com/users/vlajos/following{/other_user}",
      "gists_url": "https://api.github.com/users/vlajos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vlajos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vlajos/subscriptions",
      "organizations_url": "https://api.github.com/users/vlajos/orgs",
      "repos_url": "https://api.github.com/users/vlajos/repos",
      "events_url": "https://api.github.com/users/vlajos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vlajos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4fe57da6207c1e5691a1e843d22db571f3f0186",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4fe57da6207c1e5691a1e843d22db571f3f0186",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4fe57da6207c1e5691a1e843d22db571f3f0186"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "bd7ab3524c26e0dc37bf3098f48096a36f588466",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -149,7 +149,7 @@ bitcoin (0.5.3-natty0) natty; urgency=low\n bitcoin (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isnt anonymous without\n+    These should never have been there, bitcoin isn't anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n@@ -190,7 +190,7 @@ bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n \n   * Add test_bitcoin to build test\n   * Fix clean\n-  * Remove uneccessary build-dependancies\n+  * Remove unnecessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n@@ -350,7 +350,7 @@ bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n \n bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n-  * Fix override agressive optimizations.\n+  * Fix override aggressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n     + Add fallback build-dependency on libdb4.6++-dev.\n     + Tighten unversioned Boost build-dependencies to recent versions,"
      },
      {
        "sha": "f357ec6c8f64c8d8726f5141cf38f30f230dd60a",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -1117,7 +1117,7 @@ EOF\n \t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n \t# the processor, so we play safe by assuming i586.\n \t# Note: whatever this is, it MUST be the same as what config.sub\n-\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n+\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n \t# this is a cross-build.\n \techo i586-pc-msdosdjgpp\n \texit ;;"
      },
      {
        "sha": "eca655a595bde51d291d2aa918155259d1fc0878",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -200,7 +200,7 @@ def run_test(self):\n         response = http_get_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n         assert_equal(response.status, 200) #must be a 500 because we exceeding the limits\n \n-        self.nodes[0].generate(1) #generate block to not affect upcomming tests\n+        self.nodes[0].generate(1) #generate block to not affect upcoming tests\n         self.sync_all()\n \n         ################"
      },
      {
        "sha": "f4808df08f4cb0af2210de3e396388b4cb8e0433",
        "filename": "qa/rpc-tests/test_framework/comptool.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/qa/rpc-tests/test_framework/comptool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/qa/rpc-tests/test_framework/comptool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/comptool.py?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -116,7 +116,7 @@ def send_mempool(self):\n #    is reached) and then sent out in one inv message.  Then the final block\n #    will be synced across all connections, and the outcome of the final \n #    block will be tested.\n-# sync_every_tx: analagous to behavior for sync_every_block, except if outcome\n+# sync_every_tx: analogous to behavior for sync_every_block, except if outcome\n #    on the final tx is None, then contents of entire mempool are compared\n #    across all connections.  (If outcome of final tx is specified as true\n #    or false, then only the last tx is tested against outcome.)"
      },
      {
        "sha": "384b6cfdb9371a089b6e2f4c43377e72e4206e57",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -265,7 +265,7 @@ class CAddrMan\n      * Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n      * they are instead reconstructed from the other information.\n      *\n-     * vvNew is serialized, but only used if ADDRMAN_UNKOWN_BUCKET_COUNT didn't change,\n+     * vvNew is serialized, but only used if ADDRMAN_UNKNOWN_BUCKET_COUNT didn't change,\n      * otherwise it is reconstructed as well.\n      *\n      * This format is more complex, but significantly smaller (at most 1.5 MiB), and supports"
      },
      {
        "sha": "34e163ff61233473bafbe4b53a72c7d08eb620bb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -1471,7 +1471,7 @@ bool AbortNode(const std::string& strMessage, const std::string& userMessage=\"\")\n     strMiscWarning = strMessage;\n     LogPrintf(\"*** %s\\n\", strMessage);\n     uiInterface.ThreadSafeMessageBox(\n-        userMessage.empty() ? _(\"Error: A fatal internal error occured, see debug.log for details\") : userMessage,\n+        userMessage.empty() ? _(\"Error: A fatal internal error occurred, see debug.log for details\") : userMessage,\n         \"\", CClientUIInterface::MSG_ERROR);\n     StartShutdown();\n     return false;"
      },
      {
        "sha": "f8e877df25c906add02851d562c230d2a3f61b51",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -168,7 +168,7 @@ uint256 CPartialMerkleTree::ExtractMatches(std::vector<uint256> &vMatch) {\n     // traverse the partial tree\n     unsigned int nBitsUsed = 0, nHashUsed = 0;\n     uint256 hashMerkleRoot = TraverseAndExtract(nHeight, 0, nBitsUsed, nHashUsed, vMatch);\n-    // verify that no problems occured during the tree traversal\n+    // verify that no problems occurred during the tree traversal\n     if (fBad)\n         return uint256();\n     // verify that all bits were consumed (except for the padding caused by serializing it as a byte sequence)"
      },
      {
        "sha": "fb5726a2b9e0bb6db0ac681919c2b408236600d5",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -2319,7 +2319,7 @@ void DumpBanlist()\n {\n     int64_t nStart = GetTimeMillis();\n \n-    CNode::SweepBanned(); //clean unused entires (if bantime has expired)\n+    CNode::SweepBanned(); //clean unused entries (if bantime has expired)\n \n     CBanDB bandb;\n     banmap_t banmap;"
      },
      {
        "sha": "954cdd49d63a3fca9935a434b37d111676fecb8c",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -695,7 +695,7 @@ class CNode\n     static bool BannedSetIsDirty();\n     //!set the \"dirty\" flag for the banlist\n     static void SetBannedSetDirty(bool dirty=true);\n-    //!clean unused entires (if bantime has expired)\n+    //!clean unused entries (if bantime has expired)\n     static void SweepBanned();\n \n     void copyStats(CNodeStats &stats);"
      },
      {
        "sha": "dec00e1eeb8dce86f8bdecacb5a7a0f19adf9f85",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -349,7 +349,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n         }\n         if (pchRetA[0] != 0x01 || pchRetA[1] != 0x00) {\n             CloseSocket(hSocket);\n-            return error(\"Proxy authentication unsuccesful\");\n+            return error(\"Proxy authentication unsuccessful\");\n         }\n     } else if (pchRet1[1] == 0x00) {\n         // Perform no authentication"
      },
      {
        "sha": "ffe31d19425cc2984017bb9b10df83887697ab37",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -261,7 +261,7 @@ void TxConfirmStats::removeTx(unsigned int entryHeight, unsigned int nBestSeenHe\n         blocksAgo = 0;\n     if (blocksAgo < 0) {\n         LogPrint(\"estimatefee\", \"Blockpolicy error, blocks ago is negative for mempool tx\\n\");\n-        return;  //This can't happen becasue we call this with our best seen height, no entries can have higher\n+        return;  //This can't happen because we call this with our best seen height, no entries can have higher\n     }\n \n     if (blocksAgo >= (int)unconfTxs.size()) {"
      },
      {
        "sha": "15577d128a3ebf5db8e292ee0091d5afbc98c695",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -118,7 +118,7 @@ class TxConfirmStats\n     /**\n      * Initialize the data structures.  This is called by BlockPolicyEstimator's\n      * constructor with default values.\n-     * @param defaultBuckets contains the upper limits for the bucket boundries\n+     * @param defaultBuckets contains the upper limits for the bucket boundaries\n      * @param maxConfirms max number of confirms to track\n      * @param decay how much to decay the historical moving average per block\n      * @param dataTypeString for logging purposes"
      },
      {
        "sha": "5cc4d00dbf493a221a4221fbf7e488aad63b1692",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -762,7 +762,7 @@ void PaymentServer::setOptionsModel(OptionsModel *optionsModel)\n \n void PaymentServer::handlePaymentACK(const QString& paymentACKMsg)\n {\n-    // currently we don't futher process or store the paymentACK message\n+    // currently we don't further process or store the paymentACK message\n     Q_EMIT message(tr(\"Payment acknowledged\"), paymentACKMsg, CClientUIInterface::ICON_INFORMATION | CClientUIInterface::MODAL);\n }\n "
      },
      {
        "sha": "4453ceb563f75b5247d447946d7643d822a29338",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -570,7 +570,7 @@ void RPCConsole::peerLayoutChanged()\n \n     if (detailNodeRow < 0)\n     {\n-        // detail node dissapeared from table (node disconnected)\n+        // detail node disappeared from table (node disconnected)\n         fUnselect = true;\n     }\n     else"
      },
      {
        "sha": "c15b64c327f769afb7e26b1d4ec006d02bea0349",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -57,7 +57,7 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n     QPainter pixPaint(&pixmap);\n     pixPaint.setPen(QColor(100,100,100));\n \n-    // draw a slighly radial gradient\n+    // draw a slightly radial gradient\n     QRadialGradient gradient(QPoint(0,0), splashSize.width()/devicePixelRatio);\n     gradient.setColorAt(0, Qt::white);\n     gradient.setColorAt(1, QColor(247,247,247));"
      },
      {
        "sha": "56993f32f5d80ddd7c88a56e6f88c649559afdb6",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -606,7 +606,7 @@ void StartRPCThreads()\n         LogPrintf(\"No rpcpassword set - using random cookie authentication\\n\");\n         if (!GenerateAuthCookie(&strRPCUserColonPass)) {\n             uiInterface.ThreadSafeMessageBox(\n-                _(\"Error: A fatal internal error occured, see debug.log for details\"), // Same message as AbortNode\n+                _(\"Error: A fatal internal error occurred, see debug.log for details\"), // Same message as AbortNode\n                 \"\", CClientUIInterface::MSG_ERROR);\n             StartShutdown();\n             return;\n@@ -670,7 +670,7 @@ void StartRPCThreads()\n         vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v6::any(), defaultPort));\n         vEndpoints.push_back(ip::tcp::endpoint(boost::asio::ip::address_v4::any(), defaultPort));\n         // Prefer making the socket dual IPv6/IPv4 instead of binding\n-        // to both addresses seperately.\n+        // to both addresses separately.\n         bBindAny = true;\n     }\n "
      },
      {
        "sha": "68a9443084a5e41a0e45ef0d6cb2ad6607c1454d",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -16,7 +16,7 @@\n \n ////////////////////////////////////////////////\n //                                            //\n-// THE SIMPLE DEFINITON, EXCLUDING DEBUG CODE //\n+// THE SIMPLE DEFINITION, EXCLUDING DEBUG CODE //\n //                                            //\n ////////////////////////////////////////////////\n "
      },
      {
        "sha": "6c3cac71c2408ad521632436cdd748c1f17ffe7c",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -128,7 +128,7 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"499999999 NOP2 1\"]],\n \"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000fe64cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n \n-[\"By-time locks, with argument just beyond tx nLockTime (but within numerical boundries)\"],\n+[\"By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"500000001 NOP2 1\"]],\n \"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"4294967295 NOP2 1\"]],"
      },
      {
        "sha": "9744a3c8486c5ad890adf0a9753c7257fa5a6c44",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -197,7 +197,7 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0 NOP2 1\"]],\n \"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000ff64cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n \n-[\"By-time locks, with argument just beyond tx nLockTime (but within numerical boundries)\"],\n+[\"By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"500000000 NOP2 1\"]],\n \"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"4294967295 NOP2 1\"]],"
      },
      {
        "sha": "ce547f5753acd259ab4488837437d630a655192c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f68ed6b6d1a9c6436ce37913666165f2b180ee3/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9f68ed6b6d1a9c6436ce37913666165f2b180ee3",
        "patch": "@@ -797,7 +797,7 @@ UniValue movecmd(const UniValue& params, bool fHelp)\n             \"4. minconf           (numeric, optional, default=1) Only use funds with at least this many confirmations.\\n\"\n             \"5. \\\"comment\\\"       (string, optional) An optional comment, stored in the wallet only.\\n\"\n             \"\\nResult:\\n\"\n-            \"true|false           (boolean) true if successfull.\\n\"\n+            \"true|false           (boolean) true if successful.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nMove 0.01 \" + CURRENCY_UNIT + \" from the default account to the account named tabby\\n\"\n             + HelpExampleCli(\"move\", \"\\\"\\\" \\\"tabby\\\" 0.01\") +"
      }
    ]
  }
]