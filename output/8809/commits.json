[
  {
    "sha": "76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NmE1ZjFiZjM4YTJmNjM3NmQxYzlhOGNjNmU5Zjc5NjRlODM2YzYy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-09-25T18:32:25Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-09-27T18:43:09Z"
      },
      "message": "[qt] rework sync-overlay\n\n* Remove the \"Progress increase per hour\" information, as it is\n  redundant to the already displayed information and sounds potentially\n  confusing.\n\n* Don't show integer progress in progress bar. (Already shown in front\n  of progress bar)\n\n* Estimate the number of blocks left based on nPowTargetSpacing",
      "tree": {
        "sha": "68f0cf792e140e073563758012a2b99d8cf9f570",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68f0cf792e140e073563758012a2b99d8cf9f570"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14e8f9916bebf01d3cd6fc89c704bd870bf50760",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14e8f9916bebf01d3cd6fc89c704bd870bf50760",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14e8f9916bebf01d3cd6fc89c704bd870bf50760"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 14,
      "deletions": 34
    },
    "files": [
      {
        "sha": "56530d1681d69242a5072061dd9dbdc48d971513",
        "filename": "src/qt/forms/modaloverlay.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 22,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62/src/qt/forms/modaloverlay.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62/src/qt/forms/modaloverlay.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/modaloverlay.ui?ref=76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62",
        "patch": "@@ -7,7 +7,7 @@\n     <x>0</x>\n     <y>0</y>\n     <width>640</width>\n-    <height>385</height>\n+    <height>415</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n@@ -276,31 +276,14 @@ QLabel { color: rgb(40,40,40);  }</string>\n                <property name=\"value\">\n                 <number>24</number>\n                </property>\n+               <property name=\"format\">\n+                <string/>\n+               </property>\n               </widget>\n              </item>\n             </layout>\n            </item>\n            <item row=\"4\" column=\"0\">\n-            <widget class=\"QLabel\" name=\"labelProgressIncrease\">\n-             <property name=\"font\">\n-              <font>\n-               <weight>75</weight>\n-               <bold>true</bold>\n-              </font>\n-             </property>\n-             <property name=\"text\">\n-              <string>Progress increase per hour</string>\n-             </property>\n-            </widget>\n-           </item>\n-           <item row=\"4\" column=\"1\">\n-            <widget class=\"QLabel\" name=\"progressIncreasePerH\">\n-             <property name=\"text\">\n-              <string>calculating...</string>\n-             </property>\n-            </widget>\n-           </item>\n-           <item row=\"5\" column=\"0\">\n             <widget class=\"QLabel\" name=\"labelEstimatedTimeLeft\">\n              <property name=\"font\">\n               <font>\n@@ -313,7 +296,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n              </property>\n             </widget>\n            </item>\n-           <item row=\"5\" column=\"1\">\n+           <item row=\"4\" column=\"1\">\n             <widget class=\"QLabel\" name=\"expectedTimeLeft\">\n              <property name=\"text\">\n               <string>calculating...</string>"
      },
      {
        "sha": "dad8670a8807f9a8c0a50c8000a6011378b86533",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 12,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=76a5f1bf38a2f6376d1c9a8cc6e9f7964e836c62",
        "patch": "@@ -78,17 +78,16 @@ void ModalOverlay::setKnownBestHeight(int count, const QDateTime& blockDate)\n \n void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVerificationProgress)\n {\n-    QDateTime currentDate = QDateTime::currentDateTime();\n+    qint64 currentMSecs = QDateTime::currentMSecsSinceEpoch();\n \n     // keep a vector of samples of verification progress at height\n-    blockProcessTime.push_front(qMakePair(currentDate.currentMSecsSinceEpoch(), nVerificationProgress));\n+    blockProcessTime.push_front(qMakePair(currentMSecs, nVerificationProgress));\n \n     // show progress speed if we have more then one sample\n     if (blockProcessTime.size() >= 2)\n     {\n         double progressStart = blockProcessTime[0].second;\n         double progressDelta = 0;\n-        double progressPerHour = 0;\n         qint64 timeDelta = 0;\n         qint64 remainingMSecs = 0;\n         double remainingProgress = 1.0 - nVerificationProgress;\n@@ -97,22 +96,17 @@ void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVeri\n             QPair<qint64, double> sample = blockProcessTime[i];\n \n             // take first sample after 500 seconds or last available one\n-            if (sample.first < (currentDate.currentMSecsSinceEpoch() - 500*1000) || i == blockProcessTime.size()-1)\n+            if (sample.first < (currentMSecs - 500 * 1000) || i == blockProcessTime.size() - 1)\n             {\n                 progressDelta = progressStart-sample.second;\n                 timeDelta = blockProcessTime[0].first - sample.first;\n-                progressPerHour = progressDelta/(double)timeDelta*1000*3600;\n                 remainingMSecs = remainingProgress / progressDelta * timeDelta;\n                 break;\n             }\n         }\n-        // show progress increase per hour\n-        ui->progressIncreasePerH->setText(QString::number(progressPerHour*100, 'f', 2)+\"%\");\n-\n         // show expected remaining time\n         ui->expectedTimeLeft->setText(GUIUtil::formateNiceTimeOffset(remainingMSecs/1000.0));\n \n-        // keep maximal 5000 samples\n         static const int MAX_SAMPLES = 5000;\n         if (blockProcessTime.count() > MAX_SAMPLES)\n             blockProcessTime.remove(MAX_SAMPLES, blockProcessTime.count()-MAX_SAMPLES);\n@@ -126,10 +120,13 @@ void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVeri\n     ui->progressBar->setValue(nVerificationProgress*100);\n \n     // show remaining number of blocks\n-    if (bestBlockHeight > 0)\n-        ui->numberOfBlocksLeft->setText(QString::number(bestBlockHeight-count));\n-    else\n+    if (bestBlockHeight > 0) {\n+        ui->numberOfBlocksLeft->setText(QString::number(bestBlockHeight - count));\n+    } else {\n+        // estimate based on nPowTargetSpacing\n+        ui->numberOfBlocksLeft->setText(\"~\" + QString::number((currentMSecs - blockDate.toMSecsSinceEpoch()) / 1000 / 600));\n         ui->expectedTimeLeft->setText(tr(\"Unknown. Syncing Headers...\"));\n+    }\n }\n \n void ModalOverlay::showHide(bool hide, bool userRequested)"
      }
    ]
  }
]