[
  {
    "sha": "faaa7db25e94cf02818865e3d27707d6acaa1e25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWFhN2RiMjVlOTRjZjAyODE4ODY1ZTNkMjc3MDdkNmFjYWExZTI1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-11-08T21:28:17Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-11-13T20:27:10Z"
      },
      "message": "qa: Only allow disconnecting all NodeConns",
      "tree": {
        "sha": "9756d0680de4fc9bda2394a24ff28fc3f09e1401",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9756d0680de4fc9bda2394a24ff28fc3f09e1401"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faaa7db25e94cf02818865e3d27707d6acaa1e25",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faaa7db25e94cf02818865e3d27707d6acaa1e25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faaa7db25e94cf02818865e3d27707d6acaa1e25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faaa7db25e94cf02818865e3d27707d6acaa1e25/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7388e93d3dd91a90239aedac4ec58404f103a2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7388e93d3dd91a90239aedac4ec58404f103a2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7388e93d3dd91a90239aedac4ec58404f103a2e"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 13,
      "deletions": 14
    },
    "files": [
      {
        "sha": "88e2ff2e1614c5cf6d84fe5244d4bc35e1b9f273",
        "filename": "test/functional/maxuploadtarget.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faaa7db25e94cf02818865e3d27707d6acaa1e25/test/functional/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faaa7db25e94cf02818865e3d27707d6acaa1e25/test/functional/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/maxuploadtarget.py?ref=faaa7db25e94cf02818865e3d27707d6acaa1e25",
        "patch": "@@ -54,7 +54,7 @@ def run_test(self):\n         # p2p_conns[2] will test resetting the counters\n         p2p_conns = []\n \n-        for i in range(3):\n+        for _ in range(3):\n             p2p_conns.append(self.nodes[0].add_p2p_connection(TestNode()))\n \n         NetworkThread().start() # Start up network handling in another thread\n@@ -139,8 +139,7 @@ def run_test(self):\n \n         self.log.info(\"Peer 2 able to download old block\")\n \n-        for i in range(3):\n-            self.nodes[0].disconnect_p2p()\n+        self.nodes[0].disconnect_p2ps()\n \n         #stop and start node 0 with 1MB maxuploadtarget, whitelist 127.0.0.1\n         self.log.info(\"Restarting nodes with -whitelist=127.0.0.1\")"
      },
      {
        "sha": "ca0e0080a1e36ea8859a678257382a29f9fb4f00",
        "filename": "test/functional/p2p-acceptblock.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faaa7db25e94cf02818865e3d27707d6acaa1e25/test/functional/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faaa7db25e94cf02818865e3d27707d6acaa1e25/test/functional/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-acceptblock.py?ref=faaa7db25e94cf02818865e3d27707d6acaa1e25",
        "patch": "@@ -206,7 +206,7 @@ def run_test(self):\n         # The node should have requested the blocks at some point, so\n         # disconnect/reconnect first\n \n-        self.nodes[0].disconnect_p2p()\n+        self.nodes[0].disconnect_p2ps()\n         test_node = self.nodes[0].add_p2p_connection(NodeConnCB())\n \n         test_node.wait_for_verack()\n@@ -291,7 +291,7 @@ def run_test(self):\n         except AssertionError:\n             test_node.wait_for_disconnect()\n \n-            self.nodes[0].disconnect_p2p()\n+            self.nodes[0].disconnect_p2ps()\n             test_node = self.nodes[0].add_p2p_connection(NodeConnCB())\n \n             NetworkThread().start() # Start up network handling in another thread"
      },
      {
        "sha": "0a03095b1a86952e3dd2a794c431013a1f5eeb1b",
        "filename": "test/functional/p2p-leaktests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faaa7db25e94cf02818865e3d27707d6acaa1e25/test/functional/p2p-leaktests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faaa7db25e94cf02818865e3d27707d6acaa1e25/test/functional/p2p-leaktests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-leaktests.py?ref=faaa7db25e94cf02818865e3d27707d6acaa1e25",
        "patch": "@@ -126,8 +126,7 @@ def run_test(self):\n         assert not unsupported_service_bit5_node.connected\n         assert not unsupported_service_bit7_node.connected\n \n-        for _ in range(5):\n-            self.nodes[0].disconnect_p2p()\n+        self.nodes[0].disconnect_p2ps()\n \n         # Wait until all connections are closed\n         wait_until(lambda: len(self.nodes[0].getpeerinfo()) == 0)"
      },
      {
        "sha": "73018ee5da79431a66de918ce4c8d434e4fabaff",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faaa7db25e94cf02818865e3d27707d6acaa1e25/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faaa7db25e94cf02818865e3d27707d6acaa1e25/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=faaa7db25e94cf02818865e3d27707d6acaa1e25",
        "patch": "@@ -182,13 +182,14 @@ def p2p(self):\n         assert self.p2ps, \"No p2p connection\"\n         return self.p2ps[0]\n \n-    def disconnect_p2p(self, index=0):\n-        \"\"\"Close the p2p connection to the node.\"\"\"\n-        # Connection could have already been closed by other end. Calling disconnect_p2p()\n-        # on an already disconnected p2p connection is not an error.\n-        if self.p2ps[index].connection is not None:\n-            self.p2ps[index].connection.disconnect_node()\n-        del self.p2ps[index]\n+    def disconnect_p2ps(self):\n+        \"\"\"Close all p2p connections to the node.\"\"\"\n+        for p in self.p2ps:\n+            # Connection could have already been closed by other end.\n+            if p.connection is not None:\n+                p.connection.disconnect_node()\n+        self.p2ps = []\n+\n \n class TestNodeCLI():\n     \"\"\"Interface to bitcoin-cli for an individual node\"\"\""
      }
    ]
  }
]