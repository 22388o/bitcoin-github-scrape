[
  {
    "sha": "f635269cd154eb69ad67a6fb004ed360b6112e27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjM1MjY5Y2QxNTRlYjY5YWQ2N2E2ZmIwMDRlZDM2MGI2MTEyZTI3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-30T22:47:08Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T04:04:14Z"
      },
      "message": "tests: enable alertnotify test for Windows\n\nThe semantics of \"echo\" are different there and they change the resulting text,\nbut they're still correct and predictable.",
      "tree": {
        "sha": "99994c1492950212a0ca1aaa88a6f9e73df0ff17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99994c1492950212a0ca1aaa88a6f9e73df0ff17"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f635269cd154eb69ad67a6fb004ed360b6112e27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f635269cd154eb69ad67a6fb004ed360b6112e27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f635269cd154eb69ad67a6fb004ed360b6112e27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f635269cd154eb69ad67a6fb004ed360b6112e27/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d2396c9c41cbd5b8746f48f41180697f58b0681",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d2396c9c41cbd5b8746f48f41180697f58b0681",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d2396c9c41cbd5b8746f48f41180697f58b0681"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4869ba52accebe1ed0352f61e69875b61d9392e2",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f635269cd154eb69ad67a6fb004ed360b6112e27/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f635269cd154eb69ad67a6fb004ed360b6112e27/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=f635269cd154eb69ad67a6fb004ed360b6112e27",
        "patch": "@@ -154,9 +154,6 @@ BOOST_AUTO_TEST_CASE(AlertApplies)\n }\n \n \n-// This uses sh 'echo' to test the -alertnotify function, writing to a\n-// /tmp file. So skip it on Windows:\n-#ifndef WIN32\n BOOST_AUTO_TEST_CASE(AlertNotify)\n {\n     SetMockTime(11);\n@@ -171,15 +168,24 @@ BOOST_AUTO_TEST_CASE(AlertNotify)\n \n     std::vector<std::string> r = read_lines(temp);\n     BOOST_CHECK_EQUAL(r.size(), 4u);\n+\n+// Windows built-in echo semantics are different than posixy shells. Quotes and\n+// whitespace are printed literally.\n+\n+#ifndef WIN32\n     BOOST_CHECK_EQUAL(r[0], \"Alert 1\");\n     BOOST_CHECK_EQUAL(r[1], \"Alert 2, cancels 1\");\n     BOOST_CHECK_EQUAL(r[2], \"Alert 2, cancels 1\");\n     BOOST_CHECK_EQUAL(r[3], \"Evil Alert; /bin/ls; echo \"); // single-quotes should be removed\n-\n+#else\n+    BOOST_CHECK_EQUAL(r[0], \"'Alert 1' \");\n+    BOOST_CHECK_EQUAL(r[1], \"'Alert 2, cancels 1' \");\n+    BOOST_CHECK_EQUAL(r[2], \"'Alert 2, cancels 1' \");\n+    BOOST_CHECK_EQUAL(r[3], \"'Evil Alert; /bin/ls; echo ' \");\n+#endif\n     boost::filesystem::remove(temp);\n \n     SetMockTime(0);\n }\n-#endif\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "7a41614aa27b9d3855b6145831cb4ad958f78823",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTQxNjE0YWEyN2I5ZDM4NTViNjE0NTgzMWNiNGFkOTU4Zjc4ODIz",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-30T22:59:58Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T04:05:55Z"
      },
      "message": "tests: allow rpc-tests to get filenames for bitcoind and bitcoin-cli from the environment\n\nThis will allow for windows tests to run with bitcoind.exe and bitcoin-cli.exe",
      "tree": {
        "sha": "0badd7331426f3c776b39ae6d2f2f4a1786d73a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0badd7331426f3c776b39ae6d2f2f4a1786d73a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a41614aa27b9d3855b6145831cb4ad958f78823",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a41614aa27b9d3855b6145831cb4ad958f78823",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a41614aa27b9d3855b6145831cb4ad958f78823",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a41614aa27b9d3855b6145831cb4ad958f78823/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f635269cd154eb69ad67a6fb004ed360b6112e27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f635269cd154eb69ad67a6fb004ed360b6112e27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f635269cd154eb69ad67a6fb004ed360b6112e27"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 19,
      "deletions": 14
    },
    "files": [
      {
        "sha": "a112244c744e61cbd3ba7d540f278cdb6ad2d757",
        "filename": "qa/rpc-tests/conflictedbalance.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/conflictedbalance.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/conflictedbalance.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/conflictedbalance.sh?ref=7a41614aa27b9d3855b6145831cb4ad958f78823",
        "patch": "@@ -18,13 +18,14 @@\n if [ $# -lt 1 ]; then\n         echo \"Usage: $0 path_to_binaries\"\n         echo \"e.g. $0 ../../src\"\n+        echo \"Env vars BITCOIND and BITCOINCLI may be used to specify the exact binaries used\"\n         exit 1\n fi\n \n set -f\n \n-BITCOIND=${1}/bitcoind\n-CLI=${1}/bitcoin-cli\n+BITCOIND=${BITCOIND:-${1}/bitcoind}\n+CLI=${BITCOINCLI:-${1}/bitcoin-cli}\n \n DIR=\"${BASH_SOURCE%/*}\"\n SENDANDWAIT=\"${DIR}/send.sh\""
      },
      {
        "sha": "1296d54d92d7c6f0bd61aabe285aab9b4d43132b",
        "filename": "qa/rpc-tests/txnmall.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/txnmall.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/txnmall.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txnmall.sh?ref=7a41614aa27b9d3855b6145831cb4ad958f78823",
        "patch": "@@ -8,13 +8,14 @@\n if [ $# -lt 1 ]; then\n         echo \"Usage: $0 path_to_binaries\"\n         echo \"e.g. $0 ../../src\"\n+        echo \"Env vars BITCOIND and BITCOINCLI may be used to specify the exact binaries used\"\n         exit 1\n fi\n \n set -f\n \n-BITCOIND=${1}/bitcoind\n-CLI=${1}/bitcoin-cli\n+BITCOIND=${BITCOIND:-${1}/bitcoind}\n+CLI=${BITCOINCLI:-${1}/bitcoin-cli}\n \n DIR=\"${BASH_SOURCE%/*}\"\n SENDANDWAIT=\"${DIR}/send.sh\""
      },
      {
        "sha": "c895eb1619b88c646520554366de3bc6412753fe",
        "filename": "qa/rpc-tests/util.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.py?ref=7a41614aa27b9d3855b6145831cb4ad958f78823",
        "patch": "@@ -85,11 +85,11 @@ def initialize_chain(test_dir):\n         # Create cache directories, run bitcoinds:\n         for i in range(4):\n             datadir=initialize_datadir(\"cache\", i)\n-            args = [ \"bitcoind\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n+            args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n             if i > 0:\n                 args.append(\"-connect=127.0.0.1:\"+str(p2p_port(0)))\n             bitcoind_processes[i] = subprocess.Popen(args)\n-            subprocess.check_call([ \"bitcoin-cli\", \"-datadir=\"+datadir,\n+            subprocess.check_call([ os.getenv(\"BITCOINCLI\", \"bitcoin-cli\"), \"-datadir=\"+datadir,\n                                     \"-rpcwait\", \"getblockcount\"], stdout=devnull)\n         devnull.close()\n         rpcs = []\n@@ -150,11 +150,11 @@ def start_node(i, dir, extra_args=None, rpchost=None):\n     Start a bitcoind and return RPC connection to it\n     \"\"\"\n     datadir = os.path.join(dir, \"node\"+str(i))\n-    args = [ \"bitcoind\", \"-datadir=\"+datadir, \"-keypool=1\", \"-discover=0\" ]\n+    args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-datadir=\"+datadir, \"-keypool=1\", \"-discover=0\" ]\n     if extra_args is not None: args.extend(extra_args)\n     bitcoind_processes[i] = subprocess.Popen(args)\n     devnull = open(\"/dev/null\", \"w+\")\n-    subprocess.check_call([ \"bitcoin-cli\", \"-datadir=\"+datadir] +\n+    subprocess.check_call([ os.getenv(\"BITCOINCLI\", \"bitcoin-cli\"), \"-datadir=\"+datadir] +\n                           _rpchost_to_args(rpchost)  +\n                           [\"-rpcwait\", \"getblockcount\"], stdout=devnull)\n     devnull.close()"
      },
      {
        "sha": "c9ad0f2a7872c07688405193d2ad883f614c8bbb",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=7a41614aa27b9d3855b6145831cb4ad958f78823",
        "patch": "@@ -8,13 +8,14 @@\n if [ $# -lt 1 ]; then\n         echo \"Usage: $0 path_to_binaries\"\n         echo \"e.g. $0 ../../src\"\n+        echo \"Env vars BITCOIND and BITCOINCLI may be used to specify the exact binaries used\"\n         exit 1\n fi\n \n set -f\n \n-BITCOIND=${1}/bitcoind\n-CLI=${1}/bitcoin-cli\n+BITCOIND=${BITCOIND:-${1}/bitcoind}\n+CLI=${BITCOINCLI:-${1}/bitcoin-cli}\n \n DIR=\"${BASH_SOURCE%/*}\"\n SENDANDWAIT=\"${DIR}/send.sh\""
      },
      {
        "sha": "4af3d97f351d346f4625868a21776a46fa324273",
        "filename": "qa/rpc-tests/walletbackup.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/walletbackup.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/walletbackup.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.sh?ref=7a41614aa27b9d3855b6145831cb4ad958f78823",
        "patch": "@@ -36,11 +36,12 @@\n if [ $# -lt 1 ]; then\n         echo \"Usage: $0 path_to_binaries\"\n         echo \"e.g. $0 ../../src\"\n+        echo \"Env vars BITCOIND and BITCOINCLI may be used to specify the exact binaries used\"\n         exit 1\n fi\n \n-BITCOIND=${1}/bitcoind\n-CLI=${1}/bitcoin-cli\n+BITCOIND=${BITCOIND:-${1}/bitcoind}\n+CLI=${BITCOINCLI:-${1}/bitcoin-cli}\n \n DIR=\"${BASH_SOURCE%/*}\"\n SENDANDWAIT=\"${DIR}/send.sh\""
      },
      {
        "sha": "4312d84e944623fa54af1e48824c808f51b1b2ae",
        "filename": "qa/rpc-tests/zapwallettxes.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/zapwallettxes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a41614aa27b9d3855b6145831cb4ad958f78823/qa/rpc-tests/zapwallettxes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.sh?ref=7a41614aa27b9d3855b6145831cb4ad958f78823",
        "patch": "@@ -8,13 +8,14 @@\n if [ $# -lt 1 ]; then\n         echo \"Usage: $0 path_to_binaries\"\n         echo \"e.g. $0 ../../src\"\n+        echo \"Env vars BITCOIND and BITCOINCLI may be used to specify the exact binaries used\"\n         exit 1\n fi\n \n set -f\n \n-BITCOIND=${1}/bitcoind\n-CLI=${1}/bitcoin-cli\n+BITCOIND=${BITCOIND:-${1}/bitcoind}\n+CLI=${BITCOINCLI:-${1}/bitcoin-cli}\n \n DIR=\"${BASH_SOURCE%/*}\"\n SENDANDWAIT=\"${DIR}/send.sh\""
      }
    ]
  },
  {
    "sha": "5122ea7190f85952ef27153bb1778831efb3e0ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTIyZWE3MTkwZjg1OTUyZWYyNzE1M2JiMTc3ODgzMWVmYjNlMGVj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T03:01:34Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T04:05:55Z"
      },
      "message": "tests: fix forknotify.py on windows\n\nWindows interprets 'foo.txt' as a literal filename while \"foo.txt\" is treated\nas expected.",
      "tree": {
        "sha": "e9cbbe1a1ed3f534f27cf0eac955c3f33cd41cad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9cbbe1a1ed3f534f27cf0eac955c3f33cd41cad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5122ea7190f85952ef27153bb1778831efb3e0ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5122ea7190f85952ef27153bb1778831efb3e0ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5122ea7190f85952ef27153bb1778831efb3e0ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5122ea7190f85952ef27153bb1778831efb3e0ec/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a41614aa27b9d3855b6145831cb4ad958f78823",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a41614aa27b9d3855b6145831cb4ad958f78823",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a41614aa27b9d3855b6145831cb4ad958f78823"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1d2c4a996635659f4748faab308df2adb8ec3f37",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5122ea7190f85952ef27153bb1778831efb3e0ec/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5122ea7190f85952ef27153bb1778831efb3e0ec/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=5122ea7190f85952ef27153bb1778831efb3e0ec",
        "patch": "@@ -23,7 +23,7 @@ def setup_network(self):\n         with open(self.alert_filename, 'w') as f:\n             pass  # Just open then close to create zero-length file\n         self.nodes.append(start_node(0, self.options.tmpdir,\n-                            [\"-blockversion=2\", \"-alertnotify=echo %s >> '\" + self.alert_filename + \"'\"]))\n+                            [\"-blockversion=2\", \"-alertnotify=echo %s >> \\\"\" + self.alert_filename + \"\\\"\"]))\n         # Node1 mines block.version=211 blocks\n         self.nodes.append(start_node(1, self.options.tmpdir,\n                                 [\"-blockversion=211\"]))"
      }
    ]
  },
  {
    "sha": "fa7f8cdc1ac92047cd876d750851cf4230fc8295",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTdmOGNkYzFhYzkyMDQ3Y2Q4NzZkNzUwODUxY2Y0MjMwZmM4Mjk1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T02:29:35Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T04:05:55Z"
      },
      "message": "tests: remove old pull-tester scripts\n\nThey're unused since the switch to Travis",
      "tree": {
        "sha": "44e414c691727539770d6156cbdf42cc08290c9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44e414c691727539770d6156cbdf42cc08290c9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7f8cdc1ac92047cd876d750851cf4230fc8295",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7f8cdc1ac92047cd876d750851cf4230fc8295",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7f8cdc1ac92047cd876d750851cf4230fc8295",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7f8cdc1ac92047cd876d750851cf4230fc8295/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5122ea7190f85952ef27153bb1778831efb3e0ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5122ea7190f85952ef27153bb1778831efb3e0ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5122ea7190f85952ef27153bb1778831efb3e0ec"
      }
    ],
    "stats": {
      "total": 217,
      "additions": 1,
      "deletions": 216
    },
    "files": [
      {
        "sha": "c6a045150e3e2773bb6770ac05bd91627c0c7fa0",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7f8cdc1ac92047cd876d750851cf4230fc8295/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7f8cdc1ac92047cd876d750851cf4230fc8295/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=fa7f8cdc1ac92047cd876d750851cf4230fc8295",
        "patch": "@@ -172,7 +172,7 @@ check-local:\n \t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n endif\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/pull-tester.sh qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      },
      {
        "sha": "66688dd4b5e570716fd643e2a1c4242ef6c7d0ad",
        "filename": "qa/pull-tester/pull-tester.py",
        "status": "removed",
        "additions": 0,
        "deletions": 193,
        "changes": 193,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5122ea7190f85952ef27153bb1778831efb3e0ec/qa/pull-tester/pull-tester.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5122ea7190f85952ef27153bb1778831efb3e0ec/qa/pull-tester/pull-tester.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/pull-tester.py?ref=5122ea7190f85952ef27153bb1778831efb3e0ec",
        "patch": "@@ -1,193 +0,0 @@\n-#!/usr/bin/python\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-import json\n-from urllib import urlopen\n-import requests\n-import getpass\n-from string import Template\n-import sys\n-import os\n-import subprocess\n-\n-class RunError(Exception):\n-    def __init__(self, value):\n-        self.value = value\n-    def __str__(self):\n-        return repr(self.value)\n-\n-def run(command, **kwargs):\n-    fail_hard = kwargs.pop(\"fail_hard\", True)\n-    # output to /dev/null by default:\n-    kwargs.setdefault(\"stdout\", open('/dev/null', 'w'))\n-    kwargs.setdefault(\"stderr\", open('/dev/null', 'w'))\n-    command = Template(command).substitute(os.environ)\n-    if \"TRACE\" in os.environ:\n-        if 'cwd' in kwargs:\n-            print(\"[cwd=%s] %s\"%(kwargs['cwd'], command))\n-        else: print(command)\n-    try:\n-        process = subprocess.Popen(command.split(' '), **kwargs)\n-        process.wait()\n-    except KeyboardInterrupt:\n-        process.terminate()\n-        raise\n-    if process.returncode != 0 and fail_hard:\n-        raise RunError(\"Failed: \"+command)\n-    return process.returncode\n-\n-def checkout_pull(clone_url, commit, out):\n-    # Init\n-    build_dir=os.environ[\"BUILD_DIR\"]\n-    run(\"umount ${CHROOT_COPY}/proc\", fail_hard=False)\n-    run(\"rsync --delete -apv ${CHROOT_MASTER}/ ${CHROOT_COPY}\")\n-    run(\"rm -rf ${CHROOT_COPY}${SCRIPTS_DIR}\")\n-    run(\"cp -a ${SCRIPTS_DIR} ${CHROOT_COPY}${SCRIPTS_DIR}\")\n-    # Merge onto upstream/master\n-    run(\"rm -rf ${BUILD_DIR}\")\n-    run(\"mkdir -p ${BUILD_DIR}\")\n-    run(\"git clone ${CLONE_URL} ${BUILD_DIR}\")\n-    run(\"git remote add pull \"+clone_url, cwd=build_dir, stdout=out, stderr=out)\n-    run(\"git fetch pull\", cwd=build_dir, stdout=out, stderr=out)\n-    if run(\"git merge \"+ commit, fail_hard=False, cwd=build_dir, stdout=out, stderr=out) != 0:\n-        return False\n-    run(\"chown -R ${BUILD_USER}:${BUILD_GROUP} ${BUILD_DIR}\", stdout=out, stderr=out)\n-    run(\"mount --bind /proc ${CHROOT_COPY}/proc\")\n-    return True\n-\n-def commentOn(commentUrl, success, inMerge, needTests, linkUrl):\n-    common_message = \"\"\"\n-This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\n-Contact BlueMatt on freenode if something looks broken.\"\"\"\n-\n-    # Remove old BitcoinPullTester comments (I'm being lazy and not paginating here)\n-    recentcomments = requests.get(commentUrl+\"?sort=created&direction=desc\",\n-                                  auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"])).json\n-    for comment in recentcomments:\n-        if comment[\"user\"][\"login\"] == os.environ[\"GITHUB_USER\"] and common_message in comment[\"body\"]:\n-            requests.delete(comment[\"url\"],\n-                                  auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"]))\n-\n-    if success == True:\n-        if needTests:\n-            message = \"Automatic sanity-testing: PLEASE ADD TEST-CASES, though technically passed. See \" + linkUrl + \" for binaries and test log.\"\n-        else:\n-            message = \"Automatic sanity-testing: PASSED, see \" + linkUrl + \" for binaries and test log.\"\n-\n-        post_data = { \"body\" : message + common_message}\n-    elif inMerge:\n-        post_data = { \"body\" : \"Automatic sanity-testing: FAILED MERGE, see \" + linkUrl + \" for test log.\" + \"\"\"\n-\n-This pull does not merge cleanly onto current master\"\"\" + common_message}\n-    else:\n-        post_data = { \"body\" : \"Automatic sanity-testing: FAILED BUILD/TEST, see \" + linkUrl + \" for binaries and test log.\" + \"\"\"\n-\n-This could happen for one of several reasons:\n-1. It chanages changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in qa/pull-tester)\n-2. It adds/modifies tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time\n-3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)\n-4. The test suite fails on either Linux i386 or Win32\n-5. The block test-cases failed (lookup the first bNN identifier which failed in https://github.com/TheBlueMatt/test-scripts/blob/master/FullBlockTestGenerator.java)\n-\n-If you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here.\n-\"\"\" + common_message}\n-\n-    resp = requests.post(commentUrl, json.dumps(post_data), auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"]))\n-\n-def testpull(number, comment_url, clone_url, commit):\n-    print(\"Testing pull %d: %s : %s\"%(number, clone_url,commit))\n-\n-    dir = os.environ[\"RESULTS_DIR\"] + \"/\" + commit + \"/\"\n-    print(\" ouput to %s\"%dir)\n-    if os.path.exists(dir):\n-        os.system(\"rm -r \" + dir)\n-    os.makedirs(dir)\n-    currentdir = os.environ[\"RESULTS_DIR\"] + \"/current\"\n-    os.system(\"rm -r \"+currentdir)\n-    os.system(\"ln -s \" + dir + \" \" + currentdir)\n-    out = open(dir + \"test.log\", 'w+')\n-\n-    resultsurl = os.environ[\"RESULTS_URL\"] + commit\n-    checkedout = checkout_pull(clone_url, commit, out)\n-    if checkedout != True:\n-        print(\"Failed to test pull - sending comment to: \" + comment_url)\n-        commentOn(comment_url, False, True, False, resultsurl)\n-        open(os.environ[\"TESTED_DB\"], \"a\").write(commit + \"\\n\")\n-        return\n-\n-    run(\"rm -rf ${CHROOT_COPY}/${OUT_DIR}\", fail_hard=False);\n-    run(\"mkdir -p ${CHROOT_COPY}/${OUT_DIR}\", fail_hard=False);\n-    run(\"chown -R ${BUILD_USER}:${BUILD_GROUP} ${CHROOT_COPY}/${OUT_DIR}\", fail_hard=False)\n-\n-    script = os.environ[\"BUILD_PATH\"]+\"/qa/pull-tester/pull-tester.sh\"\n-    script += \" ${BUILD_PATH} ${MINGW_DEPS_DIR} ${SCRIPTS_DIR}/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar 0 6 ${OUT_DIR}\"\n-    returncode = run(\"chroot ${CHROOT_COPY} sudo -u ${BUILD_USER} -H timeout ${TEST_TIMEOUT} \"+script,\n-                     fail_hard=False, stdout=out, stderr=out)\n-\n-    run(\"mv ${CHROOT_COPY}/${OUT_DIR} \" + dir)\n-    run(\"mv ${BUILD_DIR} \" + dir)\n-\n-    if returncode == 42:\n-        print(\"Successfully tested pull (needs tests) - sending comment to: \" + comment_url)\n-        commentOn(comment_url, True, False, True, resultsurl)\n-    elif returncode != 0:\n-        print(\"Failed to test pull - sending comment to: \" + comment_url)\n-        commentOn(comment_url, False, False, False, resultsurl)\n-    else:\n-        print(\"Successfully tested pull - sending comment to: \" + comment_url)\n-        commentOn(comment_url, True, False, False, resultsurl)\n-    open(os.environ[\"TESTED_DB\"], \"a\").write(commit + \"\\n\")\n-\n-def environ_default(setting, value):\n-    if not setting in os.environ:\n-        os.environ[setting] = value\n-\n-if getpass.getuser() != \"root\":\n-\tprint(\"Run me as root!\")\n-\tsys.exit(1)\n-\n-if \"GITHUB_USER\" not in os.environ or \"GITHUB_AUTH_TOKEN\" not in os.environ:\n-    print(\"GITHUB_USER and/or GITHUB_AUTH_TOKEN environment variables not set\")\n-    sys.exit(1)\n-\n-environ_default(\"CLONE_URL\", \"https://github.com/bitcoin/bitcoin.git\")\n-environ_default(\"MINGW_DEPS_DIR\", \"/mnt/w32deps\")\n-environ_default(\"SCRIPTS_DIR\", \"/mnt/test-scripts\")\n-environ_default(\"CHROOT_COPY\", \"/mnt/chroot-tmp\")\n-environ_default(\"CHROOT_MASTER\", \"/mnt/chroot\")\n-environ_default(\"OUT_DIR\", \"/mnt/out\")\n-environ_default(\"BUILD_PATH\", \"/mnt/bitcoin\")\n-os.environ[\"BUILD_DIR\"] = os.environ[\"CHROOT_COPY\"] + os.environ[\"BUILD_PATH\"]\n-environ_default(\"RESULTS_DIR\", \"/mnt/www/pull-tester\")\n-environ_default(\"RESULTS_URL\", \"http://jenkins.bluematt.me/pull-tester/\")\n-environ_default(\"GITHUB_REPO\", \"bitcoin/bitcoin\")\n-environ_default(\"TESTED_DB\", \"/mnt/commits-tested.txt\")\n-environ_default(\"BUILD_USER\", \"matt\")\n-environ_default(\"BUILD_GROUP\", \"matt\")\n-environ_default(\"TEST_TIMEOUT\", str(60*60*2))\n-\n-print(\"Optional usage: pull-tester.py 2112\")\n-\n-f = open(os.environ[\"TESTED_DB\"])\n-tested = set( line.rstrip() for line in f.readlines() )\n-f.close()\n-\n-if len(sys.argv) > 1:\n-    pull = requests.get(\"https://api.github.com/repos/\"+os.environ[\"GITHUB_REPO\"]+\"/pulls/\"+sys.argv[1],\n-                        auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"])).json\n-    testpull(pull[\"number\"], pull[\"_links\"][\"comments\"][\"href\"],\n-             pull[\"head\"][\"repo\"][\"clone_url\"], pull[\"head\"][\"sha\"])\n-\n-else:\n-    for page in range(1,100):\n-        result = requests.get(\"https://api.github.com/repos/\"+os.environ[\"GITHUB_REPO\"]+\"/pulls?state=open&page=%d\"%(page,),\n-                              auth=(os.environ['GITHUB_USER'], os.environ[\"GITHUB_AUTH_TOKEN\"])).json\n-        if len(result) == 0: break;\n-        for pull in result:\n-            if pull[\"head\"][\"sha\"] in tested:\n-                print(\"Pull %d already tested\"%(pull[\"number\"],))\n-                continue\n-            testpull(pull[\"number\"], pull[\"_links\"][\"comments\"][\"href\"],\n-                     pull[\"head\"][\"repo\"][\"clone_url\"], pull[\"head\"][\"sha\"])"
      },
      {
        "sha": "3fe4a05c765ef6ebef1a35a91a38d4bd50fc68e4",
        "filename": "qa/pull-tester/pull-tester.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5122ea7190f85952ef27153bb1778831efb3e0ec/qa/pull-tester/pull-tester.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5122ea7190f85952ef27153bb1778831efb3e0ec/qa/pull-tester/pull-tester.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/pull-tester.sh?ref=5122ea7190f85952ef27153bb1778831efb3e0ec",
        "patch": "@@ -1,22 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Helper script for pull-tester.\n-#Param 1: path to bitcoin srcroot\n-#Param ...: arguments for build-test.sh\n-\n-if [ $# -lt 1 ]; then\n-  echo \"usage: $0 [bitcoin srcroot] build-test arguments...\"\n-fi\n-\n-killall -q bitcoin-cli\n-killall -q bitcoind\n-\n-cd $1\n-shift\n-\n-./autogen.sh\n-./configure\n-./qa/pull-tester/build-tests.sh \"$@\""
      }
    ]
  },
  {
    "sha": "7667850dbfac0ced6eb2711d922c263b65ffaeee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjY3ODUwZGJmYWMwY2VkNmViMjcxMWQ5MjJjMjYzYjY1ZmZhZWVl",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T02:58:13Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T04:05:55Z"
      },
      "message": "tests: replace the old (unused since Travis) tests with new rpc test scripts",
      "tree": {
        "sha": "9dcf60c45bfc3963dcddd5a2829e1514dd3aaaa0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9dcf60c45bfc3963dcddd5a2829e1514dd3aaaa0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7667850dbfac0ced6eb2711d922c263b65ffaeee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7667850dbfac0ced6eb2711d922c263b65ffaeee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7667850dbfac0ced6eb2711d922c263b65ffaeee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7667850dbfac0ced6eb2711d922c263b65ffaeee/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa7f8cdc1ac92047cd876d750851cf4230fc8295",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7f8cdc1ac92047cd876d750851cf4230fc8295",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7f8cdc1ac92047cd876d750851cf4230fc8295"
      }
    ],
    "stats": {
      "total": 158,
      "additions": 53,
      "deletions": 105
    },
    "files": [
      {
        "sha": "c97432df920ed7d5c513d00a3b23ccc8c541e386",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7667850dbfac0ced6eb2711d922c263b65ffaeee/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7667850dbfac0ced6eb2711d922c263b65ffaeee/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=7667850dbfac0ced6eb2711d922c263b65ffaeee",
        "patch": "@@ -99,7 +99,9 @@ linux-coverage-build\n linux-build\n win32-build\n qa/pull-tester/run-bitcoind-for-test.sh\n-qa/pull-tester/build-tests.sh\n+qa/pull-tester/tests-config.sh\n+qa/pull-tester/cache/*\n+qa/pull-tester/test.*/*\n \n !src/leveldb*/Makefile\n "
      },
      {
        "sha": "6bc004431346ed9074d679f6c674e595de901bf8",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7667850dbfac0ced6eb2711d922c263b65ffaeee/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7667850dbfac0ced6eb2711d922c263b65ffaeee/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=7667850dbfac0ced6eb2711d922c263b65ffaeee",
        "patch": "@@ -172,7 +172,7 @@ check-local:\n \t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n endif\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/pull-tester/run-bitcoin-cli qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      },
      {
        "sha": "17efd987acc23474cfbe4410a777266dde5818e3",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7667850dbfac0ced6eb2711d922c263b65ffaeee/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7667850dbfac0ced6eb2711d922c263b65ffaeee/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=7667850dbfac0ced6eb2711d922c263b65ffaeee",
        "patch": "@@ -824,7 +824,7 @@ AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/build-tests.sh],[chmod +x qa/pull-tester/build-tests.sh])\n+AC_CONFIG_FILES([qa/pull-tester/tests-config.sh],[chmod +x qa/pull-tester/tests-config.sh])\n AC_OUTPUT\n \n dnl Taken from https://wiki.debian.org/RpathIssue"
      },
      {
        "sha": "f5c5f0bf708774cee8d574df2a9768a70c991246",
        "filename": "qa/pull-tester/build-tests.sh.in",
        "status": "removed",
        "additions": 0,
        "deletions": 102,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7f8cdc1ac92047cd876d750851cf4230fc8295/qa/pull-tester/build-tests.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7f8cdc1ac92047cd876d750851cf4230fc8295/qa/pull-tester/build-tests.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/build-tests.sh.in?ref=fa7f8cdc1ac92047cd876d750851cf4230fc8295",
        "patch": "@@ -1,102 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Param1: The prefix to mingw staging\n-# Param2: Path to java comparison tool\n-# Param3: Number of make jobs. Defaults to 1.\n-\n-# Exit immediately if anything fails:\n-set -e\n-set -o xtrace\n-\n-MINGWPREFIX=$1\n-JAVA_COMPARISON_TOOL=$2\n-RUN_EXPENSIVE_TESTS=$3\n-JOBS=${4-1}\n-OUT_DIR=${5-}\n-\n-if [ $# -lt 2 ]; then\n-  echo \"Usage: $0 [mingw-prefix] [java-comparison-tool] <make jobs> <save output dir>\"\n-  exit 1\n-fi\n-\n-DISTDIR=@PACKAGE@-@VERSION@\n-\n-# Cross-compile for windows first (breaking the mingw/windows build is most common)\n-cd @abs_top_srcdir@\n-make distdir\n-mkdir -p win32-build\n-rsync -av $DISTDIR/ win32-build/\n-rm -r $DISTDIR\n-cd win32-build\n-\n-if [ $RUN_EXPENSIVE_TESTS = 1 ]; then\n-  ./configure --disable-silent-rules --disable-ccache --prefix=$MINGWPREFIX --host=i586-mingw32msvc --with-qt-bindir=$MINGWPREFIX/host/bin --with-qt-plugindir=$MINGWPREFIX/plugins --with-qt-incdir=$MINGWPREFIX/include --with-boost=$MINGWPREFIX --with-protoc-bindir=$MINGWPREFIX/host/bin CPPFLAGS=-I$MINGWPREFIX/include LDFLAGS=-L$MINGWPREFIX/lib --with-comparison-tool=\"$JAVA_COMPARISON_TOOL\"\n-else\n-  ./configure --disable-silent-rules --disable-ccache --prefix=$MINGWPREFIX --host=i586-mingw32msvc --with-qt-bindir=$MINGWPREFIX/host/bin --with-qt-plugindir=$MINGWPREFIX/plugins --with-qt-incdir=$MINGWPREFIX/include --with-boost=$MINGWPREFIX --with-protoc-bindir=$MINGWPREFIX/host/bin CPPFLAGS=-I$MINGWPREFIX/include LDFLAGS=-L$MINGWPREFIX/lib\n-fi\n-make -j$JOBS\n-\n-# And compile for Linux:\n-cd @abs_top_srcdir@\n-make distdir\n-mkdir -p linux-build\n-rsync -av $DISTDIR/ linux-build/\n-rm -r $DISTDIR\n-cd linux-build\n-if [ $RUN_EXPENSIVE_TESTS = 1 ]; then\n-  ./configure --disable-silent-rules --disable-ccache --with-comparison-tool=\"$JAVA_COMPARISON_TOOL\" --enable-comparison-tool-reorg-tests\n-else\n-  ./configure --disable-silent-rules --disable-ccache --with-comparison-tool=\"$JAVA_COMPARISON_TOOL\"\n-fi\n-make -j$JOBS\n-\n-# link interesting binaries to parent out/ directory, if it exists. Do this before\n-# running unit tests (we want bad binaries to be easy to find)\n-if [ -d \"$OUT_DIR\" -a -w \"$OUT_DIR\" ]; then\n-  set +e\n-  # Windows:\n-  cp @abs_top_srcdir@/win32-build/src/bitcoind.exe $OUT_DIR/bitcoind.exe\n-  cp @abs_top_srcdir@/win32-build/src/test/test_bitcoin.exe $OUT_DIR/test_bitcoin.exe\n-  cp @abs_top_srcdir@/win32-build/src/qt/bitcoind-qt.exe $OUT_DIR/bitcoin-qt.exe\n-  # Linux:\n-  cp @abs_top_srcdir@/linux-build/src/bitcoind $OUT_DIR/bitcoind\n-  cp @abs_top_srcdir@/linux-build/src/test/test_bitcoin $OUT_DIR/test_bitcoin\n-  cp @abs_top_srcdir@/linux-build/src/qt/bitcoind-qt $OUT_DIR/bitcoin-qt\n-  set -e\n-fi\n-\n-# Run unit tests and blockchain-tester on Linux:\n-cd @abs_top_srcdir@/linux-build\n-make check\n-\n-# Run RPC integration test on Linux:\n-@abs_top_srcdir@/qa/rpc-tests/wallet.sh @abs_top_srcdir@/linux-build/src\n-@abs_top_srcdir@/qa/rpc-tests/listtransactions.py --srcdir @abs_top_srcdir@/linux-build/src\n-@abs_top_srcdir@/qa/rpc-tests/forknotify.py --srcdir @abs_top_srcdir@/linux-build/src\n-# Clean up cache/ directory that the python regression tests create\n-rm -rf cache\n-\n-if [ $RUN_EXPENSIVE_TESTS = 1 ]; then\n-  # Run unit tests and blockchain-tester on Windows:\n-  cd @abs_top_srcdir@/win32-build\n-  make check\n-fi\n-\n-# Clean up builds (pull-tester machine doesn't have infinite disk space)\n-cd @abs_top_srcdir@/linux-build\n-make clean\n-cd @abs_top_srcdir@/win32-build\n-make clean\n-\n-# TODO: Fix code coverage builds on pull-tester machine\n-# # Test code coverage\n-# cd @abs_top_srcdir@\n-# make distdir\n-# mv $DISTDIR linux-coverage-build\n-# cd linux-coverage-build\n-# ./configure --enable-lcov --disable-silent-rules --disable-ccache --with-comparison-tool=\"$JAVA_COMPARISON_TOOL\"\n-# make -j$JOBS\n-# make cov"
      },
      {
        "sha": "f07e3c6d9dd71c2bf68f2ef1e7ecaba601aa166f",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7667850dbfac0ced6eb2711d922c263b65ffaeee/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7667850dbfac0ced6eb2711d922c263b65ffaeee/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=7667850dbfac0ced6eb2711d922c263b65ffaeee",
        "patch": "@@ -0,0 +1,19 @@\n+#!/bin/bash\n+set -e\n+\n+CURDIR=$(cd $(dirname \"$0\"); pwd)\n+# Get BUILDDIR and REAL_BITCOIND\n+. \"${CURDIR}/tests-config.sh\"\n+\n+export BITCOINCLI=${BUILDDIR}/qa/pull-tester/run-bitcoin-cli\n+export BITCOIND=${REAL_BITCOIND}\n+\n+#Run the tests\n+\n+if [ \"x${ENABLE_BITCOIND}${ENABLE_UTILS}${ENABLE_WALLET}\" = \"x111\" ]; then\n+  ${BUILDDIR}/qa/rpc-tests/wallet.sh \"${BUILDDIR}/src\"\n+  ${BUILDDIR}/qa/rpc-tests/listtransactions.py --srcdir \"${BUILDDIR}/src\"\n+  ${BUILDDIR}/qa/rpc-tests/forknotify.py --srcdir \"${BUILDDIR}/src\"\n+else\n+  echo \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n+fi"
      },
      {
        "sha": "93c25bb9fca29e20e4b3b75718978e303268fac1",
        "filename": "qa/pull-tester/run-bitcoin-cli",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7667850dbfac0ced6eb2711d922c263b65ffaeee/qa/pull-tester/run-bitcoin-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7667850dbfac0ced6eb2711d922c263b65ffaeee/qa/pull-tester/run-bitcoin-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoin-cli?ref=7667850dbfac0ced6eb2711d922c263b65ffaeee",
        "patch": "@@ -0,0 +1,13 @@\n+#!/bin/bash\n+\n+# This is a thin wrapper around bitcoin-cli that strips the Windows-style EOLs\n+# from the output if present. It is necessary when using bitcoin-cli.exe on\n+# Linux since shells will interpret the line-endings as part of the result.\n+\n+CURDIR=$(cd $(dirname \"$0\"); pwd)\n+# Get BUILDDIR and REAL_BITCOIND\n+\n+# Grab the value of $REAL_BITCOINCLI which may be bitcoin-cli.exe.\n+. \"${CURDIR}/tests-config.sh\"\n+\n+\"${REAL_BITCOINCLI}\" \"$@\" | sed 's/\\r//'"
      },
      {
        "sha": "10f4d33e47cf0a633c34eae270406a67cac7226e",
        "filename": "qa/pull-tester/tests-config.sh.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7667850dbfac0ced6eb2711d922c263b65ffaeee/qa/pull-tester/tests-config.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7667850dbfac0ced6eb2711d922c263b65ffaeee/qa/pull-tester/tests-config.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests-config.sh.in?ref=7667850dbfac0ced6eb2711d922c263b65ffaeee",
        "patch": "@@ -0,0 +1,16 @@\n+#!/bin/bash\n+# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+BUILDDIR=\"@abs_top_builddir@\"\n+EXEEXT=\"@EXEEXT@\"\n+\n+# These will turn into comments if they were disabled when configuring.\n+@ENABLE_WALLET_TRUE@ENABLE_WALLET=1\n+@BUILD_BITCOIN_UTILS_TRUE@ENABLE_UTILS=1\n+@BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n+\n+REAL_BITCOIND=\"$BUILDDIR/src/bitcoind${EXEEXT}\"\n+REAL_BITCOINCLI=\"$BUILDDIR/src/bitcoin-cli${EXEEXT}\"\n+"
      }
    ]
  },
  {
    "sha": "2191eac812a72fe57167be882bddd2e6a3f0340e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTkxZWFjODEyYTcyZmU1NzE2N2JlODgyYmRkZDJlNmEzZjAzNDBl",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T04:00:02Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-31T04:28:52Z"
      },
      "message": "add tests to travis",
      "tree": {
        "sha": "b1748c081d9289e95cf993d93c45a18ec3fd17da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1748c081d9289e95cf993d93c45a18ec3fd17da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2191eac812a72fe57167be882bddd2e6a3f0340e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2191eac812a72fe57167be882bddd2e6a3f0340e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2191eac812a72fe57167be882bddd2e6a3f0340e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2191eac812a72fe57167be882bddd2e6a3f0340e/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7667850dbfac0ced6eb2711d922c263b65ffaeee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7667850dbfac0ced6eb2711d922c263b65ffaeee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7667850dbfac0ced6eb2711d922c263b65ffaeee"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b685fbb5cd93414a692206b1b6a0747b27da72e6",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2191eac812a72fe57167be882bddd2e6a3f0340e/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2191eac812a72fe57167be882bddd2e6a3f0340e/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=2191eac812a72fe57167be882bddd2e6a3f0340e",
        "patch": "@@ -27,17 +27,17 @@ matrix:\n     - compiler: \": ARM\"\n       env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\"\n     - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat CPPFLAGS=-DDEBUG_LOCKORDER\"\n+      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat CPPFLAGS=-DDEBUG_LOCKORDER\"\n     - compiler: \": No wallet\"\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\"\n     - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\" USE_SHELL=\"/bin/dash\"\n+      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\" USE_SHELL=\"/bin/dash\"\n     - compiler: \": Cross-Mac\"\n       env: HOST=x86_64-apple-darwin11 PACKAGES=\"gcc-multilib g++-multilib cmake libcap-dev libz-dev libbz2-dev\" OSX_SDK=10.7 GOAL=\"deploy\"\n     - compiler: \": Win64\"\n-      env: HOST=x86_64-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine\" RUN_TESTS=true GOAL=\"deploy\"\n+      env: HOST=x86_64-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\"\n     - compiler: \": Win32\"\n-      env: HOST=i686-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine\" RUN_TESTS=true GOAL=\"deploy\"\n+      env: HOST=i686-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\"\n install:\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-upgrade -qq $PACKAGES; fi\n@@ -60,5 +60,6 @@ script:\n     - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.sh; fi\n after_script:\n     - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      }
    ]
  }
]