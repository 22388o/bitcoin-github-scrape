practicalswift,2020-09-23 11:50:18,"Concept ACK\n\nThanks for improving `-netinfo`! :)",https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-697312531,697312531,
DrahtBot,2020-09-23 16:22:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20120 (net, rpc, test, bugfix: update GetNetworkName, GetNetworksInfo, regression tests by jonatack)\n* #20115 (cli: -net",https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-697636053,697636053,
hebasto,2020-09-24 14:53:38,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-698396839,698396839,
jonatack,2020-10-11 19:25:49,Thanks for reviewing @hebasto. I've addressed your feedback.,https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-706755686,706755686,
laanwj,2020-10-12 16:42:26,Needs rebase after #19998.,https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-707228512,707228512,
jonatack,2020-10-13 10:12:11,Rebased. If merged for 0.21 will add a release note manually in the wiki.,https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-707639395,707639395,
laanwj,2020-10-14 11:37:30,"> Rebased. If merged for 0.21 will add a release note manually in the wiki.\n\n+1 in getting this into 0.21, it's a low risk change and is kind of the culmination of work that's been going on for the entire release cycle",https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-708344824,708344824,
jonatack,2020-10-14 13:38:15,Thanks for the feedback! Updated. (Edit: repushed to wrap array initialization in extra braces for one compiler on travis that needed appeasing.),https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-708407560,708407560,
laanwj,2020-10-15 15:43:21,ACK 6272604bef3b409455b010d134b4b62c8f6ff49f,https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-709413646,709413646,
jonatack,2020-11-02 17:14:31,"> Rebased. If merged for 0.21 will add a release note manually in the wiki.\n\nDone, manually added a release note in the wiki for getpeerinfo#network.\n",https://github.com/bitcoin/bitcoin/pull/20002#issuecomment-720606558,720606558,
hebasto,2020-10-03 08:08:00,"bebd062eef3fa2d33c9216c368977dbedb70a443\n\nWhile here, mind making ""addrbind"" and ""addrlocal"" ordering consistent for help and output?",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r499127167,499127167,src/rpc/net.cpp
hebasto,2020-10-03 08:31:43,"bebd062eef3fa2d33c9216c368977dbedb70a443\n\nTesting of `network=NET_UNROUTABLE` is actually skipped. Could we avoid such skipping?",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r499128663,499128663,test/functional/feature_proxy.py
hebasto,2020-10-03 08:39:20,"5604a61435c5dfdeed41db5eca489b353dee0b99\n```suggestion\n    static constexpr int m_networks = 3; //!< Number of possible networks.\n```",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r499129138,499129138,src/bitcoin-cli.cpp
hebasto,2020-10-03 08:40:21,Why switch from modern `{}` initialization to the old style?,https://github.com/bitcoin/bitcoin/pull/20002#discussion_r499129207,499129207,src/bitcoin-cli.cpp
jonatack,2020-10-11 19:16:51,Good idea. Done.,https://github.com/bitcoin/bitcoin/pull/20002#discussion_r502954655,502954655,src/rpc/net.cpp
jonatack,2020-10-11 19:17:50,Done,https://github.com/bitcoin/bitcoin/pull/20002#discussion_r502954754,502954754,src/bitcoin-cli.cpp
jonatack,2020-10-11 19:18:15,"Done, retained modern style. Thanks.",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r502954789,502954789,src/bitcoin-cli.cpp
jonatack,2020-10-11 19:23:48,"When I run `feature_proxy.py` with `-l debug`, or with the following patch, it doesn't seem to be skipped in my testing. LMK if I'm misunderstanding.\n```diff\n+++ b/test/functional/feature_proxy.py\n@@ -101,6 +101,7 @@ class ProxyTest(BitcoinTestFramework):\n         for peer in node.getpeerinfo():\n             if peer[""addr""] == addr:\n                 assert_equal(peer[""network""], networ",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r502955355,502955355,test/functional/feature_proxy.py
laanwj,2020-10-14 11:27:06,"Let's not do `assert(false)` here. A crash on ""invalid"" input from the RPC is never good, it is good to be slightly forgiving with regard to forward-compatibility. Maybe return an 'unknown' category instead that is ignored with regard to the statistics/table.",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r504601439,504601439,src/bitcoin-cli.cpp
laanwj,2020-10-14 11:31:25,"~0 on the change from a class to a struct, I think calling it a struct is more consistent with how it's used but it doesn't seem to be a logical part of this change",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r504603742,504603742,src/interfaces/node.h
laanwj,2020-10-14 11:47:22,"As these IDs are always consecutively, and you iterate over it linearly, and you make the assumption that maxid is size()-1. why not simply\n```\nconst std::vector<std::string> m_networks{""ipv4"",""ipv6"",""onion""};\n```\nalternatively, *lookup* would be easier with a `std::map`.",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r504612112,504612112,src/bitcoin-cli.cpp
jonatack,2020-10-14 13:29:26,Done!,https://github.com/bitcoin/bitcoin/pull/20002#discussion_r504677180,504677180,src/bitcoin-cli.cpp
jonatack,2020-10-14 13:29:45,Removed the struct change.,https://github.com/bitcoin/bitcoin/pull/20002#discussion_r504677402,504677402,src/interfaces/node.h
jonatack,2020-10-14 13:32:15,"Good idea to flatten it--done, and changed the new data structures in the last commit to fixed-sized std::arrays.",https://github.com/bitcoin/bitcoin/pull/20002#discussion_r504679310,504679310,src/bitcoin-cli.cpp
