[
  {
    "sha": "fa2c52111544b0de93ac1002f5395bceeb8fea0e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTJjNTIxMTE1NDRiMGRlOTNhYzEwMDJmNTM5NWJjZWViOGZlYTBl",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2021-02-08T11:57:41Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2021-02-10T08:16:58Z"
      },
      "message": "Deduplicate some block-to-JSON code.\n\nSome of the logic converting blocks and block headers to JSON for\nthe blockchain RPC methods (getblock, getlockheader) was duplicated.\nInstead of that, the blockToJSON RPC method now calls blockheaderToJSON\nfirst, and then fills in the missing, block-specific bits explicitly.",
      "tree": {
        "sha": "3a056778dc1e2bd2df934a3d960dea2ac24965f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a056778dc1e2bd2df934a3d960dea2ac24965f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2c52111544b0de93ac1002f5395bceeb8fea0e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2c52111544b0de93ac1002f5395bceeb8fea0e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2c52111544b0de93ac1002f5395bceeb8fea0e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2c52111544b0de93ac1002f5395bceeb8fea0e/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf26ca3911f3c9ad1583716075b6dd07b76e3ff0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf26ca3911f3c9ad1583716075b6dd07b76e3ff0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf26ca3911f3c9ad1583716075b6dd07b76e3ff0"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 1,
      "deletions": 22
    },
    "files": [
      {
        "sha": "c3158b3a643cdf21f3001277c7ff693db50aedbc",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 22,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2c52111544b0de93ac1002f5395bceeb8fea0e/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2c52111544b0de93ac1002f5395bceeb8fea0e/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fa2c52111544b0de93ac1002f5395bceeb8fea0e",
        "patch": "@@ -156,21 +156,11 @@ UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex\n \n UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, bool txDetails)\n {\n-    // Serialize passed information without accessing chain state of the active chain!\n-    AssertLockNotHeld(cs_main); // For performance reasons\n+    UniValue result = blockheaderToJSON(tip, blockindex);\n \n-    UniValue result(UniValue::VOBJ);\n-    result.pushKV(\"hash\", blockindex->GetBlockHash().GetHex());\n-    const CBlockIndex* pnext;\n-    int confirmations = ComputeNextBlockAndDepth(tip, blockindex, pnext);\n-    result.pushKV(\"confirmations\", confirmations);\n     result.pushKV(\"strippedsize\", (int)::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS));\n     result.pushKV(\"size\", (int)::GetSerializeSize(block, PROTOCOL_VERSION));\n     result.pushKV(\"weight\", (int)::GetBlockWeight(block));\n-    result.pushKV(\"height\", blockindex->nHeight);\n-    result.pushKV(\"version\", block.nVersion);\n-    result.pushKV(\"versionHex\", strprintf(\"%08x\", block.nVersion));\n-    result.pushKV(\"merkleroot\", block.hashMerkleRoot.GetHex());\n     UniValue txs(UniValue::VARR);\n     if (txDetails) {\n         CBlockUndo blockUndo;\n@@ -189,18 +179,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIn\n         }\n     }\n     result.pushKV(\"tx\", txs);\n-    result.pushKV(\"time\", block.GetBlockTime());\n-    result.pushKV(\"mediantime\", (int64_t)blockindex->GetMedianTimePast());\n-    result.pushKV(\"nonce\", (uint64_t)block.nNonce);\n-    result.pushKV(\"bits\", strprintf(\"%08x\", block.nBits));\n-    result.pushKV(\"difficulty\", GetDifficulty(blockindex));\n-    result.pushKV(\"chainwork\", blockindex->nChainWork.GetHex());\n-    result.pushKV(\"nTx\", (uint64_t)blockindex->nTx);\n \n-    if (blockindex->pprev)\n-        result.pushKV(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex());\n-    if (pnext)\n-        result.pushKV(\"nextblockhash\", pnext->GetBlockHash().GetHex());\n     return result;\n }\n "
      }
    ]
  }
]