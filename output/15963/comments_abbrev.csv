promag,2019-05-06 17:58:57,utACK e08e4c5. Does it make sense to add the same parameter to `test/functional/test_runner.py`?,https://github.com/bitcoin/bitcoin/pull/15963#issuecomment-489715008,489715008,
jnewbery,2019-05-07 13:59:18,"> Does it make sense to add the same parameter to test/functional/test_runner.py?\n\nThe test_runner doesn't use any randomness.",https://github.com/bitcoin/bitcoin/pull/15963#issuecomment-490091763,490091763,
MarcoFalke,2019-05-07 14:04:20,"utACK 05f4713a315d53c807db814fb00c997ded4878c4\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nutACK 05f4713a315d53c807db814fb00c997ded4878c4\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj9hgwAmFkbWFY//RliZUnRBP/eNi21uRNuEeuKTyRreBq9Y44Cdt5hZb",https://github.com/bitcoin/bitcoin/pull/15963#issuecomment-490093798,490093798,
practicalswift,2019-05-07 14:13:11,"utACK 05f4713a315d53c807db814fb00c997ded4878c4\n\nNice!",https://github.com/bitcoin/bitcoin/pull/15963#issuecomment-490097391,490097391,
jonatack,2019-05-11 14:46:28,"re-ACK a407b6fdf34f77eb347378674da9cf80394897de\n\nTerminal output:\n```\ntest/functional/feature_help.py -l debug\n2019-05-11T13:54:35.602000Z TestFramework (DEBUG): PRNG seed is: 623709155939669242\n\ntest/functional/feature_help.py --loglevel debug --randomseed 3139909\n2019-05-11T13:54:42.522000Z TestFramework (DEBUG): User supplied random seed 3139909\n2019-05-11T13:54:42.523000Z Tes",https://github.com/bitcoin/bitcoin/pull/15963#issuecomment-491516862,491516862,
jb55,2019-05-14 07:06:31,great! utACK a407b6fdf34f77eb347378674da9cf80394897de,https://github.com/bitcoin/bitcoin/pull/15963#issuecomment-492106529,492106529,
MarcoFalke,2019-05-06 17:24:56,Should this be of type int?,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281279178,281279178,test/functional/test_framework/test_framework.py
jnewbery,2019-05-06 17:32:12,thanks. Updated,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281281824,281281824,test/functional/test_framework/test_framework.py
jonatack,2019-05-06 18:09:54,"Alternatively:\n```python3\n        # Seed the PRNG. Note that testruns are reproducible if and only if\n        # a single thread accesses the PRNG. For more information, see\n        # https://docs.python.org/3/library/random.html#notes-on-reproducibility.\n```",https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281295618,281295618,test/functional/test_framework/test_framework.py
MarcoFalke,2019-05-06 18:12:13,"```suggestion\n        parser.add_argument(""--randseed"", type=int,\n```\n\nsyle-nit: No need to mention the default when it isn't done anywhere else in our code.",https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281296533,281296533,test/functional/test_framework/test_framework.py
jonatack,2019-05-06 18:20:29,"Alternatively, to use `self.options.randseed` only once, avoid a `not` conditional, and begin the conditional with the most frequent case:\n```python3\n        seed = self.options.randseed\n\n        if seed is None:\n            seed = random.randrange(sys.maxsize)\n        else:\n            self.log.debug(""Using user supplied random seed {}"".format(seed))\n```\nFeel free to ignore. FWI",https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281299709,281299709,test/functional/test_framework/test_framework.py
jonatack,2019-05-06 18:35:53,"nit: git grepping shows ""test run"" is the usual spelling in this repo",https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281305622,281305622,test/functional/test_framework/test_framework.py
jonatack,2019-05-06 20:04:01,Perhaps just --seed for brevity,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281337617,281337617,test/functional/test_framework/test_framework.py
jnewbery,2019-05-07 13:57:00,removed,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281642242,281642242,test/functional/test_framework/test_framework.py
jnewbery,2019-05-07 13:57:17,Thanks. That's better. I've updated the comment.,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281642400,281642400,test/functional/test_framework/test_framework.py
jnewbery,2019-05-07 13:57:29,Looks good. I've taken your version,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281642520,281642520,test/functional/test_framework/test_framework.py
jnewbery,2019-05-07 13:57:39,changed to 'test run',https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281642624,281642624,test/functional/test_framework/test_framework.py
jnewbery,2019-05-07 13:58:56,"I've gone the other way and changed this to `randomseed`. There's already a `portseed` argument, so more explicit is good (and I expect the `randomseed` argument to be used very infrequently so a few extra characters isn't an issue).",https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281643314,281643314,test/functional/test_framework/test_framework.py
jonatack,2019-05-07 18:52:51,`self.options.randomseed` can be simply `seed` in lines 172 and 175.,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281782530,281782530,test/functional/test_framework/test_framework.py
jonatack,2019-05-07 19:05:28,"Just noted the log message change. Agreed, either ""Using user-supplied"" or ""User supplied"" may be better than ""Using user supplied"".",https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281787186,281787186,test/functional/test_framework/test_framework.py
MarcoFalke,2019-05-07 19:06:10,Or maybe the local `seed` should be removed and the seed should be stored in the options member? That way it could be accessed by tests to (re-seed) to the inital seed?,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281787433,281787433,test/functional/test_framework/test_framework.py
jonatack,2019-05-07 19:20:18,"Interesting option as well, if re-seeding would be useful.",https://github.com/bitcoin/bitcoin/pull/15963#discussion_r281792368,281792368,test/functional/test_framework/test_framework.py
jnewbery,2019-05-09 15:33:03,oops. Good spot @jonatack - fixed!,https://github.com/bitcoin/bitcoin/pull/15963#discussion_r282541643,282541643,test/functional/test_framework/test_framework.py
