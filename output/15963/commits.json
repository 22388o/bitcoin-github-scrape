[
  {
    "sha": "a407b6fdf34f77eb347378674da9cf80394897de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDA3YjZmZGYzNGY3N2ViMzQ3Mzc4Njc0ZGE5Y2Y4MDM5NDg5N2Rl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-05-06T17:17:04Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-05-09T15:28:04Z"
      },
      "message": "[tests] Make random seed logged and settable\n\nThis allows tests which use randomness to be reproducibly run on failure.",
      "tree": {
        "sha": "d7fa36d7bd95371aa2e2e9ea7e5c36f324caa9c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7fa36d7bd95371aa2e2e9ea7e5c36f324caa9c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a407b6fdf34f77eb347378674da9cf80394897de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a407b6fdf34f77eb347378674da9cf80394897de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a407b6fdf34f77eb347378674da9cf80394897de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a407b6fdf34f77eb347378674da9cf80394897de/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5ffe8d5155b21d0099259416436d09fc20d7017",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5ffe8d5155b21d0099259416436d09fc20d7017",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5ffe8d5155b21d0099259416436d09fc20d7017"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2187bf5f5f311b58a671b9823592ddee50c44b60",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a407b6fdf34f77eb347378674da9cf80394897de/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a407b6fdf34f77eb347378674da9cf80394897de/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=a407b6fdf34f77eb347378674da9cf80394897de",
        "patch": "@@ -10,6 +10,7 @@\n import argparse\n import os\n import pdb\n+import random\n import shutil\n import sys\n import tempfile\n@@ -129,6 +130,8 @@ def main(self):\n                             help=\"use bitcoin-cli instead of RPC for all commands\")\n         parser.add_argument(\"--perf\", dest=\"perf\", default=False, action=\"store_true\",\n                             help=\"profile running nodes with perf for the duration of the test\")\n+        parser.add_argument(\"--randomseed\", type=int,\n+                            help=\"set a random seed for deterministically reproducing a previous test run\")\n         self.add_options(parser)\n         self.options = parser.parse_args()\n \n@@ -158,6 +161,22 @@ def main(self):\n             self.options.tmpdir = tempfile.mkdtemp(prefix=TMPDIR_PREFIX)\n         self._start_logging()\n \n+        # Seed the PRNG. Note that test runs are reproducible if and only if\n+        # a single thread accesses the PRNG. For more information, see\n+        # https://docs.python.org/3/library/random.html#notes-on-reproducibility.\n+        # The network thread shouldn't access random. If we need to change the\n+        # network thread to access randomness, it should instantiate its own\n+        # random.Random object.\n+        seed = self.options.randomseed\n+\n+        if seed is None:\n+            seed = random.randrange(sys.maxsize)\n+        else:\n+            self.log.debug(\"User supplied random seed {}\".format(seed))\n+\n+        random.seed(seed)\n+        self.log.debug(\"PRNG seed is: {}\".format(seed))\n+\n         self.log.debug('Setting up network thread')\n         self.network_thread = NetworkThread()\n         self.network_thread.start()"
      }
    ]
  }
]