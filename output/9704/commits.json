[
  {
    "sha": "d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGY1ZWYyYTdjOGIxYzI4ZjllNjY5NTdkMGI3NGI1YmU5ZDlmZjFk",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2017-02-02T13:22:58Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2017-02-07T07:30:42Z"
      },
      "message": "Store downloaded blocks prior to shutdown.",
      "tree": {
        "sha": "79f239f901b1d6519096f6b5e2ce971a7c29694e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79f239f901b1d6519096f6b5e2ce971a7c29694e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYmXekAAoJEJYWlWnKgEH5CpoP/1rZU+nMCUjd8nCCcU3CuKgl\ns8ODJNoehH1+SgckReptXy8Naq09b9XUc+4GK4SIYH4cuCY31w+PYdtySIkBKF10\nWx+P7n9J+HvBWXO9bdEq1Hib7wHuM1nETKZyHKXUxH8nLlp+Edthi4pWiN1q2qRS\nHQ81O/r+JxgHWSmQR7w2WKW/yvU5xJxX6MW8WERmiEY/Q2PxZfJOf5aduUkGgDFR\nUnrQ3T6J1ZPDYFRNENs5o8V071TUnQEEc6b3ZX6SMfpw2AVg8Pp2KaGirvnx+tur\neBEIFyYx8U/yCYS+ULgrS0FoW44VoQhmCTR4Rfmr4dpS55F+dRaI9shApTiWsY3w\nXgcm5iKyMpz6TaeYp4D69f3Uplv450QWNfRPLdlui297HNc7LlTgoZ83E9POVxi/\nUr9jzDTJmEs88KhXYYFrB26gA9f7rBkj8ZbNMZDHeKeBFLaus4/3vkkkpJgd4/h5\npzZgS2/y16LD7AEJHEtsXIGn8VfOKn6WiJFlZ+Yr3Ns5ZeULQzPLrmh/LVSZd4Pg\nU5EEdNIIwmPh3ydVstwd6/DnB5hzrWVhsMq8a/xP/5NgZw1OhuBlQfwON0a7r9pd\n7Kucx+Cxwcq4OPyef5TClV5Jn6CZRi+lbVjBIsurE0prgTdRJsWOottfCTkFfWTR\nL6xEsg/Sj3r6OnLgni5O\n=BuJF\n-----END PGP SIGNATURE-----",
        "payload": "tree 79f239f901b1d6519096f6b5e2ce971a7c29694e\nparent 1c2edd9f6707d16c03ecfba094b1cfec2ddc4dce\nauthor R E Broadley <rebroad+github@gmail.com> 1486041778 +0800\ncommitter R E Broadley <rebroad+github@gmail.com> 1486452642 +0800\n\nStore downloaded blocks prior to shutdown.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1c2edd9f6707d16c03ecfba094b1cfec2ddc4dce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c2edd9f6707d16c03ecfba094b1cfec2ddc4dce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c2edd9f6707d16c03ecfba094b1cfec2ddc4dce"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 31,
      "deletions": 10
    },
    "files": [
      {
        "sha": "73f0c189b321ad7bd740e8ef2a0071f2f764dc33",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d",
        "patch": "@@ -73,6 +73,7 @@ CCriticalSection cs_mapLocalHost;\n std::map<CNetAddr, LocalServiceInfo> mapLocalHost;\n static bool vfLimited[NET_MAX] = {};\n std::string strSubVersion;\n+std::atomic<int> nBlocksToBeProcessed(0);\n \n limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n \n@@ -672,7 +673,10 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n         nBytes -= handled;\n \n         if (msg.complete()) {\n-\n+            if (msg.hdr.pchCommand == NetMsgType::BLOCK) {\n+                nBlocksToBeProcessed++;\n+                ::nBlocksToBeProcessed++;\n+            }\n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n             mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.hdr.pchCommand);\n@@ -1844,7 +1848,7 @@ bool CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n \n void CConnman::ThreadMessageHandler()\n {\n-    while (!flagInterruptMsgProc)\n+    while (!flagInterruptMsgProc || nBlocksToBeProcessed > 0)\n     {\n         std::vector<CNode*> vNodesCopy;\n         {\n@@ -1865,15 +1869,15 @@ void CConnman::ThreadMessageHandler()\n             // Receive messages\n             bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n             fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n-            if (flagInterruptMsgProc)\n+            if (flagInterruptMsgProc && nBlocksToBeProcessed < 1)\n                 return;\n \n             // Send messages\n+            if (!flagInterruptMsgProc)\n             {\n                 LOCK(pnode->cs_sendProcessing);\n                 GetNodeSignals().SendMessages(pnode, *this, flagInterruptMsgProc);\n-            }\n-            if (flagInterruptMsgProc)\n+            } else if (nBlocksToBeProcessed < 1)\n                 return;\n         }\n \n@@ -1884,9 +1888,8 @@ void CConnman::ThreadMessageHandler()\n         }\n \n         std::unique_lock<std::mutex> lock(mutexMsgProc);\n-        if (!fMoreWork) {\n+        if (!fMoreWork && nBlocksToBeProcessed < 1)\n             condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100), [this] { return fMsgProcWake; });\n-        }\n         fMsgProcWake = false;\n     }\n }\n@@ -2277,7 +2280,7 @@ void CConnman::DeleteNode(CNode* pnode)\n {\n     assert(pnode);\n     bool fUpdateConnectionTime = false;\n-    GetNodeSignals().FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n+    GetNodeSignals().FinalizeNode(pnode, fUpdateConnectionTime);\n     if(fUpdateConnectionTime)\n         addrman.Connected(pnode->addr);\n     delete pnode;\n@@ -2535,6 +2538,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     nRecvVersion = INIT_PROTO_VERSION;\n     nLastSend = 0;\n     nLastRecv = 0;\n+    nBlocksToBeProcessed = 0;\n     nSendBytes = 0;\n     nRecvBytes = 0;\n     nTimeConnected = GetSystemTimeInSeconds();"
      },
      {
        "sha": "14f9fb47fe1adb0d477e5232816c5655729902c3",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d",
        "patch": "@@ -468,7 +468,7 @@ struct CNodeSignals\n     boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> ProcessMessages;\n     boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> SendMessages;\n     boost::signals2::signal<void (CNode*, CConnman&)> InitializeNode;\n-    boost::signals2::signal<void (NodeId, bool&)> FinalizeNode;\n+    boost::signals2::signal<void (CNode*, bool&)> FinalizeNode;\n };\n \n \n@@ -505,6 +505,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer, ServiceFlags nLocalServices)\n extern bool fDiscover;\n extern bool fListen;\n extern bool fRelayTxes;\n+extern std::atomic<int> nBlocksToBeProcessed;\n \n extern limitedmap<uint256, int64_t> mapAlreadyAskedFor;\n \n@@ -622,6 +623,7 @@ class CNode\n \n     int64_t nLastSend;\n     int64_t nLastRecv;\n+    std::atomic<int> nBlocksToBeProcessed; // blocks received but not yet processed\n     int64_t nTimeConnected;\n     int64_t nTimeOffset;\n     const CAddress addr;"
      },
      {
        "sha": "e74e3ac9fd6aa04d1e9d84328346d43e7112c997",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d",
        "patch": "@@ -274,9 +274,14 @@ void InitializeNode(CNode *pnode, CConnman& connman) {\n         PushNodeVersion(pnode, connman, GetTime());\n }\n \n-void FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n+void FinalizeNode(CNode *pnode, bool& fUpdateConnectionTime) {\n+    if (ShutdownRequested())\n+        return;\n+\n     fUpdateConnectionTime = false;\n+    nBlocksToBeProcessed -= pnode->nBlocksToBeProcessed;\n     LOCK(cs_main);\n+    NodeId nodeid = pnode->id;\n     CNodeState *state = State(nodeid);\n \n     if (state->fSyncStarted)\n@@ -2619,6 +2624,13 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         CNetMessage& msg(msgs.front());\n \n         msg.SetVersion(pfrom->GetRecvVersion());\n+\n+        if (msg.complete() && msg.hdr.pchCommand == NetMsgType::BLOCK) {\n+            pfrom->nBlocksToBeProcessed--;\n+            nBlocksToBeProcessed--;\n+        } else if (ShutdownRequested())\n+            return fMoreWork;\n+\n         // Scan for message start\n         if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n             LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);"
      },
      {
        "sha": "4cbad6dfc34dfe5fc1c26a3e640d3174cda38598",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=d0f5ef2a7c8b1c28f9e66957d0b74b5be9d9ff1d",
        "patch": "@@ -2474,6 +2474,9 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n     // us in the middle of ProcessNewBlock - do not assume pblock is set\n     // sanely for performance or correctness!\n \n+    if (ShutdownRequested())\n+        return true;\n+\n     CBlockIndex *pindexMostWork = NULL;\n     CBlockIndex *pindexNewTip = NULL;\n     do {"
      }
    ]
  }
]