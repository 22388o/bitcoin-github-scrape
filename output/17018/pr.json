{
  "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17018",
  "id": 323637145,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MzIzNjM3MTQ1",
  "html_url": "https://github.com/bitcoin/bitcoin/pull/17018",
  "diff_url": "https://github.com/bitcoin/bitcoin/pull/17018.diff",
  "patch_url": "https://github.com/bitcoin/bitcoin/pull/17018.patch",
  "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17018",
  "number": 17018,
  "state": "closed",
  "locked": false,
  "title": "tests: Add descriptor Parse(...) fuzzing harness",
  "user": {
    "login": "practicalswift",
    "id": 7826565,
    "node_id": "MDQ6VXNlcjc4MjY1NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/practicalswift",
    "html_url": "https://github.com/practicalswift",
    "followers_url": "https://api.github.com/users/practicalswift/followers",
    "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
    "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
    "organizations_url": "https://api.github.com/users/practicalswift/orgs",
    "repos_url": "https://api.github.com/users/practicalswift/repos",
    "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
    "received_events_url": "https://api.github.com/users/practicalswift/received_events",
    "type": "User",
    "site_admin": false
  },
  "body": "Add `Parse(...)` (descriptor) fuzzing harness.\r\n\r\nTo test this PR:\r\n\r\nWe can run `test_fuzzing_harnesses.sh` (#17000) during ten seconds to quickly verify that the newly added  fuzz harness seem to hit relevant code regions, that the fuzzing throughput seems reasonable, etc.\r\n\r\n`test_fuzzing_harnesses.sh descriptor 10` runs all fuzzers matching the regexp `descriptor` giving them ten seconds of runtime each.\r\n\r\n```\r\n$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\r\n$ make\r\n$ contrib/devtools/test_fuzzing_harnesses.sh descriptor 10\r\nTesting fuzzer descriptor_parse during 10 second(s)\r\nA subset of reached functions:\r\n        NEW_FUNC[0/17]: 0x55ec8a240c90 in tinyformat::detail::formatImpl(std::ostream&, char const*, tinyformat::detail::FormatArg const*, int) src/./tinyformat.h:791\r\n        NEW_FUNC[4/17]: 0x55ec8a2435f0 in tinyformat::detail::printFormatStringLiteral(std::ostream&, char const*) src/./tinyformat.h:564\r\n        NEW_FUNC[5/17]: 0x55ec8a2439d0 in tinyformat::detail::streamStateFromFormat(std::ostream&, bool&, int&, char const*, tinyformat::detail::FormatArg const*, int&, int) src/./tinyformat.h:601\r\n        NEW_FUNC[6/17]: 0x55ec8a24a3d0 in tinyformat::detail::FormatArg::format(std::ostream&, char const*, char const*, int) const src/./tinyformat.h:513\r\n        NEW_FUNC[12/17]: 0x55ec8a29cd70 in void tinyformat::detail::FormatArg::formatImpl<long>(std::ostream&, char const*, char const*, int, void const*) src/./tinyformat.h:530\r\n        NEW_FUNC[13/17]: 0x55ec8a29cf50 in void tinyformat::formatValue<long>(std::ostream&, char const*, char const*, int, long const&) src/./tinyformat.h:317\r\n        NEW_FUNC[14/17]: 0x55ec8a2ea450 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tinyformat::format<long>(char const*, long const&) src/./tinyformat.h:976\r\n        NEW_FUNC[15/17]: 0x55ec8a346ac0 in void tinyformat::format<long>(std::ostream&, char const*, long const&) src/./tinyformat.h:968\r\n        NEW_FUNC[16/17]: 0x55ec8a346d80 in tinyformat::detail::FormatListN<1>::FormatListN<long>(long const&) src/./tinyformat.h:885\r\n        NEW_FUNC[0/16]: 0x55ec8a210c90 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tinyformat::format<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/./tinyformat.h:976\r\n        NEW_FUNC[2/16]: 0x55ec8a25c3e0 in void tinyformat::format<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::ostream&, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/./tinyformat.h:968\r\n        NEW_FUNC[3/16]: 0x55ec8a25c6a0 in tinyformat::detail::FormatListN<1>::FormatListN<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/./tinyformat.h:885\r\n        NEW_FUNC[4/16]: 0x55ec8a25c980 in void tinyformat::detail::FormatArg::formatImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::ostream&, char const*, char const*, int, void const*) src/./tinyformat.h:530\r\n        NEW_FUNC[6/16]: 0x55ec8b29cc60 in (anonymous namespace)::ParseScript(Span<char const>&, (anonymous namespace)::ParseScriptContext, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:810\r\n        NEW_FUNC[8/16]: 0x55ec8b2a4710 in (anonymous namespace)::Expr(Span<char const>&) src/script/descriptor.cpp:657\r\n        NEW_FUNC[9/16]: 0x55ec8b2a4d40 in (anonymous namespace)::Func(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Span<char const>&) src/script/descriptor.cpp:647\r\n        NEW_FUNC[15/16]: 0x55ec8b2d7dd0 in Span<char const>::subspan(long) const src/./span.h:33\r\n        NEW_FUNC[0/1]: 0x55ec8b2d7830 in Span<char const>::operator[](long) const src/./span.h:31\r\n        NEW_FUNC[0/10]: 0x55ec8a2ea090 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tinyformat::format<char const*>(char const*, char const* const&) src/./tinyformat.h:976\r\n        NEW_FUNC[1/10]: 0x55ec8a345d40 in void tinyformat::format<char const*>(std::ostream&, char const*, char const* const&) src/./tinyformat.h:968\r\n        NEW_FUNC[2/10]: 0x55ec8a346000 in tinyformat::detail::FormatListN<1>::FormatListN<char const*>(char const* const&) src/./tinyformat.h:885\r\n        NEW_FUNC[3/10]: 0x55ec8a3462e0 in void tinyformat::detail::FormatArg::formatImpl<char const*>(std::ostream&, char const*, char const*, int, void const*) src/./tinyformat.h:530\r\n        NEW_FUNC[4/10]: 0x55ec8a3464b0 in void tinyformat::formatValue<char const*>(std::ostream&, char const*, char const*, int, char const* const&) src/./tinyformat.h:317\r\n        NEW_FUNC[8/10]: 0x55ec8b438ef0 in ParsePrechecks(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/util/strencodings.cpp:267\r\n        NEW_FUNC[9/10]: 0x55ec8b4398b0 in ParseUInt32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int*) src/util/strencodings.cpp:309\r\n        NEW_FUNC[0/3]: 0x55ec8a2e9430 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tinyformat::format<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/./tinyformat.h:976\r\n        NEW_FUNC[1/3]: 0x55ec8a33a6f0 in void tinyformat::format<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::ostream&, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/./tinyformat.h:968\r\n        NEW_FUNC[2/3]: 0x55ec8a33aa40 in tinyformat::detail::FormatListN<2>::FormatListN<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/./tinyformat.h:885\r\n        NEW_FUNC[1/2]: 0x55ec8b4331b0 in IsHex(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/util/strencodings.cpp:61\r\n        NEW_FUNC[13/24]: 0x55ec8b126eb0 in Params() src/chainparams.cpp:384\r\n        NEW_FUNC[14/24]: 0x55ec8b19a500 in DecodeDestination(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) src/key_io.cpp:217\r\n        NEW_FUNC[15/24]: 0x55ec8b19a610 in (anonymous namespace)::DecodeDestination(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CChainParams const&) src/key_io.cpp:74\r\n        NEW_FUNC[18/24]: 0x55ec8b357160 in IsValidDestination(boost::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown> const&) src/script/standard.cpp:325\r\n        NEW_FUNC[19/24]: 0x55ec8b36fe40 in DecodeBase58(char const*, std::vector<unsigned char, std::allocator<unsigned char> >&) src/base58.cpp:36\r\nstat::number_of_executed_units: 54900\r\nstat::average_exec_per_sec:     4990\r\nstat::new_units_added:          421\r\nstat::slowest_unit_time_sec:    0\r\nstat::peak_rss_mb:              412\r\nNumber of unique code paths taken during fuzzing round: 93\r\n\r\nTested fuzz harnesses seem to work as expected.\r\n```",
  "created_at": "2019-10-02T08:21:17Z",
  "updated_at": "2021-04-10T19:39:00Z",
  "closed_at": "2019-10-23T16:45:23Z",
  "merged_at": "2019-10-23T16:45:23Z",
  "merge_commit_sha": "b5ffa9f3dbff7dd008d4d00a88590d411ef991f2",
  "assignee": null,
  "assignees": [],
  "requested_reviewers": [],
  "requested_teams": [],
  "labels": [
    {
      "id": 62963516,
      "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
      "name": "Tests",
      "color": "d4c5f9",
      "default": false,
      "description": null
    },
    {
      "id": 1482182044,
      "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
      "name": "Descriptors",
      "color": "e9f76c",
      "default": false,
      "description": ""
    }
  ],
  "milestone": null,
  "draft": false,
  "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17018/commits",
  "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17018/comments",
  "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}",
  "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17018/comments",
  "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b5ffa9f3dbff7dd008d4d00a88590d411ef991f2",
  "head": {
    "label": "practicalswift:descriptor_parse",
    "ref": "descriptor_parse",
    "sha": "b5ffa9f3dbff7dd008d4d00a88590d411ef991f2",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "repo": {
      "id": 78569642,
      "node_id": "MDEwOlJlcG9zaXRvcnk3ODU2OTY0Mg==",
      "name": "bitcoin",
      "full_name": "practicalswift/bitcoin",
      "private": false,
      "owner": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/practicalswift/bitcoin",
      "description": "Bitcoin Core integration/staging tree",
      "fork": true,
      "url": "https://api.github.com/repos/practicalswift/bitcoin",
      "forks_url": "https://api.github.com/repos/practicalswift/bitcoin/forks",
      "keys_url": "https://api.github.com/repos/practicalswift/bitcoin/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/practicalswift/bitcoin/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/practicalswift/bitcoin/teams",
      "hooks_url": "https://api.github.com/repos/practicalswift/bitcoin/hooks",
      "issue_events_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/events{/number}",
      "events_url": "https://api.github.com/repos/practicalswift/bitcoin/events",
      "assignees_url": "https://api.github.com/repos/practicalswift/bitcoin/assignees{/user}",
      "branches_url": "https://api.github.com/repos/practicalswift/bitcoin/branches{/branch}",
      "tags_url": "https://api.github.com/repos/practicalswift/bitcoin/tags",
      "blobs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/practicalswift/bitcoin/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/practicalswift/bitcoin/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/practicalswift/bitcoin/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/practicalswift/bitcoin/languages",
      "stargazers_url": "https://api.github.com/repos/practicalswift/bitcoin/stargazers",
      "contributors_url": "https://api.github.com/repos/practicalswift/bitcoin/contributors",
      "subscribers_url": "https://api.github.com/repos/practicalswift/bitcoin/subscribers",
      "subscription_url": "https://api.github.com/repos/practicalswift/bitcoin/subscription",
      "commits_url": "https://api.github.com/repos/practicalswift/bitcoin/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/practicalswift/bitcoin/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/practicalswift/bitcoin/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/practicalswift/bitcoin/contents/{+path}",
      "compare_url": "https://api.github.com/repos/practicalswift/bitcoin/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/practicalswift/bitcoin/merges",
      "archive_url": "https://api.github.com/repos/practicalswift/bitcoin/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/practicalswift/bitcoin/downloads",
      "issues_url": "https://api.github.com/repos/practicalswift/bitcoin/issues{/number}",
      "pulls_url": "https://api.github.com/repos/practicalswift/bitcoin/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/practicalswift/bitcoin/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/practicalswift/bitcoin/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/practicalswift/bitcoin/labels{/name}",
      "releases_url": "https://api.github.com/repos/practicalswift/bitcoin/releases{/id}",
      "deployments_url": "https://api.github.com/repos/practicalswift/bitcoin/deployments",
      "created_at": "2017-01-10T20:09:24Z",
      "updated_at": "2021-04-26T14:37:37Z",
      "pushed_at": "2021-10-01T13:54:08Z",
      "git_url": "git://github.com/practicalswift/bitcoin.git",
      "ssh_url": "git@github.com:practicalswift/bitcoin.git",
      "clone_url": "https://github.com/practicalswift/bitcoin.git",
      "svn_url": "https://github.com/practicalswift/bitcoin",
      "homepage": "https://bitcoin.org/en/download",
      "size": 164685,
      "stargazers_count": 4,
      "watchers_count": 4,
      "language": "C++",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": false,
      "has_wiki": false,
      "has_pages": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 4,
      "default_branch": "master"
    }
  },
  "base": {
    "label": "bitcoin:master",
    "ref": "master",
    "sha": "a884b32854965a6990ef8d8ecccccd91736e0dca",
    "user": {
      "login": "bitcoin",
      "id": 528860,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitcoin",
      "html_url": "https://github.com/bitcoin",
      "followers_url": "https://api.github.com/users/bitcoin/followers",
      "following_url": "https://api.github.com/users/bitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/bitcoin/orgs",
      "repos_url": "https://api.github.com/users/bitcoin/repos",
      "events_url": "https://api.github.com/users/bitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitcoin/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "repo": {
      "id": 1181927,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
      "name": "bitcoin",
      "full_name": "bitcoin/bitcoin",
      "private": false,
      "owner": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitcoin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin",
      "description": "Bitcoin Core integration/staging tree",
      "fork": false,
      "url": "https://api.github.com/repos/bitcoin/bitcoin",
      "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
      "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
      "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
      "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events{/number}",
      "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
      "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees{/user}",
      "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches{/branch}",
      "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
      "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
      "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
      "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
      "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
      "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
      "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/{+path}",
      "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
      "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
      "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues{/number}",
      "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels{/name}",
      "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases{/id}",
      "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
      "created_at": "2010-12-19T15:16:43Z",
      "updated_at": "2021-12-02T09:59:34Z",
      "pushed_at": "2021-12-02T09:35:21Z",
      "git_url": "git://github.com/bitcoin/bitcoin.git",
      "ssh_url": "git@github.com:bitcoin/bitcoin.git",
      "clone_url": "https://github.com/bitcoin/bitcoin.git",
      "svn_url": "https://github.com/bitcoin/bitcoin",
      "homepage": "https://bitcoincore.org/en/download",
      "size": 188203,
      "stargazers_count": 59736,
      "watchers_count": 59736,
      "language": "C++",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": false,
      "has_wiki": false,
      "has_pages": false,
      "forks_count": 30710,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 1020,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "topics": [
        "bitcoin",
        "c-plus-plus",
        "cryptocurrency",
        "cryptography",
        "p2p"
      ],
      "visibility": "public",
      "forks": 30710,
      "open_issues": 1020,
      "watchers": 59736,
      "default_branch": "master"
    }
  },
  "_links": {
    "self": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17018"
    },
    "html": {
      "href": "https://github.com/bitcoin/bitcoin/pull/17018"
    },
    "issue": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/issues/17018"
    },
    "comments": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/issues/17018/comments"
    },
    "review_comments": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17018/comments"
    },
    "review_comment": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}"
    },
    "commits": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17018/commits"
    },
    "statuses": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b5ffa9f3dbff7dd008d4d00a88590d411ef991f2"
    }
  },
  "author_association": "CONTRIBUTOR",
  "auto_merge": null,
  "active_lock_reason": null,
  "merged": true,
  "mergeable": null,
  "rebaseable": null,
  "mergeable_state": "unknown",
  "merged_by": {
    "login": "MarcoFalke",
    "id": 6399679,
    "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MarcoFalke",
    "html_url": "https://github.com/MarcoFalke",
    "followers_url": "https://api.github.com/users/MarcoFalke/followers",
    "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
    "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
    "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
    "repos_url": "https://api.github.com/users/MarcoFalke/repos",
    "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
    "type": "User",
    "site_admin": false
  },
  "comments": 3,
  "review_comments": 8,
  "maintainer_can_modify": false,
  "commits": 2,
  "additions": 33,
  "deletions": 2,
  "changed_files": 4
}