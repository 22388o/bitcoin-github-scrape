[
  {
    "sha": "ab07866c8dbe33f38d6a02884be15e615f078b5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjA3ODY2YzhkYmUzM2YzOGQ2YTAyODg0YmUxNWU2MTVmMDc4YjVh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-02-05T10:53:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-02-06T17:13:01Z"
      },
      "message": "Restructure credit transaction decomposition (solves issue #689)\n\nWhen a transaction has multiple outputs that go to the wallet, list these\nas multiple transactions in the UI. This is also applied to generated\n(coinbase) transactions. Also makes the code shorter and easier\nto understand.",
      "tree": {
        "sha": "497d8fc31fdc97a10f09d8ca50ceb0dc91577e8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/497d8fc31fdc97a10f09d8ca50ceb0dc91577e8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab07866c8dbe33f38d6a02884be15e615f078b5a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab07866c8dbe33f38d6a02884be15e615f078b5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab07866c8dbe33f38d6a02884be15e615f078b5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab07866c8dbe33f38d6a02884be15e615f078b5a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f69b82e78a16ea2ab124663414e6b2902b1b05e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f69b82e78a16ea2ab124663414e6b2902b1b05e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f69b82e78a16ea2ab124663414e6b2902b1b05e0"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 23,
      "deletions": 37
    },
    "files": [
      {
        "sha": "57210dcc0241956d1ea0e4cf7cff917394467f85",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 37,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab07866c8dbe33f38d6a02884be15e615f078b5a/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab07866c8dbe33f38d6a02884be15e615f078b5a/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=ab07866c8dbe33f38d6a02884be15e615f078b5a",
        "patch": "@@ -47,49 +47,35 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n             //\n             // Credit\n             //\n-            TransactionRecord sub(hash, nTime);\n-\n-            sub.credit = nNet;\n-\n-            if (wtx.IsCoinBase())\n-            {\n-                // Generated\n-                sub.type = TransactionRecord::Generated;\n-\n-                if (nCredit == 0)\n-                {\n-                    int64 nUnmatured = 0;\n-                    BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-                        nUnmatured += wallet->GetCredit(txout);\n-                    sub.credit = nUnmatured;\n-                }\n-            }\n-            else\n+            BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n             {\n-                bool foundAddress = false;\n-                // Received by Bitcoin Address\n-                BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n+                if(wallet->IsMine(txout))\n                 {\n-                    if(wallet->IsMine(txout))\n+                    TransactionRecord sub(hash, nTime);\n+                    CBitcoinAddress address;\n+                    sub.idx = parts.size(); // sequence number\n+                    sub.credit = txout.nValue;\n+                    if (wtx.IsCoinBase())\n                     {\n-                        CBitcoinAddress address;\n-                        if (ExtractAddress(txout.scriptPubKey, address) && wallet->HaveKey(address))\n-                        {\n-                            sub.type = TransactionRecord::RecvWithAddress;\n-                            sub.address = address.ToString();\n-                            foundAddress = true;\n-                            break;\n-                        }\n+                        // Generated\n+                        sub.type = TransactionRecord::Generated;\n                     }\n-                }\n-                if(!foundAddress)\n-                {\n-                    // Received by IP connection, or other non-address transaction like OP_EVAL\n-                    sub.type = TransactionRecord::RecvFromOther;\n-                    sub.address = mapValue[\"from\"];\n+                    else if (ExtractAddress(txout.scriptPubKey, address) && wallet->HaveKey(address))\n+                    {\n+                        // Received by Bitcoin Address\n+                        sub.type = TransactionRecord::RecvWithAddress;\n+                        sub.address = address.ToString();\n+                    }\n+                    else\n+                    {\n+                        // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n+                        sub.type = TransactionRecord::RecvFromOther;\n+                        sub.address = mapValue[\"from\"];\n+                    }\n+\n+                    parts.append(sub);\n                 }\n             }\n-            parts.append(sub);\n         }\n         else\n         {"
      }
    ]
  }
]