amitiuttarwar,2020-12-26 17:51:42,"hi @jadijadi, welcome to the project! \n\nif a PR gets merged, the commits get preserved in the history on master. here, it looks like the first commit introduces an extraneous change that gets removed in the second commit. please squash them so there are just relevant changes. ",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-751379624,751379624,
jadijadi,2020-12-27 06:55:27,"> hi @jadijadi, welcome to the project!\n> \n> if a PR gets merged, the commits get preserved in the history on master. here, it looks like the first commit introduces an extraneous change that gets removed in the second commit. please squash them so there are just relevant changes.\n\nThanks @amitiuttarwar for the welcome, help and being this patient with newcomers :) squashed them into one. ",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-751433712,751433712,
Rspigler,2020-12-27 23:32:04,"Concept ACK.\n\nThis would fix https://github.com/bitcoin/bitcoin/issues/20657",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-751528778,751528778,
jadijadi,2021-01-02 16:04:29,"> Concept ACK.\n> \n> This would fix #20657\n\nThanks for initial ACK. but based on the comment from @vasild I updated the PR for a more UNIXish behavior: refusing to start with incompatible inputs.",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-753490796,753490796,
jadijadi,2021-01-06 14:18:23,"> Concept ACK, but this needs changes to `InitParameterInteraction` to handle `-connect` and `-proxy` cleanly (perhaps if `-listenonion` is explicitly set true, soft-set `-listen` true also, as with `-bind` at the top?).\n\nThanks @luke-jr  for the ACK and suggestion. In the initial PR, I was doing this in InitParameterInteraction as you said. But after above discussions, others suggested to do ",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-755324442,755324442,
vasild,2021-01-14 10:25:19,"b743feca5bcbdf95ac4993c7b371d05ef1324d99 looks good. The commit message and PR description need to be updated because they refer to the previous incarnation of this PR where it enforced `listenonion=0`.\n\nIt works as expected:\n\n```\n$ bitcoind -listen=0\nInitParameterInteraction: parameter interaction: -listen=0 -> setting -listenonion=0\n\n$ bitcoind -listen=0 -listenonion=1\nError: C",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-760104366,760104366,
jadijadi,2021-03-16 16:09:38,"> ACK [b743fec](https://github.com/bitcoin/bitcoin/commit/b743feca5bcbdf95ac4993c7b371d05ef1324d99), Tested on macOS 11.2\n> \n> ...\n> ```\n> net: do not advertise address where nobody is listening\n> ```\n\nThanks for the hints. I've updated the PR with the suggested commit message",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-800396891,800396891,
prayank23,2021-03-17 00:26:28,"Compiled successfully for Windows using the instructions mentioned here: https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md\n\n1 test failed and this is what I see in logs: \n\n![image](https://user-images.githubusercontent.com/13405205/111396568-5d8bae00-86e5-11eb-955b-558d25b54819.png)\n",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-800702795,800702795,
vasild,2021-08-20 10:28:32,">     * I'm wondering if any other conflicts should similarly cause a failure-to-start instead of quietly failing, eg `-discover`, `i2pacceptincoming`\n\nIf `-listen=0` is given and `-i2pacceptincoming=...` is not given, then the default of the latter is flipped from `1` to `0`. If both are explicitly set: `-listen=0 -i2pacceptincoming=1` then it works as instructed - no binding/listening on loc",https://github.com/bitcoin/bitcoin/pull/20769#issuecomment-902597268,902597268,
prusnak,2020-12-26 11:39:07,This line does not look like it belongs to this PR,https://github.com/bitcoin/bitcoin/pull/20769#discussion_r548974084,548974084,src/init.cpp
jadijadi,2020-12-26 11:50:38,no. what is this? my mistake on copy paste from another check. sorry. ,https://github.com/bitcoin/bitcoin/pull/20769#discussion_r548975052,548975052,src/init.cpp
jadijadi,2020-12-26 12:05:44,removed this line,https://github.com/bitcoin/bitcoin/pull/20769#discussion_r548976248,548976248,src/init.cpp
vasild,2020-12-28 10:56:16,"The rest of `InitParameterInteraction()` uses `SoftSetBoolArg()` which I guess is to avoid overriding a value that has been explicitly set by the user. `InitParameterInteraction()` only flips defaults. I think this behavior is sensible as it minimizes the user's surprise.\n\nThere is some [other code](https://github.com/bitcoin/bitcoin/blob/ddbf7a6f5051b6d7faed54828445d6eaadcd8441/src/init.cpp#L",https://github.com/bitcoin/bitcoin/pull/20769#discussion_r549304762,549304762,src/init.cpp
vasild,2020-12-28 11:01:08,"nit on the commit message: I think it is more common to put ""fixes #20657"" at the bottom of the commit message on a line of its own, rather than inside the first line. But feel free to ignore this.",https://github.com/bitcoin/bitcoin/pull/20769#discussion_r549306193,549306193,src/init.cpp
Rspigler,2020-12-30 23:07:16,I think refusing to start (with an error message?) over changing what the user has set is better,https://github.com/bitcoin/bitcoin/pull/20769#discussion_r550352028,550352028,src/init.cpp
jadijadi,2020-12-31 07:38:50,Agree with you guys. Will update the PR to refuse the start instead of changing the explicitly set parameter.,https://github.com/bitcoin/bitcoin/pull/20769#discussion_r550419139,550419139,src/init.cpp
jadijadi,2021-01-02 16:02:36,"> I think refusing to start (with an error message?) over changing what the user has set is better\n\nI've sent a new PR with this behavior. Refusing to start looks more UNIXish. ",https://github.com/bitcoin/bitcoin/pull/20769#discussion_r550894899,550894899,src/init.cpp
jadijadi,2021-01-02 16:03:12,"> The rest of `InitParameterInteraction()` uses `SoftSetBoolArg()` which I guess is to avoid overriding a value that has been explicitly set by the user. `InitParameterInteraction()` only flips defaults. I think this behavior is sensible as it minimizes the user's surprise.\n> \n> There is some [other code](https://github.com/bitcoin/bitcoin/blob/ddbf7a6f5051b6d7faed54828445d6eaadcd8441/src/init",https://github.com/bitcoin/bitcoin/pull/20769#discussion_r550894937,550894937,src/init.cpp
jadijadi,2021-03-16 16:04:33,moved it to the bottom. thanks for the hint,https://github.com/bitcoin/bitcoin/pull/20769#discussion_r595315212,595315212,src/init.cpp
