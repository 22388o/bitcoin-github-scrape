[
  {
    "sha": "6866dad58074711a8fe31fcc565bc97ab36c8505",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODY2ZGFkNTgwNzQ3MTFhOGZlMzFmY2M1NjViYzk3YWIzNmM4NTA1",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-04-26T08:36:34Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-07-28T12:20:56Z"
      },
      "message": "extend core proxy options and handling\n\n- rework the proxy handling in init to cover more cases and work more\n  thoroughly\n- add -proxy6 to allow setting a separate SOCKS5 proxy to reach peers via\n  IPv6\n- rework proxy data-structures to allow recognition of the default proxy\n  (-proxy) to give users the ability to see, which proxy (IPv6 / Tor) is\n  derived from the default proxy and which was explicitly set\n- extend RPC call getnetwork info\n- remove unneeded (int) casts before CLIENT_VERSION and PROTOCOL_VERSION\n  in getinfo and getnetworkinfo RPC calls",
      "tree": {
        "sha": "bf4b30ad095a3e697114cce00c6fc4368d012046",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf4b30ad095a3e697114cce00c6fc4368d012046"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6866dad58074711a8fe31fcc565bc97ab36c8505",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6866dad58074711a8fe31fcc565bc97ab36c8505",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6866dad58074711a8fe31fcc565bc97ab36c8505",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6866dad58074711a8fe31fcc565bc97ab36c8505/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c5eabde9ea04f13f4e35b22452484e66ba9c3dcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5eabde9ea04f13f4e35b22452484e66ba9c3dcb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5eabde9ea04f13f4e35b22452484e66ba9c3dcb"
      }
    ],
    "stats": {
      "total": 179,
      "additions": 113,
      "deletions": 66
    },
    "files": [
      {
        "sha": "5052104650be869b81909960c6cfc57c2a669671",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 29,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6866dad58074711a8fe31fcc565bc97ab36c8505/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6866dad58074711a8fe31fcc565bc97ab36c8505/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6866dad58074711a8fe31fcc565bc97ab36c8505",
        "patch": "@@ -231,7 +231,6 @@ std::string HelpMessage(HelpMessageMode mode)\n #endif\n     strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n \n-\n     strUsage += \"\\n\" + _(\"Connection options:\") + \"\\n\";\n     strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n     strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n@@ -251,6 +250,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -permitbaremultisig    \" + _(\"Relay non-P2SH multisig (default: 1)\") + \"\\n\";\n     strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n     strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS5 proxy\") + \"\\n\";\n+    strUsage += \"  -proxy6=<ip:port>      \" + _(\"Use separate SOCKS5 proxy to reach peers via IPv6 (default: -proxy)\") + \"\\n\";\n     strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n     strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n #ifdef USE_UPNP\n@@ -454,6 +454,30 @@ bool InitSanityCheck(void)\n     return true;\n }\n \n+/** Initialize proxy servers\n+ *  Check proxies and (if they are valid) set them to be used by the client\n+ */\n+bool ProxyInit(Network net, const std::string& strArg, bool fIsDefault)\n+{\n+    // if network is not limited and -no{proxy/proxy6/onion} was NOT specified\n+    if (!IsLimited(net) && (GetArg(strArg, \"0\") != \"0\")) {\n+        CService addrProxy = CService(mapArgs[strArg], 9050);\n+\n+        // try to set address as proxy\n+        if (!SetProxy(net, addrProxy, fIsDefault))\n+            return InitError(strprintf(_(\"Invalid proxy address '%s' for: %s\"), mapArgs[strArg], strArg));\n+        // special-case Tor, which needs to be set as reachable manually\n+        if (net == NET_TOR)\n+            SetReachable(NET_TOR);\n+\n+        // everything ok\n+        return true;\n+    }\n+\n+    // prerequisites failed (no error for default proxy)\n+    return fIsDefault;\n+}\n+\n /** Initialize bitcoin.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n@@ -801,34 +825,22 @@ bool AppInit2(boost::thread_group& threadGroup)\n         }\n     }\n \n-    CService addrProxy;\n-    bool fProxy = false;\n-    if (mapArgs.count(\"-proxy\")) {\n-        addrProxy = CService(mapArgs[\"-proxy\"], 9050);\n-        if (!addrProxy.IsValid())\n-            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), mapArgs[\"-proxy\"]));\n-\n-        if (!IsLimited(NET_IPV4))\n-            SetProxy(NET_IPV4, addrProxy);\n-        if (!IsLimited(NET_IPV6))\n-            SetProxy(NET_IPV6, addrProxy);\n-        SetNameProxy(addrProxy);\n-        fProxy = true;\n-    }\n-\n-    // -onion can override normal proxy, -noonion disables tor entirely\n-    if (!(mapArgs.count(\"-onion\") && mapArgs[\"-onion\"] == \"0\") &&\n-        (fProxy || mapArgs.count(\"-onion\"))) {\n-        CService addrOnion;\n-        if (!mapArgs.count(\"-onion\"))\n-            addrOnion = addrProxy;\n-        else\n-            addrOnion = CService(mapArgs[\"-onion\"], 9050);\n-        if (!addrOnion.IsValid())\n-            return InitError(strprintf(_(\"Invalid -onion address: '%s'\"), mapArgs[\"-onion\"]));\n-        SetProxy(NET_TOR, addrOnion);\n-        SetReachable(NET_TOR);\n-    }\n+    // check for presence of default proxy to reach peers via IPv4\n+    if (!ProxyInit(NET_IPV4, \"-proxy\", true))\n+        return false; // errors with default proxy lead to exit\n+    // enable outgoing IPv6/Tor connections for default proxy (if no separate SOCKS5 proxy for IPv6/Tor will be used)\n+    if (!ProxyInit(NET_IPV6, \"-proxy6\", false))\n+        if (!ProxyInit(NET_IPV6, \"-proxy\", true))\n+            return false;  // errors with default proxy lead to exit\n+    if (!ProxyInit(NET_TOR, \"-onion\", false))\n+        if (!ProxyInit(NET_TOR, \"-proxy\", true))\n+            return false;  // errors with default proxy lead to exit\n+\n+        // if -noproxy was not specified\n+        if (GetArg(\"-proxy\", \"0\") != \"0\")\n+            // setup default name proxy and exit on error\n+            if (!SetNameProxy(CService(mapArgs[\"-proxy\"], 9050)))\n+                return InitError(strprintf(_(\"Invalid name proxy address '%s' for: -proxy\"), mapArgs[\"-proxy\"].c_str()));\n \n     // see Step 2: parameter interactions for more information about these\n     fListen = GetBoolArg(\"-listen\", DEFAULT_LISTEN);"
      },
      {
        "sha": "834f1d8fb18ae991767f3323e1a69e673244f361",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6866dad58074711a8fe31fcc565bc97ab36c8505/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6866dad58074711a8fe31fcc565bc97ab36c8505/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=6866dad58074711a8fe31fcc565bc97ab36c8505",
        "patch": "@@ -406,19 +406,22 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     return true;\n }\n \n-bool SetProxy(enum Network net, CService addrProxy) {\n+bool SetProxy(enum Network net, CService addrProxy, bool fIsDefault)\n+{\n     assert(net >= 0 && net < NET_MAX);\n     if (!addrProxy.IsValid())\n         return false;\n     LOCK(cs_proxyInfos);\n-    proxyInfo[net] = addrProxy;\n+    proxyInfo[net].addrProxy = addrProxy;\n+    proxyInfo[net].fIsDefault = fIsDefault;\n     return true;\n }\n \n-bool GetProxy(enum Network net, proxyType &proxyInfoOut) {\n+bool GetProxy(enum Network net, proxyType &proxyInfoOut)\n+{\n     assert(net >= 0 && net < NET_MAX);\n     LOCK(cs_proxyInfos);\n-    if (!proxyInfo[net].IsValid())\n+    if (!proxyInfo[net].addrProxy.IsValid())\n         return false;\n     proxyInfoOut = proxyInfo[net];\n     return true;\n@@ -445,10 +448,11 @@ bool HaveNameProxy() {\n     return nameProxy.IsValid();\n }\n \n-bool IsProxy(const CNetAddr &addr) {\n+bool IsProxy(const CNetAddr &addr)\n+{\n     LOCK(cs_proxyInfos);\n     for (int i = 0; i < NET_MAX; i++) {\n-        if (addr == (CNetAddr)proxyInfo[i])\n+        if (addr == (CNetAddr)proxyInfo[i].addrProxy)\n             return true;\n     }\n     return false;\n@@ -464,7 +468,7 @@ bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout)\n     SOCKET hSocket = INVALID_SOCKET;\n \n     // first connect to proxy server\n-    if (!ConnectSocketDirectly(proxy, hSocket, nTimeout))\n+    if (!ConnectSocketDirectly(proxy.addrProxy, hSocket, nTimeout))\n         return false;\n     // do socks negotiation\n     if (!Socks5(addrDest.ToStringIP(), addrDest.GetPort(), hSocket))"
      },
      {
        "sha": "d9a6a14967166dd93510808cb96241dae8ab6b6f",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6866dad58074711a8fe31fcc565bc97ab36c8505/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6866dad58074711a8fe31fcc565bc97ab36c8505/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=6866dad58074711a8fe31fcc565bc97ab36c8505",
        "patch": "@@ -161,11 +161,14 @@ class CService : public CNetAddr\n             )\n };\n \n-typedef CService proxyType;\n+typedef struct proxyType {\n+    CService addrProxy;\n+    bool fIsDefault;\n+} proxyType;\n \n enum Network ParseNetwork(std::string net);\n void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n-bool SetProxy(enum Network net, CService addrProxy);\n+bool SetProxy(enum Network net, CService addrProxy, bool fIsDefault);\n bool GetProxy(enum Network net, proxyType &proxyInfoOut);\n bool IsProxy(const CNetAddr &addr);\n bool SetNameProxy(CService addrProxy);"
      },
      {
        "sha": "296e32a288a9e07ad46ddbb8e9f3c9239d5124e6",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6866dad58074711a8fe31fcc565bc97ab36c8505/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6866dad58074711a8fe31fcc565bc97ab36c8505/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=6866dad58074711a8fe31fcc565bc97ab36c8505",
        "patch": "@@ -365,8 +365,8 @@ bool OptionsModel::getProxySettings(QNetworkProxy& proxy) const\n     proxyType curProxy;\n     if (GetProxy(NET_IPV4, curProxy)) {\n         proxy.setType(QNetworkProxy::Socks5Proxy);\n-        proxy.setHostName(QString::fromStdString(curProxy.ToStringIP()));\n-        proxy.setPort(curProxy.GetPort());\n+        proxy.setHostName(QString::fromStdString(curProxy.addrProxy.ToStringIP()));\n+        proxy.setPort(curProxy.addrProxy.GetPort());\n \n         return true;\n     }"
      },
      {
        "sha": "30de7c58bb322d3b65a476dd68dbba3e8b6b842e",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6866dad58074711a8fe31fcc565bc97ab36c8505/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6866dad58074711a8fe31fcc565bc97ab36c8505/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=6866dad58074711a8fe31fcc565bc97ab36c8505",
        "patch": "@@ -61,8 +61,8 @@ Value getinfo(const Array& params, bool fHelp)\n     GetProxy(NET_IPV4, proxy);\n \n     Object obj;\n-    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n-    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+    obj.push_back(Pair(\"version\", CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\", PROTOCOL_VERSION));\n #ifdef ENABLE_WALLET\n     if (pwalletMain) {\n         obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n@@ -72,7 +72,7 @@ Value getinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"proxy\",         (proxy.addrProxy.IsValid() ? proxy.addrProxy.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       Params().NetworkID() == CBaseChainParams::TESTNET));\n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "cb5979c1f05d5c76781099b539965324b7252366",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 23,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6866dad58074711a8fe31fcc565bc97ab36c8505/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6866dad58074711a8fe31fcc565bc97ab36c8505/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=6866dad58074711a8fe31fcc565bc97ab36c8505",
        "patch": "@@ -345,36 +345,53 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n             \"getnetworkinfo\\n\"\n             \"Returns an object containing various state info regarding P2P networking.\\n\"\n             \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n-            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n-            \"  \\\"localservices\\\": \\\"xxxxxxxxxxxxxxxx\\\",   (string) the services we offer to the network\\n\"\n-            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n-            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n-            \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for non-free transactions in btc/kb\\n\"\n-            \"  \\\"localaddresses\\\": [,        (array) list of local addresses\\n\"\n-            \"    \\\"address\\\": \\\"xxxx\\\",      (string) network address\\n\"\n-            \"    \\\"port\\\": xxx,              (numeric) network port\\n\"\n-            \"    \\\"score\\\": xxx              (numeric) relative score\\n\"\n-            \"  ]\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"version\\\": xxxxx,                        (numeric) the server version\\n\"\n+            \"    \\\"protocolversion\\\": xxxxx,                (numeric) the protocol version\\n\"\n+            \"    \\\"localservices\\\": \\\"xxxxxxxxxxxxxxxx\\\",   (string) the services we offer to the network\\n\"\n+            \"    \\\"timeoffset\\\": xxxxx,                     (numeric) the time offset\\n\"\n+            \"    \\\"connections\\\": xxxxx                     (numeric) the number of connections\\n\"\n+            \"    \\\"relayfee\\\": x.xxxx,                      (numeric) minimum relay fee for non-free transactions in btc/kb\\n\"\n+            \"    \\\"localaddresses\\\": [                      (array) list of local addresses\\n\"\n+            \"    {\\n\"\n+            \"      \\\"address\\\": \\\"xxxx\\\",                   (string) network address\\n\"\n+            \"      \\\"port\\\": xxx,                           (numeric) network port\\n\"\n+            \"      \\\"score\\\": xxx                           (numeric) relative score\\n\"\n+            \"    }\\n\"\n+            \"    ,...\\n\"\n+            \"    ]\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"proxy-default\\\": \\\"host:port\\\",          (string, optional) the default socks5 proxy used by the server\\n\"\n+            \"    \\\"proxy-ipv6\\\": \\\"host:port\\\",             (string, optional) the socks5 proxy for reaching peers via ipv6\\n\"\n+            \"    \\\"proxy-ipv6-from-default\\\": true|false,   (boolean) is this proxy derived from default socks5 proxy server\\n\"\n+            \"    \\\"proxy-onion\\\": \\\"host:port\\\",            (string, optional) the socks5 proxy for reaching peers via tor hidden services\\n\"\n+            \"    \\\"proxy-onion-from-default\\\": true|false   (boolean) is this proxy derived from default socks5 proxy server\\n\"\n+            \"  }\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getnetworkinfo\", \"\")\n             + HelpExampleRpc(\"getnetworkinfo\", \"\")\n         );\n \n-    proxyType proxy;\n-    GetProxy(NET_IPV4, proxy);\n+    // collect current proxy settings\n+    proxyType proxyIpv4;\n+    GetProxy(NET_IPV4, proxyIpv4);\n+    proxyType proxyIpv6;\n+    GetProxy(NET_IPV6, proxyIpv6);\n+    proxyType proxyTor;\n+    GetProxy(NET_TOR, proxyTor);\n+\n+    Array ret;\n \n     Object obj;\n-    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n-    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n-    obj.push_back(Pair(\"localservices\",       strprintf(\"%016x\", nLocalServices)));\n-    obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n-    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n+    obj.push_back(Pair(\"version\", CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\", PROTOCOL_VERSION));\n+    obj.push_back(Pair(\"localservices\", strprintf(\"%016x\", nLocalServices)));\n+    obj.push_back(Pair(\"timeoffset\", GetTimeOffset()));\n+    obj.push_back(Pair(\"connections\", (int)vNodes.size()));\n+    obj.push_back(Pair(\"relayfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n     Array localAddresses;\n     {\n         LOCK(cs_mapLocalHost);\n@@ -388,5 +405,16 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n         }\n     }\n     obj.push_back(Pair(\"localaddresses\", localAddresses));\n-    return obj;\n+\n+    Object proxy;\n+    proxy.push_back(Pair(\"proxy-default\", proxyIpv4.addrProxy.IsValid() ? proxyIpv4.addrProxy.ToStringIPPort() : string()));\n+    proxy.push_back(Pair(\"proxy-ipv6\", proxyIpv6.addrProxy.IsValid() ? proxyIpv6.addrProxy.ToStringIPPort() : string()));\n+    proxy.push_back(Pair(\"proxy-ipv6-from-default\", proxyIpv6.fIsDefault));\n+    proxy.push_back(Pair(\"proxy-onion\", proxyTor.addrProxy.IsValid() ? proxyTor.addrProxy.ToStringIPPort() : string()));\n+    proxy.push_back(Pair(\"proxy-onion-from-default\", proxyTor.fIsDefault));\n+\n+    ret.push_back(obj);\n+    ret.push_back(proxy);\n+\n+    return ret;\n }"
      }
    ]
  },
  {
    "sha": "1cf91e264ae115f598caf12a24f54fb24f9fb25a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2Y5MWUyNjRhZTExNWY1OThjYWYxMmEyNGY1NGZiMjRmOWZiMjVh",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-07-19T18:26:33Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-07-28T12:20:57Z"
      },
      "message": "remove nameproxy, as SOCKS5 proxies support name resolution",
      "tree": {
        "sha": "75595494274b37698f4cbe4a41c1702c8f5c30db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75595494274b37698f4cbe4a41c1702c8f5c30db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cf91e264ae115f598caf12a24f54fb24f9fb25a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cf91e264ae115f598caf12a24f54fb24f9fb25a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1cf91e264ae115f598caf12a24f54fb24f9fb25a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cf91e264ae115f598caf12a24f54fb24f9fb25a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6866dad58074711a8fe31fcc565bc97ab36c8505",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6866dad58074711a8fe31fcc565bc97ab36c8505",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6866dad58074711a8fe31fcc565bc97ab36c8505"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 12,
      "deletions": 36
    },
    "files": [
      {
        "sha": "94262d69fd9971e63325d711eedc8345ba2e2f1d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cf91e264ae115f598caf12a24f54fb24f9fb25a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cf91e264ae115f598caf12a24f54fb24f9fb25a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1cf91e264ae115f598caf12a24f54fb24f9fb25a",
        "patch": "@@ -836,12 +836,6 @@ bool AppInit2(boost::thread_group& threadGroup)\n         if (!ProxyInit(NET_TOR, \"-proxy\", true))\n             return false;  // errors with default proxy lead to exit\n \n-        // if -noproxy was not specified\n-        if (GetArg(\"-proxy\", \"0\") != \"0\")\n-            // setup default name proxy and exit on error\n-            if (!SetNameProxy(CService(mapArgs[\"-proxy\"], 9050)))\n-                return InitError(strprintf(_(\"Invalid name proxy address '%s' for: -proxy\"), mapArgs[\"-proxy\"].c_str()));\n-\n     // see Step 2: parameter interactions for more information about these\n     fListen = GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n     fDiscover = GetBoolArg(\"-discover\", true);"
      },
      {
        "sha": "71b322a140db0d60f42df19e3a1bf8af1e75bfab",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cf91e264ae115f598caf12a24f54fb24f9fb25a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cf91e264ae115f598caf12a24f54fb24f9fb25a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1cf91e264ae115f598caf12a24f54fb24f9fb25a",
        "patch": "@@ -1227,7 +1227,7 @@ void ThreadDNSAddressSeed()\n     LogPrintf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n \n     BOOST_FOREACH(const CDNSSeedData &seed, vSeeds) {\n-        if (HaveNameProxy()) {\n+        if (HaveProxy(NET_IPV4)) {\n             AddOneShot(seed.host);\n         } else {\n             vector<CNetAddr> vIPs;\n@@ -1397,7 +1397,7 @@ void ThreadOpenAddedConnections()\n         vAddedNodes = mapMultiArgs[\"-addnode\"];\n     }\n \n-    if (HaveNameProxy()) {\n+    if (HaveProxy(NET_IPV4)) {\n         while(true) {\n             list<string> lAddresses(0);\n             {"
      },
      {
        "sha": "41d1f4f07d8b828bc29f5b3e88a82e37e3011d09",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 26,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cf91e264ae115f598caf12a24f54fb24f9fb25a/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cf91e264ae115f598caf12a24f54fb24f9fb25a/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=1cf91e264ae115f598caf12a24f54fb24f9fb25a",
        "patch": "@@ -36,7 +36,6 @@ using namespace std;\n \n // Settings\n static proxyType proxyInfo[NET_MAX];\n-static CService nameProxy;\n static CCriticalSection cs_proxyInfos;\n int nConnectTimeout = 5000;\n bool fNameLookup = false;\n@@ -427,25 +426,10 @@ bool GetProxy(enum Network net, proxyType &proxyInfoOut)\n     return true;\n }\n \n-bool SetNameProxy(CService addrProxy) {\n-    if (!addrProxy.IsValid())\n-        return false;\n-    LOCK(cs_proxyInfos);\n-    nameProxy = addrProxy;\n-    return true;\n-}\n-\n-bool GetNameProxy(CService &nameProxyOut) {\n-    LOCK(cs_proxyInfos);\n-    if(!nameProxy.IsValid())\n-        return false;\n-    nameProxyOut = nameProxy;\n-    return true;\n-}\n-\n-bool HaveNameProxy() {\n+bool HaveProxy(enum Network net)\n+{\n     LOCK(cs_proxyInfos);\n-    return nameProxy.IsValid();\n+    return proxyInfo[net].addrProxy.IsValid();\n }\n \n bool IsProxy(const CNetAddr &addr)\n@@ -486,21 +470,20 @@ bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest\n \n     SOCKET hSocket = INVALID_SOCKET;\n \n-    CService nameProxy;\n-    GetNameProxy(nameProxy);\n-\n-    CService addrResolved(CNetAddr(strDest, fNameLookup && !HaveNameProxy()), port);\n+    CService addrResolved(CNetAddr(strDest, fNameLookup && !HaveProxy(NET_IPV4)), port);\n     if (addrResolved.IsValid()) {\n         addr = addrResolved;\n         return ConnectSocket(addr, hSocketRet, nTimeout);\n     }\n \n     addr = CService(\"0.0.0.0:0\");\n \n-    if (!HaveNameProxy())\n+    proxyType proxy;\n+    // get proxy used for name resolution\n+    if (!GetProxy(NET_IPV4, proxy))\n         return false;\n-    // first connect to name proxy server\n-    if (!ConnectSocketDirectly(nameProxy, hSocket, nTimeout))\n+    // first connect to proxy server\n+    if (!ConnectSocketDirectly(proxy.addrProxy, hSocket, nTimeout))\n         return false;\n     // do socks negotiation\n     if (!Socks5(strDest, (unsigned short)port, hSocket))"
      },
      {
        "sha": "1262fe5636ffdc15735981a0925d47f66817ad60",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cf91e264ae115f598caf12a24f54fb24f9fb25a/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cf91e264ae115f598caf12a24f54fb24f9fb25a/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=1cf91e264ae115f598caf12a24f54fb24f9fb25a",
        "patch": "@@ -170,9 +170,8 @@ enum Network ParseNetwork(std::string net);\n void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n bool SetProxy(enum Network net, CService addrProxy, bool fIsDefault);\n bool GetProxy(enum Network net, proxyType &proxyInfoOut);\n+bool HaveProxy(enum Network net);\n bool IsProxy(const CNetAddr &addr);\n-bool SetNameProxy(CService addrProxy);\n-bool HaveNameProxy();\n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0, bool fAllowLookup = true);\n bool Lookup(const char *pszName, CService& addr, int portDefault = 0, bool fAllowLookup = true);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault = 0, bool fAllowLookup = true, unsigned int nMaxSolutions = 0);"
      }
    ]
  },
  {
    "sha": "31a5646891a5a85358d1b78aaed4565c61dfbd0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWE1NjQ2ODkxYTVhODUzNThkMWI3OGFhZWQ0NTY1YzYxZGZiZDBj",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-07-28T12:27:07Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-07-28T12:39:42Z"
      },
      "message": "revert: add fIsDefault (squashme)",
      "tree": {
        "sha": "47b44f19dd9fd4b96ca47da10f650498985a26b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47b44f19dd9fd4b96ca47da10f650498985a26b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31a5646891a5a85358d1b78aaed4565c61dfbd0c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31a5646891a5a85358d1b78aaed4565c61dfbd0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31a5646891a5a85358d1b78aaed4565c61dfbd0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31a5646891a5a85358d1b78aaed4565c61dfbd0c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1cf91e264ae115f598caf12a24f54fb24f9fb25a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cf91e264ae115f598caf12a24f54fb24f9fb25a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1cf91e264ae115f598caf12a24f54fb24f9fb25a"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 19,
      "deletions": 23
    },
    "files": [
      {
        "sha": "f30d1464829c6cfe0217e12d5f657436c464825e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=31a5646891a5a85358d1b78aaed4565c61dfbd0c",
        "patch": "@@ -464,7 +464,7 @@ bool ProxyInit(Network net, const std::string& strArg, bool fIsDefault)\n         CService addrProxy = CService(mapArgs[strArg], 9050);\n \n         // try to set address as proxy\n-        if (!SetProxy(net, addrProxy, fIsDefault))\n+        if (!SetProxy(net, addrProxy))\n             return InitError(strprintf(_(\"Invalid proxy address '%s' for: %s\"), mapArgs[strArg], strArg));\n         // special-case Tor, which needs to be set as reachable manually\n         if (net == NET_TOR)\n@@ -474,7 +474,7 @@ bool ProxyInit(Network net, const std::string& strArg, bool fIsDefault)\n         return true;\n     }\n \n-    // prerequisites failed (no error for default proxy)\n+    // prerequisites failed (no error for -proxy)\n     return fIsDefault;\n }\n "
      },
      {
        "sha": "fd7e5d174c6097d7f359414a0e22ec27f80b9cb2",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=31a5646891a5a85358d1b78aaed4565c61dfbd0c",
        "patch": "@@ -405,22 +405,21 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     return true;\n }\n \n-bool SetProxy(enum Network net, CService addrProxy, bool fIsDefault)\n+bool SetProxy(enum Network net, CService addrProxy)\n {\n     assert(net >= 0 && net < NET_MAX);\n     if (!addrProxy.IsValid())\n         return false;\n     LOCK(cs_proxyInfos);\n-    proxyInfo[net].addrProxy = addrProxy;\n-    proxyInfo[net].fIsDefault = fIsDefault;\n+    proxyInfo[net] = addrProxy;\n     return true;\n }\n \n bool GetProxy(enum Network net, proxyType &proxyInfoOut)\n {\n     assert(net >= 0 && net < NET_MAX);\n     LOCK(cs_proxyInfos);\n-    if (!proxyInfo[net].addrProxy.IsValid())\n+    if (!proxyInfo[net].IsValid())\n         return false;\n     proxyInfoOut = proxyInfo[net];\n     return true;\n@@ -429,14 +428,14 @@ bool GetProxy(enum Network net, proxyType &proxyInfoOut)\n bool HaveProxy(enum Network net)\n {\n     LOCK(cs_proxyInfos);\n-    return proxyInfo[net].addrProxy.IsValid();\n+    return proxyInfo[net].IsValid();\n }\n \n bool IsProxy(const CNetAddr &addr)\n {\n     LOCK(cs_proxyInfos);\n     for (int i = 0; i < NET_MAX; i++) {\n-        if (addr == (CNetAddr)proxyInfo[i].addrProxy)\n+        if (addr == (CNetAddr)proxyInfo[i])\n             return true;\n     }\n     return false;\n@@ -452,7 +451,7 @@ bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout)\n     SOCKET hSocket = INVALID_SOCKET;\n \n     // first connect to proxy server\n-    if (!ConnectSocketDirectly(proxy.addrProxy, hSocket, nTimeout))\n+    if (!ConnectSocketDirectly(proxy, hSocket, nTimeout))\n         return false;\n     // do socks negotiation\n     if (!Socks5(addrDest.ToStringIP(), addrDest.GetPort(), hSocket))\n@@ -483,7 +482,7 @@ bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest\n     if (!GetProxy(NET_IPV4, proxy))\n         return false;\n     // first connect to proxy server\n-    if (!ConnectSocketDirectly(proxy.addrProxy, hSocket, nTimeout))\n+    if (!ConnectSocketDirectly(proxy, hSocket, nTimeout))\n         return false;\n     // do socks negotiation\n     if (!Socks5(strDest, (unsigned short)port, hSocket))"
      },
      {
        "sha": "5f14d48770128df81ea450be9ac559c82a3de5e6",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=31a5646891a5a85358d1b78aaed4565c61dfbd0c",
        "patch": "@@ -161,14 +161,11 @@ class CService : public CNetAddr\n             )\n };\n \n-typedef struct proxyType {\n-    CService addrProxy;\n-    bool fIsDefault;\n-} proxyType;\n+typedef CService proxyType;\n \n enum Network ParseNetwork(std::string net);\n void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n-bool SetProxy(enum Network net, CService addrProxy, bool fIsDefault);\n+bool SetProxy(enum Network net, CService addrProxy);\n bool GetProxy(enum Network net, proxyType &proxyInfoOut);\n bool HaveProxy(enum Network net);\n bool IsProxy(const CNetAddr &addr);"
      },
      {
        "sha": "f07e66bf04d8266b743e7d22852eba6da79dfdec",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=31a5646891a5a85358d1b78aaed4565c61dfbd0c",
        "patch": "@@ -365,8 +365,8 @@ bool OptionsModel::getProxySettings(QNetworkProxy& proxy) const\n     proxyType curProxy;\n     if (GetProxy(NET_IPV4, curProxy)) {\n         proxy.setType(QNetworkProxy::Socks5Proxy);\n-        proxy.setHostName(QString::fromStdString(curProxy.addrProxy.ToStringIP()));\n-        proxy.setPort(curProxy.addrProxy.GetPort());\n+        proxy.setHostName(QString::fromStdString(curProxy.ToStringIP()));\n+        proxy.setPort(curProxy.GetPort());\n \n         return true;\n     }"
      },
      {
        "sha": "74b82f4e6c678d852826a74f1196df8356d27b96",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=31a5646891a5a85358d1b78aaed4565c61dfbd0c",
        "patch": "@@ -72,7 +72,7 @@ Value getinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.addrProxy.IsValid() ? proxy.addrProxy.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       Params().NetworkID() == CBaseChainParams::TESTNET));\n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "0ea9c221520c8692ee631fa5c619b0a23071df67",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a5646891a5a85358d1b78aaed4565c61dfbd0c/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=31a5646891a5a85358d1b78aaed4565c61dfbd0c",
        "patch": "@@ -407,11 +407,11 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"localaddresses\", localAddresses));\n \n     Object proxy;\n-    proxy.push_back(Pair(\"proxy-default\", proxyIpv4.addrProxy.IsValid() ? proxyIpv4.addrProxy.ToStringIPPort() : string()));\n-    proxy.push_back(Pair(\"proxy-ipv6\", proxyIpv6.addrProxy.IsValid() ? proxyIpv6.addrProxy.ToStringIPPort() : string()));\n-    proxy.push_back(Pair(\"proxy-ipv6-from-default\", proxyIpv6.fIsDefault));\n-    proxy.push_back(Pair(\"proxy-onion\", proxyTor.addrProxy.IsValid() ? proxyTor.addrProxy.ToStringIPPort() : string()));\n-    proxy.push_back(Pair(\"proxy-onion-from-default\", proxyTor.fIsDefault));\n+    proxy.push_back(Pair(\"proxy-default\", proxyIpv4.IsValid() ? proxyIpv4.ToStringIPPort() : string()));\n+    proxy.push_back(Pair(\"proxy-ipv6\", proxyIpv6.IsValid() ? proxyIpv6.ToStringIPPort() : string()));\n+    proxy.push_back(Pair(\"proxy-ipv6-from-default\", proxyIpv6 == proxyIpv4));\n+    proxy.push_back(Pair(\"proxy-onion\", proxyTor.IsValid() ? proxyTor.ToStringIPPort() : string()));\n+    proxy.push_back(Pair(\"proxy-onion-from-default\", proxyTor == proxyIpv4));\n \n     ret.push_back(obj);\n     ret.push_back(proxy);"
      }
    ]
  },
  {
    "sha": "bb977eaccc5daeda5a05139f916fc4d00fe9f5ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjk3N2VhY2NjNWRhZWRhNWEwNTEzOWY5MTZmYzRkMDBmZTlmNWVm",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-07-28T12:52:28Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-07-28T12:52:28Z"
      },
      "message": "revert: add -proxy6 (squashme)",
      "tree": {
        "sha": "3688e9203ffce21fa901491f7c75f2951ae2fb59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3688e9203ffce21fa901491f7c75f2951ae2fb59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb977eaccc5daeda5a05139f916fc4d00fe9f5ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb977eaccc5daeda5a05139f916fc4d00fe9f5ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb977eaccc5daeda5a05139f916fc4d00fe9f5ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb977eaccc5daeda5a05139f916fc4d00fe9f5ef/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "31a5646891a5a85358d1b78aaed4565c61dfbd0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31a5646891a5a85358d1b78aaed4565c61dfbd0c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31a5646891a5a85358d1b78aaed4565c61dfbd0c"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b40d674d993614e0b134d5ef9633bc71ca505273",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb977eaccc5daeda5a05139f916fc4d00fe9f5ef/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb977eaccc5daeda5a05139f916fc4d00fe9f5ef/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=bb977eaccc5daeda5a05139f916fc4d00fe9f5ef",
        "patch": "@@ -250,7 +250,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -permitbaremultisig    \" + _(\"Relay non-P2SH multisig (default: 1)\") + \"\\n\";\n     strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n     strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS5 proxy\") + \"\\n\";\n-    strUsage += \"  -proxy6=<ip:port>      \" + _(\"Use separate SOCKS5 proxy to reach peers via IPv6 (default: -proxy)\") + \"\\n\";\n     strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n     strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n #ifdef USE_UPNP\n@@ -828,13 +827,13 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // check for presence of default proxy to reach peers via IPv4\n     if (!ProxyInit(NET_IPV4, \"-proxy\", true))\n         return false; // errors with default proxy lead to exit\n-    // enable outgoing IPv6/Tor connections for default proxy (if no separate SOCKS5 proxy for IPv6/Tor will be used)\n-    if (!ProxyInit(NET_IPV6, \"-proxy6\", false))\n-        if (!ProxyInit(NET_IPV6, \"-proxy\", true))\n-            return false;  // errors with default proxy lead to exit\n+    // enable outgoing IPv6 connections for default proxy\n+    if (!ProxyInit(NET_IPV6, \"-proxy\", true))\n+        return false; // errors with default proxy lead to exit\n+    // enable outgoing Tor connections for default proxy (if no separate SOCKS5 proxy for Tor will be used)\n     if (!ProxyInit(NET_TOR, \"-onion\", false))\n         if (!ProxyInit(NET_TOR, \"-proxy\", true))\n-            return false;  // errors with default proxy lead to exit\n+            return false; // errors with default proxy lead to exit\n \n     // see Step 2: parameter interactions for more information about these\n     fListen = GetBoolArg(\"-listen\", DEFAULT_LISTEN);"
      }
    ]
  }
]