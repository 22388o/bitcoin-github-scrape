Diapolo,2013-04-26T15:54:38Z,Removed some `.c_str()` which were unneeded.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-17082968,17082968,
Diapolo,2013-04-26T17:48:14Z,"I left out changes needed in optionsmodel.cpp, that's why build fails...\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-17089153,17089153,
Diapolo,2013-04-26T17:56:27Z,updated optionsmodel.cpp\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-17089621,17089621,
Diapolo,2013-04-27T17:04:38Z,"Use `GetArg(strArg, 0)` instead of `mapArgs.count(strArg) && !(mapArgs[strArg] == ""0"")`, thanks sipa :).\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-17119469,17119469,
Diapolo,2013-04-28T15:55:50Z,"Update name proxy setup to use `GetArg(""-proxy"", 0)`.\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-17136285,17136285,
Diapolo,2013-05-04T10:06:49Z,@sipa Further thoughts about this?\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-17430825,17430825,
gavinandresen,2013-06-20T16:21:01Z,"Needs a test plan to test all the combinations, then needs testers to, you know, actually test them all.\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-19764281,19764281,
Diapolo,2013-06-21T06:03:48Z,"@gavinandresen I'm fine with a test plan, as long as this has a real chance of getting merged. Is the code okay now or is ths not wanted anyway?\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-19799899,19799899,
Diapolo,2013-06-26T06:43:32Z,"Updated to include changes to `getinfo`. I have not yet had the time to work out a test-plan, but everyone, who helps testing is welcome anyway :).\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-20029697,20029697,
Diapolo,2013-08-17T23:30:25Z,Anyone willing to help me doing that test-plan stuff and/or check out if it works like it should :)?\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-22821740,22821740,
gmaxwell,2013-08-19T01:51:58Z,"I am the last guy who should be checking GUI changes, but I will gladly follow a test plan and report back on it. (Though I can only easily test Linux, and windows builds under wine).\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-22847156,22847156,
Diapolo,2013-08-19T05:33:43Z,"@gmaxwell I'm glad you are interested in helping me with this one. You currently don't need to start Bitcoin-Qt to do so, as this can be tested completely via bitcoind. The only Bitcoin-Qt change is to make it compatible with a changed datastructure.\n\nShould I start by listing possible combinations of all proxy switches and how they should behave?\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-22851767,22851767,
Diapolo,2013-08-26T09:21:56Z,"I'm going to describe the pull with some more details here.\n\nMost proxy-setup is now done using the new `ProxyInit()` function.\n\n`ProxyInit(Network net, const std::string& strArg, int nSocksVersion, bool fIsBase)` parameter description:\n`net` = network to setup proxy for (NET_IPV4, NET_IPV6 or NET_TOR)\n`strArg` = command-line argument to get values from (-proxy, -proxy6 or -tor)\n`nSocksVers",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-23252009,23252009,
Diapolo,2013-08-26T12:47:55Z,"base proxy = `-proxy`\nseparata IPv6 proxy = `-proxy6`\nseparate Tor proxy = `-tor`\n\nProxy initialisation flow (happens via `ProxyInit()`, just name proxy is special cased in the code):\n-try to setup base IPv4 proxy\n--if SOCKS4:\n---try to setup separate Tor proxy, on failure disable Tor via `SetLimited()` (SOCKS4 = no Tor support)\n---try to setup separate IPv6 proxy, on failure disable IPv6 ",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-23260013,23260013,
Diapolo,2013-08-26T12:50:57Z,"@gmaxwell Perhaps you could take a look at what I've written, if the current proxy handling of this pull sounds correct, before I start doing the test-plan.\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-23260171,23260171,
Diapolo,2013-10-06T12:52:10Z,Updated: Included suggestions from @sipa and introduced `getproxyinfo` and made `ProxyInit()` return `fBase`.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-25767583,25767583,
gavinandresen,2013-10-21T01:40:52Z,Still needs a test plan.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-26688611,26688611,
Diapolo,2013-11-16T02:17:13Z,Updated:\n- greatly improved `getproxyinfo` call\n- rename fIsBase to fIsDefault and call -proxy the default proxy instead of the base proxy\n- add some missing `#ifdef USE_IPV6` guards in the code\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-28617612,28617612,
Diapolo,2014-06-11T11:25:32Z,Damn `Error: Error: Disk space is low!`...\n\nI hope if we chose to remove SOCKS4 support this pull is much less complicated to test ;).\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-45729443,45729443,
laanwj,2014-06-25T09:24:45Z,"I'm tending toward NACK, as it over-complicates things and introduces options that are difficult to test.\n- No one is asking to use a special proxy server for IPv6 connections. To be honest I think it is overkill and IPv4/IPv6 can be lumped together proxy-wise.\n- There should be no changes to `getinfo`. It only exists or backwards compatibility: don't remove `proxy`.\n- `getproxyinfo` looks like",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-47078925,47078925,
Diapolo,2014-06-26T09:21:49Z,"@laanwj I removed the changes to `getinfo` as we decided to not touch this anymore and deprecate it. I'm also fine with not adding `getproxyinfo` but add it to `getnetworkinfo`.\n\nSo last point is `-proxy6`, which can be discussed and which I think is even not the main point of this pull. Main point is to have a better and more clear proxy init, which this achieves IMHO. Perhaps I just remove `-p",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-47204664,47204664,
Diapolo,2014-06-27T12:28:10Z,Removed `getproxyinfo` and extend `getnetworkinfo` instead.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-47337820,47337820,
Diapolo,2014-07-17T13:36:36Z,Updated to include the changes after the SOCKS4 support removal and made `proxy` a separate object in `getnetworkinfo`.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-49307095,49307095,
Diapolo,2014-07-19T18:30:12Z,"@laanwj Can you take another look please? I also removed nameproxy, can you check the second commit.\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-49519287,49519287,
laanwj,2014-07-24T14:42:34Z,"All in all this looks fine to me now, apart from above-mentioned remarks.\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-50027253,50027253,
cozz,2014-07-26T02:51:44Z,"Just an idea:\nOnly have -proxy, but allow it multiple times: -proxy=&lt;ip:port[:net]&gt;\nnet=IPv4, IPv6 or onion. Not specifying net means IPv4 and IPv6 (default).\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-50221318,50221318,
laanwj,2014-07-26T05:13:32Z,@cozz That's not more clear to me than the current scheme IMO. Let's not break backwards compatibility for no good reason.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-50223718,50223718,
BitcoinPullTester,2014-07-28T13:25:35Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p2575_bb977eaccc5daeda5a05139f916fc4d00fe9f5ef/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-50337196,50337196,
Diapolo,2014-07-30T07:55:16Z,"@laanwj If you can re-check the latest changes, I'm able to squash this into 2 commits and will rebase the GUI pull onto this.\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-50584860,50584860,
laanwj,2014-07-30T13:43:57Z,See #4605 for my take on the RPC changes. I've added some more information per network.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-50615670,50615670,
Diapolo,2014-08-04T08:55:00Z,@laanwj Did you close your nameproxy pull?\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-51032226,51032226,
laanwj,2014-08-04T09:24:40Z,"I never had it as pull, because I'm not sure how I want to handle that yet. I may submit it as pull as some point.\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-51034823,51034823,
Diapolo,2014-08-07T08:28:14Z,@laanwj If I remove the nameproxy changes are you fine with this then?\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-51444375,51444375,
laanwj,2014-08-12T18:06:59Z,@Diapolo Also the RPC changes can be removed (in favor of #4605) .So to just keep the initialization changes? I think that would be a good unit to split off.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-51953012,51953012,
Diapolo,2014-08-14T13:26:08Z,@laanwj I'll rework this when I'm back in a few days.\n,https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-52182345,52182345,
laanwj,2014-09-01T08:03:34Z,"Closing this one for now. This thread has gotten too 'messy'. If you intend to do a reworked version at some point that just changes initialization, I'd suggest opening a new pull.\n",https://github.com/bitcoin/bitcoin/pull/2575#issuecomment-54031884,54031884,
sipa,2013-04-26T12:04:05Z,Why convert strArg to a c_str() here?\n,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r3975617,3975617,src/init.cpp
Diapolo,2013-04-26T15:49:47Z,Perhaps because I didn't know I could use strArg here ^^. Will update of course.\n,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r3979230,3979230,src/init.cpp
sipa,2013-04-26T23:55:48Z,"Use ""GetArg(strArg)"" instead of ""!(mapArgs[strArg] == ""0"")"". Shorter and more flexible.\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r3987632,3987632,src/init.cpp
Diapolo,2013-04-27T15:35:22Z,"@sipa After looking at GetArg(), couldn't this all be replaced with:\n`if (!IsLimited(net) && GetArg(strArg, 0)) {`\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r3989384,3989384,src/init.cpp
sipa,2013-04-27T16:30:15Z,Indeed. I assumed the 0 was default.\n,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r3989469,3989469,src/init.cpp
Diapolo,2013-05-09T11:43:52Z,"@sipa I need some input on `GetArg(strArg, 0)`, which I added here because you suggested that earlier.\nI want to catch -noproxy or -proxy=0 here, but `GetArg(strArg, 0)` does more.\n\n-proxy=127.0.0.1 for example will also cause this to fail, because we use this GetArg()-version:\n\n<pre>\nint64 GetArg(const std::string& strArg, int64 nDefault)\n{\n    if (mapArgs.count(strArg))\n        return a",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r4151302,4151302,src/init.cpp
Diapolo,2013-05-11T10:39:36Z,Pull Updated!\n,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r4182964,4182964,src/init.cpp
sipa,2013-06-15T16:02:33Z,This field seems never used. Why change/split this data structure?\n,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r4714259,4714259,src/netbase.h
Diapolo,2013-06-16T15:54:50Z,"It's intended to be used in getinfo and the GUI to know wether Tor or IPv6 proxies are ""inherited"" by `-proxy` or if they were specified via `-proxy6` or `-tor`. I didn't include these changes here as I didn't want to waste my time for things that perhaps don't get merged anyway.\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r4716209,4716209,src/netbase.h
laanwj,2013-06-20T14:26:34Z,"The most important scenario to test with any proxy code change is tor, I\nsuspect 99 percent of the users of proxy functionality use it for that.\nPlease make sure that stays working securely.\n\nI'd love to hear some of the use cases for all the exotic proxy options,\nI'm a bit in doubt whether all that complexity belongs in bitcoin instead\nof some network tunneling tool or the socks server, and",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r4797876,4797876,src/netbase.h
laanwj,2014-07-03T06:50:52Z,"This would be better as a sub-object 'proxy' that contains the ""ipv4"", ""ipv6"" and ""onion"" fields.\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r14499168,14499168,src/rpcnet.cpp
laanwj,2014-07-03T06:51:15Z,I don't think it is useful to report the from-default here.\n,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r14499180,14499180,src/rpcnet.cpp
laanwj,2014-07-24T14:20:54Z,I think we don't need to store this flag?\nOnly a few weeks ago (in 0127a9be) we changed ProxyType to be just a CService. I like to keep it that way if possible.\n,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15348581,15348581,src/netbase.h
laanwj,2014-07-24T14:35:21Z,"An invalid -proxy6 or -onion address should also lead to exit, IMO.\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15349495,15349495,src/init.cpp
laanwj,2014-07-24T14:42:05Z,"Don't do these whitespace changes in this function, they will get undo'ed by @sipa's reformatter anyway.\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15349972,15349972,src/rpcnet.cpp
Diapolo,2014-07-25T15:49:04Z,"Right, I'm going to revert these and when making changes and they are alligned, I'll remove the alligning whitespaces.\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15407935,15407935,src/rpcnet.cpp
Diapolo,2014-07-25T15:52:38Z,"@laanwj The idea and logic here is that -proxy could work, so I don't want to exit when -proxy6 or -tor fail to set a proxy.\n\nAs I wrote in the init description:\n\n<pre>\n-try to setup separate Tor proxy, on failure try to setup Tor proxy via default proxy\n-try to setup separate IPv6 proxy, on failure try to setup IPv6 proxy via default proxy\n</pre>\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15408185,15408185,src/init.cpp
Diapolo,2014-07-25T16:01:21Z,"I'm going to need this for GUI changes later on to visually tell a user, if the default proxy is used for a certain net, I would be glad to keep this. We can remove or improve it later again, if you see the GUI changes and have a better suggestion?\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15408717,15408717,src/netbase.h
Diapolo,2014-07-25T16:02:51Z,@laanwj Can it be a problem if someone is using -onlynet=IPv6 for example and we use this? Can you think of a better way to select the right proxy used for name resolution?\n,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15408826,15408826,src/net.cpp
laanwj,2014-07-26T05:19:21Z,There is no better way. With a name you don't know if it is IPv4 or IPv6. Ofcourse you _can_ know if it is onion/tor if it ends in `.onion`.\n\n_But_ as I said before there is no good reason for allowing different proxies for IPv4 and IPv6. This is not possible right now and I do not intend to add this functionality. \n\nHaving a 'clearnet proxy' (`-proxy`) and a 'onion net proxy' (`-onion`) is en,https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15432199,15432199,src/net.cpp
laanwj,2014-07-26T05:30:38Z,"Let me try to explain it differently. I want to move forward to an architecture in which details of _how_ the options are configured are redundant after initialization. For the core to run it only needs configuration values. Speaking on a high level a list of (option, value) tuples goes in, and you get back a running node.\n\nPart of this is separating out the option processing from Init(). This f",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15432258,15432258,src/netbase.h
Diapolo,2014-07-28T12:31:46Z,"The third commit removes fIsDefault, like you suggested. Also this isn't needed anymore for the GUI.\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15459069,15459069,src/netbase.h
Diapolo,2014-07-28T12:33:19Z,"Right, I'm going to remove -proxy6, how you described it makes sense!\n@laanwj 4th commit reverts -proxy6 :).\n",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15459119,15459119,src/net.cpp
laanwj,2014-07-30T10:52:11Z,"We still have a potential problem here. If NET_IPV4 is set as limited, the HaveProxy(NET_IPV4) will not be set due to the condition in ProxyInit. So my idea mentioned above to always use IPV4 proxy falls apart.\n\nMay be better to bring back the query for NameProxy but not the setter counterparts. Just pick the first proxy of IPV4/IPV6 that is actually set.\n\nSee here for my take on it: https://g",https://github.com/bitcoin/bitcoin/pull/2575#discussion_r15576734,15576734,src/net.cpp
