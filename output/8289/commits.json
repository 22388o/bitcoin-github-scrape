[
  {
    "sha": "1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmEzZGI2YThlOTYyNjk4NGZjODczMTRiMTVkZmEyYTZjODMxY2Iy",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2016-06-26T20:20:12Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2016-07-07T11:52:59Z"
      },
      "message": "bash-completion: Adapt for 0.12 and 0.13\n\n * separate completion for bitcoind and bitcoin-cli\n * remove RPC support from bitcoind completion\n * add completion for bitcoin-tx and bitcoin-qt\n * rely on autoloading of completions",
      "tree": {
        "sha": "9fbc425b8be0ea228dd41c65e4624e81fb695b97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fbc425b8be0ea228dd41c65e4624e81fb695b97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91abb77970f47b1f6166e564bc695ed30c75bb63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91abb77970f47b1f6166e564bc695ed30c75bb63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91abb77970f47b1f6166e564bc695ed30c75bb63"
      }
    ],
    "stats": {
      "total": 324,
      "additions": 224,
      "deletions": 100
    },
    "files": [
      {
        "sha": "732981fe7c5d1cb447ee90aac1c8ffb96ab24636",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "added",
        "additions": 154,
        "deletions": 0,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
        "patch": "@@ -0,0 +1,154 @@\n+# bash programmable completion for bitcoin-cli(1)\n+# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# call $bitcoin-cli for RPC\n+_bitcoin_rpc() {\n+    # determine already specified args necessary for RPC\n+    local rpcargs=()\n+    for i in ${COMP_LINE}; do\n+        case \"$i\" in\n+            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n+                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n+                ;;\n+        esac\n+    done\n+    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n+}\n+\n+# Add wallet accounts to COMPREPLY\n+_bitcoin_accounts() {\n+    local accounts\n+    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n+    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n+}\n+\n+_bitcoin_cli() {\n+    local cur prev words=() cword\n+    local bitcoin_cli\n+\n+    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n+    # as bitcoin-cli might not be in $PATH\n+    bitcoin_cli=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    if ((cword > 5)); then\n+        case ${words[cword-5]} in\n+            sendtoaddress)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 4)); then\n+        case ${words[cword-4]} in\n+            importaddress|listtransactions|setban)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            signrawtransaction)\n+                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 3)); then\n+        case ${words[cword-3]} in\n+            addmultisigaddress)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 2)); then\n+        case ${words[cword-2]} in\n+            addnode)\n+                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            setban)\n+                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            move|setaccount)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    case \"$prev\" in\n+        backupwallet|dumpwallet|importwallet)\n+            _filedir\n+            return 0\n+            ;;\n+        getaddednodeinfo|getrawmempool|lockunspent|setgenerate)\n+            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+            return 0\n+            ;;\n+        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n+            _bitcoin_accounts\n+            return 0\n+            ;;\n+    esac\n+\n+    case \"$cur\" in\n+        -conf=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+            local helpopts commands\n+\n+            # only parse -help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+            fi\n+\n+            # only parse help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n+                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+            fi\n+\n+            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+} &&\n+complete -F _bitcoin_cli bitcoin-cli\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
        "patch": "@@ -0,0 +1,57 @@\n+# bash programmable completion for bitcoin-tx(1)\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+_bitcoin_tx() {\n+    local cur prev words=() cword\n+    local bitcoin_tx\n+\n+    # save and use original argument to invoke bitcoin-tx for -help\n+    # it might not be in $PATH\n+    bitcoin_tx=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n =: cur prev words cword\n+\n+    case \"$cur\" in\n+        load=*:*)\n+            cur=\"${cur#load=*:}\"\n+            _filedir\n+            return 0\n+            ;;\n+        *=*)\t# prevent attempts to complete other arguments\n+            return 0\n+            ;;\n+    esac\n+\n+    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n+        # only options (or an uncompletable hex-string) allowed\n+        # parse bitcoin-tx -help for options\n+        local helpopts\n+        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n+    else\n+        # only commands are allowed\n+        # parse -help for commands\n+        local helpcmds\n+        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n+    fi\n+\n+    # Prevent space if an argument is desired\n+    if [[ $COMPREPLY == *= ]]; then\n+        compopt -o nospace\n+    fi\n+\n+    return 0\n+} &&\n+complete -F _bitcoin_tx bitcoin-tx\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "af87e97d80690c969db4de7a5b4cb9ea8b330cb8",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 11,
        "deletions": 100,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
        "patch": "@@ -1,102 +1,21 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-cli(1)\n-# Copyright (c) 2012,2014 Christian von Roques <roques@mti.ag>\n+# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n+# Copyright (c) 2012-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-have bitcoind && {\n-\n-# call $bitcoind for RPC\n-_bitcoin_rpc() {\n-    # determine already specified args necessary for RPC\n-    local rpcargs=()\n-    for i in ${COMP_LINE}; do\n-        case \"$i\" in\n-            -conf=*|-proxy*|-rpc*)\n-                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n-                ;;\n-        esac\n-    done\n-    $bitcoind \"${rpcargs[@]}\" \"$@\"\n-}\n-\n-# Add bitcoin accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk '/\".*\"/ { a=$1; gsub(/\"/, \"\", a); print a}')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n _bitcoind() {\n     local cur prev words=() cword\n     local bitcoind\n \n-    # save and use original argument to invoke bitcoind\n-    # bitcoind might not be in $PATH\n+    # save and use original argument to invoke bitcoind for -help\n+    # it might not be in $PATH\n     bitcoind=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n \n-    if ((cword > 4)); then\n-        case ${words[cword-4]} in\n-            listtransactions)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            signrawtransaction)\n-                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 3)); then\n-        case ${words[cword-3]} in\n-            addmultisigaddress)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-            getbalance|gettxout|importaddress|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 2)); then\n-        case ${words[cword-2]} in\n-            addnode)\n-                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            getblock|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    case \"$prev\" in\n-        backupwallet|dumpwallet|importwallet)\n-            _filedir\n-            return 0\n-            ;;\n-        getmempool|lockunspent|setgenerate)\n-            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-            return 0\n-            ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n-            return 0\n-            ;;\n-    esac\n-\n     case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-wallet=*)\n+        -conf=*|-pid=*|-loadblock=*|-rootcertificates=*|-rpccookiefile=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0\n@@ -110,31 +29,23 @@ _bitcoind() {\n             return 0\n             ;;\n         *)\n-            local helpopts commands\n \n-            # only parse --help if senseful\n+            # only parse -help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                local helpopts\n+                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n             fi\n \n-            # only parse help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n-            fi\n-\n-            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n-\n             # Prevent space if an argument is desired\n             if [[ $COMPREPLY == *= ]]; then\n                 compopt -o nospace\n             fi\n             return 0\n             ;;\n     esac\n-}\n-\n-complete -F _bitcoind bitcoind bitcoin-cli\n-}\n+} &&\n+complete -F _bitcoind bitcoind bitcoin-qt\n \n # Local variables:\n # mode: shell-script"
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
        "patch": "@@ -0,0 +1 @@\n+contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ba3db6a8e9626984fc87314b15dfa2a6c831cb2/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=1ba3db6a8e9626984fc87314b15dfa2a6c831cb2",
        "patch": "@@ -1 +1,2 @@\n contrib/bitcoind.bash-completion\tbitcoind\n+contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      }
    ]
  }
]