[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869546300",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-869546300",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 869546300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTU0NjMwMA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-28T09:55:37Z",
    "updated_at": "2021-07-27T16:48:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869546300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870646789",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870646789",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 870646789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDY0Njc4OQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-29T14:23:05Z",
    "updated_at": "2021-06-29T14:23:05Z",
    "author_association": "MEMBER",
    "body": "@promag I agree. This is also my preferred solution (see #18840). Happy to reopen that one.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870646789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870725266",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870725266",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 870725266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDcyNTI2Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-29T16:02:20Z",
    "updated_at": "2021-06-29T16:02:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could be missing something but it seems to me neither solution is clearly correct in all cases. The advantages of this solution over [#18440](https://github.com/bitcoin/bitcoin/pull/18840) are that:\r\n\r\n- It's more obvious what this solution is trying to do. This solution is plainly updating mempool status to reflect what's in the mempool, where [#18440](https://github.com/bitcoin/bitcoin/pull/18840) is broadening a sync that happens in a different part of the code without a specific explanation about why it's necessary.\r\n- [#18440](https://github.com/bitcoin/bitcoin/pull/18840) waits for extra notifications to be handled that may not be relevant, blocking longer than it needs to.\r\n- It's not clear whether [#18440](https://github.com/bitcoin/bitcoin/pull/18840) fixes the problem in all cases, since it's assuming that the mempool implementation will alway queue the removedFromMempool notification before the wallet RPC tries to sync with the queue. And even if this does work now, there is no unit test or other coverage for it to make sure the sync runs at the right point in the broken case, to make sure this stays fixed in the future.\r\n\r\nBut I do agree with the general point that a fully correct solution is probably a blocking solution. I just think the blocking should be targeted. Not more narrow or more wide than it needs to be. For example could add `std::condition_variable m_mempool_cv;` to `CWallet` and `m_mempool_cv.notify_all()` in `transactionRemovedFromMempool()` and `m_mempool_cv.wait(lock, []{return !replaced_tx.fInMempool})` in `bumpfee`\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870725266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870744344",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870744344",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 870744344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDc0NDM0NA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-29T16:28:31Z",
    "updated_at": "2021-06-29T16:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> For example could add `std::condition_variable m_mempool_cv;` to `CWallet` and `m_mempool_cv.notify_all()` in `transactionRemovedFromMempool()` and `m_mempool_cv.wait(lock, []{return !replaced_tx.fInMempool})` in `bumpfee`\r\n\r\nThinking about this, in a really pathological case where a replaced transaction got added back to the mempool, this could hang. Dropping `CWalletTx::fInMempool` and giving transactions clear states like 730df28e00822f06c9fc11c86a74f764a2f5136c from #21206 would help here, because the replaced transaction could ambiguously transition from the _in-mempool_ state to an intermediate _in-mempool-but-replaced state_ to the _inactive_ state, and the `cv.wait()` could just wait for the transaction to be out of the intermediate state.\r\n\r\nAny case, will ACK this PR. IMO, this is the best fix for we have for now, and it is straightforward and simple, even if it is not 100% right in every case and doesn't have a fancy test.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870744344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870813656",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870813656",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 870813656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDgxMzY1Ng==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-29T18:18:16Z",
    "updated_at": "2021-06-29T18:18:16Z",
    "author_association": "MEMBER",
    "body": "Should we do this in `transactionRemovedFromMempool` too perhaps?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870813656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870923301",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870923301",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 870923301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDkyMzMwMQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-29T21:14:43Z",
    "updated_at": "2021-06-29T21:14:43Z",
    "author_association": "MEMBER",
    "body": "Maybe it should avoid `fInMempool` in some cases, like in `CWallet::AbandonTransaction`:\r\n```diff\r\n@@ -1078,10 +1078,11 @@ bool CWallet::AbandonTransaction(const uint256& hashTx)\r\n     std::set<uint256> done;\r\n\r\n     // Can't mark abandoned if confirmed or in mempool\r\n+    if (chain().isInMempool(hashTx)) return false;\r\n     auto it = mapWallet.find(hashTx);\r\n     assert(it != mapWallet.end());\r\n     const CWalletTx& origtx = it->second;\r\n-    if (origtx.GetDepthInMainChain() != 0 || origtx.InMempool()) {\r\n+    if (origtx.GetDepthInMainChain() != 0) {\r\n         return false;\r\n     }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870923301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872054528",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-872054528",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 872054528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjA1NDUyOA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T08:48:26Z",
    "updated_at": "2021-07-01T08:48:26Z",
    "author_association": "MEMBER",
    "body": "> Should we do this in transactionRemovedFromMempool too perhaps?\r\n\r\nThx, done.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872054528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872055668",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-872055668",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 872055668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjA1NTY2OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T08:50:08Z",
    "updated_at": "2021-07-01T08:50:08Z",
    "author_association": "MEMBER",
    "body": "> Maybe it should avoid fInMempool in some cases, like in CWallet::AbandonTransaction:\r\n\r\nMaybe the mempool status should be removed and simply be queried when needed? Otherwise it just seems like applying random patches that happen to improve the situation, but don't actually fix the underlying issue.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872055668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872089855",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-872089855",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 872089855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjA4OTg1NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T09:35:39Z",
    "updated_at": "2021-07-01T09:36:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Maybe the mempool status should be removed and simply be queried when needed? \r\n\r\nI think there are two drawbacks to querying the mempool when needed:\r\n\r\n- Conceptually it seems less appealing because it means coin selection, balance checking, etc code is combining mempool and chain state from two different points in time instead of one point. Instead of using chain and mempool state from the time of last [notification](https://github.com/bitcoin/bitcoin/blob/3ef2d400fa42072a2cfe1cb51796c329e33ab8c5/src/interfaces/chain.h#L232-L243), it is combining data from the last notification time with data from the current time. I don't think the consequences of this are very bad but they could make coin selection and balance checking glitchy or weird if there is a backlog of notifications.\r\n\r\n- At least according to 17220d6325ef8d7789373055586e4332977077b0 which introduced the cached `fInMempool` field, there are some reasons to think this may be worse for performance.\r\n\r\n> Otherwise it just seems like applying random patches that happen to improve the situation, but don't actually fix the underlying issue.\r\n\r\nI think if we combine transaction states (730df28e00822f06c9fc11c86a74f764a2f5136c from #21206) with the notify suggestion mentioned earlier (in https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870725266 and https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870744344), that is a clean and robust solution that gets rid of all race conditions. But since that requires reviewing and writing more code, using `tx.fInMempool = chain.isInMempool(tx.GetHash());` is at least a straighforward workaround in the meantime.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872089855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872586827",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-872586827",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22359",
    "id": 872586827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjU4NjgyNw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-01T22:23:50Z",
    "updated_at": "2021-07-02T16:48:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think if we combine transaction states ([730df28](https://github.com/bitcoin/bitcoin/commit/730df28e00822f06c9fc11c86a74f764a2f5136c) from #21206) with the notify suggestion mentioned earlier (in [#22359 (comment)](https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870725266) and [#22359 (comment)](https://github.com/bitcoin/bitcoin/pull/22359#issuecomment-870744344)), that is a clean and robust solution that gets rid of all race conditions.\r\n\r\nFWIW, I started implementing this in f54631dec3ccb4f2df1545eab86a3f9ad824c1e9 ([branch](https://github.com/ryanofsky/bitcoin/commits/pr/txwait)). It could be cleaned up more, and doesn't have a dedicated test, and might not be totally complete (might need one or two more `cv.wait()` calls), but this shows the general idea.\r\n\r\n---\r\n\r\nEDIT: Updated d622b28227efbb4e0709e768a089e655fceecc19 -> f54631dec3ccb4f2df1545eab86a3f9ad824c1e9 ([compare](https://github.com/ryanofsky/bitcoin/compare/pr/txwait.1..pr/txwait.2))\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872586827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]