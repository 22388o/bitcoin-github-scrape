[
  {
    "sha": "98b135f97f16005687f420136114f80555bc8688",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OGIxMzVmOTdmMTYwMDU2ODdmNDIwMTM2MTE0ZjgwNTU1YmM4Njg4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-08T17:32:29Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-20T14:29:26Z"
      },
      "message": "Make STRICTENC invalid pubkeys fail the script rather than the opcode.\n\nThis turns STRICTENC turn into a softforking-safe change (even though it\nis not intended as a consensus rule), and as a result guarantee that using\nit for mempool validation only results in consensus-valid transactions in\nthe mempool.",
      "tree": {
        "sha": "2a7fc61b615881350b2a1d7a306b50137f10d9a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a7fc61b615881350b2a1d7a306b50137f10d9a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98b135f97f16005687f420136114f80555bc8688",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98b135f97f16005687f420136114f80555bc8688",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/98b135f97f16005687f420136114f80555bc8688",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98b135f97f16005687f420136114f80555bc8688/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ba5ebc065ce9fceba8f9de7579debc5b49c3ba8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ba5ebc065ce9fceba8f9de7579debc5b49c3ba8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ba5ebc065ce9fceba8f9de7579debc5b49c3ba8"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 53,
      "deletions": 23
    },
    "files": [
      {
        "sha": "a2a2edce6d5e2a127850afcaaf8150e172b7fb19",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98b135f97f16005687f420136114f80555bc8688/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98b135f97f16005687f420136114f80555bc8688/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=98b135f97f16005687f420136114f80555bc8688",
        "patch": "@@ -207,9 +207,9 @@ bool static CheckSignatureEncoding(const valtype &vchSig, unsigned int flags, Sc\n     return true;\n }\n \n-bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags) {\n+bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, ScriptError* serror) {\n     if ((flags & SCRIPT_VERIFY_STRICTENC) != 0 && !IsCompressedOrUncompressedPubKey(vchSig)) {\n-        return false;\n+        return set_error(serror, SCRIPT_ERR_PUBKEYTYPE);\n     }\n     return true;\n }\n@@ -792,11 +792,11 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                     // Drop the signature, since there's no way for a signature to sign itself\n                     scriptCode.FindAndDelete(CScript(vchSig));\n \n-                    if (!CheckSignatureEncoding(vchSig, flags, serror)) {\n+                    if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, serror)) {\n                         //serror is set\n                         return false;\n                     }\n-                    bool fSuccess = CheckPubKeyEncoding(vchPubKey, flags) && checker.CheckSig(vchSig, vchPubKey, scriptCode);\n+                    bool fSuccess = checker.CheckSig(vchSig, vchPubKey, scriptCode);\n \n                     popstack(stack);\n                     popstack(stack);\n@@ -855,13 +855,13 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         valtype& vchSig    = stacktop(-isig);\n                         valtype& vchPubKey = stacktop(-ikey);\n \n-                        if (!CheckSignatureEncoding(vchSig, flags, serror)) {\n+                        if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, serror)) {\n                             // serror is set\n                             return false;\n                         }\n \n                         // Check signature\n-                        bool fOk = CheckPubKeyEncoding(vchPubKey, flags) && checker.CheckSig(vchSig, vchPubKey, scriptCode);\n+                        bool fOk = checker.CheckSig(vchSig, vchPubKey, scriptCode);\n \n                         if (fOk) {\n                             isig++;"
      },
      {
        "sha": "35b2f6c65a1c36b9dc279df386c17654f5723b0b",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98b135f97f16005687f420136114f80555bc8688/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98b135f97f16005687f420136114f80555bc8688/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=98b135f97f16005687f420136114f80555bc8688",
        "patch": "@@ -35,8 +35,8 @@ enum\n     SCRIPT_VERIFY_P2SH      = (1U << 0),\n \n     // Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n-    // Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n-    // skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\n+    // Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure.\n+    // (softfork safe, but not used or intended as a consensus rule).\n     SCRIPT_VERIFY_STRICTENC = (1U << 1),\n \n     // Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)"
      },
      {
        "sha": "5d24ed98ba82dc3cb3e950ebe564c30a0d2660c1",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98b135f97f16005687f420136114f80555bc8688/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98b135f97f16005687f420136114f80555bc8688/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=98b135f97f16005687f420136114f80555bc8688",
        "patch": "@@ -61,6 +61,8 @@ const char* ScriptErrorString(const ScriptError serror)\n             return \"Dummy CHECKMULTISIG argument must be zero\";\n         case SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS:\n             return \"NOPx reserved for soft-fork upgrades\";\n+        case SCRIPT_ERR_PUBKEYTYPE:\n+            return \"Public key is neither compressed or uncompressed\";\n         case SCRIPT_ERR_UNKNOWN_ERROR:\n         case SCRIPT_ERR_ERROR_COUNT:\n         default: break;"
      },
      {
        "sha": "ac1f2deae5a9e20fe3a08b08568ff6b2dc6275ea",
        "filename": "src/script/script_error.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98b135f97f16005687f420136114f80555bc8688/src/script/script_error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98b135f97f16005687f420136114f80555bc8688/src/script/script_error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.h?ref=98b135f97f16005687f420136114f80555bc8688",
        "patch": "@@ -42,6 +42,7 @@ typedef enum ScriptError_t\n     SCRIPT_ERR_SIG_PUSHONLY,\n     SCRIPT_ERR_SIG_HIGH_S,\n     SCRIPT_ERR_SIG_NULLDUMMY,\n+    SCRIPT_ERR_PUBKEYTYPE,\n \n     /* softfork safeness */\n     SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS,"
      },
      {
        "sha": "96ff0a29115232c57a3285c8dac0aad45e391ae7",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98b135f97f16005687f420136114f80555bc8688/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98b135f97f16005687f420136114f80555bc8688/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=98b135f97f16005687f420136114f80555bc8688",
        "patch": "@@ -592,6 +592,24 @@ nSequences are max.\n     \"\",\n     \"P2PK NOT with hybrid pubkey but no STRICTENC\"\n ],\n+[\n+    \"0x47 0x3044022078033e4227aa05ded69d8da579966578e230d8a7fb44d5f1a0620c3853c24f78022006a2e3f4d872ac8dfdc529110aa37301d65a76255a4b6cce2992adacd4d2c4e201\",\n+    \"0x41 0x0679be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG NOT\",\n+    \"STRICTENC\",\n+    \"P2PK NOT with hybrid pubkey\"\n+],\n+[\n+    \"0x47 0x304402207592427de20e315d644839754f2a5cca5b978b983a15e6da82109ede01722baa022032ceaf78590faa3f7743821e1b47b897ed1a57f6ee1c8a7519d23774d8de3c4401\",\n+    \"0x41 0x0679be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG NOT\",\n+    \"STRICTENC\",\n+    \"P2PK NOT with invalid hybrid pubkey\"\n+],\n+[\n+    \"0 0x47 0x304402206797289d3dc81692edae58430276d04641ea5d86967be557163f8494da32fd78022006fc6ab77aaed4ac11ea69cd878ab26e3e24290f47a43e9adf34075d52b7142c01\",\n+    \"1 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x41 0x0679be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 2 CHECKMULTISIG\",\n+    \"STRICTENC\",\n+    \"1-of-2 with the first 1 hybrid pubkey\"\n+],\n [\n     \"0x47 0x304402201f82b99a813c9c48c8dee8d2c43b8f637b72353fe9bdcc084537bc17e2ab770402200c43b96a5f7e115f0114eabda32e068145965cb6c7b5ef64833bb4fcf9fc1b3b05\",\n     \"0x41 0x048282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f5150811f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf CHECKSIG\","
      },
      {
        "sha": "94e1abfaae43552ba595f17a9092e1a7d31a4045",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98b135f97f16005687f420136114f80555bc8688/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98b135f97f16005687f420136114f80555bc8688/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=98b135f97f16005687f420136114f80555bc8688",
        "patch": "@@ -743,23 +743,23 @@ nSequences are max.\n     \"\",\n     \"P2PK with hybrid pubkey but no STRICTENC\"\n ],\n-[\n-    \"0x47 0x3044022078033e4227aa05ded69d8da579966578e230d8a7fb44d5f1a0620c3853c24f78022006a2e3f4d872ac8dfdc529110aa37301d65a76255a4b6cce2992adacd4d2c4e201\",\n-    \"0x41 0x0679be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG NOT\",\n-    \"STRICTENC\",\n-    \"P2PK NOT with hybrid pubkey\"\n-],\n [\n     \"0x47 0x3044022078d6c447887e88dcbe1bc5b613645280df6f4e5935648bc226e9d91da71b3216022047d6b7ef0949b228fc1b359afb8d50500268711354298217b983c26970790c7601\",\n     \"0x41 0x0679be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG NOT\",\n     \"\",\n     \"P2PK NOT with invalid hybrid pubkey but no STRICTENC\"\n ],\n [\n-    \"0x47 0x304402207592427de20e315d644839754f2a5cca5b978b983a15e6da82109ede01722baa022032ceaf78590faa3f7743821e1b47b897ed1a57f6ee1c8a7519d23774d8de3c4401\",\n-    \"0x41 0x0679be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 CHECKSIG NOT\",\n+    \"0 0x47 0x304402203b269b9fbc0936877bf855b5fb41757218d9548b246370d991442a5f5bd1c3440220235268a4eaa8c67e543c6e37da81dd36d3b1be2de6b4fef04113389ca6ddc04501\",\n+    \"1 0x41 0x0679be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 2 CHECKMULTISIG\",\n+    \"\",\n+    \"1-of-2 with the second 1 hybrid pubkey and no STRICTENC\"\n+],\n+[\n+    \"0 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501\",\n+    \"1 0x41 0x0679be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 2 CHECKMULTISIG\",\n     \"STRICTENC\",\n-    \"P2PK NOT with invalid hybrid pubkey\"\n+    \"1-of-2 with the second 1 hybrid pubkey\"\n ],\n [\n     \"0x47 0x304402204649e9517ef0377a8f8270bd423053fd98ddff62d74ea553e9579558abbb75e4022044a2b2344469c12e35ed898987711272b634733dd0f5e051288eceb04bd4669e05\","
      },
      {
        "sha": "6952f4c5844b0409e33d3aa95ddbd3683f19cb09",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98b135f97f16005687f420136114f80555bc8688/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98b135f97f16005687f420136114f80555bc8688/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=98b135f97f16005687f420136114f80555bc8688",
        "patch": "@@ -428,15 +428,24 @@ BOOST_AUTO_TEST_CASE(script_build)\n     bad.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey0H) << OP_CHECKSIG << OP_NOT,\n                               \"P2PK NOT with hybrid pubkey but no STRICTENC\", 0\n                              ).PushSig(keys.key0, SIGHASH_ALL));\n-    good.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey0H) << OP_CHECKSIG << OP_NOT,\n-                               \"P2PK NOT with hybrid pubkey\", SCRIPT_VERIFY_STRICTENC\n-                              ).PushSig(keys.key0, SIGHASH_ALL));\n+    bad.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey0H) << OP_CHECKSIG << OP_NOT,\n+                              \"P2PK NOT with hybrid pubkey\", SCRIPT_VERIFY_STRICTENC\n+                             ).PushSig(keys.key0, SIGHASH_ALL));\n     good.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey0H) << OP_CHECKSIG << OP_NOT,\n                                \"P2PK NOT with invalid hybrid pubkey but no STRICTENC\", 0\n                               ).PushSig(keys.key0, SIGHASH_ALL).DamagePush(10));\n-    good.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey0H) << OP_CHECKSIG << OP_NOT,\n-                               \"P2PK NOT with invalid hybrid pubkey\", SCRIPT_VERIFY_STRICTENC\n-                              ).PushSig(keys.key0, SIGHASH_ALL).DamagePush(10));\n+    bad.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey0H) << OP_CHECKSIG << OP_NOT,\n+                              \"P2PK NOT with invalid hybrid pubkey\", SCRIPT_VERIFY_STRICTENC\n+                             ).PushSig(keys.key0, SIGHASH_ALL).DamagePush(10));\n+    good.push_back(TestBuilder(CScript() << OP_1 << ToByteVector(keys.pubkey0H) << ToByteVector(keys.pubkey1C) << OP_2 << OP_CHECKMULTISIG,\n+                               \"1-of-2 with the second 1 hybrid pubkey and no STRICTENC\", 0\n+                              ).Num(0).PushSig(keys.key1, SIGHASH_ALL));\n+    good.push_back(TestBuilder(CScript() << OP_1 << ToByteVector(keys.pubkey0H) << ToByteVector(keys.pubkey1C) << OP_2 << OP_CHECKMULTISIG,\n+                               \"1-of-2 with the second 1 hybrid pubkey\", SCRIPT_VERIFY_STRICTENC\n+                              ).Num(0).PushSig(keys.key1, SIGHASH_ALL));\n+    bad.push_back(TestBuilder(CScript() << OP_1 << ToByteVector(keys.pubkey1C) << ToByteVector(keys.pubkey0H) << OP_2 << OP_CHECKMULTISIG,\n+                              \"1-of-2 with the first 1 hybrid pubkey\", SCRIPT_VERIFY_STRICTENC\n+                             ).Num(0).PushSig(keys.key1, SIGHASH_ALL));\n \n     good.push_back(TestBuilder(CScript() << ToByteVector(keys.pubkey1) << OP_CHECKSIG,\n                                \"P2PK with undefined hashtype but no STRICTENC\", 0"
      }
    ]
  },
  {
    "sha": "ca8158719b17ebdcf1de1e26079b6b896122d0e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTgxNTg3MTliMTdlYmRjZjFkZTFlMjYwNzliNmI4OTYxMjJkMGU1",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-11-10T07:33:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-20T14:29:28Z"
      },
      "message": "Test the exact order of CHECKMULTISIG sig/pubkey evaluation\n\nPossible with STRICTENC",
      "tree": {
        "sha": "581c5ca00b34e78318b434c9a995e44c73850c01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/581c5ca00b34e78318b434c9a995e44c73850c01"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca8158719b17ebdcf1de1e26079b6b896122d0e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8158719b17ebdcf1de1e26079b6b896122d0e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca8158719b17ebdcf1de1e26079b6b896122d0e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8158719b17ebdcf1de1e26079b6b896122d0e5/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98b135f97f16005687f420136114f80555bc8688",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98b135f97f16005687f420136114f80555bc8688",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98b135f97f16005687f420136114f80555bc8688"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 49,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5eda23731d7e31e3b6241b52a390d399b024c72f",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8158719b17ebdcf1de1e26079b6b896122d0e5/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8158719b17ebdcf1de1e26079b6b896122d0e5/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=ca8158719b17ebdcf1de1e26079b6b896122d0e5",
        "patch": "@@ -855,6 +855,9 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         valtype& vchSig    = stacktop(-isig);\n                         valtype& vchPubKey = stacktop(-ikey);\n \n+                        // Note how this makes the exact order of pubkey/signature evaluation\n+                        // distinguishable by CHECKMULTISIG NOT if the STRICTENC flag is set.\n+                        // See the script_(in)valid tests for details.\n                         if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, serror)) {\n                             // serror is set\n                             return false;\n@@ -871,7 +874,8 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         nKeysCount--;\n \n                         // If there are more signatures left than keys left,\n-                        // then too many signatures have failed\n+                        // then too many signatures have failed. Exit early,\n+                        // without checking any further signatures.\n                         if (nSigsCount > nKeysCount)\n                             fSuccess = false;\n                     }"
      },
      {
        "sha": "71e757714cb8b6ac0af94ac98f589128da3c8e64",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8158719b17ebdcf1de1e26079b6b896122d0e5/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8158719b17ebdcf1de1e26079b6b896122d0e5/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=ca8158719b17ebdcf1de1e26079b6b896122d0e5",
        "patch": "@@ -616,6 +616,25 @@ nSequences are max.\n     \"STRICTENC\",\n     \"P2PK with undefined hashtype\"\n ],\n+\n+[\"\n+Order of CHECKMULTISIG evaluation tests, inverted by swapping the order of\n+pubkeys/signatures so they fail due to the STRICTENC rules on validly encoded\n+signatures and pubkeys.\n+\"],\n+[\n+    \"0 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501\",\n+    \"2 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 0 2 CHECKMULTISIG NOT\",\n+    \"STRICTENC\",\n+    \"2-of-2 CHECKMULTISIG NOT with the first pubkey invalid, and both signatures validly encoded.\"\n+],\n+[\n+    \"0 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501 0\",\n+    \"2 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 2 CHECKMULTISIG NOT\",\n+    \"STRICTENC\",\n+    \"2-of-2 CHECKMULTISIG NOT with both pubkeys valid, but first signature invalid.\"\n+],\n+\n [\n     \"0x47 0x30440220166848cd5b82a32b5944d90de3c35249354b43773c2ece1844ee8d1103e2f6c602203b6b046da4243c77adef80ada9201b27bbfdf7f9d5428f40434b060432afd62005\",\n     \"0x41 0x048282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f5150811f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf CHECKSIG NOT\","
      },
      {
        "sha": "ada45a64ed1c62222aefe2e5c2080ca0f6b98b27",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8158719b17ebdcf1de1e26079b6b896122d0e5/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8158719b17ebdcf1de1e26079b6b896122d0e5/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=ca8158719b17ebdcf1de1e26079b6b896122d0e5",
        "patch": "@@ -761,6 +761,31 @@ nSequences are max.\n     \"STRICTENC\",\n     \"1-of-2 with the second 1 hybrid pubkey\"\n ],\n+\n+[\"\n+CHECKMULTISIG evaluation order tests. CHECKMULTISIG evaluates signatures and\n+pubkeys in a specific order, and will exit early if the number of signatures\n+left to check is greater than the number of keys left. As STRICTENC fails the\n+script when it reaches an invalidly encoded signature or pubkey, we can use it\n+to test the exact order in which signatures and pubkeys are evaluated by\n+distinguishing CHECKMULTISIG returning false on the stack and the script as a\n+whole failing.\n+\n+See also the corresponding inverted versions of these tests in script_invalid.json\n+\"],\n+[\n+    \"0 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501\",\n+    \"2 0 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 2 CHECKMULTISIG NOT\",\n+    \"STRICTENC\",\n+    \"2-of-2 CHECKMULTISIG NOT with the second pubkey invalid, and both signatures validly encoded. Valid pubkey fails, and CHECKMULTISIG exits early, prior to evaluation of second invalid pubkey.\"\n+],\n+[\n+    \"0 0 0x47 0x3044022044dc17b0887c161bb67ba9635bf758735bdde503e4b0a0987f587f14a4e1143d022009a215772d49a85dae40d8ca03955af26ad3978a0ff965faa12915e9586249a501\",\n+    \"2 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 2 CHECKMULTISIG NOT\",\n+    \"STRICTENC\",\n+    \"2-of-2 CHECKMULTISIG NOT with both pubkeys valid, but second signature invalid. Valid pubkey fails, and CHECKMULTISIG exits early, prior to evaluation of second invalid signature.\"\n+],\n+\n [\n     \"0x47 0x304402204649e9517ef0377a8f8270bd423053fd98ddff62d74ea553e9579558abbb75e4022044a2b2344469c12e35ed898987711272b634733dd0f5e051288eceb04bd4669e05\",\n     \"0x41 0x048282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f5150811f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf CHECKSIG\","
      }
    ]
  }
]