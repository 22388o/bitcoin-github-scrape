petertodd,2014-11-09T06:30:37Z,"While this is an improvement over the existing definition of STRICTENC, I think we need to decide what's our actual goal here.\n\nAre we trying to simplify the consensus critical codebase? If so we could achieve the same goal by causing all pubkeys that aren't known to be accepted by OpenSSL to bypass the OpenSSL verify routine and be treated as though the signature failed. This would be a ""almost",https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-62293422,62293422,
sipa,2014-11-09T09:29:46Z,"I'm simply trying to clean up the semantics of an existing standardness\nrule, as you yourself found out that they can lead to accepting invalid\ntransactions in the mempool. A second validation with just consensus rules\nis definitely possible, but having every flag be a softforking change\ncertainly simplifies reasoning a lot.\n\nThis is however not a consensus rule change, and AFAIK does not ch",https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-62297130,62297130,
petertodd,2014-11-10T05:47:58Z,"@sipa Well maybe we should just say something about how the STRICTENC rules may not be appropriate as an actual soft-fork and leave it at that? I agree that as an IsStandard() rule they're fine.\n\nI noticed that many of the hybrid-using addresses I generated haven't been spent, with the one exception of 33xWKkEzGaABRopJBYtGWgSHGRpHYwJ2Sy, 1 <hybrid> <normal> 2 CHECKMULTISIG, which I constructed s",https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-62344121,62344121,
petertodd,2014-11-10T06:28:57Z,"Whoops, actually I got that wrong: 3DDhLE6ggvuELYTaYsTVC9Ta3cgfbPocZn, 1 normal hybrid 2 CHECKMULTISIG, is the right way to trigger that STRICTENC weirdness as pubkeys are evaluated right to left.\n",https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-62346311,62346311,
petertodd,2014-11-10T06:35:46Z,"Interestingly it looks like most 'invalid pubkey' users do things the wrong way around, with the invalid pubkeys second, so they would be affected by this implementation of STRICTENC when they don't need to be: http://webbtc.com/scripts/multisig\n\nedit: Of course, the best thing to do is encrypt your data and turn it into an apparently-valid pubkey by brute-forcing a nonce unless you for some rea",https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-62346725,62346725,
petertodd,2014-11-10T14:00:00Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-62387171,62387171,
sipa,2014-11-10T14:07:12Z,Clarified that STRICTENC is not intended as a consensus rule.\n,https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-62388046,62388046,
btcdrak,2014-11-13T16:27:57Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-62920572,62920572,
TheBlueMatt,2014-11-18T02:33:52Z,"Concept ACK, but needs rebased.\n",https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-63413543,63413543,
sipa,2014-11-18T08:52:54Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-63439114,63439114,
TheBlueMatt,2014-11-19T02:10:40Z,utACK commithash 266898f06b56ae0aeb2102141125a036b6808470: http://bitcoin.ninja/TheBlueMatt-5247.txt\n,https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-63581343,63581343,
sipa,2014-11-20T14:21:32Z,"@laanwj I'd like to see this in 0.10, as this is not a change to standardness for any currently released version, but it will be if 0.10 is released without.\n",https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-63814437,63814437,
sipa,2014-11-20T14:37:37Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-63816727,63816727,
petertodd,2014-11-20T19:55:36Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/5247#issuecomment-63868905,63868905,
petertodd,2014-11-10T06:32:24Z,"What are you trying to check here? The second hybrid pubkey isn't evaluated, so even with STRICTENC this test will pass. Maybe you should reverse the order of the pubkeys, so the hybrid pubkey is evaluated?\n",https://github.com/bitcoin/bitcoin/pull/5247#discussion_r20068319,20068319,src/test/data/script_valid.json
petertodd,2014-11-10T06:33:03Z,"Whereas in this case the first compressed pubkey is valid, so the second hybrid isn't evaluated and doesn't fail anything.\n",https://github.com/bitcoin/bitcoin/pull/5247#discussion_r20068332,20068332,src/test/data/script_valid.json
sipa,2014-11-10T09:29:34Z,The test is there to see that we (or others using these tests) don't accidentally apply the test to non-evaluated public keys.\n,https://github.com/bitcoin/bitcoin/pull/5247#discussion_r20072363,20072363,src/test/data/script_valid.json
petertodd,2014-11-10T09:38:21Z,"Ah, makes sense.\n",https://github.com/bitcoin/bitcoin/pull/5247#discussion_r20072673,20072673,src/test/data/script_valid.json
