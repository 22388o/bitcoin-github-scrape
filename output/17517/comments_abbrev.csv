practicalswift,2019-11-19 17:16:00,"~~ACK fa8d6bfb6f6f391a3a6af1fb47b9ca5f53344f1b assuming Travis is also happy: diff looks correct~~\n\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-555612040,555612040,
fanquake,2019-11-19 20:01:48,"Seeing some Travis failures in the asan build:\n```bash\nserialize.h:211:93: runtime error: implicit conversion from type 'int64_t' (aka 'long') of value -1 (64-bit, signed) to type 'uint64_t' (aka 'unsigned long') changed the value to 18446744073709551615 (64-bit, unsigned)\n    #0 0x55cb0c158d0b in void Serialize<CSizeComputer>(CSizeComputer&, long) /home/travis/build/bitcoin/bitcoin/build/bi",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-555685695,555685695,
DrahtBot,2019-11-19 22:09:29,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17549](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17549.html) (ci: misc cleanups by MarcoFalke)\n* [#12134",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-555739112,555739112,
MarcoFalke,2019-11-20 19:29:33,"@practicalswift I am having issues adding suppressions. See\n\nhttps://travis-ci.org/bitcoin/bitcoin/jobs/614670639#L4122\nhttps://github.com/bitcoin/bitcoin/pull/17517/commits/a9b6a758e38f42d56d11ad890cdbd0480c9c6114#diff-782c38017801582a8e7fe8245d9d0b15R48\n\nAny idea what I could have made wrong?",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-556284661,556284661,
practicalswift,2019-11-21 09:21:04,"@MarcoFalke I think this is a UBSan suppressions bug in Clang 8 which I believe has been fixed in later versions.\n\nI think the best way to work around the bug is to apply sanitization opt-outs for the triggering functions using `__attribute__((no_sanitize(""integer"")))`.\n\n---\n\nThis illustrates the bug and also the workaround.\n\nA testcase and the suppresions file:\n\n```\n$ cat im",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-556993861,556993861,
practicalswift,2019-11-21 17:41:25,"@MarcoFalke The `UBSAN_OPTIONS=report_error_type=1` could perhaps be helpful too. It will print the correct suppression code as part of error output. IIRC that option was present but broken in Clang 8, and fixed in later versions.",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-557195190,557195190,
MarcoFalke,2019-11-21 18:45:31,"@practicalswift Any idea in what clang version this was fixed. I tried clang-9 and it still happens:\n\n```\nchain.h:430:16: runtime error: implicit conversion from type 'unsigned long' of value 18446744073709551615 (64-bit, unsigned) to type 'int' changed the value to -1 (32-bit, signed)\n    #0 0x556e26efa8ad in CChain::Height() const /home/marco/bitcoin/src/./chain.h:430:16\n    #1 0x556e2",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-557219811,557219811,
MarcoFalke,2019-11-21 19:04:43,"> I think the best way to work around the bug is to apply sanitization opt-outs for the triggering functions using __attribute__((no_sanitize(""integer""))).\n\nI'd rather not add clumsy annotations in the code to work around compiler bugs that are present in multiple versions. If this sanitizer is broken, it should be disabled. It serves no use to enable it in configure and then disable it blindl",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-557227099,557227099,
practicalswift,2019-11-21 21:14:00,"> @practicalswift Any idea in what clang version this was fixed. I tried clang-9 and it still happens:\n> \n> ```\n> chain.h:430:16: runtime error: implicit conversion from type 'unsigned long' of value 18446744073709551615 (64-bit, unsigned) to type 'int' changed the value to -1 (32-bit, signed)\n> â€¦\n> SUMMARY: UndefinedBehaviorSanitizer: implicit-signed-integer-truncation-or-sign-change >",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-557274574,557274574,
MarcoFalke,2019-11-21 21:17:02,"No, clang can not parse that last time I checked.",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-557275624,557275624,
practicalswift,2019-11-21 21:27:59,@MarcoFalke Did you test for `clang-9`? IIRC `clang-8` had some suppression naming issues.,https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-557279573,557279573,
MarcoFalke,2019-11-22 01:59:29,"Yes, see the commits. I am using clang-9.\n\nhttps://travis-ci.org/MarcoFalke/bitcoin-core/jobs/615347666#L3807",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-557353267,557353267,
MarcoFalke,2019-11-22 02:10:32,I don't think there is anything we can do. I will remove the integer sanitizer tomorrow.,https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-557355597,557355597,
DrahtBot,2019-12-03 16:44:09,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-561253316,561253316,
practicalswift,2019-12-03 22:10:35,@MarcoFalke Do you mean remove the integer sanitizer for the Travis pcc64le build? Removing it across the board seems like a very risky move. We badly need all the sanitizers :),https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-561380163,561380163,
MarcoFalke,2019-12-04 16:16:33,"Ok, should be ready to merge now",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-561717092,561717092,
practicalswift,2019-12-04 17:36:48,"ACK fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75 assuming Travis is happy -- diff looks correct :)\n\nGlad you got the sanitizers working! :)",https://github.com/bitcoin/bitcoin/pull/17517#issuecomment-561758090,561758090,
