jnewbery,2020-11-28 20:35:52,cc @marcofalke @amitiuttarwar @jonatack ,https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-735287499,735287499,
DrahtBot,2020-11-29 01:37:07,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20726 (p2p: Add DISABLETX message for negotiating block-relay-only connections by sdaftuar)\n\nIf you consider this pull ",https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-735315695,735315695,
troygiorshev,2020-12-02 14:41:21,"ACK c2f5a3b386fa6e81fe453232915fef60f8cc607f\n\nI'll rebase my 20411, and therefore 19509 onto this.",https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-737271925,737271925,
laanwj,2020-12-03 13:06:02,"> It also changes the SUBVERSION constant to be a string instead of a bytes object.\n\nI don't think regarding it as a unicode string is strictly correct here. It is a byte slice from the wire and ideally should be regarded as such (for a similar reason I do not use strings in #20434. ELF ""strings"" are arbitrary byte sequences).\nWhere this can cause problems is in *de*serialization, if there's",https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-737968301,737968301,
MarcoFalke,2020-12-03 13:37:08,"P2P_SUBVERSION is really an ascii-string (for which the byte representation and unicode representation are identical). Theoretically, could be clarified by using `.en/decode('ascii')`.",https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-737998503,737998503,
jnewbery,2020-12-10 10:20:07,I think it's fine to store this as a string locally and then serialize/deserialize to bytes on the wire.,https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-742426889,742426889,
MarcoFalke,2020-12-10 10:32:49,"Side-note: Not sure what the current status of mypy is, but it might be able to detect the difference between `bytes` and `str`, if annotated.",https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-742433997,742433997,
jnewbery,2020-12-12 14:17:33,Rebased,https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-743762694,743762694,
jnewbery,2020-12-12 14:18:26,"Marking this as draft. It conflicts with #19315, which is higher priority.",https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-743762804,743762804,
jnewbery,2021-01-20 16:04:25,#19315 is merged. Marking this ready for review.,https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-763735939,763735939,
jnewbery,2021-02-17 09:32:46,rebased,https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-780426460,780426460,
laanwj,2021-02-18 12:59:18,"Code review ACK 9f21ed4037758f407b536c0dd129f8da83173c79\n\n> Side-note: Not sure what the current status of mypy is, but it might be able to detect the difference between bytes and str, if annotated.\n\nIt's pretty good at that.",https://github.com/bitcoin/bitcoin/pull/20524#issuecomment-781326253,781326253,
brunoerg,2021-02-19 12:51:50,"I think It should be:\n`f = struct.unpack(""<i"", f.read(4))[0]`\ninstead of \n`struct.unpack(""<i"", f.read(4))[0]`\n\nbecause you're not using the return value..",https://github.com/bitcoin/bitcoin/pull/20524#discussion_r579162175,579162175,test/functional/test_framework/messages.py
jnewbery,2021-02-19 13:19:46,`f` is the stream that we're deserializing from. We intentionally discard the version field from this message.,https://github.com/bitcoin/bitcoin/pull/20524#discussion_r579179060,579179060,test/functional/test_framework/messages.py
