[
  {
    "sha": "652311165c4ef298dab71d7162f9054abf439f77",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTIzMTExNjVjNGVmMjk4ZGFiNzFkNzE2MmY5MDU0YWJmNDM5Zjc3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-17T09:00:24Z"
      },
      "message": "[test] Move MIN_VERSION_SUPPORTED to p2p.py\n\nThe messages.py module should contain code and helpers for\n[de]serializing p2p messages. Specific usage of those messages should\nbe in p2p.py. Therefore move MIN_VERSION_SUPPORTED to p2p.py.\n\nAlso rename to MIN_P2P_VERSION_SUPPORTED to distinguish it from\nother versioning used in Bitcoin/Bitcoin Core.",
      "tree": {
        "sha": "bf5344575e2ea7c812cdc7b433ae4fc282eb25d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf5344575e2ea7c812cdc7b433ae4fc282eb25d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/652311165c4ef298dab71d7162f9054abf439f77",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/652311165c4ef298dab71d7162f9054abf439f77",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/652311165c4ef298dab71d7162f9054abf439f77",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/652311165c4ef298dab71d7162f9054abf439f77/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8639c446d88b5d521485dbec00029b3028d01492",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8639c446d88b5d521485dbec00029b3028d01492",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8639c446d88b5d521485dbec00029b3028d01492"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "623c01908bfc5d214c5a484ec26e4912b5aff6f9",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/652311165c4ef298dab71d7162f9054abf439f77/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/652311165c4ef298dab71d7162f9054abf439f77/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=652311165c4ef298dab71d7162f9054abf439f77",
        "patch": "@@ -31,7 +31,6 @@\n from test_framework.siphash import siphash256\n from test_framework.util import hex_str_to_bytes, assert_equal\n \n-MIN_VERSION_SUPPORTED = 60001\n MY_VERSION = 70016  # past wtxid relay\n MY_SUBVERSION = \"/python-p2p-tester:0.0.3/\"\n MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)"
      },
      {
        "sha": "befadc894f7b89b334040365275ddaebd537f8da",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/652311165c4ef298dab71d7162f9054abf439f77/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/652311165c4ef298dab71d7162f9054abf439f77/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=652311165c4ef298dab71d7162f9054abf439f77",
        "patch": "@@ -31,7 +31,6 @@\n from test_framework.messages import (\n     CBlockHeader,\n     MAX_HEADERS_RESULTS,\n-    MIN_VERSION_SUPPORTED,\n     msg_addr,\n     msg_addrv2,\n     msg_block,\n@@ -79,6 +78,9 @@\n \n logger = logging.getLogger(\"TestFramework.p2p\")\n \n+# The minimum P2P version that this test framework supports\n+MIN_P2P_VERSION_SUPPORTED = 60001\n+\n MESSAGEMAP = {\n     b\"addr\": msg_addr,\n     b\"addrv2\": msg_addrv2,\n@@ -417,7 +419,7 @@ def on_verack(self, message):\n         pass\n \n     def on_version(self, message):\n-        assert message.nVersion >= MIN_VERSION_SUPPORTED, \"Version {} received. Test framework only supports versions greater than {}\".format(message.nVersion, MIN_VERSION_SUPPORTED)\n+        assert message.nVersion >= MIN_P2P_VERSION_SUPPORTED, \"Version {} received. Test framework only supports versions greater than {}\".format(message.nVersion, MIN_P2P_VERSION_SUPPORTED)\n         if message.nVersion >= 70016 and self.wtxidrelay:\n             self.send_message(msg_wtxidrelay())\n         if self.support_addrv2:"
      }
    ]
  },
  {
    "sha": "7e158a69104831611462cb555da931331b237c78",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTE1OGE2OTEwNDgzMTYxMTQ2MmNiNTU1ZGE5MzEzMzFiMjM3Yzc4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-17T09:00:53Z"
      },
      "message": "[test] Move MY_VERSION to p2p.py\n\nThe messages.py module should contain code and helpers for\n[de]serializing p2p messages. Specific usage of those messages should\nbe in p2p.py. Therefore move MY_VERSION to p2p.py.\n\nAlso rename to P2P_VERSION to distinguish it from\nother versioning used in Bitcoin/Bitcoin Core.\n\nAlso always set the nVersion field in CBlockLocator to 0 and ignore the\nfield in deserialized messages. The field is not currently used for\nanything in Bitcoin Core.",
      "tree": {
        "sha": "f971e3a91e458b076d793fa801e759a581cd955a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f971e3a91e458b076d793fa801e759a581cd955a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e158a69104831611462cb555da931331b237c78",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e158a69104831611462cb555da931331b237c78",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e158a69104831611462cb555da931331b237c78",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e158a69104831611462cb555da931331b237c78/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "652311165c4ef298dab71d7162f9054abf439f77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/652311165c4ef298dab71d7162f9054abf439f77",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/652311165c4ef298dab71d7162f9054abf439f77"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "2324a3f58895b35dcd8f9540bd4700eb49412851",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e158a69104831611462cb555da931331b237c78/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e158a69104831611462cb555da931331b237c78/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=7e158a69104831611462cb555da931331b237c78",
        "patch": "@@ -19,7 +19,11 @@\n     msg_mempool,\n     msg_version,\n )\n-from test_framework.p2p import P2PInterface, p2p_lock\n+from test_framework.p2p import (\n+    P2PInterface,\n+    P2P_VERSION,\n+    p2p_lock,\n+)\n from test_framework.script import MAX_SCRIPT_ELEMENT_SIZE\n from test_framework.test_framework import BitcoinTestFramework\n \n@@ -218,6 +222,7 @@ def run_test(self):\n         filter_peer_without_nrelay = self.nodes[0].add_p2p_connection(P2PBloomFilter(), send_version=False, wait_for_verack=False)\n         # Send version with fRelay=False\n         version_without_fRelay = msg_version()\n+        version_without_fRelay.nVersion = P2P_VERSION\n         version_without_fRelay.nRelay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\n         filter_peer_without_nrelay.wait_for_verack()"
      },
      {
        "sha": "b120ce2438d93e5c85678acff6e2e9d1989b77a6",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e158a69104831611462cb555da931331b237c78/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e158a69104831611462cb555da931331b237c78/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=7e158a69104831611462cb555da931331b237c78",
        "patch": "@@ -31,7 +31,6 @@\n from test_framework.siphash import siphash256\n from test_framework.util import hex_str_to_bytes, assert_equal\n \n-MY_VERSION = 70016  # past wtxid relay\n MY_SUBVERSION = \"/python-p2p-tester:0.0.3/\"\n MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n \n@@ -325,22 +324,20 @@ class CBlockLocator:\n     __slots__ = (\"nVersion\", \"vHave\")\n \n     def __init__(self):\n-        self.nVersion = MY_VERSION\n         self.vHave = []\n \n     def deserialize(self, f):\n-        self.nVersion = struct.unpack(\"<i\", f.read(4))[0]\n+        struct.unpack(\"<i\", f.read(4))[0]  # Ignore version field.\n         self.vHave = deser_uint256_vector(f)\n \n     def serialize(self):\n         r = b\"\"\n-        r += struct.pack(\"<i\", self.nVersion)\n+        r += struct.pack(\"<i\", 0)  # Bitcoin Core ignores version field. Set it to 0.\n         r += ser_uint256_vector(self.vHave)\n         return r\n \n     def __repr__(self):\n-        return \"CBlockLocator(nVersion=%i vHave=%s)\" \\\n-            % (self.nVersion, repr(self.vHave))\n+        return \"CBlockLocator(vHave=%s)\" % (repr(self.vHave))\n \n \n class COutPoint:\n@@ -1027,7 +1024,7 @@ class msg_version:\n     msgtype = b\"version\"\n \n     def __init__(self):\n-        self.nVersion = MY_VERSION\n+        self.nVersion = 0\n         self.nServices = NODE_NETWORK | NODE_WITNESS\n         self.nTime = int(time.time())\n         self.addrTo = CAddress()"
      },
      {
        "sha": "998763ff4d7b159f859eb2f363a7392b43e76046",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e158a69104831611462cb555da931331b237c78/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e158a69104831611462cb555da931331b237c78/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=7e158a69104831611462cb555da931331b237c78",
        "patch": "@@ -80,6 +80,9 @@\n \n # The minimum P2P version that this test framework supports\n MIN_P2P_VERSION_SUPPORTED = 60001\n+# The P2P version that this test framework implements and sends in its `version` message\n+# Version 70016 supports wtxid relay\n+P2P_VERSION = 70016\n \n MESSAGEMAP = {\n     b\"addr\": msg_addr,\n@@ -329,6 +332,7 @@ def __init__(self, support_addrv2=False, wtxidrelay=True):\n     def peer_connect_send_version(self, services):\n         # Send a version msg\n         vt = msg_version()\n+        vt.nVersion = P2P_VERSION\n         vt.nServices = services\n         vt.addrTo.ip = self.dstaddr\n         vt.addrTo.port = self.dstport"
      }
    ]
  },
  {
    "sha": "9b4054cb7af22123c7fcc4989e143606a630b2af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjQwNTRjYjdhZjIyMTIzYzdmY2M0OTg5ZTE0MzYwNmE2MzBiMmFm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-17T09:22:37Z"
      },
      "message": "[test] Move MY_SUBVERSION to p2p.py\n\nThe messages.py module should contain code and helpers for\n[de]serializing p2p messages. Specific usage of those messages should\nbe in p2p.py. Therefore move MY_SUBVERSION to p2p.py.\n\nAlso rename to P2P_SUBVERSION.",
      "tree": {
        "sha": "3556018b69f5e836bf127413544b90a0982e22ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3556018b69f5e836bf127413544b90a0982e22ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b4054cb7af22123c7fcc4989e143606a630b2af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b4054cb7af22123c7fcc4989e143606a630b2af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b4054cb7af22123c7fcc4989e143606a630b2af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b4054cb7af22123c7fcc4989e143606a630b2af/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e158a69104831611462cb555da931331b237c78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e158a69104831611462cb555da931331b237c78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e158a69104831611462cb555da931331b237c78"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "78bdb32cf44db3cb1c07164bf588fccd9caf1239",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=9b4054cb7af22123c7fcc4989e143606a630b2af",
        "patch": "@@ -21,6 +21,7 @@\n )\n from test_framework.p2p import (\n     P2PInterface,\n+    P2P_SUBVERSION,\n     P2P_VERSION,\n     p2p_lock,\n )\n@@ -223,6 +224,7 @@ def run_test(self):\n         # Send version with fRelay=False\n         version_without_fRelay = msg_version()\n         version_without_fRelay.nVersion = P2P_VERSION\n+        version_without_fRelay.strSubVer = P2P_SUBVERSION\n         version_without_fRelay.nRelay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\n         filter_peer_without_nrelay.wait_for_verack()"
      },
      {
        "sha": "2cf327fc185f3c285ac57ac4dca641c8d6a6c240",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=9b4054cb7af22123c7fcc4989e143606a630b2af",
        "patch": "@@ -17,7 +17,10 @@\n     msg_ping,\n     msg_version,\n )\n-from test_framework.p2p import P2PInterface\n+from test_framework.p2p import (\n+    P2PInterface,\n+    P2P_SUBVERSION,\n+)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n@@ -131,6 +134,7 @@ def run_test(self):\n         p2p_old_peer = self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n+        old_version_msg.strSubVer = P2P_SUBVERSION\n         with self.nodes[0].assert_debug_log(['peer=3 using obsolete version 31799; disconnecting']):\n             p2p_old_peer.send_message(old_version_msg)\n             p2p_old_peer.wait_for_disconnect()"
      },
      {
        "sha": "cee662aadedd1a131712ef7125ddf0ab327bfb79",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=9b4054cb7af22123c7fcc4989e143606a630b2af",
        "patch": "@@ -31,7 +31,6 @@\n from test_framework.siphash import siphash256\n from test_framework.util import hex_str_to_bytes, assert_equal\n \n-MY_SUBVERSION = \"/python-p2p-tester:0.0.3/\"\n MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n \n MAX_LOCATOR_SZ = 101\n@@ -1030,7 +1029,7 @@ def __init__(self):\n         self.addrTo = CAddress()\n         self.addrFrom = CAddress()\n         self.nNonce = random.getrandbits(64)\n-        self.strSubVer = MY_SUBVERSION\n+        self.strSubVer = ''\n         self.nStartingHeight = -1\n         self.nRelay = MY_RELAY\n "
      },
      {
        "sha": "0814dec54671c82f042a059e5154bb0a0aea333c",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=9b4054cb7af22123c7fcc4989e143606a630b2af",
        "patch": "@@ -83,6 +83,8 @@\n # The P2P version that this test framework implements and sends in its `version` message\n # Version 70016 supports wtxid relay\n P2P_VERSION = 70016\n+# The P2P user agent string that this test framework sends in its `version` message\n+P2P_SUBVERSION = \"/python-p2p-tester:0.0.3/\"\n \n MESSAGEMAP = {\n     b\"addr\": msg_addr,\n@@ -333,6 +335,7 @@ def peer_connect_send_version(self, services):\n         # Send a version msg\n         vt = msg_version()\n         vt.nVersion = P2P_VERSION\n+        vt.strSubVer = P2P_SUBVERSION\n         vt.nServices = services\n         vt.addrTo.ip = self.dstaddr\n         vt.addrTo.port = self.dstport"
      },
      {
        "sha": "24f48d5535297deeb8531dc0bbdac00f8a1a92e2",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b4054cb7af22123c7fcc4989e143606a630b2af/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=9b4054cb7af22123c7fcc4989e143606a630b2af",
        "patch": "@@ -23,7 +23,7 @@\n \n from .authproxy import JSONRPCException\n from .descriptors import descsum_create\n-from .messages import MY_SUBVERSION\n+from .p2p import P2P_SUBVERSION\n from .util import (\n     MAX_NODES,\n     append_config,\n@@ -572,7 +572,7 @@ def addconnection_callback(address, port):\n \n     def num_test_p2p_connections(self):\n         \"\"\"Return number of test framework p2p connections to the node.\"\"\"\n-        return len([peer for peer in self.getpeerinfo() if peer['subver'] == MY_SUBVERSION])\n+        return len([peer for peer in self.getpeerinfo() if peer['subver'] == P2P_SUBVERSION])\n \n     def disconnect_p2ps(self):\n         \"\"\"Close all p2p connections to the node.\"\"\""
      }
    ]
  },
  {
    "sha": "010542614dbebba5f5ad6a58c0554930e9e214fc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTA1NDI2MTRkYmViYmE1ZjVhZDZhNThjMDU1NDkzMGU5ZTIxNGZj",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-17T09:23:32Z"
      },
      "message": "[test] Move MY_RELAY to p2p.py\n\nmessages.py is for message and primitive data structures. Specifics\nabout the test framework's p2p implementation should be in p2p.py.\n\nAlso rename to P2P_VERSION_RELAY. Also rename msg_version.nRelay to\nrelay. In Bitcoin Core, this is referred to as fRelay, since it's a\nbool, so this field has always been misnamed.",
      "tree": {
        "sha": "cd059d76169e95b298d729ba6acac7545f566449",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd059d76169e95b298d729ba6acac7545f566449"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/010542614dbebba5f5ad6a58c0554930e9e214fc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/010542614dbebba5f5ad6a58c0554930e9e214fc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/010542614dbebba5f5ad6a58c0554930e9e214fc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/010542614dbebba5f5ad6a58c0554930e9e214fc/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b4054cb7af22123c7fcc4989e143606a630b2af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b4054cb7af22123c7fcc4989e143606a630b2af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b4054cb7af22123c7fcc4989e143606a630b2af"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 16,
      "deletions": 13
    },
    "files": [
      {
        "sha": "4df3dd6a2158f57a439087c78bfe641290aa4d11",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/010542614dbebba5f5ad6a58c0554930e9e214fc/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/010542614dbebba5f5ad6a58c0554930e9e214fc/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=010542614dbebba5f5ad6a58c0554930e9e214fc",
        "patch": "@@ -221,11 +221,11 @@ def run_test(self):\n         self.log.info('Test BIP 37 for a node with fRelay = False')\n         # Add peer but do not send version yet\n         filter_peer_without_nrelay = self.nodes[0].add_p2p_connection(P2PBloomFilter(), send_version=False, wait_for_verack=False)\n-        # Send version with fRelay=False\n+        # Send version with relay=False\n         version_without_fRelay = msg_version()\n         version_without_fRelay.nVersion = P2P_VERSION\n         version_without_fRelay.strSubVer = P2P_SUBVERSION\n-        version_without_fRelay.nRelay = 0\n+        version_without_fRelay.relay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\n         filter_peer_without_nrelay.wait_for_verack()\n         assert not self.nodes[0].getpeerinfo()[0]['relaytxes']"
      },
      {
        "sha": "42e9b9f270106ecbd7076d1973284fa328c30461",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/010542614dbebba5f5ad6a58c0554930e9e214fc/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/010542614dbebba5f5ad6a58c0554930e9e214fc/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=010542614dbebba5f5ad6a58c0554930e9e214fc",
        "patch": "@@ -20,6 +20,7 @@\n from test_framework.p2p import (\n     P2PInterface,\n     P2P_SUBVERSION,\n+    P2P_VERSION_RELAY,\n )\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n@@ -128,13 +129,14 @@ def run_test(self):\n         assert_equal(ver.addrFrom.port, 0)\n         assert_equal(ver.addrFrom.ip, '0.0.0.0')\n         assert_equal(ver.nStartingHeight, 201)\n-        assert_equal(ver.nRelay, 1)\n+        assert_equal(ver.relay, 1)\n \n         self.log.info('Check that old peers are disconnected')\n         p2p_old_peer = self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n         old_version_msg.strSubVer = P2P_SUBVERSION\n+        old_version_msg.relay = P2P_VERSION_RELAY\n         with self.nodes[0].assert_debug_log(['peer=3 using obsolete version 31799; disconnecting']):\n             p2p_old_peer.send_message(old_version_msg)\n             p2p_old_peer.wait_for_disconnect()"
      },
      {
        "sha": "5170d430b7ecac3f4cb758b5e061e33b35f61425",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/010542614dbebba5f5ad6a58c0554930e9e214fc/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/010542614dbebba5f5ad6a58c0554930e9e214fc/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=010542614dbebba5f5ad6a58c0554930e9e214fc",
        "patch": "@@ -31,8 +31,6 @@\n from test_framework.siphash import siphash256\n from test_framework.util import hex_str_to_bytes, assert_equal\n \n-MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n-\n MAX_LOCATOR_SZ = 101\n MAX_BLOCK_BASE_SIZE = 1000000\n MAX_BLOOM_FILTER_SIZE = 36000\n@@ -1018,7 +1016,7 @@ def __repr__(self):\n \n # Objects that correspond to messages on the wire\n class msg_version:\n-    __slots__ = (\"addrFrom\", \"addrTo\", \"nNonce\", \"nRelay\", \"nServices\",\n+    __slots__ = (\"addrFrom\", \"addrTo\", \"nNonce\", \"relay\", \"nServices\",\n                  \"nStartingHeight\", \"nTime\", \"nVersion\", \"strSubVer\")\n     msgtype = b\"version\"\n \n@@ -1031,7 +1029,7 @@ def __init__(self):\n         self.nNonce = random.getrandbits(64)\n         self.strSubVer = ''\n         self.nStartingHeight = -1\n-        self.nRelay = MY_RELAY\n+        self.relay = 0\n \n     def deserialize(self, f):\n         self.nVersion = struct.unpack(\"<i\", f.read(4))[0]\n@@ -1050,11 +1048,11 @@ def deserialize(self, f):\n         if self.nVersion >= 70001:\n             # Relay field is optional for version 70001 onwards\n             try:\n-                self.nRelay = struct.unpack(\"<b\", f.read(1))[0]\n+                self.relay = struct.unpack(\"<b\", f.read(1))[0]\n             except:\n-                self.nRelay = 0\n+                self.relay = 0\n         else:\n-            self.nRelay = 0\n+            self.relay = 0\n \n     def serialize(self):\n         r = b\"\"\n@@ -1066,14 +1064,14 @@ def serialize(self):\n         r += struct.pack(\"<Q\", self.nNonce)\n         r += ser_string(self.strSubVer.encode('utf-8'))\n         r += struct.pack(\"<i\", self.nStartingHeight)\n-        r += struct.pack(\"<b\", self.nRelay)\n+        r += struct.pack(\"<b\", self.relay)\n         return r\n \n     def __repr__(self):\n-        return 'msg_version(nVersion=%i nServices=%i nTime=%s addrTo=%s addrFrom=%s nNonce=0x%016X strSubVer=%s nStartingHeight=%i nRelay=%i)' \\\n+        return 'msg_version(nVersion=%i nServices=%i nTime=%s addrTo=%s addrFrom=%s nNonce=0x%016X strSubVer=%s nStartingHeight=%i relay=%i)' \\\n             % (self.nVersion, self.nServices, time.ctime(self.nTime),\n                repr(self.addrTo), repr(self.addrFrom), self.nNonce,\n-               self.strSubVer, self.nStartingHeight, self.nRelay)\n+               self.strSubVer, self.nStartingHeight, self.relay)\n \n \n class msg_verack:"
      },
      {
        "sha": "179d03e93a9502f8158179354d0d459380922c1e",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/010542614dbebba5f5ad6a58c0554930e9e214fc/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/010542614dbebba5f5ad6a58c0554930e9e214fc/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=010542614dbebba5f5ad6a58c0554930e9e214fc",
        "patch": "@@ -85,6 +85,8 @@\n P2P_VERSION = 70016\n # The P2P user agent string that this test framework sends in its `version` message\n P2P_SUBVERSION = \"/python-p2p-tester:0.0.3/\"\n+# Value for relay that this test framework sends in its `version` message\n+P2P_VERSION_RELAY = 1\n \n MESSAGEMAP = {\n     b\"addr\": msg_addr,\n@@ -336,6 +338,7 @@ def peer_connect_send_version(self, services):\n         vt = msg_version()\n         vt.nVersion = P2P_VERSION\n         vt.strSubVer = P2P_SUBVERSION\n+        vt.relay = P2P_VERSION_RELAY\n         vt.nServices = services\n         vt.addrTo.ip = self.dstaddr\n         vt.addrTo.port = self.dstport"
      }
    ]
  },
  {
    "sha": "9ce4c3c4c1682032500c97af2d6383897b87c413",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2U0YzNjNGMxNjgyMDMyNTAwYzk3YWYyZDYzODM4OTdiODdjNDEz",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-17T09:29:41Z"
      },
      "message": "[test] Add P2P_SERVICES to p2p.py\n\nThe messages.py module should contain code and helpers for\n[de]serializing p2p messages. Specific usage of those messages should\nbe in p2p.py. Therefore specify the nServices value in the calling code,\nnot in the messages.py module.",
      "tree": {
        "sha": "91948ee41870498512f3f3c13636140d76b9589b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91948ee41870498512f3f3c13636140d76b9589b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ce4c3c4c1682032500c97af2d6383897b87c413",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ce4c3c4c1682032500c97af2d6383897b87c413",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ce4c3c4c1682032500c97af2d6383897b87c413",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ce4c3c4c1682032500c97af2d6383897b87c413/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "010542614dbebba5f5ad6a58c0554930e9e214fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/010542614dbebba5f5ad6a58c0554930e9e214fc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/010542614dbebba5f5ad6a58c0554930e9e214fc"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8f644191384b02e5bcc5caffee0b27ee3ffd6c33",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ce4c3c4c1682032500c97af2d6383897b87c413/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ce4c3c4c1682032500c97af2d6383897b87c413/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=9ce4c3c4c1682032500c97af2d6383897b87c413",
        "patch": "@@ -21,6 +21,7 @@\n )\n from test_framework.p2p import (\n     P2PInterface,\n+    P2P_SERVICES,\n     P2P_SUBVERSION,\n     P2P_VERSION,\n     p2p_lock,\n@@ -225,6 +226,7 @@ def run_test(self):\n         version_without_fRelay = msg_version()\n         version_without_fRelay.nVersion = P2P_VERSION\n         version_without_fRelay.strSubVer = P2P_SUBVERSION\n+        version_without_fRelay.nServices = P2P_SERVICES\n         version_without_fRelay.relay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\n         filter_peer_without_nrelay.wait_for_verack()"
      },
      {
        "sha": "12b8b7baff00a156bb6af7592f5c45072314db8c",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ce4c3c4c1682032500c97af2d6383897b87c413/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ce4c3c4c1682032500c97af2d6383897b87c413/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=9ce4c3c4c1682032500c97af2d6383897b87c413",
        "patch": "@@ -20,6 +20,7 @@\n from test_framework.p2p import (\n     P2PInterface,\n     P2P_SUBVERSION,\n+    P2P_SERVICES,\n     P2P_VERSION_RELAY,\n )\n from test_framework.test_framework import BitcoinTestFramework\n@@ -136,6 +137,7 @@ def run_test(self):\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n         old_version_msg.strSubVer = P2P_SUBVERSION\n+        old_version_msg.nServices = P2P_SERVICES\n         old_version_msg.relay = P2P_VERSION_RELAY\n         with self.nodes[0].assert_debug_log(['peer=3 using obsolete version 31799; disconnecting']):\n             p2p_old_peer.send_message(old_version_msg)"
      },
      {
        "sha": "a18a9ec1090f8ecb0e0857cb207ddea909c1f513",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ce4c3c4c1682032500c97af2d6383897b87c413/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ce4c3c4c1682032500c97af2d6383897b87c413/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=9ce4c3c4c1682032500c97af2d6383897b87c413",
        "patch": "@@ -1022,7 +1022,7 @@ class msg_version:\n \n     def __init__(self):\n         self.nVersion = 0\n-        self.nServices = NODE_NETWORK | NODE_WITNESS\n+        self.nServices = 0\n         self.nTime = int(time.time())\n         self.addrTo = CAddress()\n         self.addrFrom = CAddress()"
      },
      {
        "sha": "05099f3339853a75a15075a0ca5f561d0299a2e6",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ce4c3c4c1682032500c97af2d6383897b87c413/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ce4c3c4c1682032500c97af2d6383897b87c413/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=9ce4c3c4c1682032500c97af2d6383897b87c413",
        "patch": "@@ -83,6 +83,8 @@\n # The P2P version that this test framework implements and sends in its `version` message\n # Version 70016 supports wtxid relay\n P2P_VERSION = 70016\n+# The services that this test framework offers in its `version` message\n+P2P_SERVICES = NODE_NETWORK | NODE_WITNESS\n # The P2P user agent string that this test framework sends in its `version` message\n P2P_SUBVERSION = \"/python-p2p-tester:0.0.3/\"\n # Value for relay that this test framework sends in its `version` message\n@@ -346,7 +348,7 @@ def peer_connect_send_version(self, services):\n         vt.addrFrom.port = 0\n         self.on_connection_send_msg = vt  # Will be sent in connection_made callback\n \n-    def peer_connect(self, *args, services=NODE_NETWORK | NODE_WITNESS, send_version=True, **kwargs):\n+    def peer_connect(self, *args, services=P2P_SERVICES, send_version=True, **kwargs):\n         create_conn = super().peer_connect(*args, **kwargs)\n \n         if send_version:"
      }
    ]
  },
  {
    "sha": "9f21ed4037758f407b536c0dd129f8da83173c79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjIxZWQ0MDM3NzU4ZjQwN2I1MzZjMGRkMTI5ZjhkYTgzMTczYzc5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T12:41:15Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-17T09:29:44Z"
      },
      "message": "[test] Check user agent string from test framework connections\n\nAdd a check that new connections from the test framework to the\nnode have the correct user agent string. This makes bugs easier\nto detect if the user agent string ever changes.",
      "tree": {
        "sha": "0168609572639ab144ef0a326cf86727ba8c186e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0168609572639ab144ef0a326cf86727ba8c186e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f21ed4037758f407b536c0dd129f8da83173c79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f21ed4037758f407b536c0dd129f8da83173c79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f21ed4037758f407b536c0dd129f8da83173c79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f21ed4037758f407b536c0dd129f8da83173c79/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ce4c3c4c1682032500c97af2d6383897b87c413",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ce4c3c4c1682032500c97af2d6383897b87c413",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ce4c3c4c1682032500c97af2d6383897b87c413"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5bc1409ba295780c8b61ad642203ba93e1e21e5d",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f21ed4037758f407b536c0dd129f8da83173c79/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f21ed4037758f407b536c0dd129f8da83173c79/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=9f21ed4037758f407b536c0dd129f8da83173c79",
        "patch": "@@ -26,6 +26,7 @@\n from .p2p import P2P_SUBVERSION\n from .util import (\n     MAX_NODES,\n+    assert_equal,\n     append_config,\n     delete_cookie_file,\n     get_auth_cookie,\n@@ -545,6 +546,11 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n             # in comparison to the upside of making tests less fragile and unexpected intermittent errors less likely.\n             p2p_conn.sync_with_ping()\n \n+            # Consistency check that the Bitcoin Core has received our user agent string. This checks the\n+            # node's newest peer. It could be racy if another Bitcoin Core node has connected since we opened\n+            # our connection, but we don't expect that to happen.\n+            assert_equal(self.getpeerinfo()[-1]['subver'], P2P_SUBVERSION)\n+\n         return p2p_conn\n \n     def add_outbound_p2p_connection(self, p2p_conn, *, p2p_idx, connection_type=\"outbound-full-relay\", **kwargs):"
      }
    ]
  }
]