[
  {
    "sha": "090b75c14be6b9ba2efe38a17d141c6e6af575cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTBiNzVjMTRiZTZiOWJhMmVmZTM4YTE3ZDE0MWM2ZTZhZjU3NWNi",
    "commit": {
      "author": {
        "name": "User",
        "email": "naumenko.gs@gmail.com",
        "date": "2019-10-16T21:06:20Z"
      },
      "committer": {
        "name": "User",
        "email": "naumenko.gs@gmail.com",
        "date": "2019-10-16T21:06:20Z"
      },
      "message": "p2p: Avoid allocating memory for addrKnown where we don't need it",
      "tree": {
        "sha": "a19fd9414b69ae3e0b5a5ac70804e5537e7c5539",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a19fd9414b69ae3e0b5a5ac70804e5537e7c5539"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/090b75c14be6b9ba2efe38a17d141c6e6af575cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/090b75c14be6b9ba2efe38a17d141c6e6af575cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/090b75c14be6b9ba2efe38a17d141c6e6af575cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/090b75c14be6b9ba2efe38a17d141c6e6af575cb/comments",
    "author": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c34b88620dc8435b83e6744895f2ecd3c9ec8de7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c34b88620dc8435b83e6744895f2ecd3c9ec8de7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c34b88620dc8435b83e6744895f2ecd3c9ec8de7"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "c3f64ba4bc4f8870389af7cf95748490640fb59b",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/090b75c14be6b9ba2efe38a17d141c6e6af575cb/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/090b75c14be6b9ba2efe38a17d141c6e6af575cb/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=090b75c14be6b9ba2efe38a17d141c6e6af575cb",
        "patch": "@@ -115,9 +115,6 @@ class CBloomFilter\n class CRollingBloomFilter\n {\n public:\n-    // A random bloom filter calls GetRand() at creation time.\n-    // Don't create global CRollingBloomFilter objects, as they may be\n-    // constructed before the randomizer is properly initialized.\n     CRollingBloomFilter(const unsigned int nElements, const double nFPRate);\n \n     void insert(const std::vector<unsigned char>& vKey);"
      },
      {
        "sha": "df52689092902d65729542a7733f83bd4273e55a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/090b75c14be6b9ba2efe38a17d141c6e6af575cb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/090b75c14be6b9ba2efe38a17d141c6e6af575cb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=090b75c14be6b9ba2efe38a17d141c6e6af575cb",
        "patch": "@@ -2652,7 +2652,6 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     addrBind(addrBindIn),\n     fInbound(fInboundIn),\n     nKeyedNetGroup(nKeyedNetGroupIn),\n-    addrKnown(5000, 0.001),\n     // Don't relay addr messages to peers that we connect to as block-relay-only\n     // peers (to prevent adversaries from inferring these links from addr\n     // traffic).\n@@ -2669,6 +2668,10 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n         m_tx_relay = MakeUnique<TxRelay>();\n     }\n \n+    if (m_addr_relay_peer) {\n+        m_addr_known = MakeUnique<CRollingBloomFilter>(5000, 0.001);\n+    }\n+\n     for (const std::string &msg : getAllNetMessageTypes())\n         mapRecvBytesPerMsgCmd[msg] = 0;\n     mapRecvBytesPerMsgCmd[NET_MESSAGE_COMMAND_OTHER] = 0;"
      },
      {
        "sha": "4a7f7bc093a7334288a0cd2902b5e7bd93bcf220",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/090b75c14be6b9ba2efe38a17d141c6e6af575cb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/090b75c14be6b9ba2efe38a17d141c6e6af575cb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=090b75c14be6b9ba2efe38a17d141c6e6af575cb",
        "patch": "@@ -729,7 +729,7 @@ class CNode\n \n     // flood relay\n     std::vector<CAddress> vAddrToSend;\n-    CRollingBloomFilter addrKnown;\n+    std::unique_ptr<CRollingBloomFilter> m_addr_known;\n     bool fGetAddr{false};\n     int64_t nNextAddrSend GUARDED_BY(cs_sendProcessing){0};\n     int64_t nNextLocalAddrSend GUARDED_BY(cs_sendProcessing){0};\n@@ -884,15 +884,15 @@ class CNode\n \n     void AddAddressKnown(const CAddress& _addr)\n     {\n-        addrKnown.insert(_addr.GetKey());\n+        m_addr_known->insert(_addr.GetKey());\n     }\n \n     void PushAddress(const CAddress& _addr, FastRandomContext &insecure_rand)\n     {\n         // Known checking here is only to save space from duplicates.\n         // SendMessages will filter it again for knowns that were added\n         // after addresses were pushed.\n-        if (_addr.IsValid() && !addrKnown.contains(_addr.GetKey())) {\n+        if (_addr.IsValid() && !m_addr_known->contains(_addr.GetKey())) {\n             if (vAddrToSend.size() >= MAX_ADDR_TO_SEND) {\n                 vAddrToSend[insecure_rand.randrange(vAddrToSend.size())] = _addr;\n             } else {"
      },
      {
        "sha": "188c3d777e195336a99b2d24d4372b05880ea562",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/090b75c14be6b9ba2efe38a17d141c6e6af575cb/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/090b75c14be6b9ba2efe38a17d141c6e6af575cb/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=090b75c14be6b9ba2efe38a17d141c6e6af575cb",
        "patch": "@@ -1315,7 +1315,7 @@ static void RelayAddress(const CAddress& addr, bool fReachable, CConnman* connma\n \n     // Relay to a limited number of other nodes\n     // Use deterministic randomness to send to the same nodes for 24 hours\n-    // at a time so the addrKnowns of the chosen nodes prevent repeats\n+    // at a time so the m_addr_knowns of the chosen nodes prevent repeats\n     uint64_t hashAddr = addr.GetHash();\n     const CSipHasher hasher = connman->GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24*60*60));\n     FastRandomContext insecure_rand;\n@@ -3563,9 +3563,9 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n             vAddr.reserve(pto->vAddrToSend.size());\n             for (const CAddress& addr : pto->vAddrToSend)\n             {\n-                if (!pto->addrKnown.contains(addr.GetKey()))\n+                if (!pto->m_addr_known->contains(addr.GetKey()))\n                 {\n-                    pto->addrKnown.insert(addr.GetKey());\n+                    pto->m_addr_known->insert(addr.GetKey());\n                     vAddr.push_back(addr);\n                     // receiver rejects addr messages larger than 1000\n                     if (vAddr.size() >= 1000)"
      }
    ]
  },
  {
    "sha": "a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTUyZTg0NzdjNWJjZDIyYTU0NTdmNGY3M2EyZmQ2ZGI4YWNkMmMy",
    "commit": {
      "author": {
        "name": "User",
        "email": "naumenko.gs@gmail.com",
        "date": "2019-10-25T20:28:14Z"
      },
      "committer": {
        "name": "User",
        "email": "naumenko.gs@gmail.com",
        "date": "2019-10-25T20:28:14Z"
      },
      "message": "added asserts to check m_addr_known when it's used",
      "tree": {
        "sha": "cf5979d0c6e4f63086608a664d646f364cfd2736",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf5979d0c6e4f63086608a664d646f364cfd2736"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2/comments",
    "author": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "090b75c14be6b9ba2efe38a17d141c6e6af575cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/090b75c14be6b9ba2efe38a17d141c6e6af575cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/090b75c14be6b9ba2efe38a17d141c6e6af575cb"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "95193a09db541771b3fb98d07a44f9cdb3cd4619",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2",
        "patch": "@@ -884,6 +884,7 @@ class CNode\n \n     void AddAddressKnown(const CAddress& _addr)\n     {\n+        assert(m_addr_known);\n         m_addr_known->insert(_addr.GetKey());\n     }\n \n@@ -892,6 +893,7 @@ class CNode\n         // Known checking here is only to save space from duplicates.\n         // SendMessages will filter it again for knowns that were added\n         // after addresses were pushed.\n+        assert(m_addr_known);\n         if (_addr.IsValid() && !m_addr_known->contains(_addr.GetKey())) {\n             if (vAddrToSend.size() >= MAX_ADDR_TO_SEND) {\n                 vAddrToSend[insecure_rand.randrange(vAddrToSend.size())] = _addr;"
      },
      {
        "sha": "c1743c2e32ccf9b64d5f411adfa0171c5cc02857",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2",
        "patch": "@@ -3561,6 +3561,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n             pto->nNextAddrSend = PoissonNextSend(nNow, AVG_ADDRESS_BROADCAST_INTERVAL);\n             std::vector<CAddress> vAddr;\n             vAddr.reserve(pto->vAddrToSend.size());\n+            assert(pto->m_addr_known);\n             for (const CAddress& addr : pto->vAddrToSend)\n             {\n                 if (!pto->m_addr_known->contains(addr.GetKey()))"
      }
    ]
  },
  {
    "sha": "b6d2183858975abc961207c125c15791e531edcc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmQyMTgzODU4OTc1YWJjOTYxMjA3YzEyNWMxNTc5MWU1MzFlZGNj",
    "commit": {
      "author": {
        "name": "User",
        "email": "naumenko.gs@gmail.com",
        "date": "2019-10-31T17:42:02Z"
      },
      "committer": {
        "name": "User",
        "email": "naumenko.gs@gmail.com",
        "date": "2019-10-31T17:42:02Z"
      },
      "message": "Minor refactoring to remove implied m_addr_relay_peer.\n\nCo-authored-by: MarcoFalke <falke.marco@gmail.com>",
      "tree": {
        "sha": "65b9ce2916c7e30a61768d37940368dfec5d4a4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65b9ce2916c7e30a61768d37940368dfec5d4a4e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6d2183858975abc961207c125c15791e531edcc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6d2183858975abc961207c125c15791e531edcc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b6d2183858975abc961207c125c15791e531edcc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6d2183858975abc961207c125c15791e531edcc/comments",
    "author": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a552e8477c5bcd22a5457f4f73a2fd6db8acd2c2"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 3,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0415386c0d93cab7914a146b38bcf615ac523a56",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6d2183858975abc961207c125c15791e531edcc/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6d2183858975abc961207c125c15791e531edcc/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b6d2183858975abc961207c125c15791e531edcc",
        "patch": "@@ -2655,7 +2655,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     // Don't relay addr messages to peers that we connect to as block-relay-only\n     // peers (to prevent adversaries from inferring these links from addr\n     // traffic).\n-    m_addr_relay_peer(!block_relay_only),\n+    m_addr_known{block_relay_only ? nullptr : MakeUnique<CRollingBloomFilter>(5000, 0.001)},\n     id(idIn),\n     nLocalHostNonce(nLocalHostNonceIn),\n     nLocalServices(nLocalServicesIn),\n@@ -2668,10 +2668,6 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n         m_tx_relay = MakeUnique<TxRelay>();\n     }\n \n-    if (m_addr_relay_peer) {\n-        m_addr_known = MakeUnique<CRollingBloomFilter>(5000, 0.001);\n-    }\n-\n     for (const std::string &msg : getAllNetMessageTypes())\n         mapRecvBytesPerMsgCmd[msg] = 0;\n     mapRecvBytesPerMsgCmd[NET_MESSAGE_COMMAND_OTHER] = 0;"
      },
      {
        "sha": "5bca7892192e752e4df3c75822d55e7a51c67a15",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6d2183858975abc961207c125c15791e531edcc/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6d2183858975abc961207c125c15791e531edcc/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=b6d2183858975abc961207c125c15791e531edcc",
        "patch": "@@ -729,13 +729,12 @@ class CNode\n \n     // flood relay\n     std::vector<CAddress> vAddrToSend;\n-    std::unique_ptr<CRollingBloomFilter> m_addr_known;\n+    const std::unique_ptr<CRollingBloomFilter> m_addr_known;\n     bool fGetAddr{false};\n     int64_t nNextAddrSend GUARDED_BY(cs_sendProcessing){0};\n     int64_t nNextLocalAddrSend GUARDED_BY(cs_sendProcessing){0};\n \n-    const bool m_addr_relay_peer;\n-    bool IsAddrRelayPeer() const { return m_addr_relay_peer; }\n+    bool IsAddrRelayPeer() const { return m_addr_known != nullptr; }\n \n     // List of block ids we still have announce.\n     // There is no final sorting before sending, as they are always sent immediately"
      }
    ]
  }
]