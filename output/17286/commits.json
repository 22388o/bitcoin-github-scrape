[
  {
    "sha": "a8b82867d544d221de00f6a0e26dbcc389326629",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGI4Mjg2N2Q1NDRkMjIxZGUwMGY2YTBlMjZkYmNjMzg5MzI2NjI5",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-10-30T22:29:16Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-10-30T22:29:16Z"
      },
      "message": "Fix incorrect help-debug for -checkpoints",
      "tree": {
        "sha": "b208f2e72b1b283b42c871569c007e9e1232cba6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b208f2e72b1b283b42c871569c007e9e1232cba6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8b82867d544d221de00f6a0e26dbcc389326629",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8b82867d544d221de00f6a0e26dbcc389326629",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8b82867d544d221de00f6a0e26dbcc389326629",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8b82867d544d221de00f6a0e26dbcc389326629/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d7134ead84e3b824688f0ba195d5dc461a0491e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7134ead84e3b824688f0ba195d5dc461a0491e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d7134ead84e3b824688f0ba195d5dc461a0491e6"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1b0f0734e0d14ada1c048a02b50a392b414f8152",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8b82867d544d221de00f6a0e26dbcc389326629/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8b82867d544d221de00f6a0e26dbcc389326629/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a8b82867d544d221de00f6a0e26dbcc389326629",
        "patch": "@@ -482,7 +482,7 @@ void SetupServerArgs()\n         \"(0-4, default: %u)\", DEFAULT_CHECKLEVEL), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-checkblockindex\", strprintf(\"Do a consistency check for the block tree, chainstate, and other validation data structures occasionally. (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-checkpoints\", strprintf(\"Enable rejection of any forks from the known historical chain until block 295000 (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-deprecatedrpc=<method>\", \"Allows deprecated RPC method(s) to be used\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);"
      }
    ]
  }
]