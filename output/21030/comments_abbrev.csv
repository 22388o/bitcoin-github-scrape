DrahtBot,2021-01-29 12:23:35,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/21030#issuecomment-769774416,769774416,
laanwj,2021-02-02 05:56:29,"Concept ACK.\n\n@dongcarl Does moving block loading into the chainstate manager align with your goals ?\n\nEdit: I personally think it should be factored out, but not necessarily to validation.cpp/h, we might want a separate ""block storage handling"" component where ThreadImport and such can move.",https://github.com/bitcoin/bitcoin/pull/21030#issuecomment-771384797,771384797,
MarcoFalke,2021-02-02 09:35:45,"review ACK e3341dfaf7146f0f234d1a59007f008742360a7b\n\nThis is removing a ""validation/blockimport"" global from init.cpp. Happy to re-ACK if this is moved to a separate module as suggested by @laanwj ",https://github.com/bitcoin/bitcoin/pull/21030#issuecomment-771501899,771501899,
dongcarl,2021-02-18 21:18:32,"> @dongcarl Does moving block loading into the chainstate manager align with your goals ?\n\nI believe so. After a cursory look at this PR, I think the `std::thread m_load_block` would probably eventually be moved into the `ChainContext` struct I plan to introduce after `g_chainman` is deglobalized, however, putting it in `ChainstateManager` is the appropriate move for now!",https://github.com/bitcoin/bitcoin/pull/21030#issuecomment-781641109,781641109,
MarcoFalke,2021-04-02 18:27:10,Done in #21575,https://github.com/bitcoin/bitcoin/pull/21030#issuecomment-812654197,812654197,
