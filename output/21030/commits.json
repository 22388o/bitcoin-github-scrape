[
  {
    "sha": "e3341dfaf7146f0f234d1a59007f008742360a7b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzM0MWRmYWY3MTQ2ZjBmMjM0ZDFhNTkwMDdmMDA4NzQyMzYwYTdi",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-01-29T03:04:41Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-02-02T01:22:06Z"
      },
      "message": "refactor: move load block thread into ChainstateManager\n\nThis is a diff of Marcos from #19197, which probably should have just\nbeen used at the time. After this change, and #21016, we'll have no more\nglobal thread(Group)s hanging out in init.\n\nCo-authored-by: MarcoFalke <falke.marco@gmail.com>",
      "tree": {
        "sha": "2a3a8e071fe1c9867762cf152ea4a9d1fd8b6301",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a3a8e071fe1c9867762cf152ea4a9d1fd8b6301"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3341dfaf7146f0f234d1a59007f008742360a7b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmAYqT4ACgkQLuufXMCV\nJsF7ZQ/+Mg8aFJ7tuepbFihEw1CgXr5fs+kpE0YLUrqk4PtTkmQjijuL2ZO9v3vW\niA/NrbvEECbINEXyWVO/4gLKmAfm4zInDreGKKg+uh3ZNPYO1IhBeDJowgZ1ZFzj\nGJc5G60AupjvUCl5K5e2vBsEjfRhdxNl2C6PoOvLGgqJuSXhlejHIkoOTCHeuKEz\neRqgqxblnPirZA3ZsXdHk1l9PBLyNh+QdgEutdBlCsRT4dbJELH6pAkOCWAomLpX\njLR707l+pRbUxTFhSwju5n/Ha0QSkqd+M/JaCu8k0Onbd0bCKrvJRatK6ljp3TU+\nkNOoVicQWuWOc2ziVgTKam9VPraCf0cUYZLl+a9CCI8+OF9X2ZhdsJ6CBtYNw9R8\nnpSLgtUBQyuqMweVnLG4N3CSHnDqypgB3jaSouXh7co+4Om9L8zQI3aZAIJdJ1G7\n+sa7V55HHwZaRrFjV2vNOD/iSiRDX3XIvWEasb0HuD8uyYdGzrpqvUhuZuZ7+Kik\nZ8asaT/JdZGc5FZIOpiJtmKmI8Xc/1c7koYcGdNcyehM20MJK8TNnkLjZuxMsF41\nxFK1dh6B2UixXTkmPgCw/1lsdozFZfeCN6152jxMOG4f6numTU/zpNLN5nQtps8l\n/hZgEZE4W3VuOEcHfodbjSy+dy0FxlUzLMfgGGlICHgYVLUxvvw=\n=RLu2\n-----END PGP SIGNATURE-----",
        "payload": "tree 2a3a8e071fe1c9867762cf152ea4a9d1fd8b6301\nparent f72d80b07af8ecbb2f9df1e87344eb465186f19d\nauthor fanquake <fanquake@gmail.com> 1611889481 +0800\ncommitter fanquake <fanquake@gmail.com> 1612228926 +0800\n\nrefactor: move load block thread into ChainstateManager\n\nThis is a diff of Marcos from #19197, which probably should have just\nbeen used at the time. After this change, and #21016, we'll have no more\nglobal thread(Group)s hanging out in init.\n\nCo-authored-by: MarcoFalke <falke.marco@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3341dfaf7146f0f234d1a59007f008742360a7b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3341dfaf7146f0f234d1a59007f008742360a7b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3341dfaf7146f0f234d1a59007f008742360a7b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f72d80b07af8ecbb2f9df1e87344eb465186f19d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f72d80b07af8ecbb2f9df1e87344eb465186f19d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f72d80b07af8ecbb2f9df1e87344eb465186f19d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2b4feb9b0b5d586f2fa284ef6633531c77ac0597",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3341dfaf7146f0f234d1a59007f008742360a7b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3341dfaf7146f0f234d1a59007f008742360a7b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e3341dfaf7146f0f234d1a59007f008742360a7b",
        "patch": "@@ -154,8 +154,6 @@ static fs::path GetPidFile(const ArgsManager& args)\n \n static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n \n-static std::thread g_load_block;\n-\n void Interrupt(NodeContext& node)\n {\n     InterruptHTTPServer();\n@@ -219,7 +217,7 @@ void Shutdown(NodeContext& node)\n     // After everything has been shut down, but before things get flushed, stop the\n     // CScheduler/checkqueue, scheduler and load block thread.\n     if (node.scheduler) node.scheduler->stop();\n-    if (g_load_block.joinable()) g_load_block.join();\n+    if (node.chainman && node.chainman->m_load_block.joinable()) node.chainman->m_load_block.join();\n     StopScriptCheckWorkerThreads();\n \n     // After the threads that potentially access these pointers have been stopped,\n@@ -1862,7 +1860,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         vImportFiles.push_back(strFile);\n     }\n \n-    g_load_block = std::thread(&TraceThread<std::function<void()>>, \"loadblk\", [=, &chainman, &args] {\n+    chainman.m_load_block = std::thread(&TraceThread<std::function<void()>>, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, args);\n     });\n "
      },
      {
        "sha": "02ff34461c54e0a5028c8055f3e96d4d3b80412d",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3341dfaf7146f0f234d1a59007f008742360a7b/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3341dfaf7146f0f234d1a59007f008742360a7b/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=e3341dfaf7146f0f234d1a59007f008742360a7b",
        "patch": "@@ -31,6 +31,7 @@\n #include <set>\n #include <stdint.h>\n #include <string>\n+#include <thread>\n #include <utility>\n #include <vector>\n \n@@ -839,6 +840,7 @@ class ChainstateManager\n     friend CChain& ChainActive();\n \n public:\n+    std::thread m_load_block;\n     //! A single BlockManager instance is shared across each constructed\n     //! chainstate to avoid duplicating block metadata.\n     BlockManager m_blockman GUARDED_BY(::cs_main);"
      }
    ]
  }
]