[
  {
    "sha": "4279da47855ec776f8d57c6579fe89afc9cbe8c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Mjc5ZGE0Nzg1NWVjNzc2ZjhkNTdjNjU3OWZlODlhZmM5Y2JlOGMx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-25T18:39:36Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-28T21:50:36Z"
      },
      "message": "[wallet] GetBalance can take an isminefilter filter.\n\nGetBalance() can now take an ismine filter, which is passed down to\nGetAvailableCredit. This allows GetBalance to be used to get watch-only\nbalances.",
      "tree": {
        "sha": "099596fb073f8643c7ce296bbc126f6f8190534a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/099596fb073f8643c7ce296bbc126f6f8190534a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4279da47855ec776f8d57c6579fe89afc9cbe8c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4279da47855ec776f8d57c6579fe89afc9cbe8c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4279da47855ec776f8d57c6579fe89afc9cbe8c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4279da47855ec776f8d57c6579fe89afc9cbe8c1/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 23,
      "deletions": 11
    },
    "files": [
      {
        "sha": "4f3a443201b3502a1f4486216bde07caf771c80e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 9,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4279da47855ec776f8d57c6579fe89afc9cbe8c1/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4279da47855ec776f8d57c6579fe89afc9cbe8c1/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=4279da47855ec776f8d57c6579fe89afc9cbe8c1",
        "patch": "@@ -1968,7 +1968,7 @@ CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n     return 0;\n }\n \n-CAmount CWalletTx::GetAvailableCredit(bool fUseCache) const\n+CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter) const\n {\n     if (pwallet == nullptr)\n         return 0;\n@@ -1977,8 +1977,17 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache) const\n     if (IsCoinBase() && GetBlocksToMaturity() > 0)\n         return 0;\n \n-    if (fUseCache && fAvailableCreditCached)\n-        return nAvailableCreditCached;\n+    CAmount* cache = nullptr;\n+    bool* cache_used = nullptr;\n+\n+    if (filter == ISMINE_SPENDABLE) {\n+        cache = &nAvailableCreditCached;\n+        cache_used = &fAvailableCreditCached;\n+    }\n+\n+    if (fUseCache && cache_used && *cache_used) {\n+        return *cache;\n+    }\n \n     CAmount nCredit = 0;\n     uint256 hashTx = GetHash();\n@@ -1987,14 +1996,16 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache) const\n         if (!pwallet->IsSpent(hashTx, i))\n         {\n             const CTxOut &txout = tx->vout[i];\n-            nCredit += pwallet->GetCredit(txout, ISMINE_SPENDABLE);\n+            nCredit += pwallet->GetCredit(txout, filter);\n             if (!MoneyRange(nCredit))\n                 throw std::runtime_error(std::string(__func__) + \" : value out of range\");\n         }\n     }\n \n-    nAvailableCreditCached = nCredit;\n-    fAvailableCreditCached = true;\n+    if (cache) {\n+        *cache = nCredit;\n+        *cache_used = true;\n+    }\n     return nCredit;\n }\n \n@@ -2154,16 +2165,17 @@ void CWallet::ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman\n  */\n \n \n-CAmount CWallet::GetBalance() const\n+CAmount CWallet::GetBalance(const isminefilter& filter) const\n {\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n         for (const auto& entry : mapWallet)\n         {\n             const CWalletTx* pcoin = &entry.second;\n-            if (pcoin->IsTrusted())\n-                nTotal += pcoin->GetAvailableCredit();\n+            if (pcoin->IsTrusted()) {\n+                nTotal += pcoin->GetAvailableCredit(true, filter);\n+            }\n         }\n     }\n "
      },
      {
        "sha": "004c0935eb6686474f233dcd9978fc31f854f81f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4279da47855ec776f8d57c6579fe89afc9cbe8c1/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4279da47855ec776f8d57c6579fe89afc9cbe8c1/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=4279da47855ec776f8d57c6579fe89afc9cbe8c1",
        "patch": "@@ -460,7 +460,7 @@ class CWalletTx : public CMerkleTx\n     CAmount GetDebit(const isminefilter& filter) const;\n     CAmount GetCredit(const isminefilter& filter) const;\n     CAmount GetImmatureCredit(bool fUseCache=true) const;\n-    CAmount GetAvailableCredit(bool fUseCache=true) const;\n+    CAmount GetAvailableCredit(bool fUseCache=true, const isminefilter& filter=ISMINE_SPENDABLE) const;\n     CAmount GetImmatureWatchOnlyCredit(const bool fUseCache=true) const;\n     CAmount GetAvailableWatchOnlyCredit(const bool fUseCache=true) const;\n     CAmount GetChange() const;\n@@ -944,7 +944,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;\n     // ResendWalletTransactionsBefore may only be called if fBroadcastTransactions!\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime, CConnman* connman);\n-    CAmount GetBalance() const;\n+    CAmount GetBalance(const isminefilter& filter=ISMINE_SPENDABLE) const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;\n     CAmount GetWatchOnlyBalance() const;"
      }
    ]
  },
  {
    "sha": "ef7bc8893c7a953953aa457736d79c28a4f45792",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjdiYzg4OTNjN2E5NTM5NTNhYTQ1NzczNmQ3OWMyOGE0ZjQ1Nzky",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-27T17:43:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-28T21:50:40Z"
      },
      "message": "[wallet] Factor out GetWatchOnlyBalance()",
      "tree": {
        "sha": "fbfda7cd9eb451c4c08792186cde94f67fba517c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbfda7cd9eb451c4c08792186cde94f67fba517c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef7bc8893c7a953953aa457736d79c28a4f45792",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7bc8893c7a953953aa457736d79c28a4f45792",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef7bc8893c7a953953aa457736d79c28a4f45792",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7bc8893c7a953953aa457736d79c28a4f45792/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4279da47855ec776f8d57c6579fe89afc9cbe8c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4279da47855ec776f8d57c6579fe89afc9cbe8c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4279da47855ec776f8d57c6579fe89afc9cbe8c1"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 1,
      "deletions": 18
    },
    "files": [
      {
        "sha": "bcbe4bdea8c8e426b31ffb5bcd20c389193a0cb0",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef7bc8893c7a953953aa457736d79c28a4f45792/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef7bc8893c7a953953aa457736d79c28a4f45792/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=ef7bc8893c7a953953aa457736d79c28a4f45792",
        "patch": "@@ -339,7 +339,7 @@ class WalletImpl : public Wallet\n         result.immature_balance = m_wallet.GetImmatureBalance();\n         result.have_watch_only = m_wallet.HaveWatchOnly();\n         if (result.have_watch_only) {\n-            result.watch_only_balance = m_wallet.GetWatchOnlyBalance();\n+            result.watch_only_balance = m_wallet.GetBalance(ISMINE_WATCH_ONLY);\n             result.unconfirmed_watch_only_balance = m_wallet.GetUnconfirmedWatchOnlyBalance();\n             result.immature_watch_only_balance = m_wallet.GetImmatureWatchOnlyBalance();\n         }"
      },
      {
        "sha": "f999394062102365c24c12cd072b1ed88c779db6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef7bc8893c7a953953aa457736d79c28a4f45792/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef7bc8893c7a953953aa457736d79c28a4f45792/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ef7bc8893c7a953953aa457736d79c28a4f45792",
        "patch": "@@ -2211,22 +2211,6 @@ CAmount CWallet::GetImmatureBalance() const\n     return nTotal;\n }\n \n-CAmount CWallet::GetWatchOnlyBalance() const\n-{\n-    CAmount nTotal = 0;\n-    {\n-        LOCK2(cs_main, cs_wallet);\n-        for (const auto& entry : mapWallet)\n-        {\n-            const CWalletTx* pcoin = &entry.second;\n-            if (pcoin->IsTrusted())\n-                nTotal += pcoin->GetAvailableWatchOnlyCredit();\n-        }\n-    }\n-\n-    return nTotal;\n-}\n-\n CAmount CWallet::GetUnconfirmedWatchOnlyBalance() const\n {\n     CAmount nTotal = 0;"
      },
      {
        "sha": "4cb881bc486efe20e28561acea1f66ec19107009",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef7bc8893c7a953953aa457736d79c28a4f45792/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef7bc8893c7a953953aa457736d79c28a4f45792/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ef7bc8893c7a953953aa457736d79c28a4f45792",
        "patch": "@@ -947,7 +947,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetBalance(const isminefilter& filter=ISMINE_SPENDABLE) const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;\n-    CAmount GetWatchOnlyBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;\n     CAmount GetImmatureWatchOnlyBalance() const;\n     CAmount GetLegacyBalance(const isminefilter& filter, int minDepth, const std::string* account) const;"
      }
    ]
  },
  {
    "sha": "7110c830f8c5de3570178bf4e5d28fe3e4f109e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTEwYzgzMGY4YzVkZTM1NzAxNzhiZjRlNWQyOGZlM2U0ZjEwOWUx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-27T15:46:27Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-28T21:56:57Z"
      },
      "message": "[wallet] deduplicate GetAvailableCredit logic",
      "tree": {
        "sha": "0c8b6fc0cea2a16974e374f47b0878e8fcc2a439",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c8b6fc0cea2a16974e374f47b0878e8fcc2a439"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7110c830f8c5de3570178bf4e5d28fe3e4f109e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7110c830f8c5de3570178bf4e5d28fe3e4f109e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7110c830f8c5de3570178bf4e5d28fe3e4f109e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7110c830f8c5de3570178bf4e5d28fe3e4f109e1/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef7bc8893c7a953953aa457736d79c28a4f45792",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7bc8893c7a953953aa457736d79c28a4f45792",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef7bc8893c7a953953aa457736d79c28a4f45792"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 4,
      "deletions": 25
    },
    "files": [
      {
        "sha": "4d3263671ccdb8a55a6d669e3329a218c4282c15",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 25,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7110c830f8c5de3570178bf4e5d28fe3e4f109e1/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7110c830f8c5de3570178bf4e5d28fe3e4f109e1/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7110c830f8c5de3570178bf4e5d28fe3e4f109e1",
        "patch": "@@ -1983,6 +1983,9 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter\n     if (filter == ISMINE_SPENDABLE) {\n         cache = &nAvailableCreditCached;\n         cache_used = &fAvailableCreditCached;\n+    } else if (filter == ISMINE_WATCH_ONLY) {\n+        cache = &nAvailableWatchCreditCached;\n+        cache_used = &fAvailableWatchCreditCached;\n     }\n \n     if (fUseCache && cache_used && *cache_used) {\n@@ -2025,31 +2028,7 @@ CAmount CWalletTx::GetImmatureWatchOnlyCredit(const bool fUseCache) const\n \n CAmount CWalletTx::GetAvailableWatchOnlyCredit(const bool fUseCache) const\n {\n-    if (pwallet == nullptr)\n-        return 0;\n-\n-    // Must wait until coinbase is safely deep enough in the chain before valuing it\n-    if (IsCoinBase() && GetBlocksToMaturity() > 0)\n-        return 0;\n-\n-    if (fUseCache && fAvailableWatchCreditCached)\n-        return nAvailableWatchCreditCached;\n-\n-    CAmount nCredit = 0;\n-    for (unsigned int i = 0; i < tx->vout.size(); i++)\n-    {\n-        if (!pwallet->IsSpent(GetHash(), i))\n-        {\n-            const CTxOut &txout = tx->vout[i];\n-            nCredit += pwallet->GetCredit(txout, ISMINE_WATCH_ONLY);\n-            if (!MoneyRange(nCredit))\n-                throw std::runtime_error(std::string(__func__) + \": value out of range\");\n-        }\n-    }\n-\n-    nAvailableWatchCreditCached = nCredit;\n-    fAvailableWatchCreditCached = true;\n-    return nCredit;\n+    return GetAvailableCredit(fUseCache, ISMINE_WATCH_ONLY);\n }\n \n CAmount CWalletTx::GetChange() const"
      }
    ]
  },
  {
    "sha": "0f3d6e9ab75837ead3acfda342aa3ea404efb81d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjNkNmU5YWI3NTgzN2VhZDNhY2ZkYTM0MmFhM2VhNDA0ZWZiODFk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-27T15:53:08Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-28T21:56:59Z"
      },
      "message": "[wallet] factor out GetAvailableWatchOnlyBalance()",
      "tree": {
        "sha": "9619fdeaed15d6d7bc54483b6be0565aeec0048b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9619fdeaed15d6d7bc54483b6be0565aeec0048b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f3d6e9ab75837ead3acfda342aa3ea404efb81d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f3d6e9ab75837ead3acfda342aa3ea404efb81d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0f3d6e9ab75837ead3acfda342aa3ea404efb81d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f3d6e9ab75837ead3acfda342aa3ea404efb81d/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7110c830f8c5de3570178bf4e5d28fe3e4f109e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7110c830f8c5de3570178bf4e5d28fe3e4f109e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7110c830f8c5de3570178bf4e5d28fe3e4f109e1"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 1,
      "deletions": 7
    },
    "files": [
      {
        "sha": "1038416fe48606af6367a7f5164539f2b43c74a4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f3d6e9ab75837ead3acfda342aa3ea404efb81d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f3d6e9ab75837ead3acfda342aa3ea404efb81d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0f3d6e9ab75837ead3acfda342aa3ea404efb81d",
        "patch": "@@ -2026,11 +2026,6 @@ CAmount CWalletTx::GetImmatureWatchOnlyCredit(const bool fUseCache) const\n     return 0;\n }\n \n-CAmount CWalletTx::GetAvailableWatchOnlyCredit(const bool fUseCache) const\n-{\n-    return GetAvailableCredit(fUseCache, ISMINE_WATCH_ONLY);\n-}\n-\n CAmount CWalletTx::GetChange() const\n {\n     if (fChangeCached)\n@@ -2199,7 +2194,7 @@ CAmount CWallet::GetUnconfirmedWatchOnlyBalance() const\n         {\n             const CWalletTx* pcoin = &entry.second;\n             if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n-                nTotal += pcoin->GetAvailableWatchOnlyCredit();\n+                nTotal += pcoin->GetAvailableCredit(true, ISMINE_WATCH_ONLY);\n         }\n     }\n     return nTotal;"
      },
      {
        "sha": "bc70ffc595fc4847cda281dad668d5fa73d49e2f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f3d6e9ab75837ead3acfda342aa3ea404efb81d/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f3d6e9ab75837ead3acfda342aa3ea404efb81d/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0f3d6e9ab75837ead3acfda342aa3ea404efb81d",
        "patch": "@@ -462,7 +462,6 @@ class CWalletTx : public CMerkleTx\n     CAmount GetImmatureCredit(bool fUseCache=true) const;\n     CAmount GetAvailableCredit(bool fUseCache=true, const isminefilter& filter=ISMINE_SPENDABLE) const;\n     CAmount GetImmatureWatchOnlyCredit(const bool fUseCache=true) const;\n-    CAmount GetAvailableWatchOnlyCredit(const bool fUseCache=true) const;\n     CAmount GetChange() const;\n \n     // Get the marginal bytes if spending the specified output from this transaction"
      }
    ]
  },
  {
    "sha": "cf15761f6d4526d205126fbf5f088ac8edebeb57",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjE1NzYxZjZkNDUyNmQyMDUxMjZmYmY1ZjA4OGFjOGVkZWJlYjU3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-27T18:11:21Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-28T21:56:59Z"
      },
      "message": "[wallet] GetBalance can take a min_depth argument.",
      "tree": {
        "sha": "328cbd7bac30f04deea7d169b357c3b3dd953a32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/328cbd7bac30f04deea7d169b357c3b3dd953a32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf15761f6d4526d205126fbf5f088ac8edebeb57",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf15761f6d4526d205126fbf5f088ac8edebeb57",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf15761f6d4526d205126fbf5f088ac8edebeb57",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf15761f6d4526d205126fbf5f088ac8edebeb57/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f3d6e9ab75837ead3acfda342aa3ea404efb81d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f3d6e9ab75837ead3acfda342aa3ea404efb81d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f3d6e9ab75837ead3acfda342aa3ea404efb81d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "25a832e8132eb65cd0798c6ee24b421102703fad",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf15761f6d4526d205126fbf5f088ac8edebeb57/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf15761f6d4526d205126fbf5f088ac8edebeb57/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cf15761f6d4526d205126fbf5f088ac8edebeb57",
        "patch": "@@ -2139,15 +2139,15 @@ void CWallet::ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman\n  */\n \n \n-CAmount CWallet::GetBalance(const isminefilter& filter) const\n+CAmount CWallet::GetBalance(const isminefilter& filter, const int min_depth) const\n {\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n         for (const auto& entry : mapWallet)\n         {\n             const CWalletTx* pcoin = &entry.second;\n-            if (pcoin->IsTrusted()) {\n+            if (pcoin->IsTrusted() && pcoin->GetDepthInMainChain() >= min_depth) {\n                 nTotal += pcoin->GetAvailableCredit(true, filter);\n             }\n         }"
      },
      {
        "sha": "ed766556fd06101e7c29383082d3534e5a10aa14",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf15761f6d4526d205126fbf5f088ac8edebeb57/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf15761f6d4526d205126fbf5f088ac8edebeb57/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=cf15761f6d4526d205126fbf5f088ac8edebeb57",
        "patch": "@@ -943,7 +943,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;\n     // ResendWalletTransactionsBefore may only be called if fBroadcastTransactions!\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime, CConnman* connman);\n-    CAmount GetBalance(const isminefilter& filter=ISMINE_SPENDABLE) const;\n+    CAmount GetBalance(const isminefilter& filter=ISMINE_SPENDABLE, const int min_depth=0) const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;"
      }
    ]
  },
  {
    "sha": "702ae1e21a09d8c31406839c4ea507c5fa276898",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDJhZTFlMjFhMDlkOGMzMTQwNjgzOWM0ZWE1MDdjNWZhMjc2ODk4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-26T21:21:30Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-06-29T19:54:24Z"
      },
      "message": "[RPC] [wallet] allow getbalance to use min_conf and watch_only without accounts.",
      "tree": {
        "sha": "130f5a8b8ae3b468600b474bd88e0610d1c97080",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/130f5a8b8ae3b468600b474bd88e0610d1c97080"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/702ae1e21a09d8c31406839c4ea507c5fa276898",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/702ae1e21a09d8c31406839c4ea507c5fa276898",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/702ae1e21a09d8c31406839c4ea507c5fa276898",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/702ae1e21a09d8c31406839c4ea507c5fa276898/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf15761f6d4526d205126fbf5f088ac8edebeb57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf15761f6d4526d205126fbf5f088ac8edebeb57",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf15761f6d4526d205126fbf5f088ac8edebeb57"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 45,
      "deletions": 29
    },
    "files": [
      {
        "sha": "32d707663c2700600aec5909469c3ebf3341be9e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 29,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/702ae1e21a09d8c31406839c4ea507c5fa276898/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/702ae1e21a09d8c31406839c4ea507c5fa276898/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=702ae1e21a09d8c31406839c4ea507c5fa276898",
        "patch": "@@ -853,8 +853,9 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || (request.params.size() > 3 && IsDeprecatedRPCEnabled(\"accounts\")) || (request.params.size() != 0 && !IsDeprecatedRPCEnabled(\"accounts\")))\n+    if (request.fHelp || (request.params.size() > 3 ))\n         throw std::runtime_error(\n+           (IsDeprecatedRPCEnabled(\"accounts\") ? std::string(\n             \"getbalance ( \\\"account\\\" minconf include_watchonly )\\n\"\n             \"\\nIf account is not specified, returns the server's total available balance.\\n\"\n             \"The available balance is what the wallet considers currently spendable, and is\\n\"\n@@ -876,8 +877,17 @@ static UniValue getbalance(const JSONRPCRequest& request)\n             \"                     balances. In general, account balance calculation is not considered\\n\"\n             \"                     reliable and has resulted in confusing outcomes, so it is recommended to\\n\"\n             \"                     avoid passing this argument.\\n\"\n-            \"2. minconf           (numeric, optional, default=1) DEPRECATED. Only valid when an account is specified. This argument will be removed in V0.18. To use this deprecated argument, start bitcoind with -deprecatedrpc=accounts. Only include transactions confirmed at least this many times.\\n\"\n-            \"3. include_watchonly (bool, optional, default=false) DEPRECATED. Only valid when an account is specified. This argument will be removed in V0.18. To use this deprecated argument, start bitcoind with -deprecatedrpc=accounts. Also include balance in watch-only addresses (see 'importaddress')\\n\"\n+            \"2. minconf           (numeric, optional) Only include transactions confirmed at least this many times. \\n\"\n+            \"                     The default is 1 if an account is provided or 0 if no account is provided\\n\")\n+            : std::string(\n+            \"getbalance ( \\\"(dummy)\\\" minconf include_watchonly )\\n\"\n+            \"\\nReturns the total available balance.\\n\"\n+            \"The available balance is what the wallet considers currently spendable, and is\\n\"\n+            \"thus affected by options which limit spendability such as -spendzeroconfchange.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. (dummy)           (string, optional) Remains for backward compatibility. Must be excluded or set to \\\"*\\\".\\n\"\n+            \"2. minconf           (numeric, optional, default=0) Only include transactions confirmed at least this many times.\\n\")) +\n+            \"3. include_watchonly (bool, optional, default=false) Also include balance in watch-only addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n             \"amount              (numeric) The total amount in \" + CURRENCY_UNIT + \" received for this account.\\n\"\n             \"\\nExamples:\\n\"\n@@ -895,38 +905,35 @@ static UniValue getbalance(const JSONRPCRequest& request)\n \n     LOCK2(cs_main, pwallet->cs_wallet);\n \n-    if (IsDeprecatedRPCEnabled(\"accounts\")) {\n-        const UniValue& account_value = request.params[0];\n-        const UniValue& minconf = request.params[1];\n-        const UniValue& include_watchonly = request.params[2];\n+    const UniValue& account_value = request.params[0];\n \n-        if (account_value.isNull()) {\n-            if (!minconf.isNull()) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER,\n-                    \"getbalance minconf option is only currently supported if an account is specified\");\n-            }\n-            if (!include_watchonly.isNull()) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER,\n-                    \"getbalance include_watchonly option is only currently supported if an account is specified\");\n-            }\n-            return ValueFromAmount(pwallet->GetBalance());\n-        }\n+    int min_depth = 0;\n+    if (IsDeprecatedRPCEnabled(\"accounts\") && !account_value.isNull()) {\n+        // Default min_depth to 1 when an account is provided.\n+        min_depth = 1;\n+    }\n+    if (!request.params[1].isNull()) {\n+        min_depth = request.params[1].get_int();\n+    }\n+\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if (!request.params[2].isNull() && request.params[2].get_bool()) {\n+        filter = filter | ISMINE_WATCH_ONLY;\n+    }\n+\n+    if (!account_value.isNull()) {\n \n         const std::string& account_param = account_value.get_str();\n         const std::string* account = account_param != \"*\" ? &account_param : nullptr;\n \n-        int nMinDepth = 1;\n-        if (!minconf.isNull())\n-            nMinDepth = minconf.get_int();\n-        isminefilter filter = ISMINE_SPENDABLE;\n-        if(!include_watchonly.isNull())\n-            if(include_watchonly.get_bool())\n-                filter = filter | ISMINE_WATCH_ONLY;\n-\n-        return ValueFromAmount(pwallet->GetLegacyBalance(filter, nMinDepth, account));\n+        if (!IsDeprecatedRPCEnabled(\"accounts\") && account_param != \"*\") {\n+            throw JSONRPCError(RPC_METHOD_DEPRECATED, \"dummy first argument must be excluded or set to \\\"*\\\".\");\n+        } else if (IsDeprecatedRPCEnabled(\"accounts\")) {\n+            return ValueFromAmount(pwallet->GetLegacyBalance(filter, min_depth, account));\n+        }\n     }\n \n-    return ValueFromAmount(pwallet->GetBalance());\n+    return ValueFromAmount(pwallet->GetBalance(filter, min_depth));\n }\n \n static UniValue getunconfirmedbalance(const JSONRPCRequest &request)\n@@ -4416,7 +4423,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },\n     { \"wallet\",             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },\n-    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"account\",\"minconf\",\"include_watchonly\"} },\n+    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"account|dummy\",\"minconf\",\"include_watchonly\"} },\n     { \"wallet\",             \"getnewaddress\",                    &getnewaddress,                 {\"label|account\",\"address_type\"} },\n     { \"wallet\",             \"getrawchangeaddress\",              &getrawchangeaddress,           {\"address_type\"} },\n     { \"wallet\",             \"getreceivedbyaddress\",             &getreceivedbyaddress,          {\"address\",\"minconf\"} },"
      },
      {
        "sha": "92aec200c92795c8abeba28036e0c8d2c26cbb45",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/702ae1e21a09d8c31406839c4ea507c5fa276898/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/702ae1e21a09d8c31406839c4ea507c5fa276898/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=702ae1e21a09d8c31406839c4ea507c5fa276898",
        "patch": "@@ -64,6 +64,15 @@ def run_test(self):\n         assert_equal(self.nodes[1].getbalance(), 50)\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n+        # Check getbalance with different arguments\n+        assert_equal(self.nodes[0].getbalance(\"*\"), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 50)\n+        assert_equal(self.nodes[0].getbalance(minconf=1), 50)\n+\n+        # first argument of getbalance must be excluded or set to \"*\"\n+        assert_raises_rpc_error(-32, \"dummy first argument must be excluded or set to \\\"*\\\"\", self.nodes[0].getbalance, \"\")\n+\n         # Check that only first and second nodes have UTXOs\n         utxos = self.nodes[0].listunspent()\n         assert_equal(len(utxos), 1)"
      }
    ]
  }
]