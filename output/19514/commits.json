[
  {
    "sha": "ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTM1ODVhNDgzY2E1ZjZmYzRjYzU0ZmQxNTMwZjg5ZDEzZTViN2Iw",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-14T09:24:43Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-14T09:24:43Z"
      },
      "message": "[net/net processing] check banman pointer before dereferencing\n\nAlthough we currently don't do this, it should be possible to create a\nCConnman or PeerLogicValidation without a Banman instance. Therefore\nalways check that banman exists before dereferencing the pointer.\n\nAlso add comments to the m_banman members of CConnman and\nPeerLogicValidation to document that these may be nullptr.",
      "tree": {
        "sha": "5c3a2b75bb283a132cbb8092ca01c929ab92800c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c3a2b75bb283a132cbb8092ca01c929ab92800c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07c83ce0399a2811bdd764b0cce347ba3bdbe37c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07c83ce0399a2811bdd764b0cce347ba3bdbe37c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07c83ce0399a2811bdd764b0cce347ba3bdbe37c"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 10,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cf5757d6c0f1047e2d1af152d0375aa3fbb5cca4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0",
        "patch": "@@ -1013,7 +1013,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     SetSocketNoDelay(hSocket);\n \n     // Don't accept connections from banned peers.\n-    bool banned = m_banman->IsBanned(addr);\n+    bool banned = m_banman && m_banman->IsBanned(addr);\n     if (!NetPermissions::HasFlag(permissionFlags, NetPermissionFlags::PF_NOBAN) && banned)\n     {\n         LogPrint(BCLog::NET, \"connection from %s dropped (banned)\\n\", addr.ToString());\n@@ -1022,7 +1022,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     }\n \n     // Only accept connections from discouraged peers if our inbound slots aren't (almost) full.\n-    bool discouraged = m_banman->IsDiscouraged(addr);\n+    bool discouraged = m_banman && m_banman->IsDiscouraged(addr);\n     if (!NetPermissions::HasFlag(permissionFlags, NetPermissionFlags::PF_NOBAN) && nInbound + 1 >= nMaxInbound && discouraged)\n     {\n         LogPrint(BCLog::NET, \"connection from %s dropped (discouraged)\\n\", addr.ToString());"
      },
      {
        "sha": "b240e52a1821e0137751bc7a85cace5cd5599aa9",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0",
        "patch": "@@ -447,6 +447,7 @@ class CConnman\n     std::atomic<int> nBestHeight;\n     CClientUIInterface* clientInterface;\n     NetEventsInterface* m_msgproc;\n+    /** Pointer to this node's banman. May be nullptr - check existence before dereferencing. */\n     BanMan* m_banman;\n \n     /** SipHasher seeds for deterministic randomness */"
      },
      {
        "sha": "a776fdb214d73b7536a722b7ec22b107bb2e762d",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0",
        "patch": "@@ -2491,8 +2491,10 @@ void ProcessMessage(\n             if (addr.nTime <= 100000000 || addr.nTime > nNow + 10 * 60)\n                 addr.nTime = nNow - 5 * 24 * 60 * 60;\n             pfrom.AddAddressKnown(addr);\n-            if (banman->IsDiscouraged(addr)) continue; // Do not process banned/discouraged addresses beyond remembering we received them\n-            if (banman->IsBanned(addr)) continue;\n+            if (banman && (banman->IsDiscouraged(addr) || banman->IsBanned(addr))) {\n+                // Do not process banned/discouraged addresses beyond remembering we received them\n+                continue;\n+            }\n             bool fReachable = IsReachable(addr);\n             if (addr.nTime > nSince && !pfrom.fGetAddr && vAddr.size() <= 10 && addr.IsRoutable())\n             {\n@@ -3346,7 +3348,8 @@ void ProcessMessage(\n         std::vector<CAddress> vAddr = connman->GetAddresses();\n         FastRandomContext insecure_rand;\n         for (const CAddress &addr : vAddr) {\n-            if (!banman->IsDiscouraged(addr) && !banman->IsBanned(addr)) {\n+            bool banned_or_discouraged = banman && (banman->IsDiscouraged(addr) || banman->IsBanned(addr));\n+            if (!banned_or_discouraged) {\n                 pfrom.PushAddress(addr, insecure_rand);\n             }\n         }"
      },
      {
        "sha": "fa1555fbe6c2ab989c28a098c56fd6ef9be6a028",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=ca3585a483ca5f6fc4cc54fd1530f89d13e5b7b0",
        "patch": "@@ -29,6 +29,7 @@ static const int DISCOURAGEMENT_THRESHOLD{100};\n class PeerLogicValidation final : public CValidationInterface, public NetEventsInterface {\n private:\n     CConnman* const connman;\n+    /** Pointer to this node's banman. May be nullptr - check existence before dereferencing. */\n     BanMan* const m_banman;\n     ChainstateManager& m_chainman;\n     CTxMemPool& m_mempool;"
      }
    ]
  }
]