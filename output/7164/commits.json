[
  {
    "sha": "39a525c21fd1b34df63ab30868423b97b708ee49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOWE1MjVjMjFmZDFiMzRkZjYzYWIzMDg2ODQyM2I5N2I3MDhlZTQ5",
    "commit": {
      "author": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-12-05T17:02:02Z"
      },
      "committer": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-12-15T15:41:44Z"
      },
      "message": "Do not download transactions during inital sync",
      "tree": {
        "sha": "4038a44ae37cf99b701af04523208125a4fcae42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4038a44ae37cf99b701af04523208125a4fcae42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39a525c21fd1b34df63ab30868423b97b708ee49",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39a525c21fd1b34df63ab30868423b97b708ee49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/39a525c21fd1b34df63ab30868423b97b708ee49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39a525c21fd1b34df63ab30868423b97b708ee49/comments",
    "author": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a5040155ed59f8c9c51734bb2ee29f1593eaa6a"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 37,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c54a2539082a7b7db2abb95bceeed50a4dafb2ca",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39a525c21fd1b34df63ab30868423b97b708ee49/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39a525c21fd1b34df63ab30868423b97b708ee49/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=39a525c21fd1b34df63ab30868423b97b708ee49",
        "patch": "@@ -32,6 +32,11 @@ def check_array_result(object_array, to_match, expected):\n \n class ListTransactionsTest(BitcoinTestFramework):\n \n+    def setup_nodes(self):\n+        #This test requires mocktime\n+        enable_mocktime()\n+        return start_nodes(4, self.options.tmpdir)\n+\n     def run_test(self):\n         # Simple send, 0 to 1:\n         txid = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.1)"
      },
      {
        "sha": "7e0b3059236715019082949ea6b75f42f817947a",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39a525c21fd1b34df63ab30868423b97b708ee49/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39a525c21fd1b34df63ab30868423b97b708ee49/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=39a525c21fd1b34df63ab30868423b97b708ee49",
        "patch": "@@ -53,6 +53,11 @@ def check_array_result(object_array, to_match, expected, should_not_find = False\n \n class ReceivedByTest(BitcoinTestFramework):\n \n+    def setup_nodes(self):\n+        #This test requires mocktime\n+        enable_mocktime()\n+        return start_nodes(4, self.options.tmpdir)\n+\n     def run_test(self):\n         '''\n         listreceivedbyaddress Test"
      },
      {
        "sha": "128225a06ff19a655722a578cd6d5cf880f40d87",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 26,
        "deletions": 4,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39a525c21fd1b34df63ab30868423b97b708ee49/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39a525c21fd1b34df63ab30868423b97b708ee49/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=39a525c21fd1b34df63ab30868423b97b708ee49",
        "patch": "@@ -22,6 +22,26 @@\n \n COVERAGE_DIR = None\n \n+#Set Mocktime default to OFF.\n+#MOCKTIME is only needed for scripts that use the\n+#cached version of the blockchain.  If the cached\n+#version of the blockchain is used without MOCKTIME\n+#then the mempools will not sync due to IBD.\n+MOCKTIME = 0\n+\n+def enable_mocktime():\n+    #For backwared compatibility of the python scripts\n+    #with previous versions of the cache, set MOCKTIME \n+    #to Jan 1, 2014 + (201 * 10 * 60)\n+    global MOCKTIME\n+    MOCKTIME = 1388534400 + (201 * 10 * 60)\n+\n+def disable_mocktime():\n+    global MOCKTIME\n+    MOCKTIME = 0\n+\n+def get_mocktime():\n+    return MOCKTIME\n \n def enable_coverage(dirname):\n     \"\"\"Maintain a log of which RPC calls are made during testing.\"\"\"\n@@ -155,9 +175,10 @@ def initialize_chain(test_dir):\n \n         # Create a 200-block-long chain; each of the 4 nodes\n         # gets 25 mature blocks and 25 immature.\n-        # blocks are created with timestamps 10 minutes apart, starting\n-        # at 1 Jan 2014\n-        block_time = 1388534400\n+        # blocks are created with timestamps 10 minutes apart\n+        # starting from 2010 minutes in the past\n+        enable_mocktime()\n+        block_time = get_mocktime() - (201 * 10 * 60)\n         for i in range(2):\n             for peer in range(4):\n                 for j in range(25):\n@@ -170,6 +191,7 @@ def initialize_chain(test_dir):\n         # Shut them down, and clean up cache directories:\n         stop_nodes(rpcs)\n         wait_bitcoinds()\n+        disable_mocktime()\n         for i in range(4):\n             os.remove(log_filename(\"cache\", i, \"debug.log\"))\n             os.remove(log_filename(\"cache\", i, \"db.log\"))\n@@ -219,7 +241,7 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n     if binary is None:\n         binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n     # RPC tests still depend on free transactions\n-    args = [ binary, \"-datadir=\"+datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-blockprioritysize=50000\" ]\n+    args = [ binary, \"-datadir=\"+datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-blockprioritysize=50000\", \"-mocktime=\"+str(get_mocktime()) ]\n     if extra_args is not None: args.extend(extra_args)\n     bitcoind_processes[i] = subprocess.Popen(args)\n     devnull = open(os.devnull, \"w\")"
      },
      {
        "sha": "8752484462c25d855f4645710d61cc85d9722e75",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39a525c21fd1b34df63ab30868423b97b708ee49/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39a525c21fd1b34df63ab30868423b97b708ee49/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=39a525c21fd1b34df63ab30868423b97b708ee49",
        "patch": "@@ -4563,7 +4563,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             {\n                 if (fBlocksOnly)\n                     LogPrint(\"net\", \"transaction (%s) inv sent in violation of protocol peer=%d\\n\", inv.hash.ToString(), pfrom->id);\n-                else if (!fAlreadyHave && !fImporting && !fReindex)\n+                else if (!fAlreadyHave && !fImporting && !fReindex && !IsInitialBlockDownload())\n                     pfrom->AskFor(inv);\n             }\n "
      }
    ]
  }
]