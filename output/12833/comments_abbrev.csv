laanwj,2018-03-29T20:25:55Z,"Please, never write to `bitcoin.conf`. It is exceptionally bad form for a daemon to write to its configuration file. If you want to do this, I'd suggest adding an additional file (in the datadir) for read/write settings (as @luke-jr did AFAIK).",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-377361599,377361599,
Sjors,2018-03-30T08:49:34Z,"@laanwj two files is indeed what @luke-jr did, but I don't see how that changes anything. It's critical that `bitcoind` uses this second file (for settings like `prune`) and treats it the same as `bitcoin.conf`. So by the same reasoning it shouldn't write to that second file.\n\nAlso note that only QT needs this ability, so I could refactor it such that `bitcoind` daemon only has read-only acces",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-377480638,377480638,
laanwj,2018-03-30T10:24:24Z,"> @laanwj two files is indeed what @luke-jr did, but I don't see how that changes anything. \n\nOne thing is permissions. The data directory is guaranteed writable. The configuration file might be `-conf=/etc/bitcoind.conf`.\n\n> Also note that only QT needs this ability, so I could refactor it such that bitcoind daemon only has read-only access.\n\nUnlike QSettings the second file would be ",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-377497057,377497057,
Sjors,2018-03-30T15:03:54Z,"If `bitcoin.conf` is not writeable, because the user configured a custom read-only directory, the UI elements that change settings this way could be disabled.\n\n> And it might be useful to edit settings in bitcoind at real-time as well.\n\nIndeed.\n\nI thought having two separate files leads to a more complicated implementation than just having one, but I didn't remove that much from the or",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-377543863,377543863,
Sjors,2018-04-03T16:08:30Z,I pushed a new version that uses `bitcoin_rw.conf`. I could probably add some helper functions to make the change more compact.,https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-378305050,378305050,
jonasschnelli,2018-04-04T12:24:56Z,"I'm not sure if moving the QT settings from pure QT format in the QT chosen file to the bitcoind compatible `bitcoin_rw.conf` format reduces the complexity. Configuration file complexity can be harmful (-datadir, eventually once config files per network, includes, etc.).\n\nI also think we could expose prune to the QT layer without sharing the configuration value with bitcoind.\n\nUsers using ",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-378581605,378581605,
Sjors,2018-04-04T13:06:01Z,"@jonasschnelli in addition to a warning, we can even make `bitcoind` actually handle QT's `prune` elegantly, see my suggestion [here](https://github.com/bitcoin/bitcoin/issues/6461#issuecomment-377485323).\n\nFor settings other than prune there might be similar workarounds on a case by case basis (other than warning).",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-378592828,378592828,
Sjors,2018-04-17T15:03:31Z,This and #11082 need a likely non-trivial rebase after #11862. I'm going to try the other approach first though.,https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-382026069,382026069,
Sjors,2018-05-15T11:09:45Z,"#11862 has been merged. I'll rebase this once #11082 is rebased.\n\nQT doesn't have any concept (yet) of network specific configuration though.",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-389129420,389129420,
ryanofsky,2018-10-06T02:05:44Z,"I like this approach. I think it'd be a simplification to stop using the windows registry and other config backends in `bitcoin-qt`. And it seems like it would be less surprising and error prone if `bitcoin-qt`  and `bitcoind` used the same settings, instead of slightly different but overlapping sources of settings like they do now, so I don't get the objection in https://github.com/bitcoin/bitcoi",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-427538007,427538007,
Sjors,2018-10-09T01:46:24Z,"@ryanofsky wrote:\n> Will command line settings not override config file settings anymore with this change?\n\nThey will. The phrase ""active command-line options"" actually referred to both `bitcoin.conf` and command line options, either of which can override QT settings, as well as each other.\n\nAfaik QT can't tell the difference between settings that came from bitcoin.conf and those that ca",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-428032410,428032410,
Sjors,2018-11-10T12:11:41Z,"Rebased and added pruning to the list of imported settings.\n\nI changed the meaning of _disabling_ prune in the GUI to mean _stop further pruning_, instead _undo previous pruning_. It just sets `prune=1`, which avoids forcing the user to re-download the chain. We could later add a button to re-download the whole chain.",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-437579643,437579643,
DrahtBot,2018-11-13T20:03:02Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16673](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16673.html) (Relog configuration args on debug.log rotat",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-438416585,438416585,
Sjors,2018-11-20T13:46:45Z,I'll rebase and fix code issues after the next upstream PR rebase.,https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-440278691,440278691,
DrahtBot,2019-09-30T13:02:37Z,"<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-536550579,536550579,
ryanofsky,2019-09-30T14:04:55Z,"Interesting! Apparently I commented on this PR and then forgot it existed, because I reimplemented the same thing six months later in #15936",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-536576752,536576752,
DrahtBot,2019-10-29T15:26:55Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-547478644,547478644,
jonasschnelli,2020-05-29T07:00:20Z,Closing for now since this is dependant on a dormant PR #11082,https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-635798537,635798537,
Sjors,2020-05-29T08:57:47Z,I'll nag to reopen this once 11082 is rebased.,https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-635859006,635859006,
Sjors,2020-06-26T16:30:05Z,"@jonasschnelli 11082 is rebased, can you re-open this? ",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-650272573,650272573,
Rspigler,2020-08-19T02:40:31Z,"@Sjors are you still working on this/asking this to be opened, with #15935 being merged and #15936 being discussed?",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-675817827,675817827,
Sjors,2020-08-22T11:05:51Z,"I have to read up on the alternative approach that was merged. If I build on top of that, I'll make a new PR. For now, consider this up for grabs.",https://github.com/bitcoin/bitcoin/pull/12833#issuecomment-678627060,678627060,
practicalswift,2018-11-11T12:23:58Z,"""Occurred"" :-)",https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485868,232485868,src/qt/optionsmodel.cpp
practicalswift,2018-11-11T12:25:15Z,"Nit: Missing whitespace after `,` :-)",https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485909,232485909,src/qt/optionsmodel.cpp
practicalswift,2018-11-11T12:27:28Z,Nit: I believe `(char)current_char` is the preferred form for casting the fundamental types in the project :-),https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485983,232485983,src/util/system.cpp
practicalswift,2018-11-11T12:27:35Z,Same here :-),https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232485988,232485988,src/util/system.cpp
practicalswift,2018-11-11T12:34:04Z,The scope of `prune` can be limited to the scope of `case Prune` and `case PruneSize` below :-),https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486212,232486212,src/qt/optionsmodel.cpp
practicalswift,2018-11-11T12:36:12Z,Add parentheses to make precedence obvious :-),https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486264,232486264,src/qt/optionsmodel.cpp
practicalswift,2018-11-11T12:36:25Z,Same here :-),https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486268,232486268,src/qt/optionsmodel.cpp
practicalswift,2018-11-11T12:37:30Z,Is this cast to `int64_t` needed?,https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486297,232486297,src/qt/optionsmodel.cpp
practicalswift,2018-11-11T12:37:38Z,Is this cast to `int64_t` needed?,https://github.com/bitcoin/bitcoin/pull/12833#discussion_r232486299,232486299,src/qt/optionsmodel.cpp
Sjors,2019-01-15T19:24:08Z,That's upstream: #11082 ,https://github.com/bitcoin/bitcoin/pull/12833#discussion_r248030267,248030267,src/util/system.cpp
Sjors,2019-01-15T19:28:47Z,That results in `error: redefinition of 'prune'`.,https://github.com/bitcoin/bitcoin/pull/12833#discussion_r248031878,248031878,src/qt/optionsmodel.cpp
