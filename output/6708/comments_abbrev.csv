jonasschnelli,2015-09-21T11:40:06Z,Concept ACK on better/more flexible fee handling for RPC test.\n,https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-141949048,141949048,
jonasschnelli,2015-09-21T11:42:35Z,Would supersede #6649 (@MarcoFalke maybe include title and description from #6649 in this PR).\n,https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-141949390,141949390,
dexX7,2015-09-24T11:52:32Z,"I've coded quite a few regtests for a related project, which is based on Core. If `fPayAtLeastCustomFee` is turned off by default, then I'd fear this messes with assumptions such as ""the fee of this or that transaction will be x"".\n\nInstead of just changing the default, I would really like if there were options to set all fee related values via RPC or CLI:\n- [x] `nTxConfirmTarget` (via `""-txconf",https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-142907286,142907286,
MarcoFalke,2015-09-28T12:39:15Z,"If there is no valid reason to keep it (or set the default to true) bitcoin-core should not encourage bad practice (Not to mention the documentation inconsistencies: Both, `paytxfee` and `settxfee` are in BTC/kB). The earlier we get rid of that, the better.\n\nIntroducing a CLI/RPC parameter is trivial but serves no purpose, if there is no compelling reason to do so. We could still leave the flag ",https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-143731557,143731557,
dexX7,2015-09-28T12:54:02Z,"@MarcoFalke: from a practical perspective, say I'd wanted to create transactions with 0.005 BTC fixed fees, how could I do this? Unless I'm missing something here, I'd need to 1. estimate the size of the transaction, 2. then set an estimated fee/kB, 3. select enough coins, 4. create the transaction, and repeat until the estimated size equals the actual size. The issue here is that a different fee/",https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-143736341,143736341,
RHavar,2015-10-12T05:11:49Z,"@dexX7 The current code does not support that (without the fragile assumption that coin selection won't pick enough dust to drive the transaction size over a kB), but if it's a use-case that should be supported, I think it should be treated as an entirely separate issue, with a ""payExactFee"".\n\nOn the other hand, this PR is extremely useful. I process hundreds of bitcoin transactions per day with",https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-147292510,147292510,
MarcoFalke,2015-10-20T10:30:45Z,"@dexX7 `createrawtransaction` is your friend creating fixed fee transactions. Just select enough coins and adjust the change.\n\nBut you could also use `-payatleastcustomfee`, now and hope your tx is less than 1001 bytes.\n",https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-149516098,149516098,
dcousens,2015-10-21T22:37:43Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-150044066,150044066,
MarcoFalke,2015-11-19T12:49:18Z,@RHavar @dexX7 @dcousens Mind to re-ACK?\n,https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-158047586,158047586,
jonasschnelli,2015-11-25T13:30:50Z,"Closing this because its superseded by #7096 which includes some of this PRs work.\n\n@dexX7: There is no way to set an absolute fee over RPC. IMO this is the right thing. Absolute fees are not something we should encourage for `sendto*` commands because there you can't control the size of your transaction because the amount of inputs can vary.\nI agree, deterministic fees for transactions in regt",https://github.com/bitcoin/bitcoin/pull/6708#issuecomment-159607767,159607767,
jonasschnelli,2015-09-21T11:40:28Z,~~What's the reason of removing the help string here?~~\n,https://github.com/bitcoin/bitcoin/pull/6708#discussion_r39961612,39961612,src/wallet/rpcwallet.cpp
MarcoFalke,2015-09-21T14:19:09Z,Can you elaborate? The trivial commit shouldn't remove anything. It's a cherry-pick from my `cleanup-txfee-params` branch.\n,https://github.com/bitcoin/bitcoin/pull/6708#discussion_r39975174,39975174,src/wallet/rpcwallet.cpp
laanwj,2015-09-23T17:47:23Z,You shouldn't change this default in a pull whose goal is to improve the tests.\n,https://github.com/bitcoin/bitcoin/pull/6708#discussion_r40234180,40234180,src/wallet/wallet.cpp
MarcoFalke,2015-09-24T09:35:58Z,The tests need this to be `false` but you are right: This PR is not merge ready as of now. This needs at least one follow up commit but I am not sure which path to take:\n- Option 1: Make this PR change the default and do the required things (i.e. adjust release notes et al.)\n- Option 2: Introduce a command line parameter (or rpc?) to overwrite the default. (I am not sure if we want yet another p,https://github.com/bitcoin/bitcoin/pull/6708#discussion_r40300944,40300944,src/wallet/wallet.cpp
laanwj,2015-09-24T10:10:02Z,"How this is usually done is to add a hidden command line option to override this setting. This is how most of the tests work that need special setup, for special tests.\n\nOn the other hand it is not good to have the entire wallet test depend on a non-standard setting, so then it'd have to be a new test.\n\nIsn't there already a PR to change the default?\n",https://github.com/bitcoin/bitcoin/pull/6708#discussion_r40303808,40303808,src/wallet/wallet.cpp
MarcoFalke,2015-09-24T10:30:19Z,"Yes, this PR depends on and replaces #6649, thus fixes #6479.\n\nI'd propose to rename this PR to ""Default fPayAtLeastCustomFee to false"" and go with Option 1? It seems better to get rid of this fixed-fee-regardless-of-tx-size approach completely. To cite @sipa :\n\n> [fixed fee amount per transaction] wouldn't make sense. You're paying for space inside blocks, and miners prioritize transactions b",https://github.com/bitcoin/bitcoin/pull/6708#discussion_r40305309,40305309,src/wallet/wallet.cpp
laanwj,2015-09-24T11:31:10Z,"Ok, agreed. So it probably makes sense to make these tests changes part of #6649, as I assume it would solve the Travis issue there too?\n",https://github.com/bitcoin/bitcoin/pull/6708#discussion_r40308963,40308963,src/wallet/wallet.cpp
jonasschnelli,2015-11-18T13:09:36Z,Right. Did recognized it the wrong way around. This looks good.\n,https://github.com/bitcoin/bitcoin/pull/6708#discussion_r45196623,45196623,src/wallet/rpcwallet.cpp
MarcoFalke,2015-11-18T13:16:00Z,@laanwj Other PR is closed now. Everything is included in this one.\n,https://github.com/bitcoin/bitcoin/pull/6708#discussion_r45197205,45197205,src/wallet/wallet.cpp
MarcoFalke,2015-11-19T13:31:19Z,"This will produce the smallest diff but if it is preferred to make `check_fee_amount()` independent of `curr_balance`. I.e. `def check_fee_amount(self, actual_fee, fee_per_byte, tx_size):`, it could later also be used by other classes in the framework.\n",https://github.com/bitcoin/bitcoin/pull/6708#discussion_r45339893,45339893,qa/rpc-tests/wallet.py
MarcoFalke,2015-11-19T13:38:10Z,"Nit: @jonasschnelli didn't like this. I think \n- this should hide behind `if (showDebug)`\n- this should be slowly deprecated. (i.e. GUI does not overwrite command line args at runtime and this option should be removed entirely from the GUI, and rpc after a grace period)\n",https://github.com/bitcoin/bitcoin/pull/6708#discussion_r45340596,45340596,src/init.cpp
