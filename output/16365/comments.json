[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/509834814",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-509834814",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 509834814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTgzNDgxNA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-09T22:34:20Z",
    "updated_at": "2021-08-19T15:40:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22736](https://github.com/bitcoin/bitcoin/pull/22736) (log, sync: change lock contention from preprocessor directive to log category by jonatack)\n* [#20487](https://github.com/bitcoin/bitcoin/pull/20487) (Add syscall sandboxing using seccomp-bpf (Linux secure computing mode) by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/509834814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510241739",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-510241739",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 510241739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDI0MTczOQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-10T21:48:30Z",
    "updated_at": "2019-07-10T21:48:30Z",
    "author_association": "MEMBER",
    "body": "How about private keys?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510241739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510704397",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-510704397",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 510704397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDcwNDM5Nw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-12T00:56:02Z",
    "updated_at": "2019-07-12T00:56:02Z",
    "author_association": "MEMBER",
    "body": "IMO the blacklist doesn't look a great option.\r\n\r\nHow about disallow `-debug=rpcparams` in mainnet and drop the blacklist?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510704397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510983178",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-510983178",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 510983178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDk4MzE3OA==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-12T18:16:06Z",
    "updated_at": "2019-07-12T18:16:06Z",
    "author_association": "MEMBER",
    "body": "concept NACK, someone is going to forget when adding a new RPC and start logging secrets in production.\r\n\r\nI think @promag suggestion is better.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510983178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518247800",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-518247800",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 518247800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODI0NzgwMA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-05T14:04:14Z",
    "updated_at": "2019-08-05T22:11:34Z",
    "author_association": "MEMBER",
    "body": "Another approach is to add a sensitive options/flag (false by default) to ~~`RPCHelpMan`~~ `RPCArg`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518247800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518520963",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-518520963",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 518520963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODUyMDk2Mw==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T06:19:00Z",
    "updated_at": "2019-08-06T06:19:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@promag, interesting idea, I like that it would allow specific arguments to be designated as sensitive, rather than the entire method. Also, it would be nice not to have to touch so many lines of code (as my latest commit does). But @instagibbs's concern, https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-510983178, which I was attempted to overcome with my latest commit, becomes live again.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518520963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524023180",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-524023180",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 524023180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDAyMzE4MA==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-22T18:28:43Z",
    "updated_at": "2019-08-22T18:28:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased, replaced functional (python) test with a proper unit test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524023180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527239194",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-527239194",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 527239194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzIzOTE5NA==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-02T20:35:57Z",
    "updated_at": "2019-09-02T20:35:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I had an idea for what may be an improvement. It's in a separate commit, \"replace sensitive bool with more general flags\".  Please let me know what you think; this commit is optional.\r\n\r\nModifying all of the lines of the `static const CRPCCommand commands[]` tables is disruptive, and all that's being done is to add a boolean value (to indicate whether to log the RPC's params or not). As long as we're touching all these lines anyway, why not implement a more general `flags` bitfield, of which `DONTLOG` is just the first bit. There may be other future attributes that would be useful to add to RPC methods. With this commit, adding them would touch only the lines corresponding to the affected RPCs, rather than all of them.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/527239194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551264892",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-551264892",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 551264892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTI2NDg5Mg==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-07T21:08:53Z",
    "updated_at": "2019-11-07T21:08:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased to resolve conflicts.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551264892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557606403",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-557606403",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 557606403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzYwNjQwMw==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-22T16:46:43Z",
    "updated_at": "2019-11-22T16:46:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't know the cause of the Travis CI failure; `feature_pruning.py` succeeds on my machine. I would not think this PR has any particular connection to that test. Maybe it's a transient failure?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557606403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/573083095",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-573083095",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 573083095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzA4MzA5NQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-10T15:33:53Z",
    "updated_at": "2020-01-10T15:33:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, I accidentally closed this PR, reopening now...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/573083095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599345302",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-599345302",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 599345302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTM0NTMwMg==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-16T04:58:11Z",
    "updated_at": "2020-03-16T04:58:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Couldn't we use this approach for now?\r\n\r\nJust so I'm sure I understand, you're suggesting not adding the `flags` member to `CRPCCommand` ([here](https://github.com/bitcoin/bitcoin/pull/16365/files#diff-a0fb7350bf105d107147e0d10f727f47R121), which causes many lines to be touched, and that's clearly undesirable), and instead just don't censor anything (no black or white list), but restrict this to testnet only? \r\n\r\nI like that idea, would make this PR _much_ simpler. If it proves useful on testnet, then we can try to find an acceptable way to bring it to mainnet -- maybe there's a less intrusive way that's still very safe. I always appreciate your comments.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599345302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600208919",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-600208919",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 600208919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDIwODkxOQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-17T17:46:03Z",
    "updated_at": "2020-03-17T17:46:03Z",
    "author_association": "MEMBER",
    "body": "So it seems everything depends on whether this is considered useful for mainnet. I can imagine that for production logging it is. If not, @promag's approach is fine. If it is, the safest approach seems something like the current approach.\r\n\r\nThere is perhaps a less disruptive approach:\r\n* Make it possible to have an optional argument to the CRPCCommand constructors, which defaults to DONT_LOG, and not explicitly change it initially for any commands.\r\n* Then incrementally introduce DO_LOG flags, which can be done separately without needing to keep the whole PR up to date here.\r\n\r\nOne unrelated nit: I think it would be a bit cleaner to log the RPC command and arguments in the same log line (the logic would be something like *if (debug_rpcparams && command.do_log) { log_rpc_with_params(); } else if (debug_rpc || debug_rpcparams) { log_rpc_without_params(); }*",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600208919/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700469861",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-700469861",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 700469861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDQ2OTg2MQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-29T06:05:12Z",
    "updated_at": "2020-09-29T06:05:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Force-pushed ([diff](https://github.com/bitcoin/bitcoin/compare/ae1ffd9530e046b13a3ee5f383560809f751c530..45fb5d040e0aadc22718d35a569dd841c2830d5f)) a different approach that does _not_ require changing each of the 149 per-rpc `CRPCCommand` initializers. This new way is _much_ less invasive and more manageable. I finally decided it's best to go with an \"allow\" list (hard to beat simplicity). If someone adds a new RPC later without being aware of this form of logging, its arguments will not be logged. That makes this approach very safe against accidentally leaking secret information to the log file. I incorporated some of the review comments as well.\r\n\r\nHere are some examples (without showing the RPC output):\r\n```\r\n$ bitcoin-cli getnetworkinfo\r\n$ bitcoin-cli getblockhash 0\r\n$ bitcoin-cli logging '[\"rpcparams\"]' '[\"rpc\",\"mempool\"]'\r\n$ bitcoin-cli encryptwallet WALLET-PASSWORD-SECRET\r\n```\r\nHere's what appears in `debug.log`:\r\n```\r\n2020-09-29T05:58:50Z rpc=getnetworkinfo()\r\n2020-09-29T05:59:00Z rpc=getblockhash(0)\r\n2020-09-29T06:02:51Z rpc=logging([rpcparams],[rpc,mempool])\r\n2020-09-29T06:02:55Z rpc=encryptwallet(****)\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700469861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902780650",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#issuecomment-902780650",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16365",
    "id": 902780650,
    "node_id": "IC_kwDOABII5841z1bq",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-20T15:37:19Z",
    "updated_at": "2021-08-20T15:37:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Maintenance of this list seems like a drawback\r\n\r\nI agree, I'm going to convert this PR to draft because I think there's a better way to do this that doesn't require a separate list. I'll also pick up your other suggestions. Thanks for taking the time to look it over!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/902780650/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/301793038",
    "pull_request_review_id": 259758520,
    "id": 301793038,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMTc5MzAzOA==",
    "diff_hunk": "@@ -365,6 +365,22 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n         params = UniValue(UniValue::VARR);\n     else\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Params must be an array or object\");\n+\n+    // Log arguments unless sensitive.\n+    static const std::set<std::string> blacklist = {\n+        \"encryptwallet\",\n+        \"walletpassphrase\",\n+        \"walletpassphrasechange\",\n+    };",
    "path": "src/rpc/server.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7e412ceb670880f89adfc501f38f59819fca24f6",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Looks like this list is incomplete. Would be nice if it can be deduplicated with the existing `QStringList historyFilter`",
    "created_at": "2019-07-09T21:03:14Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r301793038",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/301793038"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r301793038"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/301793038/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 374,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/301840263",
    "pull_request_review_id": 259815652,
    "id": 301840263,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMTg0MDI2Mw==",
    "diff_hunk": "@@ -365,6 +365,22 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n         params = UniValue(UniValue::VARR);\n     else\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Params must be an array or object\");\n+\n+    // Log arguments unless sensitive.\n+    static const std::set<std::string> blacklist = {\n+        \"encryptwallet\",\n+        \"walletpassphrase\",\n+        \"walletpassphrasechange\",\n+    };",
    "path": "src/rpc/server.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7e412ceb670880f89adfc501f38f59819fca24f6",
    "user": {
      "login": "fqlx",
      "id": 1562849,
      "node_id": "MDQ6VXNlcjE1NjI4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1562849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fqlx",
      "html_url": "https://github.com/fqlx",
      "followers_url": "https://api.github.com/users/fqlx/followers",
      "following_url": "https://api.github.com/users/fqlx/following{/other_user}",
      "gists_url": "https://api.github.com/users/fqlx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fqlx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fqlx/subscriptions",
      "organizations_url": "https://api.github.com/users/fqlx/orgs",
      "repos_url": "https://api.github.com/users/fqlx/repos",
      "events_url": "https://api.github.com/users/fqlx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fqlx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This blacklist should be pulled out of a config rather than buried in the code.",
    "created_at": "2019-07-10T00:02:28Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r301840263",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/301840263"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r301840263"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/301840263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 374,
    "side": "RIGHT",
    "in_reply_to_id": 301793038
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302195082",
    "pull_request_review_id": 260258892,
    "id": 302195082,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjE5NTA4Mg==",
    "diff_hunk": "@@ -365,6 +365,22 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n         params = UniValue(UniValue::VARR);\n     else\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Params must be an array or object\");\n+\n+    // Log arguments unless sensitive.\n+    static const std::set<std::string> blacklist = {\n+        \"encryptwallet\",\n+        \"walletpassphrase\",\n+        \"walletpassphrasechange\",\n+    };",
    "path": "src/rpc/server.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7e412ceb670880f89adfc501f38f59819fca24f6",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What do you mean by \"config\"? Are you referring to `~/.bitcoin/bitcoin.conf`?",
    "created_at": "2019-07-10T17:52:32Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r302195082",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302195082"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r302195082"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302195082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 374,
    "side": "RIGHT",
    "in_reply_to_id": 301793038
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302200131",
    "pull_request_review_id": 260265014,
    "id": 302200131,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjIwMDEzMQ==",
    "diff_hunk": "@@ -365,6 +365,22 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n         params = UniValue(UniValue::VARR);\n     else\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Params must be an array or object\");\n+\n+    // Log arguments unless sensitive.\n+    static const std::set<std::string> blacklist = {\n+        \"encryptwallet\",\n+        \"walletpassphrase\",\n+        \"walletpassphrasechange\",\n+    };",
    "path": "src/rpc/server.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7e412ceb670880f89adfc501f38f59819fca24f6",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I mean that it should go into a common module, probably `./src/util/` or similar.",
    "created_at": "2019-07-10T18:03:34Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r302200131",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302200131"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r302200131"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302200131/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 374,
    "side": "RIGHT",
    "in_reply_to_id": 301793038
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302364549",
    "pull_request_review_id": 260470255,
    "id": 302364549,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjM2NDU0OQ==",
    "diff_hunk": "@@ -54,6 +54,7 @@ namespace BCLog {\n         COINDB      = (1 << 18),\n         QT          = (1 << 19),\n         LEVELDB     = (1 << 20),\n+        RPCPARAMS   = (1 << 21),",
    "path": "src/logging.h",
    "position": null,
    "original_position": 4,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "91ee96bd93b38b7bb0781956bf213627958bf5e8",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm undecided if a new category is needed, or just enable this additional logging with `rpc`. We don't have many of the 32 category bits remaining (although we could easily change to use a `uint64_t`).",
    "created_at": "2019-07-11T05:04:04Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r302364549",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302364549"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r302364549"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302364549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302364868",
    "pull_request_review_id": 260470255,
    "id": 302364868,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjM2NDg2OA==",
    "diff_hunk": "@@ -181,4 +181,34 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n         params = UniValue(UniValue::VARR);\n     else\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Params must be an array or object\");\n+\n+    // Log arguments if requested, unless sensitive.\n+    if (params.size() > 0 && !IsSensitiveRpcMethod(strMethod)) {\n+        LogPrint(BCLog::RPCPARAMS, \"ThreadRPCServer params=[\");\n+        for (size_t i = 0; i < params.size(); ++i) {\n+            if (i > 0)\n+                LogPrint(BCLog::RPCPARAMS, \",\");\n+            LogPrint(BCLog::RPCPARAMS, \"%s\", SanitizeString(params[i].getValStr()));\n+        }\n+        LogPrint(BCLog::RPCPARAMS, \"]\\n\");",
    "path": "src/rpc/request.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "91ee96bd93b38b7bb0781956bf213627958bf5e8",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could print each param on a separate line.",
    "created_at": "2019-07-11T05:05:57Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r302364868",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302364868"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r302364868"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302364868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 193,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065414",
    "pull_request_review_id": 376515661,
    "id": 394065414,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NTQxNA==",
    "diff_hunk": "@@ -238,7 +239,7 @@ static const CRPCCommand vRPCCommands[] =\n   //  --------------------- ------------------------  -----------------------  ----------\n     /* Overall control/query calls */\n     { \"control\",            \"getrpcinfo\",             &getrpcinfo,             {}  },\n-    { \"control\",            \"help\",                   &help,                   {\"command\"}  },\n+    { \"control\",            \"help\",                   &help,                   {\"command\"}, CRPCCommand::LOG_OK,  },",
    "path": "src/rpc/server.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "0f92dff5f08c5adde16e10c3ced0279216e9947c",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is to show how to enable logging, an example.",
    "created_at": "2020-03-18T01:56:10Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394065414",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065414"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394065414"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 242,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065508",
    "pull_request_review_id": 376515661,
    "id": 394065508,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NTUwOA==",
    "diff_hunk": "@@ -439,6 +440,19 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n \n static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& request, UniValue& result, bool last_handler)\n {\n+    // Log arguments if requested, unless sensitive.\n+    if (LogAcceptCategory(BCLog::RPCPARAMS) && request.params.size() > 0 &&\n+            (Params().IsTestChain() || (command.flags & CRPCCommand::LOG_OK)))\n+        {\n+        std::string param;\n+        for (size_t i = 0; i < request.params.size(); ++i) {\n+            if (i > 0) {\n+                param += \",\";\n+            }\n+            param += request.params[i].getValStr();\n+        }\n+        LogPrintf(\"RPC method=%s params=[%s]\\n\", SanitizeString(request.strMethod), SanitizeString(param));",
    "path": "src/rpc/server.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "0f92dff5f08c5adde16e10c3ced0279216e9947c",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This has changed to also print the method string.",
    "created_at": "2020-03-18T01:56:34Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394065508",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065508"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394065508"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 454,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065951",
    "pull_request_review_id": 376515661,
    "id": 394065951,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NTk1MQ==",
    "diff_hunk": "@@ -48,7 +48,7 @@ UniValue getzmqnotifications(const JSONRPCRequest& request)\n     return result;\n }\n \n-const CRPCCommand commands[] =\n+static const CRPCCommand commands[] =\n { //  category              name                                actor (function)                argNames\n   //  -----------------     ------------------------            -----------------------         ----------\n     { \"zmq\",                \"getzmqnotifications\",              &getzmqnotifications,           {} },",
    "path": "src/zmq/zmqrpc.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "0f92dff5f08c5adde16e10c3ced0279216e9947c",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I could remove this, but this change allows `test/lint/check-rpc-mappings.py` to check this file also (was missing).",
    "created_at": "2020-03-18T01:58:25Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394065951",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065951"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394065951"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394065951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394066053",
    "pull_request_review_id": 376515661,
    "id": 394066053,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NjA1Mw==",
    "diff_hunk": "@@ -18,6 +18,9 @@\n     \"src/rpc/net.cpp\",\n     \"src/rpc/rawtransaction.cpp\",\n     \"src/wallet/rpcwallet.cpp\",\n+    \"src/qt/test/rpcnestedtests.cpp\",\n+    \"src/zmq/zmqrpc.cpp\",\n+    \"src/test/rpc_tests.cpp\",",
    "path": "test/lint/check-rpc-mappings.py",
    "position": null,
    "original_position": 6,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "0f92dff5f08c5adde16e10c3ced0279216e9947c",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added two missing files (besides my test).",
    "created_at": "2020-03-18T01:58:48Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394066053",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394066053"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394066053"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394066053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 23,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394066286",
    "pull_request_review_id": 376515661,
    "id": 394066286,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NjI4Ng==",
    "diff_hunk": "@@ -439,6 +440,19 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n \n static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& request, UniValue& result, bool last_handler)\n {\n+    // Log arguments if requested, unless sensitive.\n+    if (LogAcceptCategory(BCLog::RPCPARAMS) && request.params.size() > 0 &&\n+            (Params().IsTestChain() || (command.flags & CRPCCommand::LOG_OK)))",
    "path": "src/rpc/server.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "0f92dff5f08c5adde16e10c3ced0279216e9947c",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If testnet, always show the arguments.",
    "created_at": "2020-03-18T01:59:42Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394066286",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394066286"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r394066286"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394066286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 445,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496788930",
    "pull_request_review_id": 498565592,
    "id": 496788930,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc4ODkzMA==",
    "diff_hunk": "@@ -456,6 +456,163 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n \n static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& request, UniValue& result, bool last_handler)\n {\n+    // Log RPC arguments if requested, unless sensitive.\n+    if (LogAcceptCategory(BCLog::RPCPARAMS)) {\n+        // These RPCs don't log any private or secret information.\n+        static const std::unordered_set<std::string> logging_allow_list{\n+            \"abandontransaction\",\n+            \"abortrescan\",\n+            \"addmultisigaddress\",\n+            \"addnode\",\n+            \"addpeeraddress\",\n+            \"analyzepsbt\",\n+            \"backupwallet\",\n+            \"bumpfee\",\n+            \"clearbanned\",\n+            \"combinepsbt\",\n+            \"combinerawtransaction\",\n+            \"converttopsbt\",\n+            \"createmultisig\",\n+            \"createpsbt\",\n+            \"createrawtransaction\",\n+            \"decodepsbt\",\n+            \"decoderawtransaction\",\n+            \"decodescript\",\n+            \"deriveaddresses\",\n+            \"disconnectnode\",\n+            \"dumpprivkey\",\n+            \"dumptxoutset\",\n+            \"dumpwallet\",\n+            \"echo\",\n+            \"echojson\",\n+            \"estimaterawfee\",\n+            \"estimatesmartfee\",\n+            \"finalizepsbt\",\n+            \"fundrawtransaction\",\n+            \"generate\",\n+            \"generateblock\",\n+            \"generatetoaddress\",\n+            \"generatetodescriptor\",\n+            \"getaddednodeinfo\",\n+            \"getaddressesbylabel\",\n+            \"getaddressinfo\",\n+            \"getbalance\",\n+            \"getbalances\",\n+            \"getbestblockhash\",\n+            \"getblock\",\n+            \"getblockchaininfo\",\n+            \"getblockcount\",\n+            \"getblockfilter\",\n+            \"getblockhash\",\n+            \"getblockheader\",\n+            \"getblockstats\",\n+            \"getblocktemplate\",\n+            \"getchaintips\",\n+            \"getchaintxstats\",\n+            \"getconnectioncount\",\n+            \"getdescriptorinfo\",\n+            \"getdifficulty\",\n+            \"getindexinfo\",\n+            \"getmemoryinfo\",\n+            \"getmempoolancestors\",\n+            \"getmempooldescendants\",\n+            \"getmempoolentry\",\n+            \"getmempoolinfo\",\n+            \"getmininginfo\",\n+            \"getnettotals\",\n+            \"getnetworkhashps\",\n+            \"getnetworkinfo\",\n+            \"getnewaddress\",\n+            \"getnodeaddresses\",\n+            \"getpeerinfo\",\n+            \"getrawchangeaddress\",\n+            \"getrawmempool\",\n+            \"getrawtransaction\",\n+            \"getreceivedbyaddress\",\n+            \"getreceivedbylabel\",\n+            \"getrpcinfo\",\n+            \"gettransaction\",\n+            \"gettxout\",\n+            \"gettxoutproof\",\n+            \"gettxoutsetinfo\",\n+            \"getunconfirmedbalance\",\n+            \"getwalletinfo\",\n+            \"getzmqnotifications\",\n+            \"help\",\n+            \"importaddress\",\n+            \"importdescriptors\",\n+            \"importprunedfunds\",\n+            \"importpubkey\",\n+            \"importwallet\",\n+            \"invalidateblock\",\n+            \"joinpsbts\",\n+            \"keypoolrefill\",\n+            \"listaddressgroupings\",\n+            \"listbanned\",\n+            \"listlabels\",\n+            \"listlockunspent\",\n+            \"listreceivedbyaddress\",\n+            \"listreceivedbylabel\",\n+            \"listsinceblock\",\n+            \"listtransactions\",\n+            \"listunspent\",\n+            \"listwalletdir\",\n+            \"listwallets\",\n+            \"loadwallet\",\n+            \"lockunspent\",\n+            \"logging\",\n+            \"mockscheduler\",\n+            \"ping\",\n+            \"preciousblock\",\n+            \"prioritisetransaction\",\n+            \"pruneblockchain\",\n+            \"psbtbumpfee\",\n+            \"reconsiderblock\",\n+            \"removeprunedfunds\",\n+            \"rescanblockchain\",\n+            \"savemempool\",\n+            \"scantxoutset\",\n+            \"sendmany\",\n+            \"sendrawtransaction\",\n+            \"sendtoaddress\",\n+            \"setban\",\n+            \"setlabel\",\n+            \"setmocktime\",\n+            \"setnetworkactive\",\n+            \"settxfee\",\n+            \"setwalletflag\",\n+            \"stop\",\n+            \"submitblock\",\n+            \"submitheader\",\n+            \"testmempoolaccept\",\n+            \"unloadwallet\",\n+            \"upgradewallet\",\n+            \"uptime\",\n+            \"utxoupdatepsbt\",\n+            \"validateaddress\",\n+            \"verifychain\",\n+            \"verifymessage\",\n+            \"verifytxoutproof\",\n+            \"waitforblock\",\n+            \"waitforblockheight\",\n+            \"waitfornewblock\",\n+            \"walletcreatefundedpsbt\",\n+            \"walletlock\",\n+            \"walletprocesspsbt\",\n+        };",
    "path": "src/rpc/server.cpp",
    "position": 147,
    "original_position": 147,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "45fb5d040e0aadc22718d35a569dd841c2830d5f",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This allow list came from listing all the RPCs and then removing the following:\r\n```\r\nsignmessagewithprivkey\r\nsignrawtransactionwithkey\r\nsignrawtransactionwithwallet\r\nsignmessage\r\ncreatewallet\r\nencryptwallet\r\nimportmulti\r\nimportprivkey\r\nsethdseed\r\nwalletpassphrase\r\nwalletpassphrasechange\r\n```\r\nAs far as I can tell, these are the RPCs whose arguments shouldn't be logged.",
    "created_at": "2020-09-29T14:58:36Z",
    "updated_at": "2021-04-29T20:02:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r496788930",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496788930"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r496788930"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496788930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 616,
    "original_line": 616,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692008618",
    "pull_request_review_id": 733851845,
    "id": 692008618,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjAwODYxOA==",
    "diff_hunk": "@@ -59,6 +59,7 @@ namespace BCLog {\n         VALIDATION  = (1 << 21),\n         I2P         = (1 << 22),\n         IPC         = (1 << 23),\n+        RPCPARAMS   = (1 << 24),",
    "path": "src/logging.h",
    "position": 4,
    "original_position": 4,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`test/functional/rpc_misc.py::L60` needs to be updated: `AssertionError: not(25 == 24)`",
    "created_at": "2021-08-19T11:02:57Z",
    "updated_at": "2021-08-19T11:55:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692008618",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692008618"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692008618"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692008618/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 62,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692009374",
    "pull_request_review_id": 733851845,
    "id": 692009374,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjAwOTM3NA==",
    "diff_hunk": "@@ -470,6 +470,163 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n \n static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& request, UniValue& result, bool last_handler)\n {\n+    // Log RPC arguments if requested, unless sensitive.\n+    if (LogAcceptCategory(BCLog::RPCPARAMS)) {\n+        // These RPCs don't log any private or secret information.\n+        static const std::unordered_set<std::string> logging_allow_list{\n+            \"abandontransaction\",\n+            \"abortrescan\",\n+            \"addmultisigaddress\",\n+            \"addnode\",\n+            \"addpeeraddress\",\n+            \"analyzepsbt\",\n+            \"backupwallet\",\n+            \"bumpfee\",\n+            \"clearbanned\",\n+            \"combinepsbt\",\n+            \"combinerawtransaction\",\n+            \"converttopsbt\",\n+            \"createmultisig\",\n+            \"createpsbt\",\n+            \"createrawtransaction\",\n+            \"decodepsbt\",\n+            \"decoderawtransaction\",\n+            \"decodescript\",\n+            \"deriveaddresses\",\n+            \"disconnectnode\",\n+            \"dumpprivkey\",\n+            \"dumptxoutset\",\n+            \"dumpwallet\",\n+            \"echo\",\n+            \"echojson\",\n+            \"estimaterawfee\",\n+            \"estimatesmartfee\",\n+            \"finalizepsbt\",\n+            \"fundrawtransaction\",\n+            \"generate\",\n+            \"generateblock\",\n+            \"generatetoaddress\",\n+            \"generatetodescriptor\",\n+            \"getaddednodeinfo\",\n+            \"getaddressesbylabel\",\n+            \"getaddressinfo\",\n+            \"getbalance\",\n+            \"getbalances\",\n+            \"getbestblockhash\",\n+            \"getblock\",\n+            \"getblockchaininfo\",\n+            \"getblockcount\",\n+            \"getblockfilter\",\n+            \"getblockhash\",\n+            \"getblockheader\",\n+            \"getblockstats\",\n+            \"getblocktemplate\",\n+            \"getchaintips\",\n+            \"getchaintxstats\",\n+            \"getconnectioncount\",\n+            \"getdescriptorinfo\",\n+            \"getdifficulty\",\n+            \"getindexinfo\",\n+            \"getmemoryinfo\",\n+            \"getmempoolancestors\",\n+            \"getmempooldescendants\",\n+            \"getmempoolentry\",\n+            \"getmempoolinfo\",\n+            \"getmininginfo\",\n+            \"getnettotals\",\n+            \"getnetworkhashps\",\n+            \"getnetworkinfo\",\n+            \"getnewaddress\",\n+            \"getnodeaddresses\",\n+            \"getpeerinfo\",\n+            \"getrawchangeaddress\",\n+            \"getrawmempool\",\n+            \"getrawtransaction\",\n+            \"getreceivedbyaddress\",\n+            \"getreceivedbylabel\",\n+            \"getrpcinfo\",\n+            \"gettransaction\",\n+            \"gettxout\",\n+            \"gettxoutproof\",\n+            \"gettxoutsetinfo\",\n+            \"getunconfirmedbalance\",\n+            \"getwalletinfo\",\n+            \"getzmqnotifications\",\n+            \"help\",\n+            \"importaddress\",\n+            \"importdescriptors\",\n+            \"importprunedfunds\",\n+            \"importpubkey\",\n+            \"importwallet\",\n+            \"invalidateblock\",\n+            \"joinpsbts\",\n+            \"keypoolrefill\",\n+            \"listaddressgroupings\",\n+            \"listbanned\",\n+            \"listlabels\",\n+            \"listlockunspent\",\n+            \"listreceivedbyaddress\",\n+            \"listreceivedbylabel\",\n+            \"listsinceblock\",\n+            \"listtransactions\",\n+            \"listunspent\",\n+            \"listwalletdir\",\n+            \"listwallets\",\n+            \"loadwallet\",\n+            \"lockunspent\",\n+            \"logging\",\n+            \"mockscheduler\",\n+            \"ping\",\n+            \"preciousblock\",\n+            \"prioritisetransaction\",\n+            \"pruneblockchain\",\n+            \"psbtbumpfee\",\n+            \"reconsiderblock\",\n+            \"removeprunedfunds\",\n+            \"rescanblockchain\",",
    "path": "src/rpc/server.cpp",
    "position": 117,
    "original_position": 117,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This list seems to need an update for new RPCS (`restorewallet` comes to mind, not sure if there are others)",
    "created_at": "2021-08-19T11:04:18Z",
    "updated_at": "2021-08-19T11:55:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692009374",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692009374"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692009374"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692009374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 586,
    "original_line": 586,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692013254",
    "pull_request_review_id": 733851845,
    "id": 692013254,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjAxMzI1NA==",
    "diff_hunk": "@@ -456,6 +456,163 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n \n static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& request, UniValue& result, bool last_handler)\n {\n+    // Log RPC arguments if requested, unless sensitive.\n+    if (LogAcceptCategory(BCLog::RPCPARAMS)) {\n+        // These RPCs don't log any private or secret information.\n+        static const std::unordered_set<std::string> logging_allow_list{\n+            \"abandontransaction\",\n+            \"abortrescan\",\n+            \"addmultisigaddress\",\n+            \"addnode\",\n+            \"addpeeraddress\",\n+            \"analyzepsbt\",\n+            \"backupwallet\",\n+            \"bumpfee\",\n+            \"clearbanned\",\n+            \"combinepsbt\",\n+            \"combinerawtransaction\",\n+            \"converttopsbt\",\n+            \"createmultisig\",\n+            \"createpsbt\",\n+            \"createrawtransaction\",\n+            \"decodepsbt\",\n+            \"decoderawtransaction\",\n+            \"decodescript\",\n+            \"deriveaddresses\",\n+            \"disconnectnode\",\n+            \"dumpprivkey\",\n+            \"dumptxoutset\",\n+            \"dumpwallet\",\n+            \"echo\",\n+            \"echojson\",\n+            \"estimaterawfee\",\n+            \"estimatesmartfee\",\n+            \"finalizepsbt\",\n+            \"fundrawtransaction\",\n+            \"generate\",\n+            \"generateblock\",\n+            \"generatetoaddress\",\n+            \"generatetodescriptor\",\n+            \"getaddednodeinfo\",\n+            \"getaddressesbylabel\",\n+            \"getaddressinfo\",\n+            \"getbalance\",\n+            \"getbalances\",\n+            \"getbestblockhash\",\n+            \"getblock\",\n+            \"getblockchaininfo\",\n+            \"getblockcount\",\n+            \"getblockfilter\",\n+            \"getblockhash\",\n+            \"getblockheader\",\n+            \"getblockstats\",\n+            \"getblocktemplate\",\n+            \"getchaintips\",\n+            \"getchaintxstats\",\n+            \"getconnectioncount\",\n+            \"getdescriptorinfo\",\n+            \"getdifficulty\",\n+            \"getindexinfo\",\n+            \"getmemoryinfo\",\n+            \"getmempoolancestors\",\n+            \"getmempooldescendants\",\n+            \"getmempoolentry\",\n+            \"getmempoolinfo\",\n+            \"getmininginfo\",\n+            \"getnettotals\",\n+            \"getnetworkhashps\",\n+            \"getnetworkinfo\",\n+            \"getnewaddress\",\n+            \"getnodeaddresses\",\n+            \"getpeerinfo\",\n+            \"getrawchangeaddress\",\n+            \"getrawmempool\",\n+            \"getrawtransaction\",\n+            \"getreceivedbyaddress\",\n+            \"getreceivedbylabel\",\n+            \"getrpcinfo\",\n+            \"gettransaction\",\n+            \"gettxout\",\n+            \"gettxoutproof\",\n+            \"gettxoutsetinfo\",\n+            \"getunconfirmedbalance\",\n+            \"getwalletinfo\",\n+            \"getzmqnotifications\",\n+            \"help\",\n+            \"importaddress\",\n+            \"importdescriptors\",\n+            \"importprunedfunds\",\n+            \"importpubkey\",\n+            \"importwallet\",\n+            \"invalidateblock\",\n+            \"joinpsbts\",\n+            \"keypoolrefill\",\n+            \"listaddressgroupings\",\n+            \"listbanned\",\n+            \"listlabels\",\n+            \"listlockunspent\",\n+            \"listreceivedbyaddress\",\n+            \"listreceivedbylabel\",\n+            \"listsinceblock\",\n+            \"listtransactions\",\n+            \"listunspent\",\n+            \"listwalletdir\",\n+            \"listwallets\",\n+            \"loadwallet\",\n+            \"lockunspent\",\n+            \"logging\",\n+            \"mockscheduler\",\n+            \"ping\",\n+            \"preciousblock\",\n+            \"prioritisetransaction\",\n+            \"pruneblockchain\",\n+            \"psbtbumpfee\",\n+            \"reconsiderblock\",\n+            \"removeprunedfunds\",\n+            \"rescanblockchain\",\n+            \"savemempool\",\n+            \"scantxoutset\",\n+            \"sendmany\",\n+            \"sendrawtransaction\",\n+            \"sendtoaddress\",\n+            \"setban\",\n+            \"setlabel\",\n+            \"setmocktime\",\n+            \"setnetworkactive\",\n+            \"settxfee\",\n+            \"setwalletflag\",\n+            \"stop\",\n+            \"submitblock\",\n+            \"submitheader\",\n+            \"testmempoolaccept\",\n+            \"unloadwallet\",\n+            \"upgradewallet\",\n+            \"uptime\",\n+            \"utxoupdatepsbt\",\n+            \"validateaddress\",\n+            \"verifychain\",\n+            \"verifymessage\",\n+            \"verifytxoutproof\",\n+            \"waitforblock\",\n+            \"waitforblockheight\",\n+            \"waitfornewblock\",\n+            \"walletcreatefundedpsbt\",\n+            \"walletlock\",\n+            \"walletprocesspsbt\",\n+        };",
    "path": "src/rpc/server.cpp",
    "position": 147,
    "original_position": 147,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "45fb5d040e0aadc22718d35a569dd841c2830d5f",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maintainence of this list seems like a drawback. It would be nice if a test fails somewhere when an RPC is added or removed without the allow list being updated, e.g. with a list of structs of all the RPCs with an associated safe/unsafe bool value, or something like `CRPCConvertParam`. Feel to ignore if unrealistic.",
    "created_at": "2021-08-19T11:10:46Z",
    "updated_at": "2021-08-19T11:55:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692013254",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692013254"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692013254"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692013254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 616,
    "original_line": 616,
    "side": "RIGHT",
    "in_reply_to_id": 496788930
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692013587",
    "pull_request_review_id": 733851845,
    "id": 692013587,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjAxMzU4Nw==",
    "diff_hunk": "@@ -470,6 +470,163 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n \n static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& request, UniValue& result, bool last_handler)\n {\n+    // Log RPC arguments if requested, unless sensitive.\n+    if (LogAcceptCategory(BCLog::RPCPARAMS)) {\n+        // These RPCs don't log any private or secret information.\n+        static const std::unordered_set<std::string> logging_allow_list{\n+            \"abandontransaction\",\n+            \"abortrescan\",\n+            \"addmultisigaddress\",\n+            \"addnode\",\n+            \"addpeeraddress\",\n+            \"analyzepsbt\",\n+            \"backupwallet\",\n+            \"bumpfee\",\n+            \"clearbanned\",\n+            \"combinepsbt\",\n+            \"combinerawtransaction\",\n+            \"converttopsbt\",\n+            \"createmultisig\",\n+            \"createpsbt\",\n+            \"createrawtransaction\",\n+            \"decodepsbt\",\n+            \"decoderawtransaction\",\n+            \"decodescript\",\n+            \"deriveaddresses\",\n+            \"disconnectnode\",\n+            \"dumpprivkey\",\n+            \"dumptxoutset\",\n+            \"dumpwallet\",\n+            \"echo\",\n+            \"echojson\",\n+            \"estimaterawfee\",\n+            \"estimatesmartfee\",\n+            \"finalizepsbt\",\n+            \"fundrawtransaction\",\n+            \"generate\",\n+            \"generateblock\",\n+            \"generatetoaddress\",\n+            \"generatetodescriptor\",\n+            \"getaddednodeinfo\",\n+            \"getaddressesbylabel\",\n+            \"getaddressinfo\",\n+            \"getbalance\",\n+            \"getbalances\",\n+            \"getbestblockhash\",\n+            \"getblock\",\n+            \"getblockchaininfo\",\n+            \"getblockcount\",\n+            \"getblockfilter\",\n+            \"getblockhash\",\n+            \"getblockheader\",\n+            \"getblockstats\",\n+            \"getblocktemplate\",\n+            \"getchaintips\",\n+            \"getchaintxstats\",\n+            \"getconnectioncount\",\n+            \"getdescriptorinfo\",\n+            \"getdifficulty\",\n+            \"getindexinfo\",\n+            \"getmemoryinfo\",\n+            \"getmempoolancestors\",\n+            \"getmempooldescendants\",\n+            \"getmempoolentry\",\n+            \"getmempoolinfo\",\n+            \"getmininginfo\",\n+            \"getnettotals\",\n+            \"getnetworkhashps\",\n+            \"getnetworkinfo\",\n+            \"getnewaddress\",\n+            \"getnodeaddresses\",\n+            \"getpeerinfo\",\n+            \"getrawchangeaddress\",\n+            \"getrawmempool\",\n+            \"getrawtransaction\",\n+            \"getreceivedbyaddress\",\n+            \"getreceivedbylabel\",\n+            \"getrpcinfo\",\n+            \"gettransaction\",\n+            \"gettxout\",\n+            \"gettxoutproof\",\n+            \"gettxoutsetinfo\",\n+            \"getunconfirmedbalance\",\n+            \"getwalletinfo\",\n+            \"getzmqnotifications\",\n+            \"help\",\n+            \"importaddress\",\n+            \"importdescriptors\",\n+            \"importprunedfunds\",\n+            \"importpubkey\",\n+            \"importwallet\",\n+            \"invalidateblock\",\n+            \"joinpsbts\",\n+            \"keypoolrefill\",\n+            \"listaddressgroupings\",\n+            \"listbanned\",\n+            \"listlabels\",\n+            \"listlockunspent\",\n+            \"listreceivedbyaddress\",\n+            \"listreceivedbylabel\",\n+            \"listsinceblock\",\n+            \"listtransactions\",\n+            \"listunspent\",\n+            \"listwalletdir\",\n+            \"listwallets\",\n+            \"loadwallet\",\n+            \"lockunspent\",\n+            \"logging\",\n+            \"mockscheduler\",\n+            \"ping\",\n+            \"preciousblock\",\n+            \"prioritisetransaction\",\n+            \"pruneblockchain\",\n+            \"psbtbumpfee\",\n+            \"reconsiderblock\",\n+            \"removeprunedfunds\",\n+            \"rescanblockchain\",\n+            \"savemempool\",\n+            \"scantxoutset\",\n+            \"sendmany\",\n+            \"sendrawtransaction\",\n+            \"sendtoaddress\",\n+            \"setban\",\n+            \"setlabel\",\n+            \"setmocktime\",\n+            \"setnetworkactive\",\n+            \"settxfee\",\n+            \"setwalletflag\",\n+            \"stop\",\n+            \"submitblock\",\n+            \"submitheader\",\n+            \"testmempoolaccept\",\n+            \"unloadwallet\",\n+            \"upgradewallet\",\n+            \"uptime\",\n+            \"utxoupdatepsbt\",\n+            \"validateaddress\",\n+            \"verifychain\",\n+            \"verifymessage\",\n+            \"verifytxoutproof\",\n+            \"waitforblock\",\n+            \"waitforblockheight\",\n+            \"waitfornewblock\",\n+            \"walletcreatefundedpsbt\",\n+            \"walletlock\",\n+            \"walletprocesspsbt\",\n+        };\n+        std::string params;\n+        if (logging_allow_list.find(request.strMethod) == logging_allow_list.end()) {\n+            params = \"****\";\n+        } else {\n+            for (size_t i = 0; i < request.params.size(); ++i) {\n+                if (i > 0) {\n+                    params += \",\";\n+                }\n+                params += request.params[i].write();\n+            }",
    "path": "src/rpc/server.cpp",
    "position": 157,
    "original_position": 157,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe replace this loop with a call to `util/string.h::Join()`",
    "created_at": "2021-08-19T11:11:15Z",
    "updated_at": "2021-08-19T11:55:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692013587",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692013587"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692013587"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692013587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 626,
    "original_line": 626,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692030348",
    "pull_request_review_id": 733851845,
    "id": 692030348,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjAzMDM0OA==",
    "diff_hunk": "@@ -473,4 +474,43 @@ BOOST_AUTO_TEST_CASE(help_example)\n     BOOST_CHECK_NE(HelpExampleRpcNamed(\"foo\", {{\"arg\", true}}), HelpExampleRpcNamed(\"foo\", {{\"arg\", \"true\"}}));\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_logparams)\n+{\n+    LogInstance().EnableCategory(BCLog::RPCPARAMS);\n+    // Test zero, 1, and 2 arguments, and array arguments.\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"getnetworkinfo\")));\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"verifychain 2\")));\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"verifychain 1 0\")));\n+    BOOST_CHECK_NO_THROW(CallRPC(std::string(\"logging [\\\"rpcparams\\\",\\\"rpc\\\"] [\\\"mempool\\\"]\")));\n+\n+    // Even though it fails, this RPC should be logged -- but not its arguments.\n+    BOOST_CHECK_THROW(CallRPC(std::string(\"signmessagewithprivkey some-key some-message\")), std::runtime_error);\n+\n+    // Open and read debug.log.\n+    FILE* file = fsbridge::fopen(LogInstance().m_file_path, \"rb\");\n+    fseek(file, 0, SEEK_END);\n+    std::vector<char> vch(ftell(file), 0);\n+    fseek(file, 0, SEEK_SET);\n+    size_t nbytes = fread(vch.data(), 1, vch.size(), file);\n+    fclose(file);\n+\n+    // This checks the test (not the code being tested).\n+    BOOST_CHECK_EQUAL(nbytes, vch.size());\n+\n+    // Check that what should appear does, and what shouldn't doesn't.\n+    std::string str(vch.begin(), vch.end());\n+\n+    // These should be found in debug.log.\n+    BOOST_CHECK(str.find(\"rpc=getnetworkinfo()\") != std::string::npos);\n+    BOOST_CHECK(str.find(\"rpc=verifychain(2)\") != std::string::npos);\n+    BOOST_CHECK(str.find(\"rpc=verifychain(1,0)\") != std::string::npos);\n+    BOOST_CHECK(str.find(\"rpc=logging([rpcparams,rpc],[mempool])\") != std::string::npos);\n+\n+    // All arguments replaced by **** (secret information)\n+    BOOST_CHECK(str.find(\"rpc=signmessagewithprivkey(****)\") != std::string::npos);\n+    // Make sure these don't somehow appear\n+    BOOST_CHECK(str.find(\"some-key\") == std::string::npos);\n+    BOOST_CHECK(str.find(\"some-message\") == std::string::npos);",
    "path": "src/test/rpc_tests.cpp",
    "position": 48,
    "original_position": 48,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Some (tested) ideas, feel free to pick/choose/ignore\r\n```diff\r\n-    FILE* file = fsbridge::fopen(LogInstance().m_file_path, \"rb\");\r\n+    FILE* file{fsbridge::fopen(LogInstance().m_file_path, \"rb\")};\r\n     fseek(file, 0, SEEK_END);\r\n     std::vector<char> vch(ftell(file), 0);\r\n     fseek(file, 0, SEEK_SET);\r\n-    size_t nbytes = fread(vch.data(), 1, vch.size(), file);\r\n+    const size_t nbytes{fread(vch.data(), 1, vch.size(), file)};\r\n     fclose(file);\r\n \r\n     // This checks the test (not the code being tested).\r\n     BOOST_CHECK_EQUAL(nbytes, vch.size());\r\n \r\n     // Check that what should appear does, and what shouldn't doesn't.\r\n-    std::string str(vch.begin(), vch.end());\r\n+    const std::string str{vch.begin(), vch.end()};\r\n@@ -512,8 +512,8 @@ BOOST_AUTO_TEST_CASE(rpc_logparams)\r\n-    BOOST_CHECK(str.find(\"some-key\") == std::string::npos);\r\n-    BOOST_CHECK(str.find(\"some-message\") == std::string::npos);\r\n+    BOOST_CHECK_EQUAL(str.find(\"some-key\"), std::string::npos);\r\n+    BOOST_CHECK_EQUAL(str.find(\"some-message\"), std::string::npos);\r\n```\r\n",
    "created_at": "2021-08-19T11:37:51Z",
    "updated_at": "2021-08-19T11:55:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692030348",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692030348"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692030348"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692030348/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 513,
    "original_line": 513,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692037204",
    "pull_request_review_id": 733851845,
    "id": 692037204,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MjAzNzIwNA==",
    "diff_hunk": "@@ -470,6 +470,163 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n \n static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& request, UniValue& result, bool last_handler)\n {\n+    // Log RPC arguments if requested, unless sensitive.\n+    if (LogAcceptCategory(BCLog::RPCPARAMS)) {\n+        // These RPCs don't log any private or secret information.\n+        static const std::unordered_set<std::string> logging_allow_list{\n+            \"abandontransaction\",\n+            \"abortrescan\",\n+            \"addmultisigaddress\",\n+            \"addnode\",\n+            \"addpeeraddress\",\n+            \"analyzepsbt\",\n+            \"backupwallet\",\n+            \"bumpfee\",\n+            \"clearbanned\",\n+            \"combinepsbt\",\n+            \"combinerawtransaction\",\n+            \"converttopsbt\",\n+            \"createmultisig\",\n+            \"createpsbt\",\n+            \"createrawtransaction\",\n+            \"decodepsbt\",\n+            \"decoderawtransaction\",\n+            \"decodescript\",\n+            \"deriveaddresses\",\n+            \"disconnectnode\",\n+            \"dumpprivkey\",\n+            \"dumptxoutset\",\n+            \"dumpwallet\",\n+            \"echo\",\n+            \"echojson\",\n+            \"estimaterawfee\",\n+            \"estimatesmartfee\",\n+            \"finalizepsbt\",\n+            \"fundrawtransaction\",\n+            \"generate\",\n+            \"generateblock\",\n+            \"generatetoaddress\",\n+            \"generatetodescriptor\",\n+            \"getaddednodeinfo\",\n+            \"getaddressesbylabel\",\n+            \"getaddressinfo\",\n+            \"getbalance\",\n+            \"getbalances\",\n+            \"getbestblockhash\",\n+            \"getblock\",\n+            \"getblockchaininfo\",\n+            \"getblockcount\",\n+            \"getblockfilter\",\n+            \"getblockhash\",\n+            \"getblockheader\",\n+            \"getblockstats\",\n+            \"getblocktemplate\",\n+            \"getchaintips\",\n+            \"getchaintxstats\",\n+            \"getconnectioncount\",\n+            \"getdescriptorinfo\",\n+            \"getdifficulty\",\n+            \"getindexinfo\",\n+            \"getmemoryinfo\",\n+            \"getmempoolancestors\",\n+            \"getmempooldescendants\",\n+            \"getmempoolentry\",\n+            \"getmempoolinfo\",\n+            \"getmininginfo\",\n+            \"getnettotals\",\n+            \"getnetworkhashps\",\n+            \"getnetworkinfo\",\n+            \"getnewaddress\",\n+            \"getnodeaddresses\",\n+            \"getpeerinfo\",\n+            \"getrawchangeaddress\",\n+            \"getrawmempool\",\n+            \"getrawtransaction\",\n+            \"getreceivedbyaddress\",\n+            \"getreceivedbylabel\",\n+            \"getrpcinfo\",\n+            \"gettransaction\",\n+            \"gettxout\",\n+            \"gettxoutproof\",\n+            \"gettxoutsetinfo\",\n+            \"getunconfirmedbalance\",\n+            \"getwalletinfo\",\n+            \"getzmqnotifications\",\n+            \"help\",\n+            \"importaddress\",\n+            \"importdescriptors\",\n+            \"importprunedfunds\",\n+            \"importpubkey\",\n+            \"importwallet\",\n+            \"invalidateblock\",\n+            \"joinpsbts\",\n+            \"keypoolrefill\",\n+            \"listaddressgroupings\",\n+            \"listbanned\",\n+            \"listlabels\",\n+            \"listlockunspent\",\n+            \"listreceivedbyaddress\",\n+            \"listreceivedbylabel\",\n+            \"listsinceblock\",\n+            \"listtransactions\",\n+            \"listunspent\",\n+            \"listwalletdir\",\n+            \"listwallets\",\n+            \"loadwallet\",\n+            \"lockunspent\",\n+            \"logging\",\n+            \"mockscheduler\",\n+            \"ping\",\n+            \"preciousblock\",\n+            \"prioritisetransaction\",\n+            \"pruneblockchain\",\n+            \"psbtbumpfee\",\n+            \"reconsiderblock\",\n+            \"removeprunedfunds\",\n+            \"rescanblockchain\",\n+            \"savemempool\",\n+            \"scantxoutset\",\n+            \"sendmany\",\n+            \"sendrawtransaction\",\n+            \"sendtoaddress\",\n+            \"setban\",\n+            \"setlabel\",\n+            \"setmocktime\",\n+            \"setnetworkactive\",\n+            \"settxfee\",\n+            \"setwalletflag\",\n+            \"stop\",\n+            \"submitblock\",\n+            \"submitheader\",\n+            \"testmempoolaccept\",\n+            \"unloadwallet\",\n+            \"upgradewallet\",\n+            \"uptime\",\n+            \"utxoupdatepsbt\",\n+            \"validateaddress\",\n+            \"verifychain\",\n+            \"verifymessage\",\n+            \"verifytxoutproof\",\n+            \"waitforblock\",\n+            \"waitforblockheight\",\n+            \"waitfornewblock\",\n+            \"walletcreatefundedpsbt\",\n+            \"walletlock\",\n+            \"walletprocesspsbt\",\n+        };\n+        std::string params;\n+        if (logging_allow_list.find(request.strMethod) == logging_allow_list.end()) {\n+            params = \"****\";\n+        } else {\n+            for (size_t i = 0; i < request.params.size(); ++i) {\n+                if (i > 0) {\n+                    params += \",\";",
    "path": "src/rpc/server.cpp",
    "position": 154,
    "original_position": 154,
    "commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "original_commit_id": "7d22a6fad9d855e9dbb0bca70857c9aadc55f188",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not sure here, perhaps separate the params with `\", \"` (comma + space)\r\n\r\nnow\r\n```\r\n2021-08-19T11:45:46Z rpc=getmempoolancestors(b6a5ed05bc71c8ccc5316,true)\r\n```\r\ncomma+space\r\n```\r\n2021-08-19T11:45:46Z rpc=getmempoolancestors(b6a5ed05bc71c8ccc5316, true)\r\n```\r\n",
    "created_at": "2021-08-19T11:49:04Z",
    "updated_at": "2021-08-19T11:55:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692037204",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692037204"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16365#discussion_r692037204"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16365"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/692037204/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 623,
    "original_line": 623,
    "side": "RIGHT"
  }
]