[
  {
    "sha": "ce650182f4d9847423202789856e6e5f499151f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTY1MDE4MmY0ZDk4NDc0MjMyMDI3ODk4NTZlNmU1ZjQ5OTE1MWY4",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-09-12T15:38:20Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-04-13T13:52:50Z"
      },
      "message": "Use P2SH consensus rules for all blocks\n\nThis commit moves P2SH activation back to the genesis block, with\na hardcoded exception for the one historical block in the chain that\nviolated this rule.",
      "tree": {
        "sha": "8c8d4fb1e83bb6b8ebb1955f646720a54272158c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c8d4fb1e83bb6b8ebb1955f646720a54272158c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce650182f4d9847423202789856e6e5f499151f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce650182f4d9847423202789856e6e5f499151f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce650182f4d9847423202789856e6e5f499151f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce650182f4d9847423202789856e6e5f499151f8/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "94deb093499ca72154b794b3005d5cdaa6d97de9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94deb093499ca72154b794b3005d5cdaa6d97de9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/94deb093499ca72154b794b3005d5cdaa6d97de9"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 14,
      "deletions": 7
    },
    "files": [
      {
        "sha": "121d95af90c2538d2b137d109227c9dd64fd780e",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce650182f4d9847423202789856e6e5f499151f8/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce650182f4d9847423202789856e6e5f499151f8/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=ce650182f4d9847423202789856e6e5f499151f8",
        "patch": "@@ -75,7 +75,7 @@ class CMainParams : public CChainParams {\n     CMainParams() {\n         strNetworkID = \"main\";\n         consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Height = 173805; // 00000000000000ce80a7e057163a4db1d5ad7b20fb6f598c9597b9665c8fb0d4 - April 1, 2012\n+        consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\n         consensus.BIP34Height = 227931;\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n         consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n@@ -190,7 +190,7 @@ class CTestNetParams : public CChainParams {\n     CTestNetParams() {\n         strNetworkID = \"test\";\n         consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Height = 514; // 00000000040b4e986385315e14bee30ad876d8b47f748025b26683116d21aa65\n+        consensus.BIP16Exception = uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\");\n         consensus.BIP34Height = 21111;\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n         consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n@@ -283,7 +283,7 @@ class CRegTestParams : public CChainParams {\n     CRegTestParams() {\n         strNetworkID = \"regtest\";\n         consensus.nSubsidyHalvingInterval = 150;\n-        consensus.BIP16Height = 0; // always enforce P2SH BIP16 on regtest\n+        consensus.BIP16Exception = uint256();\n         consensus.BIP34Height = 100000000; // BIP34 has not activated on regtest (far in the future so block v1 are not rejected in tests)\n         consensus.BIP34Hash = uint256();\n         consensus.BIP65Height = 1351; // BIP65 activated on regtest (Used in rpc activation tests)"
      },
      {
        "sha": "0559304fc2d54f36fe620eb326d1c6aab7773b9b",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce650182f4d9847423202789856e6e5f499151f8/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce650182f4d9847423202789856e6e5f499151f8/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=ce650182f4d9847423202789856e6e5f499151f8",
        "patch": "@@ -49,8 +49,8 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /** Block height at which BIP16 becomes active */\n-    int BIP16Height;\n+    /* Block hash that is excepted from BIP16 enforcement */\n+    uint256 BIP16Exception;\n     /** Block height and hash at which BIP34 becomes active */\n     int BIP34Height;\n     uint256 BIP34Hash;"
      },
      {
        "sha": "ac585895e546269a031e1bf72097a2121ab9e639",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce650182f4d9847423202789856e6e5f499151f8/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce650182f4d9847423202789856e6e5f499151f8/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ce650182f4d9847423202789856e6e5f499151f8",
        "patch": "@@ -1730,8 +1730,15 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n \n     unsigned int flags = SCRIPT_VERIFY_NONE;\n \n-    // Start enforcing P2SH (BIP16)\n-    if (pindex->nHeight >= consensusparams.BIP16Height) {\n+    // BIP16 didn't become active until Apr 1 2012 (on mainnet, and\n+    // retroactively applied to testnet)\n+    // However, only one historical block violated the P2SH rules (on both\n+    // mainnet and testnet), so for simplicity, always leave P2SH\n+    // on except for the one violating block.\n+    if (consensusparams.BIP16Exception.IsNull() || // no bip16 exception on this chain\n+        pindex->phashBlock == nullptr || // this is a new candidate block, eg from TestBlockValidity()\n+        *pindex->phashBlock != consensusparams.BIP16Exception) // this block isn't the historical exception\n+    {\n         flags |= SCRIPT_VERIFY_P2SH;\n     }\n "
      }
    ]
  },
  {
    "sha": "95749a58364611c997ba9295fb27489e0d7b1d42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTc0OWE1ODM2NDYxMWM5OTdiYTkyOTVmYjI3NDg5ZTBkN2IxZDQy",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-09-12T16:40:29Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-04-13T14:35:27Z"
      },
      "message": "Separate NULLDUMMY enforcement from SEGWIT enforcement\n\nThis is in preparation for enforcing SCRIPT_VERIFY_WITNESS from\nthe genesis block.",
      "tree": {
        "sha": "e9c254385c6abd27c1ff919d385f614a236d4beb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9c254385c6abd27c1ff919d385f614a236d4beb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95749a58364611c997ba9295fb27489e0d7b1d42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95749a58364611c997ba9295fb27489e0d7b1d42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95749a58364611c997ba9295fb27489e0d7b1d42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95749a58364611c997ba9295fb27489e0d7b1d42/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce650182f4d9847423202789856e6e5f499151f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce650182f4d9847423202789856e6e5f499151f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce650182f4d9847423202789856e6e5f499151f8"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6bcc03c305150f66477a69b1c6df3d889135e98f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95749a58364611c997ba9295fb27489e0d7b1d42/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95749a58364611c997ba9295fb27489e0d7b1d42/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=95749a58364611c997ba9295fb27489e0d7b1d42",
        "patch": "@@ -1760,6 +1760,9 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     // Start enforcing WITNESS rules using versionbits logic.\n     if (IsWitnessEnabled(pindex->pprev, consensusparams)) {\n         flags |= SCRIPT_VERIFY_WITNESS;\n+    }\n+\n+    if (IsNullDummyEnabled(pindex->pprev, consensusparams)) {\n         flags |= SCRIPT_VERIFY_NULLDUMMY;\n     }\n \n@@ -3106,6 +3109,12 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n     return (VersionBitsState(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE);\n }\n \n+bool IsNullDummyEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n+{\n+    LOCK(cs_main);\n+    return (VersionBitsState(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE);\n+}\n+\n // Compute at which vout of the block's coinbase transaction the witness\n // commitment occurs, or -1 if not found.\n static int GetWitnessCommitmentIndex(const CBlock& block)"
      },
      {
        "sha": "b415a85053e2a55ed480b3165cfe785b8c7c5471",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95749a58364611c997ba9295fb27489e0d7b1d42/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95749a58364611c997ba9295fb27489e0d7b1d42/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=95749a58364611c997ba9295fb27489e0d7b1d42",
        "patch": "@@ -411,6 +411,9 @@ bool TestBlockValidity(CValidationState& state, const CChainParams& chainparams,\n /** Check whether witness commitments are required for block. */\n bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& params);\n \n+/** Check whether NULLDUMMY (BIP 147) has activated. */\n+bool IsNullDummyEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& params);\n+\n /** When there are blocks in the active chain with missing data, rewind the chainstate and remove them from the block index */\n bool RewindBlockIndex(const CChainParams& params);\n "
      }
    ]
  },
  {
    "sha": "5c31b20a35053e75fdf6b86213860088a4e6f3a0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzMxYjIwYTM1MDUzZTc1ZmRmNmI4NjIxMzg2MDA4OGE0ZTZmM2Ew",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-09-29T18:12:30Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-04-13T14:35:27Z"
      },
      "message": "[qa] Remove some pre-activation segwit tests\n\nThis is in preparation for always enforcing SCRIPT_VERIFY_WITNESS.",
      "tree": {
        "sha": "0ccb3589665244bb2153ac41d736ffec7d5e6c24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ccb3589665244bb2153ac41d736ffec7d5e6c24"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c31b20a35053e75fdf6b86213860088a4e6f3a0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c31b20a35053e75fdf6b86213860088a4e6f3a0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c31b20a35053e75fdf6b86213860088a4e6f3a0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c31b20a35053e75fdf6b86213860088a4e6f3a0/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "95749a58364611c997ba9295fb27489e0d7b1d42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95749a58364611c997ba9295fb27489e0d7b1d42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/95749a58364611c997ba9295fb27489e0d7b1d42"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 1,
      "deletions": 10
    },
    "files": [
      {
        "sha": "e835b9d77751937b5c50392ddbc6a5a19748ccf4",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c31b20a35053e75fdf6b86213860088a4e6f3a0/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c31b20a35053e75fdf6b86213860088a4e6f3a0/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=5c31b20a35053e75fdf6b86213860088a4e6f3a0",
        "patch": "@@ -150,19 +150,11 @@ def run_test(self):\n         self.skip_mine(self.nodes[2], p2sh_ids[NODE_2][WIT_V0][0], True) #block 426\n         self.skip_mine(self.nodes[2], p2sh_ids[NODE_2][WIT_V1][0], True) #block 427\n \n-        # TODO: An old node would see these txs without witnesses and be able to mine them\n-\n-        self.log.info(\"Verify unsigned bare witness txs in versionbits-setting blocks are valid before the fork\")\n-        self.success_mine(self.nodes[2], wit_ids[NODE_2][WIT_V0][1], False) #block 428\n-        self.success_mine(self.nodes[2], wit_ids[NODE_2][WIT_V1][1], False) #block 429\n-\n         self.log.info(\"Verify unsigned p2sh witness txs without a redeem script are invalid\")\n         self.fail_accept(self.nodes[2], \"mandatory-script-verify-flag\", p2sh_ids[NODE_2][WIT_V0][1], False)\n         self.fail_accept(self.nodes[2], \"mandatory-script-verify-flag\", p2sh_ids[NODE_2][WIT_V1][1], False)\n \n-        self.log.info(\"Verify unsigned p2sh witness txs with a redeem script in versionbits-settings blocks are valid before the fork\")\n-        self.success_mine(self.nodes[2], p2sh_ids[NODE_2][WIT_V0][1], False, witness_script(False, self.pubkey[2])) #block 430\n-        self.success_mine(self.nodes[2], p2sh_ids[NODE_2][WIT_V1][1], False, witness_script(True, self.pubkey[2])) #block 431\n+        self.nodes[2].generate(4) # blocks 428-431\n \n         self.log.info(\"Verify previous witness txs skipped for mining can now be mined\")\n         assert_equal(len(self.nodes[2].getrawmempool()), 4)"
      },
      {
        "sha": "79d9555abf5cc0fbcafaee576bb73d0b28b11f7b",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c31b20a35053e75fdf6b86213860088a4e6f3a0/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c31b20a35053e75fdf6b86213860088a4e6f3a0/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=5c31b20a35053e75fdf6b86213860088a4e6f3a0",
        "patch": "@@ -1914,7 +1914,6 @@ def run_test(self):\n         self.test_unnecessary_witness_before_segwit_activation()\n         self.test_witness_tx_relay_before_segwit_activation()\n         self.test_block_relay(segwit_activated=False)\n-        self.test_p2sh_witness(segwit_activated=False)\n         self.test_standardness_v0(segwit_activated=False)\n \n         sync_blocks(self.nodes)"
      }
    ]
  },
  {
    "sha": "ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2I4Y2E0MmE0MmEzZTFiZjZjODU0MTBhYTQwNTBhYTYxZTViZjgx",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-09-13T14:13:57Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-04-13T14:35:27Z"
      },
      "message": "Always enforce SCRIPT_VERIFY_WITNESS with P2SH",
      "tree": {
        "sha": "8987480daf2a634643c7bdf71ec579a63a7a7aea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8987480daf2a634643c7bdf71ec579a63a7a7aea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c31b20a35053e75fdf6b86213860088a4e6f3a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c31b20a35053e75fdf6b86213860088a4e6f3a0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c31b20a35053e75fdf6b86213860088a4e6f3a0"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 18,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c0bfc564037cb19950d55939183340cd6019f9bd",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 5,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81",
        "patch": "@@ -1725,6 +1725,15 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n // Protected by cs_main\n static ThresholdConditionCache warningcache[VERSIONBITS_NUM_BITS];\n \n+// 0.13.0 was shipped with a segwit deployment defined for testnet, but not for\n+// mainnet. We no longer need to support disabling the segwit deployment\n+// except for testing purposes, due to limitations of the functional test\n+// environment. See test/functional/p2p-segwit.py.\n+static bool IsScriptWitnessEnabled(const Consensus::Params& params)\n+{\n+    return params.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout != 0;\n+}\n+\n static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consensus::Params& consensusparams) {\n     AssertLockHeld(cs_main);\n \n@@ -1742,6 +1751,12 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n         flags |= SCRIPT_VERIFY_P2SH;\n     }\n \n+    // Enforce WITNESS rules whenever P2SH is in effect (and the segwit\n+    // deployment is defined).\n+    if (flags & SCRIPT_VERIFY_P2SH && IsScriptWitnessEnabled(consensusparams)) {\n+        flags |= SCRIPT_VERIFY_WITNESS;\n+    }\n+\n     // Start enforcing the DERSIG (BIP66) rule\n     if (pindex->nHeight >= consensusparams.BIP66Height) {\n         flags |= SCRIPT_VERIFY_DERSIG;\n@@ -1757,11 +1772,6 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n         flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n     }\n \n-    // Start enforcing WITNESS rules using versionbits logic.\n-    if (IsWitnessEnabled(pindex->pprev, consensusparams)) {\n-        flags |= SCRIPT_VERIFY_WITNESS;\n-    }\n-\n     if (IsNullDummyEnabled(pindex->pprev, consensusparams)) {\n         flags |= SCRIPT_VERIFY_NULLDUMMY;\n     }\n@@ -4107,6 +4117,9 @@ bool CChainState::RewindBlockIndex(const CChainParams& params)\n \n     int nHeight = 1;\n     while (nHeight <= chainActive.Height()) {\n+        // Although SCRIPT_VERIFY_WITNESS is now generally enforced on all\n+        // blocks in ConnectBlock, we don't need to go back and\n+        // re-download/re-verify blocks from before segwit actually activated.\n         if (IsWitnessEnabled(chainActive[nHeight - 1], params.GetConsensus()) && !(chainActive[nHeight]->nStatus & BLOCK_OPT_WITNESS)) {\n             break;\n         }"
      }
    ]
  },
  {
    "sha": "8b56fc0b91eb4876004bdc92a7015b12b34a04ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjU2ZmMwYjkxZWI0ODc2MDA0YmRjOTJhNzAxNWIxMmIzNGEwNGVk",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-01-22T19:34:42Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-04-13T14:35:27Z"
      },
      "message": "[qa] Test that v0 segwit outputs can't be spent pre-activation\n\nAlso updates the comments for an existing test, that now should be rewritten.\nIncludes changes suggested by John Newbery.",
      "tree": {
        "sha": "98d88b83e074c0706ebfc3c344c25cf1c5ebb653",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98d88b83e074c0706ebfc3c344c25cf1c5ebb653"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b56fc0b91eb4876004bdc92a7015b12b34a04ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b56fc0b91eb4876004bdc92a7015b12b34a04ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b56fc0b91eb4876004bdc92a7015b12b34a04ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b56fc0b91eb4876004bdc92a7015b12b34a04ed/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccb8ca42a42a3e1bf6c85410aa4050aa61e5bf81"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 84,
      "deletions": 4
    },
    "files": [
      {
        "sha": "26636c473c25c2286289eb1f3d1f8566ddb6a967",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 84,
        "deletions": 4,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b56fc0b91eb4876004bdc92a7015b12b34a04ed/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b56fc0b91eb4876004bdc92a7015b12b34a04ed/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=8b56fc0b91eb4876004bdc92a7015b12b34a04ed",
        "patch": "@@ -47,7 +47,7 @@ def test_transaction_acceptance(rpc, p2p, tx, with_witness, accepted, reason=Non\n         with mininode_lock:\n             assert_equal(p2p.last_message[\"reject\"].reason, reason)\n \n-def test_witness_block(rpc, p2p, block, accepted, with_witness=True):\n+def test_witness_block(rpc, p2p, block, accepted, with_witness=True, reason=None):\n     \"\"\"Send a block to the node and check that it's accepted\n \n     - Submit the block over the p2p interface\n@@ -58,6 +58,10 @@ def test_witness_block(rpc, p2p, block, accepted, with_witness=True):\n         p2p.send_message(msg_block(block))\n     p2p.sync_with_ping()\n     assert_equal(rpc.getbestblockhash() == block.hash, accepted)\n+    if (reason != None and not accepted):\n+        # Check the rejection reason as well.\n+        with mininode_lock:\n+            assert_equal(p2p.last_message[\"reject\"].reason, reason)\n \n class TestP2PConn(P2PInterface):\n     def __init__(self):\n@@ -271,6 +275,80 @@ def test_unnecessary_witness_before_segwit_activation(self):\n         self.utxo.pop(0)\n         self.utxo.append(UTXO(tx4.sha256, 0, tx4.vout[0].nValue))\n \n+    # ~6 months after segwit activation, the SCRIPT_VERIFY_WITNESS flag was\n+    # backdated so that it applies to all blocks, going back to the genesis\n+    # block.\n+    #\n+    # Consequently, version 0 witness outputs are never spendable without\n+    # witness, and so can't be spent before segwit activation (the point at which\n+    # blocks are permitted to contain witnesses).\n+    def test_v0_outputs_arent_spendable(self):\n+        self.log.info(\"Testing that v0 witness program outputs aren't spendable before activation\")\n+\n+        assert len(self.utxo), \"self.utxo is empty\"\n+\n+        # Create two outputs, a p2wsh and p2sh-p2wsh\n+        witness_program = CScript([OP_TRUE])\n+        witness_hash = sha256(witness_program)\n+        scriptPubKey = CScript([OP_0, witness_hash])\n+\n+        p2sh_pubkey = hash160(scriptPubKey)\n+        p2sh_scriptPubKey = CScript([OP_HASH160, p2sh_pubkey, OP_EQUAL])\n+\n+        value = self.utxo[0].nValue // 3\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(self.utxo[0].sha256, self.utxo[0].n), b'')]\n+        tx.vout = [CTxOut(value, scriptPubKey), CTxOut(value, p2sh_scriptPubKey)]\n+        tx.vout.append(CTxOut(value, CScript([OP_TRUE])))\n+        tx.rehash()\n+        txid = tx.sha256\n+\n+        # Add it to a block\n+        block = self.build_next_block()\n+        self.update_witness_block_with_transactions(block, [tx])\n+        # Verify that segwit isn't activated. A block serialized with witness\n+        # should be rejected prior to activation.\n+        test_witness_block(self.nodes[0], self.test_node, block, accepted=False, with_witness=True, reason = b'unexpected-witness')\n+        # Now send the block without witness. It should be accepted\n+        test_witness_block(self.nodes[0], self.test_node, block, accepted=True, with_witness=False)\n+\n+        # Now try to spend the outputs. This should fail since SCRIPT_VERIFY_WITNESS is always enabled.\n+        p2wsh_tx = CTransaction()\n+        p2wsh_tx.vin = [CTxIn(COutPoint(txid, 0), b'')]\n+        p2wsh_tx.vout = [CTxOut(value, CScript([OP_TRUE]))]\n+        p2wsh_tx.wit.vtxinwit.append(CTxInWitness())\n+        p2wsh_tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        p2wsh_tx.rehash()\n+\n+        p2sh_p2wsh_tx = CTransaction()\n+        p2sh_p2wsh_tx.vin = [CTxIn(COutPoint(txid, 1), CScript([scriptPubKey]))]\n+        p2sh_p2wsh_tx.vout = [CTxOut(value, CScript([OP_TRUE]))]\n+        p2sh_p2wsh_tx.wit.vtxinwit.append(CTxInWitness())\n+        p2sh_p2wsh_tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        p2sh_p2wsh_tx.rehash()\n+\n+        for tx in [p2wsh_tx, p2sh_p2wsh_tx]:\n+\n+            block = self.build_next_block()\n+            self.update_witness_block_with_transactions(block, [tx])\n+\n+            # When the block is serialized with a witness, the block will be rejected because witness\n+            # data isn't allowed in blocks that don't commit to witness data.\n+            test_witness_block(self.nodes[0], self.test_node, block, accepted=False, with_witness=True, reason=b'unexpected-witness')\n+\n+            # When the block is serialized without witness, validation fails because the transaction is\n+            # invalid (transactions are always validated with SCRIPT_VERIFY_WITNESS so a segwit v0 transaction\n+            # without a witness is invalid).\n+            # Note: The reject reason for this failure could be\n+            # 'block-validation-failed' (if script check threads > 1) or\n+            # 'non-mandatory-script-verify-flag (Witness program was passed an\n+            # empty witness)' (otherwise).\n+            # TODO: support multiple acceptable reject reasons.\n+            test_witness_block(self.nodes[0], self.test_node, block, accepted=False, with_witness=False)\n+\n+        self.utxo.pop(0)\n+        self.utxo.append(UTXO(txid, 2, value))\n \n     # Mine enough blocks for segwit's vb state to be 'started'.\n     def advance_to_segwit_started(self):\n@@ -1476,9 +1554,10 @@ def test_p2sh_witness(self, segwit_activated):\n         block = self.build_next_block()\n         self.update_witness_block_with_transactions(block, [spend_tx])\n \n-        # If we're before activation, then sending this without witnesses\n-        # should be valid.  If we're after activation, then sending this with\n-        # witnesses should be valid.\n+        # If we're after activation, then sending this with witnesses should be valid.\n+        # This no longer works before activation, because SCRIPT_VERIFY_WITNESS\n+        # is always set.\n+        # TODO: rewrite this test to make clear that it only works after activation.\n         if segwit_activated:\n             test_witness_block(self.nodes[0].rpc, self.test_node, block, accepted=True)\n         else:\n@@ -1897,6 +1976,7 @@ def run_test(self):\n         self.test_witness_services() # Verifies NODE_WITNESS\n         self.test_non_witness_transaction() # non-witness tx's are accepted\n         self.test_unnecessary_witness_before_segwit_activation()\n+        self.test_v0_outputs_arent_spendable()\n         self.test_block_relay(segwit_activated=False)\n \n         # Advance to segwit being 'started'"
      }
    ]
  }
]