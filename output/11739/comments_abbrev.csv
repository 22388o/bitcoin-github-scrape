sdaftuar,2017-11-20T20:36:37Z,"Forgot to flag this: there is one mainnet block that violated P2SH, and one testnet block as well.  For now I carved out both, but perhaps we could consider migration to a new testnet (4?) instead and drop the testnet exception?  Seems like it might be cleaner to have a new testnet that always has P2SH and segwit from genesis....  Does anyone think this would be worth proposing?",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-345823546,345823546,
TheBlueMatt,2017-11-22T00:10:25Z,"Concept ACK. At a code level not so interesting, I suppose (except for maybe the P2SH backdating), but it's generally a nice property for us to, over time, enforce soft forks like SegWit universally.\n\nOn November 20, 2017 12:32:05 PM PST, Suhas Daftuar <notifications@github.com> wrote:\n>As discussed at the IRC meeting back in October\n>(https://botbot.me/freenode/bitcoin-core-dev/2017-10-12/?ms",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-346202002,346202002,
sipa,2017-11-22T01:44:29Z,"The code changes here don't look as bad as I would have expected. I'd prefer to encapsulate the exception block hashes in chainparams, though.",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-346217588,346217588,
gmaxwell,2017-11-23T01:36:45Z,"Concept ACK!   as far as testnet, restarting with a new testnet would be fine, but there are a bunch of very interesting test cases in testnet we should consider extracting. One possibility would be to instrument the codebase to call the gprof things to record branch coverage data at each block; an then make a list of testnet blocks that increased cover.  Seems like a real pain though.",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-346515145,346515145,
sdaftuar,2017-12-05T22:21:27Z,Nits addressed.,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-349461292,349461292,
laanwj,2017-12-20T16:32:06Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-353112588,353112588,
gmaxwell,2018-01-11T20:49:00Z,Tested ACK,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-357056736,357056736,
sdaftuar,2018-01-22T20:04:56Z,Addressed @ryanofsky's comments.  However I think I will need to rebase in order to for the new test I wrote to work...,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-359547921,359547921,
sdaftuar,2018-01-23T17:44:53Z,Rebased and fixed the last commit to work with latest master.  Previous version of these commits is at https://github.com/sdaftuar/bitcoin/commits/11739.1,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-359872028,359872028,
sdaftuar,2018-01-23T17:51:43Z,@jtimon Agreed -- I sent an [email to the bitcoin-dev](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015588.html) list recently with a link to the [draft BIP text](https://github.com/sdaftuar/bips/blob/p2sh-v0segwit-from-genesis/bip-sdaftuar-p2sh-v0segwit-from-genesis.mediawiki). ,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-359874023,359874023,
jnewbery,2018-01-23T23:25:31Z,"utACK up to 4e2b90d21690059dc496a17d2aee9fe11ce3a8b2.\n\nI don't think the final commit adds any value and can be removed from this PR.",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-359966771,359966771,
sdaftuar,2018-01-25T16:38:31Z,"Github thought this needed to be rebased, so I did, though there were no conflicts to be resolved.\nOriginal unsquashed version is https://github.com/sdaftuar/bitcoin/commits/11739.2.",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-360523691,360523691,
sdaftuar,2018-01-25T17:45:59Z,"I decided to remove the scripted-diff commit, because in retrospect I think the existing function name, `IsWitnessEnabled`, is fine.\n\nAddressed nits from @jnewbery and @ryanofsky and squashed.  Old version is: https://github.com/sdaftuar/bitcoin/commits/11739.3",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-360544129,360544129,
sdaftuar,2018-01-25T23:35:38Z,Updated the last commit (which introduces a new test) with some fixes and cleanups suggested by @jnewbery.  Prior version of this PR is [11739.4](https://github.com/sdaftuar/bitcoin/commits/11739.4),https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-360636755,360636755,
sdaftuar,2018-01-26T14:47:27Z,"Pushed two more commits to fix a comment pointed out by @jnewbery, and fix a test bug that travis triggered.  Travis is passing now.  Squashed [11739.5](https://github.com/sdaftuar/bitcoin/commits/11739.5) -> 9080e76f3e5a2afb6352aa79763e6d4d976d7cce",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-360803704,360803704,
jnewbery,2018-01-26T16:16:29Z,"Tested ACK 9080e76f3e5a2afb6352aa79763e6d4d976d7cce.\n\nTest changes look good. It'd be nice to do some general tidy-up to the segwit functional tests (`p2p_segwit.py` and `feature_segwit.py`), but we should leave that for another PR after #11398 is merged.",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-360829574,360829574,
Sjors,2018-02-02T11:12:38Z,Should we also remove the relevant soft fork entries from `getblockchaininfo`?,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-362558722,362558722,
jnewbery,2018-02-02T14:38:28Z,"> Should we also remove the relevant soft fork entries from getblockchaininfo?\n\nBIP 16 already is not shown in `getblockchaininfo` (it was a flag day upgrade rather than IsSuperMajority deployment). This PR doesn't move the segwit softfork height, it just enforces the `SCRIPT_VERIFY_WITNESS` rules to genesis.",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-362603616,362603616,
sdaftuar,2018-04-13T13:31:25Z,"Updated comments to address nit from @instagibbs, and squashed (previous version is https://github.com/sdaftuar/bitcoin/commits/11739.6 for comparison).",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-381136047,381136047,
sdaftuar,2018-04-13T13:37:28Z,Updated again to improve code comment around historical p2sh activation.  (Compare: https://github.com/sdaftuar/bitcoin/commits/11739.7),https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-381137767,381137767,
sdaftuar,2018-04-13T14:36:01Z,Needed rebase.,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-381155424,381155424,
jnewbery,2018-04-13T15:47:47Z,"Tested ACK 8b56fc0b91eb4876004bdc92a7015b12b34a04ed\n\nTravis failure was unrelated p2p_compactblocks.py flakiness. I've restared the job.\n\nIt'd be great to get this (and then #12360) in before v0.17.",https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-381177940,381177940,
sdaftuar,2018-04-16T15:28:34Z,Tests are passing now.,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-381645760,381645760,
TheBlueMatt,2018-04-17T19:44:05Z,non-test-changes-re-utACK 8b56fc0b91eb4876004bdc92a7015b12b34a04ed (though I miss the s/IsWitnessEnabled/IsWitnessCommitmentEnabled/ scripted-diff change).,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-382117323,382117323,
MarcoFalke,2018-04-19T18:01:35Z,utACK 8b56fc0b91eb4876004bdc92a7015b12b34a04ed,https://github.com/bitcoin/bitcoin/pull/11739#issuecomment-382827653,382827653,
MarcoFalke,2017-11-21T11:31:09Z,"fixup nit: in commit 3a76e3c962516cdf7d577aa3dcbe0251b94e5355: You probably meant to use ```if (fStrictPayToScriptHash) { flags |= SCRIPT_VERIFY_P2SH; }```, as BIP16Height was removed and thus fails to compile.",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r152248328,152248328,src/validation.cpp
TheBlueMatt,2017-12-08T18:24:32Z,"Why not assert pindex->phashBlock? No properly-constructed CBlockIndex should have that unset, no?",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r155841721,155841721,src/validation.cpp
sdaftuar,2017-12-11T17:35:43Z,It's unset when invoked via TestBlockValidity() (eg for mining).,https://github.com/bitcoin/bitcoin/pull/11739#discussion_r156143962,156143962,src/validation.cpp
TheBlueMatt,2017-12-12T18:26:37Z,"Ah, that sounds like a bug in TBV, but that's for a separate PR, I suppose.",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r156453789,156453789,src/validation.cpp
ryanofsky,2018-01-10T22:17:46Z,"In commit ""Use P2SH consensus rules for all blocks""\n\nMaybe check BIP16Exception.IsNull() to be a little more strict. Could also remove unnecessary nesting and negatives:\n\n```c++\nif (consensusparams.BIP16Exception.IsNull() ||\n    pindex->phashBlock == nullptr ||\n    *pindex->phashBlock != consensusparams.BIP16Exception)\n```",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r160814301,160814301,src/validation.cpp
ryanofsky,2018-01-10T22:20:32Z,"In commit ""[qa] Remove some pre-activation segwit tests""\n\nShould actually remove",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r160814900,160814900,test/functional/p2p-segwit.py
ryanofsky,2018-01-10T22:20:39Z,"In commit ""[qa] Remove some pre-activation segwit tests""\n\nNote: TODO",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r160814922,160814922,test/functional/segwit.py
jtimon,2018-01-23T02:43:21Z,"Yes, please, I always found checks to pindex->phashBlock == nullptr ugly and expensive to maintain documented (perhaps we can repeat the ""pindex->phashBlock can be null if called by CreateNewBlock/TestBlockValidity"" comment from the beginning and unify it with the comment for fEnforceBIP30, to more easily delete them all later when they're not needed). There's the assert you want below, just needs",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r163130953,163130953,src/validation.cpp
jnewbery,2018-01-23T22:18:43Z,I don't understand this comment. What does 'before the fork' mean if segwit is active since genesis?,https://github.com/bitcoin/bitcoin/pull/11739#discussion_r163395305,163395305,test/functional/segwit.py
jnewbery,2018-01-23T22:26:28Z,"Could also change the name of the local variable here:\n\n`fWitnessEnabled` -> `witness_commitment_enabled`",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r163397109,163397109,src/net_processing.cpp
jnewbery,2018-01-23T22:26:45Z,nit: prefer the BIP constants in numeric order (ie BIP 16 above BIP 34). Same for params.h below.,https://github.com/bitcoin/bitcoin/pull/11739#discussion_r163397184,163397184,src/chainparams.cpp
jnewbery,2018-01-23T23:20:13Z,"comment says p2sh-p2wsh, but the second output below is just a p2sh as far as I can tell.",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r163408445,163408445,test/functional/p2p-segwit.py
jnewbery,2018-01-23T23:34:47Z,"strange. The P2SH output can't be spent either. If I change the `test_witness_block()` call to a `test_transaction_acceptance()` call below, I see the following log:\n\n`(mandatory-script-verify-flag-failed (Operation not valid with the current stack size) (code 16))`",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r163411447,163411447,test/functional/p2p-segwit.py
sdaftuar,2018-01-25T16:31:02Z,"Fixed -- I forgot to stick the p2sh redeem script in the scriptsig (and also inadvertently made this a p2sh, rather than p2sh-p2wsh).",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r163895526,163895526,test/functional/p2p-segwit.py
jnewbery,2018-01-25T17:34:44Z,"I wouldn't bother adding this comment, which you're just going to remove in a later commit. I think you can also remove the comment above.",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r163913951,163913951,test/functional/feature_segwit.py
Sjors,2018-02-01T19:17:10Z,Nit: if we want to reuse this pattern: `consensus.BIP16Exceptions = [...]`?,https://github.com/bitcoin/bitcoin/pull/11739#discussion_r165459111,165459111,src/chainparams.cpp
Sjors,2018-02-01T19:18:17Z,Put a TODO here to remove it when the next testnet comes?,https://github.com/bitcoin/bitcoin/pull/11739#discussion_r165459382,165459382,src/chainparams.cpp
instagibbs,2018-03-07T15:43:34Z,"imo it should just have a completely new set of chainparams, in other words leave as is",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r172884831,172884831,src/chainparams.cpp
instagibbs,2018-03-07T15:53:21Z,"mu-nit: this comment is for mainnet only, though both mainnet and testnet has an instance. Perhaps discuss the date in chainparams?",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r172888777,172888777,src/validation.cpp
instagibbs,2018-03-07T16:14:06Z,"""Enforce WITNESS rules whenever P2SH is in effect and witness deployment is not defined.""\n\n... or something",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r172896196,172896196,src/validation.cpp
sdaftuar,2018-04-13T13:20:06Z,"Actually, this comment applies to testnet3 as well!  See https://github.com/bitcoin/bitcoin/pull/1503.",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r181384823,181384823,src/validation.cpp
instagibbs,2018-04-13T13:25:46Z,"For the benefit of code readers, maybe say that as well :)",https://github.com/bitcoin/bitcoin/pull/11739#discussion_r181386749,181386749,src/validation.cpp
sdaftuar,2018-04-13T13:29:47Z,I've improved the comments in latest version.,https://github.com/bitcoin/bitcoin/pull/11739#discussion_r181387926,181387926,src/validation.cpp
