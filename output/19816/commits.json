[
  {
    "sha": "facb41bf1d1b7ee552c627f9829b4494b817ce28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWNiNDFiZjFkMWI3ZWU1NTJjNjI3Zjk4MjliNDQ5NGI4MTdjZTI4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-27T07:05:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-27T09:41:40Z"
      },
      "message": "test: Remove unused p2p_lock in VersionBitsWarningTest",
      "tree": {
        "sha": "5d221fb05df1657bd21264f127f04883832fd38c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d221fb05df1657bd21264f127f04883832fd38c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/facb41bf1d1b7ee552c627f9829b4494b817ce28",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiSSgwAgd2J13UIqD9joFbBUYkG2EzIMi6Cp+3WTHY8FMAyhRXXz/PO7vgkoo7A\ntIXDeQysgpD0Fb4FPGu3qaqx5MZIDQ9+Zn/e4VB4zgi1/h+AKx7ZKQXXDYSDmSrY\npSfYZIuqy3TBK2UMZoO4qbzECCFLufE/4Pfg/JiUJ0BhMGAVMtcVCAkSMQEi/Hk1\n+HjUo7Jf1QW28OsGVBGE4uWTS4uwBfZnq3oApj4b+MzLrxH5nN0Xlc+hJZEEdybz\nXrNSqwmJSlCurz1mJp1Z/KfnO03aMcB1k6BvfA/PdO6m7jU9ftPsq4vpe8XKma7K\nx/s8sMoHRqk1/PqZkK3KnaQoRPDEQACXKiRtxtXUBmsJW8ea5ck+jG7qccdM8Thf\n1Cw7WJHN7qLxdEKGc1r4p3GfbO+O9dSX3yc7Dyj8n0zVzWzOq0z5MeqjSFyJc0XY\niVuEpHubTsATO3CkWZUmio0t9clwa2WjRNySO6KvR5h+1U3gINz5QSM/TU8GHIlR\nYHvJPINz\n=9Vlp\n-----END PGP SIGNATURE-----",
        "payload": "tree 5d221fb05df1657bd21264f127f04883832fd38c\nparent 28f4e53e168fe09b3ed9b811f12e1f990a304264\nauthor MarcoFalke <falke.marco@gmail.com> 1598511914 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1598521300 +0200\n\ntest: Remove unused p2p_lock in VersionBitsWarningTest\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facb41bf1d1b7ee552c627f9829b4494b817ce28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/facb41bf1d1b7ee552c627f9829b4494b817ce28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facb41bf1d1b7ee552c627f9829b4494b817ce28/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28f4e53e168fe09b3ed9b811f12e1f990a304264",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28f4e53e168fe09b3ed9b811f12e1f990a304264",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28f4e53e168fe09b3ed9b811f12e1f990a304264"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e1016e1581df708e1321e09f12e50f2122ec21fd",
        "filename": "test/functional/feature_versionbits_warning.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facb41bf1d1b7ee552c627f9829b4494b817ce28/test/functional/feature_versionbits_warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facb41bf1d1b7ee552c627f9829b4494b817ce28/test/functional/feature_versionbits_warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_versionbits_warning.py?ref=facb41bf1d1b7ee552c627f9829b4494b817ce28",
        "patch": "@@ -12,7 +12,7 @@\n \n from test_framework.blocktools import create_block, create_coinbase\n from test_framework.messages import msg_block\n-from test_framework.p2p import p2p_lock, P2PInterface\n+from test_framework.p2p import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n \n VB_PERIOD = 144           # versionbits period length for regtest\n@@ -90,7 +90,7 @@ def run_test(self):\n \n         # Generating one block guarantees that we'll get out of IBD\n         node.generatetoaddress(1, node_deterministic_address)\n-        self.wait_until(lambda: not node.getblockchaininfo()['initialblockdownload'], timeout=10, lock=p2p_lock)\n+        self.wait_until(lambda: not node.getblockchaininfo()['initialblockdownload'])\n         # Generating one more block will be enough to generate an error.\n         node.generatetoaddress(1, node_deterministic_address)\n         # Check that get*info() shows the versionbits unknown rules warning"
      }
    ]
  },
  {
    "sha": "fad2794e93b4f5976e81793a4a63aa03a2c8c686",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQyNzk0ZTkzYjRmNTk3NmU4MTc5M2E0YTYzYWEwM2EyYzhjNjg2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-27T06:55:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-27T16:50:05Z"
      },
      "message": "test: Rename wait until helper to wait_until_helper",
      "tree": {
        "sha": "6b4794a6712d3288880a7cd7bffe181f449c6a06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b4794a6712d3288880a7cd7bffe181f449c6a06"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad2794e93b4f5976e81793a4a63aa03a2c8c686",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgFugv/aRzi6BM8U5Nnabo5J2ne2bGHPGya6VxTqokE0V0rUt5NUsT+eRVwDmoz\nHixGu2u/x1XrWfJGGZxdJJUVUcZX4L7AsxR7cRWGQWgnYU2D/7w35F1xPnUFJocL\n1HuVBzm7b+G8B/zHFSmxsttG9BRFvmx3R+s3BcHIQhfDNNO8PcazQ7VIRKJv7c15\nQlp0U+RnQYN5fX9Kt7OSUQL9dbla2pPTvsLZrCaerKyCK+4ThT4T67SJtnJwZQNG\nwP6Et1/OdauQcI2LEm1nWou0e/LH7Kn1PI/0a2DLtkVKs79eSnYA0msq9tHutu2S\noZXe1rorkHX98JLI4ZKqtujl0oCLN+zyznioYGIdIjaGYUTry1cknIjAh0BYGklX\nzK8F6fkUNC8dqtkkYa0hxGqf7OGAStM2FnMVE56VgplUxW9lE4PC27kNXze3YiBl\nRJ2IysN2IC2Hr/+lvDHrWU4TRHteKaSnioeJgIrreUH2mL6/AtgOM7ixWTncy30y\ncBxD0XNf\n=WpoF\n-----END PGP SIGNATURE-----",
        "payload": "tree 6b4794a6712d3288880a7cd7bffe181f449c6a06\nparent facb41bf1d1b7ee552c627f9829b4494b817ce28\nauthor MarcoFalke <falke.marco@gmail.com> 1598511320 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1598547005 +0200\n\ntest: Rename wait until helper to wait_until_helper\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad2794e93b4f5976e81793a4a63aa03a2c8c686",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad2794e93b4f5976e81793a4a63aa03a2c8c686",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad2794e93b4f5976e81793a4a63aa03a2c8c686/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "facb41bf1d1b7ee552c627f9829b4494b817ce28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facb41bf1d1b7ee552c627f9829b4494b817ce28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/facb41bf1d1b7ee552c627f9829b4494b817ce28"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 20,
      "deletions": 19
    },
    "files": [
      {
        "sha": "083deb64605fddd74b24a57e6079817e7d2188c3",
        "filename": "test/functional/example_test.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/example_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/example_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/example_test.py?ref=fad2794e93b4f5976e81793a4a63aa03a2c8c686",
        "patch": "@@ -207,10 +207,11 @@ def run_test(self):\n         self.log.info(\"Check that each block was received only once\")\n         # The network thread uses a global lock on data access to the P2PConnection objects when sending and receiving\n         # messages. The test thread should acquire the global lock before accessing any P2PConnection data to avoid locking\n-        # and synchronization issues. Note wait_until() acquires this global lock when testing the predicate.\n+        # and synchronization issues. Note p2p.wait_until() acquires this global lock internally when testing the predicate.\n         with p2p_lock:\n             for block in self.nodes[2].p2p.block_receive_map.values():\n                 assert_equal(block, 1)\n \n+\n if __name__ == '__main__':\n     ExampleTest().main()"
      },
      {
        "sha": "963a507f5370bfa4a3114d2ac8a428e6c9f28d34",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=fad2794e93b4f5976e81793a4a63aa03a2c8c686",
        "patch": "@@ -69,7 +69,7 @@\n     NODE_WITNESS,\n     sha256,\n )\n-from test_framework.util import wait_until\n+from test_framework.util import wait_until_helper\n \n logger = logging.getLogger(\"TestFramework.p2p\")\n \n@@ -293,7 +293,7 @@ def __init__(self):\n \n         # Track the most recent message of each type.\n         # To wait for a message to be received, pop that message from\n-        # this and use wait_until.\n+        # this and use self.wait_until.\n         self.last_message = {}\n \n         # A count of the number of ping messages we've sent to the node\n@@ -398,7 +398,7 @@ def test_function():\n                 assert self.is_connected\n             return test_function_in()\n \n-        wait_until(test_function, timeout=timeout, lock=p2p_lock, timeout_factor=self.timeout_factor)\n+        wait_until_helper(test_function, timeout=timeout, lock=p2p_lock, timeout_factor=self.timeout_factor)\n \n     def wait_for_disconnect(self, timeout=60):\n         test_function = lambda: not self.is_connected\n@@ -522,7 +522,7 @@ def run(self):\n     def close(self, timeout=10):\n         \"\"\"Close the connections and network event loop.\"\"\"\n         self.network_event_loop.call_soon_threadsafe(self.network_event_loop.stop)\n-        wait_until(lambda: not self.network_event_loop.is_running(), timeout=timeout)\n+        wait_until_helper(lambda: not self.network_event_loop.is_running(), timeout=timeout)\n         self.network_event_loop.close()\n         self.join(timeout)\n         # Safe to remove event loop."
      },
      {
        "sha": "a0f5528afbc365173ac33e5d1cca40f04ed68a36",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fad2794e93b4f5976e81793a4a63aa03a2c8c686",
        "patch": "@@ -31,7 +31,7 @@\n     disconnect_nodes,\n     get_datadir_path,\n     initialize_datadir,\n-    wait_until,\n+    wait_until_helper,\n )\n \n \n@@ -604,7 +604,7 @@ def sync_all(self, nodes=None):\n         self.sync_mempools(nodes)\n \n     def wait_until(self, test_function, timeout=60, lock=None):\n-        return wait_until(test_function, timeout=timeout, lock=lock, timeout_factor=self.options.timeout_factor)\n+        return wait_until_helper(test_function, timeout=timeout, lock=lock, timeout_factor=self.options.timeout_factor)\n \n     # Private helper methods. These should not be accessed by the subclass test scripts.\n "
      },
      {
        "sha": "d03498682143f478dc2d238ea3413445ceea9f5e",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fad2794e93b4f5976e81793a4a63aa03a2c8c686",
        "patch": "@@ -31,7 +31,7 @@\n     get_auth_cookie,\n     get_rpc_proxy,\n     rpc_url,\n-    wait_until,\n+    wait_until_helper,\n     p2p_port,\n     EncodeDecimal,\n )\n@@ -231,7 +231,7 @@ def wait_for_rpc_connection(self):\n                 if self.version_is_at_least(190000):\n                     # getmempoolinfo.loaded is available since commit\n                     # bb8ae2c (version 0.19.0)\n-                    wait_until(lambda: rpc.getmempoolinfo()['loaded'])\n+                    wait_until_helper(lambda: rpc.getmempoolinfo()['loaded'], timeout_factor=self.timeout_factor)\n                     # Wait for the node to finish reindex, block import, and\n                     # loading the mempool. Usually importing happens fast or\n                     # even \"immediate\" when the node is started. However, there\n@@ -359,7 +359,7 @@ def is_node_stopped(self):\n         return True\n \n     def wait_until_stopped(self, timeout=BITCOIND_PROC_WAIT_TIMEOUT):\n-        wait_until(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\n+        wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\n \n     @contextlib.contextmanager\n     def assert_debug_log(self, expected_msgs, unexpected_msgs=None, timeout=2):\n@@ -560,7 +560,7 @@ def disconnect_p2ps(self):\n         for p in self.p2ps:\n             p.peer_disconnect()\n         del self.p2ps[:]\n-        wait_until(lambda: self.num_test_p2p_connections() == 0)\n+        wait_until_helper(lambda: self.num_test_p2p_connections() == 0, timeout_factor=self.timeout_factor)\n \n \n class TestNodeCLIAttr:"
      },
      {
        "sha": "6c8024c01cbba6af65df5a699b97a830c42f7967",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad2794e93b4f5976e81793a4a63aa03a2c8c686/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fad2794e93b4f5976e81793a4a63aa03a2c8c686",
        "patch": "@@ -225,14 +225,14 @@ def satoshi_round(amount):\n     return Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n \n \n-def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=None, timeout_factor=1.0):\n+def wait_until_helper(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=None, timeout_factor=1.0):\n     \"\"\"Sleep until the predicate resolves to be True.\n \n     Warning: Note that this method is not recommended to be used in tests as it is\n-    not aware of the context of the test framework. Using `wait_until()` counterpart\n-    from `BitcoinTestFramework` or `P2PInterface` class ensures an understandable\n-    amount of timeout and a common shared timeout_factor. Furthermore, `wait_until()`\n-    from `P2PInterface` class in `mininode.py` has a preset lock.\n+    not aware of the context of the test framework. Using the `wait_until()` members\n+    from `BitcoinTestFramework` or `P2PInterface` class ensures the timeout is\n+    properly scaled. Furthermore, `wait_until()` from `P2PInterface` class in\n+    `p2p.py` has a preset lock.\n     \"\"\"\n     if attempts == float('inf') and timeout == float('inf'):\n         timeout = 60\n@@ -437,7 +437,7 @@ def get_peer_ids():\n                 raise\n \n     # wait to disconnect\n-    wait_until(lambda: not get_peer_ids(), timeout=5)\n+    wait_until_helper(lambda: not get_peer_ids(), timeout=5)\n \n \n def connect_nodes(from_connection, node_num):\n@@ -448,8 +448,8 @@ def connect_nodes(from_connection, node_num):\n     # See comments in net_processing:\n     # * Must have a version message before anything else\n     # * Must have a verack message before anything else\n-    wait_until(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n-    wait_until(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))\n+    wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n+    wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))\n \n \n # Transaction/Block functions"
      }
    ]
  },
  {
    "sha": "fa1cd9e1ddc6918c3d600d36eadea71eebb242b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFjZDllMWRkYzY5MThjM2Q2MDBkMzZlYWRlYTcxZWViYjI0MmI2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-27T09:52:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-27T16:50:08Z"
      },
      "message": "test: Remove unused lock arg from BitcoinTestFramework.wait_until",
      "tree": {
        "sha": "b2fb725e3ae1b2a531cd37c522b7f10a106a6b7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2fb725e3ae1b2a531cd37c522b7f10a106a6b7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1cd9e1ddc6918c3d600d36eadea71eebb242b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi5hQv+KjdDwm55RBD/yr6Kfwdo41ExuInzVYy4aIFohFMFvDAJ+7aMzhgX30B3\ndVJpiZ3JMYxRHbOZMW/G0TOjRyQXA9uguBUctWtw85WxjnEhTReCEBIhtozZ1Hu6\nRkHV4AmRyyVB+njFtLMYrb0JWiCMgTzF5lQ/VeNs3qAc/bCZeJEViFme7zU3nS++\nvJQML3atLvuCDWatFHFI50Ev4fyyqfbDAQ98Sy1YyYSSy2Ftle6LqOBK3dc7qEZZ\nstIG3m48JuJyEo6VPKBmAxm8lVmr0fcOtlKEFhxTay7b/OpPVVhD80Wc7QHNQJxD\nE8XSFgO41Asjj+qCjYoIwrM1rr4rBenEUs+FJJPjpH6x6wCKX5AaffeGKgOdQVFw\nzixmo1yBGHww/AEvlsxFsFNkhKhbZ9L41IoOu91lunXqrdhiClUN+eLeUEny/Df4\nvD++AS2l1vonNzEs6kDYlxp8E40dnrN/Uq857zSxehZkRVSl+hxjiJoZRexX7m7f\naxXz5mKT\n=h8fS\n-----END PGP SIGNATURE-----",
        "payload": "tree b2fb725e3ae1b2a531cd37c522b7f10a106a6b7b\nparent fad2794e93b4f5976e81793a4a63aa03a2c8c686\nauthor MarcoFalke <falke.marco@gmail.com> 1598521972 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1598547008 +0200\n\ntest: Remove unused lock arg from BitcoinTestFramework.wait_until\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1cd9e1ddc6918c3d600d36eadea71eebb242b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1cd9e1ddc6918c3d600d36eadea71eebb242b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1cd9e1ddc6918c3d600d36eadea71eebb242b6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad2794e93b4f5976e81793a4a63aa03a2c8c686",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad2794e93b4f5976e81793a4a63aa03a2c8c686",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad2794e93b4f5976e81793a4a63aa03a2c8c686"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4b32d60db0946a0b98afed6190ee0bbf9dfbe8b9",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1cd9e1ddc6918c3d600d36eadea71eebb242b6/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1cd9e1ddc6918c3d600d36eadea71eebb242b6/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=fa1cd9e1ddc6918c3d600d36eadea71eebb242b6",
        "patch": "@@ -17,7 +17,7 @@\n     msg_ping,\n     msg_version,\n )\n-from test_framework.p2p import p2p_lock, P2PInterface\n+from test_framework.p2p import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n@@ -113,9 +113,9 @@ def run_test(self):\n         # verack, since we never sent one\n         no_verack_idle_peer.wait_for_verack()\n \n-        self.wait_until(lambda: no_version_disconnect_peer.ever_connected, timeout=10, lock=p2p_lock)\n-        self.wait_until(lambda: no_version_idle_peer.ever_connected, timeout=10, lock=p2p_lock)\n-        self.wait_until(lambda: no_verack_idle_peer.version_received, timeout=10, lock=p2p_lock)\n+        no_version_disconnect_peer.wait_until(lambda: no_version_disconnect_peer.ever_connected, check_connected=False)\n+        no_version_idle_peer.wait_until(lambda: no_version_idle_peer.ever_connected)\n+        no_verack_idle_peer.wait_until(lambda: no_verack_idle_peer.version_received)\n \n         # Mine a block and make sure that it's not sent to the connected peers\n         self.nodes[0].generate(nblocks=1)"
      },
      {
        "sha": "f41f5129b8c5c6a6bf59933563924a72b4e0e543",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1cd9e1ddc6918c3d600d36eadea71eebb242b6/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1cd9e1ddc6918c3d600d36eadea71eebb242b6/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fa1cd9e1ddc6918c3d600d36eadea71eebb242b6",
        "patch": "@@ -603,8 +603,8 @@ def sync_all(self, nodes=None):\n         self.sync_blocks(nodes)\n         self.sync_mempools(nodes)\n \n-    def wait_until(self, test_function, timeout=60, lock=None):\n-        return wait_until_helper(test_function, timeout=timeout, lock=lock, timeout_factor=self.options.timeout_factor)\n+    def wait_until(self, test_function, timeout=60):\n+        return wait_until_helper(test_function, timeout=timeout, timeout_factor=self.options.timeout_factor)\n \n     # Private helper methods. These should not be accessed by the subclass test scripts.\n "
      }
    ]
  }
]