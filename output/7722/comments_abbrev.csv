laanwj,2016-03-20T19:55:33Z,"If you do this, please also add the appropriate `__future__` imports on top of all files for full py2-3 compatiblity (see #7723):\n\n``` pytthon\nfrom __future__ import division,print_function,unicode_literals\n```\n\nIf you don't, e.g. `print(""a"",""b"")` will suddenly print a tuple on Python 2.x.\n",https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-199005628,199005628,
MarcoFalke,2016-03-21T09:09:19Z,"I think there seems to be some misunderstanding about this pulls scope: I am not adding support for python3 here. This is just refactoring within python2.\n\nThere needs to be another pull which does either of the following:\n- full py2/3 compatibility, which I am not going to do and also advise others not to try. The maintanace burden is just too high and I think having the requirement of full py",https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-199184448,199184448,
laanwj,2016-03-21T10:41:15Z,"Yes, but for example, if you replace print a,b with print(a,b) you _have_ to put `from __future__ import print_function` at the top.\nOtherwise this changes the behavior for Python2, which is unacceptable (for now at least).\n",https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-199220683,199220683,
MarcoFalke,2016-03-21T11:05:22Z,"I don't like the imports considering that they are about to get removed when we switch to py3. Also, I don't see an issue with printing a tuple in the two cases I left. Nonetheless, I changed it to print a string in the most recent commit...\n",https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-199226965,199226965,
laanwj,2016-03-21T11:07:07Z,"> Also, I don't see an issue with printing a tuple in the two cases I left\n\nI just think it's ugly to print a tuple when it's not meant to.\n\nUsing python3 print syntax _without_ the appropriate future import is wrong - you don't get the actual functionality, while the developer is deceived into thinking it is - e.g. it also doesn't allow using end='' and file='' for example.\n",https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-199227314,199227314,
MarcoFalke,2016-03-21T11:07:07Z,Extended test pass dddd401\n,https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-199227316,199227316,
laanwj,2016-03-21T11:08:44Z,"> I don't like the imports considering that they are about to get removed when we switch to py3\n\nFine, let's just put off merging this then until we're switching to py3 and dropping py2 support. I'm cannot guarantee that this is going to be soon, though, we haven't had any kind of discussion about doing so.\n",https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-199227713,199227713,
laanwj,2016-03-23T09:56:32Z,utACK fa8e2cd\n,https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-200274523,200274523,
MarcoFalke,2016-03-31T16:51:13Z,"Removed the last commit, rebased, fixed some more bugs: See 7778\n",https://github.com/bitcoin/bitcoin/pull/7722#issuecomment-204018441,204018441,
jonasschnelli,2016-03-21T12:48:26Z,Would speak something against using `!/usr/bin/env python` here\n,https://github.com/bitcoin/bitcoin/pull/7722#discussion_r56816063,56816063,qa/rpc-tests/abandonconflict.py
laanwj,2016-03-21T12:52:59Z,"Let's not change these - I don't think there's a interpreter name that works on all distros and is still general, unfortunately. E.g., Ubuntu 16.04 would require an explicit `python2.7` right now(see #7717).\n\nWhen the QA tests are ported to Python3 we can just make them all `python3`. That's explicitly not the goal of this pull though.\n",https://github.com/bitcoin/bitcoin/pull/7722#discussion_r56816629,56816629,qa/rpc-tests/abandonconflict.py
