[
  {
    "sha": "e5c4dfdfc02b91027ba58816546d28499b0581cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWM0ZGZkZmMwMmI5MTAyN2JhNTg4MTY1NDZkMjg0OTliMDU4MWNj",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-06-25T19:06:43Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-07-07T16:54:47Z"
      },
      "message": "Make the rand tests determinstic. (fixes #2714)\n\nThis avoids spurious errors with the old tests but still tests\n enough that if the rng is replaced with a totally broken one\n it should still fail.",
      "tree": {
        "sha": "3c3526139f6caaeb9ea7e6a3a1893c97699974e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c3526139f6caaeb9ea7e6a3a1893c97699974e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5c4dfdfc02b91027ba58816546d28499b0581cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5c4dfdfc02b91027ba58816546d28499b0581cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5c4dfdfc02b91027ba58816546d28499b0581cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5c4dfdfc02b91027ba58816546d28499b0581cc/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "481d89979457d69da07edd99fba451fd42a47f5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/481d89979457d69da07edd99fba451fd42a47f5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/481d89979457d69da07edd99fba451fd42a47f5c"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 1,
      "deletions": 33
    },
    "files": [
      {
        "sha": "fd936517fd065af5db1cc1eb2fed870f934b7dab",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 33,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5c4dfdfc02b91027ba58816546d28499b0581cc/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5c4dfdfc02b91027ba58816546d28499b0581cc/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=e5c4dfdfc02b91027ba58816546d28499b0581cc",
        "patch": "@@ -263,28 +263,10 @@ BOOST_AUTO_TEST_CASE(util_IsHex)\n \n BOOST_AUTO_TEST_CASE(util_seed_insecure_rand)\n {\n-    // Expected results for the determinstic seed.\n-    const uint32_t exp_vals[11] = {  91632771U,1889679809U,3842137544U,3256031132U,\n-                                   1761911779U, 489223532U,2692793790U,2737472863U,\n-                                   2796262275U,1309899767U,840571781U};\n-    // Expected 0s in rand()%(idx+2) for the determinstic seed.\n-    const int exp_count[9] = {5013,3346,2415,1972,1644,1386,1176,1096,1009};\n     int i;\n     int count=0;\n \n-    seed_insecure_rand();\n-\n-    //Does the non-determistic rand give us results that look too like the determinstic one?\n-    for (i=0;i<10;i++)\n-    {\n-        int match = 0;\n-        uint32_t rval = insecure_rand();\n-        for (int j=0;j<11;j++)match |= rval==exp_vals[j];\n-        count += match;\n-    }\n-    // sum(binomial(10,i)*(11/(2^32))^i*(1-(11/(2^32)))^(10-i),i,0,4) ~= 1-1/2^134.73\n-    // So _very_ unlikely to throw a false failure here.\n-    BOOST_CHECK(count<=4);\n+    seed_insecure_rand(true);\n \n     for (int mod=2;mod<11;mod++)\n     {\n@@ -307,20 +289,6 @@ BOOST_AUTO_TEST_CASE(util_seed_insecure_rand)\n         BOOST_CHECK(count<=10000/mod+err);\n         BOOST_CHECK(count>=10000/mod-err);\n     }\n-\n-    seed_insecure_rand(true);\n-\n-    for (i=0;i<11;i++)\n-    {\n-        BOOST_CHECK_EQUAL(insecure_rand(),exp_vals[i]);\n-    }\n-\n-    for (int mod=2;mod<11;mod++)\n-    {\n-        count = 0;\n-        for (i=0;i<10000;i++) count += insecure_rand()%mod==0;\n-        BOOST_CHECK_EQUAL(count,exp_count[mod-2]);\n-    }\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]