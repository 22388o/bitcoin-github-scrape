[
  {
    "sha": "a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWIyZDljODJlOTg1ZmE4ZGY0NDU3MDcyYjRmYTMwNzgxZjFkNTNh",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-06-04T10:06:18Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-08-04T13:46:18Z"
      },
      "message": "[Qt] tweak new peers tab in console window\n\n- remove starting height as table header and replace with ping time\n- remove columnResizingFixer\n- add local address (if available) in detailed node view (on top of the\n  right view below the remote address)\n- remove some .c_str() by using QString::fromStdString()\n- rename Address to Address/Hostname\n- rename secs to just s for ping time\n- use MODEL_UPDATE_DELAY from guiconstants.h for the peer refresh time\n- make PeerTableModel::columnCount() return no hard-coded value\n- remove and cleanup dup private: section in RPCConsole header\n- add new defaults for column sizes\n- remove behaviour which keeps disconnected peers selected and also remove\n  code which keeps track of last selected peer stats\n- add sync height to detail view\n- add some additional NULL pointer checks for clientModel in\n  rpcconsole.cpp",
      "tree": {
        "sha": "f8ede7b943a1769a989f146e1f72ce1d6c55e3ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8ede7b943a1769a989f146e1f72ce1d6c55e3ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d97a58f883c57da0507dde6dce9b8431f88e739c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d97a58f883c57da0507dde6dce9b8431f88e739c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d97a58f883c57da0507dde6dce9b8431f88e739c"
      }
    ],
    "stats": {
      "total": 629,
      "additions": 359,
      "deletions": 270
    },
    "files": [
      {
        "sha": "b9b90aa84635c7066d6e713aeb0578fb58f0e153",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 246,
        "deletions": 118,
        "changes": 364,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
        "patch": "@@ -428,7 +428,7 @@\n        </item>\n       </layout>\n      </widget>\n-     <widget class=\"QWidget\" name=\"tab\">\n+     <widget class=\"QWidget\" name=\"tab_nettraffic\">\n       <attribute name=\"title\">\n        <string>&amp;Network Traffic</string>\n       </attribute>\n@@ -683,6 +683,19 @@\n        <string>&amp;Peers</string>\n       </attribute>\n       <layout class=\"QGridLayout\" name=\"gridLayout_2\">\n+       <item row=\"0\" column=\"0\" rowspan=\"2\">\n+        <widget class=\"QTableView\" name=\"peerWidget\">\n+         <property name=\"horizontalScrollBarPolicy\">\n+          <enum>Qt::ScrollBarAlwaysOff</enum>\n+         </property>\n+         <property name=\"sortingEnabled\">\n+          <bool>true</bool>\n+         </property>\n+         <attribute name=\"horizontalHeaderHighlightSections\">\n+          <bool>false</bool>\n+         </attribute>\n+        </widget>\n+       </item>\n        <item row=\"0\" column=\"1\">\n         <widget class=\"QLabel\" name=\"peerHeading\">\n          <property name=\"sizePolicy\">\n@@ -691,262 +704,377 @@\n            <verstretch>0</verstretch>\n           </sizepolicy>\n          </property>\n-         <property name=\"text\">\n-          <string>Select a peer to view detailed information.</string>\n+         <property name=\"minimumSize\">\n+          <size>\n+           <width>300</width>\n+           <height>32</height>\n+          </size>\n          </property>\n-         <property name=\"margin\">\n-          <number>3</number>\n+         <property name=\"font\">\n+          <font>\n+           <pointsize>10</pointsize>\n+          </font>\n          </property>\n-        </widget>\n-       </item>\n-       <item row=\"0\" column=\"0\" rowspan=\"2\">\n-        <widget class=\"QTableView\" name=\"peerWidget\">\n-         <property name=\"sizePolicy\">\n-          <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n-           <horstretch>0</horstretch>\n-           <verstretch>0</verstretch>\n-          </sizepolicy>\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n          </property>\n-         <property name=\"horizontalScrollBarPolicy\">\n-          <enum>Qt::ScrollBarAlwaysOff</enum>\n+         <property name=\"text\">\n+          <string>Select a peer to view detailed information.</string>\n          </property>\n-         <property name=\"editTriggers\">\n-          <set>QAbstractItemView::AnyKeyPressed|QAbstractItemView::DoubleClicked|QAbstractItemView::EditKeyPressed</set>\n+         <property name=\"alignment\">\n+          <set>Qt::AlignHCenter|Qt::AlignTop</set>\n          </property>\n-         <property name=\"sortingEnabled\">\n+         <property name=\"wordWrap\">\n           <bool>true</bool>\n          </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n         </widget>\n        </item>\n        <item row=\"1\" column=\"1\">\n         <widget class=\"QWidget\" name=\"detailWidget\" native=\"true\">\n-         <property name=\"sizePolicy\">\n-          <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n-           <horstretch>0</horstretch>\n-           <verstretch>0</verstretch>\n-          </sizepolicy>\n+         <property name=\"minimumSize\">\n+          <size>\n+           <width>300</width>\n+           <height>0</height>\n+          </size>\n          </property>\n          <layout class=\"QGridLayout\" name=\"gridLayout_3\">\n-          <property name=\"leftMargin\">\n-           <number>3</number>\n-          </property>\n-          <item row=\"12\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_21\">\n+          <item row=\"0\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_23\">\n             <property name=\"text\">\n-             <string>Version:</string>\n+             <string>Direction</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"11\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerPingTime\">\n+          <item row=\"0\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerDirection\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"5\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_19\">\n+          <item row=\"1\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_21\">\n             <property name=\"text\">\n-             <string>Last Receive:</string>\n+             <string>Version</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"14\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_28\">\n+          <item row=\"1\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerVersion\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n-             <string>User Agent:</string>\n+             <string>N/A</string>\n+            </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"12\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerVersion\">\n+          <item row=\"2\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_28\">\n             <property name=\"text\">\n-             <string>N/A</string>\n+             <string>User Agent</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"8\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerConnTime\">\n-            <property name=\"minimumSize\">\n-             <size>\n-              <width>160</width>\n-              <height>0</height>\n-             </size>\n+          <item row=\"2\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerSubversion\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n             </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"11\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_26\">\n+          <item row=\"3\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_4\">\n             <property name=\"text\">\n-             <string>Ping Time:</string>\n+             <string>Services</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"5\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerLastRecv\">\n-            <property name=\"sizePolicy\">\n-             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Preferred\">\n-              <horstretch>0</horstretch>\n-              <verstretch>0</verstretch>\n-             </sizepolicy>\n+          <item row=\"3\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerServices\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n             </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n-           </widget>\n-          </item>\n-          <item row=\"8\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_22\">\n-            <property name=\"text\">\n-             <string>Connection Time:</string>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"6\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerBytesSent\">\n+          <item row=\"4\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_25\">\n             <property name=\"text\">\n-             <string>N/A</string>\n+             <string>Sync Node</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"14\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerSubversion\">\n+          <item row=\"4\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerSyncNode\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"15\" column=\"0\">\n+          <item row=\"5\" column=\"0\">\n            <widget class=\"QLabel\" name=\"label_29\">\n             <property name=\"text\">\n-             <string>Starting Height:</string>\n+             <string>Starting Height</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"7\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerBytesRecv\">\n+          <item row=\"5\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerHeight\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n           <item row=\"6\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_18\">\n+           <widget class=\"QLabel\" name=\"label_27\">\n             <property name=\"text\">\n-             <string>Bytes Sent:</string>\n+             <string>Sync Height</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"6\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerSyncHeight\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n             </property>\n            </widget>\n           </item>\n           <item row=\"7\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_20\">\n+           <widget class=\"QLabel\" name=\"label_24\">\n             <property name=\"text\">\n-             <string>Bytes Received:</string>\n+             <string>Ban Score</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"15\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerHeight\">\n+          <item row=\"7\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerBanScore\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"16\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_24\">\n+          <item row=\"8\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_22\">\n             <property name=\"text\">\n-             <string>Ban Score:</string>\n+             <string>Connection Time</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"16\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerBanScore\">\n+          <item row=\"8\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerConnTime\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"17\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_23\">\n+          <item row=\"9\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_15\">\n             <property name=\"text\">\n-             <string>Direction:</string>\n+             <string>Last Send</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"17\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerDirection\">\n+          <item row=\"9\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerLastSend\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"19\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_25\">\n+          <item row=\"10\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_19\">\n             <property name=\"text\">\n-             <string>Sync Node:</string>\n+             <string>Last Receive</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"19\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerSyncNode\">\n+          <item row=\"10\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerLastRecv\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"3\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_15\">\n+          <item row=\"11\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_18\">\n             <property name=\"text\">\n-             <string>Last Send:</string>\n+             <string>Bytes Sent</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"2\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_4\">\n+          <item row=\"11\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerBytesSent\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n-             <string>Services:</string>\n+             <string>N/A</string>\n+            </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"1\" column=\"0\">\n-           <widget class=\"QLabel\" name=\"label_27\">\n+          <item row=\"12\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_20\">\n             <property name=\"text\">\n-             <string>IP Address/port:</string>\n+             <string>Bytes Received</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"3\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerLastSend\">\n+          <item row=\"12\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerBytesRecv\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"2\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerServices\">\n+          <item row=\"13\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_26\">\n             <property name=\"text\">\n-             <string>N/A</string>\n+             <string>Ping Time</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"1\" column=\"1\">\n-           <widget class=\"QLabel\" name=\"peerAddr\">\n+          <item row=\"13\" column=\"2\">\n+           <widget class=\"QLabel\" name=\"peerPingTime\">\n+            <property name=\"cursor\">\n+             <cursorShape>IBeamCursor</cursorShape>\n+            </property>\n             <property name=\"text\">\n              <string>N/A</string>\n             </property>\n+            <property name=\"textFormat\">\n+             <enum>Qt::PlainText</enum>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n            </widget>\n           </item>\n-          <item row=\"20\" column=\"0\">\n-           <widget class=\"QWidget\" name=\"widget\" native=\"true\">\n-            <property name=\"sizePolicy\">\n-             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n-              <horstretch>0</horstretch>\n-              <verstretch>0</verstretch>\n-             </sizepolicy>\n+          <item row=\"14\" column=\"1\">\n+           <spacer name=\"verticalSpacer_3\">\n+            <property name=\"orientation\">\n+             <enum>Qt::Vertical</enum>\n             </property>\n-           </widget>\n+            <property name=\"sizeHint\" stdset=\"0\">\n+             <size>\n+              <width>20</width>\n+              <height>40</height>\n+             </size>\n+            </property>\n+           </spacer>\n           </item>\n          </layout>\n         </widget>"
      },
      {
        "sha": "6258c4160c7ff31a36e696bfc4332a554216d4b8",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
        "patch": "@@ -804,4 +804,9 @@ QString formatServicesStr(uint64_t mask)\n         return QObject::tr(\"None\");\n }\n \n+QString formatPingTime(double dPingTime)\n+{\n+    return dPingTime == 0 ? QObject::tr(\"N/A\") : QString(QObject::tr(\"%1 s\")).arg(QString::number(dPingTime, 'f', 3));\n+}\n+\n } // namespace GUIUtil"
      },
      {
        "sha": "dd31d051ee98ec330a2d3ad4e70a8c2dc2dfd4e3",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
        "patch": "@@ -178,6 +178,9 @@ namespace GUIUtil\n \n     /* Format CNodeStats.nServices bitmask into a user-readable string */\n     QString formatServicesStr(uint64_t mask);\n+\n+    /* Format a CNodeCombinedStats.dPingTime into a user-readable string or display N/A, if 0*/\n+    QString formatPingTime(double dPingTime);\n } // namespace GUIUtil\n \n #endif // GUIUTIL_H"
      },
      {
        "sha": "4c650bdec91e3a97054bdb0cacf68e6e7a98e039",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 34,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
        "patch": "@@ -5,6 +5,8 @@\n #include \"peertablemodel.h\"\n \n #include \"clientmodel.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n \n #include \"net.h\"\n #include \"sync.h\"\n@@ -15,8 +17,8 @@\n \n bool NodeLessThan::operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const\n {\n-    const CNodeStats *pLeft = &(left.nodestats);\n-    const CNodeStats *pRight = &(right.nodestats);\n+    const CNodeStats *pLeft = &(left.nodeStats);\n+    const CNodeStats *pRight = &(right.nodeStats);\n \n     if (order == Qt::DescendingOrder)\n         std::swap(pLeft, pRight);\n@@ -27,8 +29,8 @@ bool NodeLessThan::operator()(const CNodeCombinedStats &left, const CNodeCombine\n         return pLeft->addrName.compare(pRight->addrName) < 0;\n     case PeerTableModel::Subversion:\n         return pLeft->cleanSubVer.compare(pRight->cleanSubVer) < 0;\n-    case PeerTableModel::Height:\n-        return pLeft->nStartingHeight < pRight->nStartingHeight;\n+    case PeerTableModel::Ping:\n+        return pLeft->dPingTime < pRight->dPingTime;\n     }\n \n     return false;\n@@ -48,7 +50,8 @@ class PeerTablePriv\n     std::map<NodeId, int> mapNodeRows;\n \n     /** Pull a full list of peers from vNodes into our cache */\n-    void refreshPeers() {\n+    void refreshPeers()\n+    {\n         {\n             TRY_LOCK(cs_vNodes, lockNodes);\n             if (!lockNodes)\n@@ -63,23 +66,17 @@ class PeerTablePriv\n             BOOST_FOREACH(CNode* pnode, vNodes)\n             {\n                 CNodeCombinedStats stats;\n-                stats.statestats.nMisbehavior = -1;\n-                pnode->copyStats(stats.nodestats);\n+                stats.nodeStateStats.nMisbehavior = 0;\n+                stats.nodeStateStats.nSyncHeight = -1;\n+                stats.fNodeStateStatsAvailable = false;\n+                pnode->copyStats(stats.nodeStats);\n                 cachedNodeStats.append(stats);\n             }\n         }\n \n-        // if we can, retrieve the CNodeStateStats for each node.\n-        {\n-            TRY_LOCK(cs_main, lockMain);\n-            if (lockMain)\n-            {\n-                BOOST_FOREACH(CNodeCombinedStats &stats, cachedNodeStats)\n-                {\n-                    GetNodeStateStats(stats.nodestats.nodeid, stats.statestats);\n-                }\n-            }\n-        }\n+        // Try to retrieve the CNodeStateStats for each node.\n+        BOOST_FOREACH(CNodeCombinedStats &stats, cachedNodeStats)\n+            stats.fNodeStateStatsAvailable = GetNodeStateStats(stats.nodeStats.nodeid, stats.nodeStateStats);\n \n         if (sortColumn >= 0)\n             // sort cacheNodeStats (use stable sort to prevent rows jumping around unneceesarily)\n@@ -89,9 +86,7 @@ class PeerTablePriv\n         mapNodeRows.clear();\n         int row = 0;\n         BOOST_FOREACH(CNodeCombinedStats &stats, cachedNodeStats)\n-        {\n-            mapNodeRows.insert(std::pair<NodeId, int>(stats.nodestats.nodeid, row++));\n-        }\n+            mapNodeRows.insert(std::pair<NodeId, int>(stats.nodeStats.nodeid, row++));\n     }\n \n     int size()\n@@ -103,33 +98,33 @@ class PeerTablePriv\n     {\n         if(idx >= 0 && idx < cachedNodeStats.size()) {\n             return &cachedNodeStats[idx];\n-        }\n-        else\n-        {\n+        } else {\n             return 0;\n         }\n     }\n };\n \n PeerTableModel::PeerTableModel(ClientModel *parent) :\n-    QAbstractTableModel(parent),clientModel(parent),timer(0)\n+    QAbstractTableModel(parent),\n+    clientModel(parent),\n+    timer(0)\n {\n-    columns << tr(\"Address\") << tr(\"User Agent\") << tr(\"Start Height\");\n+    columns << tr(\"Address/Hostname\") << tr(\"User Agent\") << tr(\"Ping Time\");\n     priv = new PeerTablePriv();\n     // default to unsorted\n     priv->sortColumn = -1;\n \n     // set up timer for auto refresh\n     timer = new QTimer();\n     connect(timer, SIGNAL(timeout()), SLOT(refresh()));\n+    timer->setInterval(MODEL_UPDATE_DELAY);\n \n     // load initial data\n     refresh();\n }\n \n-void PeerTableModel::startAutoRefresh(int msecs)\n+void PeerTableModel::startAutoRefresh()\n {\n-    timer->setInterval(1000);\n     timer->start();\n }\n \n@@ -147,7 +142,7 @@ int PeerTableModel::rowCount(const QModelIndex &parent) const\n int PeerTableModel::columnCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);\n-    return 3;\n+    return columns.length();;\n }\n \n QVariant PeerTableModel::data(const QModelIndex &index, int role) const\n@@ -162,11 +157,11 @@ QVariant PeerTableModel::data(const QModelIndex &index, int role) const\n         switch(index.column())\n         {\n         case Address:\n-            return QVariant(rec->nodestats.addrName.c_str());\n+            return QString::fromStdString(rec->nodeStats.addrName);\n         case Subversion:\n-            return QVariant(rec->nodestats.cleanSubVer.c_str());\n-        case Height:\n-            return rec->nodestats.nStartingHeight;\n+            return QString::fromStdString(rec->nodeStats.cleanSubVer);\n+        case Ping:\n+            return GUIUtil::formatPingTime(rec->nodeStats.dPingTime);\n         }\n     }\n     return QVariant();\n@@ -208,7 +203,8 @@ QModelIndex PeerTableModel::index(int row, int column, const QModelIndex &parent\n     }\n }\n \n-const CNodeCombinedStats *PeerTableModel::getNodeStats(int idx) {\n+const CNodeCombinedStats *PeerTableModel::getNodeStats(int idx)\n+{\n     return priv->index(idx);\n }\n "
      },
      {
        "sha": "38f2662f893139f4b544f82709418009b0fcd370",
        "filename": "src/qt/peertablemodel.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/peertablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/peertablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.h?ref=a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
        "patch": "@@ -19,8 +19,9 @@ class QTimer;\n QT_END_NAMESPACE\n \n struct CNodeCombinedStats {\n-    CNodeStats nodestats;\n-    CNodeStateStats statestats;\n+    CNodeStats nodeStats;\n+    CNodeStateStats nodeStateStats;\n+    bool fNodeStateStatsAvailable;\n };\n \n class NodeLessThan\n@@ -47,13 +48,13 @@ class PeerTableModel : public QAbstractTableModel\n     explicit PeerTableModel(ClientModel *parent = 0);\n     const CNodeCombinedStats *getNodeStats(int idx);\n     int getRowByNodeId(NodeId nodeid);\n-    void startAutoRefresh(int msecs);\n+    void startAutoRefresh();\n     void stopAutoRefresh();\n \n     enum ColumnIndex {\n         Address = 0,\n         Subversion = 1,\n-        Height = 2\n+        Ping = 2\n     };\n \n     /** @name Methods overridden from QAbstractTableModel"
      },
      {
        "sha": "11089b24971bc8dc4a3305e1c3bba83c57cc67f2",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 96,
        "changes": 155,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
        "patch": "@@ -10,6 +10,7 @@\n #include \"peertablemodel.h\"\n \n #include \"main.h\"\n+#include \"chainparams.h\"\n #include \"rpcserver.h\"\n #include \"rpcclient.h\"\n #include \"util.h\"\n@@ -200,12 +201,9 @@ RPCConsole::RPCConsole(QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::RPCConsole),\n     clientModel(0),\n-    historyPtr(0)\n+    historyPtr(0),\n+    cachedNodeid(-1)\n {\n-    detailNodeStats = CNodeCombinedStats();\n-    detailNodeStats.nodestats.nodeid = -1;\n-    detailNodeStats.statestats.nMisbehavior = -1;\n-\n     ui->setupUi(this);\n     GUIUtil::restoreWindowGeometry(\"nRPCConsoleWindow\", this->size(), this);\n \n@@ -233,6 +231,7 @@ RPCConsole::RPCConsole(QWidget *parent) :\n     setTrafficGraphRange(INITIAL_TRAFFIC_GRAPH_MINS);\n \n     ui->detailWidget->hide();\n+    ui->peerHeading->setText(tr(\"Select a peer to view detailed information.\"));\n \n     clear();\n }\n@@ -303,11 +302,11 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->peerWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n         ui->peerWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n         ui->peerWidget->setColumnWidth(PeerTableModel::Address, ADDRESS_COLUMN_WIDTH);\n-        columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(ui->peerWidget, MINIMUM_COLUMN_WIDTH, MINIMUM_COLUMN_WIDTH);\n+        ui->peerWidget->setColumnWidth(PeerTableModel::Subversion, SUBVERSION_COLUMN_WIDTH);\n+        ui->peerWidget->setColumnWidth(PeerTableModel::Ping, PING_COLUMN_WIDTH);\n \n-        // connect the peerWidget's selection model to our peerSelected() handler\n-        QItemSelectionModel *peerSelectModel = ui->peerWidget->selectionModel();\n-        connect(peerSelectModel, SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n+        // connect the peerWidget selection model to our peerSelected() handler\n+        connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n              this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n         connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));\n \n@@ -473,10 +472,6 @@ void RPCConsole::on_tabWidget_currentChanged(int index)\n     {\n         ui->lineEdit->setFocus();\n     }\n-    else if(ui->tabWidget->widget(index) == ui->tab_peers)\n-    {\n-        initPeerTable();\n-    }\n }\n \n void RPCConsole::on_openDebugLogfileButton_clicked()\n@@ -525,30 +520,24 @@ void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelecti\n {\n     Q_UNUSED(deselected);\n \n-    if (selected.indexes().isEmpty())\n+    if (!clientModel || selected.indexes().isEmpty())\n         return;\n \n-    // mark the cached banscore as unknown\n-    detailNodeStats.statestats.nMisbehavior = -1;\n-\n     const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n-\n     if (stats)\n-    {\n-        detailNodeStats.nodestats.nodeid = stats->nodestats.nodeid;\n         updateNodeDetail(stats);\n-        ui->detailWidget->show();\n-        ui->detailWidget->setDisabled(false);\n-    }\n }\n \n void RPCConsole::peerLayoutChanged()\n {\n+    if (!clientModel)\n+        return;\n+\n     const CNodeCombinedStats *stats = NULL;\n-    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+    bool fUnselect = false;\n+    bool fReselect = false;\n \n-    if (detailNodeStats.nodestats.nodeid == -1)\n-        // no node selected yet\n+    if (cachedNodeid == -1) // no node selected yet\n         return;\n \n     // find the currently selected row\n@@ -561,14 +550,15 @@ void RPCConsole::peerLayoutChanged()\n \n     // check if our detail node has a row in the table (it may not necessarily\n     // be at selectedRow since its position can change after a layout change)\n-    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodestats.nodeid);\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(cachedNodeid);\n \n     if (detailNodeRow < 0)\n     {\n         // detail node dissapeared from table (node disconnected)\n         fUnselect = true;\n-        fDisconnected = true;\n-        detailNodeStats.nodestats.nodeid = 0;\n+        cachedNodeid = -1;\n+        ui->detailWidget->hide();\n+        ui->peerHeading->setText(tr(\"Select a peer to view detailed information.\"));\n     }\n     else\n     {\n@@ -596,91 +586,64 @@ void RPCConsole::peerLayoutChanged()\n \n     if (stats)\n         updateNodeDetail(stats);\n-\n-    if (fDisconnected)\n-    {\n-        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n-        ui->detailWidget->setDisabled(true);\n-        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nodestats.nLastSend);\n-        if (detailNodeStats.nodestats.nLastSend)\n-            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n-        dt.setTime_t(detailNodeStats.nodestats.nLastRecv);\n-        if (detailNodeStats.nodestats.nLastRecv)\n-            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n-        dt.setTime_t(detailNodeStats.nodestats.nTimeConnected);\n-        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n-    }\n }\n \n-void RPCConsole::updateNodeDetail(const CNodeCombinedStats *combinedStats)\n+void RPCConsole::updateNodeDetail(const CNodeCombinedStats *stats)\n {\n-    CNodeStats stats = combinedStats->nodestats;\n-\n-    // keep a copy of timestamps, used to display dates upon disconnect\n-    detailNodeStats.nodestats.nLastSend = stats.nLastSend;\n-    detailNodeStats.nodestats.nLastRecv = stats.nLastRecv;\n-    detailNodeStats.nodestats.nTimeConnected = stats.nTimeConnected;\n+    // Update cached nodeid\n+    cachedNodeid = stats->nodeStats.nodeid;\n \n     // update the detail ui with latest node information\n-    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n-    ui->peerAddr->setText(QString(stats.addrName.c_str()));\n-    ui->peerServices->setText(GUIUtil::formatServicesStr(stats.nServices));\n-    ui->peerLastSend->setText(stats.nLastSend ? GUIUtil::formatDurationStr(GetTime() - stats.nLastSend) : tr(\"never\"));\n-    ui->peerLastRecv->setText(stats.nLastRecv ? GUIUtil::formatDurationStr(GetTime() - stats.nLastRecv) : tr(\"never\"));\n-    ui->peerBytesSent->setText(FormatBytes(stats.nSendBytes));\n-    ui->peerBytesRecv->setText(FormatBytes(stats.nRecvBytes));\n-    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats.nTimeConnected));\n-    ui->peerPingTime->setText(stats.dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats.dPingTime, 'f', 3)));\n-    ui->peerVersion->setText(QString(\"%1\").arg(stats.nVersion));\n-    ui->peerSubversion->setText(QString(stats.cleanSubVer.c_str()));\n-    ui->peerDirection->setText(stats.fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n-    ui->peerHeight->setText(QString(\"%1\").arg(stats.nStartingHeight));\n-    ui->peerSyncNode->setText(stats.fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n-\n-    // if we can, display the peer's ban score\n-    CNodeStateStats statestats = combinedStats->statestats;\n-    if (statestats.nMisbehavior >= 0)\n-    {\n-        // we have a new nMisbehavor value - update the cache\n-        detailNodeStats.statestats.nMisbehavior = statestats.nMisbehavior;\n-    }\n-\n-    // pull the ban score from cache.  -1 means it hasn't been retrieved yet (lock busy).\n-    if (detailNodeStats.statestats.nMisbehavior >= 0)\n-        ui->peerBanScore->setText(QString(\"%1\").arg(detailNodeStats.statestats.nMisbehavior));\n-    else\n+    QString peerAddrDetails(QString::fromStdString(stats->nodeStats.addrName));\n+    if (!stats->nodeStats.addrLocal.empty())\n+        peerAddrDetails += \"<br />\" + tr(\"via %1\").arg(QString::fromStdString(stats->nodeStats.addrLocal));\n+    ui->peerHeading->setText(peerAddrDetails);\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats->nodeStats.nServices));\n+    ui->peerLastSend->setText(stats->nodeStats.nLastSend ? GUIUtil::formatDurationStr(GetTime() - stats->nodeStats.nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats->nodeStats.nLastRecv ? GUIUtil::formatDurationStr(GetTime() - stats->nodeStats.nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats->nodeStats.nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats->nodeStats.nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats->nodeStats.nTimeConnected));\n+    ui->peerPingTime->setText(GUIUtil::formatPingTime(stats->nodeStats.dPingTime));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats->nodeStats.nVersion));\n+    ui->peerSubversion->setText(QString::fromStdString(stats->nodeStats.cleanSubVer));\n+    ui->peerDirection->setText(stats->nodeStats.fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats->nodeStats.nStartingHeight));\n+    ui->peerSyncNode->setText(stats->nodeStats.fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // This check fails for example if the lock was busy and\n+    // nodeStateStats couldn't be fetched.\n+    if (stats->fNodeStateStatsAvailable) {\n+        // Ban score is init to 0\n+        ui->peerBanScore->setText(QString(\"%1\").arg(stats->nodeStateStats.nMisbehavior));\n+\n+        // Sync height is init to -1\n+        if (stats->nodeStateStats.nSyncHeight > -1)\n+            ui->peerSyncHeight->setText(QString(\"%1\").arg(stats->nodeStateStats.nSyncHeight));\n+        else\n+            ui->peerSyncHeight->setText(tr(\"Unknown\"));\n+    } else {\n         ui->peerBanScore->setText(tr(\"Fetching...\"));\n-}\n-\n-void RPCConsole::initPeerTable()\n-{\n-    if (!clientModel)\n-        return;\n-\n-    // peerWidget needs a resize in case the dialog has non-default geometry\n-    columnResizingFixer->stretchColumnWidth(PeerTableModel::Address);\n+        ui->peerSyncHeight->setText(tr(\"Fetching...\"));\n+    }\n \n-    // start PeerTableModel auto refresh\n-    clientModel->getPeerTableModel()->startAutoRefresh(1000);\n+    ui->detailWidget->show();\n }\n \n-// We override the virtual resizeEvent of the QWidget to adjust tables column\n-// sizes as the tables width is proportional to the dialogs width.\n void RPCConsole::resizeEvent(QResizeEvent *event)\n {\n     QWidget::resizeEvent(event);\n-\n-    if (!clientModel)\n-        return;\n-\n-    columnResizingFixer->stretchColumnWidth(PeerTableModel::Address);\n }\n \n void RPCConsole::showEvent(QShowEvent *event)\n {\n     QWidget::showEvent(event);\n \n-    initPeerTable();\n+    if (!clientModel)\n+        return;\n+\n+    // start PeerTableModel auto refresh\n+    clientModel->getPeerTableModel()->startAutoRefresh();\n }\n \n void RPCConsole::hideEvent(QHideEvent *event)"
      },
      {
        "sha": "64bb5c29b323cbaafdce3ee8fa7ec9ab0c224202",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 11,
        "deletions": 18,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5b2d9c82e985fa8df4457072b4fa30781f1d53a/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=a5b2d9c82e985fa8df4457072b4fa30781f1d53a",
        "patch": "@@ -44,21 +44,6 @@ class RPCConsole: public QDialog\n protected:\n     virtual bool eventFilter(QObject* obj, QEvent *event);\n \n-private:\n-    /** show detailed information on ui about selected node */\n-    void updateNodeDetail(const CNodeCombinedStats *combinedStats);\n-    /** initialize peer table */\n-    void initPeerTable();\n-\n-    enum ColumnWidths\n-    {\n-        ADDRESS_COLUMN_WIDTH = 250,\n-        MINIMUM_COLUMN_WIDTH = 120\n-    };\n-\n-    /** track the node that we are currently viewing detail on in the peers tab */\n-    CNodeCombinedStats detailNodeStats;\n-\n private slots:\n     void on_lineEdit_returnPressed();\n     void on_tabWidget_currentChanged(int index);\n@@ -96,15 +81,23 @@ public slots:\n \n private:\n     static QString FormatBytes(quint64 bytes);\n+    void startExecutor();\n     void setTrafficGraphRange(int mins);\n+    /** show detailed information on ui about selected node */\n+    void updateNodeDetail(const CNodeCombinedStats *stats);\n+\n+    enum ColumnWidths\n+    {\n+        ADDRESS_COLUMN_WIDTH = 200,\n+        SUBVERSION_COLUMN_WIDTH = 100,\n+        PING_COLUMN_WIDTH = 80\n+    };\n \n     Ui::RPCConsole *ui;\n     ClientModel *clientModel;\n     QStringList history;\n-    GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;\n     int historyPtr;\n-\n-    void startExecutor();\n+    NodeId cachedNodeid;\n };\n \n #endif // RPCCONSOLE_H"
      }
    ]
  }
]