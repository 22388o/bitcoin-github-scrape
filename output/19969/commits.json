[
  {
    "sha": "efc9b85e6f4aa431d308089874a18f0bbdcdd0fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZmM5Yjg1ZTZmNGFhNDMxZDMwODA4OTg3NGExOGYwYmJkY2RkMGZk",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-09-17T13:06:39Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-09-17T13:29:52Z"
      },
      "message": "Mark send RPC experimental",
      "tree": {
        "sha": "0f85ac4abe54a240bd9a82c4b8e9e923ea4fba10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f85ac4abe54a240bd9a82c4b8e9e923ea4fba10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl9jZNAACgkQV/+b28ww\nEAn/OBAAvLb3pgCJD9SK2XGELzlgOlnjkzqcNgjLrS0fbDUpV7I9Tt6hcjxQIV4T\nQeofq6V/YFWD6dPfeuuD1/FRKf15sCf4QDrzs3+b40zKxHgP8j543UMCBFgYFHF+\noU59wr7MkqZcoyni0N8+KlhHToapMUzy+bQZULLMiWCU3uXqabRKoQnaY/T2vTDv\nXoNPb9UNSXeutk5emD7jY7gEdBe2UfV7cg5ZbkLRW2uh1UBFDRkD957LMsV9tWcs\nkQYtiv9UEkIGEYQ5KtX+skBculWzlLbHAhYLRyjUs5Wz4/K+4FV8dI0ZLYoMib/K\nfC5BIl7H8bIe2x3MkMkdf5nH1uPwoMcV2o95XPAaoQUexhB1B9vGNGd95CVs1Z36\n6hhqKuX7rrgEEnYOPBpuFtD6enlvvgiiKz5BzyO5c6S2W8pdfz5pUJvZXyFmCDYj\nh8p2O94mGfWa0QjvRlZ/ebXd9TYz7vrscocTUE162AVOmuK79QKbr4pDb2QF0ws1\n0jxZCBCREDIpHp+L8z8tbLoVGUtlIOY2uHW5x8bU+1MzwURcLatFzvnpKAAwC5Il\nvMU3QWsd06xIWSZ19ybfXb9TGADplk2PqR+IOHaJThnxTEkF4gDYjbcqxvXiju7e\nT02nCeYM+B6B8WnXRa5K7WyhCt8KsmfDgNUDOIoIH2gemKfHarQ=\n=ccAT\n-----END PGP SIGNATURE-----",
        "payload": "tree 0f85ac4abe54a240bd9a82c4b8e9e923ea4fba10\nparent be3af4f31089726267ce2dbdd6c9c153bb5aeae1\nauthor Sjors Provoost <sjors@sprovoost.nl> 1600347999 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1600349392 +0200\n\nMark send RPC experimental\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be3af4f31089726267ce2dbdd6c9c153bb5aeae1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be3af4f31089726267ce2dbdd6c9c153bb5aeae1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be3af4f31089726267ce2dbdd6c9c153bb5aeae1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "958633e780a2dd3e62650b2336180a219e5d3231",
        "filename": "doc/release-notes-16378.md",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd/doc/release-notes-16378.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd/doc/release-notes-16378.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16378.md?ref=efc9b85e6f4aa431d308089874a18f0bbdcdd0fd",
        "patch": "@@ -1,5 +1,6 @@\n RPC\n ---\n - A new `send` RPC with similar syntax to `walletcreatefundedpsbt`, including\n-  support for coin selection and a custom fee rate. Using the new `send` method\n-  is encouraged: `sendmany` and `sendtoaddress` may be deprecated in a future release.\n+  support for coin selection and a custom fee rate. The `send` RPC is experimental\n+  and may change in subsequent releases. Using it is encouraged once it's no\n+  longer experimental: `sendmany` and `sendtoaddress` may be deprecated in a future release."
      },
      {
        "sha": "0191f8372b8ca01bfa32401007c89d6b92c6c34e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=efc9b85e6f4aa431d308089874a18f0bbdcdd0fd",
        "patch": "@@ -3874,6 +3874,7 @@ static UniValue listlabels(const JSONRPCRequest& request)\n static RPCHelpMan send()\n {\n     return RPCHelpMan{\"send\",\n+        \"\\nEXPERIMENTAL warning: this call may be changed in future releases.\\n\"\n         \"\\nSend a transaction.\\n\",\n         {\n             {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"a json array with outputs (key-value pairs), where none of the keys are duplicated.\\n\""
      }
    ]
  },
  {
    "sha": "0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZmMxYzY4NWUxY2E2OGNhOGVkMmIzNWY2MjNiYmU2YTlmYzM2ZDY2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-09-17T18:57:51Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-09-17T18:59:09Z"
      },
      "message": "[rpc] send: fix parsing replaceable option",
      "tree": {
        "sha": "dfefa94837e1574d504ba9f69032ead9969426be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfefa94837e1574d504ba9f69032ead9969426be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl9jsf8ACgkQV/+b28ww\nEAkHLA/+ML2EPRELYA8JPfQsZfEKkiBADNcTlgs957dM64evv81IyR9s7VUEY63v\nnc7Pqlzyd2yHCZP+PGxBLnwLYLivs1PH6U7DghQ5dzlQZn2Auy9U1F5dv+m2BE1Q\nZhRtgexp7oZ5Rp4M6Mma6OkqrHlT8Gu03dmpvLJJWYV4I3Z7g5zVLS3szMBZe9dQ\nL+75xN799bqsMs2nQFMFkJgXDcAY/zB+kQQYJ1OH+GEesRHBBLN0CqzoA3z/sNdN\n6tXtZL16HJYLyP1CkIyMAZsCtQ6EcJuTjmKhGznIQCxSYNn0WVqUG5wt1pP6WbMR\nlqVGgXH9wDBhRJbZHu7RLvaLaY+Q9oLQVw4KfSw+SAEsH5wXcwpBrzM+JVSAIZVS\naJoi10L3PZW1/9ZPcrHUYLPSM19S/jRS3S2WInRZROb47GVnqqzmCJ7GdzpVU5o/\n5Ib2LbDtjJz5TKqaWZvLNWBOKhSWVPnY3J/x336RcCCjuuMxxRooGimB435isipz\n8Vee4aswEcrCVvAkEeNW72oNbFu+BfiYHyNktCFXwiIAuB7Ls6mcwUc5DkdngkY5\nfao32p12tWlfUzRkn4sdf+6hfaWJGdl3iau5FqK22HazFyfFY1Qr1OxM05hLQkk/\nQweAVinOacPFeNmzV6qgREX4Ksi+i713xdaPbX/AhTfkaKdCmIY=\n=qnU6\n-----END PGP SIGNATURE-----",
        "payload": "tree dfefa94837e1574d504ba9f69032ead9969426be\nparent efc9b85e6f4aa431d308089874a18f0bbdcdd0fd\nauthor Sjors Provoost <sjors@sprovoost.nl> 1600369071 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1600369149 +0200\n\n[rpc] send: fix parsing replaceable option\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "efc9b85e6f4aa431d308089874a18f0bbdcdd0fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/efc9b85e6f4aa431d308089874a18f0bbdcdd0fd"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "15038267521bd1e25e1be49692e3c931a17112e2",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66",
        "patch": "@@ -3995,7 +3995,7 @@ static RPCHelpMan send()\n             int change_position;\n             bool rbf = pwallet->m_signal_rbf;\n             if (options.exists(\"replaceable\")) {\n-                rbf = options[\"add_to_wallet\"].get_bool();\n+                rbf = options[\"replaceable\"].get_bool();\n             }\n             CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n             CCoinControl coin_control;"
      },
      {
        "sha": "c5b02ff32a9b92d376995408aba02c84cdaec66e",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66",
        "patch": "@@ -328,8 +328,12 @@ def run_test(self):\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, inputs=[utxo1],add_to_wallet=False)\n \n         self.log.info(\"Replaceable...\")\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, add_to_wallet=False, replaceable=True)\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, add_to_wallet=False, replaceable=False)\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, add_to_wallet=True, replaceable=True)\n+        assert res[\"complete\"]\n+        assert_equal(self.nodes[0].gettransaction(res[\"txid\"])[\"bip125-replaceable\"], \"yes\")\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, add_to_wallet=True, replaceable=False)\n+        assert res[\"complete\"]\n+        assert_equal(self.nodes[0].gettransaction(res[\"txid\"])[\"bip125-replaceable\"], \"no\")\n \n         self.log.info(\"Subtract fee from output\")\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, subtract_fee_from_outputs=[0])"
      }
    ]
  },
  {
    "sha": "d813d26f06248aaa7be3c698c87939cc777fafd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODEzZDI2ZjA2MjQ4YWFhN2JlM2M2OThjODc5MzljYzc3N2ZhZmQw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-09-17T13:28:59Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-09-17T19:10:56Z"
      },
      "message": "[rpc] send: various touch-ups",
      "tree": {
        "sha": "0936e808870b67624d4661f52782224d7c2c6ce8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0936e808870b67624d4661f52782224d7c2c6ce8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d813d26f06248aaa7be3c698c87939cc777fafd0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl9jtMAACgkQV/+b28ww\nEAnJiQ/9HMpLMP/i4QkwN6fFHd9M320qnSA5cNtoNazTj8FEjmsSRwziSFmtGwav\nPFMVOM2/Z6GgNTgs/OXlYFiVxKNEZ28hUwS361czmGVfChk6efve6qs43/o/XYiI\nM9JP8O1cdOZR8cb1bcvbtWugUNsILnER06S1OBvLUjr7ExPCCEm2BtTtyTJwVKVG\nPxH6Y5yxfbN+whRipKR99IZCEZdcuycTMfsilviO6dh9nLqckwX1pEyM9ESe3hx+\nOvaWS9d4BJaHPvywwcJ1S6I8J93MfLIS8YfI4rZ40gIXENPhIdEa8gc28uM2wGGa\ntBFsXnVIxAnx9HQoUxfqmpbO3ji0t9X4G9OzC+scJnh2JZHTEEq6B4R1rhArqiit\nOCdD4v48EQconzwqcNUB/nm594EO7RU7YVvsCfo3TsPjjQnLN6mBgQr2DKZMd0/9\nNeSelfzoSSfxobBU0KaR4B0NfwholVGUc8ZxL7wmac/wwYMPq+O8W//5xvBYPVc4\nxu9MQvvFmItJ9qvyiNFii6gfwS9wtvCXnUS3Mtnv/diHOWV7bRZ4CAwDbmmxW3w8\nCeG4V+ni0bL02FADTZcKAEfL4NXmG3Rb/4b05vd/hyKZ/7AQZvPqDy1b2mmN/sFh\n8unDEU7npj1mb5RUY+7OcKsGVFVkrn5I2D1uYUCixz9KU6mVr2s=\n=MKlt\n-----END PGP SIGNATURE-----",
        "payload": "tree 0936e808870b67624d4661f52782224d7c2c6ce8\nparent 0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66\nauthor Sjors Provoost <sjors@sprovoost.nl> 1600349339 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1600369856 +0200\n\n[rpc] send: various touch-ups\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d813d26f06248aaa7be3c698c87939cc777fafd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d813d26f06248aaa7be3c698c87939cc777fafd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d813d26f06248aaa7be3c698c87939cc777fafd0/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0fc1c685e1ca68ca8ed2b35f623bbe6a9fc36d66"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 23,
      "deletions": 24
    },
    "files": [
      {
        "sha": "e185a1ac057b56bce432c1b304f7f75d8dc8be57",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 13,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d813d26f06248aaa7be3c698c87939cc777fafd0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d813d26f06248aaa7be3c698c87939cc777fafd0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d813d26f06248aaa7be3c698c87939cc777fafd0",
        "patch": "@@ -2968,7 +2968,7 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n                 {\"lockUnspents\", UniValueType(UniValue::VBOOL)},\n                 {\"lock_unspents\", UniValueType(UniValue::VBOOL)},\n                 {\"locktime\", UniValueType(UniValue::VNUM)},\n-                {\"feeRate\", UniValueType()}, // will be checked below,\n+                {\"feeRate\", UniValueType()}, // will be checked below\n                 {\"psbt\", UniValueType(UniValue::VBOOL)},\n                 {\"subtractFeeFromOutputs\", UniValueType(UniValue::VARR)},\n                 {\"subtract_fee_from_outputs\", UniValueType(UniValue::VARR)},\n@@ -3877,7 +3877,7 @@ static RPCHelpMan send()\n         \"\\nEXPERIMENTAL warning: this call may be changed in future releases.\\n\"\n         \"\\nSend a transaction.\\n\",\n         {\n-            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"a json array with outputs (key-value pairs), where none of the keys are duplicated.\\n\"\n+            {\"outputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"A JSON array with outputs (key-value pairs), where none of the keys are duplicated.\\n\"\n                     \"That is, each address can only appear once and there can only be one 'data' object.\\n\"\n                     \"For convenience, a dictionary, which holds the key-value pairs directly, is also accepted.\",\n                 {\n@@ -3909,7 +3909,7 @@ static RPCHelpMan send()\n                     {\"include_watching\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Also select inputs which are watch only.\\n\"\n                                           \"Only solvable inputs can be used. Watch-only destinations are solvable if the public key and/or output script was imported,\\n\"\n                                           \"e.g. with 'importpubkey' or 'importmulti' with the 'pubkeys' or 'desc' field.\"},\n-                    {\"inputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"Specify inputs instead of adding them automatically. A json array of json objects\",\n+                    {\"inputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"Specify inputs instead of adding them automatically. A JSON array of JSON objects\",\n                         {\n                             {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The transaction id\"},\n                             {\"vout\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The output number\"},\n@@ -3919,7 +3919,7 @@ static RPCHelpMan send()\n                     {\"locktime\", RPCArg::Type::NUM, /* default */ \"0\", \"Raw locktime. Non-0 value also locktime-activates inputs\"},\n                     {\"lock_unspents\", RPCArg::Type::BOOL, /* default */ \"false\", \"Lock selected unspent outputs\"},\n                     {\"psbt\", RPCArg::Type::BOOL,  /* default */ \"automatic\", \"Always return a PSBT, implies add_to_wallet=false.\"},\n-                    {\"subtract_fee_from_outputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"A json array of integers.\\n\"\n+                    {\"subtract_fee_from_outputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"A JSON array of integers.\\n\"\n                     \"The fee will be equally deducted from the amount of each specified output.\\n\"\n                     \"Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n                     \"If no outputs are specified here, the sender pays the fee.\",\n@@ -3943,8 +3943,8 @@ static RPCHelpMan send()\n         },\n         RPCExamples{\"\"\n         \"\\nSend with a fee rate of 1 satoshi per byte\\n\"\n-        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.1}' 1 sat/b\\n\" +\n-            \"\\nCreate a transaction that should confirm the next block, with a specific input, and return result without adding to wallet or broadcasting to the network\\n\")\n+        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.1}' 1 sat/b\\n\") +\n+            \"\\nCreate a transaction that should confirm the next block, with a specific input, and return result without adding to wallet or broadcasting to the network\\n\"\n         + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.1}' 1 economical '{\\\"add_to_wallet\\\": false, \\\"inputs\\\": [{\\\"txid\\\":\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\", \\\"vout\\\":1}]}'\")\n         },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n@@ -4012,7 +4012,7 @@ static RPCHelpMan send()\n             // Make a blank psbt\n             PartiallySignedTransaction psbtx(rawTx);\n \n-            // Fill transaction with out data and sign\n+            // Fill transaction with our data and sign\n             bool complete = true;\n             const TransactionError err = pwallet->FillPSBT(psbtx, complete, SIGHASH_ALL, true, false);\n             if (err != TransactionError::OK) {\n@@ -4024,13 +4024,11 @@ static RPCHelpMan send()\n \n             UniValue result(UniValue::VOBJ);\n \n-            // Serialize the PSBT\n-            CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n-            ssTx << psbtx;\n-            const std::string result_str = EncodeBase64(ssTx.str());\n-\n             if (psbt_opt_in || !complete || !add_to_wallet) {\n-                result.pushKV(\"psbt\", result_str);\n+                // Serialize the PSBT\n+                CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+                ssTx << psbtx;\n+                result.pushKV(\"psbt\", EncodeBase64(ssTx.str()));\n             }\n \n             if (complete) {"
      },
      {
        "sha": "4fdfad01c3cf48996a00afdd31789494f424269b",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d813d26f06248aaa7be3c698c87939cc777fafd0/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d813d26f06248aaa7be3c698c87939cc777fafd0/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=d813d26f06248aaa7be3c698c87939cc777fafd0",
        "patch": "@@ -29,9 +29,9 @@ def skip_test_if_missing_module(self):\n \n     def test_send(self, from_wallet, to_wallet=None, amount=None, data=None,\n                   arg_conf_target=None, arg_estimate_mode=None,\n-                  conf_target=None, estimate_mode=None, add_to_wallet=None,psbt=None,\n-                  inputs=None,add_inputs=None,change_address=None,change_position=None,change_type=None,\n-                  include_watching=None,locktime=None,lock_unspents=None,replaceable=None,subtract_fee_from_outputs=None,\n+                  conf_target=None, estimate_mode=None, add_to_wallet=None, psbt=None,\n+                  inputs=None, add_inputs=None, change_address=None, change_position=None, change_type=None,\n+                  include_watching=None, locktime=None, lock_unspents=None, replaceable=None, subtract_fee_from_outputs=None,\n                   expect_error=None):\n         assert (amount is None) != (data is None)\n \n@@ -92,13 +92,13 @@ def test_send(self, from_wallet, to_wallet=None, amount=None, data=None,\n             res = from_wallet.send(outputs=outputs, conf_target=arg_conf_target, estimate_mode=arg_estimate_mode, options=options)\n         else:\n             try:\n-                assert_raises_rpc_error(expect_error[0],expect_error[1],from_wallet.send,\n-                                        outputs=outputs,conf_target=arg_conf_target,estimate_mode=arg_estimate_mode,options=options)\n+                assert_raises_rpc_error(expect_error[0], expect_error[1], from_wallet.send,\n+                                        outputs=outputs, conf_target=arg_conf_target, estimate_mode=arg_estimate_mode, options=options)\n             except AssertionError:\n                 # Provide debug info if the test fails\n                 self.log.error(\"Unexpected successful result:\")\n                 self.log.error(options)\n-                res = from_wallet.send(outputs=outputs,conf_target=arg_conf_target,estimate_mode=arg_estimate_mode,options=options)\n+                res = from_wallet.send(outputs=outputs, conf_target=arg_conf_target, estimate_mode=arg_estimate_mode, options=options)\n                 self.log.error(res)\n                 if \"txid\" in res and add_to_wallet:\n                     self.log.error(\"Transaction details:\")\n@@ -131,7 +131,7 @@ def test_send(self, from_wallet, to_wallet=None, amount=None, data=None,\n             assert tx\n             assert_equal(tx[\"bip125-replaceable\"], \"yes\" if replaceable else \"no\")\n             # Ensure transaction exists in the mempool:\n-            tx = from_wallet.getrawtransaction(res[\"txid\"],True)\n+            tx = from_wallet.getrawtransaction(res[\"txid\"], True)\n             assert tx\n             if amount:\n                 if subtract_fee_from_outputs:\n@@ -164,7 +164,7 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name=\"w2\")\n         w2 = self.nodes[1].get_wallet_rpc(\"w2\")\n         # w3 is a watch-only wallet, based on w2\n-        self.nodes[1].createwallet(wallet_name=\"w3\",disable_private_keys=True)\n+        self.nodes[1].createwallet(wallet_name=\"w3\", disable_private_keys=True)\n         w3 = self.nodes[1].get_wallet_rpc(\"w3\")\n         for _ in range(3):\n             a2_receive = w2.getnewaddress()\n@@ -188,7 +188,7 @@ def run_test(self):\n         self.sync_blocks()\n \n         # w4 has private keys enabled, but only contains watch-only keys (from w2)\n-        self.nodes[1].createwallet(wallet_name=\"w4\",disable_private_keys=False)\n+        self.nodes[1].createwallet(wallet_name=\"w4\", disable_private_keys=False)\n         w4 = self.nodes[1].get_wallet_rpc(\"w4\")\n         for _ in range(3):\n             a2_receive = w2.getnewaddress()\n@@ -253,7 +253,7 @@ def run_test(self):\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=-1, estimate_mode=\"sat/b\",\n                        expect_error=(-3, \"Amount out of range\"))\n         # Fee rate of 0.1 satoshi per byte should throw an error\n-        # TODO: error should say 1.000 sat/b\n+        # TODO: error should use sat/b\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\",\n                        expect_error=(-4, \"Fee rate (0.00000100 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n \n@@ -325,7 +325,8 @@ def run_test(self):\n         locked_coins = w0.listlockunspent()\n         assert_equal(len(locked_coins), 1)\n         # Locked coins are automatically unlocked when manually selected\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, inputs=[utxo1],add_to_wallet=False)\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, inputs=[utxo1], add_to_wallet=False)\n+        assert res[\"complete\"]\n \n         self.log.info(\"Replaceable...\")\n         res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, add_to_wallet=True, replaceable=True)"
      }
    ]
  },
  {
    "sha": "f7b331ea85d45c7337e527b6e77a45da7a689b7d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2IzMzFlYTg1ZDQ1YzczMzdlNTI3YjZlNzdhNDVkYTdhNjg5Yjdk",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-09-17T13:29:32Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-09-17T19:10:56Z"
      },
      "message": "rpc: add brackets to ConstructTransaction",
      "tree": {
        "sha": "cfad35fa21b4ec7bcd46cc240716d8c0695c6932",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cfad35fa21b4ec7bcd46cc240716d8c0695c6932"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7b331ea85d45c7337e527b6e77a45da7a689b7d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl9jtMAACgkQV/+b28ww\nEAlZrw/+IpFsHS73Zjo8IS7RjtNZeXxH6lCQVBGMsPrGZ2sUgWYqu3IzUHbeurtg\nRAYxuL91yBpyXYXUYen212iU+2jA2ItbgkmPEbwjp5ZP9Uoh9N/7uf6FWzPdTHCa\nM2MOhvVNjoBJGUD0vENOqnRuFUS71lEe64vBWPJmel+ZK1fzMQ0ixNfUjF8SG/NU\nWaIQrIRpkcxOYknbU/dlPkaHiWib6tDtt52rJIMDONlLUrRxk5OthVjOvYmoB8a2\np4nPCbEZhdXmW0go8expIdfzQubIxyKjKiAXL4QckaW0clc48JZVws+D3VyXl6KM\nTvPFuMjFn3AlM62IYYww8YFuodUM+WPIAbZ4Y1UtyrrcJPFiVuka3yFy3gnMxu6k\nyD2DdZcWkhH9lBP/SxmKJSqSHb00IWk+0wTGqydBR0eP1ZLUiXWlUqexip/89ypD\n+Gdrr1G0rsrOqkBcCtTQYYQun2jk4RhnNOID4M75OqqRjO1O+gmw2YWfBs/UbDN+\n8NULvPg3iIVIEothgYjwt2AOliiGsZm/Cd/gg8o4Q4xuctQMIgQsz2aqhanRkl1H\nr2xIwneaD6tAlvquXpN198jybmu1KpZs+z0lnHqSf4V8SWr+NX13uqXr1R1k2e18\ndfS3V53AGeau2gbR2XdCwqkW5cs3NsnrPRMQhxJd1LApK7EsRYc=\n=W+bV\n-----END PGP SIGNATURE-----",
        "payload": "tree cfad35fa21b4ec7bcd46cc240716d8c0695c6932\nparent d813d26f06248aaa7be3c698c87939cc777fafd0\nauthor Sjors Provoost <sjors@sprovoost.nl> 1600349372 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1600369856 +0200\n\nrpc: add brackets to ConstructTransaction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7b331ea85d45c7337e527b6e77a45da7a689b7d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7b331ea85d45c7337e527b6e77a45da7a689b7d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7b331ea85d45c7337e527b6e77a45da7a689b7d/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d813d26f06248aaa7be3c698c87939cc777fafd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d813d26f06248aaa7be3c698c87939cc777fafd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d813d26f06248aaa7be3c698c87939cc777fafd0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8dfbead0e4334ce06195b21450ebc36102fef62b",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7b331ea85d45c7337e527b6e77a45da7a689b7d/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7b331ea85d45c7337e527b6e77a45da7a689b7d/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=f7b331ea85d45c7337e527b6e77a45da7a689b7d",
        "patch": "@@ -21,14 +21,16 @@\n \n CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, bool rbf)\n {\n-    if (outputs_in.isNull())\n+    if (outputs_in.isNull()) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, output argument must be non-null\");\n+    }\n \n     UniValue inputs;\n-    if (inputs_in.isNull())\n+    if (inputs_in.isNull()) {\n         inputs = UniValue::VARR;\n-    else\n+    } else {\n         inputs = inputs_in.get_array();\n+    }\n \n     const bool outputs_is_obj = outputs_in.isObject();\n     UniValue outputs = outputs_is_obj ? outputs_in.get_obj() : outputs_in.get_array();"
      }
    ]
  }
]