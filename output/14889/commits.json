[
  {
    "sha": "89a9a9d9385bbf291849874adc33a270b28fcac4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWE5YTlkOTM4NWJiZjI5MTg0OTg3NGFkYzMzYTI3MGIyOGZjYWM0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-10-06T10:33:24Z"
      },
      "committer": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2018-12-06T21:30:22Z"
      },
      "message": "Stop requiring imported pubkey to sign non-PKH schemes\n\nGithub-Pull: #14424\nRebased-From: 2f6b466aeb6d4c88ab2e0e8b2a402be0743608b5",
      "tree": {
        "sha": "5e13e8251c5348d02462524eb9f9120c9975d611",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e13e8251c5348d02462524eb9f9120c9975d611"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89a9a9d9385bbf291849874adc33a270b28fcac4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a9a9d9385bbf291849874adc33a270b28fcac4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89a9a9d9385bbf291849874adc33a270b28fcac4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a9a9d9385bbf291849874adc33a270b28fcac4/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6042dfe008e7ad2c3495d1e9c484c7f2e256f04c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6042dfe008e7ad2c3495d1e9c484c7f2e256f04c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6042dfe008e7ad2c3495d1e9c484c7f2e256f04c"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a95a8609b3cf8f51e48c81199a764a480dc34c73",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89a9a9d9385bbf291849874adc33a270b28fcac4/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89a9a9d9385bbf291849874adc33a270b28fcac4/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=89a9a9d9385bbf291849874adc33a270b28fcac4",
        "patch": "@@ -69,15 +69,15 @@ static bool GetPubKey(const SigningProvider& provider, SignatureData& sigdata, c\n     return false;\n }\n \n-static bool CreateSig(const BaseSignatureCreator& creator, SignatureData& sigdata, const SigningProvider& provider, std::vector<unsigned char>& sig_out, const CKeyID& keyid, const CScript& scriptcode, SigVersion sigversion)\n+static bool CreateSig(const BaseSignatureCreator& creator, SignatureData& sigdata, const SigningProvider& provider, std::vector<unsigned char>& sig_out, const CPubKey& pubkey, const CScript& scriptcode, SigVersion sigversion)\n {\n+    CKeyID keyid = pubkey.GetID();\n     const auto it = sigdata.signatures.find(keyid);\n     if (it != sigdata.signatures.end()) {\n         sig_out = it->second.second;\n         return true;\n     }\n-    CPubKey pubkey;\n-    GetPubKey(provider, sigdata, keyid, pubkey);\n+    sigdata.misc_pubkeys.emplace(keyid, pubkey);\n     if (creator.CreateSig(provider, sig_out, keyid, scriptcode, sigversion)) {\n         auto i = sigdata.signatures.emplace(keyid, SigPair(pubkey, sig_out));\n         assert(i.second);\n@@ -111,15 +111,15 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_WITNESS_UNKNOWN:\n         return false;\n     case TX_PUBKEY:\n-        if (!CreateSig(creator, sigdata, provider, sig, CPubKey(vSolutions[0]).GetID(), scriptPubKey, sigversion)) return false;\n+        if (!CreateSig(creator, sigdata, provider, sig, CPubKey(vSolutions[0]), scriptPubKey, sigversion)) return false;\n         ret.push_back(std::move(sig));\n         return true;\n     case TX_PUBKEYHASH: {\n         CKeyID keyID = CKeyID(uint160(vSolutions[0]));\n-        if (!CreateSig(creator, sigdata, provider, sig, keyID, scriptPubKey, sigversion)) return false;\n-        ret.push_back(std::move(sig));\n         CPubKey pubkey;\n         GetPubKey(provider, sigdata, keyID, pubkey);\n+        if (!CreateSig(creator, sigdata, provider, sig, pubkey, scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n         ret.push_back(ToByteVector(pubkey));\n         return true;\n     }\n@@ -135,7 +135,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n         ret.push_back(valtype()); // workaround CHECKMULTISIG bug\n         for (size_t i = 1; i < vSolutions.size() - 1; ++i) {\n             CPubKey pubkey = CPubKey(vSolutions[i]);\n-            if (ret.size() < required + 1 && CreateSig(creator, sigdata, provider, sig, pubkey.GetID(), scriptPubKey, sigversion)) {\n+            if (ret.size() < required + 1 && CreateSig(creator, sigdata, provider, sig, pubkey, scriptPubKey, sigversion)) {\n                 ret.push_back(std::move(sig));\n             }\n         }"
      }
    ]
  }
]