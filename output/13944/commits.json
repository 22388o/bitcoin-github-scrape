[
  {
    "sha": "5654efb187d24eb29a343c720e3937b01457c8b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjU0ZWZiMTg3ZDI0ZWIyOWEzNDNjNzIwZTM5MzdiMDE0NTdjOGI3",
    "commit": {
      "author": {
        "name": "Kvaciral",
        "email": "kvaciral@protonmail.com",
        "date": "2018-08-11T20:24:14Z"
      },
      "committer": {
        "name": "Kvaciral",
        "email": "kvaciral@protonmail.com",
        "date": "2018-08-11T22:23:53Z"
      },
      "message": "Ported usage of deprecated optparse module to argparse module",
      "tree": {
        "sha": "4e1961b56c06e9398093a0a1a092929861c2f3f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e1961b56c06e9398093a0a1a092929861c2f3f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5654efb187d24eb29a343c720e3937b01457c8b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5654efb187d24eb29a343c720e3937b01457c8b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5654efb187d24eb29a343c720e3937b01457c8b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5654efb187d24eb29a343c720e3937b01457c8b7/comments",
    "author": {
      "login": "Kvaciral",
      "id": 864811,
      "node_id": "MDQ6VXNlcjg2NDgxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/864811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kvaciral",
      "html_url": "https://github.com/Kvaciral",
      "followers_url": "https://api.github.com/users/Kvaciral/followers",
      "following_url": "https://api.github.com/users/Kvaciral/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kvaciral/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kvaciral/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kvaciral/subscriptions",
      "organizations_url": "https://api.github.com/users/Kvaciral/orgs",
      "repos_url": "https://api.github.com/users/Kvaciral/repos",
      "events_url": "https://api.github.com/users/Kvaciral/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kvaciral/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Kvaciral",
      "id": 864811,
      "node_id": "MDQ6VXNlcjg2NDgxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/864811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kvaciral",
      "html_url": "https://github.com/Kvaciral",
      "followers_url": "https://api.github.com/users/Kvaciral/followers",
      "following_url": "https://api.github.com/users/Kvaciral/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kvaciral/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kvaciral/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kvaciral/subscriptions",
      "organizations_url": "https://api.github.com/users/Kvaciral/orgs",
      "repos_url": "https://api.github.com/users/Kvaciral/repos",
      "events_url": "https://api.github.com/users/Kvaciral/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kvaciral/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1b04b55f2d22078ca79cd38fc1078e15fa9cbe94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b04b55f2d22078ca79cd38fc1078e15fa9cbe94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1b04b55f2d22078ca79cd38fc1078e15fa9cbe94"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 41,
      "deletions": 41
    },
    "files": [
      {
        "sha": "ef060f993aed2049ed7bd3a1d66461b030b82b0c",
        "filename": "test/functional/rpc_bind.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/rpc_bind.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/rpc_bind.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_bind.py?ref=5654efb187d24eb29a343c720e3937b01457c8b7",
        "patch": "@@ -20,9 +20,9 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, None)\n \n     def add_options(self, parser):\n-        parser.add_option(\"--ipv4\", action='store_true', dest=\"run_ipv4\", help=\"Run ipv4 tests only\", default=False)\n-        parser.add_option(\"--ipv6\", action='store_true', dest=\"run_ipv6\", help=\"Run ipv6 tests only\", default=False)\n-        parser.add_option(\"--nonloopback\", action='store_true', dest=\"run_nonloopback\", help=\"Run non-loopback tests only\", default=False)\n+        parser.add_argument(\"--ipv4\", action='store_true', dest=\"run_ipv4\", help=\"Run ipv4 tests only\", default=False)\n+        parser.add_argument(\"--ipv6\", action='store_true', dest=\"run_ipv6\", help=\"Run ipv6 tests only\", default=False)\n+        parser.add_argument(\"--nonloopback\", action='store_true', dest=\"run_nonloopback\", help=\"Run non-loopback tests only\", default=False)\n \n     def run_bind_test(self, allow_ips, connect_to, addresses, expected):\n         '''"
      },
      {
        "sha": "af9a544fd7536fb265a2549e1385ee0752e1f8cd",
        "filename": "test/functional/rpc_getblockstats.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/rpc_getblockstats.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/rpc_getblockstats.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getblockstats.py?ref=5654efb187d24eb29a343c720e3937b01457c8b7",
        "patch": "@@ -35,13 +35,13 @@ class GetblockstatsTest(BitcoinTestFramework):\n     ]\n \n     def add_options(self, parser):\n-        parser.add_option('--gen-test-data', dest='gen_test_data',\n-                          default=False, action='store_true',\n-                          help='Generate test data')\n-        parser.add_option('--test-data', dest='test_data',\n-                          default='data/rpc_getblockstats.json',\n-                          action='store', metavar='FILE',\n-                          help='Test data file')\n+        parser.add_argument('--gen-test-data', dest='gen_test_data',\n+                            default=False, action='store_true',\n+                            help='Generate test data')\n+        parser.add_argument('--test-data', dest='test_data',\n+                            default='data/rpc_getblockstats.json',\n+                            action='store', metavar='FILE',\n+                            help='Test data file')\n \n     def set_test_params(self):\n         self.num_nodes = 2"
      },
      {
        "sha": "b876d9bd764e07d4e45e75ce4f4cd731df1b3486",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=5654efb187d24eb29a343c720e3937b01457c8b7",
        "patch": "@@ -7,7 +7,7 @@\n import configparser\n from enum import Enum\n import logging\n-import optparse\n+import argparse\n import os\n import pdb\n import shutil\n@@ -96,31 +96,31 @@ def __init__(self):\n     def main(self):\n         \"\"\"Main function. This should not be overridden by the subclass test scripts.\"\"\"\n \n-        parser = optparse.OptionParser(usage=\"%prog [options]\")\n-        parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                          help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-        parser.add_option(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n-                          help=\"Don't stop bitcoinds after the test execution\")\n-        parser.add_option(\"--cachedir\", dest=\"cachedir\", default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../cache\"),\n-                          help=\"Directory for caching pregenerated datadirs (default: %default)\")\n-        parser.add_option(\"--tmpdir\", dest=\"tmpdir\", help=\"Root directory for datadirs\")\n-        parser.add_option(\"-l\", \"--loglevel\", dest=\"loglevel\", default=\"INFO\",\n-                          help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console. Note that logs at all levels are always written to the test_framework.log file in the temporary test directory.\")\n-        parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n-                          help=\"Print out all RPC calls as they are made\")\n-        parser.add_option(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type='int',\n-                          help=\"The seed to use for assigning port numbers (default: current process id)\")\n-        parser.add_option(\"--coveragedir\", dest=\"coveragedir\",\n-                          help=\"Write tested RPC commands into this directory\")\n-        parser.add_option(\"--configfile\", dest=\"configfile\",\n-                          default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../config.ini\"),\n-                          help=\"Location of the test framework config file (default: %default)\")\n-        parser.add_option(\"--pdbonfailure\", dest=\"pdbonfailure\", default=False, action=\"store_true\",\n-                          help=\"Attach a python debugger if test fails\")\n-        parser.add_option(\"--usecli\", dest=\"usecli\", default=False, action=\"store_true\",\n-                          help=\"use bitcoin-cli instead of RPC for all commands\")\n+        parser = argparse.ArgumentParser(usage=\"%(prog)s [options]\")\n+        parser.add_argument(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n+                            help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+        parser.add_argument(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n+                            help=\"Don't stop bitcoinds after the test execution\")\n+        parser.add_argument(\"--cachedir\", dest=\"cachedir\", default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../cache\"),\n+                            help=\"Directory for caching pregenerated datadirs (default: %(default)s)\")\n+        parser.add_argument(\"--tmpdir\", dest=\"tmpdir\", help=\"Root directory for datadirs\")\n+        parser.add_argument(\"-l\", \"--loglevel\", dest=\"loglevel\", default=\"INFO\",\n+                            help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console. Note that logs at all levels are always written to the test_framework.log file in the temporary test directory.\")\n+        parser.add_argument(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n+                            help=\"Print out all RPC calls as they are made\")\n+        parser.add_argument(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type=int,\n+                            help=\"The seed to use for assigning port numbers (default: current process id)\")\n+        parser.add_argument(\"--coveragedir\", dest=\"coveragedir\",\n+                            help=\"Write tested RPC commands into this directory\")\n+        parser.add_argument(\"--configfile\", dest=\"configfile\",\n+                            default=os.path.abspath(os.path.dirname(os.path.realpath(__file__)) + \"/../../config.ini\"),\n+                            help=\"Location of the test framework config file (default: %(default)s)\")\n+        parser.add_argument(\"--pdbonfailure\", dest=\"pdbonfailure\", default=False, action=\"store_true\",\n+                            help=\"Attach a python debugger if test fails\")\n+        parser.add_argument(\"--usecli\", dest=\"usecli\", default=False, action=\"store_true\",\n+                            help=\"use bitcoin-cli instead of RPC for all commands\")\n         self.add_options(parser)\n-        (self.options, self.args) = parser.parse_args()\n+        self.options = parser.parse_args()\n \n         PortSeed.n = self.options.port_seed\n "
      },
      {
        "sha": "4ca4ee14e925da9f2d052b58b10c48da4572542c",
        "filename": "test/functional/wallet_txn_clone.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/wallet_txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/wallet_txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_clone.py?ref=5654efb187d24eb29a343c720e3937b01457c8b7",
        "patch": "@@ -17,10 +17,10 @@ def set_test_params(self):\n         self.num_nodes = 4\n \n     def add_options(self, parser):\n-        parser.add_option(\"--mineblock\", dest=\"mine_block\", default=False, action=\"store_true\",\n-                          help=\"Test double-spend of 1-confirmed transaction\")\n-        parser.add_option(\"--segwit\", dest=\"segwit\", default=False, action=\"store_true\",\n-                          help=\"Test behaviour with SegWit txn (which should fail\")\n+        parser.add_argument(\"--mineblock\", dest=\"mine_block\", default=False, action=\"store_true\",\n+                            help=\"Test double-spend of 1-confirmed transaction\")\n+        parser.add_argument(\"--segwit\", dest=\"segwit\", default=False, action=\"store_true\",\n+                            help=\"Test behaviour with SegWit txn (which should fail\")\n \n     def setup_network(self):\n         # Start with split network:"
      },
      {
        "sha": "6811f6ab732481cc433f88b283b234a6e9b17fe5",
        "filename": "test/functional/wallet_txn_doublespend.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/wallet_txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5654efb187d24eb29a343c720e3937b01457c8b7/test/functional/wallet_txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_doublespend.py?ref=5654efb187d24eb29a343c720e3937b01457c8b7",
        "patch": "@@ -19,8 +19,8 @@ def set_test_params(self):\n         self.num_nodes = 4\n \n     def add_options(self, parser):\n-        parser.add_option(\"--mineblock\", dest=\"mine_block\", default=False, action=\"store_true\",\n-                          help=\"Test double-spend of 1-confirmed transaction\")\n+        parser.add_argument(\"--mineblock\", dest=\"mine_block\", default=False, action=\"store_true\",\n+                            help=\"Test double-spend of 1-confirmed transaction\")\n \n     def setup_network(self):\n         # Start with split network:"
      }
    ]
  }
]