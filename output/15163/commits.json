[
  {
    "sha": "6f6514a08090b37b5e8c086015ee4881813ef867",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjY1MTRhMDgwOTBiMzdiNWU4YzA4NjAxNWVlNDg4MTgxM2VmODY3",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-01-14T11:40:00Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-01-30T05:17:22Z"
      },
      "message": "Correct units for \"-dbcache\" and \"-prune\"\n\nAll dbcache-related values in the code are measured in MiB (not in\nmegabytes, MB) or in bytes.\nThe GUI \"-prune\" values in GB are translated to the node values in MiB\ncorrectly. The maximum of the \"-prune\" QSpinBox is not limited by the\ndefault value of 99 (GB).\nAlso, this improves log readability.",
      "tree": {
        "sha": "a81c889c45f5e972229d024ef8c97308312d6336",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a81c889c45f5e972229d024ef8c97308312d6336"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f6514a08090b37b5e8c086015ee4881813ef867",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAlxRNSkACgkQQQEIES5+\nqB+KCxAAtb2lbPTwvXWDP+6P4VQ8owBrfHwCcfFLZYESGhczqU9tI1Roi2kcSShd\nx5CnCb+E7z9mvRZQJEvSZfFTAa9N/fS2TvVTH0T8hDGXNOldjC5fdQyLJfYrLXNj\n+1gLYJHNO2QVwfwDWkIRxANPeYcLz3ZUeL7bs5wZOxJp03+YliuFgESKWtWnf+Mr\n8vsDvRA2dve5ACf5eeAr3RPFvgkYDH+2Vrtr0H1ffKDFJMWoF2LgUmZAxT6+5ply\nlgWMlG8d0K6R4DuVQirGfdhVA00Q9BHJU1EPrk9AOPliAdsuDJ9EiHU44DYm80Yy\nfOPuTNdPi022WQTgY2qxsKWlH7gOv9v9YgUlDPmfgdTi1+N54zcIgqJzeHhf4IYS\nB18Mqc4Sfk1yT4UiJUKz/vZvtcPD4VYYNV1U9JFRrtQF8Q1v+njS6ABFcNT3bjwz\nazgGIyslp44iceBXgyVShreixwczTISiuuw/tnNB/yCfyq7WkxBpbVAKrLz40K2r\nZ/6yBbJpvx5r/1WEu8f0WPf08zbtxJxuBZa5X9dgd76v5qoUXEzL39s4OIoZTQWT\nV5nngpxleYAtrROWV2kqrv/VchbCWr7f7yH7QDhceun/jaMSOpRorUCVXpeRPXx/\nCIqz9ijOMRbfheSIi6fFeX0aHku2gLqX7EHQCZZKOWOcaiuLvUg=\n=n09u\n-----END PGP SIGNATURE-----",
        "payload": "tree a81c889c45f5e972229d024ef8c97308312d6336\nparent 84d0fdce11709c8e26b9c450d47727ab36641437\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1547466000 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1548825442 +0200\n\nCorrect units for \"-dbcache\" and \"-prune\"\n\nAll dbcache-related values in the code are measured in MiB (not in\nmegabytes, MB) or in bytes.\nThe GUI \"-prune\" values in GB are translated to the node values in MiB\ncorrectly. The maximum of the \"-prune\" QSpinBox is not limited by the\ndefault value of 99 (GB).\nAlso, this improves log readability.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f6514a08090b37b5e8c086015ee4881813ef867",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f6514a08090b37b5e8c086015ee4881813ef867",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f6514a08090b37b5e8c086015ee4881813ef867/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84d0fdce11709c8e26b9c450d47727ab36641437",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84d0fdce11709c8e26b9c450d47727ab36641437",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84d0fdce11709c8e26b9c450d47727ab36641437"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 24,
      "deletions": 19
    },
    "files": [
      {
        "sha": "03b04cc314a39236a318e992ce4d97bd3d84cbed",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6514a08090b37b5e8c086015ee4881813ef867/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6514a08090b37b5e8c086015ee4881813ef867/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6f6514a08090b37b5e8c086015ee4881813ef867",
        "patch": "@@ -346,7 +346,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize), true, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-dbcache=<n>\", strprintf(\"Set database cache size in megabytes (%d to %d, default: %d)\", nMinDbCache, nMaxDbCache, nDefaultDbCache), false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-dbcache=<n>\", strprintf(\"Set database cache size in MiB (%d to %d, default: %d)\", nMinDbCache, nMaxDbCache, nDefaultDbCache), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (-nodebuglogfile to disable; default: %s)\", DEFAULT_DEBUGLOGFILE), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER), true, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-includeconf=<file>\", \"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\", false, OptionsCategory::OPTIONS);\n@@ -1055,7 +1055,7 @@ bool AppInitParameterInteraction()\n         if (nPruneTarget < MIN_DISK_SPACE_FOR_BLOCK_FILES) {\n             return InitError(strprintf(_(\"Prune configured below the minimum of %d MiB.  Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n         }\n-        LogPrintf(\"Prune configured to target %uMiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n+        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n         fPruneMode = true;\n     }\n \n@@ -1416,12 +1416,12 @@ bool AppInitMain(InitInterfaces& interfaces)\n     nCoinCacheUsage = nTotalCache; // the rest goes to in-memory cache\n     int64_t nMempoolSizeMax = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     LogPrintf(\"Cache configuration:\\n\");\n-    LogPrintf(\"* Using %.1fMiB for block index database\\n\", nBlockTreeDBCache * (1.0 / 1024 / 1024));\n+    LogPrintf(\"* Using %.1f MiB for block index database\\n\", nBlockTreeDBCache * (1.0 / 1024 / 1024));\n     if (gArgs.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n-        LogPrintf(\"* Using %.1fMiB for transaction index database\\n\", nTxIndexCache * (1.0 / 1024 / 1024));\n+        LogPrintf(\"* Using %.1f MiB for transaction index database\\n\", nTxIndexCache * (1.0 / 1024 / 1024));\n     }\n-    LogPrintf(\"* Using %.1fMiB for chain state database\\n\", nCoinDBCache * (1.0 / 1024 / 1024));\n-    LogPrintf(\"* Using %.1fMiB for in-memory UTXO set (plus up to %.1fMiB of unused mempool space)\\n\", nCoinCacheUsage * (1.0 / 1024 / 1024), nMempoolSizeMax * (1.0 / 1024 / 1024));\n+    LogPrintf(\"* Using %.1f MiB for chain state database\\n\", nCoinDBCache * (1.0 / 1024 / 1024));\n+    LogPrintf(\"* Using %.1f MiB for in-memory UTXO set (plus up to %.1f MiB of unused mempool space)\\n\", nCoinCacheUsage * (1.0 / 1024 / 1024), nMempoolSizeMax * (1.0 / 1024 / 1024));\n \n     bool fLoaded = false;\n     while (!fLoaded && !ShutdownRequested()) {"
      },
      {
        "sha": "240a7a7e92035012221e4e328d59449b46569331",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=6f6514a08090b37b5e8c086015ee4881813ef867",
        "patch": "@@ -121,7 +121,7 @@\n          <item>\n           <widget class=\"QLabel\" name=\"databaseCacheUnitLabel\">\n            <property name=\"text\">\n-            <string>MB</string>\n+            <string>MiB</string>\n            </property>\n            <property name=\"textFormat\">\n             <enum>Qt::PlainText</enum>"
      },
      {
        "sha": "736ff13a4a0c51f8cca58031c67b16548c632173",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=6f6514a08090b37b5e8c086015ee4881813ef867",
        "patch": "@@ -52,4 +52,7 @@ static const int MAX_URI_LENGTH = 255;\n #define QAPP_APP_NAME_TESTNET \"Bitcoin-Qt-testnet\"\n #define QAPP_APP_NAME_REGTEST \"Bitcoin-Qt-regtest\"\n \n+/* One gigabyte (GB) in bytes */\n+static constexpr uint64_t GB_BYTES{1000000000};\n+\n #endif // BITCOIN_QT_GUICONSTANTS_H"
      },
      {
        "sha": "5f853c20b6b8cfc368cf9c4a3061e5b520ea78df",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=6f6514a08090b37b5e8c086015ee4881813ef867",
        "patch": "@@ -10,6 +10,7 @@\n #include <qt/intro.h>\n #include <qt/forms/ui_intro.h>\n \n+#include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n \n #include <interfaces/node.h>\n@@ -21,7 +22,6 @@\n \n #include <cmath>\n \n-static const uint64_t GB_BYTES = 1000000000LL;\n /* Total required space (in GB) depending on user choice (prune, not prune) */\n static uint64_t requiredSpace;\n "
      },
      {
        "sha": "789b51cd6f0f245b383972b8e2f4c20f2766cdc4",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=6f6514a08090b37b5e8c086015ee4881813ef867",
        "patch": "@@ -10,6 +10,7 @@\n #include <qt/forms/ui_optionsdialog.h>\n \n #include <qt/bitcoinunits.h>\n+#include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n \n@@ -37,10 +38,6 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     /* Main elements init */\n     ui->databaseCache->setMinimum(nMinDbCache);\n     ui->databaseCache->setMaximum(nMaxDbCache);\n-    static const uint64_t GiB = 1024 * 1024 * 1024;\n-    static const uint64_t nMinDiskSpace = MIN_DISK_SPACE_FOR_BLOCK_FILES / GiB +\n-                          (MIN_DISK_SPACE_FOR_BLOCK_FILES % GiB) ? 1 : 0;\n-    ui->pruneSize->setMinimum(nMinDiskSpace);\n     ui->threadsScriptVerif->setMinimum(-GetNumCores());\n     ui->threadsScriptVerif->setMaximum(MAX_SCRIPTCHECK_THREADS);\n     ui->pruneWarning->setVisible(false);\n@@ -161,6 +158,10 @@ void OptionsDialog::setModel(OptionsModel *_model)\n         mapper->toFirst();\n \n         updateDefaultProxyNets();\n+\n+        // Prune values are in GB to be consistent with intro.cpp\n+        static constexpr uint64_t nMinDiskSpace = (MIN_DISK_SPACE_FOR_BLOCK_FILES / GB_BYTES) + (MIN_DISK_SPACE_FOR_BLOCK_FILES % GB_BYTES) ? 1 : 0;\n+        ui->pruneSize->setRange(nMinDiskSpace, _model->node().getAssumedBlockchainSize());\n     }\n \n     /* warn when one of the following settings changes by user action (placed here so init via mapper doesn't trigger them) */"
      },
      {
        "sha": "62496a57f4bcbacea67d49f5d3491459c6b1bd12",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6514a08090b37b5e8c086015ee4881813ef867/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=6f6514a08090b37b5e8c086015ee4881813ef867",
        "patch": "@@ -9,6 +9,7 @@\n #include <qt/optionsmodel.h>\n \n #include <qt/bitcoinunits.h>\n+#include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n \n #include <interfaces/node.h>\n@@ -92,10 +93,10 @@ void OptionsModel::Init(bool resetSettings)\n         settings.setValue(\"bPrune\", false);\n     if (!settings.contains(\"nPruneSize\"))\n         settings.setValue(\"nPruneSize\", 2);\n-    // Convert prune size to MB:\n-    const uint64_t nPruneSizeMB = settings.value(\"nPruneSize\").toInt() * 1000;\n-    if (!m_node.softSetArg(\"-prune\", settings.value(\"bPrune\").toBool() ? std::to_string(nPruneSizeMB) : \"0\")) {\n-      addOverriddenOption(\"-prune\");\n+    // Convert prune size from GB to MiB:\n+    const uint64_t nPruneSizeMiB = (settings.value(\"nPruneSize\").toInt() * GB_BYTES) >> 20;\n+    if (!m_node.softSetArg(\"-prune\", settings.value(\"bPrune\").toBool() ? std::to_string(nPruneSizeMiB) : \"0\")) {\n+        addOverriddenOption(\"-prune\");\n     }\n \n     if (!settings.contains(\"nDatabaseCache\"))"
      },
      {
        "sha": "9f420b287d2fcd3ed4f19867f65fccc3bc7a9f86",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6514a08090b37b5e8c086015ee4881813ef867/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6514a08090b37b5e8c086015ee4881813ef867/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=6f6514a08090b37b5e8c086015ee4881813ef867",
        "patch": "@@ -201,14 +201,14 @@ static const unsigned int NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;\n static const signed int DEFAULT_CHECKBLOCKS = 6;\n static const unsigned int DEFAULT_CHECKLEVEL = 3;\n \n-// Require that user allocate at least 550MB for block & undo files (blk???.dat and rev???.dat)\n+// Require that user allocate at least 550 MiB for block & undo files (blk???.dat and rev???.dat)\n // At 1MB per block, 288 blocks = 288MB.\n // Add 15% for Undo data = 331MB\n // Add 20% for Orphan block rate = 397MB\n // We want the low water mark after pruning to be at least 397 MB and since we prune in\n // full block file chunks, we need the high water mark which triggers the prune to be\n // one 128MB block file + added 15% undo data = 147MB greater for a total of 545MB\n-// Setting the target to > than 550MB will make it likely we can respect the target.\n+// Setting the target to >= 550 MiB will make it likely we can respect the target.\n static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n \n /**"
      },
      {
        "sha": "3e1ba88f0ad23591c3ee075b9294bdbfeee59650",
        "filename": "test/functional/feature_pruning.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6514a08090b37b5e8c086015ee4881813ef867/test/functional/feature_pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6514a08090b37b5e8c086015ee4881813ef867/test/functional/feature_pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_pruning.py?ref=6f6514a08090b37b5e8c086015ee4881813ef867",
        "patch": "@@ -320,7 +320,7 @@ def has_block(index):\n         if has_block(3):\n             raise AssertionError(\"blk00003.dat is still there, should be pruned by now\")\n \n-        # stop node, start back up with auto-prune at 550MB, make sure still runs\n+        # stop node, start back up with auto-prune at 550 MiB, make sure still runs\n         self.stop_node(node_number)\n         self.start_node(node_number, extra_args=[\"-prune=550\"])\n "
      }
    ]
  }
]