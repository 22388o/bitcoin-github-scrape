[
  {
    "sha": "be9a13c8a0f149ac219934b515399cca60bf2123",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTlhMTNjOGEwZjE0OWFjMjE5OTM0YjUxNTM5OWNjYTYwYmYyMTIz",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-12-07T19:38:26Z"
      },
      "committer": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-12-19T23:23:12Z"
      },
      "message": "Add configuration/argument testing",
      "tree": {
        "sha": "91666785f7a98f998faa1413732bc858970ca201",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91666785f7a98f998faa1413732bc858970ca201"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be9a13c8a0f149ac219934b515399cca60bf2123",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be9a13c8a0f149ac219934b515399cca60bf2123",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/be9a13c8a0f149ac219934b515399cca60bf2123",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be9a13c8a0f149ac219934b515399cca60bf2123/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef8ba7d73a480197b756fab00126914e49de4e7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef8ba7d73a480197b756fab00126914e49de4e7b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef8ba7d73a480197b756fab00126914e49de4e7b"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 50,
      "deletions": 0
    },
    "files": [
      {
        "sha": "61abba80824ebaa0e7194837091833e290e85ddb",
        "filename": "test/functional/conf_args.py",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be9a13c8a0f149ac219934b515399cca60bf2123/test/functional/conf_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be9a13c8a0f149ac219934b515399cca60bf2123/test/functional/conf_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/conf_args.py?ref=be9a13c8a0f149ac219934b515399cca60bf2123",
        "patch": "@@ -0,0 +1,49 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various command line arguments and configuration file parameters.\"\"\"\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import get_datadir_path\n+\n+class ConfArgsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        self.stop_node(0)\n+        # Remove the -datadir argument so it doesn't override the config file\n+        self.nodes[0].args = [arg for arg in self.nodes[0].args if not arg.startswith(\"-datadir\")]\n+\n+        default_data_dir = get_datadir_path(self.options.tmpdir, 0)\n+        new_data_dir = os.path.join(default_data_dir, 'newdatadir')\n+        new_data_dir_2 = os.path.join(default_data_dir, 'newdatadir2')\n+\n+        # Check that using -datadir argument on non-existent directory fails\n+        self.nodes[0].datadir = new_data_dir\n+        self.assert_start_raises_init_error(0, ['-datadir='+new_data_dir], 'Error: Specified data directory \"' + new_data_dir + '\" does not exist.')\n+\n+        # Check that using non-existent datadir in conf file fails\n+        conf_file = os.path.join(default_data_dir, \"bitcoin.conf\")\n+        with open(conf_file, 'a', encoding='utf8') as f:\n+            f.write(\"datadir=\" + new_data_dir + \"\\n\")\n+        self.assert_start_raises_init_error(0, ['-conf='+conf_file], 'Error reading configuration file: specified data directory \"' + new_data_dir + '\" does not exist.')\n+\n+        # Create the directory and ensure the config file now works\n+        os.mkdir(new_data_dir)\n+        self.start_node(0, ['-conf='+conf_file, '-wallet=w1'])\n+        self.stop_node(0)\n+        assert os.path.isfile(os.path.join(new_data_dir, 'regtest', 'wallets', 'w1'))\n+\n+        # Ensure command line argument overrides datadir in conf\n+        os.mkdir(new_data_dir_2)\n+        self.nodes[0].datadir = new_data_dir_2\n+        self.start_node(0, ['-datadir='+new_data_dir_2, '-conf='+conf_file, '-wallet=w2'])\n+        assert os.path.isfile(os.path.join(new_data_dir_2, 'regtest', 'wallets', 'w2'))\n+\n+if __name__ == '__main__':\n+    ConfArgsTest().main()"
      },
      {
        "sha": "bfd1192d3aac1a7efb94b673205bb1411856e172",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be9a13c8a0f149ac219934b515399cca60bf2123/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be9a13c8a0f149ac219934b515399cca60bf2123/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=be9a13c8a0f149ac219934b515399cca60bf2123",
        "patch": "@@ -129,6 +129,7 @@\n     'p2p-acceptblock.py',\n     'feature_logging.py',\n     'node_network_limited.py',\n+    'conf_args.py',\n ]\n \n EXTENDED_SCRIPTS = ["
      }
    ]
  }
]