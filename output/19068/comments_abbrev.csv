jonasschnelli,2020-05-26 11:56:04,"Gitian Build seems to work: https://bitcoin.jonasschnelli.ch/gitian/build/142 \nMaybe the ZIP filename could still contain the phrase ""macOS"" or ""osx"".\n\nConceptual, I'm currently ~0 (I [commented](https://github.com/bitcoin/bitcoin/issues/18128#issuecomment-585323098) on the concept before).\nI think it is nice to simplify the build system (probably makes it much easier for guix). Though, I'",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-633979022,633979022,
MarcoFalke,2020-05-26 16:25:40,"Is there any ""official"" mac documention or user surveys that suggest which one is the recommended or preferred way?",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-634131901,634131901,
dongcarl,2020-05-27 01:03:58,"Concept ACK! Great to see the amount of code we can remove.\n\n-----\n\n> (probably makes it much easier for guix).\n\nJust to make myself clear, I am _**for**_ this change because it is a great simplification for a marginal difference in user experience and not because of anything specific to Guix (my current implementation of the Guix macOS build is already able to build the `dmg`). :relax",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-634362262,634362262,
Sjors,2020-05-27 16:40:53,"Concept ACK\n\nYou can add a symlink to `/Applications` to the archive and call it ""Drag Here"" (so it appears on the right).\n<img width=""351"" alt=""Schermafbeelding 2020-05-27 om 18 29 17"" src=""https://user-images.githubusercontent.com/10217/83046935-02020e00-a048-11ea-9d3a-1f0975cfed9c.png"">\n\nWith that it's close enough to what macOS users are used to, with a nice reduction in dependencies",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-634790260,634790260,
DrahtBot,2020-05-27 19:58:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18434 (tests: add a test-security target and run it in CI by fanquake)\n* #17919 (depends: Allow building with system cla",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-634907849,634907849,
fanquake,2020-05-28 08:44:31,"> You could also keep the .DS_Store and .background folder around for full branding and a nicer layout, but that's pretty marginal.\n\n""Keeping that around"" would mostly defeat the point of these changes.",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-635206458,635206458,
Sjors,2020-05-28 08:53:11,"> ""Keeping that around"" would mostly defeat the point of these changes.\n\nIt still gets rid of `genisoimage` and `libdmg-hfsplus`, but indeed `.DS_Store` and `.background` require a lof of tools themselves. Just the symlink should get us close enough to the original UX. \n",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-635210819,635210819,
fanquake,2020-05-29 02:37:30,"Pushed a few more removals, updated the descriptors and fixed whitespace.\n\n> Is there any ""official"" mac documention or user surveys that suggest which one is the recommended or preferred way?\n\nThe Apple documentation is mainly focused on using Xcode and App Store distribution: https://help.apple.com/xcode/mac/current/#/devac02c5ab8. There is a section on distribution outside the App Store",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-635722679,635722679,
Sjors,2020-05-29 09:02:08,"> I'm not aware of any projects that are using a symlink inside a .zip approach\n\nThat's because most projects use a DMG with a symlink and background image. We have a good reason to avoid that, namely to make deterministic builds easier. Even as an experienced macOS user, I find the symlink useful; it saves me from opening a new Finder window, navigating to Applications and then dragging betwe",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-635861008,635861008,
luke-jr,2020-06-03 15:25:31,"Can we add the ZIP and remove the DMG in two steps?\n\nIMO it'd be nice to build both for 0.21, but only distribute the ZIP. That way if it causes too much problems/confusion we can just change it back without rebuilds/etc.",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-638270377,638270377,
fanquake,2020-11-13 03:50:13,"I might come back to this in future, but closing for now as I've made some changes to the existing macdeploy process. Any discussion should continue in #18128.",https://github.com/bitcoin/bitcoin/pull/19068#issuecomment-726490884,726490884,
fanquake,2020-05-31 02:58:35,"One possible simplification after this change, would be to make the `otool` and `installnametool` checks no longer cross-compiling dependent. Then we should be able to have a single `OSX_ZIP` rule, and drop the need for `BUILD_DARWIN`.",https://github.com/bitcoin/bitcoin/pull/19068#discussion_r432904673,432904673,Makefile.am
