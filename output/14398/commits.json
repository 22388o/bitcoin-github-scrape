[
  {
    "sha": "b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDljODE0NTRlYjJmYzdmYjhkMjkzMDFjZTdmNGFhM2FhZWUzNWE1",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-10-05T07:43:09Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-10-05T07:48:16Z"
      },
      "message": "Don't access out of bounds array entry array[sizeof(array)]",
      "tree": {
        "sha": "4cb69bb0e46ee66155fb023ecec70c815a5aa01f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4cb69bb0e46ee66155fb023ecec70c815a5aa01f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbtxdBAAoJEG7l83hfeLNF8g4H/0svFdIHBo3Q6l/47Mu3Hbpx\nrdDpfbURyFvzk+noSn7KVKpFQAyJNUcUP+ed/TT3NFyEfTiZs0uvO4jtzt3unOQT\nq5Khr6LCtBnzRptnqzZDql59emzyzhc2mCIegk63WjGUDfnxNnhpTbQOCLP90+dF\nMcOHJQBZo//kQS+9ibore+tM8ygFXkoNiiYrHNUPGdlpTFxtY2TQ/4Md8vV/1Ndw\nJjYELZexSL9VuXh9lNyVHjDWdJOYTGj4zcZxoL8FXrcS3q4Pk7l6WkltRokx6ceS\ne2BVAPNUNatrRyh7O2vzf6Pj7rXKBdz6JyliYri0KtAU1uyxnwPzlKWGHyMN1R8=\n=cRc5\n-----END PGP SIGNATURE-----",
        "payload": "tree 4cb69bb0e46ee66155fb023ecec70c815a5aa01f\nparent f504a1402afd0760e9d348ecc8bad0094aa7d705\nauthor Ben Woosley <ben.woosley@gmail.com> 1538725389 +0900\ncommitter Ben Woosley <ben.woosley@gmail.com> 1538725696 +0900\n\nDon't access out of bounds array entry array[sizeof(array)]\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f504a1402afd0760e9d348ecc8bad0094aa7d705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f504a1402afd0760e9d348ecc8bad0094aa7d705",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f504a1402afd0760e9d348ecc8bad0094aa7d705"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e325333c01e26b24b91d9dbf3ea2767792f85d8f",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5",
        "patch": "@@ -20,7 +20,7 @@ namespace block_bench {\n static void DeserializeBlockTest(benchmark::State& state)\n {\n     CDataStream stream((const char*)block_bench::block413567,\n-            (const char*)&block_bench::block413567[sizeof(block_bench::block413567)],\n+            (const char*)block_bench::block413567 + sizeof(block_bench::block413567),\n             SER_NETWORK, PROTOCOL_VERSION);\n     char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction\n@@ -36,7 +36,7 @@ static void DeserializeBlockTest(benchmark::State& state)\n static void DeserializeAndCheckBlockTest(benchmark::State& state)\n {\n     CDataStream stream((const char*)block_bench::block413567,\n-            (const char*)&block_bench::block413567[sizeof(block_bench::block413567)],\n+            (const char*)block_bench::block413567 + sizeof(block_bench::block413567),\n             SER_NETWORK, PROTOCOL_VERSION);\n     char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction"
      },
      {
        "sha": "7fbf37e7fbf06fbbc6f847a1efa1863e68184b87",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=b09c81454eb2fc7fb8d29301ce7f4aa3aaee35a5",
        "patch": "@@ -1013,21 +1013,21 @@ BOOST_AUTO_TEST_CASE(script_PushData)\n \n     ScriptError err;\n     std::vector<std::vector<unsigned char> > directStack;\n-    BOOST_CHECK(EvalScript(directStack, CScript(&direct[0], &direct[sizeof(direct)]), SCRIPT_VERIFY_P2SH, BaseSignatureChecker(), SigVersion::BASE, &err));\n+    BOOST_CHECK(EvalScript(directStack, CScript(direct, direct + sizeof(direct)), SCRIPT_VERIFY_P2SH, BaseSignatureChecker(), SigVersion::BASE, &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     std::vector<std::vector<unsigned char> > pushdata1Stack;\n-    BOOST_CHECK(EvalScript(pushdata1Stack, CScript(&pushdata1[0], &pushdata1[sizeof(pushdata1)]), SCRIPT_VERIFY_P2SH, BaseSignatureChecker(), SigVersion::BASE, &err));\n+    BOOST_CHECK(EvalScript(pushdata1Stack, CScript(pushdata1, pushdata1 + sizeof(pushdata1)), SCRIPT_VERIFY_P2SH, BaseSignatureChecker(), SigVersion::BASE, &err));\n     BOOST_CHECK(pushdata1Stack == directStack);\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     std::vector<std::vector<unsigned char> > pushdata2Stack;\n-    BOOST_CHECK(EvalScript(pushdata2Stack, CScript(&pushdata2[0], &pushdata2[sizeof(pushdata2)]), SCRIPT_VERIFY_P2SH, BaseSignatureChecker(), SigVersion::BASE, &err));\n+    BOOST_CHECK(EvalScript(pushdata2Stack, CScript(pushdata2, pushdata2 + sizeof(pushdata2)), SCRIPT_VERIFY_P2SH, BaseSignatureChecker(), SigVersion::BASE, &err));\n     BOOST_CHECK(pushdata2Stack == directStack);\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     std::vector<std::vector<unsigned char> > pushdata4Stack;\n-    BOOST_CHECK(EvalScript(pushdata4Stack, CScript(&pushdata4[0], &pushdata4[sizeof(pushdata4)]), SCRIPT_VERIFY_P2SH, BaseSignatureChecker(), SigVersion::BASE, &err));\n+    BOOST_CHECK(EvalScript(pushdata4Stack, CScript(pushdata4, pushdata4 + sizeof(pushdata4)), SCRIPT_VERIFY_P2SH, BaseSignatureChecker(), SigVersion::BASE, &err));\n     BOOST_CHECK(pushdata4Stack == directStack);\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n }"
      }
    ]
  }
]