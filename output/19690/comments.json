[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671150925",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671150925",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 671150925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTE1MDkyNQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T03:50:05Z",
    "updated_at": "2020-08-10T03:50:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "This PR was suggested by @hebasto https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-669658597 (thank you!)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671150925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671293857",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671293857",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 671293857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTI5Mzg1Nw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T11:10:25Z",
    "updated_at": "2020-08-10T11:10:25Z",
    "author_association": "MEMBER",
    "body": "@LarryRuane \r\n> ... improving its CPU runtime by a factor of about 25 in typical use.\r\n\r\nHow was it measured?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671293857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671305132",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671305132",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 671305132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTMwNTEzMg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T11:38:51Z",
    "updated_at": "2020-08-10T11:38:51Z",
    "author_association": "MEMBER",
    "body": "Any idea *why* this is so much faster? As far as I know, there is no faster algorithm to look for the first occurrence of a single byte in a memory array than a linear iteration over it. I'd expect `std::find` of a byte to simply unroll into a loop.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671305132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671395708",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671395708",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 671395708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTM5NTcwOA==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T14:38:55Z",
    "updated_at": "2020-08-10T14:38:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How was it measured?\r\n\r\nI ran:\r\n```\r\ntime src/test/test_bitcoin --run_test=streams_tests/streams_findbyte\r\n```\r\nwith master (1m20s) and with master + PR (3s).\r\n\r\n> Any idea _why_ this is so much faster? \r\n\r\nI think you're correct that there's no faster way than a loop with runtime proportional to the number of bytes to scan, but I assume `std::find()` on a char vector is highly optimized, probably using `memchr()` or `memcmp()`, which are implemented in assembly language. Also, the master version does a few things each byte (testing `nReadPos == nSrcPos`, remainder calculation (`%`), incrementing `nReadPos`) that the PR does once for each large run of bytes.\r\n\r\nI just noticed that the repetition count on the test is set to a large number (50000000) and I meant to reduce it for the commit (3 seconds is too long to add to the unit test suite). I'll reduce that number in force push in a minute. This test doesn't really need to be in this PR (`FindByte()`'s functionality is tested very well in another test), but it helps reviewers verify the performance improvement.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671395708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671400344",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671400344",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 671400344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTQwMDM0NA==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T14:46:52Z",
    "updated_at": "2021-03-05T06:07:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Force-push a small fix to the test, so it doesn't take 3 seconds to run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671400344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671464582",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671464582",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 671464582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTQ2NDU4Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T16:43:57Z",
    "updated_at": "2020-08-10T16:43:57Z",
    "author_association": "MEMBER",
    "body": "> but I assume std::find() on a char vector is highly optimized, probably using memchr() or memcmp(), which are implemented in assembly language\r\n\r\nThat's true, it's possible to optimize that with assembly language (definitely with specific instruction sets).\r\n\r\nit still surprises me because you'd expect the I/O, to read the data from disk, to dominate greatly in the block importing. Not looking for a character already in memory! It just seems out of proportion.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671464582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671562959",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671562959",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 671562959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTU2Mjk1OQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T20:08:50Z",
    "updated_at": "2020-08-10T20:08:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> it still surprises me because you'd expect the I/O, to read the data from disk, to dominate greatly in the block importing.\r\n\r\n`FindByte()` only reads from disk by calling `Fill()` (when the buffer is empty), which is rare. In this test, `Fill()` gets called only once, the first time `FindByte()` runs, because I wanted to isolate the modified part of the code.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671562959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671659440",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-671659440",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 671659440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTY1OTQ0MA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T00:42:37Z",
    "updated_at": "2020-08-11T00:42:37Z",
    "author_association": "MEMBER",
    "body": "@gmaxwell pointed out to me why this is so much faster: it's not that std::find is amazing, but that the original code (which I wrote in 2012, it seems!) is doing a modulus operation for every character (which is often orders of magnitude slower than the byte comparison or addition/subtraction).\r\n\r\nThinking about this a bit more high level: the end goal is just to scan quickly for the 4-byte network magic in a file. If this is relevant for performance (and it seems it may be), it may be better to have a function that does exactly that in CBufferedFile, rather than a search for one byte + memcmp. `std::search` is probably what you want.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671659440/reactions",
      "total_count": 6,
      "+1": 6,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672894853",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-672894853",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 672894853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mjg5NDg1Mw==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-12T14:10:48Z",
    "updated_at": "2020-08-12T17:56:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a version that's very close in implementation to master that eliminates the `%` operation on every character:\r\n```\r\n    void FindByte(char ch) {\r\n        size_t start = nReadPos % vchBuf.size();\r\n        while (true) {\r\n            if (nReadPos == nSrcPos)\r\n                Fill();\r\n            if (vchBuf[start] == ch)\r\n                break;\r\n            nReadPos++;\r\n            start++;\r\n            if (start >= vchBuf.size()) start = 0;\r\n        }\r\n```\r\nand that does make a significant difference; `bench_bitcoin` reports 314 ns/op for this version. (My laptop isn't set up for very accurate CPU benchmarking, but my results are pretty consistent, varying by less than 1% across multiple runs.) That's about 5.3 times as fast as master (1,659.30 ns/op, as [mentioned above](https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468201206)). The PR (52.66 ns/op) is still about 6 times faster than this version. So this version is right about in the middle (in terms of ratios) between master and this PR.\r\n\r\nI do like @sipa's suggestion to generalize `FindByte()` to search for a given sequence of bytes (maybe called `FindBytes()` or `Search()`, suggestions welcome); that's a much nicer interface. I'll push a commit to do that within the next few hours.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672894853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673270669",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-673270669",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 673270669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzI3MDY2OQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-13T05:35:58Z",
    "updated_at": "2020-08-13T05:35:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just added a new commit (25413ab, can squash later) to implement @sipa's suggestion to add a method to `CBufferedFile` to find a sequence of bytes, rather than just one byte, as `FindByte()` does. This simplifies `LoadExternalBlockFile()`; the overall code base isn't simpler, but it encapsulates complexity nicely within the `CBufferedFile` class. \r\n\r\nIt didn't work out to use `std::search()` because that function requires the bytes being searched to be consecutive in memory -- that works if the entire file is read into contiguous memory. But `CBufferedFile` implements a circular buffer. The bytes we're searching for might be partially in and partially out of memory (bytes are read on demand), and even if all are in memory, they may be split between the end of the buffer and the beginning (because of wraparound), so trying to use `std::search` gets complicated. `FindByte()` doesn't have these problems since it's looking for a single byte.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673270669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673777171",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-673777171",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 673777171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mzc3NzE3MQ==",
    "user": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?u=fc2e6f106f98731d49e9787f9cbfe86a17447c23&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-14T00:39:41Z",
    "updated_at": "2020-08-14T00:40:53Z",
    "author_association": "MEMBER",
    "body": "Looks like one of the sanitizers is finding an implicit-integer-sign-change problem in the latest update:\r\n\r\n```\r\n\ufffd[0;34m node0 stderr streams.h:857:22: runtime error: implicit conversion from type 'unsigned char' of value 250 (8-bit, unsigned) to type 'char' changed the value to -6 (8-bit, signed)\r\n    #0 0x55f6d4cc6285 in CBufferedFile::Search(unsigned char const*, unsigned long) /tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./streams.h:857:22\r\n    #1 0x55f6d4c967a0 in LoadExternalBlockFile(CChainParams const&, _IO_FILE*, FlatFilePos*) /tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/validation.cpp:4682:24\r\n    #2 0x55f6d45071f6 in ThreadImport(ChainstateManager&, std::vector<boost::filesystem::path, std::allocator<boost::filesystem::path> >) /tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:705:13\r\n    #3 0x55f6d4506814 in AppInitMain(util::Ref const&, NodeContext&)::$_10::operator()() const /tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/init.cpp:1853:96\r\n    #4 0x55f6d4506814 in std::_Function_handler<void (), AppInitMain(util::Ref const&, NodeContext&)::$_10>::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_function.h:300:2\r\n    #5 0x55f6d4585b29 in std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_function.h:688:14\r\n    #6 0x55f6d45181bb in void TraceThread<std::function<void ()> >(char const*, std::function<void ()>) /tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/./util/system.h:438:9\r\n    #7 0x55f6d4506447 in void std::__invoke_impl<void, void (*)(char const*, std::function<void ()>), char const*, AppInitMain(util::Ref const&, NodeContext&)::$_10>(std::__invoke_other, void (*&&)(char const*, std::function<void ()>), char const*&&, AppInitMain(util::Ref const&, NodeContext&)::$_10&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h:60:14\r\n    #8 0x55f6d450616a in std::__invoke_result<void (*)(char const*, std::function<void ()>), char const*, AppInitMain(util::Ref const&, NodeContext&)::$_10>::type std::__invoke<void (*)(char const*, std::function<void ()>), char const*, AppInitMain(util::Ref const&, NodeContext&)::$_10>(void (*&&)(char const*, std::function<void ()>), char const*&&, AppInitMain(util::Ref const&, NodeContext&)::$_10&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h:95:14\r\n    #9 0x55f6d4505db2 in void std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, AppInitMain(util::Ref const&, NodeContext&)::$_10> >::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:244:13\r\n    #10 0x55f6d4505db2 in std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, AppInitMain(util::Ref const&, NodeContext&)::$_10> >::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:251:11\r\n    #11 0x55f6d4505db2 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, AppInitMain(util::Ref const&, NodeContext&)::$_10> > >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:195:13\r\n    #12 0x7f20f2f18cb3  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xd6cb3)\r\n    #13 0x7f20f3317608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x9608)\r\n    #14 0x7f20f2bf5102 in clone (/lib/x86_64-linux-gnu/libc.so.6+0x122102)\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: implicit-integer-sign-change streams.h:857:22\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673777171/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673904127",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-673904127",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 673904127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzkwNDEyNw==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-14T06:05:58Z",
    "updated_at": "2020-12-07T17:53:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @adamjonas, force-pushed a fix for that signed-unsigned CI failure, added another unit test, some improvements to `Search()`, some `clang-format-diff.py` cleanups.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673904127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677894346",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-677894346",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 677894346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Nzg5NDM0Ng==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-20T20:44:32Z",
    "updated_at": "2021-11-05T15:31:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23438](https://github.com/bitcoin/bitcoin/pull/23438) (refactor: Use spans of std::byte in serialize by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677894346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730832077",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-730832077",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 730832077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMDgzMjA3Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-20T04:08:34Z",
    "updated_at": "2020-11-20T04:08:34Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 8f2e8c27bb9bb3ebb9f094129ce4a6019c46cfc0, this looks like a better abstraction, and it's an improvement not to do a modulus for every byte.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730832077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739032586",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-739032586",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 739032586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTAzMjU4Ng==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T21:33:10Z",
    "updated_at": "2020-12-04T21:39:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Force-pushed to rationalize the commits, so I think it's in a good state for merging. I reordered the commit that adds the benchmark test, b576994bea620c7d065dd558c93222391151c9ff, to be first, so it's easy for reviewers to checkout that commit and run the new benchmark test without the improvements:\r\n```\r\nsrc/bench/bench_bitcoin -filter=FindByte\r\n```\r\nI re-ran those tests just now, and on my laptop, the ns/op without the PR is 1,840, and with the PR it's 55 (an improvement of more than a factor of 33).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739032586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739059080",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-739059080",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 739059080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTA1OTA4MA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T22:33:26Z",
    "updated_at": "2020-12-04T22:33:26Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 566c2e2eec1e84af5143f1554613a89192e29433. I think it'd be good to move the refactoring to FindByte in the last commit to a separate commit.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739059080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739098789",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-739098789",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 739098789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTA5ODc4OQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-05T01:14:18Z",
    "updated_at": "2020-12-05T01:14:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Force-pushed to implement latest [review suggestion](https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-739059080), changes are more cleanly separated among the commits (no code changes overall), thanks @sipa.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739098789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739320594",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-739320594",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 739320594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTMyMDU5NA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-05T16:55:59Z",
    "updated_at": "2020-12-05T16:55:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@LarryRuane \r\n\r\nThanks for providing promising micro benchmarks. AFAICT `FindByte` is only used when doing `-reindex` and `-loadblock`. Do you have any macro numbers too where the gains from switching to this improved version are measured in terms of the overall speed-up of said operations?\r\n\r\nAnother thing: when fuzzing `CBufferedFile` I noticed that calling `FindByte` after a failed `SetPos` call may result in an infinite loop. Does the new code have that gotcha too? If not we can drop the `setpos_fail` logic in `src/test/fuzz/buffered_file.cpp` :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739320594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739321236",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-739321236",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 739321236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTMyMTIzNg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-05T17:01:15Z",
    "updated_at": "2020-12-05T17:01:15Z",
    "author_association": "MEMBER",
    "body": "> Another thing: when fuzzing `CBufferedFile` I noticed that calling `FindByte` after a failed `SetPos` call may result in an infinite loop. Does the new code have that gotcha too? If not we can drop the `setpos_fail` logic in `src/test/fuzz/buffered_file.cpp` :)\r\n\r\nAlso some failed tests:\r\n- https://cirrus-ci.com/task/4540479469518848\r\n- https://bitcoinbuilds.org/?job=34de38c2-b334-4dde-b067-462b3e62200b",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739321236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739700330",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-739700330",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 739700330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTcwMDMzMA==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T06:30:54Z",
    "updated_at": "2020-12-07T06:30:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@practicalswift\r\n> Do you have any macro numbers too where the gains from switching to this improved version are measured in terms of the overall speed-up of [`-reindex` and `-loadblock`]?\r\n\r\nI don't think there will be any measurable improvement in the sunny-day case, because the byte being searched for is the very first byte at the stream pointer. So no looping is needed (and this PR only improves the performance of that loop). But if there is corruption, damage in the `blk.dat` files, then `FindByte()` is being used to \"resynchronize\" with the stream, that is, to locate the start of the next valid block. I don't think that happens often in practice. But another advantage of this PR is that `FindByte()` may be used for something else in the future which does require actual looping in the sunny-day case.\r\n\r\n> Another thing: when fuzzing `CBufferedFile` I noticed that calling `FindByte` after a failed `SetPos` call may result in an infinite loop. Does the new code have that gotcha too?\r\n\r\nTL;DR: No. We can remove that check.\r\n\r\nDetails: I wanted to understand this better, so I checked out master immediately after your PR #19143 was merged, the commit where you added the `SetPos()` fuzzing (and the `setpos_fail` flag) (commit 614e0807a8137d82832aea45e4864b424f71f698), and did some investigation, and discovered that a failed `SetPos()` isn't what caused the infinite loop. The reason the `setpos_fail` flag seemed to fix the problem is that `SetPos()` typically fails very early in the fuzzing run, and that disables further `FindByte()` calls, after which the problem can't occur. (I didn't see anything that would _prevent_ the infinite loop, but it's just unlikely.)\r\n\r\nThe actual source of the problem is in the [`Seek()` call](https://github.com/bitcoin/bitcoin/blob/614e0807a8137d82832aea45e4864b424f71f698/src/test/fuzz/buffered_file.cpp#L44). The [implementation](https://github.com/bitcoin/bitcoin/blob/614e0807a8137d82832aea45e4864b424f71f698/src/streams.h#L817) of that method calls the standard library `fseek()`, then, if that succeeds, `ftell()`, which is supposed to return the byte offset into the file of the `FILE` pointer. It sometimes returns `-1` (which indicates error). That seems wrong, because if the `fseek()` is successful, then `ftell()` should return whatever offset we just seeked to. (I'm not sure why `Seek()` even called `ftell()`, since it already knows that offset.) This `-1` (error) return is stored into both the `CBufferedFile`'s read and write offsets (`nReadPos` and `nSrcPos`), which are unsigned, so things are messed up from here. (I was able to see why this caused an infinite loop, but it's not worth explaining here.)\r\n\r\nAnyway, this is all irrelevant now, because in #19593, @hebasto removed `CBufferedFile::Seek` because it wasn't being used. So, yes, we should remove this check (I did remove it and verified that there is no infinite loop), and I'll do that in this PR.\r\n\r\nAnother thing I'd like to do is add fuzz testing for the new method `CBufferedFile::Search()` (it can be added to the [existing test](https://github.com/bitcoin/bitcoin/blob/cef2efafcecc4d3d60421955bbd4c4fcebbcb86d/src/test/fuzz/buffered_file.cpp#L18)). That's why I changed this PR status to DRAFT. Also, I'll look into if those failed tests are real failures. Thanks for all your help!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739700330/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740076745",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-740076745",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 740076745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDA3Njc0NQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T17:51:07Z",
    "updated_at": "2020-12-07T17:51:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Force-pushed the latest review suggestions:\r\n- remove unneeded `protected:` tag\r\n- remove unneeded `setpos_fail` from fuzz test\r\n- add fuzz test for new `CBufferedFile::Search()` method\r\n- simplify checking for expected exception in unit test (use `BOOST_CHECK_EXCEPTION`)\r\n\r\n@hebasto \r\n> Also some failed tests\r\n\r\nI could not figure out those failures; I don't see how they have any relation to this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740076745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742195617",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-742195617",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 742195617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjE5NTYxNw==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T02:33:48Z",
    "updated_at": "2020-12-10T02:33:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hebasto, thank you for your careful review! I force-pushed your suggestions except for moving `nReadPos % vchBuf.size();` inside the loop. That does reduce the amount of code slightly, but the benchmark test showed that the time per operation consistently increased from 55ns to 67ns. That's still very good (much better than without this PR), but as long as we're changing this code, we may as well make it as fast as possible (within reason). \r\n\r\nI added you as a co-author, hope that's okay. I found better names for `i` and `n`, thanks.\r\n\r\nI took your suggestion to remove the new method, `CBufferedFile::Search()` and leave that for a later PR. That was a good suggestion because now this PR is small and more focused.\r\n\r\nIt will be interesting to see if now the fuzzing passes. I don't understand how you determined (from the [link](https://cirrus-ci.com/build/5192315515961344) you gave) that the problem is in `load_external_block_file`. When I run that locally (with no arguments), it succeeds normally. Is there a way I can run exactly the same test to debug the problem? I see it uses some fuzzing assets; could I download those?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742195617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742348046",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-742348046",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 742348046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjM0ODA0Ng==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T08:04:12Z",
    "updated_at": "2020-12-10T08:04:12Z",
    "author_association": "MEMBER",
    "body": "> It will be interesting to see if now the fuzzing passes. I don't understand how you determined (from the [link](https://cirrus-ci.com/build/5192315515961344) you gave) that the problem is in `load_external_block_file`.\r\n\r\nJob is timed out and the `load_external_block_file` is not listed in the log.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742348046/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/855445200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-855445200",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 855445200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTQ0NTIwMA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-06T18:56:38Z",
    "updated_at": "2021-06-06T18:56:38Z",
    "author_association": "MEMBER",
    "body": "Rebase to get new CI?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/855445200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/857137145",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#issuecomment-857137145",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
    "id": 857137145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzEzNzE0NQ==",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-08T20:56:24Z",
    "updated_at": "2021-06-08T20:56:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/857137145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467746632",
    "pull_request_review_id": 464028727,
    "id": 467746632,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc0NjYzMg==",
    "diff_hunk": "@@ -832,12 +832,21 @@ class CBufferedFile\n \n     //! search for a given byte in the stream, and remain positioned on it\n     void FindByte(char ch) {\n+        // start is the index into vchBuf[] at which to start searching\n+        size_t start = nReadPos % vchBuf.size();\n         while (true) {\n             if (nReadPos == nSrcPos)\n                 Fill();\n-            if (vchBuf[nReadPos % vchBuf.size()] == ch)\n-                break;\n-            nReadPos++;\n+            size_t n = vchBuf.size() - start;\n+            if (n > nSrcPos - nReadPos)\n+                n = nSrcPos - nReadPos;",
    "path": "src/streams.h",
    "position": null,
    "original_position": 14,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "ab412ec3071dd056bad362aa78c88d02d5a46c3b",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, join with above line.",
    "created_at": "2020-08-10T08:09:41Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r467746632",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467746632"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r467746632"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467746632/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 842,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468123489",
    "pull_request_review_id": 464505498,
    "id": 468123489,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEyMzQ4OQ==",
    "diff_hunk": "@@ -445,4 +445,29 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+// This test helps compare the performance of FindByte() implementations;\n+// its functionality is tested in the test above. Set the repetition\n+// limit (500) to a larger value and then time the test.\n+BOOST_AUTO_TEST_CASE(streams_findbyte)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    const size_t fileSize = 200;\n+    uint8_t b = 0;\n+    for (size_t i = 0; i < fileSize; ++i) {\n+        fwrite(&b, 1, 1, file);\n+    }\n+    b = 1;\n+    fwrite(&b, 1, 1, file);\n+    rewind(file);\n+    CBufferedFile bf(file, fileSize * 2, fileSize, 0, 0);\n+    for (int rep = 0; rep < 100; ++rep) {",
    "path": "src/test/streams_tests.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "a31aa3255499ba8878ba98e4ac5a22a408c68da0",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't fully understand how the performance increase is so significant, but why not a bench if you're worried about burdening the unit tests? I [tried](https://github.com/gzhao408/bitcoin/blob/c3f7075f538cca89f44923d9489403581650edc8/src/bench/streams_findbyte.cpp) to do this but I must be doing something wrong because I can't seem to reproduce the speedup. \ud83d\ude1e ",
    "created_at": "2020-08-10T19:19:00Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468123489",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468123489"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468123489"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468123489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 463,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468154617",
    "pull_request_review_id": 464554332,
    "id": 468154617,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1NDYxNw==",
    "diff_hunk": "@@ -445,4 +445,29 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+// This test helps compare the performance of FindByte() implementations;\n+// its functionality is tested in the test above. Set the repetition\n+// limit (500) to a larger value and then time the test.\n+BOOST_AUTO_TEST_CASE(streams_findbyte)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    const size_t fileSize = 200;\n+    uint8_t b = 0;\n+    for (size_t i = 0; i < fileSize; ++i) {\n+        fwrite(&b, 1, 1, file);\n+    }\n+    b = 1;\n+    fwrite(&b, 1, 1, file);\n+    rewind(file);\n+    CBufferedFile bf(file, fileSize * 2, fileSize, 0, 0);\n+    for (int rep = 0; rep < 100; ++rep) {",
    "path": "src/test/streams_tests.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "a31aa3255499ba8878ba98e4ac5a22a408c68da0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The performance impact may be very compiler/architecture/stdlib dependent. I'm kind of surprised std::find has optimizations beyond the naive loop implementation in the first place on some platforms, so I certainly wouldn't be surprised if others don't have it.",
    "created_at": "2020-08-10T20:12:43Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468154617",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468154617"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468154617"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468154617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 463,
    "side": "RIGHT",
    "in_reply_to_id": 468123489
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468201206",
    "pull_request_review_id": 464606792,
    "id": 468201206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwMTIwNg==",
    "diff_hunk": "@@ -445,4 +445,29 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+// This test helps compare the performance of FindByte() implementations;\n+// its functionality is tested in the test above. Set the repetition\n+// limit (500) to a larger value and then time the test.\n+BOOST_AUTO_TEST_CASE(streams_findbyte)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    const size_t fileSize = 200;\n+    uint8_t b = 0;\n+    for (size_t i = 0; i < fileSize; ++i) {\n+        fwrite(&b, 1, 1, file);\n+    }\n+    b = 1;\n+    fwrite(&b, 1, 1, file);\n+    rewind(file);\n+    CBufferedFile bf(file, fileSize * 2, fileSize, 0, 0);\n+    for (int rep = 0; rep < 100; ++rep) {",
    "path": "src/test/streams_tests.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "a31aa3255499ba8878ba98e4ac5a22a408c68da0",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@gzhao408, thank you, I wasn't aware of `bench`. I suspect the iteration count, 100, is far too low and the difference is swamped by the noise. I increased the iteration count to 10m (`1e7`) and it showed the expected difference, master: 1,659.30 ns/op, PR: 52.66 ns/op (ratio is about 31).\r\n\r\nI just force-pushed ([diff](https://github.com/bitcoin/bitcoin/compare/a31aa3255499ba8878ba98e4ac5a22a408c68da0..8b07e17cb2a20db8c803cfbb8491ae51a75bd450)) to remove the unit test (which was only for benchmarking, not really testing anything) and cherry-pick Gloria's benchmark. I added one more commit to increase the iteration count.",
    "created_at": "2020-08-10T21:39:25Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468201206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468201206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r468201206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/468201206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 463,
    "side": "RIGHT",
    "in_reply_to_id": 468123489
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479749877",
    "pull_request_review_id": 478189618,
    "id": 479749877,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0OTg3Nw==",
    "diff_hunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+\n+static void FindByte(benchmark::Bench& bench)\n+{\n+    // Setup\n+    FILE* file = fsbridge::fopen(\"streams_tmp\", \"w+b\");",
    "path": "src/bench/streams_findbyte.cpp",
    "position": 13,
    "original_position": 12,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "8f2e8c27bb9bb3ebb9f094129ce4a6019c46cfc0",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could we maybe use something like `memfd_create(2)` for the benchmark, to decrease I/O noise?\r\nAnyone knows if there is a windows equivalent or a higher abstraction in boost::filesystem?\r\n",
    "created_at": "2020-08-30T10:09:09Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r479749877",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479749877"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r479749877"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479749877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 13,
    "original_line": 13,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479750181",
    "pull_request_review_id": 478189834,
    "id": 479750181,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1MDE4MQ==",
    "diff_hunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+\n+static void FindByte(benchmark::Bench& bench)\n+{\n+    // Setup\n+    FILE* file = fsbridge::fopen(\"streams_tmp\", \"w+b\");",
    "path": "src/bench/streams_findbyte.cpp",
    "position": 13,
    "original_position": 12,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "8f2e8c27bb9bb3ebb9f094129ce4a6019c46cfc0",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`fmemopen(3)` also looks interesting",
    "created_at": "2020-08-30T10:12:09Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r479750181",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479750181"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r479750181"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479750181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 13,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 479749877
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479751366",
    "pull_request_review_id": 478190588,
    "id": 479751366,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1MTM2Ng==",
    "diff_hunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+\n+static void FindByte(benchmark::Bench& bench)\n+{\n+    // Setup\n+    FILE* file = fsbridge::fopen(\"streams_tmp\", \"w+b\");",
    "path": "src/bench/streams_findbyte.cpp",
    "position": 13,
    "original_position": 12,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "8f2e8c27bb9bb3ebb9f094129ce4a6019c46cfc0",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe this can give us that? https://www.boost.org/doc/libs/1_72_0/libs/iostreams/doc/classes/mapped_file.html",
    "created_at": "2020-08-30T10:24:53Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r479751366",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479751366"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r479751366"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479751366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 13,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 479749877
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480206669",
    "pull_request_review_id": 478715042,
    "id": 480206669,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwNjY2OQ==",
    "diff_hunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+\n+static void FindByte(benchmark::Bench& bench)\n+{\n+    // Setup\n+    FILE* file = fsbridge::fopen(\"streams_tmp\", \"w+b\");",
    "path": "src/bench/streams_findbyte.cpp",
    "position": 13,
    "original_position": 12,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "8f2e8c27bb9bb3ebb9f094129ce4a6019c46cfc0",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for the suggestions, but I don't think this matters, because the file IO (read) occurs only on the very first benchmark loop iteration; after that, the data is in memory and there is no IO at all. Each iteration repositions the stream pointer to zero (`bf.SetPos(0)`) and then searches forward for the value 1 (`bf.FindByte(1)`), which is 200 bytes away. But after the first iteration, all of these bytes are in memory, and we're just moving the position between 0 and 200. \r\n\r\nThe reason for the 200, by the way, is that with random data, searching for a random byte value the average distance would be half of 256. But the data in `blk.dat` files (which is the only use of this code currently) isn't quite random; zero and `0xff` occur more often (and we never search for those values). So I guessed that 200 is close to a typical distance that this function would move through before finding the requested byte. Maybe I should explain these points in a comment in `bench/streams_findbyte.cpp`.",
    "created_at": "2020-08-31T15:28:02Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r480206669",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480206669"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r480206669"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480206669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 13,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 479749877
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536789178",
    "pull_request_review_id": 545591220,
    "id": 536789178,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc4OTE3OA==",
    "diff_hunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+\n+static void FindByte(benchmark::Bench& bench)\n+{\n+    // Setup\n+    FILE* file = fsbridge::fopen(\"streams_tmp\", \"w+b\");\n+    const size_t fileSize = 200;\n+    uint8_t b = 0;\n+    for (size_t i = 0; i < fileSize; ++i) {\n+        fwrite(&b, 1, 1, file);\n+    }\n+    b = 1;\n+    fwrite(&b, 1, 1, file);\n+    rewind(file);\n+    CBufferedFile bf(file, fileSize * 2, fileSize, 0, 0);\n+\n+    bench.minEpochIterations(1e7).run([&] {\n+        bf.SetPos(0);\n+        bf.FindByte(1);\n+    });\n+\n+    // Cleanup\n+    bf.fclose();\n+    fs::remove(\"streams_tmp\");\n+}\n+\n+BENCHMARK(FindByte);",
    "path": "src/bench/streams_findbyte.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "b576994bea620c7d065dd558c93222391151c9ff",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "b576994bea620c7d065dd558c93222391151c9ff, nit: Add EOL\r\n![Screenshot from 2020-12-05 16-27-26](https://user-images.githubusercontent.com/32963518/101245636-d490ce00-3716-11eb-87e3-090b962e850f.png)\r\n",
    "created_at": "2020-12-05T14:28:07Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r536789178",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536789178"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r536789178"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536789178/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 33,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536790148",
    "pull_request_review_id": 545591220,
    "id": 536790148,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc5MDE0OA==",
    "diff_hunk": "@@ -329,12 +329,80 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n     // by the rewind window (relative to our farthest read position, 40).\n     BOOST_CHECK(bf.GetPos() <= 30);\n \n+    bf.FindByte(31);\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 31U);\n+\n+    // If the byte isn't found, end of file.\n+    try {\n+        bf.FindByte(99);\n+        BOOST_CHECK(false);\n+    } catch (const std::exception& e) {\n+        BOOST_CHECK(strstr(e.what(),\n+                           \"CBufferedFile::Fill: end of file\") != nullptr);\n+    }",
    "path": "src/test/streams_tests.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "134de90f2b64ede6dbd812a9a88b00708685394d",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "134de90f2b64ede6dbd812a9a88b00708685394d\r\n```suggestion\r\n    BOOST_CHECK_EXCEPTION(bf.FindByte(99), std::ios_base::failure, HasReason(\"CBufferedFile::Fill: end of file\"));```",
    "created_at": "2020-12-05T14:30:19Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r536790148",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536790148"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r536790148"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536790148/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 336,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 342,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536790336",
    "pull_request_review_id": 545591220,
    "id": 536790336,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc5MDMzNg==",
    "diff_hunk": "@@ -329,12 +329,80 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n     // by the rewind window (relative to our farthest read position, 40).\n     BOOST_CHECK(bf.GetPos() <= 30);\n \n+    bf.FindByte(31);\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 31U);\n+\n+    // If the byte isn't found, end of file.\n+    try {\n+        bf.FindByte(99);\n+        BOOST_CHECK(false);\n+    } catch (const std::exception& e) {\n+        BOOST_CHECK(strstr(e.what(),\n+                           \"CBufferedFile::Fill: end of file\") != nullptr);\n+    }\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 40U);\n+    BOOST_CHECK(bf.eof());\n+\n+    // Test Search(), it leaves the postion just after the found bytes.\n+    BOOST_CHECK(bf.SetPos(30));\n+    {\n+        unsigned char needle[2] = {32, 33};\n+        bf.Search(needle, 2);\n+    }\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 34U);\n+\n+    // The bytes must be consecutive, this won't be found.\n+    {\n+        unsigned char needle[2] = {36, 38};\n+        try {\n+            bf.Search(needle, 2);\n+            BOOST_CHECK(false);\n+        } catch (const std::exception& e) {\n+            BOOST_CHECK(strstr(e.what(),\n+                               \"CBufferedFile::Fill: end of file\") != nullptr);\n+        }",
    "path": "src/test/streams_tests.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "134de90f2b64ede6dbd812a9a88b00708685394d",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "134de90f2b64ede6dbd812a9a88b00708685394d\r\n```suggestion\r\n        BOOST_CHECK_EXCEPTION(bf.Search(needle, 2), std::ios_base::failure, HasReason(\"CBufferedFile::Fill: end of file\"));\r\n```",
    "created_at": "2020-12-05T14:30:47Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r536790336",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536790336"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r536790336"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536790336/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 357,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 363,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536812913",
    "pull_request_review_id": 545596887,
    "id": 536812913,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgxMjkxMw==",
    "diff_hunk": "@@ -718,7 +718,7 @@ class CBufferedFile\n     uint64_t nReadPos;    //!< how many bytes have been read from this\n     uint64_t nReadLimit;  //!< up to which position we're allowed to read\n     uint64_t nRewind;     //!< how many bytes we guarantee to rewind\n-    std::vector<char> vchBuf; //!< the buffer\n+    std::vector<unsigned char> vchBuf; //!< the buffer\n \n protected:",
    "path": "src/streams.h",
    "position": null,
    "original_position": 7,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "134de90f2b64ede6dbd812a9a88b00708685394d",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "While the `CBufferedFile` class is already touched, maybe make `CBufferedFile::Fill` private by removing this line?",
    "created_at": "2020-12-05T15:54:43Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r536812913",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536812913"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r536812913"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536812913/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 686,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538435590",
    "pull_request_review_id": 547288554,
    "id": 538435590,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQzNTU5MA==",
    "diff_hunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>",
    "path": "src/bench/streams_findbyte.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "918de11daa4be9995122c5e4b0284285b27e0e8f",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "b576994bea620c7d065dd558c93222391151c9ff\r\n```suggestion\r\n#include <bench/bench.h>\r\n\r\n#include <fs.h>\r\n#include <stdio.h>\r\n#include <streams.h>\r\n```",
    "created_at": "2020-12-08T14:31:20Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r538435590",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538435590"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r538435590"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538435590/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 5,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 7,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538437643",
    "pull_request_review_id": 547288554,
    "id": 538437643,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQzNzY0Mw==",
    "diff_hunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+\n+static void FindByte(benchmark::Bench& bench)\n+{\n+    // Setup\n+    FILE* file = fsbridge::fopen(\"streams_tmp\", \"w+b\");\n+    const size_t fileSize = 200;",
    "path": "src/bench/streams_findbyte.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "918de11daa4be9995122c5e4b0284285b27e0e8f",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "b576994bea620c7d065dd558c93222391151c9ff\r\n```suggestion\r\n    const size_t file_size = 200;\r\n```",
    "created_at": "2020-12-08T14:33:08Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r538437643",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538437643"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r538437643"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538437643/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538449929",
    "pull_request_review_id": 547288554,
    "id": 538449929,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ0OTkyOQ==",
    "diff_hunk": "@@ -831,13 +830,41 @@ class CBufferedFile\n     }\n \n     //! search for a given byte in the stream, and remain positioned on it\n-    void FindByte(char ch) {\n+    void FindByte(unsigned char ch)\n+    {\n+        // i is the index into vchBuf[] at which to start searching\n+        size_t i = nReadPos % vchBuf.size();\n         while (true) {\n-            if (nReadPos == nSrcPos)\n-                Fill();\n-            if (vchBuf[nReadPos % vchBuf.size()] == ch)\n-                break;\n+            if (nReadPos == nSrcPos) Fill();\n+            size_t n = vchBuf.size() - i;\n+            if (n > nSrcPos - nReadPos) n = nSrcPos - nReadPos;\n+            auto it_start = vchBuf.begin() + i;\n+            auto it_find = std::find(it_start, it_start + n, ch);\n+            size_t inc = it_find - it_start;\n+            nReadPos += inc;\n+            if (inc < n) break;\n+            i += inc;\n+            if (i >= vchBuf.size()) i = 0;\n+        }",
    "path": "src/streams.h",
    "position": null,
    "original_position": 35,
    "commit_id": "eac3bb96b555d9955dfdccaf1cbd67806b9c81be",
    "original_commit_id": "918de11daa4be9995122c5e4b0284285b27e0e8f",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "865ed617512edb9e62dcce61aa48818c4ef3a295\r\n\r\nSome `if` statements could be eliminated :)\r\n\r\n```\r\n    void FindByte(unsigned char ch)\r\n    {\r\n        while (true) {\r\n            if (nReadPos == nSrcPos) Fill();\r\n            const size_t i = nReadPos % vchBuf.size();\r\n            const size_t n = std::min<size_t>(vchBuf.size() - i, nSrcPos - nReadPos);\r\n            const auto it_start = vchBuf.begin() + i;\r\n            const auto it_find = std::find(it_start, it_start + n, ch);\r\n            const size_t inc = it_find - it_start;\r\n            nReadPos += inc;\r\n            if (inc < n) break;\r\n        }\r\n    }\r\n```\r\n\r\nIt seems like names `i` and `n` could be more descriptive, no? But I have no a particular suggestion :)",
    "created_at": "2020-12-08T14:44:15Z",
    "updated_at": "2020-12-10T01:53:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r538449929",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538449929"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19690#discussion_r538449929"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/538449929/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 835,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 848,
    "side": "RIGHT"
  }
]