fanquake,2021-06-03 03:40:06,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22130#issuecomment-853537848,853537848,
brunoerg,2021-06-03 11:19:00,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22130#issuecomment-853793071,853793071,
theStack,2021-06-05 17:11:20,Pushed another commit that improves the documentation of `chain_transaction` by changing to docstring format and describing its purpose and return value in more detail (thanks to @mjdietzx for reviewing: https://github.com/bitcoin/bitcoin/pull/22130#discussion_r644811694).,https://github.com/bitcoin/bitcoin/pull/22130#issuecomment-855268220,855268220,
mjdietzx,2021-06-07 15:59:05,crACK 489860e2997c9568bba1f214325b3abba3097f74,https://github.com/bitcoin/bitcoin/pull/22130#issuecomment-856062763,856062763,
theStack,2021-06-08 15:28:07,Rebased on master.,https://github.com/bitcoin/bitcoin/pull/22130#issuecomment-856871117,856871117,
mjdietzx,2021-06-08 15:35:42,reACK 01eedf3821f2c3ee6bab8733f8549531c844add7,https://github.com/bitcoin/bitcoin/pull/22130#issuecomment-856877065,856877065,
theStack,2021-06-13 16:03:31,@klementtan: thanks for reviewing! It seems like the commit-hash you ACKed doesn't belong to this PR?,https://github.com/bitcoin/bitcoin/pull/22130#issuecomment-860234093,860234093,
klementtan,2021-06-13 16:12:29,"> @klementtan: thanks for reviewing! It seems like the commit-hash you ACKed doesn't belong to this PR?\n\nMy bad had a typo mistake ðŸ˜…. Updated the commit",https://github.com/bitcoin/bitcoin/pull/22130#issuecomment-860235393,860235393,
mjdietzx,2021-06-03 13:52:02,"I'm a little confused bc it seems like this function is not returning the amount sent, but is returning the amount sent for a single output of the tx. So really the amount sent in this transaction is `send_value * num_outputs` right?\n\nIt doesn't seem like the existing tests rely on this either way (for the most part, and when it does `num_outputs` is usually 1 so it doesn't really matter), but",https://github.com/bitcoin/bitcoin/pull/22130#discussion_r644811694,644811694,test/functional/mempool_package_onemore.py
theStack,2021-06-05 17:18:56,"Thanks for reviewing, good point! From what I see in the test `mempool_packages.py`, the returned amount per output is currently expected (e.g. at one place chain_transaction is called with 10 outputs and then the transactions package is constructed with the returned txid and amount per output). I updated the documentation accordingly, hopefully increasing the clarity.",https://github.com/bitcoin/bitcoin/pull/22130#discussion_r646014479,646014479,test/functional/mempool_package_onemore.py
mjdietzx,2021-06-07 16:12:32,"Kind of a nit, but what are you thoughts on taking `utxos` as an input param instead of both `parent_txids` and `vouts`? Then you can get rid of:\n```python\nfor (txid, vout) in zip(parent_txids, vouts):\n  inputs.append({'txid' : txid, 'vout' : vout})\n```\nas `utxos` would be of the form: `[{ 'txid': '9d5b026e3dfe0d6c9ac95fc21d7f5802e046d85066c6df92fdb407471ace3b0c', 'vout': 0 }, ...]`\n\",https://github.com/bitcoin/bitcoin/pull/22130#discussion_r646740786,646740786,test/functional/test_framework/util.py
theStack,2021-06-08 15:27:23,"Thanks for the suggestion, I think taking `utxos` as an input would be a good idea, leading to a cleaner interface and also improving readability. Right now though, at many places it would also need to introduce longer code in test, due to the need to repeatedly craft together the utxo dictionary objects.\n\nProbably this is a good candidate for a follow-up PR that also takes care of the return ",https://github.com/bitcoin/bitcoin/pull/22130#discussion_r647554816,647554816,test/functional/test_framework/util.py
mjdietzx,2021-06-08 15:35:07,"Ok, agreed that this should be a follow up PR if anything. I'll circle back around to this some time after this PR is merged, and if no one has looked at it then I may take a whack at it",https://github.com/bitcoin/bitcoin/pull/22130#discussion_r647561702,647561702,test/functional/test_framework/util.py
