jonasschnelli,2016-06-26T20:07:33Z,utACK 0c1ed2a86928cb1b086b8f7ae9abeee09643a05f (once nit is solved)\n,https://github.com/bitcoin/bitcoin/pull/8272#issuecomment-228619825,228619825,
laanwj,2016-08-03T11:06:48Z,"I think we should simply remove the dummy argument for 0.14, and change the API, and mention that in the release notes.\nTo try to accommodate the old usage is unnecessary complexity, especially with regard to `bitcoin-cli` parsing.\n",https://github.com/bitcoin/bitcoin/pull/8272#issuecomment-237208112,237208112,
theuni,2016-08-03T19:50:45Z,Agree with @laanwj\n,https://github.com/bitcoin/bitcoin/pull/8272#issuecomment-237351083,237351083,
sipa,2016-08-03T20:05:52Z,Updated to just remove it.\n,https://github.com/bitcoin/bitcoin/pull/8272#issuecomment-237355438,237355438,
laanwj,2016-08-04T13:04:30Z,"Also need to get rid of this line in `src/rpc/client.cpp`:\n\n```\n{ ""getaddednodeinfo"", 0 }\n```\n",https://github.com/bitcoin/bitcoin/pull/8272#issuecomment-237546385,237546385,
sipa,2016-09-01T13:52:37Z,"Rebased, added to release nodes, and removed the rpccient.cpp line.\n",https://github.com/bitcoin/bitcoin/pull/8272#issuecomment-244085242,244085242,
laanwj,2016-09-01T14:23:55Z,This still shows as conflicted. Did we merge something that conflicted while you were rebasing?\n,https://github.com/bitcoin/bitcoin/pull/8272#issuecomment-244094902,244094902,
sipa,2016-09-01T14:38:51Z,@laanwj yes... #8638 conflicted in the release notes.\n,https://github.com/bitcoin/bitcoin/pull/8272#issuecomment-244099708,244099708,
jonasschnelli,2016-06-26T20:07:05Z,use `params[0].isStr()` instead of `params[0].type() == UniValue::VSTR`?\n,https://github.com/bitcoin/bitcoin/pull/8272#discussion_r68508676,68508676,src/rpc/net.cpp
laanwj,2016-06-27T11:16:01Z,"Was first a bit doubtful about this, and going to suggest to only allow skipping the dummy argument when the second argument is not provided. But all in all I like this trick. This allows a future path to getting rid of the argument completely.\n",https://github.com/bitcoin/bitcoin/pull/8272#discussion_r68559513,68559513,src/rpc/net.cpp
laanwj,2016-06-27T11:17:27Z,Although I'm not sure how this interacts with bitcoin-cli's conversion table.\n,https://github.com/bitcoin/bitcoin/pull/8272#discussion_r68559651,68559651,src/rpc/net.cpp
sipa,2016-06-27T11:17:48Z,"One downside I just realized: this likely does not work in bitcoin-cli\nbecause it will try to interpret the first argument as JSON.\n\nWe could remove the parsing, though, which would make old-style calls fail.\n",https://github.com/bitcoin/bitcoin/pull/8272#discussion_r68559712,68559712,src/rpc/net.cpp
laanwj,2016-06-27T11:25:10Z,"Yes, that'd be a possible solution, it would break backwards compat for bitcoin-cli but not for direct JSON-RPC users.\nOr we could go all the way, remove backwards compatibility completely and just mention it in the release notes. After all this is a rarely-used call.\n",https://github.com/bitcoin/bitcoin/pull/8272#discussion_r68560542,68560542,src/rpc/net.cpp
