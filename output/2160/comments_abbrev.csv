BitcoinPullTester,2013-01-09T10:32:32Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/635c3829c6a4ebae311d43881ea88265e444a4c7 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12038819,12038819,
gmaxwell,2013-01-09T18:10:46Z,Whats the motivation here? (I have no real objection to it— it's probably a good idea.. though our whole adjustedtime handling needs some love— I'm just curious what motivated it)\n\n(As far as love goes: we should probably forget adjustments from peers which we are no longer connected to— and we should probably do something(???) to address the attack where we accept inbound and a hostile party ma,https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12058473,12058473,
gavinandresen,2013-01-09T21:09:47Z,"Here are the issues I think about for this seemingly trivial one-line change:\n\nIs adjusted time valid before you're connected to any peers?  Check code:  yes, will be current time.\n\nAre there any issues with calling GetAdjustedTime from multiple threads? Check code: nTimeOffSet in util is not protected by a mutex, so there could be an issue, although worst-case would just be an incorrect time ",https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12066773,12066773,
sipa,2013-01-09T21:33:19Z,Is the adjusted time that interesting? I think that the measured adjustment itself is more useful.\n,https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12067823,12067823,
petertodd,2013-01-09T22:30:42Z,"gmaxwell: I was just experimenting with nLockTime and noticed that there currently isn't any way to get the network adjusted time over RPC. (or even at all?) In theory a nLockTime-using application might care, but 1) none exist yet and 2) mining is too unpredictable for it to matter much and 3) what's more interesting is to know if your clock is probably way off. I added the data to getinfo simply",https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12070411,12070411,
petertodd,2013-01-09T22:52:42Z,"gmaxwell: Forgetting sounds reasonable. Regarding pushing: well, what's the big deal? The acceptance window is two hours, and AddTimeData doesn't allow nTimeOffset to be larger than +-70minutes. Lets suppose it gets pushed back as far as possible: on reception we reject a block with a time > 2 hours from now, thus so long as our clock is less than 50mins behind we're ok. (the mining simply ensures",https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12071381,12071381,
gmaxwell,2013-01-10T02:35:51Z,"The timestamps must go forward eventually as they must be greater than the median of the last ten, and stacking them all up would make the difficulty skyrocket. Sadly, they can't really be /forced/ more tightly than that without endangering convergence. If it were ever an issue one could implement a soft (non-forking) that says nodes will delay forward a block from more than X minutes in the past ",https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12078086,12078086,
petertodd,2013-01-11T12:07:32Z,@sipa: Modified to return the offset itself.\n,https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12141641,12141641,
BitcoinPullTester,2013-01-24T04:23:53Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8686f6467c9db2606706baca33842c97ff7621f8 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2160#issuecomment-12636612,12636612,
