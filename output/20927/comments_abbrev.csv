DrahtBot,2021-01-13 18:47:17,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20724 (Cleanup of -debug=net log messages by ajtowns)\n* #20721 (Net: Move ping data to net_processing by jnewbery)\n* #2",https://github.com/bitcoin/bitcoin/pull/20927#issuecomment-759645495,759645495,
practicalswift,2021-01-14 11:41:39,"Concept ACK: I find the suggested version easier to reason about.\n\nAlso thanks for switching to `CNode*` to `CNode&`: it makes the currently implicit precondition explicit. As we all know by know: explicit is much better than implicit :)",https://github.com/bitcoin/bitcoin/pull/20927#issuecomment-760144087,760144087,
jnewbery,2021-01-14 13:01:34,I've updated the commit message on the second commit to give a bit more context about why the change to the return type is an improvement.,https://github.com/bitcoin/bitcoin/pull/20927#issuecomment-760182523,760182523,
jnewbery,2021-01-16 10:31:11,"Thanks for the review @mjdietzx!\n\n> I didn't find changing the ordering of the if statements to be clearer, but I don't feel strongly about it\n\nMaybe it's just me, but I find that standardizing all time comparisons to `now <` or `now >` (or in English - ""it is [now] before/after the timeout"") makes it easier to intuitively understand the comparisons. I don't feel strongly and I'm happy to ",https://github.com/bitcoin/bitcoin/pull/20927#issuecomment-761540749,761540749,
jnewbery,2021-01-19 10:51:41,I've pushed a small update to make the `CNode&` argument const now that the function isn't mutating it.,https://github.com/bitcoin/bitcoin/pull/20927#issuecomment-762763554,762763554,
MarcoFalke,2021-01-22 12:06:44,this can be worked around by mocking m_peer_connect_timeout to a high value,https://github.com/bitcoin/bitcoin/pull/20927#discussion_r562588090,562588090,src/net.cpp
