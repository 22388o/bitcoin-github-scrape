[
  {
    "sha": "714e4ad13d805d45210d390fae83790360f47d9a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTRlNGFkMTNkODA1ZDQ1MjEwZDM5MGZhZTgzNzkwMzYwZjQ3ZDlh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-11T14:23:32Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-11T14:23:32Z"
      },
      "message": "AddToWalletIfInvolvingMe should test pIndex, not posInBlock",
      "tree": {
        "sha": "6eb97bf76e0e1242d2253f0831b912c10c8bf5b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6eb97bf76e0e1242d2253f0831b912c10c8bf5b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/714e4ad13d805d45210d390fae83790360f47d9a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/714e4ad13d805d45210d390fae83790360f47d9a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/714e4ad13d805d45210d390fae83790360f47d9a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/714e4ad13d805d45210d390fae83790360f47d9a/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "67023e9004ba843218bee16bc821e955faf0d394",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67023e9004ba843218bee16bc821e955faf0d394",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/67023e9004ba843218bee16bc821e955faf0d394"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "d33dad28143da12066e009c206689b9323d22aef",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/714e4ad13d805d45210d390fae83790360f47d9a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/714e4ad13d805d45210d390fae83790360f47d9a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=714e4ad13d805d45210d390fae83790360f47d9a",
        "patch": "@@ -957,9 +957,9 @@ bool CWallet::LoadToWallet(const CWalletTx& wtxIn)\n /**\n  * Add a transaction to the wallet, or update it.  pIndex and posInBlock should\n  * be set when the transaction was known to be included in a block.  When\n- * posInBlock = SYNC_TRANSACTION_NOT_IN_BLOCK (-1) , then wallet state is not\n- * updated in AddToWallet, but notifications happen and cached balances are\n- * marked dirty.\n+ * pIndex == NULL, then wallet state is not updated in AddToWallet, but\n+ * notifications happen and cached balances are marked dirty.\n+ *\n  * If fUpdate is true, existing transactions will be updated.\n  * TODO: One exception to this is that the abandoned state is cleared under the\n  * assumption that any further notification of a transaction that was considered\n@@ -973,7 +973,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n     {\n         AssertLockHeld(cs_wallet);\n \n-        if (posInBlock != -1) {\n+        if (pIndex != NULL) {\n             BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n                 std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n                 while (range.first != range.second) {\n@@ -993,7 +993,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n             CWalletTx wtx(this, ptx);\n \n             // Get merkle branch if transaction was found in a block\n-            if (posInBlock != -1)\n+            if (pIndex != NULL)\n                 wtx.SetMerkleBranch(pIndex, posInBlock);\n \n             return AddToWallet(wtx, false);"
      }
    ]
  },
  {
    "sha": "d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGNkMGJkNmQ5OWJkMjhjYTAwMTRhNzE1YWQyYjU2NWIzZjc4N2E0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-11T14:34:30Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-11T21:17:46Z"
      },
      "message": "Make CWallet::SyncTransactions() interface friendlier",
      "tree": {
        "sha": "0d20067bf9fe16238e1266b023e78c18404eef81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d20067bf9fe16238e1266b023e78c18404eef81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "714e4ad13d805d45210d390fae83790360f47d9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/714e4ad13d805d45210d390fae83790360f47d9a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/714e4ad13d805d45210d390fae83790360f47d9a"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "d938b57b98575c021278b7eed3092d9033d059eb",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4",
        "patch": "@@ -1118,10 +1118,10 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n     }\n }\n \n-void CWallet::SyncTransaction(const CTransactionRef& ptx, const CBlockIndex *pindexBlockConnected, int posInBlock) {\n+void CWallet::SyncTransaction(const CTransactionRef& ptx, const CBlockIndex *pindex, int posInBlock) {\n     const CTransaction& tx = *ptx;\n \n-    if (!AddToWalletIfInvolvingMe(ptx, pindexBlockConnected, posInBlock, true))\n+    if (!AddToWalletIfInvolvingMe(ptx, pindex, posInBlock, true))\n         return; // Not one of ours\n \n     // If a transaction changes 'conflicted' state, that changes the balance\n@@ -1136,7 +1136,7 @@ void CWallet::SyncTransaction(const CTransactionRef& ptx, const CBlockIndex *pin\n \n void CWallet::TransactionAddedToMempool(const CTransactionRef& ptx) {\n     LOCK2(cs_main, cs_wallet);\n-    SyncTransaction(ptx, NULL, -1);\n+    SyncTransaction(ptx);\n }\n \n void CWallet::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex *pindex, const std::vector<CTransactionRef>& vtxConflicted) {\n@@ -1150,7 +1150,7 @@ void CWallet::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const\n     // the notification that the conflicted transaction was evicted.\n \n     for (const CTransactionRef& ptx : vtxConflicted) {\n-        SyncTransaction(ptx, NULL, -1);\n+        SyncTransaction(ptx);\n     }\n     for (size_t i = 0; i < pblock->vtx.size(); i++) {\n         SyncTransaction(pblock->vtx[i], pindex, i);\n@@ -1161,7 +1161,7 @@ void CWallet::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) {\n     LOCK2(cs_main, cs_wallet);\n \n     for (const CTransactionRef& ptx : pblock->vtx) {\n-        SyncTransaction(ptx, NULL, -1);\n+        SyncTransaction(ptx);\n     }\n }\n "
      },
      {
        "sha": "8ebd59f8cd52fac9d88e213b476a37365f0b1ae6",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d0cd0bd6d99bd28ca0014a715ad2b565b3f787a4",
        "patch": "@@ -659,8 +659,9 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     void SyncMetaData(std::pair<TxSpends::iterator, TxSpends::iterator>);\n \n-    /* Used by TransactionAddedToMemorypool/BlockConnected/Disconnected */\n-    void SyncTransaction(const CTransactionRef& tx, const CBlockIndex *pindexBlockConnected, int posInBlock);\n+    /* Used by TransactionAddedToMemorypool/BlockConnected/Disconnected.\n+     * Should be called with pindexBlock and posInBlock if this is for a transaction that is included in a block. */\n+    void SyncTransaction(const CTransactionRef& tx, const CBlockIndex *pindex = NULL, int posInBlock = 0);\n \n     /* the HD chain data model (external chain counters) */\n     CHDChain hdChain;"
      }
    ]
  }
]