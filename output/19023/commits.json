[
  {
    "sha": "fab908f18a080912a0e833f12cccc27f27662e3b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI5MDhmMThhMDgwOTEyYTBlODMzZjEyY2NjYzI3ZjI3NjYyZTNi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-19T23:12:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-19T23:12:41Z"
      },
      "message": "test: Fix intermittent ETIMEDOUT on FreeBSD",
      "tree": {
        "sha": "e667b2e8f092e0f46c56675d05d657e68555772c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e667b2e8f092e0f46c56675d05d657e68555772c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab908f18a080912a0e833f12cccc27f27662e3b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhpZgv/bgUI71jAW5YOvxfkNuPAvH5btQ5eDgKmer3KtX1p7X1Tl198Bzuwhd6D\nzzLRyvsx5YohSxxJuHo3U1OftHVub8UnaCUvxoQ4kqbXwg+63hvgVmuLv7Wo94qs\nusQRJT+jC1MHAf5o4XUZsJ2e6OFwb0AJU+kG5jF1mTTkFpFatw4zWLQqwXH5IBUl\nzRZ4kLAV6Dc7qEUk88Id4Z/8+h3pd5zvMxjWdNmxawc6bA7fWKf9OuNYsD8rd8vQ\nMKegth/aSE32h0VjfNHzrr/7WtLyjHK0tjM5pXlibVcSHjO4898ztudNh5/JOjgC\n1b+yriXuiUQAgWAhTWpJ7J9KbfGtEdiIq/hqaXOg5vEIg85xUPzu897Rs0FwJtlD\neWsEAtIsokRp6GQFwZlfMTKfklIh4cM2YdXB+4b3jcIKbMouJ8U4/FTBZ0TbgEFZ\nVCAAF2r9UNViubxAZGOioUMsbsW268gYQejN1wILwp1hG5dbugmGBbATPsOCxWvH\nIdovyp72\n=5yKp\n-----END PGP SIGNATURE-----",
        "payload": "tree e667b2e8f092e0f46c56675d05d657e68555772c\nparent aa8d76806c74a51ec66e5004394fe9ea8ff0fac4\nauthor MarcoFalke <falke.marco@gmail.com> 1589929965 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1589929961 -0400\n\ntest: Fix intermittent ETIMEDOUT on FreeBSD\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab908f18a080912a0e833f12cccc27f27662e3b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab908f18a080912a0e833f12cccc27f27662e3b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab908f18a080912a0e833f12cccc27f27662e3b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aa8d76806c74a51ec66e5004394fe9ea8ff0fac4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa8d76806c74a51ec66e5004394fe9ea8ff0fac4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aa8d76806c74a51ec66e5004394fe9ea8ff0fac4"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 11,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ebc0501e11c6ffd18269e7c6c021ecfea330ad61",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab908f18a080912a0e833f12cccc27f27662e3b/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab908f18a080912a0e833f12cccc27f27662e3b/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fab908f18a080912a0e833f12cccc27f27662e3b",
        "patch": "@@ -219,7 +219,12 @@ def wait_for_rpc_connection(self):\n                 raise FailedToStartError(self._node_msg(\n                     'bitcoind exited with status {} during initialization'.format(self.process.returncode)))\n             try:\n-                rpc = get_rpc_proxy(rpc_url(self.datadir, self.index, self.chain, self.rpchost), self.index, timeout=self.rpc_timeout, coveragedir=self.coverage_dir)\n+                rpc = get_rpc_proxy(\n+                    rpc_url(self.datadir, self.index, self.chain, self.rpchost),\n+                    self.index,\n+                    timeout=self.rpc_timeout // 2,  # Shorter timeout to allow for one retry in case of ETIMEDOUT\n+                    coveragedir=self.coverage_dir,\n+                )\n                 rpc.getblockcount()\n                 # If the call to getblockcount() succeeds then the RPC connection is up\n                 if self.version_is_at_least(190000):\n@@ -260,7 +265,11 @@ def wait_for_rpc_connection(self):\n                 # succeeds. Try again to properly raise the FailedToStartError\n                 pass\n             except OSError as e:\n-                if e.errno != errno.ECONNREFUSED:  # Port not yet open?\n+                if e.errno == errno.ETIMEDOUT:\n+                    pass  # Treat identical to ConnectionResetError\n+                elif e.errno == errno.ECONNREFUSED:\n+                    pass  # Port not yet open?\n+                else:\n                     raise  # unknown OS error\n             except ValueError as e:  # cookie file not found and no rpcuser or rpcpassword; bitcoind is still starting\n                 if \"No RPC credentials\" not in str(e):"
      }
    ]
  }
]