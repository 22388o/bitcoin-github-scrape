[
  {
    "sha": "fa9da85b7cc759d06bc24854be2bad0ea87b6006",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTlkYTg1YjdjYzc1OWQwNmJjMjQ4NTRiZTJiYWQwZWE4N2I2MDA2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-05-22T01:35:47Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-05-22T10:31:26Z"
      },
      "message": "qa: Initialize lockstack to prevent null pointer deref",
      "tree": {
        "sha": "9aad64e50a0e1522818eb9c2576670be48b7611f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9aad64e50a0e1522818eb9c2576670be48b7611f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9da85b7cc759d06bc24854be2bad0ea87b6006",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJbA/F+AAoJEM4rdWl+aaVI/L8MAJjncZ2elMzOOWO/btIf8EIr\noMAegyxbZT5fHJE5zmv5lL/b938e9k8fiaS9Vvetnvt1D7dzrcCFEq1EBB2tKtmN\nWKFxNxrzkFJ1Nw0mxJzrSi5zxQshclAo7ViFqqUEXLmhFBCtnuefA5DlQK/O1yz6\n3Zi8qYZPz0r4hN0r7L5TuTqKjNPAFOO4zeLml6NJI0VdczqzZ/Nc4KH5owS1e6+w\nTmJxLOc+ct3SI6Y8sMqTF4Ixmk5Fg5kN32OwzXSEYI81Jll1FiN2gy/djP2wOWvx\nhOFgQWhHS4wIpB1Q9dzrrsEQPsQg5Gv1I5iYgqnyYhxXyPaiQMkATVsrGU4J8VNb\nFAJSIeKOklXaTB8KXDvp+QG6nMays7HepO8+/AP10tDs/E+ptHLKKVnExPXA0YqP\nyN/Cq0iLKYGLgG+ScNC1NV4wEbzDJOqMIXLmd+9IOw/rtNqWqQk3ueqN9tJv7xgu\nk6RCTEJugcdIj6UP1LfnV2A3C3ZLNu96j99QYcuojA==\n=FixW\n-----END PGP SIGNATURE-----",
        "payload": "tree 9aad64e50a0e1522818eb9c2576670be48b7611f\nparent d792e47421fcb9ce3b381c1e6d8902777ae3f9f3\nauthor MarcoFalke <falke.marco@gmail.com> 1526952947 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1526985086 -0400\n\nqa: Initialize lockstack to prevent null pointer deref\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9da85b7cc759d06bc24854be2bad0ea87b6006",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9da85b7cc759d06bc24854be2bad0ea87b6006",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9da85b7cc759d06bc24854be2bad0ea87b6006/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d792e47421fcb9ce3b381c1e6d8902777ae3f9f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d792e47421fcb9ce3b381c1e6d8902777ae3f9f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d792e47421fcb9ce3b381c1e6d8902777ae3f9f3"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 8,
      "deletions": 11
    },
    "files": [
      {
        "sha": "28a4e37e68d059eafce41d224dec63323b563071",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 11,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9da85b7cc759d06bc24854be2bad0ea87b6006/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9da85b7cc759d06bc24854be2bad0ea87b6006/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=fa9da85b7cc759d06bc24854be2bad0ea87b6006",
        "patch": "@@ -75,7 +75,7 @@ struct LockData {\n     std::mutex dd_mutex;\n } static lockdata;\n \n-static thread_local std::unique_ptr<LockStack> lockstack;\n+static thread_local LockStack g_lockstack;\n \n static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch, const LockStack& s1, const LockStack& s2)\n {\n@@ -105,21 +105,18 @@ static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch,\n \n static void push_lock(void* c, const CLockLocation& locklocation)\n {\n-    if (!lockstack)\n-        lockstack.reset(new LockStack);\n-\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n-    lockstack->push_back(std::make_pair(c, locklocation));\n+    g_lockstack.push_back(std::make_pair(c, locklocation));\n \n-    for (const std::pair<void*, CLockLocation> & i : (*lockstack)) {\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack) {\n         if (i.first == c)\n             break;\n \n         std::pair<void*, void*> p1 = std::make_pair(i.first, c);\n         if (lockdata.lockorders.count(p1))\n             continue;\n-        lockdata.lockorders[p1] = (*lockstack);\n+        lockdata.lockorders[p1] = g_lockstack;\n \n         std::pair<void*, void*> p2 = std::make_pair(c, i.first);\n         lockdata.invlockorders.insert(p2);\n@@ -130,7 +127,7 @@ static void push_lock(void* c, const CLockLocation& locklocation)\n \n static void pop_lock()\n {\n-    (*lockstack).pop_back();\n+    g_lockstack.pop_back();\n }\n \n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n@@ -146,14 +143,14 @@ void LeaveCritical()\n std::string LocksHeld()\n {\n     std::string result;\n-    for (const std::pair<void*, CLockLocation> & i : *lockstack)\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n         result += i.second.ToString() + std::string(\"\\n\");\n     return result;\n }\n \n void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {\n-    for (const std::pair<void*, CLockLocation> & i : *lockstack)\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n         if (i.first == cs)\n             return;\n     fprintf(stderr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld().c_str());\n@@ -162,7 +159,7 @@ void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine,\n \n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {\n-    for (const std::pair<void*, CLockLocation>& i : *lockstack) {\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack) {\n         if (i.first == cs) {\n             fprintf(stderr, \"Assertion failed: lock %s held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld().c_str());\n             abort();"
      }
    ]
  }
]