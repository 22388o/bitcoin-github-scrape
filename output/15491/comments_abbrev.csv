DrahtBot,2019-02-27T04:43:16Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-467722138,467722138,
Sjors,2019-02-27T08:44:21Z,"tACK e5637b1\n\nI now get a flood of this with one my broken wallets:\n```sh\n2019-02-27T08:32:30Z [default wallet] CDataStream::read(): end of data: unspecified iostream_category error\n2019-02-27T08:32:30Z [default wallet] CDataStream::read(): end of data: unspecified iostream_category error\n2019-02-27T08:32:30Z [default wallet] CDataStream::read(): end of data: unspecified iostream_categ",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-467774664,467774664,
gwillen,2019-02-27T08:54:58Z,"@Sjors Yep, that's the same thing I get -- at least in my case, each of those is a 'keymeta' entry, whose value is missing the final has_key_origin field of CKeyMetaData.\n\nI think the flood of log entries is definitely better than the lack of any, although the volume is a little annoying (but I think it makes sense when encountering a broken wallet file to be verbose about it.)",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-467778118,467778118,
Sjors,2019-02-27T13:56:05Z,"It's fine. This is the type of error that should really _never_ happen in the real world, so indeed when it does, the more information the better.",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-467870380,467870380,
instagibbs,2019-02-27T14:04:47Z,@Sjors frankly these type of changes are mostly for developer's sanity. I've run into similar issues with wallet entries and felt compelled to upstream changes.,https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-467873436,467873436,
instagibbs,2019-02-27T14:05:23Z,utACK https://github.com/bitcoin/bitcoin/pull/15491/commits/e5637b1dcaf6282e159dce5299a6a365df20454c,https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-467873635,467873635,
gwillen,2019-03-04T08:42:07Z,"The idea of committing a broken wallet as a test case makes sense to me, but (1) I seem to recall I've heard people say in past cases that committing a binary wallet file to the repo is not reasonable even as test data, and (2) I definitely don't know how to go about minimizing such a test case, which seems both necessary and painful.",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-469165574,469165574,
gwillen,2019-03-06T04:36:14Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-469965027,469965027,
promag,2019-03-06T09:25:49Z,"Restarted travis job 6 - failed on commit 4e7fea2 with:\n```\n47/118 - rpc_psbt.py failed, Duration: 4 s\nstdout:\n2019-03-06T05:02:08.027000Z TestFramework (INFO): Initializing test directory /tmp/test_runner_₿_🏃_20190306_045534/rpc_psbt_69\n2019-03-06T05:02:11.006000Z TestFramework (ERROR): Assertion failed\nTraceback (most recent call last):\n  File ""/home/travis/build/bitcoin/bitcoin/bu",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-470033694,470033694,
promag,2019-03-06T09:28:57Z,"@gwillen have you seen #15334? Do you think logging the absolute path makes it more clear - instead of ""[default wallet]""?",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-470034673,470034673,
gwillen,2019-03-06T20:20:55Z,"Yeah, I think switching to absolute path would make sense. I assume I just need to switch from GetName to GetPath. Will try it out.",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-470261226,470261226,
gwillen,2019-03-06T21:24:44Z,"Switched to GetPath().string() instead of GetName(). Removed the rename to log_wallet_name, in the interest of minimizing the size of the diff, since it is once again a wallet file name. (I can reinstate the rename if preferred.)",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-470282679,470282679,
gwillen,2019-03-06T21:29:49Z,"Oh, no, this didn't do what I wanted at all. On further inspection of #15334, it doesn't actually log the absolute path, it just logs the filename, but more importantly it doesn't use WalletLocation::GetPath, but it has some other place it's getting this info. GetPath is giving me the wallet _directory_, excluding the filename, it seems.\n\nCan someone clue me in to the exact semantics / interpr",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-470284505,470284505,
ryanofsky,2019-03-06T22:09:06Z,"I'd suggest adding a new method to the [`BerkeleyDatabase`](https://github.com/bitcoin/bitcoin/blob/3515612e069e3730f173a08e60b99f96b174188d/src/wallet/db.h#L107-L196) class:\n\n```diff\n+    fs::path DataFilePath() const { return env->Directory() / strFile; }\n```\n\nand printing the path with `GetDBHandle().DataFilePath().string()`",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-470297193,470297193,
gwillen,2019-03-08T01:57:11Z,"@ryanofsky I ended up taking a slightly different approach, because at this point we do not have a CWallet yet to get a db handle from (we are in the flow to open one.) Instead, I added a free function for normalizing paths.\n\n(I could have accomplished the same thing without adding a function, by calling SplitWalletPath (but it's static, and a slightly weird interface for this) or GetWalletEnv",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-470774300,470774300,
ryanofsky,2019-03-08T11:00:43Z,"Looks good if you s/wallet database file/data file path/ and s/FullWalletFilePath/WalletDataFilePath/.\n\nI'd suggest:\n\n```c++\n/** Given a wallet directory path or legacy file path, return path to main data file in the wallet database. */\nfs::path WalletDataFilePath(const fs::path& wallet_path);\n```\n\nWallet databases are really directories, not files. At a low level, wallet databas",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-470890479,470890479,
gwillen,2019-03-13T00:22:08Z,"Got it, thanks @ryanofsky , makes sense. Changed as suggested!",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-472231544,472231544,
gwillen,2019-03-15T01:53:07Z,"Fixed the PR description.\n\nFixed the brace @promag was complaining about.\n\nNo other changes.",https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-473129659,473129659,
meshcollider,2019-03-18T07:36:52Z,utACK https://github.com/bitcoin/bitcoin/pull/15491/commits/faf369880822188f2738c6f046d9ef14c9585713,https://github.com/bitcoin/bitcoin/pull/15491#issuecomment-473800593,473800593,
MarcoFalke,2019-02-27T02:31:23Z,"```suggestion\n    const std::string& log_wallet_name = (location.GetName() == """" ? ""[default wallet]"" : location.GetName());\n```\n\nnit: I'd feel more safe if this was renamed to `log_wallet_name`",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260571824,260571824,src/wallet/wallet.cpp
instagibbs,2019-02-27T02:32:53Z,"\nalternatively, why not just have `[default wallet]` be the thing set in the constructor for `WalletLocation` and just remove the need for this special casing? \n```suggestion\n    const std::string& walletFile = location.GetName().empty() ? ""[default wallet]"" : location.GetName();\n```",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260572081,260572081,src/wallet/wallet.cpp
gwillen,2019-02-27T02:36:09Z,"that makes sense, I will do that.",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260572634,260572634,src/wallet/wallet.cpp
instagibbs,2019-02-27T02:36:38Z,"```suggestion\n        if (strErr.empty()) {\n```",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260572719,260572719,src/wallet/walletdb.cpp
instagibbs,2019-02-27T02:36:55Z,"```suggestion\n        if (strErr.empty()) {\n```",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260572779,260572779,src/wallet/walletdb.cpp
gwillen,2019-02-27T02:40:31Z,"I was uncomfortable with modifying it in WalletLocation because I don't fully understand all the uses that the 'wallet name' is put to, and it seems like sometimes it's used as a path/filename.",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260573430,260573430,src/wallet/wallet.cpp
gwillen,2019-02-27T02:42:10Z,Done.,https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260573701,260573701,src/wallet/wallet.cpp
gwillen,2019-02-27T02:42:16Z,Done.,https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260573717,260573717,src/wallet/walletdb.cpp
gwillen,2019-02-27T02:42:28Z,Done.,https://github.com/bitcoin/bitcoin/pull/15491#discussion_r260573754,260573754,src/wallet/walletdb.cpp
promag,2019-03-03T16:55:03Z,"nit, `{` here.",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r261876133,261876133,src/wallet/walletdb.cpp
gwillen,2019-03-04T08:39:52Z,"Fixed. It's annoying that the linter doesn't catch stuff like this. Then the wrong version can crop up in the code, and people like me can copy it. :-)",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r261961035,261961035,src/wallet/walletdb.cpp
promag,2019-03-13T00:40:58Z,"nit, `{` should be in new line.",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r264938199,264938199,src/wallet/db.cpp
gwillen,2019-03-15T01:52:31Z,"Curses, done.\n\nI'm afraid my brain is stuck in the wrong style for life, sorry.",https://github.com/bitcoin/bitcoin/pull/15491#discussion_r265826536,265826536,src/wallet/db.cpp
