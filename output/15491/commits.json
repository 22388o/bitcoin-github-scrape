[
  {
    "sha": "faf369880822188f2738c6f046d9ef14c9585713",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWYzNjk4ODA4MjIxODhmMjczOGM2ZjA0NmQ5ZWYxNGM5NTg1NzEz",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-03-06T21:22:41Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2019-03-15T01:49:19Z"
      },
      "message": "wallet: Improve log output for errors during load\n\nWhen loading the wallet, display the entire path in error messages, instead of\nthe name (which, for the default wallet, is the empty string.)\n\nWhen an exception occurs during wallet loading, display e.what() if possible,\ninstead of nothing.",
      "tree": {
        "sha": "e16897d77ccb2c21bb4ba22ead17925767bcb50f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e16897d77ccb2c21bb4ba22ead17925767bcb50f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf369880822188f2738c6f046d9ef14c9585713",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf369880822188f2738c6f046d9ef14c9585713",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf369880822188f2738c6f046d9ef14c9585713",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf369880822188f2738c6f046d9ef14c9585713/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4952a953585e99477a89989b009749e40c173013",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4952a953585e99477a89989b009749e40c173013",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4952a953585e99477a89989b009749e40c173013"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 21,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6a326bfd97ccc3e5541d230ed6c35d499f38e2f1",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf369880822188f2738c6f046d9ef14c9585713/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf369880822188f2738c6f046d9ef14c9585713/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=faf369880822188f2738c6f046d9ef14c9585713",
        "patch": "@@ -84,6 +84,14 @@ bool IsWalletLoaded(const fs::path& wallet_path)\n     return database && database->IsDatabaseLoaded(database_filename);\n }\n \n+fs::path WalletDataFilePath(const fs::path& wallet_path)\n+{\n+    fs::path env_directory;\n+    std::string database_filename;\n+    SplitWalletPath(wallet_path, env_directory, database_filename);\n+    return env_directory / database_filename;\n+}\n+\n /**\n  * @param[in] wallet_path Path to wallet directory. Or (for backwards compatibility only) a path to a berkeley btree data file inside a wallet directory.\n  * @param[out] database_filename Filename of berkeley btree data file inside the wallet directory."
      },
      {
        "sha": "762fb83a2fcbd54c9fb79589961d2bb2c692666e",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf369880822188f2738c6f046d9ef14c9585713/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf369880822188f2738c6f046d9ef14c9585713/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=faf369880822188f2738c6f046d9ef14c9585713",
        "patch": "@@ -101,6 +101,9 @@ class BerkeleyEnvironment\n /** Return whether a wallet database is currently loaded. */\n bool IsWalletLoaded(const fs::path& wallet_path);\n \n+/** Given a wallet directory path or legacy file path, return path to main data file in the wallet database. */\n+fs::path WalletDataFilePath(const fs::path& wallet_path);\n+\n /** Get BerkeleyEnvironment and database filename given a wallet path. */\n std::shared_ptr<BerkeleyEnvironment> GetWalletEnv(const fs::path& wallet_path, std::string& database_filename);\n "
      },
      {
        "sha": "93f413293d88044ca271e8d6c140e4fae8270e91",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf369880822188f2738c6f046d9ef14c9585713/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf369880822188f2738c6f046d9ef14c9585713/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=faf369880822188f2738c6f046d9ef14c9585713",
        "patch": "@@ -4074,7 +4074,7 @@ bool CWallet::Verify(interfaces::Chain& chain, const WalletLocation& location, b\n \n std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain, const WalletLocation& location, uint64_t wallet_creation_flags)\n {\n-    const std::string& walletFile = location.GetName();\n+    const std::string& walletFile = WalletDataFilePath(location.GetPath()).string();\n \n     // needed to restore wallet transaction meta data after -zapwallettxes\n     std::vector<CWalletTx> vWtx;"
      },
      {
        "sha": "5149bb026310dd4f8f77ec486049b95485ef07d1",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf369880822188f2738c6f046d9ef14c9585713/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf369880822188f2738c6f046d9ef14c9585713/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=faf369880822188f2738c6f046d9ef14c9585713",
        "patch": "@@ -422,8 +422,15 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 strType != \"minversion\" && strType != \"acentry\") {\n             wss.m_unknown_records++;\n         }\n-    } catch (...)\n-    {\n+    } catch (const std::exception& e) {\n+        if (strErr.empty()) {\n+            strErr = e.what();\n+        }\n+        return false;\n+    } catch (...) {\n+        if (strErr.empty()) {\n+            strErr = \"Caught unknown exception in ReadKeyValue\";\n+        }\n         return false;\n     }\n     return true;"
      }
    ]
  }
]