[
  {
    "sha": "fa6a0f9a7c00015e70c9805faf45685ac300f61e",
    "node_id": "C_kwDOABII59oAKGZhNmEwZjlhN2MwMDAxNWU3MGM5ODA1ZmFmNDU2ODVhYzMwMGY2MWU",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-23T17:01:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-25T11:30:07Z"
      },
      "message": "Remove GetSpendHeight\n\nIt is unclear what the goal of the helper is, as the caller already\nknows the spend height before calling the helper.\n\nAlso, in case the coins view is corrupted, LookupBlockIndex will return\nnullptr. Dereferencing a nullptr is UB.\n\nFix both issues by removing it. Also, add a sanity check, which aborts\nif the coins view is corrupted.",
      "tree": {
        "sha": "50d45a2b2e9def40490f9444ea5b600d17fcb15e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50d45a2b2e9def40490f9444ea5b600d17fcb15e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6a0f9a7c00015e70c9805faf45685ac300f61e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj0aAwAs7LVXMR5vHYXM1VaqxpyVkFSCRGfeQ1MvaiS2l8D9ZYkr84v3h0zUUD3\nDy4n/GpIVpYQPT7BDZ72uP8LcUyYLHtBiCcH5thapZ0GeizdnBpBuISyegqNP7Lq\njBbYf3kYeLuczFcCluFi0rNjrWMpKNFKdxtMLVZtJSnp74g1UkpGly6F2snGAULw\nQvQtpLZMkHicXGppxwqq7M4+IJ4j7pFM6yruYhzSvpISkJlshOOZow2o3SfnkI/q\nYoCutYTXytQ4jlI5b8wJKTeiWcJmJktaewfaAGiHNCtN21xWE8/cvXrM8Bgwrgny\nNVN7dfdgd4LZSZakzWh/gv7BOE+qfeBeG6hxUyJ3w0KU+VrfoDS5poGgVL/9++VL\nd1JCwnto178PMCzmRI5C1hpkzG88WZ4rxZCRqWjWmxEnfTvTjJJD/pHB3xHFhOxm\nXo8OUQVytwYtpboyVS83aU0xuesN0BqFtA4IpD8HJ/mD21qxSs+MzsxRTg/JDrqq\n3swIC7F+\n=PvyV\n-----END PGP SIGNATURE-----",
        "payload": "tree 50d45a2b2e9def40490f9444ea5b600d17fcb15e\nparent 76392b042e98fcdb3b7ce3c2023003910326d14e\nauthor MarcoFalke <falke.marco@gmail.com> 1637686911 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637839807 +0100\n\nRemove GetSpendHeight\n\nIt is unclear what the goal of the helper is, as the caller already\nknows the spend height before calling the helper.\n\nAlso, in case the coins view is corrupted, LookupBlockIndex will return\nnullptr. Dereferencing a nullptr is UB.\n\nFix both issues by removing it. Also, add a sanity check, which aborts\nif the coins view is corrupted.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6a0f9a7c00015e70c9805faf45685ac300f61e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6a0f9a7c00015e70c9805faf45685ac300f61e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6a0f9a7c00015e70c9805faf45685ac300f61e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76392b042e98fcdb3b7ce3c2023003910326d14e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76392b042e98fcdb3b7ce3c2023003910326d14e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76392b042e98fcdb3b7ce3c2023003910326d14e"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 3,
      "deletions": 16
    },
    "files": [
      {
        "sha": "895d97cf1561c6b5a0b56428dce3cad288defe34",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6a0f9a7c00015e70c9805faf45685ac300f61e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6a0f9a7c00015e70c9805faf45685ac300f61e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa6a0f9a7c00015e70c9805faf45685ac300f61e",
        "patch": "@@ -710,6 +710,8 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     // to coins_to_uncache)\n     m_view.SetBackend(m_dummy);\n \n+    assert(m_active_chainstate.m_blockman.LookupBlockIndex(m_view.GetBestBlock()) == m_active_chainstate.m_chain.Tip());\n+\n     // Only accept BIP68 sequence locked transactions that can be mined in the next\n     // block; we don't want our mempool filled up with transactions that can't\n     // be mined yet.\n@@ -718,7 +720,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckSequenceLocks(m_active_chainstate.m_chain.Tip(), m_view, tx, STANDARD_LOCKTIME_VERIFY_FLAGS, &lp))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-BIP68-final\");\n \n-    if (!Consensus::CheckTxInputs(tx, state, m_view, m_active_chainstate.m_blockman.GetSpendHeight(m_view), ws.m_base_fees)) {\n+    if (!Consensus::CheckTxInputs(tx, state, m_view, m_active_chainstate.m_chain.Height() + 1, ws.m_base_fees)) {\n         return false; // state filled in by CheckTxInputs\n     }\n \n@@ -1306,14 +1308,6 @@ bool CScriptCheck::operator()() {\n     return VerifyScript(scriptSig, m_tx_out.scriptPubKey, witness, nFlags, CachingTransactionSignatureChecker(ptxTo, nIn, m_tx_out.nValue, cacheStore, *txdata), &error);\n }\n \n-int BlockManager::GetSpendHeight(const CCoinsViewCache& inputs)\n-{\n-    AssertLockHeld(cs_main);\n-    CBlockIndex* pindexPrev = LookupBlockIndex(inputs.GetBestBlock());\n-    return pindexPrev->nHeight + 1;\n-}\n-\n-\n static CuckooCache::cache<uint256, SignatureCacheHasher> g_scriptExecutionCache;\n static CSHA256 g_scriptExecutionCacheHasher;\n "
      },
      {
        "sha": "af84092b57d6fd66b06481a30d35888d43035d66",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6a0f9a7c00015e70c9805faf45685ac300f61e/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6a0f9a7c00015e70c9805faf45685ac300f61e/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa6a0f9a7c00015e70c9805faf45685ac300f61e",
        "patch": "@@ -479,13 +479,6 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    /**\n-     * Return the spend height, which is one more than the inputs.GetBestBlock().\n-     * While checking, GetBestBlock() refers to the parent block. (protected by cs_main)\n-     * This is also true for mempool checks.\n-     */\n-    int GetSpendHeight(const CCoinsViewCache& inputs) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-\n     ~BlockManager() {\n         Unload();\n     }"
      }
    ]
  }
]