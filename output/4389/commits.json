[
  {
    "sha": "d7b5f1fbab7d9c8c9c37f7edd43bc00577eba9f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkN2I1ZjFmYmFiN2Q5YzhjOWMzN2Y3ZWRkNDNiYzAwNTc3ZWJhOWYz",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-06-22T16:45:33Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-06-25T18:07:32Z"
      },
      "message": "Allow peers to determine how much they are seen to be misbehaving.\n\nThis can allow peers in future to modify their behaviour to avoid netsplits.",
      "tree": {
        "sha": "30c2872a8b11083f4994c55621f54e6545759b3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30c2872a8b11083f4994c55621f54e6545759b3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7b5f1fbab7d9c8c9c37f7edd43bc00577eba9f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7b5f1fbab7d9c8c9c37f7edd43bc00577eba9f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d7b5f1fbab7d9c8c9c37f7edd43bc00577eba9f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7b5f1fbab7d9c8c9c37f7edd43bc00577eba9f3/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36db6633c314b0f41aeee856f74a8d5d59334dbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36db6633c314b0f41aeee856f74a8d5d59334dbb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36db6633c314b0f41aeee856f74a8d5d59334dbb"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ec49febb1fcf78f970e54f5a6bf82609f2654ad9",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7b5f1fbab7d9c8c9c37f7edd43bc00577eba9f3/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7b5f1fbab7d9c8c9c37f7edd43bc00577eba9f3/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d7b5f1fbab7d9c8c9c37f7edd43bc00577eba9f3",
        "patch": "@@ -196,6 +196,8 @@ struct CBlockReject {\n struct CNodeState {\n     // Accumulated misbehaviour score for this peer.\n     int nMisbehavior;\n+    // Last change to misbehaviour score for this peer.\n+    int nMisbehaveDelta;\n     // Whether this peer should be disconnected and banned.\n     bool fShouldBan;\n     // String name of this peer (debugging/logging purposes).\n@@ -211,6 +213,7 @@ struct CNodeState {\n \n     CNodeState() {\n         nMisbehavior = 0;\n+        nMisbehaveDelta = 0;\n         fShouldBan = false;\n         nBlocksToDownload = 0;\n         nBlocksInFlight = 0;\n@@ -1416,6 +1419,7 @@ void Misbehaving(NodeId pnode, int howmuch)\n         return;\n \n     state->nMisbehavior += howmuch;\n+    state->nMisbehaveDelta = howmuch;\n     if (state->nMisbehavior >= GetArg(\"-banscore\", 100))\n     {\n         LogPrintf(\"Misbehaving: %s (%d -> %d) BAN THRESHOLD EXCEEDED\\n\", state->name, state->nMisbehavior-howmuch, state->nMisbehavior);\n@@ -3607,6 +3611,11 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         pfrom->SetRecvVersion(min(pfrom->nVersion, PROTOCOL_VERSION));\n     }\n \n+    else if (strCommand == \"misbehave\") {\n+        int howmuch;\n+        vRecv >> howmuch;\n+        LogPrint(\"net\", \"peer=%d says we are misbehaving %d\\n\", pfrom->id, howmuch);\n+    }\n \n     else if (strCommand == \"addr\")\n     {\n@@ -4364,6 +4373,10 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         }\n \n         CNodeState &state = *State(pto->GetId());\n+        if (state.nMisbehaveDelta) {\n+            pto->PushMessage(\"misbehave\", state.nMisbehaveDelta);\n+            state.nMisbehaveDelta = 0;\n+        }\n         if (state.fShouldBan) {\n             if (pto->addr.IsLocal())\n                 LogPrintf(\"Warning: not banning local node %s!\\n\", pto->addr.ToString());"
      }
    ]
  }
]