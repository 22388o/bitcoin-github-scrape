[
  {
    "sha": "878fc2ffd9fc6b9c117436cec31bf7b7d0172d55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzhmYzJmZmQ5ZmM2YjljMTE3NDM2Y2VjMzFiZjdiN2QwMTcyZDU1",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-01-10T15:22:24Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-01-11T09:59:25Z"
      },
      "message": "[scripts] build earlier releases",
      "tree": {
        "sha": "08f35178cea73348f8b3d2f93cb63742d9784c70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08f35178cea73348f8b3d2f93cb63742d9784c70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/878fc2ffd9fc6b9c117436cec31bf7b7d0172d55",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlpXNX4THHNqb3JzQHNw\ncm92b29zdC5ubAAKCRBX/5vbzDAQCf5aEAC1ZcQ3un78/Q8JnfgT06yFh+8vIN/c\nutao0Bri7GXH0anjgx6bcYRoHtPJsX5lav8k0SAnpGyK0GvI0frdvUt3niA0Nc5o\nK8oAVIuAUlCUqfNOfU64Hc3iNGXjwWRph6rBVd2SF92/u/r8C0nt2Di9iTw1KxP4\nPUA3jcuFPJIpYysGal8sR8zYhtveahL53ODbmoUpk5eEFQg53hyGwO9gb3P2YjfW\nEp1Z3XM/15w2eUUrmw7cF2aj52pLxbsyACLWmaTBU0QHXmzmGxuT8xIfNb1+iOWP\ntzz5bi/XSReQbw9Pt8QqtDjDS7Jdm7oppjPBf8ckimKYn1BBu0AY6LsKWofZgC0J\nRHmK+Fh0e6LleEPjlicI7okP0PgpQi5LNDzZNeQlzaObnqHE3ziXGkhP9ph3j6hI\nzTIqgRscoMgIhgrq7VETeeMUCNh7WIfKpwKUxXICKoCMh/ngQF8o/QRbbT6NOiAD\nrsvUhxQQ9VwRFOYxV3ym4HG+2wsr2WKD/J3pCatVDoROEc/mI6j9LjJb3zaKRiiC\nw3dtSXTyTX4Gf4NyMelCfJ6s2ZG0bS5JgkSA/fK4kgocmFJj6vU0LALYwOpLM4Rg\nCI+fU2NvYjYJEO65TXMRK+tUlUOSues29/f64qHwpF8nMmMruJdT8fydJf2/nGTv\n7ghXowKL5ZYv9A==\n=RoZk\n-----END PGP SIGNATURE-----",
        "payload": "tree 08f35178cea73348f8b3d2f93cb63742d9784c70\nparent d889c036cd6f683116e6a27e404be2809d1deb76\nauthor Sjors Provoost <sjors@sprovoost.nl> 1515597744 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1515664765 +0100\n\n[scripts] build earlier releases\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/878fc2ffd9fc6b9c117436cec31bf7b7d0172d55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/878fc2ffd9fc6b9c117436cec31bf7b7d0172d55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/878fc2ffd9fc6b9c117436cec31bf7b7d0172d55/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d889c036cd6f683116e6a27e404be2809d1deb76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d889c036cd6f683116e6a27e404be2809d1deb76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d889c036cd6f683116e6a27e404be2809d1deb76"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 89,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6b1900288eca6c38f3dcf2cf86d3818c4efc16fc",
        "filename": "contrib/devtools/previous_release.sh",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/878fc2ffd9fc6b9c117436cec31bf7b7d0172d55/contrib/devtools/previous_release.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/878fc2ffd9fc6b9c117436cec31bf7b7d0172d55/contrib/devtools/previous_release.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/previous_release.sh?ref=878fc2ffd9fc6b9c117436cec31bf7b7d0172d55",
        "patch": "@@ -0,0 +1,89 @@\n+#!/bin/bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Build previous releases.\n+\n+CONFIG_FLAGS=\"\"\n+FUNCTIONAL_TESTS=0\n+DELETE_EXISTING=0\n+USE_DEPENDS=0\n+\n+while getopts \":hfrd\" opt; do\n+  case $opt in\n+    h)\n+      echo \"Usage: .previous_release.sh [options] tag1 tag2\"\n+      echo \"  options:\"\n+      echo \"  -h   Print this message\"\n+      echo \"  -f   Configure for functional tests\"\n+      echo \"  -r   Remove existing directory\"\n+      echo \"  -d   Use depends\"\n+      exit 0\n+      ;;\n+    f)\n+      FUNCTIONAL_TESTS=1\n+      ;;\n+    r)\n+      DELETE_EXISTING=1\n+      ;;\n+    d)\n+      USE_DEPENDS=1\n+      ;;\n+    \\?)\n+      echo \"Invalid option: -$OPTARG\" >&2\n+      exit 1\n+      ;;\n+  esac\n+done\n+\n+shift $((OPTIND-1))\n+\n+if [ -z \"$1\" ]; then\n+  echo \"Specify release tag(s), e.g.: .previous_release v0.15.1\"\n+  exit 1\n+fi\n+\n+for tag in \"$@\"\n+do\n+  if [ \"$DELETE_EXISTING\" -eq \"1\" ]; then\n+    rm -rf build/releases/$tag\n+  fi\n+\n+  if [ \"$FUNCTIONAL_TESTS\" -eq \"1\" ]; then\n+    CONFIG_FLAGS=\"--without-gui --disable-tests --disable-bench\"\n+  fi\n+\n+  if [ ! -d \"build/releases/$tag\" ]; then\n+    if [ -f $(git rev-parse --git-dir)/shallow ]; then\n+      git fetch --unshallow --tags\n+    fi\n+\n+    if [ -z $(git tag -l \"$tag\") ]; then\n+      echo \"Tag $tag not found\"\n+      exit 1\n+    fi\n+\n+    git clone . build/releases/$tag\n+    pushd build/releases/$tag\n+    git checkout $tag\n+\n+    if [ \"$USE_DEPENDS\" -eq \"1\" ]; then\n+      pushd depends\n+      if [ \"$FUNCTIONAL_TESTS\" -eq \"1\" ]; then\n+        make NO_QT=1\n+      else\n+        make\n+      fi\n+      HOST=\"${HOST:-$(./config.guess)}\"\n+      popd\n+      CONFIG_FLAGS=\"--prefix=$PWD/depends/$HOST $CONFIG_FLAGS\"\n+    fi\n+\n+    ./autogen.sh\n+    ./configure $CONFIG_FLAGS\n+    make\n+    popd\n+  fi\n+done"
      }
    ]
  },
  {
    "sha": "51b8792df8caea1382a8b3f20204546421d96f06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MWI4NzkyZGY4Y2FlYTEzODJhOGIzZjIwMjA0NTQ2NDIxZDk2ZjA2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-01-11T10:15:47Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-01-11T10:15:47Z"
      },
      "message": "[tests] check v0.14.2 and v0.15.1 backwards compatibility",
      "tree": {
        "sha": "5191acbff18164a91609f6aadb67d0cfcda62c36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5191acbff18164a91609f6aadb67d0cfcda62c36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51b8792df8caea1382a8b3f20204546421d96f06",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlpXOVMTHHNqb3JzQHNw\ncm92b29zdC5ubAAKCRBX/5vbzDAQCTbHEAC/DI3EnxVMWNesBZGS4N+qWPrm/tPi\nx28mPPs79XBwnYxgyzcKOwuRRJj5grZ5mO5XNAwdNpwJgfB3T5ReDgSHyD/CJHgx\n6jJ7gCeav7wnZQgE+YaQQuNoixEnr2P5Pxm3zmJr7df8IQaAyMYhxXaQQNONmltV\nfD0lQXvnNxn7+qCZob3mec9xS6+QH457uadOFGQa84ray0Pn0I0z0hIXnqPYzXUt\nlJeYyCD8W2LREwuoMb1ITZtiQxDAwc1sfZ9sQSjM2iu5PNlTlpSDnO5LHdIOc+kl\nTPuQPrmxoZY9ioH9RhO75QHg5tSRdPXAZ0MQj9DvV5Yy6KUjnNcsQKZBV0Rlc4Mm\n815LNVbEkrYnWXQve7CZ6dWrxYmIFogxbQIpMgTc3n4nCsxsyHa69i+ll+ZreBpJ\nGDvlWBFT8MgTElbieTPftpoLf2SGDr8/vvb/3gT2ZbQnSWvX2jhiKRiuxeBf0CRv\nbrFfjlVHEakUN8vKBK7GURaHUqZIaxC8OgRPocP5WtWUydvr6fv52X9ZBctaPeZD\nMGJdO+6lMcb8a+rfEiR9AvQ3ZxVwmg65EuAhosx9soqvKajpTFAMN+FSbhkr38pI\namPFXwhzwvazcCH+S5SyusFn5FJZFRYIWxyw8qbOA8wGNFe1j1HXrfXK/HMUDhsa\nYDsVGkm+ufWwBw==\n=MviM\n-----END PGP SIGNATURE-----",
        "payload": "tree 5191acbff18164a91609f6aadb67d0cfcda62c36\nparent 878fc2ffd9fc6b9c117436cec31bf7b7d0172d55\nauthor Sjors Provoost <sjors@sprovoost.nl> 1515665747 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1515665747 +0100\n\n[tests] check v0.14.2 and v0.15.1 backwards compatibility\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51b8792df8caea1382a8b3f20204546421d96f06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51b8792df8caea1382a8b3f20204546421d96f06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51b8792df8caea1382a8b3f20204546421d96f06/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "878fc2ffd9fc6b9c117436cec31bf7b7d0172d55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/878fc2ffd9fc6b9c117436cec31bf7b7d0172d55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/878fc2ffd9fc6b9c117436cec31bf7b7d0172d55"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 48,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3304cd45394eb5877aea1450dcb7a05d8436d97d",
        "filename": "test/functional/backwards_compatibility.py",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51b8792df8caea1382a8b3f20204546421d96f06/test/functional/backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51b8792df8caea1382a8b3f20204546421d96f06/test/functional/backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/backwards_compatibility.py?ref=51b8792df8caea1382a8b3f20204546421d96f06",
        "patch": "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Downgrade functional test\n+\n+Test various downgrade scenarios. Compile the previous node binaries:\n+\n+contrib/devtools/previous_release.sh -f v0.15.1 v0.14.2\n+\n+Due to RPC changes introduced in v0.14 the below tests won't work for older\n+versions without some patches or workarounds.\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    sync_blocks\n+)\n+\n+class DowngradeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [\n+            [],\n+            [\"-vbparams=segwit:0:0\", \"-vbparams=csv:0:0\"], # v0.15.1\n+            [\"-vbparams=segwit:0:0\", \"-vbparams=csv:0:0\"] # v0.14.2\n+        ]\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, binary=[\n+            None,\n+            \"build/releases/v0.15.1/src/bitcoind\",\n+            \"build/releases/v0.14.2/src/bitcoind\"\n+        ])\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generate(101)\n+\n+        sync_blocks(self.nodes)\n+\n+        # Santity check the test framework:\n+        res = self.nodes[self.num_nodes - 1].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+if __name__ == '__main__':\n+    DowngradeTest().main()"
      },
      {
        "sha": "fb26607d0e16ae1cbe74fdc1842a5d57ee8ebe19",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51b8792df8caea1382a8b3f20204546421d96f06/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51b8792df8caea1382a8b3f20204546421d96f06/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=51b8792df8caea1382a8b3f20204546421d96f06",
        "patch": "@@ -158,6 +158,7 @@\n     'assumevalid.py',\n     'example_test.py',\n     'txn_doublespend.py',\n+    'backwards_compatibility.py',\n     'txn_clone.py --mineblock',\n     'notifications.py',\n     'invalidateblock.py',"
      }
    ]
  },
  {
    "sha": "007a3395398ed706b7ef0c131f39f2f7708f5f10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDdhMzM5NTM5OGVkNzA2YjdlZjBjMTMxZjM5ZjJmNzcwOGY1ZjEw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-01-10T16:10:46Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-01-11T10:15:54Z"
      },
      "message": "[travis] compile v0.14.2 v0.15.1 and run backwards compatibity tests",
      "tree": {
        "sha": "a80e156c976050e1478325ac76fc320928db21a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a80e156c976050e1478325ac76fc320928db21a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/007a3395398ed706b7ef0c131f39f2f7708f5f10",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlpXOVoTHHNqb3JzQHNw\ncm92b29zdC5ubAAKCRBX/5vbzDAQCVUdEAC0cTrnL9tmt6kPP0kRSOBSbixBtVDa\njGt9Zf5Z/jvYPv9TkZb71Z4QT7jGcTaSdWZVKUSED/HyLuYkRomnjxZITdlhpVe1\nQY4QpFfi9tuZ/5F68cI9v7JOhaIUsa4I7rynyzWbIh0peSlntbLmGY2xKnFLnWvL\naJY6imEtf3HpRt0CBjbLoqYFQUA5fYWvM0XWHfeVLSzSvVjrcJGdMU1GfDtq0/1E\noRLCOFI7o5bmcyJhSHjLjT6PaFglyk76Yk2K+1tKrrlzarej2XnEa/lUxWJE6DKM\nxz6VPmwTbWQTsYHu7LiFyZxRK41GEKlexTgoxUJqbydf5RQhvL3PBXIDL101fzMO\n24DJrpdrOJ26XS6UrpNjKqaOQvuBeEL/3cc5d3DU7/heLzxBTbObUF0cJmGC4Iq9\nw3dLv3LM47uKvS7nAAWtQ4/pDkPX52sAVO07fv4uMAJGF4uhWMj4I8+zN/tdRQNY\nPHd0WE47zKQZc77+okboQLaXpDgpo4kT1AAEzD2fMIpLHMc6UTSDyzNmeGAlsKra\nU+BIUZ7JOxwx8VVaM89q84z60UqXLDgb0YiDvenSNUfDQZRtEjgsFKzHVBuL1/1P\ni3ZVh+Ign9IET3zYh7flG+DsdCkm8JIn8AgQpjS//5GJz/hT7jha1X9j1MpfpTyx\n9XXXcqZLRcBLXA==\n=SZg5\n-----END PGP SIGNATURE-----",
        "payload": "tree a80e156c976050e1478325ac76fc320928db21a7\nparent 51b8792df8caea1382a8b3f20204546421d96f06\nauthor Sjors Provoost <sjors@sprovoost.nl> 1515600646 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1515665754 +0100\n\n[travis] compile v0.14.2 v0.15.1 and run backwards compatibity tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/007a3395398ed706b7ef0c131f39f2f7708f5f10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/007a3395398ed706b7ef0c131f39f2f7708f5f10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/007a3395398ed706b7ef0c131f39f2f7708f5f10/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51b8792df8caea1382a8b3f20204546421d96f06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51b8792df8caea1382a8b3f20204546421d96f06",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51b8792df8caea1382a8b3f20204546421d96f06"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7264011705bc2ba76b17c5e65ee478e3e0966537",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/007a3395398ed706b7ef0c131f39f2f7708f5f10/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/007a3395398ed706b7ef0c131f39f2f7708f5f10/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=007a3395398ed706b7ef0c131f39f2f7708f5f10",
        "patch": "@@ -7,6 +7,7 @@ cache:\n   - depends/built\n   - depends/sdk-sources\n   - $HOME/.ccache\n+  - build/releases\n env:\n   global:\n     - MAKEJOBS=-j3\n@@ -31,7 +32,7 @@ env:\n # Win64\n     - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n # x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true COMPILE_PREVIOUS_VERSIONS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n # x86_64 Linux, No wallet\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n@@ -60,6 +61,7 @@ before_script:\n     - if [ -z \"$NO_DEPENDS\" ]; then make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n     # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n     - if [ \"$NEED_XVFB\" = 1 ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n+    - if [ \"$COMPILE_PREVIOUS_VERSIONS\" = \"true\" ]; then contrib/devtools/previous_release.sh -d -f v0.15.1 v0.14.2; fi\n script:\n     - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n     - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n@@ -70,7 +72,7 @@ script:\n     - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n     - if [ -z \"$NO_DEPENDS\" ]; then depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE; fi\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-    - mkdir build && cd build\n+    - mkdir -p build && cd build\n     - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make distdir VERSION=$HOST\n     - cd bitcoin-$HOST\n@@ -80,6 +82,7 @@ script:\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi\n     - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude pruning,dbcrash\"; fi\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet ${extended}; fi\n+    - if [ \"$COMPILE_PREVIOUS_VERSIONS\" = \"true\" ]; then mkdir build; ln -s ../../../build/releases build/releases; test/functional/backwards_compatibility.py; fi\n after_script:\n     - echo $TRAVIS_COMMIT_RANGE\n     - echo $TRAVIS_COMMIT_LOG"
      }
    ]
  },
  {
    "sha": "8af73179c3fe64eb1ac15ac180598cd7dc1e1c01",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YWY3MzE3OWMzZmU2NGViMWFjMTVhYzE4MDU5OGNkN2RjMWUxYzAx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-01-11T18:22:02Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-01-11T18:22:02Z"
      },
      "message": "[tests] misc. backward compatibity tests",
      "tree": {
        "sha": "5b35b2c69fbd3b3a123913dccb2335e5421ca262",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b35b2c69fbd3b3a123913dccb2335e5421ca262"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlpXq0wTHHNqb3JzQHNw\ncm92b29zdC5ubAAKCRBX/5vbzDAQCUM7D/9zwfODaBxWPaw0E518jXxRLAwGR9m+\n0YHhUR0U8RtST5bpgDmUqCRc6v+RXApgPyVIezyNfkxHTnwGKISbHxCmUjgcz6zG\nPC+Hpia/aD2abTeZR+t/yhk+ZPip+9BJo9ZvZu7jByLIrYKHgRMcQq48TLisspkh\ntmLVgG8l8VhPi/BPqbJNkzwQxHA1jCWLqec1DIQ7HuCKfSrpJXTc+HpTJNkf4exy\nlLVUZjg9gaQop4BkjS2TLVgmBXgLOlMY9O33A2cpdnV1DYfP6Lpg0Mk1UhPBHGcr\n2OKOy43JqDgp95e+Hihvqhx4BEshyMR4Wn12yWSq5UZz3r0KzbMaJFcfc1PXYdL8\nTUI3LfLPx7QEOsgdEvOQPGv3mrNseXWQnWVsPygo2b+S9x6ETgaWz/vlfioxmneG\nUuO2Z1O0r2vw33/BCBXrTHxqtnUHsL1VcQWnY+VsORbSaNb2UIEh0ajfje07Rb8T\nxHgxwOM3+c5YYxenwJx+PuwTMApNGXRJX4HfXW+CMZRGjxQZWAKcqlwJuLmykNf0\nDg9z0eeyiAVLJIaiHztAUzFs9TnwCNpdBWniFEytD7sspB4m5jA/X1wuw3qRIur/\nE6tgwBA/iVO42BkeFpEoX+IHy84kY0H6rOgLZaBJhJxqf5p5JCuPBixYsCQNn9pg\nSqSQFAdKTRyMpA==\n=V9na\n-----END PGP SIGNATURE-----",
        "payload": "tree 5b35b2c69fbd3b3a123913dccb2335e5421ca262\nparent 007a3395398ed706b7ef0c131f39f2f7708f5f10\nauthor Sjors Provoost <sjors@sprovoost.nl> 1515694922 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1515694922 +0100\n\n[tests] misc. backward compatibity tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "007a3395398ed706b7ef0c131f39f2f7708f5f10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/007a3395398ed706b7ef0c131f39f2f7708f5f10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/007a3395398ed706b7ef0c131f39f2f7708f5f10"
      }
    ],
    "stats": {
      "total": 204,
      "additions": 189,
      "deletions": 15
    },
    "files": [
      {
        "sha": "4882f08da6b853dd647d7ffab7ecee5d543cec3b",
        "filename": "contrib/devtools/previous_release.sh",
        "status": "modified",
        "additions": 15,
        "deletions": 10,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01/contrib/devtools/previous_release.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01/contrib/devtools/previous_release.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/previous_release.sh?ref=8af73179c3fe64eb1ac15ac180598cd7dc1e1c01",
        "patch": "@@ -10,8 +10,10 @@ CONFIG_FLAGS=\"\"\n FUNCTIONAL_TESTS=0\n DELETE_EXISTING=0\n USE_DEPENDS=0\n+RELEASE_PATH_POSTFIX=\"\"\n+CONFIG_FLAGS=\"\"\n \n-while getopts \":hfrd\" opt; do\n+while getopts \":hfrdb\" opt; do\n   case $opt in\n     h)\n       echo \"Usage: .previous_release.sh [options] tag1 tag2\"\n@@ -20,17 +22,23 @@ while getopts \":hfrd\" opt; do\n       echo \"  -f   Configure for functional tests\"\n       echo \"  -r   Remove existing directory\"\n       echo \"  -d   Use depends\"\n+      echo \"  -b   configure --with-incompatible-bdb\"\n       exit 0\n       ;;\n     f)\n-      FUNCTIONAL_TESTS=1\n+      FUNCTIONAL_TESTS=0\n+      CONFIG_FLAGS=\"$CONFIG_FLAGS --without-gui --disable-tests --disable-bench\"\n       ;;\n     r)\n       DELETE_EXISTING=1\n       ;;\n     d)\n       USE_DEPENDS=1\n       ;;\n+    b)\n+      CONFIG_FLAGS=\"$CONFIG_FLAGS --with-incompatible-bdb\"\n+      RELEASE_PATH_POSTFIX=\"$RELEASE_PATH_POSTFIX-incompatible-bdb\"\n+      ;;\n     \\?)\n       echo \"Invalid option: -$OPTARG\" >&2\n       exit 1\n@@ -47,15 +55,12 @@ fi\n \n for tag in \"$@\"\n do\n+  RELEASE_PATH=\"build/releases/$tag$RELEASE_PATH_POSTFIX\"\n   if [ \"$DELETE_EXISTING\" -eq \"1\" ]; then\n-    rm -rf build/releases/$tag\n-  fi\n-\n-  if [ \"$FUNCTIONAL_TESTS\" -eq \"1\" ]; then\n-    CONFIG_FLAGS=\"--without-gui --disable-tests --disable-bench\"\n+    rm -rf $RELEASE_PATH\n   fi\n \n-  if [ ! -d \"build/releases/$tag\" ]; then\n+  if [ ! -d \"$RELEASE_PATH\" ]; then\n     if [ -f $(git rev-parse --git-dir)/shallow ]; then\n       git fetch --unshallow --tags\n     fi\n@@ -65,8 +70,8 @@ do\n       exit 1\n     fi\n \n-    git clone . build/releases/$tag\n-    pushd build/releases/$tag\n+    git clone . $RELEASE_PATH\n+    pushd $RELEASE_PATH\n     git checkout $tag\n \n     if [ \"$USE_DEPENDS\" -eq \"1\" ]; then"
      },
      {
        "sha": "c99b08a90c2d125c93f0a83694f1bd0e11497529",
        "filename": "test/functional/backwards_compatibility.py",
        "status": "modified",
        "additions": 170,
        "deletions": 5,
        "changes": 175,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01/test/functional/backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01/test/functional/backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/backwards_compatibility.py?ref=8af73179c3fe64eb1ac15ac180598cd7dc1e1c01",
        "patch": "@@ -10,30 +10,87 @@\n \n Due to RPC changes introduced in v0.14 the below tests won't work for older\n versions without some patches or workarounds.\n+\n+Use only the latest patch version of each release, unless a test specifically\n+needs an older patch version.\n \"\"\"\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n-    sync_blocks\n+    assert_not_equal,\n+    assert_raises,\n+    sync_blocks,\n+    connect_nodes\n )\n+from shutil import copy2\n+\n+# Node alias:\n+V0_15 = 2\n+V0_14 = 3\n \n class DowngradeTest(BitcoinTestFramework):\n+\n+    \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 3\n+        self.num_nodes = 4\n+        # TODO: add new version after each release\n         self.extra_args = [\n-            [],\n+            [], # Pre-release: use to mine blocks\n+            [], # Pre-release: use to receive coins, swap wallets, etc\n             [\"-vbparams=segwit:0:0\", \"-vbparams=csv:0:0\"], # v0.15.1\n-            [\"-vbparams=segwit:0:0\", \"-vbparams=csv:0:0\"] # v0.14.2\n+            [\"-vbparams=segwit:0:0\", \"-vbparams=csv:0:0\"], # v0.14.2\n         ]\n \n     def setup_nodes(self):\n         self.add_nodes(self.num_nodes, extra_args=self.extra_args, binary=[\n+            None,\n             None,\n             \"build/releases/v0.15.1/src/bitcoind\",\n-            \"build/releases/v0.14.2/src/bitcoind\"\n+            \"build/releases/v0.14.2/src/bitcoind\",\n         ])\n         self.start_nodes()\n+    \n+    def node_wallet_path(self, node):\n+        # TODO:\n+        # * make part of test framework\n+        # * avoid hardcoded path\n+        # * don't hardcode node version\n+\n+        if (node < 2): # >= v0.16\n+            return self.nodes[1].datadir + \"/regtest/wallets/wallet.dat\"\n+        else: # <= v0.15\n+            return self.nodes[node].datadir + \"/regtest/wallet.dat\"\n+    \n+    def backup_wallet_push(self, node):\n+        # TODO: actually stack backups\n+        # TODO: use dynamic wallet load / unload once merged\n+        self.stop_node(node)\n+        copy2(self.node_wallet_path(node), self.node_wallet_path(node) + \"-backup\")\n+        self.start_node(node)\n+        connect_nodes(self.nodes[node - 1], node)\n+        connect_nodes(self.nodes[node], node + 1)\n+    \n+    def backup_wallet_pop(self, node):\n+        # TODO: actually pop backup stack\n+        # TODO: use dynamic wallet load / unload once merged\n+        copy2(self.node_wallet_path(node) + \"-backup\", self.node_wallet_path(node))\n+        # TODO: start node and restore connections\n+    \n+    def copy_wallet(self, origin, destination):\n+        # TODO: make part of test framework\n+        # TODO: use dynamic wallet load / unload once merged\n+\n+        self.stop_node(origin)\n+        self.stop_node(destination)\n+        copy2(self.node_wallet_path(origin), self.node_wallet_path(destination))\n+        self.start_node(origin)\n+        self.start_node(destination)\n+        connect_nodes(self.nodes[origin - 1], origin)\n+        connect_nodes(self.nodes[origin], origin + 1)\n+        connect_nodes(self.nodes[destination - 1], destination)\n+        connect_nodes(self.nodes[destination], destination + 1)\n+        sync_blocks(self.nodes)\n \n     def run_test(self):\n         self.nodes[0].generate(101)\n@@ -43,5 +100,113 @@ def run_test(self):\n         # Santity check the test framework:\n         res = self.nodes[self.num_nodes - 1].getblockchaininfo()\n         assert_equal(res['blocks'], 101)\n+        \n+        # Check that v0.16 wallet can't be used on v0.15 node\n+        # TODO: use v0.16 node after release\n+        self.backup_wallet_push(V0_15)\n+        self.log.debug(\"Expecting bitcoind to fail with:\")\n+        self.log.debug(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\")\n+        # TODO: use something like assert_raises_process_error to check\n+        #       specific bitcoind launch error \n+        assert_raises(AssertionError, lambda: self.copy_wallet(1,V0_15))\n+        self.log.info('Restoring backup')\n+        self.backup_wallet_pop(V0_15)\n+        self.start_node(V0_15)\n+        connect_nodes(self.nodes[V0_15 - 1], V0_15)\n+        connect_nodes(self.nodes[V0_15], V0_15 + 1)\n+        sync_blocks(self.nodes)\n+        \n+        # Upgrade v0.15.1 wallet from node2 on node1\n+        self.copy_wallet(V0_15,1)\n+        \n+        # SegWit wallet related scenarios from gist:\n+        # https://gist.github.com/sipa/125cfa1615946d0c3f3eec2ad7f250a2#segwit-wallet-support\n+        # 1) make backup, upgrade, create segwit address, restore from backup\n+        # 2) upgrade, make backup, downgrade, restore backup\n+        # 3) upgrade, new address, downgrade: P2SH-P2WPKH should still exist\n+        # 4) backup, upgrade, new address, downgrade, restore backup: not supported\n+        # 5) upgrade, backup, new address, receive coins, restore backup, downgrade\n+\n+        # Generate and fund a legacy, segwit-p2sh and bech32 address on node1\n+        address1 = self.nodes[1].getnewaddress(account=\"legacy\", address_type='legacy')\n+        address2 = self.nodes[1].getnewaddress(account=\"p2sh\", address_type='p2sh-segwit')\n+        address3 = self.nodes[1].getnewaddress(account=\"p2sh-nocoin\", address_type='p2sh-segwit')\n+        address4 = self.nodes[1].getnewaddress(account=\"bech32\", address_type='bech32')\n+        self.nodes[0].sendtoaddress(address1, 1)\n+        self.nodes[0].sendtoaddress(address2, 1)\n+        # no coins sent to address3\n+        self.nodes[0].sendtoaddress(address4, 1)\n+\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+        assert_equal(self.nodes[1].getbalance(\"legacy\"), 1)\n+        assert_equal(self.nodes[1].getbalance(\"p2sh\"), 1)\n+        assert_equal(self.nodes[1].getbalance(\"bech32\"), 1)\n+\n+        # Copy node1 wallet to node2 and check v0.15.1 can still spend this:\n+        assert_equal(self.nodes[V0_15].getbalance(\"legacy\"), 0)\n+        assert_equal(self.nodes[V0_15].getbalance(\"p2sh\"), 0)\n+        assert_equal(self.nodes[V0_15].getbalance(\"bech32\"), 0)\n+\n+        self.copy_wallet(1,V0_15)\n+        assert_equal(self.nodes[V0_15].getbalance(\"legacy\"), 1)\n+        assert_equal(self.nodes[V0_15].getbalance(\"p2sh\"), 1) # Scenario 3\n+        \n+        # bech32 account will appear empty:\n+        assert_equal(self.nodes[V0_15].getbalance(\"bech32\"), 0) \n+        \n+        # Check address formats:\n+        assert_equal(self.nodes[V0_15].getaddressesbyaccount(\"legacy\"), [address1]) \n+        assert_equal(self.nodes[V0_15].getaddressesbyaccount(\"p2sh\"), [address2]) \n+        \n+        # bech32 address is corrupted until the next upgrade:\n+        assert_equal(self.nodes[V0_15].getaddressesbyaccount(\"bech32\"), [\"3QJmnh\"])\n+        \n+        # Scenario 1: create and fund address on node 1 before we override with backup\n+        address5 = self.nodes[1].getnewaddress(account=\"p2sh-post-backup\", address_type='p2sh-segwit')\n+        address6 = self.nodes[1].getnewaddress(account=\"bech32-post-backup\", address_type='bech32')\n+        address7 = self.nodes[1].getnewaddress(account=\"p2sh-disappear\", address_type='p2sh-segwit')\n+        self.nodes[0].sendtoaddress(address5, 1)\n+        self.nodes[0].sendtoaddress(address6, 1)\n+        self.nodes[0].sendtoaddress(address7, 1)\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+        assert_equal(self.nodes[1].getbalance(\"p2sh-post-backup\"), 1)\n+        assert_equal(self.nodes[1].getbalance(\"bech32-post-backup\"), 1)\n+        assert_equal(self.nodes[1].getbalance(\"p2sh-disappear\"), 1)\n+\n+        # Upgrade back to v0.16 by copying to node1:\n+        # TODO: use v0.16 node after release\n+        self.copy_wallet(V0_15,1)\n+\n+        assert_equal(self.nodes[1].getbalance(\"legacy\"), 1)\n+        assert_equal(self.nodes[1].getbalance(\"p2sh\"), 1) # Scenerio 5\n+\n+        # Scenario 2\n+        assert_equal(self.nodes[1].getaddressesbyaccount(\"p2sh-nocoin\"), [address3])\n+        \n+        # bech32 account should show funds again (scenerio 2):\n+        assert_equal(self.nodes[1].getbalance(\"bech32\"), 1) \n+        \n+        # bech32 address format should be restored:\n+        assert_equal(self.nodes[1].getaddressesbyaccount(\"bech32\"), [address4])\n+        \n+        # Check scenario 1, SegWit addresses should come back, even if not explictly requested:\n+        self.nodes[1].getnewaddress(account=\"p2sh-post-backup\", address_type='p2sh-segwit')\n+        assert_equal(self.nodes[1].getaddressesbyaccount(\"p2sh-post-backup\"), [address5])\n+        self.nodes[1].getnewaddress(account=\"bech32-post-backup\", address_type='bech32')\n+        assert_equal(self.nodes[1].getaddressesbyaccount(\"bech32-post-backup\"), [address6])\n+        \n+        self.nodes[1].getnewaddress(account=\"p2sh-disappear\", address_type='bech32') # wrong type!\n+        self.nodes[1].getnewaddress(account=\"p2sh-disappear\", address_type='p2sh-segwit') # next key...\n+        assert_not_equal(self.nodes[1].getaddressesbyaccount(\"p2sh-disappear\"), [address7])\n+        assert_equal(self.nodes[1].getbalance(\"p2sh-disappear\"), 0)\n+\n+        # Balance won't immedidately update:\n+        self.nodes[1].rescanblockchain()\n+        assert_equal(self.nodes[1].getbalance(\"p2sh-post-backup\"), 1)\n+        assert_equal(self.nodes[1].getbalance(\"bech32-post-backup\"), 1) \n+        assert_equal(self.nodes[1].getbalance(\"p2sh-disappear\"), 0)\n+        \n if __name__ == '__main__':\n     DowngradeTest().main()"
      },
      {
        "sha": "2c1c1882095b5d886bd616193f1e6fdd09324570",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8af73179c3fe64eb1ac15ac180598cd7dc1e1c01/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=8af73179c3fe64eb1ac15ac180598cd7dc1e1c01",
        "patch": "@@ -37,6 +37,10 @@ def assert_equal(thing1, thing2, *args):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n         raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n \n+def assert_not_equal(thing1, thing2, *args):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        raise AssertionError(\"not(%s)\" % \" != \".join(str(arg) for arg in (thing1, thing2) + args))\n+\n def assert_greater_than(thing1, thing2):\n     if thing1 <= thing2:\n         raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))"
      }
    ]
  }
]