donaloconnor,2018-10-14T20:39:06Z,utACK https://github.com/bitcoin/bitcoin/pull/14478/commits/025afbe139684a467928958cebf1fb01930f5354,https://github.com/bitcoin/bitcoin/pull/14478#issuecomment-429660427,429660427,
promag,2018-10-15T17:07:32Z,utACK 025afbe.,https://github.com/bitcoin/bitcoin/pull/14478#issuecomment-429935436,429935436,
promag,2018-10-16T18:24:14Z,Is there a reason to not shutdown gracefully? And why is this a fatal error? Today we could jut unload it?,https://github.com/bitcoin/bitcoin/pull/14478#issuecomment-430345244,430345244,
jonasschnelli,2018-10-17T07:37:22Z,What @sipa said. Just returning an error state will prevent from unnecessary file/class-coupling,https://github.com/bitcoin/bitcoin/pull/14478#issuecomment-430522693,430522693,
MarcoFalke,2018-11-08T20:32:25Z,utACK 48062643f13b5442dec84cfa3d64e98e3815530b. Could squash?,https://github.com/bitcoin/bitcoin/pull/14478#issuecomment-437145509,437145509,
meshcollider,2018-11-10T02:08:10Z,Squashed 👍 ,https://github.com/bitcoin/bitcoin/pull/14478#issuecomment-437549887,437549887,
sipa,2018-10-17T07:21:07Z,"Pretty ugly to call into the UI from such a low-level routine. Is it possible to instead return a failure status, and have the caller deal with this?",https://github.com/bitcoin/bitcoin/pull/14478#discussion_r225804829,225804829,src/wallet/crypter.cpp
promag,2018-10-18T00:37:04Z,"I think this is as ugly as calling UI from low level, only inverted.\n\nOne alternative is to catch the exception in `WalletImpl::unlock` and return an error.\n\nOrthogonally `CCryptoKeyStore::Unlock` could also return an error instead of `assert(false)`.",https://github.com/bitcoin/bitcoin/pull/14478#discussion_r226137964,226137964,src/qt/askpassphrasedialog.cpp
promag,2018-10-18T00:37:33Z,The wallet remains loaded?,https://github.com/bitcoin/bitcoin/pull/14478#discussion_r226138029,226138029,src/qt/askpassphrasedialog.cpp
ryanofsky,2018-10-18T01:01:01Z,"> I think this is as ugly as calling UI from low level, only inverted.\n\nI don't think I understand why this ugly. Can you explain? Is the problem just that the code throws an exception instead of returning an error code?\n",https://github.com/bitcoin/bitcoin/pull/14478#discussion_r226141014,226141014,src/qt/askpassphrasedialog.cpp
promag,2018-10-18T01:20:04Z,"Hope I can explain:\n - removing the assert doesn't affect this code and the try/catch would stay unnecessarily\n - it is required to see the implementation to understand why is a try/catch here\n\nSince we don't use throw specifiers, I think typed errors are more readable.",https://github.com/bitcoin/bitcoin/pull/14478#discussion_r226143507,226143507,src/qt/askpassphrasedialog.cpp
ryanofsky,2018-10-19T17:05:15Z,"Thanks for clarifying. It sounds like either switching to a return code, or switching from `std::runtime_error` to a specific exception type would address your concerns. I agree these things would be improvements. I'm also ok with current PR, though.",https://github.com/bitcoin/bitcoin/pull/14478#discussion_r226717472,226717472,src/qt/askpassphrasedialog.cpp
ryanofsky,2018-10-19T17:11:02Z,"> The wallet remains loaded?\n\nThis seems ok but it might be nice to add a code comment about why it's intended.",https://github.com/bitcoin/bitcoin/pull/14478#discussion_r226719061,226719061,src/qt/askpassphrasedialog.cpp
MarcoFalke,2018-10-20T14:40:57Z,"ignore my diatribe, but exceptions are just the cpp-ish way of goto. Especially with our wildcard catch blocks, this is hard to review and easy to break in the future. Less braindead programming languages like rust show that error handling can be done without exceptions or gotos.",https://github.com/bitcoin/bitcoin/pull/14478#discussion_r226829166,226829166,src/qt/askpassphrasedialog.cpp
