mcelrath,2016-07-20T20:31:31Z,Tested ACK\n\nWorks fine with `signrawtransaction` that fails to fully sign the transaction.  (empty witness)\n,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-234072787,234072787,
NicolasDorier,2016-07-21T14:53:05Z,utACK 73c5eb18e64c7071bfba45029264effccbef3cf3\n,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-234278774,234278774,
laanwj,2016-08-03T09:07:56Z,Does this need to be tested in the RPC tests?\n,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-237184498,237184498,
instagibbs,2016-08-03T13:05:25Z,@laanwj  added basic test check for new field\n,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-237231297,237231297,
jtimon,2017-01-25T20:18:07Z,utACK 34bbc0d Needs rebase.,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-275221095,275221095,
instagibbs,2017-01-25T20:47:06Z,Rebased,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-275228073,275228073,
laanwj,2017-01-26T15:41:34Z,utACK cb70b74,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-275421108,275421108,
jtimon,2017-02-03T03:59:25Z,"ACK squashing b69789a8addc086da4515783808d869d592b13f0 into ef8726c7c9d0f6d57f0419017b09b80c1553e3ea\n",https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-277159049,277159049,
jtimon,2017-02-18T22:57:39Z,Squash?,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-280881578,280881578,
instagibbs,2017-02-21T02:36:46Z,squashed,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-281229036,281229036,
instagibbs,2017-03-03T01:09:14Z,This need anything for merge?,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-283834483,283834483,
instagibbs,2017-03-04T04:31:32Z,"@jnewbery you're right, bad rebase. Sorry for not being careful. Check isn't even needed.",https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-284126617,284126617,
instagibbs,2017-05-17T18:16:55Z,"@mchrostowski thanks, that was leftover from previous structure of code. Nits addressed.",https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-302181258,302181258,
sipa,2017-05-17T19:33:30Z,utACK 6e9e02665674209b0b43f2aebecc7bb71e527054,https://github.com/bitcoin/bitcoin/pull/8384#issuecomment-302206807,302206807,
sipa,2017-01-26T17:06:22Z,Pass CScriptWitness by reference?,https://github.com/bitcoin/bitcoin/pull/8384#discussion_r98041142,98041142,src/rpc/rawtransaction.cpp
jnewbery,2017-03-03T14:07:52Z,"I think this is the wrong check. You're testing the size of the witness stack for this particular CTxIn, but I think what you intend is to check for the existence of a witness for this CTxIn. I think the test you need is:\n\n`if (!txin.scriptWitness.IsNull()) {`\n\nYour test will fail if (for example) TxIn in postion 3 has only 2 items on its witness stack.",https://github.com/bitcoin/bitcoin/pull/8384#discussion_r104158633,104158633,src/rpc/rawtransaction.cpp
mchrostowski,2017-05-16T23:30:53Z,"Why take an extra argument here?\nIn all use cases witness is txin.witness. More concise change if the method simply references txin.witness rather than changing code for each call.",https://github.com/bitcoin/bitcoin/pull/8384#discussion_r116881689,116881689,src/rpc/rawtransaction.cpp
mchrostowski,2017-05-16T23:36:22Z,"""txinwitness"" here seems derived from the variable name, in the context of the entry object it is understood the entry represents a transaction input error, using ""witness"" instead matches the other entries closer. That is, the error has a ""sequence"" not a ""txinnsequence"" or similar.",https://github.com/bitcoin/bitcoin/pull/8384#discussion_r116882422,116882422,src/rpc/rawtransaction.cpp
