[
  {
    "sha": "052f97563f8bf2f0da6401cb3eff706bf6061f39",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTJmOTc1NjNmOGJmMmYwZGE2NDAxY2IzZWZmNzA2YmY2MDYxZjM5",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-12T14:35:10Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-12T14:35:10Z"
      },
      "message": "Handle null values in RPCTypeCheckArgument",
      "tree": {
        "sha": "b07ad7f3195834860f708480f80f42f02287f5a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b07ad7f3195834860f708480f80f42f02287f5a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/052f97563f8bf2f0da6401cb3eff706bf6061f39",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/052f97563f8bf2f0da6401cb3eff706bf6061f39",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/052f97563f8bf2f0da6401cb3eff706bf6061f39",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/052f97563f8bf2f0da6401cb3eff706bf6061f39/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8b95239eeb052b122786d9cca6bc58106837599",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8b95239eeb052b122786d9cca6bc58106837599",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8b95239eeb052b122786d9cca6bc58106837599"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "99afabcd83d2bddd60ec7b65d8945d06aa8761a0",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052f97563f8bf2f0da6401cb3eff706bf6061f39/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052f97563f8bf2f0da6401cb3eff706bf6061f39/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=052f97563f8bf2f0da6401cb3eff706bf6061f39",
        "patch": "@@ -74,11 +74,17 @@ void RPCTypeCheck(const UniValue& params,\n     }\n }\n \n-void RPCTypeCheckArgument(const UniValue& value, UniValue::VType typeExpected)\n+bool RPCTypeCheckArgument(const UniValue& value, UniValue::VType typeExpected)\n {\n+    if (value.isNull()) {\n+        return false;\n+    }\n+\n     if (value.type() != typeExpected) {\n         throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Expected type %s, got %s\", uvTypeName(typeExpected), uvTypeName(value.type())));\n     }\n+\n+    return true;\n }\n \n void RPCTypeCheckObj(const UniValue& o,"
      },
      {
        "sha": "ea2635e284925a79837c5a92364edcd72c0aa137",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/052f97563f8bf2f0da6401cb3eff706bf6061f39/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/052f97563f8bf2f0da6401cb3eff706bf6061f39/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=052f97563f8bf2f0da6401cb3eff706bf6061f39",
        "patch": "@@ -75,7 +75,7 @@ void RPCTypeCheck(const UniValue& params,\n /**\n  * Type-check one argument; throws JSONRPCError if wrong type given.\n  */\n-void RPCTypeCheckArgument(const UniValue& value, UniValue::VType typeExpected);\n+bool RPCTypeCheckArgument(const UniValue& value, UniValue::VType typeExpected);\n \n /*\n   Check for expected keys/value types in an Object."
      }
    ]
  },
  {
    "sha": "b680b5b9cea69ace96c0472bcf3ed7cec098eedf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjgwYjViOWNlYTY5YWNlOTZjMDQ3MmJjZjNlZDdjZWMwOThlZWRm",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-12T15:29:59Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-12T15:30:17Z"
      },
      "message": "[WIP] Add histunspent RPC",
      "tree": {
        "sha": "26a73dae022ff3d1f85d5cdb711540a4a6d57913",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26a73dae022ff3d1f85d5cdb711540a4a6d57913"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b680b5b9cea69ace96c0472bcf3ed7cec098eedf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b680b5b9cea69ace96c0472bcf3ed7cec098eedf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b680b5b9cea69ace96c0472bcf3ed7cec098eedf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b680b5b9cea69ace96c0472bcf3ed7cec098eedf/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "052f97563f8bf2f0da6401cb3eff706bf6061f39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/052f97563f8bf2f0da6401cb3eff706bf6061f39",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/052f97563f8bf2f0da6401cb3eff706bf6061f39"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 96,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a394d687e525396c4a164086a6be4e27c89e710b",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b680b5b9cea69ace96c0472bcf3ed7cec098eedf/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b680b5b9cea69ace96c0472bcf3ed7cec098eedf/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=b680b5b9cea69ace96c0472bcf3ed7cec098eedf",
        "patch": "@@ -77,6 +77,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"addmultisigaddress\", 1, \"keys\" },\n     { \"createmultisig\", 0, \"nrequired\" },\n     { \"createmultisig\", 1, \"keys\" },\n+    { \"histunspent\", 0, \"ranges\" },\n     { \"listunspent\", 0, \"minconf\" },\n     { \"listunspent\", 1, \"maxconf\" },\n     { \"listunspent\", 2, \"addresses\" },"
      },
      {
        "sha": "df9f487fff3cd249bba65f847c1004ecfed1b2b7",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b680b5b9cea69ace96c0472bcf3ed7cec098eedf/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b680b5b9cea69ace96c0472bcf3ed7cec098eedf/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=b680b5b9cea69ace96c0472bcf3ed7cec098eedf",
        "patch": "@@ -2664,6 +2664,100 @@ UniValue listunspent(const JSONRPCRequest& request)\n     return results;\n }\n \n+UniValue histunspent(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 5)\n+        throw std::runtime_error(\n+            \"histunspent [ranges] ( min_depth max_depth )\\n\"\n+            \"\\nReturns an histogram of unspent transaction output amounts\\n\"\n+            \"with between min_depth and max_depth (inclusive) confirmations.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. ranges             (array) A json array of amounts that define the histogram bins\\n\"\n+            \"2. min_depth          (numeric, optional, default=1) The minimum confirmations to filter\\n\"\n+            \"3. max_depth          (numeric, optional, default=9999999) The maximum confirmations to filter\\n\"\n+            \"\\nResult\\n\"\n+            \"{\\n\"\n+            \"  \\\"bins\\\" : \\\"[]\\\",           (array) A json array of counts of amounts in each bin\\n\"\n+            \"  \\\"ranges\\\" : \\\"[]\\\",         (array) A json array of amounts that define the histogram bins\\n\"\n+            \"}\\n\"\n+\n+            \"\\nExamples\\n\"\n+            + HelpExampleCli(\"histunspent\", \"\\\"[0,1,10,100,1000,10000]\\\"\")\n+        );\n+\n+    std::vector<unsigned int> bins;\n+    std::map<CAmount, unsigned int> ranges;\n+    CAmount min_amount = 0;\n+    CAmount max_amount = MAX_MONEY;\n+\n+    if (!request.params[0].isNull()) {\n+        const std::vector<UniValue>& values = request.params[0].getValues();\n+\n+        if (values.size() < 2) {\n+            // throw invalid range (minimum 2 amounts);\n+        }\n+\n+        CAmount last = 0;\n+        for (unsigned int bin = 0; bin <= values.size()-1; ++bin) {\n+            CAmount amount = AmountFromValue(values[bin]);\n+            if (amount <= last) {\n+                // throw invalid range (not sorted);\n+            }\n+            printf(\" -- %\" PRIu64 \" -> %u\\n\", amount, bin);\n+            histogram.ranges.insert(std::make_pair(amount, bin));\n+        }\n+\n+        min_amount = histogram.ranges.begin()->first;\n+        max_amount = histogram.ranges.rbegin()->first;\n+    }\n+\n+    int min_depth = 1;\n+    if (RPCTypeCheckArgument(request.params[1], UniValue::VNUM)) {\n+        min_depth = request.params[0].get_int();\n+    }\n+\n+    int max_depth = 9999999;\n+    if (RPCTypeCheckArgument(request.params[2], UniValue::VNUM)) {\n+        max_depth = request.params[1].get_int();\n+    }\n+\n+    assert(pwallet != NULL);\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::vector<COutput> outputs;\n+    pwallet->AvailableCoins(outputs, false, NULL, min_amount, max_amount, MAX_MONEY, 0, min_depth, max_depth);\n+\n+    histogram.bins.resize(histogram.ranges.size()-1, 0);\n+    for (const COutput& out : outputs) {\n+        CAmount amount = out.tx->tx->vout[out.i].nValue;\n+\n+        std::map<CAmount, unsigned int>::const_iterator it = --histogram.ranges.lower_bound(amount);\n+        if (it != histogram.ranges.end()) {\n+            histogram.bins[it->second]++;\n+        }\n+    }\n+\n+    UniValue bins(UniValue::VARR);\n+    for (unsigned int bin : histogram.bins) {\n+       bins.push_back(UniValue(bin));\n+    }\n+\n+    UniValue ranges(UniValue::VARR);\n+    for (const auto& range : histogram.ranges) {\n+       ranges.push_back(ValueFromAmount(range.first));\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.push_back(Pair(\"bins\", bins));\n+    result.push_back(Pair(\"ranges\", ranges));\n+    return result;\n+}\n+\n UniValue fundrawtransaction(const JSONRPCRequest& request)\n {\n     CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n@@ -3090,6 +3184,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"listsinceblock\",           &listsinceblock,           false,  {\"blockhash\",\"target_confirmations\",\"include_watchonly\"} },\n     { \"wallet\",             \"listtransactions\",         &listtransactions,         false,  {\"account\",\"count\",\"skip\",\"include_watchonly\"} },\n     { \"wallet\",             \"listunspent\",              &listunspent,              false,  {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n+    { \"wallet\",             \"histunspent\",              &histunspent,              false,  {\"ranges\",\"min_depth\",\"max_depth\",\"include_unsafe\"} },\n     { \"wallet\",             \"lockunspent\",              &lockunspent,              true,   {\"unlock\",\"transactions\"} },\n     { \"wallet\",             \"move\",                     &movecmd,                  false,  {\"fromaccount\",\"toaccount\",\"amount\",\"minconf\",\"comment\"} },\n     { \"wallet\",             \"sendfrom\",                 &sendfrom,                 false,  {\"fromaccount\",\"toaddress\",\"amount\",\"minconf\",\"comment\",\"comment_to\"} },"
      }
    ]
  }
]