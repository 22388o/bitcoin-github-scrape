petertodd,2015-06-30T00:43:15Z,"Modulo wording nit, tested ACK.\n\nI'll close #6255 if this gets merged.\n",https://github.com/bitcoin/bitcoin/pull/6329#issuecomment-116890383,116890383,
luke-jr,2015-06-30T23:34:43Z,Changed...\n,https://github.com/bitcoin/bitcoin/pull/6329#issuecomment-117372582,117372582,
laanwj,2015-07-03T07:09:34Z,utACK apart rom translation nits\n,https://github.com/bitcoin/bitcoin/pull/6329#issuecomment-118257748,118257748,
luke-jr,2015-07-03T07:45:51Z,Removed translation tags.\n,https://github.com/bitcoin/bitcoin/pull/6329#issuecomment-118266592,118266592,
luke-jr,2015-07-03T08:29:44Z,showDebug done\n,https://github.com/bitcoin/bitcoin/pull/6329#issuecomment-118274525,118274525,
jtimon,2015-07-06T21:46:50Z,How did I missed this while being so insistent with @luke-jr and @petertodd about https://github.com/bitcoin/bitcoin/pull/5180 ...this is the wrong way to expose this...instead of -acceptnonstdtxn you would have just used -policy=test.\n,https://github.com/bitcoin/bitcoin/pull/6329#issuecomment-119006394,119006394,
petertodd,2015-06-26T19:52:27Z,"This is confusing, as it doesn't make clear that the default is true on testnet and regtest.\n",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33389755,33389755,src/init.cpp
luke-jr,2015-06-27T18:42:08Z,How would you improve it?\n,https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33414957,33414957,src/init.cpp
,2015-06-28T15:20:26Z,"One possibility: `""Relay and mine \""non-standard\"" transactions (testnet/regtest only, default: true)""`\n\nEdit: Want to clarify that a bit, I believe petertodd is confused by the default flag displayed ('0') when the actual flag setting code uses `!Params().RequireStandard()` defaulting true for testnet/regtest\n",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33423734,33423734,src/init.cpp
petertodd,2015-06-28T21:19:19Z,"@faizkhan00 Yup, that's exactly the issue I'm worried about.\n\nI think your wording is fine, modulo s/true/1/\n",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33427133,33427133,src/init.cpp
luke-jr,2015-06-29T05:39:04Z,Fixed.\n,https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33435324,33435324,src/init.cpp
laanwj,2015-07-03T07:07:52Z,"This should be part of the debugging options (`if(showDebug)`). Consequently, also the message should be left un-translated.\n",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33844010,33844010,src/init.cpp
laanwj,2015-07-03T07:08:26Z,Same here - no need to get translators involved in translating for a testing/debugigng-only option.\n,https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33844029,33844029,src/init.cpp
laanwj,2015-07-03T07:53:05Z,Also add `if(showDebug)`\n,https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33845746,33845746,src/init.cpp
jtimon,2015-07-06T21:55:18Z,"The semantics are wrong, why would the user be prevented from overrriding a particular chain's default?\nThis check is completely unnecessary.\nAlso, any reason to name the variable amd the option as opposites (instead of both RequireStandard or both acceptnonstdtxn)?\n",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33987204,33987204,src/init.cpp
petertodd,2015-07-06T22:38:10Z,"It's actually pretty dangerous to override the IsStandard() check on mainnet if you are a miner; you can end up creating blocks that take unreasonable amounts of time to verify, losing money.\n\nBest go force people to edit the source code to so that.\n\nAnyway, this is mainly useful for testing applications, so no need IMO to make this into a complex game of policy stuff when a simple and intuiti",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r33990613,33990613,src/init.cpp
jtimon,2015-07-07T18:25:11Z,"@petertodd Then miners shouldn't use this option and it can be documented. There's more users besides miners who may be interested in accepting non-std transactions and give the choice to the users instead of endlessly discuss the best default or how hard should it be to change it for less and more technical users.\nThis particularly surprises me because @luke-jr once said ""the testing policy is a",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r34072882,34072882,src/init.cpp
petertodd,2015-07-09T04:41:12Z,"@jtimon There's DoS attacks that IsStandard() prevents.\n\nAnyway, without peers that also accept your non-default transactions, changing policy locally is pretty pointless; solve that issue first. One idea would be a hashcash-based relay network, maybe using Bitmessage if you want to get it implemented quickly.\n",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r34223173,34223173,src/init.cpp
jtimon,2015-07-09T06:59:42Z,"> @jtimon There's DoS attacks that IsStandard() prevents.\n\nThere's DoS attacks that minRelayTxFee prevents, yet still -minrelaytxfee=1 is allowed (and -minrelaytxfee=0 should be allowed as well IMO).\n\n> Anyway, without peers that also accept your non-default transactions, changing policy locally is pretty pointless; solve that issue first.\n\nNo, I'm fixing this first. Solve that yourself if y",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r34228078,34228078,src/init.cpp
jtimon,2015-07-09T07:01:13Z,"Anyway, enough discussion. Please ack/nack https://github.com/jtimon/bitcoin/commit/2d71478a68d3a2c6cb5f5210f76b37d1f60a22cf in #6068 so that we can move on.\n",https://github.com/bitcoin/bitcoin/pull/6329#discussion_r34228159,34228159,src/init.cpp
