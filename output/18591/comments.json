[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612359504",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612359504",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 612359504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjM1OTUwNA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T07:53:39Z",
    "updated_at": "2020-04-11T07:53:39Z",
    "author_association": "MEMBER",
    "body": "Is this just to ensure continued C++17 compatibility of the codebase going forward?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612359504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612361362",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612361362",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 612361362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjM2MTM2Mg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T08:02:51Z",
    "updated_at": "2020-04-11T08:02:51Z",
    "author_association": "MEMBER",
    "body": "@fanquake No, just the first step. See the plan in https://github.com/bitcoin/bitcoin/issues/16684.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612361362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612362366",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612362366",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 612362366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjM2MjM2Ng==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T08:07:00Z",
    "updated_at": "2020-04-11T08:07:00Z",
    "author_association": "MEMBER",
    "body": "> No, just the first step. See the plan in #16684.\r\n\r\nI mean, is the point of the CI addition just to ensure that after the last C++17 incompatibility is fixed (https://github.com/bitcoin/bitcoin/pull/18591/commits/10b4f256d4ab891e23977b1d3610a5b758f7bcb1), that there are no trivial regressions? I understand that this can't do much else.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612362366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612371731",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612371731",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 612371731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjM3MTczMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T09:01:19Z",
    "updated_at": "2020-04-11T09:01:19Z",
    "author_association": "MEMBER",
    "body": "Yeah, to demonstrate that it works, and to start introducing support in our build system.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612371731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612411852",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612411852",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 612411852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjQxMTg1Mg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T12:38:24Z",
    "updated_at": "2020-04-11T12:38:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18088 (build: ensure we aren't using GNU extensions by fanquake)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612411852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612514472",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612514472",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 612514472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjUxNDQ3Mg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T21:11:52Z",
    "updated_at": "2020-04-11T21:11:52Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612514472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612823710",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612823710",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 612823710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjgyMzcxMA==",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-13T09:19:28Z",
    "updated_at": "2020-04-13T09:19:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nFor ease review this is the same implicit conversion impl that libc++ has: https://github.com/llvm-mirror/libcxx/blob/b857e811b34ae637ce49bbca19ae5bae26a9c4e8/include/span#L229",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612823710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612995733",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612995733",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 612995733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjk5NTczMw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-13T17:15:36Z",
    "updated_at": "2020-04-13T17:15:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nAsserting that we compile and pass tests also with a C++17 mode build is valuable.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612995733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614799147",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-614799147",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 614799147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDc5OTE0Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-16T17:47:05Z",
    "updated_at": "2020-04-16T17:47:05Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, thanks for adding.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614799147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618313137",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-618313137",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 618313137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODMxMzEzNw==",
    "user": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-23T10:11:55Z",
    "updated_at": "2020-04-23T10:11:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "tACK c31cbe7cfefc18123eb85ffb2ce509748435efde\r\n\r\nChecked that with and without `--enable-c++17` it compiles(including Qt and everything) and tests pass.\r\nChecked with `make -n` that without the flag it still passes `-std=c++11` and with it it passes `-std=c++17`.\r\nChecked that with the span changes reverted it still works on c++11 but fails on c++17 with:\r\n<details>\r\n\r\n```\r\ntest/util_tests.cpp: In member function \u2018void util_tests::test_spanparsing::test_method()\u2019:                                                                                                                                                                                                                                                                                                  \r\ntest/util_tests.cpp:1832:24: error: no match for \u2018operator=\u2019 (operand types are \u2018Span<const char>\u2019 and \u2018Span<char>\u2019)                                                                                                                                                                                                                                                                         \r\n 1832 |     sp = MakeSpan(input);                                                                                                                                                                                                                                                                                                                                                            \r\n      |                        ^                                                                                                                                                                                                                                                                                                                                                             \r\nIn file included from ./serialize.h:25,                                                                                                                                                                                                                                                                                                                                                      \r\n                 from ./hash.h:13,                                                                                                                                                                                                                                                                                                                                                           \r\n                 from test/util_tests.cpp:8:                                                                                                                                                                                                                                                                                                                                                 \r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(const Span<const char>&)\u2019                                                                                                                                                                                                                                                                           \r\n   18 | class Span                                                                                                                                                                                                                                                                                                                                                                           \r\n      |       ^~~~                                                                                                                                                                                                                                                                                                                                                                           \r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018const Span<const char>&\u2019                                                                                                                                                                                                                                                                                     \r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(Span<const char>&&)\u2019                                                                                                                                                                                                                                                                                \r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018Span<const char>&&\u2019                                                                                                                                                                                                                                                                                          \r\ntest/util_tests.cpp:1857:24: error: no match for \u2018operator=\u2019 (operand types are \u2018Span<const char>\u2019 and \u2018Span<char>\u2019)                                                                                                                                                                                                                                                                         \r\n 1857 |     sp = MakeSpan(input);                                                                                                                                                                                                                                                                                                                                                            \r\n      |                        ^                                                                                                                                                                                                                                                                                                                                                             \r\nIn file included from ./serialize.h:25,                                                                                                                                                                                                                                                                                                                                                      \r\n                 from ./hash.h:13,                                                                                                                                                                                                                                                                                                                                                           \r\n                 from test/util_tests.cpp:8:                                                                                                                                                                                                                                                                                                                                                 \r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(const Span<const char>&)\u2019                                                                                                                                                                                                                                                                           \r\n   18 | class Span                                                                                                                                                                                                                                                                                                                                                                           \r\n      |       ^~~~                                                                                                                                                                                                                                                                                                                                                                           \r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018const Span<const char>&\u2019\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(Span<const char>&&)\u2019\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018Span<const char>&&\u2019\r\ntest/util_tests.cpp:1880:24: error: no match for \u2018operator=\u2019 (operand types are \u2018Span<const char>\u2019 and \u2018Span<char>\u2019)\r\n 1880 |     sp = MakeSpan(input);\r\n      |                        ^\r\nIn file included from ./serialize.h:25,\r\n                 from ./hash.h:13,\r\n                 from test/util_tests.cpp:8:\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(const Span<const char>&)\u2019\r\n   18 | class Span\r\n      |       ^~~~\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018const Span<const char>&\u2019\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(Span<const char>&&)\u2019\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018Span<const char>&&\u2019\r\ntest/util_tests.cpp:1886:24: error: no match for \u2018operator=\u2019 (operand types are \u2018Span<const char>\u2019 and \u2018Span<char>\u2019)\r\n 1886 |     sp = MakeSpan(input);\r\n      |                        ^\r\nIn file included from ./serialize.h:25,\r\n                 from ./hash.h:13,\r\n                 from test/util_tests.cpp:8:\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(const Span<const char>&)\u2019\r\n   18 | class Span\r\n      |       ^~~~\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018const Span<const char>&\u2019\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(Span<const char>&&)\u2019\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018Span<const char>&&\u2019\r\ntest/util_tests.cpp:1892:24: error: no match for \u2018operator=\u2019 (operand types are \u2018Span<const char>\u2019 and \u2018Span<char>\u2019)\r\n 1892 |     sp = MakeSpan(input);\r\n      |                        ^\r\nIn file included from ./serialize.h:25,\r\n                 from ./hash.h:13,\r\n                 from test/util_tests.cpp:8:\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(const Span<const char>&)\u2019\r\n   18 | class Span\r\n      |       ^~~~\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018const Span<const char>&\u2019\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(Span<const char>&&)\u2019\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018Span<const char>&&\u2019\r\ntest/util_tests.cpp:1898:24: error: no match for \u2018operator=\u2019 (operand types are \u2018Span<const char>\u2019 and \u2018Span<char>\u2019)\r\n 1898 |     sp = MakeSpan(input);\r\n      |                        ^\r\nIn file included from ./serialize.h:25,\r\n                 from ./hash.h:13,\r\n                 from test/util_tests.cpp:8:\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(const Span<const char>&)\u2019\r\n   18 | class Span\r\n      |       ^~~~\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018const Span<const char>&\u2019\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(Span<const char>&&)\u2019\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018Span<const char>&&\u2019\r\ntest/util_tests.cpp:1904:24: error: no match for \u2018operator=\u2019 (operand types are \u2018Span<const char>\u2019 and \u2018Span<char>\u2019)\r\n 1904 |     sp = MakeSpan(input);\r\n      |                        ^\r\nIn file included from ./serialize.h:25,\r\n                 from ./hash.h:13,\r\n                 from test/util_tests.cpp:8:\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(const Span<const char>&)\u2019\r\n   18 | class Span\r\n      |       ^~~~\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018const Span<const char>&\u2019\r\n./span.h:18:7: note: candidate: \u2018constexpr Span<const char>& Span<const char>::operator=(Span<const char>&&)\u2019\r\n./span.h:18:7: note:   no known conversion for argument 1 from \u2018Span<char>\u2019 to \u2018Span<const char>&&\u2019\r\ntest/util_tests.cpp:1913:29: error: invalid initialization of reference of type \u2018const Span<const char>&\u2019 from expression of type \u2018Span<char>\u2019\r\n 1913 |     results = Split(MakeSpan(input), 'x');\r\n      |                     ~~~~~~~~^~~~~~~\r\nIn file included from test/util_tests.cpp:20:\r\n./util/spanparsing.h:46:61: note: in passing argument 1 of \u2018std::vector<Span<const char> > spanparsing::Split(const Span<const char>&, char)\u2019\r\n   46 | std::vector<Span<const char>> Split(const Span<const char>& sp, char sep);\r\n      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~^~\r\ntest/util_tests.cpp:1921:29: error: invalid initialization of reference of type \u2018const Span<const char>&\u2019 from expression of type \u2018Span<char>\u2019\r\n 1921 |     results = Split(MakeSpan(input), '-');\r\n      |                     ~~~~~~~~^~~~~~~\r\nIn file included from test/util_tests.cpp:20:\r\n./util/spanparsing.h:46:61: note: in passing argument 1 of \u2018std::vector<Span<const char> > spanparsing::Split(const Span<const char>&, char)\u2019\r\n   46 | std::vector<Span<const char>> Split(const Span<const char>& sp, char sep);\r\n      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~^~\r\ntest/util_tests.cpp:1926:29: error: invalid initialization of reference of type \u2018const Span<const char>&\u2019 from expression of type \u2018Span<char>\u2019\r\n 1926 |     results = Split(MakeSpan(input), '#');\r\n      |                     ~~~~~~~~^~~~~~~\r\nIn file included from test/util_tests.cpp:20:\r\n./util/spanparsing.h:46:61: note: in passing argument 1 of \u2018std::vector<Span<const char> > spanparsing::Split(const Span<const char>&, char)\u2019\r\n   46 | std::vector<Span<const char>> Split(const Span<const char>& sp, char sep);\r\n      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~^~\r\ntest/util_tests.cpp:1933:29: error: invalid initialization of reference of type \u2018const Span<const char>&\u2019 from expression of type \u2018Span<char>\u2019\r\n 1933 |     results = Split(MakeSpan(input), '*');\r\n      |                     ~~~~~~~~^~~~~~~\r\nIn file included from test/util_tests.cpp:20:\r\n./util/spanparsing.h:46:61: note: in passing argument 1 of \u2018std::vector<Span<const char> > spanparsing::Split(const Span<const char>&, char)\u2019\r\n   46 | std::vector<Span<const char>> Split(const Span<const char>& sp, char sep);\r\n```\r\n\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618313137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619598569",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-619598569",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18591",
    "id": 619598569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTU5ODU2OQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-26T18:13:49Z",
    "updated_at": "2020-04-26T18:13:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested ACK c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619598569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407031965",
    "pull_request_review_id": 391745346,
    "id": 407031965,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMTk2NQ==",
    "diff_hunk": "@@ -61,8 +61,20 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory], [nodefault])",
    "path": "configure.ac",
    "position": null,
    "original_position": 15,
    "commit_id": "c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "original_commit_id": "48313a3e9aa5f7e8aac3919300b09c5763c9430d",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Given it's been removed in the `ax_cxx_compile_stdcxx.m4` macro update, the `[nodefault]` argument should be removed here and below.",
    "created_at": "2020-04-11T07:48:15Z",
    "updated_at": "2020-04-11T18:30:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407031965",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407031965"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407031965"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407031965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407039980",
    "pull_request_review_id": 391750552,
    "id": 407039980,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzOTk4MA==",
    "diff_hunk": "@@ -61,8 +61,20 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory], [nodefault])",
    "path": "configure.ac",
    "position": null,
    "original_position": 15,
    "commit_id": "c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "original_commit_id": "48313a3e9aa5f7e8aac3919300b09c5763c9430d",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2020-04-11T09:15:51Z",
    "updated_at": "2020-04-11T18:30:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407039980",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407039980"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407039980"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407039980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT",
    "in_reply_to_id": 407031965
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407045664",
    "pull_request_review_id": 391754292,
    "id": 407045664,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NTY2NA==",
    "diff_hunk": "@@ -148,6 +148,11 @@ jobs:\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_native_valgrind.sh\"\n \n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, c++17]'",
    "path": ".travis.yml",
    "position": null,
    "original_position": 5,
    "commit_id": "c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "original_commit_id": "5c57d82ace7f3f812434f25c268943fd405b547f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Our releases are built with bionic, and I think there are no plans to drop support for bionic in 0.22.0. So this should probably run on bionic?",
    "created_at": "2020-04-11T10:17:02Z",
    "updated_at": "2020-04-11T18:30:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407045664",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407045664"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407045664"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407045664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 152,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407108791",
    "pull_request_review_id": 391799162,
    "id": 407108791,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwODc5MQ==",
    "diff_hunk": "@@ -148,6 +148,11 @@ jobs:\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_native_valgrind.sh\"\n \n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, c++17]'",
    "path": ".travis.yml",
    "position": null,
    "original_position": 5,
    "commit_id": "c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "original_commit_id": "5c57d82ace7f3f812434f25c268943fd405b547f",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done. Travis passes.",
    "created_at": "2020-04-11T20:42:27Z",
    "updated_at": "2020-04-11T20:42:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407108791",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407108791"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407108791"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407108791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 152,
    "side": "RIGHT",
    "in_reply_to_id": 407045664
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407112125",
    "pull_request_review_id": 391801310,
    "id": 407112125,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExMjEyNQ==",
    "diff_hunk": "@@ -61,8 +61,20 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory], [nodefault])",
    "path": "configure.ac",
    "position": null,
    "original_position": 15,
    "commit_id": "c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "original_commit_id": "48313a3e9aa5f7e8aac3919300b09c5763c9430d",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The `[nodefault]` argument was added in _our_ patch: https://github.com/bitcoin/bitcoin/pull/9831/commits/9829c54de2725037ee0702306cbaa99fc9aa1826\r\n\r\nWhy is it possible to drop it?",
    "created_at": "2020-04-11T21:19:14Z",
    "updated_at": "2020-04-11T21:19:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407112125",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407112125"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407112125"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407112125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT",
    "in_reply_to_id": 407031965
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407112965",
    "pull_request_review_id": 391801895,
    "id": 407112965,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExMjk2NQ==",
    "diff_hunk": "@@ -61,8 +61,20 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory], [nodefault])",
    "path": "configure.ac",
    "position": null,
    "original_position": 15,
    "commit_id": "c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "original_commit_id": "48313a3e9aa5f7e8aac3919300b09c5763c9430d",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ouch. I had no idea this was a local modification.",
    "created_at": "2020-04-11T21:29:06Z",
    "updated_at": "2020-04-11T21:29:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407112965",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407112965"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407112965"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407112965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT",
    "in_reply_to_id": 407031965
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407113787",
    "pull_request_review_id": 391802473,
    "id": 407113787,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExMzc4Nw==",
    "diff_hunk": "@@ -61,8 +61,20 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory], [nodefault])",
    "path": "configure.ac",
    "position": null,
    "original_position": 15,
    "commit_id": "c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "original_commit_id": "48313a3e9aa5f7e8aac3919300b09c5763c9430d",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah, it seems the new upstream version actually changed behaviour and now does what we called \"nodefault\" regardless.\r\n\r\nEven with compilers that support c++17, if we request c++11, we'll only get c++11 (which can be verified from the Travis build logs).\r\n\r\n",
    "created_at": "2020-04-11T21:39:30Z",
    "updated_at": "2020-04-11T21:39:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407113787",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407113787"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407113787"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407113787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT",
    "in_reply_to_id": 407031965
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407117235",
    "pull_request_review_id": 391804667,
    "id": 407117235,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNzIzNQ==",
    "diff_hunk": "@@ -61,8 +61,20 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory], [nodefault])",
    "path": "configure.ac",
    "position": null,
    "original_position": 15,
    "commit_id": "c31cbe7cfefc18123eb85ffb2ce509748435efde",
    "original_commit_id": "48313a3e9aa5f7e8aac3919300b09c5763c9430d",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I should have made that more clear. I\u2019ve got the same change as part of #18088.",
    "created_at": "2020-04-11T22:20:40Z",
    "updated_at": "2020-04-11T22:20:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407117235",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407117235"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407117235"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18591"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407117235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 73,
    "side": "RIGHT",
    "in_reply_to_id": 407031965
  }
]