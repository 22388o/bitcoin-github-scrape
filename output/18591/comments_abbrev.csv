fanquake,2020-04-11 07:53:39,Is this just to ensure continued C++17 compatibility of the codebase going forward?,https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612359504,612359504,
sipa,2020-04-11 08:02:51,"@fanquake No, just the first step. See the plan in https://github.com/bitcoin/bitcoin/issues/16684.",https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612361362,612361362,
fanquake,2020-04-11 08:07:00,"> No, just the first step. See the plan in #16684.\n\nI mean, is the point of the CI addition just to ensure that after the last C++17 incompatibility is fixed (https://github.com/bitcoin/bitcoin/pull/18591/commits/10b4f256d4ab891e23977b1d3610a5b758f7bcb1), that there are no trivial regressions? I understand that this can't do much else.",https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612362366,612362366,
sipa,2020-04-11 09:01:19,"Yeah, to demonstrate that it works, and to start introducing support in our build system.",https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612371731,612371731,
DrahtBot,2020-04-11 12:38:24,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18088 (build: ensure we aren't using GNU extensions by fanquake)\n\nIf you consider this pull request important, please a",https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612411852,612411852,
hebasto,2020-04-11 21:11:52,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612514472,612514472,
elichai,2020-04-13 09:19:28,"Concept ACK\n\nFor ease review this is the same implicit conversion impl that libc++ has: https://github.com/llvm-mirror/libcxx/blob/b857e811b34ae637ce49bbca19ae5bae26a9c4e8/include/span#L229",https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612823710,612823710,
practicalswift,2020-04-13 17:15:36,"Concept ACK\n\nAsserting that we compile and pass tests also with a C++17 mode build is valuable.",https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-612995733,612995733,
laanwj,2020-04-16 17:47:05,"Concept ACK, thanks for adding.",https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-614799147,614799147,
elichai,2020-04-23 10:11:55,"tACK c31cbe7cfefc18123eb85ffb2ce509748435efde\n\nChecked that with and without `--enable-c++17` it compiles(including Qt and everything) and tests pass.\nChecked with `make -n` that without the flag it still passes `-std=c++11` and with it it passes `-std=c++17`.\nChecked that with the span changes reverted it still works on c++11 but fails on c++17 with:\n<details>\n\n```\ntest/util_tests",https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-618313137,618313137,
practicalswift,2020-04-26 18:13:49,Tested ACK c31cbe7cfefc18123eb85ffb2ce509748435efde,https://github.com/bitcoin/bitcoin/pull/18591#issuecomment-619598569,619598569,
fanquake,2020-04-11 07:48:15,"Given it's been removed in the `ax_cxx_compile_stdcxx.m4` macro update, the `[nodefault]` argument should be removed here and below.",https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407031965,407031965,configure.ac
sipa,2020-04-11 09:15:51,Done.,https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407039980,407039980,configure.ac
MarcoFalke,2020-04-11 10:17:02,"Our releases are built with bionic, and I think there are no plans to drop support for bionic in 0.22.0. So this should probably run on bionic?",https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407045664,407045664,.travis.yml
sipa,2020-04-11 20:42:27,Done. Travis passes.,https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407108791,407108791,.travis.yml
hebasto,2020-04-11 21:19:14,"The `[nodefault]` argument was added in _our_ patch: https://github.com/bitcoin/bitcoin/pull/9831/commits/9829c54de2725037ee0702306cbaa99fc9aa1826\n\nWhy is it possible to drop it?",https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407112125,407112125,configure.ac
sipa,2020-04-11 21:29:06,Ouch. I had no idea this was a local modification.,https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407112965,407112965,configure.ac
sipa,2020-04-11 21:39:30,"Ah, it seems the new upstream version actually changed behaviour and now does what we called ""nodefault"" regardless.\n\nEven with compilers that support c++17, if we request c++11, we'll only get c++11 (which can be verified from the Travis build logs).\n\n",https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407113787,407113787,configure.ac
fanquake,2020-04-11 22:20:40,I should have made that more clear. Iâ€™ve got the same change as part of #18088.,https://github.com/bitcoin/bitcoin/pull/18591#discussion_r407117235,407117235,configure.ac
