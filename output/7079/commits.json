[
  {
    "sha": "5029698186445bf3cd69d0e720f019c472661bff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDI5Njk4MTg2NDQ1YmYzY2Q2OWQwZTcyMGYwMTljNDcyNjYxYmZm",
    "commit": {
      "author": {
        "name": "kazcw",
        "email": "keziahw@gmail.com",
        "date": "2014-07-16T21:31:41Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-23T01:18:54Z"
      },
      "message": "prevent peer flooding request queue for an inv\n\nmapAlreadyAskedFor does not keep track of which peer has a request queued for a\nparticular tx. As a result, a peer can blind a node to a tx indefinitely by\nsending many invs for the same tx, and then never replying to getdatas for it.\nEach inv received will be placed 2 minutes farther back in mapAlreadyAskedFor,\nso a short message containing 10 invs would render that tx unavailable for 20\nminutes.\n\nThis is fixed by disallowing a peer from having more than one entry for a\nparticular inv in mapAlreadyAskedFor at a time.",
      "tree": {
        "sha": "7557777e2ca8f70bf5213e81fd9d49ba1993b7ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7557777e2ca8f70bf5213e81fd9d49ba1993b7ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5029698186445bf3cd69d0e720f019c472661bff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5029698186445bf3cd69d0e720f019c472661bff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5029698186445bf3cd69d0e720f019c472661bff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5029698186445bf3cd69d0e720f019c472661bff/comments",
    "author": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b0fc179ab8795463e0a0f07e989ec6f592a1f90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b0fc179ab8795463e0a0f07e989ec6f592a1f90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b0fc179ab8795463e0a0f07e989ec6f592a1f90"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "05dedb5631e568dfd94351c3e7519eba4a923f3f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5029698186445bf3cd69d0e720f019c472661bff/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5029698186445bf3cd69d0e720f019c472661bff/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5029698186445bf3cd69d0e720f019c472661bff",
        "patch": "@@ -5226,6 +5226,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                     vGetData.clear();\n                 }\n             }\n+            pto->setAskFor.erase(inv.hash);\n             pto->mapAskFor.erase(pto->mapAskFor.begin());\n         }\n         if (!vGetData.empty())"
      },
      {
        "sha": "04119e9ddd196ec61424e2bc6bca574bd050ae86",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5029698186445bf3cd69d0e720f019c472661bff/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5029698186445bf3cd69d0e720f019c472661bff/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=5029698186445bf3cd69d0e720f019c472661bff",
        "patch": "@@ -2410,6 +2410,10 @@ void CNode::AskFor(const CInv& inv)\n {\n     if (mapAskFor.size() > MAPASKFOR_MAX_SZ)\n         return;\n+    // a peer may not occupy multiple positions in an inv's request queue\n+    if (!setAskFor.insert(inv.hash).second)\n+        return;\n+\n     // We're using mapAskFor as a priority queue,\n     // the key is the earliest time the request can be sent\n     int64_t nRequestTime;"
      },
      {
        "sha": "046811d54cc71613b87bb3c850856fb3e6c7ab94",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5029698186445bf3cd69d0e720f019c472661bff/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5029698186445bf3cd69d0e720f019c472661bff/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=5029698186445bf3cd69d0e720f019c472661bff",
        "patch": "@@ -382,6 +382,7 @@ class CNode\n     mruset<CInv> setInventoryKnown;\n     std::vector<CInv> vInventoryToSend;\n     CCriticalSection cs_inventory;\n+    std::set<uint256> setAskFor;\n     std::multimap<int64_t, CInv> mapAskFor;\n \n     // Ping time measurement:"
      }
    ]
  },
  {
    "sha": "ebb25f4c23adbcb55796c402bafd6064a136f16f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYmIyNWY0YzIzYWRiY2I1NTc5NmM0MDJiYWZkNjA2NGExMzZmMTZm",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-23T01:54:23Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-23T01:54:23Z"
      },
      "message": "Limit setAskFor and retire requested entries only when a getdata returns.\n\nThe setAskFor duplicate elimination was too eager and removed entries\n when we still had no getdata response, allowing the peer to keep\n INVing and not responding.",
      "tree": {
        "sha": "4f9ccbb6e0e8d46a47690caec79112d5726e16f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f9ccbb6e0e8d46a47690caec79112d5726e16f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebb25f4c23adbcb55796c402bafd6064a136f16f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb25f4c23adbcb55796c402bafd6064a136f16f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ebb25f4c23adbcb55796c402bafd6064a136f16f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb25f4c23adbcb55796c402bafd6064a136f16f/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5029698186445bf3cd69d0e720f019c472661bff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5029698186445bf3cd69d0e720f019c472661bff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5029698186445bf3cd69d0e720f019c472661bff"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2bcc4cbc54437b0293d6424a229baf77798ec5b1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb25f4c23adbcb55796c402bafd6064a136f16f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb25f4c23adbcb55796c402bafd6064a136f16f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ebb25f4c23adbcb55796c402bafd6064a136f16f",
        "patch": "@@ -4406,6 +4406,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         bool fMissingInputs = false;\n         CValidationState state;\n \n+        pfrom->setAskFor.erase(inv.hash);\n         mapAlreadyAskedFor.erase(inv);\n \n         // Check for recently rejected (and do other quick existence checks)\n@@ -5225,8 +5226,10 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                     pto->PushMessage(\"getdata\", vGetData);\n                     vGetData.clear();\n                 }\n+            } else {\n+                //If we're not going to ask, don't expect a response.\n+                pto->setAskFor.erase(inv.hash);\n             }\n-            pto->setAskFor.erase(inv.hash);\n             pto->mapAskFor.erase(pto->mapAskFor.begin());\n         }\n         if (!vGetData.empty())"
      },
      {
        "sha": "a8b6ca9c5b61c0ea892d6bb72e2cd7de7e042f9a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb25f4c23adbcb55796c402bafd6064a136f16f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb25f4c23adbcb55796c402bafd6064a136f16f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ebb25f4c23adbcb55796c402bafd6064a136f16f",
        "patch": "@@ -2408,9 +2408,9 @@ CNode::~CNode()\n \n void CNode::AskFor(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ)\n+    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n         return;\n-    // a peer may not occupy multiple positions in an inv's request queue\n+    // a peer may not have multiple non-responded queue positions for a single inv item\n     if (!setAskFor.insert(inv.hash).second)\n         return;\n "
      },
      {
        "sha": "bf75899a402aaa87aa27f6a3b65d9ee149df6798",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb25f4c23adbcb55796c402bafd6064a136f16f/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb25f4c23adbcb55796c402bafd6064a136f16f/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ebb25f4c23adbcb55796c402bafd6064a136f16f",
        "patch": "@@ -58,6 +58,8 @@ static const bool DEFAULT_UPNP = false;\n #endif\n /** The maximum number of entries in mapAskFor */\n static const size_t MAPASKFOR_MAX_SZ = MAX_INV_SZ;\n+/** The maximum number of entries in setAskFor (larger due to getdata latency)*/\n+static const size_t SETASKFOR_MAX_SZ = 2 * MAX_INV_SZ;\n /** The maximum number of peer connections to maintain. */\n static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n /** The default for -maxuploadtarget. 0 = Unlimited */"
      }
    ]
  }
]