[
  {
    "sha": "ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDRjN2ZkNGZkYzFmNWI4OTE2MmQ5ZTkxYWQ1N2QxNjIwNWIwNmVi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-09-05T10:23:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-09-06T10:12:18Z"
      },
      "message": "qt: add vout index to transaction id in transactions details dialog",
      "tree": {
        "sha": "e0f8cb449ced2bbe722305360e7d7f4955a6216c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0f8cb449ced2bbe722305360e7d7f4955a6216c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d22d9753cc7175a7cf0ce440b96d83277747ecb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d22d9753cc7175a7cf0ce440b96d83277747ecb9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d22d9753cc7175a7cf0ce440b96d83277747ecb9"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "e27aa93a4ab3e6720687f742afdbc45a911e2825",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
        "patch": "@@ -8,6 +8,7 @@\n #include \"ui_interface.h\"\n #include \"base58.h\"\n #include \"paymentserver.h\"\n+#include \"transactionrecord.h\"\n \n #include <string>\n \n@@ -32,7 +33,7 @@ QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n     }\n }\n \n-QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int unit)\n+QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int unit)\n {\n     QString strHTML;\n \n@@ -215,7 +216,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int unit)\n         if (wtx.mapValue.count(\"comment\") && !wtx.mapValue[\"comment\"].empty())\n             strHTML += \"<br><b>\" + tr(\"Comment\") + \":</b><br>\" + GUIUtil::HtmlEscape(wtx.mapValue[\"comment\"], true) + \"<br>\";\n \n-        strHTML += \"<b>\" + tr(\"Transaction ID\") + \":</b> \" + wtx.GetHash().ToString().c_str() + \"<br>\";\n+        strHTML += \"<b>\" + tr(\"Transaction ID\") + \":</b> \" + TransactionRecord::formatSubTxId(wtx.GetHash(), vout) + \"<br>\";\n \n         //\n         // PaymentRequest info:\n@@ -225,7 +226,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int unit)\n             if (r.first == \"PaymentRequest\")\n             {\n                 PaymentRequestPlus req;\n-                req.parse(QByteArray::fromRawData(r.second.c_str(), r.second.size()));\n+                req.parse(QByteArray::fromRawData(r.second.data(), r.second.size()));\n                 QString merchant;\n                 if (req.getMerchant(PaymentServer::getCertStore(), merchant))\n                     strHTML += \"<b>\" + tr(\"Merchant\") + \":</b> \" + GUIUtil::HtmlEscape(merchant) + \"<br>\";"
      },
      {
        "sha": "8b3684e961e41b63d71a5684ccbf2486c38db5ec",
        "filename": "src/qt/transactiondesc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactiondesc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactiondesc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.h?ref=ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
        "patch": "@@ -14,7 +14,7 @@ class TransactionDesc: public QObject\n     Q_OBJECT\n \n public:\n-    static QString toHTML(CWallet *wallet, CWalletTx &wtx, int unit);\n+    static QString toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int unit);\n \n private:\n     TransactionDesc() {}"
      },
      {
        "sha": "ea2c1f0a5cfd5683b1ac534a5a88f11801578c84",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
        "patch": "@@ -224,8 +224,13 @@ bool TransactionRecord::statusUpdateNeeded()\n     return status.cur_num_blocks != nBestHeight;\n }\n \n-std::string TransactionRecord::getTxID()\n+QString TransactionRecord::getTxID() const\n {\n-    return hash.ToString() + strprintf(\"-%03d\", idx);\n+    return formatSubTxId(hash, idx);\n+}\n+\n+QString TransactionRecord::formatSubTxId(const uint256 &hash, int vout)\n+{\n+    return QString::fromStdString(hash.ToString() + strprintf(\"-%03d\", vout));\n }\n "
      },
      {
        "sha": "480e7a7f2c2318ae68d55e9b9abe8f1f560d128b",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
        "patch": "@@ -4,6 +4,7 @@\n #include \"uint256.h\"\n \n #include <QList>\n+#include <QString>\n \n class CWallet;\n class CWalletTx;\n@@ -117,7 +118,10 @@ class TransactionRecord\n     TransactionStatus status;\n \n     /** Return the unique identifier for this transaction (part) */\n-    std::string getTxID();\n+    QString getTxID() const;\n+\n+    /** Format subtransaction id */\n+    static QString formatSubTxId(const uint256 &hash, int vout);\n \n     /** Update status from core wallet tx.\n      */"
      },
      {
        "sha": "47ab4bcda6f16fe4324ec4d9c4da19b77a8b1a46",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=ed4c7fd4fdc1f5b89162d9e91ad57d16205b06eb",
        "patch": "@@ -208,7 +208,7 @@ class TransactionTablePriv\n             std::map<uint256, CWalletTx>::iterator mi = wallet->mapWallet.find(rec->hash);\n             if(mi != wallet->mapWallet.end())\n             {\n-                return TransactionDesc::toHTML(wallet, mi->second, unit);\n+                return TransactionDesc::toHTML(wallet, mi->second, rec->idx, unit);\n             }\n         }\n         return QString(\"\");\n@@ -569,7 +569,7 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n     case AmountRole:\n         return rec->credit + rec->debit;\n     case TxIDRole:\n-        return QString::fromStdString(rec->getTxID());\n+        return rec->getTxID();\n     case ConfirmedRole:\n         // Return True if transaction counts for balance\n         return rec->status.confirmed && !(rec->type == TransactionRecord::Generated &&"
      }
    ]
  }
]