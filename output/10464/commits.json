[
  {
    "sha": "f285145764bb0495539daeb59fc651bd5e4d844b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjg1MTQ1NzY0YmIwNDk1NTM5ZGFlYjU5ZmM2NTFiZDVlNGQ4NDRi",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-27T03:31:04Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-27T04:33:39Z"
      },
      "message": "Introduce static DoWarning (simplify UpdateTip)",
      "tree": {
        "sha": "5da5bcd2cd35d1e10427a3eeb4e30e92d35ee30e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5da5bcd2cd35d1e10427a3eeb4e30e92d35ee30e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f285145764bb0495539daeb59fc651bd5e4d844b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZKQGjAAoJEIhmwY6hyUSi/Q0QALo2pEJCiTqJQ/7bzaR1ZxrT\nMBih90uDsP6j97F6uUdcrZWvuosRM1HPXnRM5m2NEmb7YMORgvTID4pQYZYGNNHt\nGpq5OYvbHzVO6aV9gKnaS5civo3if6M3S/yW5YsqSPdhRnkf8LmHfEUAbC0143Hg\nDpj/Q7NG68VloHusRJIKGweOU8XfF8S8dHcKLu7D7INHbohJdac+hJHD3yE8Ezk5\n6C/QH3x1AI/MoC9uYR/B8Ppd4/jeQSklz2Z0KoHlJ/+U/mBeVQvtJ5F3/Sbr3VR4\nc+vGcCAXhMjWkom5jNYkStsRFzZCvNCRhDPMTxvGRdkAvIhOvE2V0Atbu8/lHAVE\nLn2OXtcNa4zxxrLCd5P12QwA7Donrgu+SzNFsoHM2SlUaQ4/xsCwTriRaobcanIa\nCwsEkSH99Bj7KmxHQettq5mQf5FnEKjqn3vMlmoIGT0m+sVUtng/4Xs8bDnisWd5\nUOFBZmhZ1Mi2ZZ0lYhMTYl1PsPaB3GBWPjNr6Q92vnieQzS/RNLWS0amRFBknHIR\njZZOsEj9P4F+HNoAJ9u2+0s9Vr1prraXYEXRsMaVtPTbEpqosLUnFLZvtlRA4Vdy\nRV05NsDngxUaYAo0FtMUD/MMRWcjOWgMweW6dFNoP+CTUzWAhHfOniYSfxFeda/X\nsAiLYCe+PGjSJhLrGWnX\n=dCRi\n-----END PGP SIGNATURE-----",
        "payload": "tree 5da5bcd2cd35d1e10427a3eeb4e30e92d35ee30e\nparent 4314544d46e8e46c3c9da60f1d18297f52f58418\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1495855864 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1495859619 +0200\n\nIntroduce static DoWarning (simplify UpdateTip)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f285145764bb0495539daeb59fc651bd5e4d844b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f285145764bb0495539daeb59fc651bd5e4d844b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f285145764bb0495539daeb59fc651bd5e4d844b/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4314544d46e8e46c3c9da60f1d18297f52f58418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4314544d46e8e46c3c9da60f1d18297f52f58418",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4314544d46e8e46c3c9da60f1d18297f52f58418"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 15,
      "deletions": 14
    },
    "files": [
      {
        "sha": "1709fa8188c6879167e8c9bf7ed8541171f37ee9",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 14,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f285145764bb0495539daeb59fc651bd5e4d844b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f285145764bb0495539daeb59fc651bd5e4d844b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=f285145764bb0495539daeb59fc651bd5e4d844b",
        "patch": "@@ -1814,6 +1814,16 @@ void PruneAndFlush() {\n     FlushStateToDisk(state, FLUSH_STATE_NONE);\n }\n \n+static void DoWarning(const std::string& strWarning)\n+{\n+    static bool fWarned = false;\n+    SetMiscWarning(strWarning);\n+    if (!fWarned) {\n+        AlertNotify(strWarning);\n+        fWarned = true;\n+    }\n+}\n+\n /** Update chainActive and related internal data structures. */\n void static UpdateTip(CBlockIndex *pindexNew, const CChainParams& chainParams) {\n     chainActive.SetTip(pindexNew);\n@@ -1823,7 +1833,6 @@ void static UpdateTip(CBlockIndex *pindexNew, const CChainParams& chainParams) {\n \n     cvBlockChange.notify_all();\n \n-    static bool fWarned = false;\n     std::vector<std::string> warningMessages;\n     if (!IsInitialBlockDownload())\n     {\n@@ -1833,15 +1842,11 @@ void static UpdateTip(CBlockIndex *pindexNew, const CChainParams& chainParams) {\n             WarningBitsConditionChecker checker(bit);\n             ThresholdState state = checker.GetStateFor(pindex, chainParams.GetConsensus(), warningcache[bit]);\n             if (state == THRESHOLD_ACTIVE || state == THRESHOLD_LOCKED_IN) {\n+                const std::string strWarning = strprintf(_(\"Warning: unknown new rules activated (versionbit %i)\"), bit);\n                 if (state == THRESHOLD_ACTIVE) {\n-                    std::string strWarning = strprintf(_(\"Warning: unknown new rules activated (versionbit %i)\"), bit);\n-                    SetMiscWarning(strWarning);\n-                    if (!fWarned) {\n-                        AlertNotify(strWarning);\n-                        fWarned = true;\n-                    }\n+                    DoWarning(strWarning);\n                 } else {\n-                    warningMessages.push_back(strprintf(\"unknown new rules are about to activate (versionbit %i)\", bit));\n+                    warningMessages.push_back(strWarning);\n                 }\n             }\n         }\n@@ -1854,16 +1859,12 @@ void static UpdateTip(CBlockIndex *pindexNew, const CChainParams& chainParams) {\n             pindex = pindex->pprev;\n         }\n         if (nUpgraded > 0)\n-            warningMessages.push_back(strprintf(\"%d of last 100 blocks have unexpected version\", nUpgraded));\n+            warningMessages.push_back(strprintf(_(\"%d of last 100 blocks have unexpected version\"), nUpgraded));\n         if (nUpgraded > 100/2)\n         {\n             std::string strWarning = _(\"Warning: Unknown block versions being mined! It's possible unknown rules are in effect\");\n             // notify GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n-            SetMiscWarning(strWarning);\n-            if (!fWarned) {\n-                AlertNotify(strWarning);\n-                fWarned = true;\n-            }\n+            DoWarning(strWarning);\n         }\n     }\n     LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%.8g tx=%lu date='%s' progress=%f cache=%.1fMiB(%utx)\", __func__,"
      }
    ]
  }
]