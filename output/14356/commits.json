[
  {
    "sha": "88a79cb436b30b39d37d139da723f5a31e9d161b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGE3OWNiNDM2YjMwYjM5ZDM3ZDEzOWRhNzIzZjVhMzFlOWQxNjFi",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-09-30T02:09:15Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-09-30T02:09:15Z"
      },
      "message": "fix converttopsbt permitsigdata arg, add basic test",
      "tree": {
        "sha": "53ad894377848752690cad04f69be88c58c46c5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53ad894377848752690cad04f69be88c58c46c5f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88a79cb436b30b39d37d139da723f5a31e9d161b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88a79cb436b30b39d37d139da723f5a31e9d161b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88a79cb436b30b39d37d139da723f5a31e9d161b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88a79cb436b30b39d37d139da723f5a31e9d161b/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9327306b580bb161d1732c0a0260b46c0df015c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9327306b580bb161d1732c0a0260b46c0df015c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9327306b580bb161d1732c0a0260b46c0df015c"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e13a5513884e8e2c48d4f488d03e98dd3483c999",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88a79cb436b30b39d37d139da723f5a31e9d161b/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88a79cb436b30b39d37d139da723f5a31e9d161b/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=88a79cb436b30b39d37d139da723f5a31e9d161b",
        "patch": "@@ -1669,7 +1669,7 @@ UniValue converttopsbt(const JSONRPCRequest& request)\n \n     // Remove all scriptSigs and scriptWitnesses from inputs\n     for (CTxIn& input : tx.vin) {\n-        if ((!input.scriptSig.empty() || !input.scriptWitness.IsNull()) && (request.params[1].isNull() || (!request.params[1].isNull() && request.params[1].get_bool()))) {\n+        if ((!input.scriptSig.empty() || !input.scriptWitness.IsNull()) && !permitsigdata) {\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Inputs must not have scriptSigs and scriptWitnesses\");\n         }\n         input.scriptSig.clear();"
      },
      {
        "sha": "3cbaa274e97f43e0560ac60943a87cf424098bb6",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88a79cb436b30b39d37d139da723f5a31e9d161b/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88a79cb436b30b39d37d139da723f5a31e9d161b/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=88a79cb436b30b39d37d139da723f5a31e9d161b",
        "patch": "@@ -107,6 +107,9 @@ def run_test(self):\n         # Make sure that a psbt with signatures cannot be converted\n         signedtx = self.nodes[0].signrawtransactionwithwallet(rawtx['hex'])\n         assert_raises_rpc_error(-22, \"TX decode failed\", self.nodes[0].converttopsbt, signedtx['hex'])\n+        assert_raises_rpc_error(-22, \"TX decode failed\", self.nodes[0].converttopsbt, signedtx['hex'], False)\n+        # Unless we allow it to convert and strip signatures\n+        self.nodes[0].converttopsbt(signedtx['hex'], True)\n \n         # Explicitly allow converting non-empty txs\n         new_psbt = self.nodes[0].converttopsbt(rawtx['hex'])"
      }
    ]
  }
]