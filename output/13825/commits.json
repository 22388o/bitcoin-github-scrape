[
  {
    "sha": "0629de4919d7b8ffdfb09a6f732dc922d9db843b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjI5ZGU0OTE5ZDdiOGZmZGZiMDlhNmY3MzJkYzkyMmQ5ZGI4NDNi",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T16:23:26Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T15:59:20Z"
      },
      "message": "[wallet] Remove 'account' argument from GetLegacyBalance()\n\nGetLegacyBalance() is never called with an account argument.\nRemove the argument and helper functions.",
      "tree": {
        "sha": "a138cae0294c6d8c137dde241a70501f9f9639ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a138cae0294c6d8c137dde241a70501f9f9639ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0629de4919d7b8ffdfb09a6f732dc922d9db843b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0629de4919d7b8ffdfb09a6f732dc922d9db843b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0629de4919d7b8ffdfb09a6f732dc922d9db843b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0629de4919d7b8ffdfb09a6f732dc922d9db843b/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f180e81d5780805a28bcc71c2bb6b16076336c3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f180e81d5780805a28bcc71c2bb6b16076336c3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f180e81d5780805a28bcc71c2bb6b16076336c3c"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 5,
      "deletions": 9
    },
    "files": [
      {
        "sha": "1265e02fb48b6550bd19472ab9e011e5365c6ac1",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0629de4919d7b8ffdfb09a6f732dc922d9db843b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0629de4919d7b8ffdfb09a6f732dc922d9db843b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0629de4919d7b8ffdfb09a6f732dc922d9db843b",
        "patch": "@@ -904,7 +904,7 @@ static UniValue sendmany(const JSONRPCRequest& request)\n     EnsureWalletIsUnlocked(pwallet);\n \n     // Check funds\n-    if (totalAmount > pwallet->GetLegacyBalance(ISMINE_SPENDABLE, nMinDepth, nullptr)) {\n+    if (totalAmount > pwallet->GetLegacyBalance(ISMINE_SPENDABLE, nMinDepth)) {\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Wallet has insufficient funds\");\n     }\n "
      },
      {
        "sha": "eb02fdcdced28a1ae808704a1539e69c69f5e149",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0629de4919d7b8ffdfb09a6f732dc922d9db843b/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0629de4919d7b8ffdfb09a6f732dc922d9db843b/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0629de4919d7b8ffdfb09a6f732dc922d9db843b",
        "patch": "@@ -2189,7 +2189,7 @@ CAmount CWallet::GetImmatureWatchOnlyBalance() const\n // wallet, and then subtracts the values of TxIns spending from the wallet. This\n // also has fewer restrictions on which unconfirmed transactions are considered\n // trusted.\n-CAmount CWallet::GetLegacyBalance(const isminefilter& filter, int minDepth, const std::string* account) const\n+CAmount CWallet::GetLegacyBalance(const isminefilter& filter, int minDepth) const\n {\n     LOCK2(cs_main, cs_wallet);\n \n@@ -2208,21 +2208,17 @@ CAmount CWallet::GetLegacyBalance(const isminefilter& filter, int minDepth, cons\n         for (const CTxOut& out : wtx.tx->vout) {\n             if (outgoing && IsChange(out)) {\n                 debit -= out.nValue;\n-            } else if (IsMine(out) & filter && depth >= minDepth && (!account || *account == GetLabelName(out.scriptPubKey))) {\n+            } else if (IsMine(out) & filter && depth >= minDepth) {\n                 balance += out.nValue;\n             }\n         }\n \n         // For outgoing txs, subtract amount debited.\n-        if (outgoing && (!account || *account == wtx.strFromAccount)) {\n+        if (outgoing) {\n             balance -= debit;\n         }\n     }\n \n-    if (account) {\n-        balance += WalletBatch(*database).GetAccountCreditDebit(*account);\n-    }\n-\n     return balance;\n }\n "
      },
      {
        "sha": "d14fdc3d2449ef941dde8a78c5c1f0048c9494af",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0629de4919d7b8ffdfb09a6f732dc922d9db843b/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0629de4919d7b8ffdfb09a6f732dc922d9db843b/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0629de4919d7b8ffdfb09a6f732dc922d9db843b",
        "patch": "@@ -962,7 +962,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetImmatureBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;\n     CAmount GetImmatureWatchOnlyBalance() const;\n-    CAmount GetLegacyBalance(const isminefilter& filter, int minDepth, const std::string* account) const;\n+    CAmount GetLegacyBalance(const isminefilter& filter, int minDepth) const;\n     CAmount GetAvailableBalance(const CCoinControl* coinControl = nullptr) const;\n \n     OutputType TransactionChangeType(OutputType change_type, const std::vector<CRecipient>& vecSend);"
      }
    ]
  },
  {
    "sha": "e6fcc5d39675aced61b4abc25b7d04f398e32318",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmZjYzVkMzk2NzVhY2VkNjFiNGFiYzI1YjdkMDRmMzk4ZTMyMzE4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T16:44:23Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T15:59:20Z"
      },
      "message": "[wallet] Remove CWallet::ListAccountCreditDebit()\n\nFunction no longer used.",
      "tree": {
        "sha": "b73ee1be9eb9beee8277b1980c2e77a56fc1d3d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b73ee1be9eb9beee8277b1980c2e77a56fc1d3d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6fcc5d39675aced61b4abc25b7d04f398e32318",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6fcc5d39675aced61b4abc25b7d04f398e32318",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6fcc5d39675aced61b4abc25b7d04f398e32318",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6fcc5d39675aced61b4abc25b7d04f398e32318/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0629de4919d7b8ffdfb09a6f732dc922d9db843b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0629de4919d7b8ffdfb09a6f732dc922d9db843b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0629de4919d7b8ffdfb09a6f732dc922d9db843b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "9313401e9305d7e704ad4acc60e2149efe58d164",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6fcc5d39675aced61b4abc25b7d04f398e32318/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6fcc5d39675aced61b4abc25b7d04f398e32318/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=e6fcc5d39675aced61b4abc25b7d04f398e32318",
        "patch": "@@ -3098,11 +3098,6 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n     return true;\n }\n \n-void CWallet::ListAccountCreditDebit(const std::string& strAccount, std::list<CAccountingEntry>& entries) {\n-    WalletBatch batch(*database);\n-    return batch.ListAccountCreditDebit(strAccount, entries);\n-}\n-\n bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry)\n {\n     WalletBatch batch(*database);"
      },
      {
        "sha": "14a078180b1be44fc37e23c0a4b8fbb8d779d599",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6fcc5d39675aced61b4abc25b7d04f398e32318/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6fcc5d39675aced61b4abc25b7d04f398e32318/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=e6fcc5d39675aced61b4abc25b7d04f398e32318",
        "patch": "@@ -983,7 +983,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n                            std::string& strFailReason, const CCoinControl& coin_control, bool sign = true);\n     bool CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm, std::string fromAccount, CReserveKey& reservekey, CConnman* connman, CValidationState& state);\n \n-    void ListAccountCreditDebit(const std::string& strAccount, std::list<CAccountingEntry>& entries);\n     bool AddAccountingEntry(const CAccountingEntry&);\n     bool AddAccountingEntry(const CAccountingEntry&, WalletBatch *batch);\n     bool DummySignTx(CMutableTransaction &txNew, const std::set<CTxOut> &txouts, bool use_max_sig = false) const"
      }
    ]
  },
  {
    "sha": "ad63e017243b6cb0da3b2c00377b8f667cea0957",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDYzZTAxNzI0M2I2Y2IwZGEzYjJjMDAzNzdiOGY2NjdjZWEwOTU3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T16:29:56Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T15:59:20Z"
      },
      "message": "[wallet] Remove AccountMove()\n\nFunction no longer used.",
      "tree": {
        "sha": "45f752aab5bedb47c530d62f4db8c8c9ea1b248c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45f752aab5bedb47c530d62f4db8c8c9ea1b248c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad63e017243b6cb0da3b2c00377b8f667cea0957",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad63e017243b6cb0da3b2c00377b8f667cea0957",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad63e017243b6cb0da3b2c00377b8f667cea0957",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad63e017243b6cb0da3b2c00377b8f667cea0957/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6fcc5d39675aced61b4abc25b7d04f398e32318",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6fcc5d39675aced61b4abc25b7d04f398e32318",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6fcc5d39675aced61b4abc25b7d04f398e32318"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 0,
      "deletions": 35
    },
    "files": [
      {
        "sha": "8be02732b8a27d6d6f6aecede58db034b61af9eb",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e017243b6cb0da3b2c00377b8f667cea0957/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e017243b6cb0da3b2c00377b8f667cea0957/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ad63e017243b6cb0da3b2c00377b8f667cea0957",
        "patch": "@@ -816,40 +816,6 @@ int64_t CWallet::IncOrderPosNext(WalletBatch *batch)\n     return nRet;\n }\n \n-bool CWallet::AccountMove(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment)\n-{\n-    WalletBatch batch(*database);\n-    if (!batch.TxnBegin())\n-        return false;\n-\n-    int64_t nNow = GetAdjustedTime();\n-\n-    // Debit\n-    CAccountingEntry debit;\n-    debit.nOrderPos = IncOrderPosNext(&batch);\n-    debit.strAccount = strFrom;\n-    debit.nCreditDebit = -nAmount;\n-    debit.nTime = nNow;\n-    debit.strOtherAccount = strTo;\n-    debit.strComment = strComment;\n-    AddAccountingEntry(debit, &batch);\n-\n-    // Credit\n-    CAccountingEntry credit;\n-    credit.nOrderPos = IncOrderPosNext(&batch);\n-    credit.strAccount = strTo;\n-    credit.nCreditDebit = nAmount;\n-    credit.nTime = nNow;\n-    credit.strOtherAccount = strFrom;\n-    credit.strComment = strComment;\n-    AddAccountingEntry(credit, &batch);\n-\n-    if (!batch.TxnCommit())\n-        return false;\n-\n-    return true;\n-}\n-\n bool CWallet::GetLabelDestination(CTxDestination &dest, const std::string& label, bool bForceNew)\n {\n     WalletBatch batch(*database);"
      },
      {
        "sha": "1e56951bff7f1fcc322e95f363c0d84132504155",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e017243b6cb0da3b2c00377b8f667cea0957/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e017243b6cb0da3b2c00377b8f667cea0957/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ad63e017243b6cb0da3b2c00377b8f667cea0957",
        "patch": "@@ -941,7 +941,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      */\n     int64_t IncOrderPosNext(WalletBatch *batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     DBErrors ReorderTransactions();\n-    bool AccountMove(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment = \"\") EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool GetLabelDestination(CTxDestination &dest, const std::string& label, bool bForceNew = false);\n \n     void MarkDirty();"
      }
    ]
  },
  {
    "sha": "cf15ebd80c1f7b854c10240a979e661fe7a6d393",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjE1ZWJkODBjMWY3Yjg1NGMxMDI0MGE5NzllNjYxZmU3YTZkMzkz",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T16:33:39Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T15:59:20Z"
      },
      "message": "[wallet] Remove AddAccountingEntry()\n\nFunction no longer used.",
      "tree": {
        "sha": "f8a19d8de13a4805a96198891d8185d32d02e7d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8a19d8de13a4805a96198891d8185d32d02e7d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf15ebd80c1f7b854c10240a979e661fe7a6d393",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf15ebd80c1f7b854c10240a979e661fe7a6d393",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf15ebd80c1f7b854c10240a979e661fe7a6d393",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf15ebd80c1f7b854c10240a979e661fe7a6d393/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad63e017243b6cb0da3b2c00377b8f667cea0957",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad63e017243b6cb0da3b2c00377b8f667cea0957",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad63e017243b6cb0da3b2c00377b8f667cea0957"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 0,
      "deletions": 22
    },
    "files": [
      {
        "sha": "2cd7425c8630f91462da6ff66195fe7aeaa28a57",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf15ebd80c1f7b854c10240a979e661fe7a6d393/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf15ebd80c1f7b854c10240a979e661fe7a6d393/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cf15ebd80c1f7b854c10240a979e661fe7a6d393",
        "patch": "@@ -3064,26 +3064,6 @@ bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n     return true;\n }\n \n-bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry)\n-{\n-    WalletBatch batch(*database);\n-\n-    return AddAccountingEntry(acentry, &batch);\n-}\n-\n-bool CWallet::AddAccountingEntry(const CAccountingEntry& acentry, WalletBatch *batch)\n-{\n-    if (!batch->WriteAccountingEntry(++nAccountingEntryNumber, acentry)) {\n-        return false;\n-    }\n-\n-    laccentries.push_back(acentry);\n-    CAccountingEntry & entry = laccentries.back();\n-    wtxOrdered.insert(std::make_pair(entry.nOrderPos, TxPair(nullptr, &entry)));\n-\n-    return true;\n-}\n-\n DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n {\n     LOCK2(cs_main, cs_wallet);"
      },
      {
        "sha": "a7bbfd8ebdb4247c9df1299f180662742fbe8786",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf15ebd80c1f7b854c10240a979e661fe7a6d393/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf15ebd80c1f7b854c10240a979e661fe7a6d393/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=cf15ebd80c1f7b854c10240a979e661fe7a6d393",
        "patch": "@@ -982,8 +982,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n                            std::string& strFailReason, const CCoinControl& coin_control, bool sign = true);\n     bool CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm, std::string fromAccount, CReserveKey& reservekey, CConnman* connman, CValidationState& state);\n \n-    bool AddAccountingEntry(const CAccountingEntry&);\n-    bool AddAccountingEntry(const CAccountingEntry&, WalletBatch *batch);\n     bool DummySignTx(CMutableTransaction &txNew, const std::set<CTxOut> &txouts, bool use_max_sig = false) const\n     {\n         std::vector<CTxOut> v_txouts(txouts.size());"
      }
    ]
  },
  {
    "sha": "7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTBkOGY0OWIzZTJmYzhlNDk3ZTliNDFiMjUxY2QyYzg2MWE2NjQw",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T16:47:16Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T15:59:20Z"
      },
      "message": "[wallet] Remove GetAccountCreditDebit()\n\nFunction no longer used.",
      "tree": {
        "sha": "6ff028bb3d3c6884441607737f44224cc5a67393",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ff028bb3d3c6884441607737f44224cc5a67393"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf15ebd80c1f7b854c10240a979e661fe7a6d393",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf15ebd80c1f7b854c10240a979e661fe7a6d393",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf15ebd80c1f7b854c10240a979e661fe7a6d393"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 0,
      "deletions": 13
    },
    "files": [
      {
        "sha": "b029359027ca3abd7e9a8c45df54ba10f772cefd",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640",
        "patch": "@@ -171,18 +171,6 @@ bool WalletBatch::WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccou\n     return WriteIC(std::make_pair(std::string(\"acentry\"), std::make_pair(acentry.strAccount, nAccEntryNum)), acentry);\n }\n \n-CAmount WalletBatch::GetAccountCreditDebit(const std::string& strAccount)\n-{\n-    std::list<CAccountingEntry> entries;\n-    ListAccountCreditDebit(strAccount, entries);\n-\n-    CAmount nCreditDebit = 0;\n-    for (const CAccountingEntry& entry : entries)\n-        nCreditDebit += entry.nCreditDebit;\n-\n-    return nCreditDebit;\n-}\n-\n void WalletBatch::ListAccountCreditDebit(const std::string& strAccount, std::list<CAccountingEntry>& entries)\n {\n     bool fAllAccounts = (strAccount == \"*\");"
      },
      {
        "sha": "726a3950109fc73edb0604d71ade5f8664db681e",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640",
        "patch": "@@ -211,7 +211,6 @@ class WalletBatch\n     /// Erase destination data tuple from wallet database\n     bool EraseDestData(const std::string &address, const std::string &key);\n \n-    CAmount GetAccountCreditDebit(const std::string& strAccount);\n     void ListAccountCreditDebit(const std::string& strAccount, std::list<CAccountingEntry>& acentries);\n \n     DBErrors LoadWallet(CWallet* pwallet);"
      }
    ]
  },
  {
    "sha": "3f248a873f941cbcc4d0c24021edcd11e927da98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjI0OGE4NzNmOTQxY2JjYzRkMGMyNDAyMWVkY2QxMWU5MjdkYTk4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T16:53:22Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T15:59:20Z"
      },
      "message": "[wallet] Don't rewrite accounting entries when...\n\nreordering wallet transactions.\n\nAccounting entries are deprecated. Don't rewrite them to the wallet\ndatabase when re-ordering transactions.",
      "tree": {
        "sha": "d155241f0581e5490abe979fddeeba8cceec7551",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d155241f0581e5490abe979fddeeba8cceec7551"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f248a873f941cbcc4d0c24021edcd11e927da98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f248a873f941cbcc4d0c24021edcd11e927da98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f248a873f941cbcc4d0c24021edcd11e927da98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f248a873f941cbcc4d0c24021edcd11e927da98/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a0d8f49b3e2fc8e497e9b41b251cd2c861a6640"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 1,
      "deletions": 13
    },
    "files": [
      {
        "sha": "ed1232f4b861caf12527fc500737b507026471bc",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 13,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f248a873f941cbcc4d0c24021edcd11e927da98/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f248a873f941cbcc4d0c24021edcd11e927da98/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3f248a873f941cbcc4d0c24021edcd11e927da98",
        "patch": "@@ -735,7 +735,7 @@ DBErrors CWallet::ReorderTransactions()\n     // Old wallets didn't have any defined order for transactions\n     // Probably a bad idea to change the output of this\n \n-    // First: get all CWalletTx and CAccountingEntry into a sorted-by-time multimap.\n+    // First: get all CWalletTx into a sorted-by-time multimap.\n     typedef std::pair<CWalletTx*, CAccountingEntry*> TxPair;\n     typedef std::multimap<int64_t, TxPair > TxItems;\n     TxItems txByTime;\n@@ -745,12 +745,6 @@ DBErrors CWallet::ReorderTransactions()\n         CWalletTx* wtx = &entry.second;\n         txByTime.insert(std::make_pair(wtx->nTimeReceived, TxPair(wtx, nullptr)));\n     }\n-    std::list<CAccountingEntry> acentries;\n-    batch.ListAccountCreditDebit(\"\", acentries);\n-    for (CAccountingEntry& entry : acentries)\n-    {\n-        txByTime.insert(std::make_pair(entry.nTime, TxPair(nullptr, &entry)));\n-    }\n \n     nOrderPosNext = 0;\n     std::vector<int64_t> nOrderPosOffsets;\n@@ -770,9 +764,6 @@ DBErrors CWallet::ReorderTransactions()\n                 if (!batch.WriteTx(*pwtx))\n                     return DBErrors::LOAD_FAIL;\n             }\n-            else\n-                if (!batch.WriteAccountingEntry(pacentry->nEntryNo, *pacentry))\n-                    return DBErrors::LOAD_FAIL;\n         }\n         else\n         {\n@@ -794,9 +785,6 @@ DBErrors CWallet::ReorderTransactions()\n                 if (!batch.WriteTx(*pwtx))\n                     return DBErrors::LOAD_FAIL;\n             }\n-            else\n-                if (!batch.WriteAccountingEntry(pacentry->nEntryNo, *pacentry))\n-                    return DBErrors::LOAD_FAIL;\n         }\n     }\n     batch.WriteOrderPosNext(nOrderPosNext);"
      }
    ]
  },
  {
    "sha": "f992f7fa3eb1438cb01d35af699954ef6f79438a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTkyZjdmYTNlYjE0MzhjYjAxZDM1YWY2OTk5NTRlZjZmNzk0Mzhh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T16:55:40Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T15:59:20Z"
      },
      "message": "[wallet] Remove WriteAccountingEntry()\n\nFunction no longer used.",
      "tree": {
        "sha": "bf21e4d0e772307be3eb8a9ec137c0766618c1bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf21e4d0e772307be3eb8a9ec137c0766618c1bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f992f7fa3eb1438cb01d35af699954ef6f79438a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f992f7fa3eb1438cb01d35af699954ef6f79438a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f992f7fa3eb1438cb01d35af699954ef6f79438a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f992f7fa3eb1438cb01d35af699954ef6f79438a/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f248a873f941cbcc4d0c24021edcd11e927da98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f248a873f941cbcc4d0c24021edcd11e927da98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f248a873f941cbcc4d0c24021edcd11e927da98"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "371df95cddb1ef79f100eccb1d6a82aed0a8cc9e",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f992f7fa3eb1438cb01d35af699954ef6f79438a/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f992f7fa3eb1438cb01d35af699954ef6f79438a/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=f992f7fa3eb1438cb01d35af699954ef6f79438a",
        "patch": "@@ -166,11 +166,6 @@ bool WalletBatch::EraseAccount(const std::string& strAccount)\n     return EraseIC(std::make_pair(std::string(\"acc\"), strAccount));\n }\n \n-bool WalletBatch::WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry)\n-{\n-    return WriteIC(std::make_pair(std::string(\"acentry\"), std::make_pair(acentry.strAccount, nAccEntryNum)), acentry);\n-}\n-\n void WalletBatch::ListAccountCreditDebit(const std::string& strAccount, std::list<CAccountingEntry>& entries)\n {\n     bool fAllAccounts = (strAccount == \"*\");"
      },
      {
        "sha": "432e7764e32977191d26406923d7b3f047a3bfd9",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f992f7fa3eb1438cb01d35af699954ef6f79438a/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f992f7fa3eb1438cb01d35af699954ef6f79438a/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=f992f7fa3eb1438cb01d35af699954ef6f79438a",
        "patch": "@@ -199,9 +199,6 @@ class WalletBatch\n \n     bool WriteMinVersion(int nVersion);\n \n-    /// This writes directly to the database, and will not update the CWallet's cached accounting entries!\n-    /// Use wallet.AddAccountingEntry instead, to write *and* update its caches.\n-    bool WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry);\n     bool ReadAccount(const std::string& strAccount, CAccount& account);\n     bool WriteAccount(const std::string& strAccount, const CAccount& account);\n     bool EraseAccount(const std::string& strAccount);"
      }
    ]
  },
  {
    "sha": "a544ab28572de96f3ea0855592abd655ef5d9378",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTQ0YWIyODU3MmRlOTZmM2VhMDg1NTU5MmFiZDY1NWVmNWQ5Mzc4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T18:05:18Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:21Z"
      },
      "message": "[wallet] Don't read acentry key-values from wallet on load.",
      "tree": {
        "sha": "21bfb21069753d99e25b645047cfe89e87882747",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21bfb21069753d99e25b645047cfe89e87882747"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a544ab28572de96f3ea0855592abd655ef5d9378",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a544ab28572de96f3ea0855592abd655ef5d9378",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a544ab28572de96f3ea0855592abd655ef5d9378",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a544ab28572de96f3ea0855592abd655ef5d9378/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f992f7fa3eb1438cb01d35af699954ef6f79438a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f992f7fa3eb1438cb01d35af699954ef6f79438a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f992f7fa3eb1438cb01d35af699954ef6f79438a"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 1,
      "deletions": 25
    },
    "files": [
      {
        "sha": "17eb23cacbf46f78e2bdc59a472f4fe1f7d55775",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 25,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a544ab28572de96f3ea0855592abd655ef5d9378/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a544ab28572de96f3ea0855592abd655ef5d9378/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=a544ab28572de96f3ea0855592abd655ef5d9378",
        "patch": "@@ -285,24 +285,6 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n \n             pwallet->LoadToWallet(wtx);\n         }\n-        else if (strType == \"acentry\")\n-        {\n-            std::string strAccount;\n-            ssKey >> strAccount;\n-            uint64_t nNumber;\n-            ssKey >> nNumber;\n-            if (nNumber > pwallet->nAccountingEntryNumber) {\n-                pwallet->nAccountingEntryNumber = nNumber;\n-            }\n-\n-            if (!wss.fAnyUnordered)\n-            {\n-                CAccountingEntry acentry;\n-                ssValue >> acentry;\n-                if (acentry.nOrderPos == -1)\n-                    wss.fAnyUnordered = true;\n-            }\n-        }\n         else if (strType == \"watchs\")\n         {\n             wss.nWatchKeys++;\n@@ -493,7 +475,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 return false;\n             }\n         } else if (strType != \"bestblock\" && strType != \"bestblock_nomerkle\" &&\n-                strType != \"minversion\") {\n+                strType != \"minversion\" && strType != \"acentry\") {\n             wss.m_unknown_records++;\n         }\n     } catch (...)\n@@ -608,12 +590,6 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n     if (wss.fAnyUnordered)\n         result = pwallet->ReorderTransactions();\n \n-    pwallet->laccentries.clear();\n-    ListAccountCreditDebit(\"*\", pwallet->laccentries);\n-    for (CAccountingEntry& entry : pwallet->laccentries) {\n-        pwallet->wtxOrdered.insert(make_pair(entry.nOrderPos, CWallet::TxPair(nullptr, &entry)));\n-    }\n-\n     return result;\n }\n "
      }
    ]
  },
  {
    "sha": "b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2ZkMDFhNTUzOWM2ZGFhNDA4ZDM4YWRlYTNhNGE3ZWU0YTVhZDRk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T18:06:43Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Remove ListAccountCreditDebit()\n\nFunction no longer used.",
      "tree": {
        "sha": "4b9ee457a3b01083dbdf201dccaca4d1dfa89df2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b9ee457a3b01083dbdf201dccaca4d1dfa89df2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a544ab28572de96f3ea0855592abd655ef5d9378",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a544ab28572de96f3ea0855592abd655ef5d9378",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a544ab28572de96f3ea0855592abd655ef5d9378"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 0,
      "deletions": 45
    },
    "files": [
      {
        "sha": "57adae4ab7e722ea33c9f30a62f4898365f7ee76",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d",
        "patch": "@@ -166,49 +166,6 @@ bool WalletBatch::EraseAccount(const std::string& strAccount)\n     return EraseIC(std::make_pair(std::string(\"acc\"), strAccount));\n }\n \n-void WalletBatch::ListAccountCreditDebit(const std::string& strAccount, std::list<CAccountingEntry>& entries)\n-{\n-    bool fAllAccounts = (strAccount == \"*\");\n-\n-    Dbc* pcursor = m_batch.GetCursor();\n-    if (!pcursor)\n-        throw std::runtime_error(std::string(__func__) + \": cannot create DB cursor\");\n-    bool setRange = true;\n-    while (true)\n-    {\n-        // Read next record\n-        CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n-        if (setRange)\n-            ssKey << std::make_pair(std::string(\"acentry\"), std::make_pair((fAllAccounts ? std::string(\"\") : strAccount), uint64_t(0)));\n-        CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n-        int ret = m_batch.ReadAtCursor(pcursor, ssKey, ssValue, setRange);\n-        setRange = false;\n-        if (ret == DB_NOTFOUND)\n-            break;\n-        else if (ret != 0)\n-        {\n-            pcursor->close();\n-            throw std::runtime_error(std::string(__func__) + \": error scanning DB\");\n-        }\n-\n-        // Unserialize\n-        std::string strType;\n-        ssKey >> strType;\n-        if (strType != \"acentry\")\n-            break;\n-        CAccountingEntry acentry;\n-        ssKey >> acentry.strAccount;\n-        if (!fAllAccounts && acentry.strAccount != strAccount)\n-            break;\n-\n-        ssValue >> acentry;\n-        ssKey >> acentry.nEntryNo;\n-        entries.push_back(acentry);\n-    }\n-\n-    pcursor->close();\n-}\n-\n class CWalletScanState {\n public:\n     unsigned int nKeys;"
      },
      {
        "sha": "f77b46375f62a667fbe55fe7f7be75090b258831",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d",
        "patch": "@@ -208,8 +208,6 @@ class WalletBatch\n     /// Erase destination data tuple from wallet database\n     bool EraseDestData(const std::string &address, const std::string &key);\n \n-    void ListAccountCreditDebit(const std::string& strAccount, std::list<CAccountingEntry>& acentries);\n-\n     DBErrors LoadWallet(CWallet* pwallet);\n     DBErrors FindWalletTx(std::vector<uint256>& vTxHash, std::vector<CWalletTx>& vWtx);\n     DBErrors ZapWalletTx(std::vector<CWalletTx>& vWtx);"
      }
    ]
  },
  {
    "sha": "7c6f1a1f954512a7dab70e6e0e856a199584b168",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzZmMWExZjk1NDUxMmE3ZGFiNzBlNmUwZTg1NmExOTk1ODRiMTY4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T18:15:13Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Remove CAccountingEntry class\n\nNo long used",
      "tree": {
        "sha": "37928734d3282ad33059c30717900fc179b06263",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37928734d3282ad33059c30717900fc179b06263"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c6f1a1f954512a7dab70e6e0e856a199584b168",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c6f1a1f954512a7dab70e6e0e856a199584b168",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c6f1a1f954512a7dab70e6e0e856a199584b168",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c6f1a1f954512a7dab70e6e0e856a199584b168/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7fd01a5539c6daa408d38adea3a4a7ee4a5ad4d"
      }
    ],
    "stats": {
      "total": 137,
      "additions": 18,
      "deletions": 119
    },
    "files": [
      {
        "sha": "1cdb73f08f51814b5709e337fd9e6a9d2592e0c5",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c6f1a1f954512a7dab70e6e0e856a199584b168/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c6f1a1f954512a7dab70e6e0e856a199584b168/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7c6f1a1f954512a7dab70e6e0e856a199584b168",
        "patch": "@@ -1563,10 +1563,8 @@ UniValue listtransactions(const JSONRPCRequest& request)\n         // iterate backwards until we have nCount items to return:\n         for (CWallet::TxItems::const_reverse_iterator it = txOrdered.rbegin(); it != txOrdered.rend(); ++it)\n         {\n-            CWalletTx *const pwtx = (*it).second.first;\n-            if (pwtx != nullptr) {\n-                ListTransactions(pwallet, *pwtx, 0, true, ret, filter);\n-            }\n+            CWalletTx *const pwtx = (*it).second;\n+            ListTransactions(pwallet, *pwtx, 0, true, ret, filter);\n             if ((int)ret.size() >= (nCount+nFrom)) break;\n         }\n     }"
      },
      {
        "sha": "ad8c5fb2a123d0d3d93b055aa1ae4d82d5d67fa6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 27,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c6f1a1f954512a7dab70e6e0e856a199584b168/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c6f1a1f954512a7dab70e6e0e856a199584b168/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7c6f1a1f954512a7dab70e6e0e856a199584b168",
        "patch": "@@ -736,34 +736,29 @@ DBErrors CWallet::ReorderTransactions()\n     // Probably a bad idea to change the output of this\n \n     // First: get all CWalletTx into a sorted-by-time multimap.\n-    typedef std::pair<CWalletTx*, CAccountingEntry*> TxPair;\n-    typedef std::multimap<int64_t, TxPair > TxItems;\n+    typedef std::multimap<int64_t, CWalletTx*> TxItems;\n     TxItems txByTime;\n \n     for (auto& entry : mapWallet)\n     {\n         CWalletTx* wtx = &entry.second;\n-        txByTime.insert(std::make_pair(wtx->nTimeReceived, TxPair(wtx, nullptr)));\n+        txByTime.insert(std::make_pair(wtx->nTimeReceived, wtx));\n     }\n \n     nOrderPosNext = 0;\n     std::vector<int64_t> nOrderPosOffsets;\n     for (TxItems::iterator it = txByTime.begin(); it != txByTime.end(); ++it)\n     {\n-        CWalletTx *const pwtx = (*it).second.first;\n-        CAccountingEntry *const pacentry = (*it).second.second;\n-        int64_t& nOrderPos = (pwtx != nullptr) ? pwtx->nOrderPos : pacentry->nOrderPos;\n+        CWalletTx *const pwtx = (*it).second;\n+        int64_t& nOrderPos = pwtx->nOrderPos;\n \n         if (nOrderPos == -1)\n         {\n             nOrderPos = nOrderPosNext++;\n             nOrderPosOffsets.push_back(nOrderPos);\n \n-            if (pwtx)\n-            {\n-                if (!batch.WriteTx(*pwtx))\n-                    return DBErrors::LOAD_FAIL;\n-            }\n+            if (!batch.WriteTx(*pwtx))\n+                return DBErrors::LOAD_FAIL;\n         }\n         else\n         {\n@@ -780,11 +775,8 @@ DBErrors CWallet::ReorderTransactions()\n                 continue;\n \n             // Since we're changing the order, write it back\n-            if (pwtx)\n-            {\n-                if (!batch.WriteTx(*pwtx))\n-                    return DBErrors::LOAD_FAIL;\n-            }\n+            if (!batch.WriteTx(*pwtx))\n+                return DBErrors::LOAD_FAIL;\n         }\n     }\n     batch.WriteOrderPosNext(nOrderPosNext);\n@@ -898,7 +890,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     if (fInsertedNew) {\n         wtx.nTimeReceived = GetAdjustedTime();\n         wtx.nOrderPos = IncOrderPosNext(&batch);\n-        wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, TxPair(&wtx, nullptr)));\n+        wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, &wtx));\n         wtx.nTimeSmart = ComputeTimeSmart(wtx);\n         AddToSpends(hash);\n     }\n@@ -973,7 +965,7 @@ void CWallet::LoadToWallet(const CWalletTx& wtxIn)\n     CWalletTx& wtx = ins.first->second;\n     wtx.BindWallet(this);\n     if (/* insertion took place */ ins.second) {\n-        wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, TxPair(&wtx, nullptr)));\n+        wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, &wtx));\n     }\n     AddToSpends(hash);\n     for (const CTxIn& txin : wtx.tx->vin) {\n@@ -3781,19 +3773,14 @@ unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n             int64_t latestTolerated = latestNow + 300;\n             const TxItems& txOrdered = wtxOrdered;\n             for (auto it = txOrdered.rbegin(); it != txOrdered.rend(); ++it) {\n-                CWalletTx* const pwtx = it->second.first;\n+                CWalletTx* const pwtx = it->second;\n                 if (pwtx == &wtx) {\n                     continue;\n                 }\n-                CAccountingEntry* const pacentry = it->second.second;\n                 int64_t nSmartTime;\n-                if (pwtx) {\n-                    nSmartTime = pwtx->nTimeSmart;\n-                    if (!nSmartTime) {\n-                        nSmartTime = pwtx->nTimeReceived;\n-                    }\n-                } else {\n-                    nSmartTime = pacentry->nTime;\n+                nSmartTime = pwtx->nTimeSmart;\n+                if (!nSmartTime) {\n+                    nSmartTime = pwtx->nTimeReceived;\n                 }\n                 if (nSmartTime <= latestTolerated) {\n                     latestEntry = nSmartTime;"
      },
      {
        "sha": "e75a26970da0cfd86f1953395d50677b9f7b141f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 87,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c6f1a1f954512a7dab70e6e0e856a199584b168/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c6f1a1f954512a7dab70e6e0e856a199584b168/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=7c6f1a1f954512a7dab70e6e0e856a199584b168",
        "patch": "@@ -342,7 +342,7 @@ class CWalletTx : public CMerkleTx\n     char fFromMe;\n     std::string strFromAccount;\n     int64_t nOrderPos; //!< position in ordered transaction list\n-    std::multimap<int64_t, std::pair<CWalletTx*, CAccountingEntry*>>::const_iterator m_it_wtxOrdered;\n+    std::multimap<int64_t, CWalletTx*>::const_iterator m_it_wtxOrdered;\n \n     // memory only\n     mutable bool fDebitCached;\n@@ -569,89 +569,6 @@ class CWalletKey\n     }\n };\n \n-/**\n- * DEPRECATED Internal transfers.\n- * Database key is acentry<account><counter>.\n- */\n-class CAccountingEntry\n-{\n-public:\n-    std::string strAccount;\n-    CAmount nCreditDebit;\n-    int64_t nTime;\n-    std::string strOtherAccount;\n-    std::string strComment;\n-    mapValue_t mapValue;\n-    int64_t nOrderPos; //!< position in ordered transaction list\n-    uint64_t nEntryNo;\n-\n-    CAccountingEntry()\n-    {\n-        SetNull();\n-    }\n-\n-    void SetNull()\n-    {\n-        nCreditDebit = 0;\n-        nTime = 0;\n-        strAccount.clear();\n-        strOtherAccount.clear();\n-        strComment.clear();\n-        nOrderPos = -1;\n-        nEntryNo = 0;\n-    }\n-\n-    template <typename Stream>\n-    void Serialize(Stream& s) const {\n-        int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH)) {\n-            s << nVersion;\n-        }\n-        //! Note: strAccount is serialized as part of the key, not here.\n-        s << nCreditDebit << nTime << strOtherAccount;\n-\n-        mapValue_t mapValueCopy = mapValue;\n-        WriteOrderPos(nOrderPos, mapValueCopy);\n-\n-        std::string strCommentCopy = strComment;\n-        if (!mapValueCopy.empty() || !_ssExtra.empty()) {\n-            CDataStream ss(s.GetType(), s.GetVersion());\n-            ss.insert(ss.begin(), '\\0');\n-            ss << mapValueCopy;\n-            ss.insert(ss.end(), _ssExtra.begin(), _ssExtra.end());\n-            strCommentCopy.append(ss.str());\n-        }\n-        s << strCommentCopy;\n-    }\n-\n-    template <typename Stream>\n-    void Unserialize(Stream& s) {\n-        int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH)) {\n-            s >> nVersion;\n-        }\n-        //! Note: strAccount is serialized as part of the key, not here.\n-        s >> nCreditDebit >> nTime >> LIMITED_STRING(strOtherAccount, 65536) >> LIMITED_STRING(strComment, 65536);\n-\n-        size_t nSepPos = strComment.find(\"\\0\", 0, 1);\n-        mapValue.clear();\n-        if (std::string::npos != nSepPos) {\n-            CDataStream ss(std::vector<char>(strComment.begin() + nSepPos + 1, strComment.end()), s.GetType(), s.GetVersion());\n-            ss >> mapValue;\n-            _ssExtra = std::vector<char>(ss.begin(), ss.end());\n-        }\n-        ReadOrderPos(nOrderPos, mapValue);\n-        if (std::string::npos != nSepPos) {\n-            strComment.erase(nSepPos);\n-        }\n-\n-        mapValue.erase(\"n\");\n-    }\n-\n-private:\n-    std::vector<char> _ssExtra;\n-};\n-\n struct CoinSelectionParams\n {\n     bool use_bnb = true;\n@@ -826,10 +743,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     }\n \n     std::map<uint256, CWalletTx> mapWallet;\n-    std::list<CAccountingEntry> laccentries;\n \n-    typedef std::pair<CWalletTx*, CAccountingEntry*> TxPair;\n-    typedef std::multimap<int64_t, TxPair > TxItems;\n+    typedef std::multimap<int64_t, CWalletTx*> TxItems;\n     TxItems wtxOrdered;\n \n     int64_t nOrderPosNext = 0;"
      },
      {
        "sha": "0e8c38a7e479d3bf8983980ab7cf43664f94d0d4",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c6f1a1f954512a7dab70e6e0e856a199584b168/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c6f1a1f954512a7dab70e6e0e856a199584b168/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=7c6f1a1f954512a7dab70e6e0e856a199584b168",
        "patch": "@@ -32,7 +32,6 @@\n static const bool DEFAULT_FLUSHWALLET = true;\n \n class CAccount;\n-class CAccountingEntry;\n struct CBlockLocator;\n class CKeyPool;\n class CMasterKey;"
      }
    ]
  },
  {
    "sha": "53038b47ec51ac455f448b2d324a2bc032c45d68",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzAzOGI0N2VjNTFhYzQ1NWY0NDhiMmQzMjRhMmJjMDMyYzQ1ZDY4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T18:22:12Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Remove GetLabelDestination\n\nFunction no longer used.",
      "tree": {
        "sha": "05eaca9efc95f860103da8f2886912300d707672",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05eaca9efc95f860103da8f2886912300d707672"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53038b47ec51ac455f448b2d324a2bc032c45d68",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53038b47ec51ac455f448b2d324a2bc032c45d68",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53038b47ec51ac455f448b2d324a2bc032c45d68",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53038b47ec51ac455f448b2d324a2bc032c45d68/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c6f1a1f954512a7dab70e6e0e856a199584b168",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c6f1a1f954512a7dab70e6e0e856a199584b168",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c6f1a1f954512a7dab70e6e0e856a199584b168"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 0,
      "deletions": 40
    },
    "files": [
      {
        "sha": "7fee966bdcec2ff4db6d5563824d876721bc7dae",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53038b47ec51ac455f448b2d324a2bc032c45d68/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53038b47ec51ac455f448b2d324a2bc032c45d68/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=53038b47ec51ac455f448b2d324a2bc032c45d68",
        "patch": "@@ -796,46 +796,6 @@ int64_t CWallet::IncOrderPosNext(WalletBatch *batch)\n     return nRet;\n }\n \n-bool CWallet::GetLabelDestination(CTxDestination &dest, const std::string& label, bool bForceNew)\n-{\n-    WalletBatch batch(*database);\n-\n-    CAccount account;\n-    batch.ReadAccount(label, account);\n-\n-    if (!bForceNew) {\n-        if (!account.vchPubKey.IsValid())\n-            bForceNew = true;\n-        else {\n-            // Check if the current key has been used (TODO: check other addresses with the same key)\n-            CScript scriptPubKey = GetScriptForDestination(GetDestinationForKey(account.vchPubKey, m_default_address_type));\n-            for (std::map<uint256, CWalletTx>::iterator it = mapWallet.begin();\n-                 it != mapWallet.end() && account.vchPubKey.IsValid();\n-                 ++it)\n-                for (const CTxOut& txout : (*it).second.tx->vout)\n-                    if (txout.scriptPubKey == scriptPubKey) {\n-                        bForceNew = true;\n-                        break;\n-                    }\n-        }\n-    }\n-\n-    // Generate a new key\n-    if (bForceNew) {\n-        if (!GetKeyFromPool(account.vchPubKey, false))\n-            return false;\n-\n-        LearnRelatedScripts(account.vchPubKey, m_default_address_type);\n-        dest = GetDestinationForKey(account.vchPubKey, m_default_address_type);\n-        SetAddressBook(dest, label, \"receive\");\n-        batch.WriteAccount(label, account);\n-    } else {\n-        dest = GetDestinationForKey(account.vchPubKey, m_default_address_type);\n-    }\n-\n-    return true;\n-}\n-\n void CWallet::MarkDirty()\n {\n     {"
      }
    ]
  },
  {
    "sha": "f85988ca7440e9ac3b33250d03ff68befb9bb51c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODU5ODhjYTc0NDBlOWFjM2IzMzI1MGQwM2ZmNjhiZWZiOWJiNTFj",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T18:35:42Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Delete unused account functions\n\nDeletes:\n- ReadAccount\n- WriteAccount\n- EraseAccount\n- DeleteLabel",
      "tree": {
        "sha": "b65845b0fda14bbb586456ecef5fedc98b8c72cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b65845b0fda14bbb586456ecef5fedc98b8c72cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f85988ca7440e9ac3b33250d03ff68befb9bb51c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f85988ca7440e9ac3b33250d03ff68befb9bb51c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f85988ca7440e9ac3b33250d03ff68befb9bb51c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f85988ca7440e9ac3b33250d03ff68befb9bb51c/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53038b47ec51ac455f448b2d324a2bc032c45d68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53038b47ec51ac455f448b2d324a2bc032c45d68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53038b47ec51ac455f448b2d324a2bc032c45d68"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 0,
      "deletions": 52
    },
    "files": [
      {
        "sha": "64c411d2310887d06bb57d950f94f61d77e91b76",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=f85988ca7440e9ac3b33250d03ff68befb9bb51c",
        "patch": "@@ -196,16 +196,6 @@ static UniValue getnewaddress(const JSONRPCRequest& request)\n     return EncodeDestination(dest);\n }\n \n-CTxDestination GetLabelDestination(CWallet* const pwallet, const std::string& label, bool bForceNew=false)\n-{\n-    CTxDestination dest;\n-    if (!pwallet->GetLabelDestination(dest, label, bForceNew)) {\n-        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n-    }\n-\n-    return dest;\n-}\n-\n static UniValue getrawchangeaddress(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n@@ -297,20 +287,6 @@ static UniValue setlabel(const JSONRPCRequest& request)\n         pwallet->SetAddressBook(dest, label, \"send\");\n     }\n \n-    // Detect when there are no addresses using this label.\n-    // If so, delete the account record for it. Labels, unlike addresses, can be deleted,\n-    // and if we wouldn't do this, the record would stick around forever.\n-    bool found_address = false;\n-    for (const std::pair<const CTxDestination, CAddressBookData>& item : pwallet->mapAddressBook) {\n-        if (item.second.name == label) {\n-            found_address = true;\n-            break;\n-        }\n-    }\n-    if (!found_address) {\n-        pwallet->DeleteLabel(old_label);\n-    }\n-\n     return NullUniValue;\n }\n "
      },
      {
        "sha": "922a0fff60132ca71af64972bd4904dd04134a3c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=f85988ca7440e9ac3b33250d03ff68befb9bb51c",
        "patch": "@@ -3537,12 +3537,6 @@ std::set<CTxDestination> CWallet::GetLabelAddresses(const std::string& label) co\n     return result;\n }\n \n-void CWallet::DeleteLabel(const std::string& label)\n-{\n-    WalletBatch batch(*database);\n-    batch.EraseAccount(label);\n-}\n-\n bool CReserveKey::GetReservedKey(CPubKey& pubkey, bool internal)\n {\n     if (nIndex == -1)"
      },
      {
        "sha": "d1eb7c7801a482f029d2f9c0d1895071722b5ac9",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=f85988ca7440e9ac3b33250d03ff68befb9bb51c",
        "patch": "@@ -856,7 +856,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      */\n     int64_t IncOrderPosNext(WalletBatch *batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     DBErrors ReorderTransactions();\n-    bool GetLabelDestination(CTxDestination &dest, const std::string& label, bool bForceNew = false);\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n@@ -955,7 +954,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     std::map<CTxDestination, CAmount> GetAddressBalances() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n     std::set<CTxDestination> GetLabelAddresses(const std::string& label) const;\n-    void DeleteLabel(const std::string& label);\n \n     isminetype IsMine(const CTxIn& txin) const;\n     /**"
      },
      {
        "sha": "a990cc0c20095cb5a947fc01e0e9752c114f67a4",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=f85988ca7440e9ac3b33250d03ff68befb9bb51c",
        "patch": "@@ -150,22 +150,6 @@ bool WalletBatch::WriteMinVersion(int nVersion)\n     return WriteIC(std::string(\"minversion\"), nVersion);\n }\n \n-bool WalletBatch::ReadAccount(const std::string& strAccount, CAccount& account)\n-{\n-    account.SetNull();\n-    return m_batch.Read(std::make_pair(std::string(\"acc\"), strAccount), account);\n-}\n-\n-bool WalletBatch::WriteAccount(const std::string& strAccount, const CAccount& account)\n-{\n-    return WriteIC(std::make_pair(std::string(\"acc\"), strAccount), account);\n-}\n-\n-bool WalletBatch::EraseAccount(const std::string& strAccount)\n-{\n-    return EraseIC(std::make_pair(std::string(\"acc\"), strAccount));\n-}\n-\n class CWalletScanState {\n public:\n     unsigned int nKeys;"
      },
      {
        "sha": "6fa91f93f276954069247b520168fa145141cfed",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f85988ca7440e9ac3b33250d03ff68befb9bb51c/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=f85988ca7440e9ac3b33250d03ff68befb9bb51c",
        "patch": "@@ -198,10 +198,6 @@ class WalletBatch\n \n     bool WriteMinVersion(int nVersion);\n \n-    bool ReadAccount(const std::string& strAccount, CAccount& account);\n-    bool WriteAccount(const std::string& strAccount, const CAccount& account);\n-    bool EraseAccount(const std::string& strAccount);\n-\n     /// Write destination data key,value tuple to database\n     bool WriteDestData(const std::string &address, const std::string &key, const std::string &value);\n     /// Erase destination data tuple from wallet database"
      }
    ]
  },
  {
    "sha": "0bb1b4e229a869769d81d1531435393a25fcf29f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmIxYjRlMjI5YTg2OTc2OWQ4MWQxNTMxNDM1MzkzYTI1ZmNmMjlm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T20:51:05Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Remove fromAccount argument from CommitTransaction()",
      "tree": {
        "sha": "f91a50551804c66d5ef2a71b373426d31a29b668",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f91a50551804c66d5ef2a71b373426d31a29b668"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bb1b4e229a869769d81d1531435393a25fcf29f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bb1b4e229a869769d81d1531435393a25fcf29f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bb1b4e229a869769d81d1531435393a25fcf29f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bb1b4e229a869769d81d1531435393a25fcf29f/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f85988ca7440e9ac3b33250d03ff68befb9bb51c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f85988ca7440e9ac3b33250d03ff68befb9bb51c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f85988ca7440e9ac3b33250d03ff68befb9bb51c"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 8,
      "deletions": 11
    },
    "files": [
      {
        "sha": "2281f9919452a850024a7e9e59416db845b9052f",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb1b4e229a869769d81d1531435393a25fcf29f/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb1b4e229a869769d81d1531435393a25fcf29f/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=0bb1b4e229a869769d81d1531435393a25fcf29f",
        "patch": "@@ -39,12 +39,11 @@ class PendingWalletTxImpl : public PendingWalletTx\n \n     bool commit(WalletValueMap value_map,\n         WalletOrderForm order_form,\n-        std::string from_account,\n         std::string& reject_reason) override\n     {\n         LOCK2(cs_main, m_wallet.cs_wallet);\n         CValidationState state;\n-        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), std::move(from_account), m_key, g_connman.get(), state)) {\n+        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), m_key, g_connman.get(), state)) {\n             reject_reason = state.GetRejectReason();\n             return false;\n         }"
      },
      {
        "sha": "44240a572658d7de6d6b1f8985795776477fa0bf",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb1b4e229a869769d81d1531435393a25fcf29f/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb1b4e229a869769d81d1531435393a25fcf29f/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=0bb1b4e229a869769d81d1531435393a25fcf29f",
        "patch": "@@ -289,7 +289,6 @@ class PendingWalletTx\n     //! Send pending transaction and commit to wallet.\n     virtual bool commit(WalletValueMap value_map,\n         WalletOrderForm order_form,\n-        std::string from_account,\n         std::string& reject_reason) = 0;\n };\n "
      },
      {
        "sha": "f7cc94ae32c8165cce73a9c260b8e02bff773106",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb1b4e229a869769d81d1531435393a25fcf29f/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb1b4e229a869769d81d1531435393a25fcf29f/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=0bb1b4e229a869769d81d1531435393a25fcf29f",
        "patch": "@@ -253,7 +253,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n \n         auto& newTx = transaction.getWtx();\n         std::string rejectReason;\n-        if (!newTx->commit({} /* mapValue */, std::move(vOrderForm), {} /* fromAccount */, rejectReason))\n+        if (!newTx->commit({} /* mapValue */, std::move(vOrderForm), rejectReason))\n             return SendCoinsReturn(TransactionCommitFailed, QString::fromStdString(rejectReason));\n \n         CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "677bf74b5dcd8db765a547411acbc5c54db84beb",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=0bb1b4e229a869769d81d1531435393a25fcf29f",
        "patch": "@@ -242,7 +242,7 @@ Result CommitTransaction(CWallet* wallet, const uint256& txid, CMutableTransacti\n \n     CReserveKey reservekey(wallet);\n     CValidationState state;\n-    if (!wallet->CommitTransaction(tx, std::move(mapValue), oldWtx.vOrderForm, oldWtx.strFromAccount, reservekey, g_connman.get(), state)) {\n+    if (!wallet->CommitTransaction(tx, std::move(mapValue), oldWtx.vOrderForm, reservekey, g_connman.get(), state)) {\n         // NOTE: CommitTransaction never returns false, so this should never happen.\n         errors.push_back(strprintf(\"The transaction was rejected: %s\", FormatStateMessage(state)));\n         return Result::WALLET_ERROR;"
      },
      {
        "sha": "e6c1eea97d584042d4f4ebc553b6d02005247aaa",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0bb1b4e229a869769d81d1531435393a25fcf29f",
        "patch": "@@ -324,7 +324,7 @@ static CTransactionRef SendMoney(CWallet * const pwallet, const CTxDestination &\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n     }\n     CValidationState state;\n-    if (!pwallet->CommitTransaction(tx, std::move(mapValue), {} /* orderForm */, \"\" /* account */, reservekey, g_connman.get(), state)) {\n+    if (!pwallet->CommitTransaction(tx, std::move(mapValue), {} /* orderForm */, reservekey, g_connman.get(), state)) {\n         strError = strprintf(\"Error: The transaction was rejected! Reason given: %s\", FormatStateMessage(state));\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n     }\n@@ -897,7 +897,7 @@ static UniValue sendmany(const JSONRPCRequest& request)\n     if (!fCreated)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, strFailReason);\n     CValidationState state;\n-    if (!pwallet->CommitTransaction(tx, std::move(mapValue), {} /* orderForm */, \"\" /* account */, keyChange, g_connman.get(), state)) {\n+    if (!pwallet->CommitTransaction(tx, std::move(mapValue), {} /* orderForm */, keyChange, g_connman.get(), state)) {\n         strFailReason = strprintf(\"Transaction commit failed:: %s\", FormatStateMessage(state));\n         throw JSONRPCError(RPC_WALLET_ERROR, strFailReason);\n     }"
      },
      {
        "sha": "b436efc2766848efea0076f8891d24d016e10926",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=0bb1b4e229a869769d81d1531435393a25fcf29f",
        "patch": "@@ -297,7 +297,7 @@ class ListCoinsTestingSetup : public TestChain100Setup\n         CCoinControl dummy;\n         BOOST_CHECK(wallet->CreateTransaction({recipient}, tx, reservekey, fee, changePos, error, dummy));\n         CValidationState state;\n-        BOOST_CHECK(wallet->CommitTransaction(tx, {}, {}, {}, reservekey, nullptr, state));\n+        BOOST_CHECK(wallet->CommitTransaction(tx, {}, {}, reservekey, nullptr, state));\n         CMutableTransaction blocktx;\n         {\n             LOCK(wallet->cs_wallet);"
      },
      {
        "sha": "07c0b316b4aef12286bdfe79b3dd711c287df8b9",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0bb1b4e229a869769d81d1531435393a25fcf29f",
        "patch": "@@ -2956,15 +2956,14 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n /**\n  * Call after CreateTransaction unless you want to abort\n  */\n-bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm, std::string fromAccount, CReserveKey& reservekey, CConnman* connman, CValidationState& state)\n+bool CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm, CReserveKey& reservekey, CConnman* connman, CValidationState& state)\n {\n     {\n         LOCK2(cs_main, cs_wallet);\n \n         CWalletTx wtxNew(this, std::move(tx));\n         wtxNew.mapValue = std::move(mapValue);\n         wtxNew.vOrderForm = std::move(orderForm);\n-        wtxNew.strFromAccount = std::move(fromAccount);\n         wtxNew.fTimeReceivedIsTxTime = true;\n         wtxNew.fFromMe = true;\n "
      },
      {
        "sha": "0b3456a47f945dd12a9feb5d30af34fa8d8a9c12",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb1b4e229a869769d81d1531435393a25fcf29f/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0bb1b4e229a869769d81d1531435393a25fcf29f",
        "patch": "@@ -894,7 +894,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      */\n     bool CreateTransaction(const std::vector<CRecipient>& vecSend, CTransactionRef& tx, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosInOut,\n                            std::string& strFailReason, const CCoinControl& coin_control, bool sign = true);\n-    bool CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm, std::string fromAccount, CReserveKey& reservekey, CConnman* connman, CValidationState& state);\n+    bool CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm, CReserveKey& reservekey, CConnman* connman, CValidationState& state);\n \n     bool DummySignTx(CMutableTransaction &txNew, const std::set<CTxOut> &txouts, bool use_max_sig = false) const\n     {"
      }
    ]
  },
  {
    "sha": "1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDMxZmEwYzUzZjhmMTliYTI3Yzk1MTk3OWZkZmI2NGY2NGU3MGM0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T20:58:23Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Remove strFromAccount.\n\nNo longer used.",
      "tree": {
        "sha": "7130d0ff69063947c5ee4077a3eb9067120f9752",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7130d0ff69063947c5ee4077a3eb9067120f9752"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1031fa0c53f8f19ba27c951979fdfb64f64e70c4/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0bb1b4e229a869769d81d1531435393a25fcf29f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bb1b4e229a869769d81d1531435393a25fcf29f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0bb1b4e229a869769d81d1531435393a25fcf29f"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 6,
      "deletions": 10
    },
    "files": [
      {
        "sha": "138766abc91d1f30adc3a7977551fa1e1f8bd7fd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1031fa0c53f8f19ba27c951979fdfb64f64e70c4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1031fa0c53f8f19ba27c951979fdfb64f64e70c4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
        "patch": "@@ -585,7 +585,6 @@ void CWallet::SyncMetaData(std::pair<TxSpends::iterator, TxSpends::iterator> ran\n         // nTimeReceived not copied on purpose\n         copyTo->nTimeSmart = copyFrom->nTimeSmart;\n         copyTo->fFromMe = copyFrom->fFromMe;\n-        copyTo->strFromAccount = copyFrom->strFromAccount;\n         // nOrderPos not copied on purpose\n         // cached members not copied on purpose\n     }\n@@ -1526,7 +1525,6 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n     nFee = 0;\n     listReceived.clear();\n     listSent.clear();\n-    strSentAccount = strFromAccount;\n \n     // Compute fee:\n     CAmount nDebit = GetDebit(filter);\n@@ -4178,7 +4176,6 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(const std::string& name,\n                     copyTo->nTimeReceived = copyFrom->nTimeReceived;\n                     copyTo->nTimeSmart = copyFrom->nTimeSmart;\n                     copyTo->fFromMe = copyFrom->fFromMe;\n-                    copyTo->strFromAccount = copyFrom->strFromAccount;\n                     copyTo->nOrderPos = copyFrom->nOrderPos;\n                     batch.WriteTx(*copyTo);\n                 }"
      },
      {
        "sha": "0b7612b9dca3d717867b44815e6db1b10f7ee53e",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1031fa0c53f8f19ba27c951979fdfb64f64e70c4/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1031fa0c53f8f19ba27c951979fdfb64f64e70c4/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
        "patch": "@@ -340,7 +340,6 @@ class CWalletTx : public CMerkleTx\n      * externally and came in through the network or sendrawtransaction RPC.\n      */\n     char fFromMe;\n-    std::string strFromAccount;\n     int64_t nOrderPos; //!< position in ordered transaction list\n     std::multimap<int64_t, CWalletTx*>::const_iterator m_it_wtxOrdered;\n \n@@ -379,7 +378,6 @@ class CWalletTx : public CMerkleTx\n         nTimeReceived = 0;\n         nTimeSmart = 0;\n         fFromMe = false;\n-        strFromAccount.clear();\n         fDebitCached = false;\n         fCreditCached = false;\n         fImmatureCreditCached = false;\n@@ -408,7 +406,7 @@ class CWalletTx : public CMerkleTx\n         char fSpent = false;\n         mapValue_t mapValueCopy = mapValue;\n \n-        mapValueCopy[\"fromaccount\"] = strFromAccount;\n+        mapValueCopy[\"fromaccount\"] = \"\";\n         WriteOrderPos(nOrderPos, mapValueCopy);\n         if (nTimeSmart) {\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n@@ -429,7 +427,6 @@ class CWalletTx : public CMerkleTx\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n         s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n \n-        strFromAccount = std::move(mapValue[\"fromaccount\"]);\n         ReadOrderPos(nOrderPos, mapValue);\n         nTimeSmart = mapValue.count(\"timesmart\") ? (unsigned int)atoi64(mapValue[\"timesmart\"]) : 0;\n "
      },
      {
        "sha": "5ce4d080e5bbfb8495ac7f39cb9573f5a54d9110",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1031fa0c53f8f19ba27c951979fdfb64f64e70c4/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1031fa0c53f8f19ba27c951979fdfb64f64e70c4/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
        "patch": "@@ -17,6 +17,7 @@\n #include <wallet/wallet.h>\n \n #include <atomic>\n+#include <string>\n \n #include <boost/thread.hpp>\n \n@@ -208,9 +209,10 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 {\n                     char fTmp;\n                     char fUnused;\n-                    ssValue >> fTmp >> fUnused >> wtx.strFromAccount;\n-                    strErr = strprintf(\"LoadWallet() upgrading tx ver=%d %d '%s' %s\",\n-                                       wtx.fTimeReceivedIsTxTime, fTmp, wtx.strFromAccount, hash.ToString());\n+                    std::string unused_string;\n+                    ssValue >> fTmp >> fUnused >> unused_string;\n+                    strErr = strprintf(\"LoadWallet() upgrading tx ver=%d %d %s\",\n+                                       wtx.fTimeReceivedIsTxTime, fTmp, hash.ToString());\n                     wtx.fTimeReceivedIsTxTime = fTmp;\n                 }\n                 else"
      }
    ]
  },
  {
    "sha": "87e8123539f392985dd5778b335d71999b4e2f29",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4N2U4MTIzNTM5ZjM5Mjk4NWRkNTc3OGIzMzVkNzE5OTliNGUyZjI5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T21:01:26Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Remove strSentAccount from GetAmounts().\n\nNo longer used.",
      "tree": {
        "sha": "44d7715a2d11752c15d45d38ba765f4b21268235",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44d7715a2d11752c15d45d38ba765f4b21268235"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87e8123539f392985dd5778b335d71999b4e2f29",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87e8123539f392985dd5778b335d71999b4e2f29",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87e8123539f392985dd5778b335d71999b4e2f29",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87e8123539f392985dd5778b335d71999b4e2f29/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1031fa0c53f8f19ba27c951979fdfb64f64e70c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1031fa0c53f8f19ba27c951979fdfb64f64e70c4"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "76d4d55936a953288377453721fe91c0bdd60d61",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87e8123539f392985dd5778b335d71999b4e2f29/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87e8123539f392985dd5778b335d71999b4e2f29/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=87e8123539f392985dd5778b335d71999b4e2f29",
        "patch": "@@ -1380,11 +1380,10 @@ static void MaybePushAddress(UniValue & entry, const CTxDestination &dest)\n static void ListTransactions(CWallet* const pwallet, const CWalletTx& wtx, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     CAmount nFee;\n-    std::string dummy_account;\n     std::list<COutputEntry> listReceived;\n     std::list<COutputEntry> listSent;\n \n-    wtx.GetAmounts(listReceived, listSent, nFee, dummy_account, filter);\n+    wtx.GetAmounts(listReceived, listSent, nFee, filter);\n \n     bool involvesWatchonly = wtx.IsFromMe(ISMINE_WATCH_ONLY);\n "
      },
      {
        "sha": "d29c0e27b2832e3530f7c4d7e7295bf628467ac7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87e8123539f392985dd5778b335d71999b4e2f29/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87e8123539f392985dd5778b335d71999b4e2f29/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=87e8123539f392985dd5778b335d71999b4e2f29",
        "patch": "@@ -1520,7 +1520,7 @@ int CalculateMaximumSignedInputSize(const CTxOut& txout, const CWallet* wallet,\n }\n \n void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n-                           std::list<COutputEntry>& listSent, CAmount& nFee, std::string& strSentAccount, const isminefilter& filter) const\n+                           std::list<COutputEntry>& listSent, CAmount& nFee, const isminefilter& filter) const\n {\n     nFee = 0;\n     listReceived.clear();"
      },
      {
        "sha": "e993fe58beb9d05708117a2a3e5416abe6598bfa",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87e8123539f392985dd5778b335d71999b4e2f29/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87e8123539f392985dd5778b335d71999b4e2f29/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=87e8123539f392985dd5778b335d71999b4e2f29",
        "patch": "@@ -471,7 +471,7 @@ class CWalletTx : public CMerkleTx\n     }\n \n     void GetAmounts(std::list<COutputEntry>& listReceived,\n-                    std::list<COutputEntry>& listSent, CAmount& nFee, std::string& strSentAccount, const isminefilter& filter) const;\n+                    std::list<COutputEntry>& listSent, CAmount& nFee, const isminefilter& filter) const;\n \n     bool IsFromMe(const isminefilter& filter) const\n     {"
      }
    ]
  },
  {
    "sha": "a92bdd174956491457ac162af910573e59c350c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOTJiZGQxNzQ5NTY0OTE0NTdhYzE2MmFmOTEwNTczZTU5YzM1MGM3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T21:11:06Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Update zapwallettxes comment to remove accounts.",
      "tree": {
        "sha": "fd41ab934506dc4e50a9273659e0eae99a880015",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd41ab934506dc4e50a9273659e0eae99a880015"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a92bdd174956491457ac162af910573e59c350c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a92bdd174956491457ac162af910573e59c350c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a92bdd174956491457ac162af910573e59c350c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a92bdd174956491457ac162af910573e59c350c7/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87e8123539f392985dd5778b335d71999b4e2f29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87e8123539f392985dd5778b335d71999b4e2f29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87e8123539f392985dd5778b335d71999b4e2f29"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b36287ff508cd6237c2d2354fccc3e2da6c31c56",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a92bdd174956491457ac162af910573e59c350c7/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a92bdd174956491457ac162af910573e59c350c7/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=a92bdd174956491457ac162af910573e59c350c7",
        "patch": "@@ -78,7 +78,7 @@ void WalletInit::AddWalletOptions() const\n     gArgs.AddArg(\"-walletnotify=<cmd>\", \"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\", false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-walletrbf\", strprintf(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\", DEFAULT_WALLET_RBF), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-zapwallettxes=<mode>\", \"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\"\n-                               \" (1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\", false, OptionsCategory::WALLET);\n+                               \" (1 = keep tx meta data e.g. payment request information, 2 = drop tx meta data)\", false, OptionsCategory::WALLET);\n \n     gArgs.AddArg(\"-dblogsize=<n>\", strprintf(\"Flush wallet database activity from memory to disk log every <n> megabytes (default: %u)\", DEFAULT_WALLET_DBLOGSIZE), true, OptionsCategory::WALLET_DEBUG_TEST);\n     gArgs.AddArg(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", DEFAULT_FLUSHWALLET), true, OptionsCategory::WALLET_DEBUG_TEST);"
      }
    ]
  },
  {
    "sha": "30538846964e8c7490f94d0b57580e65aaf9c5a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDUzODg0Njk2NGU4Yzc0OTBmOTRkMGI1NzU4MGU2NWFhZjljNWE5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-07-31T21:11:48Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-27T16:00:23Z"
      },
      "message": "[wallet] Remove CAccount\n\nNo longer used",
      "tree": {
        "sha": "d312cd9c41a6dc96ab6d5cb099a7e0cfbf57a6c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d312cd9c41a6dc96ab6d5cb099a7e0cfbf57a6c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30538846964e8c7490f94d0b57580e65aaf9c5a9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30538846964e8c7490f94d0b57580e65aaf9c5a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30538846964e8c7490f94d0b57580e65aaf9c5a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30538846964e8c7490f94d0b57580e65aaf9c5a9/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a92bdd174956491457ac162af910573e59c350c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a92bdd174956491457ac162af910573e59c350c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a92bdd174956491457ac162af910573e59c350c7"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 0,
      "deletions": 32
    },
    "files": [
      {
        "sha": "192bdbf370a01c31c1d3a63718cc0c01a539b77e",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30538846964e8c7490f94d0b57580e65aaf9c5a9/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30538846964e8c7490f94d0b57580e65aaf9c5a9/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=30538846964e8c7490f94d0b57580e65aaf9c5a9",
        "patch": "@@ -1157,37 +1157,6 @@ class CReserveKey final : public CReserveScript\n     void KeepScript() override { KeepKey(); }\n };\n \n-\n-/**\n- * DEPRECATED Account information.\n- * Stored in wallet with key \"acc\"+string account name.\n- */\n-class CAccount\n-{\n-public:\n-    CPubKey vchPubKey;\n-\n-    CAccount()\n-    {\n-        SetNull();\n-    }\n-\n-    void SetNull()\n-    {\n-        vchPubKey = CPubKey();\n-    }\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH))\n-            READWRITE(nVersion);\n-        READWRITE(vchPubKey);\n-    }\n-};\n-\n /** RAII object to check and reserve a wallet rescan */\n class WalletRescanReserver\n {"
      },
      {
        "sha": "5584407a56ebb705a1223e1f632584ad10cf00cd",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30538846964e8c7490f94d0b57580e65aaf9c5a9/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30538846964e8c7490f94d0b57580e65aaf9c5a9/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=30538846964e8c7490f94d0b57580e65aaf9c5a9",
        "patch": "@@ -31,7 +31,6 @@\n \n static const bool DEFAULT_FLUSHWALLET = true;\n \n-class CAccount;\n struct CBlockLocator;\n class CKeyPool;\n class CMasterKey;"
      }
    ]
  },
  {
    "sha": "85ec8d645f9aace793514ab36d6cc7a5382f3e7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWVjOGQ2NDVmOWFhY2U3OTM1MTRhYjM2ZDZjYzdhNTM4MmYzZTdj",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-29T18:58:41Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-08-29T18:58:41Z"
      },
      "message": "[docs] fix typo in release notes for PR 14023",
      "tree": {
        "sha": "b9c2b5d6428b39e3d4f00342cd09e9bbc8dae80d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9c2b5d6428b39e3d4f00342cd09e9bbc8dae80d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85ec8d645f9aace793514ab36d6cc7a5382f3e7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85ec8d645f9aace793514ab36d6cc7a5382f3e7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85ec8d645f9aace793514ab36d6cc7a5382f3e7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85ec8d645f9aace793514ab36d6cc7a5382f3e7c/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30538846964e8c7490f94d0b57580e65aaf9c5a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30538846964e8c7490f94d0b57580e65aaf9c5a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30538846964e8c7490f94d0b57580e65aaf9c5a9"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "18ea6f26d0e883e24dd8d8433be9f2c2c6d6e899",
        "filename": "doc/release-notes-14023.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85ec8d645f9aace793514ab36d6cc7a5382f3e7c/doc/release-notes-14023.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85ec8d645f9aace793514ab36d6cc7a5382f3e7c/doc/release-notes-14023.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14023.md?ref=85ec8d645f9aace793514ab36d6cc7a5382f3e7c",
        "patch": "@@ -1,5 +1,5 @@\n-Accout API removed\n-------------------\n+Account API removed\n+-------------------\n \n The 'account' API was deprecated in v0.17 and has been fully removed in v0.18.\n The 'label' API was introduced in v0.17 as a replacement for accounts."
      }
    ]
  }
]