achow101,2020-09-07 16:06:48,"Note that Bitcoin Core does implement the combiner role as `combinepsbt`. This PR is adding `COMBINER` to `analyzepsbt`.\n\nI'm not sure that combiner is something that should be added to `analyzepsbt`. Everything that can be parallelized and thus involves combiner can also be done serially without combiner. You can't know whether the user is doing a parallel process or a serial process.",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-688413467,688413467,
benthecarman,2020-09-07 20:56:19,"Concept NACK\n\nAs @achow101 points out, this is only adding `COMBINER` to `analyzepsbt` which doesn't make sense imo. It's impossible to know if the user just needs to sign again or combine. Having `COMBINE` could be confusing to users if they are in the processing of signing, whereas having `SIGNER` is clear that signing still needs to take place.\n\nMaybe just an addition to `need_sig_text`",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-688508564,688508564,
dr-orlovsky,2020-09-08 11:39:50,"What about renaming `SIGNER` role into `SIGNER_COMBINER`, if they can't be always distinguished? Because if the combiner role is missed from the code, while mentioned in the docs, it is also confusing (I was confused when I was studying PSBT implementation where it has gone). And, then, we can adjust the message as well.\n\nAlso, it's not clear to me who to classify the situation where _some_ (b",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-688811750,688811750,
achow101,2020-09-08 15:18:15,"Combiners can also be involved after updating. It is possible to have a PSBT that has been partially updated. In a parallel process, such as PSBT would go to a combiner, then over to signers to be signed. In a serial process, it would go to the next updater. So making a SIGNER_COMBINER role would also be incorrect.",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-688948483,688948483,
dr-orlovsky,2020-09-08 17:35:56,"Ok, but right now if some PSBT has a partial signatures, it is classified as UPDATER, which is also wrong.",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-689030607,689030607,
sipa,2020-09-08 17:42:33,"> Ok, but right now if some PSBT has a partial signatures, it is classified as UPDATER, which is also wrong.\n\nThat sounds wrong. It should say signer?",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-689033954,689033954,
dr-orlovsky,2020-09-08 20:04:16,"Correct me if I am wrong, but I understand the logic of PSBT in the following way: if there at least one signature is present, this is SIGNER or COMBINER. If none, this is UPDATER, and this can't be COMBINER (since when PSBTs are combines, each one of them must have at least one signature).",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-689106707,689106707,
sipa,2020-09-08 20:06:03,"Combiners can merge more than just signatures. So you could have done the updating done in parallel by multiple participants too, have then merge the results.",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-689107485,689107485,
dr-orlovsky,2020-09-08 21:19:10,I haev force-pushed updated version w/o Combiner role but other potentially required changes,https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-689141967,689141967,
sipa,2020-09-08 21:21:34,Can you first demonstrate the bug? The original code looks correct to me.,https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-689142903,689142903,
dr-orlovsky,2020-09-08 23:03:48,"You are right, I was confused and thought it checks presence of all signatures, not pubkeys. But now I see that if all pubkeys are present and nothing other then signatures is missed, then it evaluates to Signer, which is correct. Closing now",https://github.com/bitcoin/bitcoin/pull/19907#issuecomment-689181108,689181108,
