[
  {
    "sha": "fa08d4cfb1e3447a76093d46edc1c9de5ceee454",
    "node_id": "C_kwDOABII59oAKGZhMDhkNGNmYjFlMzQ0N2E3NjA5M2Q0NmVkYzFjOWRlNWNlZWU0NTQ",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-21T12:42:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-21T14:04:27Z"
      },
      "message": "Use C++11 member initializer in CTxMemPoolEntry\n\nThis removes a bunch of boilerplate, makes the code easier to read.\nAlso, C++11 member initialization avoids accidental uninitialized\nmembers.\n\nCan be reviewed with the git option \"--word-diff-regex=.\" or with \"git\ndifftool --tool=meld\".",
      "tree": {
        "sha": "d7f08945ec7ee2f5db607e83140036743283ec68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7f08945ec7ee2f5db607e83140036743283ec68"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa08d4cfb1e3447a76093d46edc1c9de5ceee454",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjoEAwAtWbLsHn4Zs8UDPcB18NJh0M+E0q/MTH+XQkzHsbk3NRm1S7LCOSaa5fY\nN4i9yhh0SwN96kUcIP+wEFWaFNtOaDM220tp22A75MoIiqy1/TI1sjFQ7mzxLnYL\n+4+N1UB8OwcfJXr3lVla7xX45gn9lbzxBbW4dWDMwjUxU1oYNQEhJ0yU26hqQvES\nRDDkEHDZjPllVgERkwkmgVCzNG1c1DabgmNlNc4Ttm0FyB6AS0wBCc/PDlD1vGfM\nx+/MtRoIyK+xaaNuUDykdLLARGbVx+IaWfOdPYaYjazJHVNp2jMiNp6dvJNT8dnb\nAY9qJlpt5eV12f3EmAhuRRV+7f4Z+up3QqXGkgzcY4M54Pg4XT2ehMWeHHVqn8Xx\n2onjzMVRBm4zr49qEXx1Nr8AtEaGCuBw5sQheBbsd0R5WQbvPAv3oFSyU/7JjeRp\n8D5ajV1LQJh2BRDL5/YkWXq4O8dKH2g2qun5l0msvOkO4+js4e5AkZ+SCvhxMpGs\nC8FCCXe6\n=ogL9\n-----END PGP SIGNATURE-----",
        "payload": "tree d7f08945ec7ee2f5db607e83140036743283ec68\nparent 223ad2fd0d355a9caf3c12fe2a286030d7f3190f\nauthor MarcoFalke <falke.marco@gmail.com> 1632228172 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1632233067 +0200\n\nUse C++11 member initializer in CTxMemPoolEntry\n\nThis removes a bunch of boilerplate, makes the code easier to read.\nAlso, C++11 member initialization avoids accidental uninitialized\nmembers.\n\nCan be reviewed with the git option \"--word-diff-regex=.\" or with \"git\ndifftool --tool=meld\".\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa08d4cfb1e3447a76093d46edc1c9de5ceee454",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa08d4cfb1e3447a76093d46edc1c9de5ceee454",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa08d4cfb1e3447a76093d46edc1c9de5ceee454/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "223ad2fd0d355a9caf3c12fe2a286030d7f3190f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/223ad2fd0d355a9caf3c12fe2a286030d7f3190f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/223ad2fd0d355a9caf3c12fe2a286030d7f3190f"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 28,
      "deletions": 31
    },
    "files": [
      {
        "sha": "5a93f30c8a31134d934abcd0382078a9b073615d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa08d4cfb1e3447a76093d46edc1c9de5ceee454/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa08d4cfb1e3447a76093d46edc1c9de5ceee454/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=fa08d4cfb1e3447a76093d46edc1c9de5ceee454",
        "patch": "@@ -21,23 +21,23 @@\n #include <cmath>\n #include <optional>\n \n-CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& _tx, const CAmount& _nFee,\n-                                 int64_t _nTime, unsigned int _entryHeight,\n-                                 bool _spendsCoinbase, int64_t _sigOpsCost, LockPoints lp)\n-    : tx(_tx), nFee(_nFee), nTxWeight(GetTransactionWeight(*tx)), nUsageSize(RecursiveDynamicUsage(tx)), nTime(_nTime), entryHeight(_entryHeight),\n-    spendsCoinbase(_spendsCoinbase), sigOpCost(_sigOpsCost), lockPoints(lp)\n-{\n-    nCountWithDescendants = 1;\n-    nSizeWithDescendants = GetTxSize();\n-    nModFeesWithDescendants = nFee;\n-\n-    feeDelta = 0;\n-\n-    nCountWithAncestors = 1;\n-    nSizeWithAncestors = GetTxSize();\n-    nModFeesWithAncestors = nFee;\n-    nSigOpCostWithAncestors = sigOpCost;\n-}\n+CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& tx, CAmount fee,\n+                                 int64_t time, unsigned int entry_height,\n+                                 bool spends_coinbase, int64_t sigops_cost, LockPoints lp)\n+    : tx{tx},\n+      nFee{fee},\n+      nTxWeight(GetTransactionWeight(*tx)),\n+      nUsageSize{RecursiveDynamicUsage(tx)},\n+      nTime{time},\n+      entryHeight{entry_height},\n+      spendsCoinbase{spends_coinbase},\n+      sigOpCost{sigops_cost},\n+      lockPoints{lp},\n+      nSizeWithDescendants{GetTxSize()},\n+      nModFeesWithDescendants{nFee},\n+      nSizeWithAncestors{GetTxSize()},\n+      nModFeesWithAncestors{nFee},\n+      nSigOpCostWithAncestors{sigOpCost} {}\n \n void CTxMemPoolEntry::UpdateFeeDelta(int64_t newFeeDelta)\n {"
      },
      {
        "sha": "27ee0628a7d6d81425295ef627054bbcd6ffa93b",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 11,
        "deletions": 14,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa08d4cfb1e3447a76093d46edc1c9de5ceee454/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa08d4cfb1e3447a76093d46edc1c9de5ceee454/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=fa08d4cfb1e3447a76093d46edc1c9de5ceee454",
        "patch": "@@ -37,19 +37,16 @@ extern RecursiveMutex cs_main;\n /** Fake height value used in Coin to signify they are only in the memory pool (since 0.8) */\n static const uint32_t MEMPOOL_HEIGHT = 0x7FFFFFFF;\n \n-struct LockPoints\n-{\n+struct LockPoints {\n     // Will be set to the blockchain height and median time past\n     // values that would be necessary to satisfy all relative locktime\n     // constraints (BIP68) of this tx given our view of block chain history\n-    int height;\n-    int64_t time;\n+    int height{0};\n+    int64_t time{0};\n     // As long as the current chain descends from the highest height block\n     // containing one of the inputs used in the calculation, then the cached\n     // values are still valid even after a reorg.\n-    CBlockIndex* maxInputBlock;\n-\n-    LockPoints() : height(0), time(0), maxInputBlock(nullptr) { }\n+    CBlockIndex* maxInputBlock{nullptr};\n };\n \n struct CompareIteratorByHash {\n@@ -98,27 +95,27 @@ class CTxMemPoolEntry\n     const unsigned int entryHeight; //!< Chain height when entering the mempool\n     const bool spendsCoinbase;      //!< keep track of transactions that spend a coinbase\n     const int64_t sigOpCost;        //!< Total sigop cost\n-    int64_t feeDelta;          //!< Used for determining the priority of the transaction for mining in a block\n+    int64_t feeDelta{0};            //!< Used for determining the priority of the transaction for mining in a block\n     LockPoints lockPoints;     //!< Track the height and time at which tx was final\n \n     // Information about descendants of this transaction that are in the\n     // mempool; if we remove this transaction we must remove all of these\n     // descendants as well.\n-    uint64_t nCountWithDescendants;  //!< number of descendant transactions\n+    uint64_t nCountWithDescendants{1}; //!< number of descendant transactions\n     uint64_t nSizeWithDescendants;   //!< ... and size\n     CAmount nModFeesWithDescendants; //!< ... and total fees (all including us)\n \n     // Analogous statistics for ancestor transactions\n-    uint64_t nCountWithAncestors;\n+    uint64_t nCountWithAncestors{1};\n     uint64_t nSizeWithAncestors;\n     CAmount nModFeesWithAncestors;\n     int64_t nSigOpCostWithAncestors;\n \n public:\n-    CTxMemPoolEntry(const CTransactionRef& _tx, const CAmount& _nFee,\n-                    int64_t _nTime, unsigned int _entryHeight,\n-                    bool spendsCoinbase,\n-                    int64_t nSigOpsCost, LockPoints lp);\n+    CTxMemPoolEntry(const CTransactionRef& tx, CAmount fee,\n+                    int64_t time, unsigned int entry_height,\n+                    bool spends_coinbase,\n+                    int64_t sigops_cost, LockPoints lp);\n \n     const CTransaction& GetTx() const { return *this->tx; }\n     CTransactionRef GetSharedTx() const { return this->tx; }"
      }
    ]
  }
]