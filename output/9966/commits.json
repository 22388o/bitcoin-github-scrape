[
  {
    "sha": "91c91e140aeea291d95fb1028e7e4aa1e4381939",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWM5MWUxNDBhZWVhMjkxZDk1ZmIxMDI4ZTdlNGFhMWU0MzgxOTM5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-09T22:12:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-22T15:17:17Z"
      },
      "message": "Control mempool persistence using a command line parameter.\n\nMempool persistence was added in\n3f78562df5e86a2a0a21812047fc3a7db8cee988, and is always on. This commit\nintroduces a command-line parameter -persistmempool, which defaults to\ntrue. When set to false:\n- mempool.dat is not loaded when the node starts.\n- mempool.dat is not written when the node stops.",
      "tree": {
        "sha": "8dc9da2cfa26a6c594433fbc9bee66439fa57fdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dc9da2cfa26a6c594433fbc9bee66439fa57fdf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91c91e140aeea291d95fb1028e7e4aa1e4381939",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91c91e140aeea291d95fb1028e7e4aa1e4381939",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91c91e140aeea291d95fb1028e7e4aa1e4381939",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91c91e140aeea291d95fb1028e7e4aa1e4381939/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02d64bd929c9663ba38e96721c6dbd89972d043d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02d64bd929c9663ba38e96721c6dbd89972d043d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02d64bd929c9663ba38e96721c6dbd89972d043d"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "678130a04e8dbec676a61e323396bf346f1f637d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91c91e140aeea291d95fb1028e7e4aa1e4381939/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91c91e140aeea291d95fb1028e7e4aa1e4381939/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=91c91e140aeea291d95fb1028e7e4aa1e4381939",
        "patch": "@@ -206,8 +206,9 @@ void Shutdown()\n \n     StopTorControl();\n     UnregisterNodeSignals(GetNodeSignals());\n-    if (fDumpMempoolLater)\n+    if (fDumpMempoolLater && GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n         DumpMempool();\n+    }\n \n     if (fFeeEstimatesInitialized)\n     {\n@@ -339,6 +340,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n+    strUsage += HelpMessageOpt(\"-persistmempool\", strprintf(_(\"Whether to save the mempool on shutdown and load on restart (default: %u)\"), DEFAULT_PERSIST_MEMPOOL));\n     strUsage += HelpMessageOpt(\"-blockreconstructionextratxn=<n>\", strprintf(_(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\"), DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n@@ -666,8 +668,10 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         StartShutdown();\n     }\n     } // End scope of CImportingNow\n-    LoadMempool();\n-    fDumpMempoolLater = !fRequestShutdown;\n+    if (GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+        LoadMempool();\n+        fDumpMempoolLater = !fRequestShutdown;\n+    }\n }\n \n /** Sanity checks"
      },
      {
        "sha": "c9b934501e16cf990a634e1e85a9fdf3e5a713c7",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91c91e140aeea291d95fb1028e7e4aa1e4381939/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91c91e140aeea291d95fb1028e7e4aa1e4381939/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=91c91e140aeea291d95fb1028e7e4aa1e4381939",
        "patch": "@@ -131,7 +131,8 @@ static const bool DEFAULT_PERMIT_BAREMULTISIG = true;\n static const bool DEFAULT_CHECKPOINTS_ENABLED = true;\n static const bool DEFAULT_TXINDEX = false;\n static const unsigned int DEFAULT_BANSCORE_THRESHOLD = 100;\n-\n+/** Default for -persistmempool */\n+static const bool DEFAULT_PERSIST_MEMPOOL = true;\n /** Default for -mempoolreplacement */\n static const bool DEFAULT_ENABLE_REPLACEMENT = true;\n /** Default for using fee filter */"
      }
    ]
  },
  {
    "sha": "a750d77b950175115fcab528fa0d3a2e0ffab96d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzUwZDc3Yjk1MDE3NTExNWZjYWI1MjhmYTBkM2EyZTBmZmFiOTZk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-09T22:14:55Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-22T15:55:38Z"
      },
      "message": "Add tests for mempool persistence\n\nAdds tests for mempool persistence as well as for the new\n-persistmempool command line parameter.",
      "tree": {
        "sha": "b3751225b8a243a6674822f97c8ffe1babe467e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3751225b8a243a6674822f97c8ffe1babe467e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a750d77b950175115fcab528fa0d3a2e0ffab96d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a750d77b950175115fcab528fa0d3a2e0ffab96d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a750d77b950175115fcab528fa0d3a2e0ffab96d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a750d77b950175115fcab528fa0d3a2e0ffab96d/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91c91e140aeea291d95fb1028e7e4aa1e4381939",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91c91e140aeea291d95fb1028e7e4aa1e4381939",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91c91e140aeea291d95fb1028e7e4aa1e4381939"
      }
    ],
    "stats": {
      "total": 92,
      "additions": 92,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c22b7ff0200ab06efbc1d98af504a1f8c7759136",
        "filename": "test/functional/mempool_persist.py",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a750d77b950175115fcab528fa0d3a2e0ffab96d/test/functional/mempool_persist.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a750d77b950175115fcab528fa0d3a2e0ffab96d/test/functional/mempool_persist.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_persist.py?ref=a750d77b950175115fcab528fa0d3a2e0ffab96d",
        "patch": "@@ -0,0 +1,91 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool persistence.\n+\n+By default, bitcoind will dump mempool on shutdown and\n+then reload it on startup. This can be overridden with\n+the -persistmempool=false command line option.\n+\n+Test is as follows:\n+\n+  - start node0, node1 and node2. node1 has -persistmempool=false\n+  - create 5 transactions on node2 to its own address. Note that these\n+    are not sent to node0 or node1 addresses because we don't want\n+    them to be saved in the wallet.\n+  - check that node0 and node1 have 5 transactions in their mempools\n+  - shutdown all nodes.\n+  - startup node0. Verify that it still has 5 transactions\n+    in its mempool. Shutdown node0. This tests that by default the\n+    mempool is persistent.\n+  - startup node1. Verify that its mempool is empty. Shutdown node1.\n+    This tests that with -persistmempool=false, the mempool is not\n+    dumped to disk when the node is shut down.\n+  - Restart node0 with -persistmempool=false. Verify that its mempool is\n+    empty. Shutdown node0. This tests that with -persistmempool=false,\n+    the mempool is not loaded from disk on start up.\n+  - Restart node0 with -persistmempool=true. Verify that it has 5\n+    transactions in its mempool. This tests that -persistmempool=false\n+    does not overwrite a previously valid mempool stored on disk.\n+\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class MempoolPersistTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 3\n+        self.setup_clean_chain = False\n+\n+    def setup_network(self):\n+        # We need 3 nodes for this test. Node1 does not have a persistent mempool.\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir))\n+        self.nodes.append(start_node(1, self.options.tmpdir, [\"-persistmempool=false\"]))\n+        self.nodes.append(start_node(2, self.options.tmpdir))\n+        connect_nodes_bi(self.nodes, 0, 2)\n+        connect_nodes_bi(self.nodes, 1, 2)\n+        self.is_network_split = False\n+\n+    def run_test(self):\n+        chain_height = self.nodes[0].getblockcount()\n+        assert_equal(chain_height, 200)\n+\n+        self.log.debug(\"Mine a single block to get out of IBD\")\n+        self.nodes[0].generate(1)\n+\n+        self.log.debug(\"Send 5 transactions from node2 (to its own address)\")\n+        for i in range(5):\n+            self.nodes[2].sendtoaddress(self.nodes[2].getnewaddress(), Decimal(\"10\"))\n+        self.sync_all()\n+\n+        self.log.debug(\"Verify that node0 and node1 have 5 transactions in their mempools\")\n+        assert_equal(len(self.nodes[0].getrawmempool()), 5)\n+        assert_equal(len(self.nodes[1].getrawmempool()), 5)\n+\n+        self.log.debug(\"Stop-start node0 and node1. Verify that node0 has the transactions in its mempool and node1 does not.\")\n+        stop_nodes(self.nodes)\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir))\n+        self.nodes.append(start_node(1, self.options.tmpdir))\n+        assert_equal(len(self.nodes[0].getrawmempool()), 5)\n+        assert_equal(len(self.nodes[1].getrawmempool()), 0)\n+\n+        self.log.debug(\"Stop-start node0 with -persistmempool=false. Verify that it doesn't load its mempool.dat file.\")\n+        stop_nodes(self.nodes)\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-persistmempool=false\"]))\n+        assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+\n+        self.log.debug(\"Stop-start node0. Verify that it has the transactions in its mempool.\")\n+        stop_nodes(self.nodes)\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir))\n+        assert_equal(len(self.nodes[0].getrawmempool()), 5)\n+\n+if __name__ == '__main__':\n+    MempoolPersistTest().main()"
      },
      {
        "sha": "7ec9d552a121707951095a4b8249a9db1c181c04",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a750d77b950175115fcab528fa0d3a2e0ffab96d/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a750d77b950175115fcab528fa0d3a2e0ffab96d/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=a750d77b950175115fcab528fa0d3a2e0ffab96d",
        "patch": "@@ -59,6 +59,7 @@\n     'rest.py',\n     'mempool_spendcoinbase.py',\n     'mempool_reorg.py',\n+    'mempool_persist.py',\n     'httpbasics.py',\n     'multi_rpc.py',\n     'proxy_test.py',"
      }
    ]
  }
]