jonatack,2020-12-29 14:42:21,Thanks for the feedback. I had to be away from the computer for a couple hours but will look carefully at a better solution this afternoon.,https://github.com/bitcoin/bitcoin/pull/20797#issuecomment-752102072,752102072,
jonatack,2020-12-29 19:12:24,"I saw this warning three times during the morning. On returning this afternoon, I could no longer reproduce, idem after rebooting, and after apt updating. Closing with apologies for the noise.",https://github.com/bitcoin/bitcoin/pull/20797#issuecomment-752209930,752209930,
MarcoFalke,2020-12-29 13:09:53,"Mind to explain how this fix works and why it is correct. I might be missing something, but https://en.cppreference.com/w/cpp/utility/optional/optional doesn't list a constructor that accepts a `nullptr`.\n\nUnrelated, this method was added in faa1a749428a195af784633eb78e1df5d6a0e875 (by me) to not expose `mapTx`, which is an implementation detail. Though, I realize that `GetIter` doesn't follow",https://github.com/bitcoin/bitcoin/pull/20797#discussion_r549698810,549698810,src/txmempool.cpp
ajtowns,2020-12-29 13:17:35,This should be `return nullopt` or `return Optional<txiter>{nullopt}` I think. I'd assume `nullptr` gets coerced to a `txiter`?,https://github.com/bitcoin/bitcoin/pull/20797#discussion_r549701244,549701244,src/txmempool.cpp
vasild,2020-12-29 15:06:28,"I don't get it why there is a warning in the first place. `std::optional<txiter>{}` could call the optional's constructor that ""Constructs an object that does not contain a value"", same as `std::optional<txiter>{std::nullopt}`. Would `std::optional<txiter>()` fix it?\n\nClang has no `-Wmaybe-uninitialized` option, it must be gcc that prints this (OP mentions clang)?\n\nhttps://gcc.gnu.org/bugz",https://github.com/bitcoin/bitcoin/pull/20797#discussion_r549738017,549738017,src/txmempool.cpp
MarcoFalke,2020-12-29 15:21:50,"> I don't get it why there is a warning in the first place.\n\nGCC's warnings are very brittle, which can be seen from the open issues in their bug tracker. Personally I've seen many gcc warnings appear/disappear depending on optimization level or trivial code restructuring. It would be a full time job to report all these inconsistencies on the bugtracker.",https://github.com/bitcoin/bitcoin/pull/20797#discussion_r549743450,549743450,src/txmempool.cpp
