[
  {
    "sha": "5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTJkYTA5ZTRmYmU3Y2Q4YmRiZGFkZGRlODk5OTU0NzY5MWNlNTlj",
    "commit": {
      "author": {
        "name": "Thomas Kerin",
        "email": "me@thomaskerin.io",
        "date": "2016-11-08T14:36:19Z"
      },
      "committer": {
        "name": "Thomas Kerin",
        "email": "thomas.kerin@bitmaintech.com",
        "date": "2017-12-02T12:38:07Z"
      },
      "message": "RPC: addmultisigaddress / createmultisig: parameterize _createmultisig_redeemScript to allow sorting of public keys (BIP67)\n\naddmultisig/createmultisig RPC documentation: Remove stray quotes from fSort parameter",
      "tree": {
        "sha": "11cbf2aaf9b96ee6b6bb797173985b600e6147dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11cbf2aaf9b96ee6b6bb797173985b600e6147dc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJaIp6wAAoJEKPjFP5eDargbGsQAKO1+pp84YoL191SOuFTSN7c\nsYFSiUpdVwjTbZ3Qp6TOrLM9BtygPohKvK1JGiJJhkg2Q0kIqKEGIsx6fy9hsN9v\nwYtCT0hSK7HVDdLExqnu9X1awHKWTZboLGwFuAeoHYhrE2wuosgKOX7z7tyu4LOG\nuqkE00jPEjy/fZqY+Js3vrzcgw1WVQksOgLadUO2gL7Ljrg/slB/lKLCsV4RfIUp\n3OXsUl8bY2UWuJPp+Ftt8da2A0W39ezLzThKE280RIttzQIJrAy9MKo/3khEXbVO\nGxhYt/Cr0EWwZ8ZYAdrRrxXZnP+VFI4vjPQEKS3IB/yj/8UinF43+nbxQQj5ZENx\nqRUXKEzbD8br3+DxyVM922XToHRJ9qwaYPt0fjZ20GSO1ZQWFpzNGuYiz2Zu37Ut\nskwa1qnVrRzLzYc+8qw+XquP/aSvnTKlNJqWGQvJUFANx45i5+AvVVTae4GhUqjx\n8/iwfT8zS2Ju2RW+Dh0BgnLigQfCCBHzoH6+qKt6bbnsUJIKpWADKLQ5qBWeYlXl\nGeDYbTRJ5UBGgMaIdfwAv7bCW8FtehWKENpjKzFgB4MhzAPR4rDZTnYKjSpq+bzT\npZopek/gUs/2JZw3oWYLvsp3gyMXd+p8D645vIyCV0W1Bwm3TKjB2KqNdLL7NNqm\nRylcWgSNWS5+pIjxRWit\n=gZCx\n-----END PGP SIGNATURE-----",
        "payload": "tree 11cbf2aaf9b96ee6b6bb797173985b600e6147dc\nparent 00d25e90db06149fa456b0a8f15b7b68005ff9c5\nauthor Thomas Kerin <me@thomaskerin.io> 1478615779 +0000\ncommitter Thomas Kerin <thomas.kerin@bitmaintech.com> 1512218287 +0100\n\nRPC: addmultisigaddress / createmultisig: parameterize _createmultisig_redeemScript to allow sorting of public keys (BIP67)\n\naddmultisig/createmultisig RPC documentation: Remove stray quotes from fSort parameter\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/comments",
    "author": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00d25e90db06149fa456b0a8f15b7b68005ff9c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00d25e90db06149fa456b0a8f15b7b68005ff9c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00d25e90db06149fa456b0a8f15b7b68005ff9c5"
      }
    ],
    "stats": {
      "total": 121,
      "additions": 101,
      "deletions": 20
    },
    "files": [
      {
        "sha": "5865f2a2d1c0a958ebfee3e1052a265e65545d21",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "patch": "@@ -76,8 +76,10 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"sendmany\", 6 , \"conf_target\" },\n     { \"addmultisigaddress\", 0, \"nrequired\" },\n     { \"addmultisigaddress\", 1, \"keys\" },\n+    { \"addmultisigaddress\", 3, \"sort\" },\n     { \"createmultisig\", 0, \"nrequired\" },\n     { \"createmultisig\", 1, \"keys\" },\n+    { \"createmultisig\", 2, \"sort\" },\n     { \"listunspent\", 0, \"minconf\" },\n     { \"listunspent\", 1, \"maxconf\" },\n     { \"listunspent\", 2, \"addresses\" },"
      },
      {
        "sha": "2c159d22c11c86b9739ed3ccfbaaa3bb9ff2019f",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "patch": "@@ -212,7 +212,7 @@ class CWallet;\n /**\n  * Used by addmultisigaddress / createmultisig:\n  */\n-CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& params)\n+CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& params, bool fSorted)\n {\n     int nRequired = params[0].get_int();\n     const UniValue& keys = params[1].get_array();\n@@ -263,7 +263,7 @@ CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& pa\n             throw std::runtime_error(\" Invalid public key: \"+ks);\n         }\n     }\n-    CScript result = GetScriptForMultisig(nRequired, pubkeys);\n+    CScript result = GetScriptForMultisig(nRequired, pubkeys, fSorted);\n \n     if (result.size() > MAX_SCRIPT_ELEMENT_SIZE)\n         throw std::runtime_error(\n@@ -280,11 +280,12 @@ UniValue createmultisig(const JSONRPCRequest& request)\n     CWallet * const pwallet = nullptr;\n #endif\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n     {\n-        std::string msg = \"createmultisig nrequired [\\\"key\\\",...]\\n\"\n+        std::string msg = \"createmultisig nrequired [\\\"key\\\",...] ( sort )\\n\"\n             \"\\nCreates a multi-signature address with n signature of m keys required.\\n\"\n             \"It returns a json object with the address and redeemScript.\\n\"\n+            \"Public keys can be sorted according to BIP67 during the request if required.\\n\"\n \n             \"\\nArguments:\\n\"\n             \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n@@ -293,6 +294,7 @@ UniValue createmultisig(const JSONRPCRequest& request)\n             \"       \\\"key\\\"    (string) bitcoin address or hex-encoded public key\\n\"\n             \"       ,...\\n\"\n             \"     ]\\n\"\n+            \"3. sort           (bool, optional) Whether to sort public keys according to BIP67. Default setting is false.\\n\"\n \n             \"\\nResult:\\n\"\n             \"{\\n\"\n@@ -309,8 +311,10 @@ UniValue createmultisig(const JSONRPCRequest& request)\n         throw std::runtime_error(msg);\n     }\n \n+    bool fSorted = request.params.size() > 2 && request.params[2].get_bool();\n+\n     // Construct using pay-to-script-hash:\n-    CScript inner = _createmultisig_redeemScript(pwallet, request.params);\n+    CScript inner = _createmultisig_redeemScript(pwallet, request.params, fSorted);\n     CScriptID innerID(inner);\n \n     UniValue result(UniValue::VOBJ);\n@@ -629,7 +633,7 @@ static const CRPCCommand commands[] =\n     { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          {\"mode\"} },\n     { \"control\",            \"logging\",                &logging,                {\"include\", \"exclude\"}},\n     { \"util\",               \"validateaddress\",        &validateaddress,        {\"address\"} }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\"} },\n+    { \"util\",               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\",\"sort\"} },\n     { \"util\",               \"verifymessage\",          &verifymessage,          {\"address\",\"signature\",\"message\"} },\n     { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, {\"privkey\",\"message\"} },\n "
      },
      {
        "sha": "56071adb6b25915d4e6c5f01666586396e5ac6a7",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "patch": "@@ -329,13 +329,24 @@ CScript GetScriptForRawPubKey(const CPubKey& pubKey)\n     return CScript() << std::vector<unsigned char>(pubKey.begin(), pubKey.end()) << OP_CHECKSIG;\n }\n \n-CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys)\n+CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys, bool fSorted)\n {\n-    CScript script;\n+    int nEncoded = 0;\n+    std::vector<std::vector<unsigned char>> vEncoded;\n+    vEncoded.resize(keys.size());\n+    for (const CPubKey& key : keys) {\n+        vEncoded[nEncoded++] = ToByteVector(key);\n+    }\n+\n+    if (fSorted) {\n+        std::sort(vEncoded.begin(), vEncoded.end());\n+    }\n \n+    CScript script;\n     script << CScript::EncodeOP_N(nRequired);\n-    for (const CPubKey& key : keys)\n-        script << ToByteVector(key);\n+    for (std::vector<unsigned char> bytes : vEncoded) {\n+        script << bytes;\n+    }\n     script << CScript::EncodeOP_N(keys.size()) << OP_CHECKMULTISIG;\n     return script;\n }"
      },
      {
        "sha": "90a9da25090c16e738ad70496cc7b41cfc90abd3",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "patch": "@@ -158,7 +158,7 @@ CScript GetScriptForDestination(const CTxDestination& dest);\n CScript GetScriptForRawPubKey(const CPubKey& pubkey);\n \n /** Generate a multisig script. */\n-CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys);\n+CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys, bool fSorted=false);\n \n /**\n  * Generate a pay-to-witness script for the given redeem script. If the redeem"
      },
      {
        "sha": "7e9db1ff4267542b9ad6c088686429495f24bef5",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "patch": "@@ -1139,7 +1139,7 @@ UniValue sendmany(const JSONRPCRequest& request)\n }\n \n // Defined in rpc/misc.cpp\n-extern CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& params);\n+extern CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& params, bool fSorted);\n \n UniValue addmultisigaddress(const JSONRPCRequest& request)\n {\n@@ -1148,21 +1148,24 @@ UniValue addmultisigaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 4)\n     {\n-        std::string msg = \"addmultisigaddress nrequired [\\\"key\\\",...] ( \\\"account\\\" )\\n\"\n+        std::string msg = \"addmultisigaddress nrequired [\\\"key\\\",...] ( \\\"account\\\" ) ( sort )\\n\"\n             \"\\nAdd a nrequired-to-sign multisignature address to the wallet. Requires a new wallet backup.\\n\"\n+\n             \"Each key is a Bitcoin address or hex-encoded public key.\\n\"\n             \"If 'account' is specified (DEPRECATED), assign address to that account.\\n\"\n+            \"Public keys can be sorted according to BIP67 during the request if required.\\n\"\n \n             \"\\nArguments:\\n\"\n-            \"1. nrequired        (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n+            \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n             \"2. \\\"keys\\\"         (string, required) A json array of bitcoin addresses or hex-encoded public keys\\n\"\n             \"     [\\n\"\n             \"       \\\"address\\\"  (string) bitcoin address or hex-encoded public key\\n\"\n             \"       ...,\\n\"\n             \"     ]\\n\"\n             \"3. \\\"account\\\"      (string, optional) DEPRECATED. An account to assign the addresses to.\\n\"\n+            \"4. sort           (bool, optional) Whether to sort public keys according to BIP67. Default setting is false.\\n\"\n \n             \"\\nResult:\\n\"\n             \"\\\"address\\\"         (string) A bitcoin address associated with the keys.\\n\"\n@@ -1182,8 +1185,10 @@ UniValue addmultisigaddress(const JSONRPCRequest& request)\n     if (!request.params[2].isNull())\n         strAccount = AccountFromValue(request.params[2]);\n \n+    bool fSorted = request.params.size() > 3 && request.params[3].get_bool();\n+\n     // Construct using pay-to-script-hash:\n-    CScript inner = _createmultisig_redeemScript(pwallet, request.params);\n+    CScript inner = _createmultisig_redeemScript(pwallet, request.params, fSorted);\n     CScriptID innerID(inner);\n     pwallet->AddCScript(inner);\n \n@@ -3445,7 +3450,7 @@ static const CRPCCommand commands[] =\n     { \"hidden\",             \"resendwallettransactions\", &resendwallettransactions, {} },\n     { \"wallet\",             \"abandontransaction\",       &abandontransaction,       {\"txid\"} },\n     { \"wallet\",             \"abortrescan\",              &abortrescan,              {} },\n-    { \"wallet\",             \"addmultisigaddress\",       &addmultisigaddress,       {\"nrequired\",\"keys\",\"account\"} },\n+    { \"wallet\",             \"addmultisigaddress\",       &addmultisigaddress,       {\"nrequired\",\"keys\",\"account\",\"sort\"} },\n     { \"wallet\",             \"addwitnessaddress\",        &addwitnessaddress,        {\"address\",\"p2sh\"} },\n     { \"wallet\",             \"backupwallet\",             &backupwallet,             {\"destination\"} },\n     { \"wallet\",             \"bumpfee\",                  &bumpfee,                  {\"txid\", \"options\"} },"
      },
      {
        "sha": "761287ea697f9106723d77badb141ea253ca2443",
        "filename": "test/functional/sort_multisig.py",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/test/functional/sort_multisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/test/functional/sort_multisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/sort_multisig.py?ref=5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "patch": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the createmultisig API\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class SortMultisigTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [[]]\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        pub1 = \"022df8750480ad5b26950b25c7ba79d3e37d75f640f8e5d9bcd5b150a0f85014da\"\n+        pub2 = \"03e3818b65bcc73a7d64064106a859cc1a5a728c4345ff0b641209fba0d90de6e9\"\n+        pub3 = \"021f2f6e1e50cb6a953935c3601284925decd3fd21bc445712576873fb8c6ebc18\"\n+\n+        pubs = [pub1,pub2,pub3]\n+\n+        default = self.nodes[0].createmultisig(2, pubs)\n+        unsorted = self.nodes[0].createmultisig(2, pubs, False)\n+\n+        assert_equal(\"2N2BchzwfyuqJep7sKmFfBucfopHZQuPnpt\", unsorted[\"address\"])\n+        assert_equal(\"5221022df8750480ad5b26950b25c7ba79d3e37d75f640f8e5d9bcd5b150a0f85014da2103e3818b65bcc73a7d64064106a859cc1a5a728c4345ff0b641209fba0d90de6e921021f2f6e1e50cb6a953935c3601284925decd3fd21bc445712576873fb8c6ebc1853ae\", unsorted[\"redeemScript\"])\n+        assert_equal(default[\"address\"], unsorted[\"address\"])\n+        assert_equal(default[\"redeemScript\"], unsorted[\"redeemScript\"])\n+\n+        sorted = self.nodes[0].createmultisig(2, pubs, True)\n+        assert_equal(\"2NFd5JqpwmQNz3gevZJ3rz9ofuHvqaP9Cye\", sorted[\"address\"])\n+        assert_equal(\"5221021f2f6e1e50cb6a953935c3601284925decd3fd21bc445712576873fb8c6ebc1821022df8750480ad5b26950b25c7ba79d3e37d75f640f8e5d9bcd5b150a0f85014da2103e3818b65bcc73a7d64064106a859cc1a5a728c4345ff0b641209fba0d90de6e953ae\", sorted[\"redeemScript\"])\n+\n+if __name__ == '__main__':\n+    SortMultisigTest().main()\n+"
      },
      {
        "sha": "2d55d3723aa98cfb5e7cb78d89f84a663df290a1",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "patch": "@@ -112,6 +112,7 @@\n     'importprunedfunds.py',\n     'signmessages.py',\n     'nulldummy.py',\n+    'sort_multisig.py',\n     'import-rescan.py',\n     'mining.py',\n     'bumpfee.py',"
      },
      {
        "sha": "586ff7bb46fba201cacabb848aebf81e31fe292b",
        "filename": "test/functional/wallet-accounts.py",
        "status": "modified",
        "additions": 23,
        "deletions": 3,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/test/functional/wallet-accounts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c/test/functional/wallet-accounts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-accounts.py?ref=5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "patch": "@@ -20,9 +20,28 @@ class WalletAccountsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [[]]\n+        self.extra_args = [[\"-maxorphantx=1000\", \"-whitelist=127.0.0.1\"]]\n \n-    def run_test(self):\n+    def test_sort_multisig(self, node):\n+        node.importprivkey(\"cSJUMwramrFYHKPfY77FH94bv4Q5rwUCyfD6zX3kLro4ZcWsXFEM\")\n+        node.importprivkey(\"cSpQbSsdKRmxaSWJ3TckCFTrksXNPbh8tfeZESGNQekkVxMbQ77H\")\n+        node.importprivkey(\"cRNbfcJgnvk2QJEVbMsxzoprotm1cy3kVA2HoyjSs3ss5NY5mQqr\")\n+\n+        addresses = [\n+            \"muRmfCwue81ZT9oc3NaepefPscUHtP5kyC\",\n+            \"n12RzKwqWPPA4cWGzkiebiM7Gu6NXUnDW8\",\n+            \"n2yWMtx8jVbo8wv9BK2eN1LdbaakgKL3Mt\",\n+        ]\n+\n+        sorted_default = node.addmultisigaddress(2, addresses, \"sort-test\")\n+        sorted_false = node.addmultisigaddress(2, addresses, \"sort-test\", False)\n+        sorted_true = node.addmultisigaddress(2, addresses, \"sort-test\", True)\n+\n+        assert_equal(sorted_default, sorted_false)\n+        assert_equal(\"2N6dne8yzh13wsRJxCcMgCYNeN9fxKWNHt8\", sorted_default)\n+        assert_equal(\"2MsJ2YhGewgDPGEQk4vahGs4wRikJXpRRtU\", sorted_true)\n+\n+    def run_test (self):\n         node = self.nodes[0]\n         # Check that there's no UTXO on any of the nodes\n         assert_equal(len(node.listunspent()), 0)\n@@ -134,6 +153,8 @@ def run_test(self):\n         for account in accounts:\n             assert_equal(node.getbalance(account.name), 50)\n \n+        self.test_sort_multisig(node)\n+\n         # Check that setaccount can change the account of an address from a\n         # different account.\n         change_account(node, accounts[0].addresses[0], accounts[0], accounts[1])\n@@ -201,6 +222,5 @@ def change_account(node, address, old_account, new_account):\n     old_account.verify(node)\n     new_account.verify(node)\n \n-\n if __name__ == '__main__':\n     WalletAccountsTest().main()"
      }
    ]
  },
  {
    "sha": "ee9110a46d209d5e1a0e9768c0d27e8361c949dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTkxMTBhNDZkMjA5ZDVlMWEwZTk3NjhjMGQyN2U4MzYxYzk0OWRk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-04T20:43:46Z"
      },
      "committer": {
        "name": "Thomas Kerin",
        "email": "thomas.kerin@bitmaintech.com",
        "date": "2017-12-02T12:55:11Z"
      },
      "message": "script: GetScriptForRawPubKey: More efficient key-encoding loop",
      "tree": {
        "sha": "3f1e033a7ce1b9b030ba3d5c349f891b8b3f25d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f1e033a7ce1b9b030ba3d5c349f891b8b3f25d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee9110a46d209d5e1a0e9768c0d27e8361c949dd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJaIqKvAAoJEKPjFP5eDarg/GkQAMRvS1ZblfFrzozrwBsu24v4\nVjW8N4aDWQVz3XpFo5rsCheNoMd5uF4Q4wXBL0gZfTfUyvaGcPU59py3ArPnT0R9\nLBEIfKqps32PX8fFlGAKOP/c7oxTejRZS4XacTLoHdRm7ID/6/nPfNArzr36PYy5\n7s3zxKZcDIZ8ktLNY/gaLWDz4a/onP4si/6s+xSBOUQKZSmgtpcsrHkXJqiupsEa\ng2P4qGB9wq1gLQGa/WgDoU+pkDcrfqpBzd6woSpkd/ftqyMa4dW9/9tVOkhPiDN6\nkgPt0U27bYmKKfFHo9hRQR8S1EgVAc3gFwTdhQ5Sn0nuKC6xveUInNW+RBujCBK4\n9JoLuGLu1jVxZUHcilx0LGwm/8lHNxjOQNj4HxlVR+5SI8I5UHmZe5WmerhQUnWG\nMR78DdcCYV6f6nEzmxI+fdw4kZpn4vcquwBg+mBcDm0gE0b7V2SYF6uijLAEFcFR\nsSO3RCOMRctA5pr3rnGSgdSldPYpAjpEG+MR30nqx0mDmsVDspxh9lHXCyR3DScm\nEjRGXKGolukhGJ6C6qAmAbVT1X2kdTQe3CPClmOCNDUh3X5JApVqOYgTrdjpPTW4\nx3WryhAlv7RlDe5+Pl2qklASdjMQFvYu7ypFYKY6z7NK0JKFa8E0ElCXGueVwBb5\njMX3+riEqKQYgC9LSy7C\n=UPc0\n-----END PGP SIGNATURE-----",
        "payload": "tree 3f1e033a7ce1b9b030ba3d5c349f891b8b3f25d4\nparent 5a2da09e4fbe7cd8bdbdaddde8999547691ce59c\nauthor Luke Dashjr <luke-jr+git@utopios.org> 1486241026 +0000\ncommitter Thomas Kerin <thomas.kerin@bitmaintech.com> 1512219311 +0100\n\nscript: GetScriptForRawPubKey: More efficient key-encoding loop\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee9110a46d209d5e1a0e9768c0d27e8361c949dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee9110a46d209d5e1a0e9768c0d27e8361c949dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee9110a46d209d5e1a0e9768c0d27e8361c949dd/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a2da09e4fbe7cd8bdbdaddde8999547691ce59c"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2de23076bd317caa3d1e15e4b4e6a9ee1101c096",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee9110a46d209d5e1a0e9768c0d27e8361c949dd/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee9110a46d209d5e1a0e9768c0d27e8361c949dd/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=ee9110a46d209d5e1a0e9768c0d27e8361c949dd",
        "patch": "@@ -331,11 +331,10 @@ CScript GetScriptForRawPubKey(const CPubKey& pubKey)\n \n CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys, bool fSorted)\n {\n-    int nEncoded = 0;\n     std::vector<std::vector<unsigned char>> vEncoded;\n-    vEncoded.resize(keys.size());\n+    vEncoded.reserve(keys.size());\n     for (const CPubKey& key : keys) {\n-        vEncoded[nEncoded++] = ToByteVector(key);\n+        vEncoded.emplace_back(ToByteVector(key));\n     }\n \n     if (fSorted) {"
      }
    ]
  },
  {
    "sha": "fcbf6cca5cc444d5e658750000922aef5f26987e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmY2JmNmNjYTVjYzQ0NGQ1ZTY1ODc1MDAwMDkyMmFlZjVmMjY5ODdl",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-04T20:46:28Z"
      },
      "committer": {
        "name": "Thomas Kerin",
        "email": "thomas.kerin@bitmaintech.com",
        "date": "2017-12-02T12:55:14Z"
      },
      "message": "doc/bips: Add BIP 67",
      "tree": {
        "sha": "628f6cbeb1e0038790edd5219c4d95cc8305cc5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/628f6cbeb1e0038790edd5219c4d95cc8305cc5f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcbf6cca5cc444d5e658750000922aef5f26987e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJaIqKyAAoJEKPjFP5eDargL28QANejk2xpa1Wcz+AvBaP4b6IL\nGxVDzDXUFtGnBYCwIzxvIVUITBL9VplU2Eb8oVAVb61ntAbd+f2pBiZKd9rndrAo\nXbL4TFJk1ekup+2lAl6MAffUhC4tQeMwpYXg3bSHpb5JUTacbV9Cz/q+r06+Gpi2\nDp617x6PQqhx3A5Dk9ZvCkKerDRfi7mwmK9r9jPF9Do0Lf/imFLrRuhPJtnxNYMo\nZzlmalzplgEJRy+UgpwoaahiwimM6qfFqqfNvNBxHx0pkMTVxCTgnGRBCjlujZTJ\n8+IW2DX34WtQO3XvXjQ2461jPs6h2bkcT0xI5tz0U9Qh53swvf7V0kdiuC7i/H9o\n/caG/9jmEmvzLTVEJHJvCV9AhFmAdnURleKfdXQCEZ0uPGfEZYyehbbgP4Px7cz4\nX9m6bB6qJMiVFCoAsThRN4L0Do5cz2K+SwSZ9A2xbrmU4nH9peFxoGIF4pbDQYr0\n0R+dVJPKnvGAeEqvklXjAxPawwQz+/rUFFCXTrHpYtQiF/XL4HsonAxDugC4Huxc\nncsnmaeZ50zJZLD7UU0k4wDsAoAGi16NHGMgasfk5XwiFjoPcvkVCt0y9DVq6VLv\nGxIOv7TXAjBjjTBIQK09GDH36dNn5gIs0qYt8SuZpQKcaDcIQNxs3uXfVCzctx70\n+59mttBbpq8KLcSmjVin\n=4FMe\n-----END PGP SIGNATURE-----",
        "payload": "tree 628f6cbeb1e0038790edd5219c4d95cc8305cc5f\nparent ee9110a46d209d5e1a0e9768c0d27e8361c949dd\nauthor Luke Dashjr <luke-jr+git@utopios.org> 1486241188 +0000\ncommitter Thomas Kerin <thomas.kerin@bitmaintech.com> 1512219314 +0100\n\ndoc/bips: Add BIP 67\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcbf6cca5cc444d5e658750000922aef5f26987e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fcbf6cca5cc444d5e658750000922aef5f26987e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcbf6cca5cc444d5e658750000922aef5f26987e/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee9110a46d209d5e1a0e9768c0d27e8361c949dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee9110a46d209d5e1a0e9768c0d27e8361c949dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee9110a46d209d5e1a0e9768c0d27e8361c949dd"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "51ee3300fed2631ecfd520a801d10cdeb67d5868",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcbf6cca5cc444d5e658750000922aef5f26987e/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcbf6cca5cc444d5e658750000922aef5f26987e/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=fcbf6cca5cc444d5e658750000922aef5f26987e",
        "patch": "@@ -18,6 +18,7 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.13.0**):\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n * [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n+* [`BIP 67`](https://github.com/bitcoin/bips/blob/master/bip-0067.mediawiki): Sorting multisig keys according to BIP 67 was merged in **v0.15.1** ([PR #8751](https://github.com/bitcoin/bitcoin/pull/8751)).\n * [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n * [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391))."
      }
    ]
  },
  {
    "sha": "6fbcf50e99684a3d4e87a1885b8c89439eb11577",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmJjZjUwZTk5Njg0YTNkNGU4N2ExODg1YjhjODk0MzllYjExNTc3",
    "commit": {
      "author": {
        "name": "Thomas Kerin",
        "email": "thomas.kerin@bitmaintech.com",
        "date": "2017-09-30T12:02:18Z"
      },
      "committer": {
        "name": "Thomas Kerin",
        "email": "thomas.kerin@bitmaintech.com",
        "date": "2017-12-02T12:55:18Z"
      },
      "message": "Ensure whilst sorting only compressed public keys are used",
      "tree": {
        "sha": "a841f70e1c3eaf5a5cacfc4203cdc3c49ad8630a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a841f70e1c3eaf5a5cacfc4203cdc3c49ad8630a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fbcf50e99684a3d4e87a1885b8c89439eb11577",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJaIqK2AAoJEKPjFP5eDargUSoQAIZ7JPJ/+yQ0jBQ2qjZpMPPE\ngnBuITe237P3btbg4ihtiU8Xse6NMVEA608ToIWbkB9pmNZx7n1i/8DdJK9xabTV\nnkKjY4pEEOA4POUBKLnhXILnCUBKGZhCC8IY6eXIF8vKAI4cbjc9Zs/hxukwVuiz\nwnxzF+GJPrlhlSppDTeWhky1sKsKwNEbDGwpIhmfJ90sCKdQ8fPylY5NyMcFdIl6\nd5ICZpIQOJ7Lg31g4Jn26SL8G5tCx2NVZ+On4RHTfZRm69wv//9pz8CRlsrQWOsS\nf7YM0KuGGYaCufRxLgJltMso8o8gbx5z3Wp/697R1uRq4Ghe9zp0Nn1mdm3IYpFT\nWfkTAaHIdZwRGRr6g+z/CparhEjurmESfDC6WCOKTPvTGfgCAAHeVpCbt4kET7UL\niFT5rNK7QPI5ohJ9YqXwSrqmaeKdGM7JwHVjPWskOj4S9CMsoARMCbWeoh8FVBNi\nDyQ+Lfrh968mtawh1BjQDkjq3fLCpyRIQL7PSGsv6DBqm8ObHGXUoFk5vQX+bKxE\nVMiNIyXGgXLA1q4zhs9jvifCAnGw2GyVCTfNmCksZfe2uMQC4182i9J/d3AmeQRn\nZFZd2RoZCJkgNoDE8o3it9WSQa5jEqvy1TuGZSQNNgiV3/UBSkXB6vlGNDYxXaXm\nDmHm+muXtXhAFA2gnykC\n=ZOb0\n-----END PGP SIGNATURE-----",
        "payload": "tree a841f70e1c3eaf5a5cacfc4203cdc3c49ad8630a\nparent fcbf6cca5cc444d5e658750000922aef5f26987e\nauthor Thomas Kerin <thomas.kerin@bitmaintech.com> 1506772938 +0200\ncommitter Thomas Kerin <thomas.kerin@bitmaintech.com> 1512219318 +0100\n\nEnsure whilst sorting only compressed public keys are used\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fbcf50e99684a3d4e87a1885b8c89439eb11577",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6fbcf50e99684a3d4e87a1885b8c89439eb11577",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fbcf50e99684a3d4e87a1885b8c89439eb11577/comments",
    "author": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fcbf6cca5cc444d5e658750000922aef5f26987e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcbf6cca5cc444d5e658750000922aef5f26987e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fcbf6cca5cc444d5e658750000922aef5f26987e"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "805251172f91242b57cd9f8b22a4ce4a5588989e",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fbcf50e99684a3d4e87a1885b8c89439eb11577/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fbcf50e99684a3d4e87a1885b8c89439eb11577/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=6fbcf50e99684a3d4e87a1885b8c89439eb11577",
        "patch": "@@ -245,6 +245,8 @@ CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& pa\n             }\n             if (!vchPubKey.IsFullyValid())\n                 throw std::runtime_error(\" Invalid public key: \"+ks);\n+            if (fSorted && !vchPubKey.IsCompressed())\n+                throw std::runtime_error(\" Compressed key required for BIP67: \"+ks);\n             pubkeys[i] = vchPubKey;\n         }\n \n@@ -256,6 +258,8 @@ CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& pa\n             CPubKey vchPubKey(ParseHex(ks));\n             if (!vchPubKey.IsFullyValid())\n                 throw std::runtime_error(\" Invalid public key: \"+ks);\n+            if (fSorted && !vchPubKey.IsCompressed())\n+                throw std::runtime_error(\" Compressed key required for BIP67: \"+ks);\n             pubkeys[i] = vchPubKey;\n         }\n         else"
      }
    ]
  },
  {
    "sha": "e11cb50a09b1a6108f906b7cdb67015a812ea689",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTFjYjUwYTA5YjFhNjEwOGY5MDZiN2NkYjY3MDE1YTgxMmVhNjg5",
    "commit": {
      "author": {
        "name": "Thomas Kerin",
        "email": "thomas.kerin@bitmaintech.com",
        "date": "2017-09-30T12:52:55Z"
      },
      "committer": {
        "name": "Thomas Kerin",
        "email": "thomas.kerin@bitmaintech.com",
        "date": "2017-12-02T13:21:35Z"
      },
      "message": "Add more tests to sort_multisigs.py / wallet-accounts.py\n\nsort_multisig test: check uncompressed keys are disallowed\nsort_multisig: add test demonstrating sorting\nwallet-accounts: test addmultisigaddress fails if sort=true and (wallet) address is uncompressed",
      "tree": {
        "sha": "e7164c8a1e0947f09b4503bb968294864bd14a0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7164c8a1e0947f09b4503bb968294864bd14a0a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e11cb50a09b1a6108f906b7cdb67015a812ea689",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJaIqjfAAoJEKPjFP5eDargNSwP/0ZVuwH9rt2PDgGFXZNlYrQ8\n1qCyIA8ZDJt3ZivqF+BvoxZUaWUH/vz+cQ9jU6+ThuuqpUfpreBMI0+4rnnF3cdg\nDslmgXRQyIYLLzt1twIKP/1acQlHXj/SP7+Del6z4Fd+IY7i09ff0kyqriO56Miq\nOT2bf6oGxGDDS8T0hQ/gLQvvWrgiMJUniwdg8PIX7XUnY9xVuqt1g3jj6G6n2A3u\nW1StijJjo2wZaydCOSJqOKdP0IKBstrtfBnidxiEwkckuYryTgvfRN1KeftRSIRG\nJQdhjBJgNI733SgO95R3HY0xvJjWkBJLIM2f9QqR9anH3IwABxwUmhM6elUvooLQ\npT7GGeeHAm5vHJXC8397QKWkAXQeU972U0T4Bn5LuNPzmiv9UINfI31qrli+1P1w\ncVfaCd+8TYR0fpeHru+WacdZJVRFTWz/Y9BuoqShtN871tPJs871KXJPin67IPw2\ntyI4/jlJ0gXdSrCuZFtN5dPoUIBODwwjtKq9VLnu3rm7pceMdFDyPlCURjrMD/6V\nFFNqrh5Ss9yWkasw1IGH0Z4bbh4nF8Q4rYXgz/otNQTnTZEL8OU7P+ZpL+SKsrHL\nySfi+77i1SNona/aeTYP4J+r/rtNQNOk49NgYv7arexGtVvn9qaI1EnoBlYEzw8S\nZjIgqcMMS/m6+2vdKfmi\n=Uwg+\n-----END PGP SIGNATURE-----",
        "payload": "tree e7164c8a1e0947f09b4503bb968294864bd14a0a\nparent 6fbcf50e99684a3d4e87a1885b8c89439eb11577\nauthor Thomas Kerin <thomas.kerin@bitmaintech.com> 1506775975 +0200\ncommitter Thomas Kerin <thomas.kerin@bitmaintech.com> 1512220895 +0100\n\nAdd more tests to sort_multisigs.py / wallet-accounts.py\n\nsort_multisig test: check uncompressed keys are disallowed\nsort_multisig: add test demonstrating sorting\nwallet-accounts: test addmultisigaddress fails if sort=true and (wallet) address is uncompressed\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e11cb50a09b1a6108f906b7cdb67015a812ea689",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e11cb50a09b1a6108f906b7cdb67015a812ea689",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e11cb50a09b1a6108f906b7cdb67015a812ea689/comments",
    "author": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fbcf50e99684a3d4e87a1885b8c89439eb11577",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fbcf50e99684a3d4e87a1885b8c89439eb11577",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fbcf50e99684a3d4e87a1885b8c89439eb11577"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 65,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f8ddec7619965abca778cc09215cb7a9dca07067",
        "filename": "test/functional/sort_multisig.py",
        "status": "modified",
        "additions": 46,
        "deletions": 1,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e11cb50a09b1a6108f906b7cdb67015a812ea689/test/functional/sort_multisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e11cb50a09b1a6108f906b7cdb67015a812ea689/test/functional/sort_multisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/sort_multisig.py?ref=e11cb50a09b1a6108f906b7cdb67015a812ea689",
        "patch": "@@ -14,7 +14,7 @@ def set_test_params(self):\n         self.extra_args = [[]]\n         self.setup_clean_chain = True\n \n-    def run_test(self):\n+    def run_simple_test(self):\n         pub1 = \"022df8750480ad5b26950b25c7ba79d3e37d75f640f8e5d9bcd5b150a0f85014da\"\n         pub2 = \"03e3818b65bcc73a7d64064106a859cc1a5a728c4345ff0b641209fba0d90de6e9\"\n         pub3 = \"021f2f6e1e50cb6a953935c3601284925decd3fd21bc445712576873fb8c6ebc18\"\n@@ -33,6 +33,51 @@ def run_test(self):\n         assert_equal(\"2NFd5JqpwmQNz3gevZJ3rz9ofuHvqaP9Cye\", sorted[\"address\"])\n         assert_equal(\"5221021f2f6e1e50cb6a953935c3601284925decd3fd21bc445712576873fb8c6ebc1821022df8750480ad5b26950b25c7ba79d3e37d75f640f8e5d9bcd5b150a0f85014da2103e3818b65bcc73a7d64064106a859cc1a5a728c4345ff0b641209fba0d90de6e953ae\", sorted[\"redeemScript\"])\n \n+    def run_demonstrate_sorting(self):\n+        pub1 = \"022df8750480ad5b26950b25c7ba79d3e37d75f640f8e5d9bcd5b150a0f85014da\"\n+        pub2 = \"03e3818b65bcc73a7d64064106a859cc1a5a728c4345ff0b641209fba0d90de6e9\"\n+        pub3 = \"021f2f6e1e50cb6a953935c3601284925decd3fd21bc445712576873fb8c6ebc18\"\n+\n+        sorted = self.nodes[0].createmultisig(2, [pub3,pub1,pub2,])\n+\n+        self.test_if_result_matches(2, [pub1,pub2,pub3], True, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub1,pub3,pub2], True, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub2,pub3,pub1], True, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub2,pub1,pub3], True, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub3,pub1,pub2], True, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub3,pub2,pub1], True, sorted[\"address\"])\n+\n+        self.test_if_result_matches(2, [pub1,pub2,pub3], False, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub1,pub3,pub2], False, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub2,pub3,pub1], False, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub2,pub1,pub3], False, sorted[\"address\"])\n+        self.test_if_result_matches(2, [pub3,pub2,pub1], False, sorted[\"address\"])\n+\n+    def test_if_result_matches(self, m, keys, sort, against):\n+        result = self.nodes[0].createmultisig(m, keys, sort)\n+        assert_equal(sort, result[\"address\"] == against)\n+\n+    def test_compressed_keys_forbidden(self):\n+        pub1 = \"02fdf7e1b65a477a7815effde996a03a7d94cbc46f7d14c05ef38425156fc92e22\"\n+        pub2 = \"04823336da95f0b4cf745839dff26992cef239ad2f08f494e5b57c209e4f3602d5526bc251d480e3284d129f736441560e17f3a7eb7ed665fdf0158f44550b926c\"\n+        rs = \"522102fdf7e1b65a477a7815effde996a03a7d94cbc46f7d14c05ef38425156fc92e224104823336da95f0b4cf745839dff26992cef239ad2f08f494e5b57c209e4f3602d5526bc251d480e3284d129f736441560e17f3a7eb7ed665fdf0158f44550b926c52ae\"\n+        pubs = [pub1,pub2]\n+\n+        default = self.nodes[0].createmultisig(2, pubs)\n+        assert_equal(rs, default[\"redeemScript\"])\n+\n+        unsorted = self.nodes[0].createmultisig(2, pubs, False)\n+        assert_equal(rs, unsorted[\"redeemScript\"])\n+        assert_equal(default[\"address\"], unsorted[\"address\"])\n+        assert_equal(default[\"redeemScript\"], unsorted[\"redeemScript\"])\n+\n+        assert_raises_rpc_error(-1, \"Compressed key required for BIP67: 04823336da95f0b4cf745839dff26992cef239ad2f08f494e5b57c209e4f3602d5526bc251d480e3284d129f736441560e17f3a7eb7ed665fdf0158f44550b926c\", self.nodes[0].createmultisig, 2, pubs, True)\n+\n+    def run_test(self):\n+        self.run_simple_test()\n+        self.run_demonstrate_sorting()\n+        self.test_compressed_keys_forbidden()\n+\n if __name__ == '__main__':\n     SortMultisigTest().main()\n "
      },
      {
        "sha": "8da36586369be2121e302bfa451654ea454838e7",
        "filename": "test/functional/wallet-accounts.py",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e11cb50a09b1a6108f906b7cdb67015a812ea689/test/functional/wallet-accounts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e11cb50a09b1a6108f906b7cdb67015a812ea689/test/functional/wallet-accounts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-accounts.py?ref=e11cb50a09b1a6108f906b7cdb67015a812ea689",
        "patch": "@@ -14,7 +14,7 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n \n class WalletAccountsTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -41,6 +41,23 @@ def test_sort_multisig(self, node):\n         assert_equal(\"2N6dne8yzh13wsRJxCcMgCYNeN9fxKWNHt8\", sorted_default)\n         assert_equal(\"2MsJ2YhGewgDPGEQk4vahGs4wRikJXpRRtU\", sorted_true)\n \n+    def test_sort_multisig_with_uncompressed_hash160(self, node):\n+        node.importpubkey(\"02632b12f4ac5b1d1b72b2a3b508c19172de44f6f46bcee50ba33f3f9291e47ed0\")\n+        node.importpubkey(\"04dd4fe618a8ad14732f8172fe7c9c5e76dd18c2cc501ef7f86e0f4e285ca8b8b32d93df2f4323ebb02640fa6b975b2e63ab3c9d6979bc291193841332442cc6ad\")\n+        address = \"2MxvEpFdXeEDbnz8MbRwS23kDZC8tzQ9NjK\"\n+\n+        addresses = [\n+            \"msDoRfEfZQFaQNfAEWyqf69H99yntZoBbG\",\n+            \"myrfasv56W7579LpepuRy7KFhVhaWsJYS8\",\n+        ]\n+        default = self.nodes[0].addmultisigaddress(2, addresses)\n+        assert_equal(address, default)\n+\n+        unsorted = self.nodes[0].addmultisigaddress(2, addresses, \"\", False)\n+        assert_equal(address, unsorted)\n+\n+        assert_raises_rpc_error(-1, \"Compressed key required for BIP67: myrfasv56W7579LpepuRy7KFhVhaWsJYS8\", node.addmultisigaddress, 2, addresses, \"\", True)\n+\n     def run_test (self):\n         node = self.nodes[0]\n         # Check that there's no UTXO on any of the nodes\n@@ -154,6 +171,7 @@ def run_test (self):\n             assert_equal(node.getbalance(account.name), 50)\n \n         self.test_sort_multisig(node)\n+        self.test_sort_multisig_with_uncompressed_hash160(node)\n \n         # Check that setaccount can change the account of an address from a\n         # different account."
      }
    ]
  }
]