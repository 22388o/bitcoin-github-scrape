dcousens,2016-09-18T07:46:23Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-247832238,247832238,
laanwj,2016-09-22T04:58:58Z,"Concept ACK, although I really don't like multiple-optional-positional-boolean APIs. Wish we switched to named arguments any day.\n\nOne nit: the RPC help should mention BIP67 by name.\n",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-248812954,248812954,
MarcoFalke,2016-11-08T10:30:24Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-259101400,259101400,
afk11,2016-11-08T15:53:02Z,"@MarcoFalke thanks, done. @laanwj I should have mentioned, nits addressed. \n\nOne travis run failed due to the compactblocks RPC test.\n",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-259174559,259174559,
ryanofsky,2016-11-08T16:11:23Z,"I can't see anything on travis right now  (503 errors), but the compactblocks error is probably just the spurious https://github.com/bitcoin/bitcoin/issues/8842 / https://github.com/bitcoin/bitcoin/pull/9058 failures.\n",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-259180096,259180096,
MarcoFalke,2016-11-08T17:26:44Z,Concept ACK 7d7a64726991ff087cb8125e0c7277173a688dc7\n,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-259201950,259201950,
afk11,2016-11-24T10:25:39Z,"I probably shouldn't have squashed @MarcoFalke, I'm sorry for rebasing out the commit you reviewed. The only thing to change this time was the removal of ""'s from the RPC help message. ",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-262741959,262741959,
luke-jr,2016-12-21T09:14:19Z,Should update `doc/bips.md` also.,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-268473621,268473621,
luke-jr,2017-02-04T20:51:08Z,"I rebased and addressed all the nits; pushed this to luke-jr/sort-multisigs\n\n@afk11 Are you still maintaining this? Can you pull my changes?\n\n```\ngit checkout sort-multisigs\ngit fetch git://github.com/luke-jr/bitcoin sort-multisigs\ngit reset --hard FETCH_HEAD\ngit push ...\n```",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-277476974,277476974,
afk11,2017-02-06T20:10:21Z,"Sorry, yep I can pull these! \n\nI wanted to wait until named parameters was merged before hand, so I could avoid adding a positional parameter before the accounts parameters were changed \n\nI'll look at this in the next day or so (away from internet atm) wanna finish this up",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-277798504,277798504,
afk11,2017-03-08T19:55:28Z,Merged commits and rebased. Apologies for the delay!,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-285150357,285150357,
afk11,2017-03-08T20:21:22Z,The Apple build failed because the job time exceeded the maximum :/,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-285157232,285157232,
afk11,2017-03-14T08:47:01Z,Rebased,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-286357150,286357150,
afk11,2017-05-09T19:32:01Z,Rebased,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-300276751,300276751,
luke-jr,2017-06-06T03:50:32Z,The description for d70583a2f9ae8bb4bda2e6224e699ac2cbb583ee is no longer correct.,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-306374296,306374296,
afk11,2017-06-06T08:56:36Z,"@luke-jr Oops, yeah the rebase mightn't have been the easiest. So re-add the contents of setup_network?",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-306424529,306424529,
jnewbery,2017-06-15T14:20:34Z,"Perhaps I'm missing something, but I don't see the need for this. The `addmultisigaddress` RPC creates the multisig script with the keys in the order provided. Why not just have the client provide keys in sorted order if you want the script to be BIP-67 compliant?\n\nIt doesn't look like this PR is enforcing that the provided keys are compressed, so even with this PR, there are still expectation",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-308748042,308748042,
afk11,2017-06-16T14:30:15Z,"I think if developers are already committing to using the RPC to make a multisig script, making it easier to produce the same representation is more important than not.\n\nYou are correct the PR as it stands doesn't validate it.. fixing this now. ",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-309041236,309041236,
jnewbery,2017-06-16T15:23:09Z,I'm still a weak concept NACK for this. I don't agree that we should add complexity to the server when the same outcome can be achieved by simply running a `sort()` function on the client before calling the RPC. Sometimes there's good reason to add that complexity to the server - see for example #9991 which adds a filter to save significantly on bandwidth and server resources. In this case I don't,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-309055529,309055529,
afk11,2017-06-19T08:53:10Z,"Both RPC methods take an options object for this (sorry, the PR description wasn't updated with this)\nhttps://github.com/bitcoin/bitcoin/pull/8751/files#diff-ad6efdc354b57bd1fa29fc3abb6e2872R353\nhttps://github.com/bitcoin/bitcoin/pull/8751/files#diff-df7d84ff2f53fcb2a0dc15a3a51e55ceR1050 \n\nI appreciate where you are coming from and agree that most people can probably sort themselves, but t",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-309378890,309378890,
luke-jr,2017-08-21T21:33:58Z,"Rebased and squashed a bit.\n\n```\ngit checkout sort-multisigs && git fetch git://github.com/luke-jr/bitcoin sort-multisigs && git reset --hard FETCH_HEAD && git push ...\n```",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-323859133,323859133,
TheBlueMatt,2017-09-29T18:13:05Z,Concept ACK. Care to rebase?,https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-333199265,333199265,
afk11,2017-09-30T14:31:38Z,"Rebased, sorry for the delay. Updated to check that keys are compressed before allowing sorting, and added more tests for this. \n\nUpdated the docs/bips.md document to mention 0.15.1 instead of 0.15.0 (let me know whatever's best for this)",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-333312259,333312259,
TheBlueMatt,2017-10-02T22:37:51Z,"Hmm, hate to reopen it, but now that we do actually have named arguments, could you rever to just adding a new boolean argument? options objects are just redundant now, and having options alias account in addmultisigaddress is just gross. Everything else seems fine at first glance.\n\n@jnewbery I'd generally agree with you, but, at least in principal, I think BIP67 is worth it.",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-333685053,333685053,
afk11,2017-12-02T16:18:00Z,"@TheBlueMatt that's fine, revised the PR now. \n\nI missed the boat again for v0.15.1, suggestions for a release to mention in bips.md?",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-348702291,348702291,
luke-jr,2018-03-01T22:59:50Z,"> Hmm, hate to reopen it, but now that we do actually have named arguments, could you rever to just adding a new boolean argument? options objects are just redundant now, and having options alias account in addmultisigaddress is just gross. Everything else seems fine at first glance.\n\nStrongly disagree. Named arguments is not a reason to have a terrible positional arguments API. Uncommon optio",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-369761025,369761025,
laanwj,2018-08-31T11:13:55Z,"Closing and putting ""up for grabs"" label",https://github.com/bitcoin/bitcoin/pull/8751#issuecomment-417633179,417633179,
MarcoFalke,2016-11-08T17:24:05Z,Nit: A single node should be enough?\n,https://github.com/bitcoin/bitcoin/pull/8751#discussion_r87039691,87039691,qa/rpc-tests/sort_multisig.py
luke-jr,2016-11-24T06:08:28Z,Is it a string or a boolean?,https://github.com/bitcoin/bitcoin/pull/8751#discussion_r89439591,89439591,src/rpc/misc.cpp
afk11,2016-11-24T10:04:30Z,"It should be a boolean. Just observed they aren't usually quoted in RPC output, fixing now.",https://github.com/bitcoin/bitcoin/pull/8751#discussion_r89466435,89466435,src/rpc/misc.cpp
luke-jr,2016-11-25T08:57:56Z,Rather have a named-options Object interface here.,https://github.com/bitcoin/bitcoin/pull/8751#discussion_r89582341,89582341,src/rpc/misc.cpp
luke-jr,2016-11-25T08:59:54Z,"Seems like the loop would be better as:\n\n```C++\nfor (size_t n = 0; n < keys.size(); ++n) {\n    vEncoded[n] = ToByteVector(keys[n]);\n}\n```",https://github.com/bitcoin/bitcoin/pull/8751#discussion_r89582640,89582640,src/script/standard.cpp
luke-jr,2016-11-25T09:00:46Z,Wouldn't it be better to `reserve` and then `emplace_back`?,https://github.com/bitcoin/bitcoin/pull/8751#discussion_r89582743,89582743,src/script/standard.cpp
luke-jr,2016-11-25T09:02:54Z,"I *think* this should do what BIP 67 requires, but someone more familiar with C++ and its locale support (or lack thereof) should probably confirm.",https://github.com/bitcoin/bitcoin/pull/8751#discussion_r89583040,89583040,src/script/standard.cpp
luke-jr,2016-11-25T09:03:41Z,Maybe default fSorted to false here rather than modify all the tests?,https://github.com/bitcoin/bitcoin/pull/8751#discussion_r89583132,89583132,src/script/standard.h
luke-jr,2016-11-25T09:04:20Z,"As before, rather turn param 3 into an options Object.",https://github.com/bitcoin/bitcoin/pull/8751#discussion_r89583215,89583215,src/wallet/rpcwallet.cpp
luke-jr,2017-08-18T14:49:24Z,We're not using `BOOST_FOREACH` anymore I think. (Also below),https://github.com/bitcoin/bitcoin/pull/8751#discussion_r133977277,133977277,src/script/standard.cpp
luke-jr,2018-03-01T23:01:14Z,Please switch back to an options object for this.,https://github.com/bitcoin/bitcoin/pull/8751#discussion_r171721686,171721686,src/wallet/rpcwallet.cpp
luke-jr,2018-03-01T23:01:24Z,"This blank line won't be in the actual help, so has no purpose here.",https://github.com/bitcoin/bitcoin/pull/8751#discussion_r171721723,171721723,src/wallet/rpcwallet.cpp
