[
  {
    "sha": "7601152ce24b6c9a67335e641a242a0be6888dfe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjAxMTUyY2UyNGI2YzlhNjczMzVlNjQxYTI0MmEwYmU2ODg4ZGZl",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-15T10:02:37Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-15T10:02:37Z"
      },
      "message": "Bitcoin-Qt: ensure all Windows scopes use win32 as identifier\n\n- currently we sometimes use \"windows\" or \"win32\", but as per\n  http://doc.qt.digia.com/qt/qmake-advanced-usage.html, windows seems to\n  be not officially supported (only win32 is mentioned there)",
      "tree": {
        "sha": "368bb9da9528dcb07494bc5c21982da3c5bbef20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/368bb9da9528dcb07494bc5c21982da3c5bbef20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7601152ce24b6c9a67335e641a242a0be6888dfe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7601152ce24b6c9a67335e641a242a0be6888dfe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7601152ce24b6c9a67335e641a242a0be6888dfe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7601152ce24b6c9a67335e641a242a0be6888dfe/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "da8c5c9f4ebedfd50e6c31cee3ec0b1a25f930b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da8c5c9f4ebedfd50e6c31cee3ec0b1a25f930b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da8c5c9f4ebedfd50e6c31cee3ec0b1a25f930b7"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "5266aee106bb368546ff9d7bca9ffd012c9080db",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7601152ce24b6c9a67335e641a242a0be6888dfe/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7601152ce24b6c9a67335e641a242a0be6888dfe/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=7601152ce24b6c9a67335e641a242a0be6888dfe",
        "patch": "@@ -27,7 +27,7 @@ contains(RELEASE, 1) {\n     macx:QMAKE_CFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n     macx:QMAKE_OBJECTIVE_CFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n \n-    !windows:!macx {\n+    !win32:!macx {\n         # Linux: static link\n         LIBS += -Wl,-Bstatic\n     }\n@@ -96,7 +96,7 @@ contains(BITCOIN_NEED_QT_PLUGINS, 1) {\n \n INCLUDEPATH += src/leveldb/include src/leveldb/helpers\n LIBS += $$PWD/src/leveldb/libleveldb.a $$PWD/src/leveldb/libmemenv.a\n-!windows {\n+!win32 {\n     genleveldb.commands = cd $$PWD/src/leveldb && $(MAKE) libleveldb.a libmemenv.a\n } else {\n     # make an educated guess about what the ranlib command is called\n@@ -113,7 +113,7 @@ QMAKE_EXTRA_TARGETS += genleveldb\n QMAKE_CLEAN += $$PWD/src/leveldb/libleveldb.a; cd $$PWD/src/leveldb ; $(MAKE) clean\n \n # regenerate src/build.h\n-!windows|contains(USE_BUILD_INFO, 1) {\n+!win32|contains(USE_BUILD_INFO, 1) {\n     genbuild.depends = FORCE\n     genbuild.commands = cd $$PWD; /bin/sh share/genbuild.sh $$OUT_PWD/build/build.h\n     genbuild.target = $$OUT_PWD/build/build.h\n@@ -320,7 +320,7 @@ OTHER_FILES += \\\n # platform specific defaults, if not overridden on command line\n isEmpty(BOOST_LIB_SUFFIX) {\n     macx:BOOST_LIB_SUFFIX = -mt\n-    windows:BOOST_LIB_SUFFIX = -mgw44-mt-s-1_50\n+    win32:BOOST_LIB_SUFFIX = -mgw44-mt-s-1_50\n }\n \n isEmpty(BOOST_THREAD_LIB_SUFFIX) {\n@@ -347,10 +347,10 @@ isEmpty(BOOST_INCLUDE_PATH) {\n     macx:BOOST_INCLUDE_PATH = /opt/local/include\n }\n \n-windows:DEFINES += WIN32\n-windows:RC_FILE = src/qt/res/bitcoin-qt.rc\n+win32:DEFINES += WIN32\n+win32:RC_FILE = src/qt/res/bitcoin-qt.rc\n \n-windows:!contains(MINGW_THREAD_BUGFIX, 0) {\n+win32:!contains(MINGW_THREAD_BUGFIX, 0) {\n     # At least qmake's win32-g++-cross profile is missing the -lmingwthrd\n     # thread-safety flag. GCC has -mthreads to enable this, but it doesn't\n     # work with static linking. -lmingwthrd must come BEFORE -lmingw, so\n@@ -361,7 +361,7 @@ windows:!contains(MINGW_THREAD_BUGFIX, 0) {\n     QMAKE_LIBS_QT_ENTRY = -lmingwthrd $$QMAKE_LIBS_QT_ENTRY\n }\n \n-!windows:!macx {\n+!win32:!macx {\n     DEFINES += LINUX\n     LIBS += -lrt\n }\n@@ -381,12 +381,12 @@ INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$\n LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)\n LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n # -lgdi32 has to happen after -lcrypto (see  #681)\n-windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32\n+win32:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32\n LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX\n-windows:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n+win32:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n \n contains(RELEASE, 1) {\n-    !windows:!macx {\n+    !win32:!macx {\n         # Linux: turn dynamic linking back on for c/c++ runtime libraries\n         LIBS += -Wl,-Bdynamic\n     }"
      }
    ]
  }
]