sipa,2018-11-24T12:31:18Z,Any reason to not enable ASan and UBSan in the same test?,https://github.com/bitcoin/bitcoin/pull/14794#issuecomment-441364733,441364733,
practicalswift,2018-11-26T13:37:31Z,"@sipa I was afraid the combined runtime would be too long, but it appears to work. The two Travis jobs have now been merged. Please review.\n\n@MarcoFalke Now running also with LSan (LeakSanitizer). Please review :-)",https://github.com/bitcoin/bitcoin/pull/14794#issuecomment-441641374,441641374,
MarcoFalke,2018-11-26T16:30:10Z,Could squash everything except the changes in test/functional?,https://github.com/bitcoin/bitcoin/pull/14794#issuecomment-441704326,441704326,
practicalswift,2018-11-26T16:48:30Z,@MarcoFalke Done! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/14794#issuecomment-441711217,441711217,
practicalswift,2018-11-26T21:07:53Z,@MarcoFalke Added comments as suggested. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/14794#issuecomment-441798252,441798252,
MarcoFalke,2018-11-23T19:02:52Z,Could this be combined with the bionic sanitizer build below instead (assuming that the functional tests pass)?,https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236007733,236007733,.travis.yml
MarcoFalke,2018-11-25T22:50:51Z,I think the test fails unrelated to the sanitizer?,https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236094412,236094412,test/functional/p2p_invalid_messages.py
MarcoFalke,2018-11-25T22:52:10Z,Could only suppress these for the gui and wallet?,https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236094472,236094472,.travis/test_04_install.sh
practicalswift,2018-11-25T22:55:51Z,I'm not so sure about that: could it be that this failure is intermittent without ASan and consistent with ASan? :-) It appears to be consistently triggered under ASan for me.,https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236094656,236094656,test/functional/p2p_invalid_messages.py
MarcoFalke,2018-11-26T17:00:43Z,"Could add a commit with some documentation about those (see my tsan file in this folder for example):\n\n* `addCoin` is some bench test that doesn't primarily care about leaks.\n* The lib* ones are likely upstream false-positives\n* ...",https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236340728,236340728,test/sanitizer_suppressions/lsan
MarcoFalke,2018-11-26T21:22:14Z,"Should suppress the specific benchmark where this is happening, not the gcc internal",https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236431645,236431645,test/sanitizer_suppressions/lsan
practicalswift,2018-11-26T21:53:20Z,"This is the output I'm getting:\n\n```\n$ ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-6.0/bin/llvm-symbolizer ASAN_OPTIONS="""" LSAN_OPTIONS=""suppressions=$(pwd)/test/sanitizer_suppressions/lsan"" src/bench/bench_bitcoin -evals=1 -scaling=0\n# Benchmark, evals, iterations, total, min, max, median\nâ€¦\n\n=================================================================\n==890==ERROR: LeakSanitizer: dete",https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236441617,236441617,test/sanitizer_suppressions/lsan
practicalswift,2018-11-26T22:02:06Z,I've now adjusted the suppressions file. Now using `leak:__gnu_cxx::new_allocator<CTxOut>::allocate` which is a bit more specific. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236444423,236444423,test/sanitizer_suppressions/lsan
MarcoFalke,2018-11-26T22:09:30Z,Would `leak:src/bench` work?,https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236446748,236446748,test/sanitizer_suppressions/lsan
practicalswift,2018-11-26T22:32:14Z,Updated. Please re-review! :-),https://github.com/bitcoin/bitcoin/pull/14794#discussion_r236453845,236453845,test/sanitizer_suppressions/lsan
