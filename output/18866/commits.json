[
  {
    "sha": "fae153b40968bfd974a4709bcd841a59447abf18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWUxNTNiNDA5NjhiZmQ5NzRhNDcwOWJjZDg0MWE1OTQ0N2FiZjE4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-04T12:48:10Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-04T12:56:30Z"
      },
      "message": "test: Fix verack race to avoid intermittent test failures",
      "tree": {
        "sha": "d32c81f30f12ea8a206e834f92f6b2eebc1012a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d32c81f30f12ea8a206e834f92f6b2eebc1012a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae153b40968bfd974a4709bcd841a59447abf18",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi19wwAiTMoUyEWDcp6gv6q2MBemERLPti71CqXwIeKp5B0c8YzJeTY3YkwV/K/\nqHz2aItIqigQ+9ac10nK43WTJNzV4jOj74xJ/4Uy3qQ4uo3aoV1idPHzTSH8oxGy\ny/oZNurbgiO9Aqw1IbF0iooklNI8KH9WIAOauPJO5Zv0yoZaPByge181Qqpws0gJ\n1LfQaLYucFMUYKCWqHO5BNT0PtIRmlYVd4CeGnltRxIW7M8lXRHCqwl5GSjMLIql\n8EKoz9ZEjtZd18N5VFFE8G3rzBzphPnxKtAqVV3q6u7ptO85RJ68GPPr7gls/7JM\nUqZd58fa3ts/8J0GS7XA/GUeSoRDq9KdMp33CLGRmJq2h8kOKDZBdZGOuzmqR6XI\nnI2dXWbjybHBLlv6GlgV21qUn5gKbfEVWgmXWOOvPiPTYhgQaJWnIRaImNwGlun8\nzGh4SpLJtoXCa8gx0Dty1f6qf+Gc8eGrFALjJEjKkuye/lKClL689S0HC77WqQLb\nB+gJynh8\n=sHsA\n-----END PGP SIGNATURE-----",
        "payload": "tree d32c81f30f12ea8a206e834f92f6b2eebc1012a4\nparent ae32e5ce3d268881cbf631de1903b2a414bb64e1\nauthor MarcoFalke <falke.marco@gmail.com> 1588596490 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1588596990 -0400\n\ntest: Fix verack race to avoid intermittent test failures\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae153b40968bfd974a4709bcd841a59447abf18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae153b40968bfd974a4709bcd841a59447abf18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae153b40968bfd974a4709bcd841a59447abf18/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae32e5ce3d268881cbf631de1903b2a414bb64e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae32e5ce3d268881cbf631de1903b2a414bb64e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae32e5ce3d268881cbf631de1903b2a414bb64e1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "dc26d5b4336ac9bb00709af2c2440d594bbed1e8",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae153b40968bfd974a4709bcd841a59447abf18/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae153b40968bfd974a4709bcd841a59447abf18/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fae153b40968bfd974a4709bcd841a59447abf18",
        "patch": "@@ -391,7 +391,11 @@ def connect_nodes(from_connection, node_num):\n     from_connection.addnode(ip_port, \"onetry\")\n     # poll until version handshake complete to avoid race conditions\n     # with transaction relaying\n-    wait_until(lambda:  all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n+    # See comments in net_processing:\n+    # * Must have a version message before anything else\n+    # * Must have a verack message before anything else\n+    wait_until(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n+    wait_until(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))\n \n \n def sync_blocks(rpc_connections, *, wait=1, timeout=60):"
      }
    ]
  }
]