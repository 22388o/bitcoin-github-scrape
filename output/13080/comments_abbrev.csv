practicalswift,2018-04-26T12:50:48Z,@MarcoFalke Updated! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13080#issuecomment-384629519,384629519,
MarcoFalke,2018-04-26T13:06:08Z,utACK 03774eff0e6f5242f02125cecb4d61fa74c00300,https://github.com/bitcoin/bitcoin/pull/13080#issuecomment-384634077,384634077,
practicalswift,2018-04-28T09:10:37Z,@TheBlueMatt Thanks! Updated. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13080#issuecomment-385155796,385155796,
MarcoFalke,2018-04-28T13:13:40Z,re-utACK aa8341e3ae934587149dd609b542b21f9cf6017f (Only change was to get rid of unrelated change),https://github.com/bitcoin/bitcoin/pull/13080#issuecomment-385175101,385175101,
TheBlueMatt,2018-05-02T18:29:29Z,Missing CheckSequenceLocks.,https://github.com/bitcoin/bitcoin/pull/13080#issuecomment-386075874,386075874,
practicalswift,2018-05-02T18:41:48Z,"@TheBlueMatt Given that @MarcoFalke has utACK:ed aa8341e and in light of https://github.com/bitcoin/bitcoin/pull/13081#discussion_r18504621, what about adding `CheckSequenceLocks(…)` (and `GetConflicts(…)` from #13081) in a follow-up PR post merge where I re-check all the `AssertLockHeld(…)`:s manually? That's OK? :-)\n\nBoth `CheckSequenceLocks` and `GetConflicts` will require moving stuff arou",https://github.com/bitcoin/bitcoin/pull/13080#issuecomment-386079603,386079603,
MarcoFalke,2018-05-05T14:32:03Z,re-utACK cbba1d2da42a9c813c50ea3b3c13ec9a518bc147,https://github.com/bitcoin/bitcoin/pull/13080#issuecomment-386809706,386809706,
MarcoFalke,2018-04-26T02:14:49Z,All the locks are taken. I don't see why this is necessary.,https://github.com/bitcoin/bitcoin/pull/13080#discussion_r184254503,184254503,src/rpc/blockchain.cpp
practicalswift,2018-04-26T03:45:26Z,@MarcoFalke `invalidateblock(…)` calls `InvalidateBlock(…)` without first locking `::mempool.cs`. Calling `InvalidateBlock(…)` requires holding mutex `mempool.cs` exclusively. Then it follows that calling `invalidateblock(…)` should require `::mempool.cs` too which is what the annotation says? What am I missing? :-),https://github.com/bitcoin/bitcoin/pull/13080#discussion_r184263934,184263934,src/rpc/blockchain.cpp
MarcoFalke,2018-04-26T11:14:45Z,"> Calling InvalidateBlock(…) requires holding mutex mempool.cs\n\nYeah, I looked and it seems all the locks are taken here, which one did I miss?",https://github.com/bitcoin/bitcoin/pull/13080#discussion_r184352636,184352636,src/rpc/blockchain.cpp
practicalswift,2018-04-26T12:50:34Z,"Ah, sorry. The `InvalidateBlock(…)` annotation seems incorrect. Thanks!",https://github.com/bitcoin/bitcoin/pull/13080#discussion_r184376104,184376104,src/rpc/blockchain.cpp
TheBlueMatt,2018-04-28T00:06:05Z,How'd this slip in here? I'm kinda surprised it even linked with this.,https://github.com/bitcoin/bitcoin/pull/13080#discussion_r184830674,184830674,src/rpc/blockchain.cpp
