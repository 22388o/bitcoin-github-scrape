[
  {
    "sha": "cbba1d2da42a9c813c50ea3b3c13ec9a518bc147",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmJhMWQyZGE0MmE5YzgxM2M1MGVhM2IzYzEzZWM5YTUxOGJjMTQ3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-04-25T20:57:18Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-05-05T06:11:05Z"
      },
      "message": "Add compile time checking for all ::mempool.cs runtime locking assertions",
      "tree": {
        "sha": "37a7f16a114cde0d2fc65dafa5afa72deafb957e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37a7f16a114cde0d2fc65dafa5afa72deafb957e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f82e1c94821212cc8962775a7a29599ebd92eee0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f82e1c94821212cc8962775a7a29599ebd92eee0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f82e1c94821212cc8962775a7a29599ebd92eee0"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c0a25f75b58faa80c0f98aeacc2cf1d7bc5459c9",
        "filename": "src/policy/rbf.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=cbba1d2da42a9c813c50ea3b3c13ec9a518bc147",
        "patch": "@@ -23,6 +23,6 @@ bool SignalsOptInRBF(const CTransaction &tx);\n // according to BIP 125\n // This involves checking sequence numbers of the transaction, as well\n // as the sequence numbers of all in-mempool ancestors.\n-RBFTransactionState IsRBFOptIn(const CTransaction &tx, CTxMemPool &pool);\n+RBFTransactionState IsRBFOptIn(const CTransaction &tx, CTxMemPool &pool) EXCLUSIVE_LOCKS_REQUIRED(pool.cs);\n \n #endif // BITCOIN_POLICY_RBF_H"
      },
      {
        "sha": "a2d8ce1557217d1d348dc67deb232141f8832fab",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=cbba1d2da42a9c813c50ea3b3c13ec9a518bc147",
        "patch": "@@ -383,7 +383,7 @@ static std::string EntryDescriptionString()\n            \"       ... ]\\n\";\n }\n \n-static void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n+static void entryToJSON(UniValue &info, const CTxMemPoolEntry &e) EXCLUSIVE_LOCKS_REQUIRED(::mempool.cs)\n {\n     AssertLockHeld(mempool.cs);\n "
      },
      {
        "sha": "3f9fb4850c45f24e67973054b04375b9a088590d",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbba1d2da42a9c813c50ea3b3c13ec9a518bc147/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=cbba1d2da42a9c813c50ea3b3c13ec9a518bc147",
        "patch": "@@ -451,7 +451,7 @@ class CTxMemPool\n     mutable bool blockSinceLastRollingFeeBump;\n     mutable double rollingMinimumFeeRate; //!< minimum fee to get into the pool, decreases exponentially\n \n-    void trackPackageRemoved(const CFeeRate& rate);\n+    void trackPackageRemoved(const CFeeRate& rate) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n public:\n \n@@ -512,7 +512,7 @@ class CTxMemPool\n     void UpdateParent(txiter entry, txiter parent, bool add);\n     void UpdateChild(txiter entry, txiter child, bool add);\n \n-    std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const;\n+    std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n public:\n     indirectmap<COutPoint, const CTransaction*> mapNextTx;\n@@ -572,7 +572,7 @@ class CTxMemPool\n      *  Set updateDescendants to true when removing a tx that was in a block, so\n      *  that any in-mempool descendants have their ancestor state updated.\n      */\n-    void RemoveStaged(setEntries &stage, bool updateDescendants, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN);\n+    void RemoveStaged(setEntries &stage, bool updateDescendants, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** When adding transactions from a disconnected block back to the mempool,\n      *  new mempool entries may have children in the mempool (which is generally"
      }
    ]
  }
]