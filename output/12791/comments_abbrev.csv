practicalswift,2018-03-26T15:38:20Z,"Concept ACK\n\nNice find!",https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376210697,376210697,
jamesob,2018-03-26T16:01:30Z,utACK https://github.com/bitcoin/bitcoin/pull/12791/commits/4fef4096cb1ad62d4b2a9c4cf821cff0406d3757,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376218763,376218763,
MarcoFalke,2018-03-26T16:11:24Z,"utACK 4fef4096cb1ad62d4b2a9c4cf821cff0406d3757. Can't hurt to include, I guess.",https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376221910,376221910,
laanwj,2018-03-26T16:14:31Z,Strange that this wasn't included yet. Does anyone know the reason? utACK.,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376222914,376222914,
promag,2018-03-26T17:15:21Z,utACK 4fef409.,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376242390,376242390,
TheBlueMatt,2018-03-26T17:20:22Z,I assume because its somewhat redundant with vsize? I just ran into it trying to get ground-truth data for some unit tests in weight calculation and realized you cant get at it.,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376243921,376243921,
sipa,2018-03-26T17:33:19Z,"Yeah, I think the idea was to treat weight as an internal accounting only, and vsize as what users would be exposed to.\n\nutACK 4fef4096cb1ad62d4b2a9c4cf821cff0406d3757",https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376247932,376247932,
jnewbery,2018-03-26T21:10:18Z,"> Strange that this wasn't included yet. Does anyone know the reason? utACK.\n\nThe original BIP text did not include the definition for transaction weight or vsize since they're not consensus rules. They were added here: https://github.com/bitcoin/bips/commit/c2213ed1fdabc671c8b3c46b3f7dcfedacf7dafb#diff-c0db26883ccab057aaa394db5e50e4b1 . Transaction vsize was only added consistently to rpc out",https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376312799,376312799,
jnewbery,2018-03-27T13:23:42Z,"Tested ACK 4fef4096cb1ad62d4b2a9c4cf821cff0406d3757.\n\np2p_segwit.py test could be updated, otherwise new code path from getrawtransaction isn't tested.",https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376523127,376523127,
promag,2018-03-27T13:41:14Z,"This also affects `/rest/tx/:txid.json` and `/rest/block/:block.json` REST calls and also `getblock verbosity=true`, `listsinceblock` and `listtransactions` RPC calls. I don't see tests comparing REST calls with RPC calls but maybe we could do that in new PR.\n\nNeeds update to release notes since a new field is added.",https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376529117,376529117,
TheBlueMatt,2018-03-27T21:24:14Z,"Added release notes, and p2p_segwit update.",https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-376680489,376680489,
laanwj,2018-04-07T17:04:54Z,"Needs rebase (oh, release note only) and reply to @jnewbery's comment",https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-379484289,379484289,
TheBlueMatt,2018-04-13T19:18:48Z,Fixed @jnewbery's bug and rebased.,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-381236523,381236523,
laanwj,2018-04-13T20:07:23Z,re-utACK 9e50c337c7126e05dad2f2f5a53ef882ab0b0330,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-381247516,381247516,
jonasschnelli,2018-04-17T18:04:40Z,utACK 9e50c337c7126e05dad2f2f5a53ef882ab0b0330,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-382087545,382087545,
preminem,2018-08-27T09:51:32Z,Now still can't get weight through rpc.  Anyone know the reason?,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-416175723,416175723,
luke-jr,2018-08-27T09:53:43Z,In 0.17?,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-416176288,416176288,
preminem,2018-08-27T10:13:46Z,it is 0.16.1 ,https://github.com/bitcoin/bitcoin/pull/12791#issuecomment-416180990,416180990,
jnewbery,2018-03-27T21:29:53Z,"I think this can stay as it was (if you add a `vsize` variable above).\n\nassert is a statement, not a function, so if you're going to touch this line, then can you change to:\n\n```\nassert weight / 4 != raw_tx[""size""]\n```",https://github.com/bitcoin/bitcoin/pull/12791#discussion_r177578641,177578641,test/functional/p2p_segwit.py
promag,2018-03-27T21:41:53Z,"nit, sort.",https://github.com/bitcoin/bitcoin/pull/12791#discussion_r177581512,177581512,test/functional/p2p_segwit.py
promag,2018-03-27T21:43:44Z,"Nit, endpoints and comments could be inside back ticks.",https://github.com/bitcoin/bitcoin/pull/12791#discussion_r177581942,177581942,doc/release-notes.md
jnewbery,2018-03-29T18:47:58Z,"I think this is wrong. From BIP 141: *Virtual transaction size is defined as Transaction weight / 4 (rounded up to the next integer)*. So weight is between `vsize*4 - 3` and `vsize*4`. Same for help text below.\n\nIt may be better to switch the order and then change the help text for vsize to be `weight / 4 (rounded up to the next integer)*`",https://github.com/bitcoin/bitcoin/pull/12791#discussion_r178149075,178149075,src/rpc/rawtransaction.cpp
jnewbery,2018-04-17T18:29:40Z,"Would be clearer with a bit of spacing around the `-` operator (as you've done for the help text in decoderawtransaction)\n\nWould also be clearer to return weight first and then define vsize based on weight (since vsize is derived from weight and not vice versa)",https://github.com/bitcoin/bitcoin/pull/12791#discussion_r182182331,182182331,src/rpc/rawtransaction.cpp
