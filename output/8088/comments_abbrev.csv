gmaxwell,2016-05-23T07:37:56Z,"bleh. There really is no reason to do this lazily. It should eagerly generate it at connection time, saving a hashing operation that it's going to perform anyways is not a good trade-off for having an extra heap allocation.  Doubly so when the hash is changed to siphash.\n",https://github.com/bitcoin/bitcoin/pull/8088#issuecomment-220907822,220907822,
pstratem,2016-05-23T12:39:49Z,@gmaxwell i mean ok..\n,https://github.com/bitcoin/bitcoin/pull/8088#issuecomment-220968646,220968646,
sipa,2016-05-24T15:51:23Z,"Concept ACK. I think SHA256 is still overkill, but this is a clear improvement.\n",https://github.com/bitcoin/bitcoin/pull/8088#issuecomment-221316102,221316102,
sipa,2016-05-26T13:04:36Z,Included into #8086.\n,https://github.com/bitcoin/bitcoin/pull/8088#issuecomment-221864629,221864629,
gmaxwell,2016-06-10T19:03:18Z,"This should be closed, was merged via 8086->8173.\n",https://github.com/bitcoin/bitcoin/pull/8088#issuecomment-225268559,225268559,
sipa,2016-05-24T15:40:29Z,"Use a uint256, or even a uint64_t.\n",https://github.com/bitcoin/bitcoin/pull/8088#discussion_r64416882,64416882,src/net.h
gmaxwell,2016-05-24T18:08:25Z,"uint64_t please.   The probability that two distinct net-groups share a 64-bit hash is negligible, and if it ever happens its harmless (and would have no effect at all unless it's a collision with one of the four lowest ones that are in use).\n",https://github.com/bitcoin/bitcoin/pull/8088#discussion_r64444746,64444746,src/net.h
