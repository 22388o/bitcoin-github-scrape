practicalswift,2019-12-20 15:35:06,"Strong concept ACK\n\nAlso welcome from a fuzz testing perspective :)",https://github.com/bitcoin/bitcoin/pull/17781#issuecomment-567965923,567965923,
DrahtBot,2019-12-20 17:56:30,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17693](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17693.html) (rpc: Add generateblock to mine a custom set",https://github.com/bitcoin/bitcoin/pull/17781#issuecomment-568020335,568020335,
jnewbery,2019-12-20 18:01:26,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17781#issuecomment-568021825,568021825,
JeremyRubin,2019-12-20 19:58:06,"Concept ACK, but this will make me sad from a rebasing perspective ;)",https://github.com/bitcoin/bitcoin/pull/17781#issuecomment-568068471,568068471,
promag,2019-12-20 20:16:44,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/17781#issuecomment-568073886,568073886,
MarcoFalke,2019-12-22 23:14:54,Addressed feedback by @promag ,https://github.com/bitcoin/bitcoin/pull/17781#issuecomment-568311219,568311219,
promag,2019-12-22 23:45:34,ACK faa92a2297b4a6aebdd58d1818c428f1c0346078.,https://github.com/bitcoin/bitcoin/pull/17781#issuecomment-568313395,568313395,
fjahr,2020-01-02 15:34:01,"ACK faa92a2297b4a6aebdd58d1818c428f1c0346078\n\nReviewed code, tested locally.",https://github.com/bitcoin/bitcoin/pull/17781#issuecomment-570242881,570242881,
emilengler,2019-12-21 14:43:03,"Maybe I oversaw it but is it really necessary to include this variable into the header?\nAs far as I know it should work just fine if just the pointer is included in the header file.",https://github.com/bitcoin/bitcoin/pull/17781#discussion_r360652385,360652385,src/bench/bench.h
sipa,2019-12-21 14:52:44,"This is not declaring a variable, it's forward declaring the type RegTestingSetup.",https://github.com/bitcoin/bitcoin/pull/17781#discussion_r360652751,360652751,src/bench/bench.h
emilengler,2019-12-21 19:24:46,But is it still required?,https://github.com/bitcoin/bitcoin/pull/17781#discussion_r360664131,360664131,src/bench/bench.h
promag,2019-12-22 21:25:26,"Yes, it's defined in src/test/util/setup_common.h which isn't included at this point.",https://github.com/bitcoin/bitcoin/pull/17781#discussion_r360729647,360729647,src/bench/bench.h
promag,2019-12-22 21:29:00,"nit, `assert(g_testing_setup == nullptr)` before",https://github.com/bitcoin/bitcoin/pull/17781#discussion_r360729818,360729818,src/bench/bench.cpp
jnewbery,2020-01-02 17:26:03,nit: order member initialization list the same as the parameter list (and preferably on one line),https://github.com/bitcoin/bitcoin/pull/17781#discussion_r362557248,362557248,src/miner.cpp
jnewbery,2020-01-02 17:30:12,"nit: place this either at the start of the function (so it exits early if there is no mempool), or immediately before the call to `generateBlocks()`. Placing it between the code that creates `coinbase_script` and the coinbase_script CHECK seems random.\n\nSame comment for `generatetoaddress()`",https://github.com/bitcoin/bitcoin/pull/17781#discussion_r362558549,362558549,src/rpc/mining.cpp
MarcoFalke,2020-01-02 22:48:03,I prefer multiple lines,https://github.com/bitcoin/bitcoin/pull/17781#discussion_r362658941,362658941,src/miner.cpp
MarcoFalke,2020-01-02 22:50:10,Might do in a follow-up to not invalidate the three reviews,https://github.com/bitcoin/bitcoin/pull/17781#discussion_r362659407,362659407,src/rpc/mining.cpp
