DrahtBot,2020-04-24 12:40:24,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18736 (test: Add fuzzing harnesses for various classes/functions in util/ by practicalswift)\n\nIf you consider this pull",https://github.com/bitcoin/bitcoin/pull/18744#issuecomment-618984603,618984603,
MarcoFalke,2020-04-23 11:50:37,This code will never be executed when the buffer does not start with a valid transaction,https://github.com/bitcoin/bitcoin/pull/18744#discussion_r413748944,413748944,src/test/fuzz/transaction.cpp
practicalswift,2020-04-24 09:29:39,"Oh, good catch! Thanks a lot for noticing! I missed the `return`:s above (L37/42/45/61). Now fixed. Please re-review updated version :)",https://github.com/bitcoin/bitcoin/pull/18744#discussion_r414432830,414432830,src/test/fuzz/transaction.cpp
MarcoFalke,2020-04-24 11:32:39,It still seems odd. How do you know that the fuzzer won't favor inputs that start with a valid transaction and is more likely to discard inputs that do not?,https://github.com/bitcoin/bitcoin/pull/18744#discussion_r414505047,414505047,src/test/fuzz/transaction.cpp
practicalswift,2020-04-24 12:17:08,"I see your point: yes, it could confuse fuzzers. To rule out that possibility I've now moved this to a new fuzzing harness file :)",https://github.com/bitcoin/bitcoin/pull/18744#discussion_r414530490,414530490,src/test/fuzz/transaction.cpp
