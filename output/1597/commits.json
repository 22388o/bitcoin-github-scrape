[
  {
    "sha": "aac4cfa93d4dae1941ac71233d824da00552069d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWM0Y2ZhOTNkNGRhZTE5NDFhYzcxMjMzZDgyNGRhMDA1NTIwNjlk",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@monetize.io",
        "date": "2012-07-11T03:38:08Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@monetize.io",
        "date": "2012-07-16T00:20:09Z"
      },
      "message": "A set of scripts built on top of gitian and vagrant (http://vagrantup.com) for automating gitian builds on any platform using Oracle VirtualBox. A minimum number of host dependencies are required. See \u201ccontrib/vagrant/README.md\u201d for details.",
      "tree": {
        "sha": "d13631b5c921954ff2c785931ee16dfa80ed225d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d13631b5c921954ff2c785931ee16dfa80ed225d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aac4cfa93d4dae1941ac71233d824da00552069d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aac4cfa93d4dae1941ac71233d824da00552069d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aac4cfa93d4dae1941ac71233d824da00552069d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aac4cfa93d4dae1941ac71233d824da00552069d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1c009d622ded6dd254d6be5161b4df875d492d12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c009d622ded6dd254d6be5161b4df875d492d12",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c009d622ded6dd254d6be5161b4df875d492d12"
      }
    ],
    "stats": {
      "total": 1079,
      "additions": 1079,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b488040365184fa59d4d18f130564e0d9c4597e5",
        "filename": "contrib/vagrant/.gitignore",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/.gitignore?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,5 @@\n+cache/*\n+output/*\n+.stamp-*\n+.*.manifest\n+.vagrant"
      },
      {
        "sha": "8968f01103e4cd8dcf15e15af0bf39e69a5fed04",
        "filename": "contrib/vagrant/Makefile",
        "status": "added",
        "additions": 558,
        "deletions": 0,
        "changes": 558,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/Makefile?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,558 @@\n+# === Makefile ------------------------------------------------------------===\n+# Copyright \u00a9 2011-2012 Bitcoin Developers.\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy\n+# of this software and associated documentation files (the \"Software\"), to deal\n+# in the Software without restriction, including without limitation the rights\n+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+# copies of the Software, and to permit persons to whom the Software is\n+# furnished to do so, subject to the following conditions:\n+#\n+# The above copyright notice and this permission notice shall be included in\n+# all copies or substantial portions of the Software.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+# THE SOFTWARE.\n+# ===----------------------------------------------------------------------===\n+\n+MAKEFILE := $(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST))\n+\n+SHELL    := $(shell bash --help >/dev/null 2>&1 && echo ba)sh\n+\n+GREP     := $(shell egrep --help >/dev/null 2>&1 && echo e)grep\n+PATCH    := $(shell gpatch --help >/dev/null 2>&1 && echo g)patch\n+SED      := $(shell gsed --help >/dev/null 2>&1 && echo g)sed\n+WGET     := wget --no-check-certificate \\\n+                 --user-agent=$(shell wget --version | \\\n+                 $(SED) -n 's,GNU \\(Wget\\) \\([0-9.]*\\).*,\\1/\\2,p')\n+\n+REQUIREMENTS := $(SHELL) bzip2 cut diff $(GREP) gzip $(MAKE) openssl $(PATCH) \\\n+                ruby $(SED) sort tar vagrant wget xargs xz\n+\n+BUILD_MANIFEST = cd '$(shell dirname '$(MAKEFILE)')'/../.. && \\\n+\tfind $(1) -print0 | \\\n+\txargs -0 -n1 openssl sha256 2>/dev/null | \\\n+\topenssl sha256 | \\\n+\t$(SED) -n 's,^.*\\([0-9a-f]\\{64\\}\\),\\1,p'\n+\n+VALIDATE_MANIFEST = \\\n+\tif [ -f \"$(1)\" ] && echo \"$(2)\" | diff \"$(1)\" - 2>&1 >/dev/null; then \\\n+\t    rm -f \"$(1)\"; \\\n+\tfi\n+\n+# ===----------------------------------------------------------------------===\n+\n+PKGS            :=\n+CACHE_DIR       := cache\n+HOST_CACHE_DIR  := $(CACHE_DIR)\n+GUEST_CACHE_DIR := /vagrant/$(CACHE_DIR)\n+\n+SOURCEFORGE_MIRROR := kent.dl.sourceforge.net\n+\n+PKG             := boost\n+$(PKG)_VERSION  := 1.47.0\n+$(PKG)_CHECKSUM := 815a5d9faac4dbd523fbcf3fe1065e443c0bbf43427c44aa423422c6ec4c2e31\n+$(PKG)_SUBDIR   := boost_$(subst .,_,$($(PKG)_VERSION))\n+$(PKG)_FILE     := boost_$(subst .,_,$($(PKG)_VERSION)).tar.bz2\n+$(PKG)_URL      := http://$(SOURCEFORGE_MIRROR)/project/boost/boost/$($(PKG)_VERSION)/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+PKG             := boost-win32\n+$(PKG)_VERSION  := 1.49.0\n+$(PKG)_CHECKSUM := dd748a7f5507a7e7af74f452e1c52a64e651ed1f7263fce438a06641d2180d3c\n+$(PKG)_SUBDIR   := boost_$(subst .,_,$($(PKG)_VERSION))\n+$(PKG)_FILE     := boost_$(subst .,_,$($(PKG)_VERSION)).tar.bz2\n+$(PKG)_URL      := http://$(SOURCEFORGE_MIRROR)/project/boost/boost/$($(PKG)_VERSION)/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+PKG             := db\n+$(PKG)_VERSION  := 4.8.30\n+$(PKG)_CHECKSUM := 12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef\n+$(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION).NC\n+$(PKG)_FILE     := $(PKG)-$($(PKG)_VERSION).NC.tar.gz\n+$(PKG)_URL      := http://download.oracle.com/berkeley-db/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+PKG             := libpng\n+$(PKG)_VERSION  := 1.5.9\n+$(PKG)_CHECKSUM := b75dae26151f9b031062c8d2f577a094b08da0ae44fe8c11175d0b9ff434cc02\n+$(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION)\n+$(PKG)_FILE     := $(PKG)-$($(PKG)_VERSION).tar.gz\n+$(PKG)_URL      := ftp://ftp.simplesystems.org/pub/$(PKG)/png/src/$($(PKG)_FILE)\n+$(PKG)_URL_2    := http://image_magick.veidrodis.com/image_magick/delegates/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+PKG             := miniupnpc\n+$(PKG)_VERSION  := 1.6\n+$(PKG)_CHECKSUM := bbd6b756e6af44b5a5b0f9b93eada3fb8922ed1d6451b7d6f184d0ae0c813994\n+$(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION)\n+$(PKG)_FILE     := $(PKG)-$($(PKG)_VERSION).tar.gz\n+$(PKG)_URL      := http://miniupnp.free.fr/files/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+PKG             := openssl\n+$(PKG)_VERSION  := 1.0.1b\n+$(PKG)_CHECKSUM := 1187bf2d5cdf0b286b951bf5c777aa97855cd7db24fdb9604cb557c8b1d7364b\n+$(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION)\n+$(PKG)_FILE     := $(PKG)-$($(PKG)_VERSION).tar.gz\n+$(PKG)_URL      := http://www.openssl.org/source/$($(PKG)_FILE)\n+$(PKG)_URL_2    := ftp://ftp.openssl.org/source/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+PKG             := qrencode\n+$(PKG)_VERSION  := 3.2.0\n+$(PKG)_CHECKSUM := 03c4bc7cd9a75747c3815d509bbe061907d615764f2357923f0db948c567068f\n+$(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION)\n+$(PKG)_FILE     := $(PKG)-$($(PKG)_VERSION).tar.bz2\n+$(PKG)_URL      := http://fukuchi.org/works/$(PKG)/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+PKG             := qt\n+$(PKG)_VERSION  := 4.7.4\n+$(PKG)_CHECKSUM := 97195ebce8a46f9929fb971d9ae58326d011c4d54425389e6e936514f540221e\n+$(PKG)_SUBDIR   := $(PKG)-everywhere-opensource-src-$($(PKG)_VERSION)\n+$(PKG)_FILE     := $(PKG)-everywhere-opensource-src-$($(PKG)_VERSION).tar.gz\n+$(PKG)_URL      := http://releases.qt-project.org/qt4/source/$($(PKG)_FILE)\n+$(PKG)_URL_2    := http://get.qt.nokia.com/qt/source/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+PKG             := zlib\n+$(PKG)_VERSION  := 1.2.6\n+$(PKG)_CHECKSUM := 21235e08552e6feba09ea5e8d750805b3391c62fb81c71a235c0044dc7a8a61b\n+$(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION)\n+$(PKG)_FILE     := $(PKG)-$($(PKG)_VERSION).tar.gz\n+$(PKG)_URL      := http://zlib.net/$($(PKG)_FILE)\n+$(PKG)_URL_2    := http://$(SOURCEFORGE_MIRROR)/project/libpng/$(PKG)/$($(PKG)_VERSION)/$($(PKG)_FILE)\n+PKGS            += $(PKG)\n+\n+# ===----------------------------------------------------------------------===\n+\n+VAGRANT_UP = \\\n+\tvagrant up\n+\n+VAGRANT_HALT = \\\n+\tvagrant halt\n+\n+VAGRANT_RELOAD = \\\n+\tvagrant reload\n+\n+VAGRANT_DESTROY = \\\n+\tvagrant destroy --force\n+\n+# ===----------------------------------------------------------------------===\n+\n+.PHONY: all\n+all: bitcoin-linux bitcoin-win32\n+\n+.PHONY: mostlyclean\n+mostlyclean:\n+\n+.PHONY: clean\n+clean: mostlyclean\n+\t-rm -rf output\n+\t-rm -f .stamp-*\n+\t-$(call VAGRANT_DESTROY)\n+\n+.PHONY: distclean\n+distclean: clean\n+\t-rm -rf cache\n+\n+.PHONY: maintainer-clean\n+maintainer-clean: distclean\n+\t@echo 'This command is intended for maintainers to use; it'\n+\t@echo 'deletes files that may need special tools to rebuild.'\n+\n+.PHONY: dist\n+dist: all\n+\n+# ===----------------------------------------------------------------------===\n+\n+.PHONY: check-requirements\n+define CHECK_REQUIREMENT\n+\t@if ! $(1) --help &>/dev/null; then \\\n+\t    if ! which $(1) &>/dev/null; then \\\n+\t        echo; \\\n+\t        echo 'Missing requirement: $(1)'; \\\n+\t        echo; \\\n+\t        echo 'Please have a look at \"README\" to ensure'; \\\n+\t        echo 'that your system meets all requirements.'; \\\n+\t        echo; \\\n+\t        exit 1; \\\n+\t    fi; \\\n+\tfi\n+\n+endef\n+define CHECK_REQUIREMENT_VERSION\n+\t@if ! $(1) --version | head -1 | grep ' \\($(2)\\)$$' >/dev/null; then \\\n+\t    echo; \\\n+\t    echo 'Wrong version of requirement: $(1)'; \\\n+\t    echo; \\\n+\t    echo 'Please have a look at \"README\" to ensure'; \\\n+\t    echo 'that your system meets all requirements.'; \\\n+\t    echo; \\\n+\t    exit 1; \\\n+\tfi\n+\n+endef\n+check-requirements: .stamp-check-requirements.h\n+.stamp-check-requirements.h: $(MAKEFILE)\n+\t@echo '[check requirements]'\n+\t$(foreach REQUIREMENT,$(REQUIREMENTS),$(call CHECK_REQUIREMENT,$(REQUIREMENT)))\n+\t$(call CHECK_REQUIREMENT_VERSION,vagrant,1\\.[0-9]\\.[0-9])\n+\t@touch \"$@\"\n+\n+# ===----------------------------------------------------------------------===\n+\n+.PHONY: download\n+download: $(addprefix download-,$(PKGS))\n+\n+PKG_CHECKSUM = \\\n+\topenssl sha256 '$(HOST_CACHE_DIR)/$($(1)_FILE)' 2>/dev/null | $(SED) -n 's,^.*\\([0-9a-f]\\{64\\}\\)$$,\\1,p'\n+\n+CHECK_PKG_ARCHIVE = \\\n+\t[ x'$($(1)_CHECKSUM)' == x\"`$$(call PKG_CHECKSUM,$(1))`\" ]\n+\n+DOWNLOAD_PKG_ARCHIVE = \\\n+\tmkdir -p '$(HOST_CACHE_DIR)' && \\\n+\t$(if $($(1)_URL_2), \\\n+\t    ( $(WGET) -T 30 -t 3 -O- '$($(1)_URL)' || $(WGET) -O- '$($(1)_URL_2)' ), \\\n+\t    $(WGET) -O- '$($(1)_URL)') \\\n+\t$(if $($(1)_FIX_GZIP), \\\n+\t    | gzip -d | gzip -9n, \\\n+\t    ) \\\n+\t> '$(HOST_CACHE_DIR)/$($(1)_FILE)'\n+\n+define PKG_RULE\n+.PHONY: download-$(1)\n+download-$(1): $(HOST_CACHE_DIR)/$($(1)_FILE)\n+$(HOST_CACHE_DIR)/$($(1)_FILE): .stamp-check-requirements.h\n+\t@echo -n \"Checking cached package $(1)-$($(1)_VERSION)... \"; \\\n+\tif ! $(call CHECK_PKG_ARCHIVE,$(1)); then \\\n+\t\techo \"failed\"; \\\n+\t     $(call DOWNLOAD_PKG_ARCHIVE,$(1)); \\\n+\t     $(call CHECK_PKG_ARCHIVE,$(1)) \\\n+\t        || { echo 'Wrong checksum!'; exit 1; }; \\\n+\telse \\\n+\t\techo \"ok\"; \\\n+\tfi\n+\n+endef\n+$(foreach PKG,$(PKGS),$(eval $(call PKG_RULE,$(PKG))))\n+\n+# ===----------------------------------------------------------------------===\n+\n+HOST_VM_FILES    := contrib/vagrant/Makefile \\\n+                    contrib/vagrant/Vagrantfile \\\n+                    contrib/vagrant/patch/host-vm-etc-network-interfaces-100-add_lxc_br0.patch \\\n+                    contrib/vagrant/patch/host-vm-etc-sysctl.conf-100-enable_ipv4_forward.patch\n+HOST_VM_FILES    := $(sort $(HOST_VM_FILES))\n+HOST_VM_MANIFEST := $(shell $(call BUILD_MANIFEST,$(HOST_VM_FILES)))\n+\n+_ := $(shell $(call \\\n+\tVALIDATE_MANIFEST, \\\n+\t.stamp-host-vm.manifest, \\\n+\t$(HOST_VM_MANIFEST) \\\n+))\n+\n+.PHONY: host-vm\n+host-vm: .stamp-host-vm.manifest\n+.stamp-host-vm.manifest: \\\n+\t.stamp-check-requirements.h \\\n+\t$(foreach FILE,$(HOST_VM_FILES),$(shell echo $(FILE) | $(SED) 's:^contrib/vagrant/::g'))\n+\t\n+\t-$(call VAGRANT_DESTROY)\n+\t\n+\t$(call VAGRANT_UP)\n+\t\n+\tvagrant ssh --command \"sudo apt-get update\"\n+\tvagrant ssh --command \"sudo apt-get upgrade -y\"\n+\t$(call VAGRANT_RELOAD)\n+\t\n+\tvagrant ssh --command \"sudo apt-get install -y \\\n+\t    debootstrap git lxc python-vm-builder ruby patch zip\"\n+\t\n+\tvagrant ssh --command \"sudo apt-get install -y bridge-utils\"\n+\tvagrant ssh --command \"sudo brctl addbr br0\"\n+\tvagrant ssh --command \"sudo $(SHELL) -c 'cd /etc/network && \\\n+\t    patch -p1 < /vagrant/patch/host-vm-etc-network-interfaces-100-add_lxc_br0.patch'\"\n+\tvagrant ssh --command \"sudo $(SHELL) -c 'cd /etc && \\\n+\t    patch -p1 < /vagrant/patch/host-vm-etc-sysctl.conf-100-enable_ipv4_forward.patch'\"\n+\t\n+\tvagrant ssh --command \"sudo apt-get install -y apt-cacher-ng\"\n+\t\n+\t-$(call VAGRANT_HALT)\n+\t\n+\techo $(HOST_VM_MANIFEST) > \"$@\"\n+\n+# ===----------------------------------------------------------------------===\n+\n+GITIAN_VM_FILES    := contrib/vagrant/Makefile \\\n+                      contrib/vagrant/patch/gitian-builder-69bd6a53-100-change_ip.patch \\\n+                      contrib/vagrant/patch/gitian-builder-69bd6a53-200-removepkg_cron.patch \\\n+                      contrib/vagrant/patch/gitian-builder-69bd6a53-300-external_mirrors.patch \\\n+                      contrib/vagrant/patch/gitian-builder-69bd6a53-400-ssh_key.patch\n+GITIAN_VM_FILES    := $(sort $(GITIAN_VM_FILES))\n+GITIAN_VM_MANIFEST := $(shell $(call BUILD_MANIFEST,$(GITIAN_VM_FILES)))\n+\n+_ := $(shell $(call \\\n+\tVALIDATE_MANIFEST, \\\n+\t.stamp-gitian-guest-vm.manifest, \\\n+\t$(GITIAN_VM_MANIFEST) \\\n+))\n+\n+.PHONY: gitian-guest-vm\n+gitian-guest-vm: .stamp-gitian-guest-vm.manifest\n+.stamp-gitian-guest-vm.manifest: \\\n+\t.stamp-host-vm.manifest \\\n+\t$(foreach FILE,$(GITIAN_VM_FILES),$(shell echo $(FILE) | $(SED) 's:^contrib/vagrant/::g'))\n+\t\n+\t$(call VAGRANT_UP)\n+\t\n+\tvagrant ssh --command \"\\\n+\t    if [ -d ~/gitian-builder ]; then \\\n+\t        rm -rf ~/gitian-builder; \\\n+\t    fi\"\n+\tvagrant ssh --command \"\\\n+\t    git clone 'https://github.com/devrandom/gitian-builder' ~/gitian-builder\"\n+\tvagrant ssh --command \"cd ~/gitian-builder && \\\n+\t    git checkout 69bd6a53\"\n+\tvagrant ssh --command \"cd ~/gitian-builder && \\\n+\t    patch -p1 < /vagrant/patch/gitian-builder-69bd6a53-100-change_ip.patch\"\n+\tvagrant ssh --command \"cd ~/gitian-builder && \\\n+\t    patch -p1 < /vagrant/patch/gitian-builder-69bd6a53-200-removepkg_cron.patch\"\n+\tvagrant ssh --command \"cd ~/gitian-builder && \\\n+\t    patch -p1 < /vagrant/patch/gitian-builder-69bd6a53-300-external_mirrors.patch\"\n+\tvagrant ssh --command \"cd ~/gitian-builder && \\\n+\t    patch -p1 < /vagrant/patch/gitian-builder-69bd6a53-400-ssh_key.patch\"\n+\tvagrant ssh --command \"cd ~/gitian-builder && \\\n+\t    ln -s $(GUEST_CACHE_DIR) inputs\"\n+\t\n+\tvagrant ssh --command \"\\\n+\t    cd ~/gitian-builder; \\\n+\t    if [ -e $(GUEST_CACHE_DIR)/gitian-guest-vm/$(GITIAN_VM_MANIFEST) ]; then \\\n+\t        rsync -av $(GUEST_CACHE_DIR)/gitian-guest-vm/$(GITIAN_VM_MANIFEST)/base-* . || exit 1; \\\n+\t    else \\\n+\t        bin/make-base-vm --lxc --suite lucid --arch i386 || exit 1; \\\n+\t        bin/make-base-vm --lxc --suite lucid --arch amd64 || exit 1; \\\n+\t        mkdir -p $(GUEST_CACHE_DIR)/gitian-guest-vm/$(GITIAN_VM_MANIFEST) || exit 1; \\\n+\t        rsync -av base-* $(GUEST_CACHE_DIR)/gitian-guest-vm/$(GITIAN_VM_MANIFEST) || \\\n+\t            rm -rf $(GUEST_CACHE_DIR)/gitian-guest-vm/$(GITIAN_VM_MANIFEST); \\\n+\t        [ -e $(GUEST_CACHE_DIR)/gitian-guest-vm/$(GITIAN_VM_MANIFEST) ] || \\\n+\t            exit 1; \\\n+\t    fi\"\n+\t\n+\t-$(call VAGRANT_HALT)\n+\t\n+\techo $(GITIAN_VM_MANIFEST) > \"$@\"\n+\n+# ===----------------------------------------------------------------------===\n+\n+ifeq ($(shell git log -1 2>&1 >/dev/null && echo true),true)\n+SOURCE_FILES := $(shell \\\n+\tgit ls-tree --name-only --full-tree -r `git log -1 --format=\"%H\"` \\\n+\t    | $(GREP) -v '^contrib/vagrant/' \\\n+\t    | sort)\n+else\n+SOURCE_FILES := $(shell cd ../.. && \\\n+\tfind -L . -type f -print \\\n+\t    | $(SED) 's:^\\./::g' \\\n+\t    | $(GREP) -v '^\\.git/' \\\n+\t    | $(GREP) -v '^contrib/vagrant/' \\\n+\t    | sort)\n+endif\n+\n+SOURCE_MANIFEST := $(shell $(call BUILD_MANIFEST,$(SOURCE_FILES)))\n+\n+_ := $(shell $(call \\\n+\tVALIDATE_MANIFEST, \\\n+\t$(HOST_CACHE_DIR)/src-local.manifest, \\\n+\t$(SOURCE_MANIFEST) \\\n+))\n+\n+.PHONY: bundle-source\n+bundle-source: $(HOST_CACHE_DIR)/src-local.manifest\n+$(HOST_CACHE_DIR)/src-local.manifest: $(HOST_CACHE_DIR)/src-local.tar.xz\n+\techo $(SOURCE_MANIFEST) >'$@'\n+$(HOST_CACHE_DIR)/src-local.tar.xz: \\\n+\t$(foreach FILE,$(SOURCE_FILES),$(shell echo $(FILE) | $(SED) 's:^:../../:g'))\n+\t\n+\tmkdir -p '$(HOST_CACHE_DIR)'\n+\trm -f '$(HOST_CACHE_DIR)'/src-local.{tar,tar.xz}\n+\tCOPYFILE_DISABLE=1 tar -C ../.. -rf '$(HOST_CACHE_DIR)'/src-local.tar $(SOURCE_FILES)\n+\txz '$(HOST_CACHE_DIR)'/src-local.tar\n+\n+# ===----------------------------------------------------------------------===\n+\n+OUTPUT_DIR         := output\n+HOST_OUTPUT_DIR    := $(OUTPUT_DIR)\n+GUEST_OUTPUT_DIR   := /vagrant/$(OUTPUT_DIR)\n+PATCH_DIR          := patch\n+HOST_PATCH_DIR     := $(PATCH_DIR)\n+GUEST_PATCH_DIR    := /vagrant/$(PATCH_DIR)\n+\n+TARGETS            :=\n+\n+TARGET             := bitcoin-deps-win32\n+$(TARGET)_NAME     := bitcoin-deps\n+$(TARGET)_VERSION  := 0.0.4\n+$(TARGET)_OUTPUT   := $($(TARGET)_NAME)-$($(TARGET)_VERSION).zip\n+$(TARGET)_SCRIPT   := contrib/gitian-descriptors/deps-win32.yml\n+$(TARGET)_PATCH    := contrib/vagrant/$(HOST_PATCH_DIR)/bitcoin-contrib-gitian-descriptors-$(TARGET).patch\n+$(TARGET)_PKGS     := db libpng miniupnpc openssl qrencode zlib\n+$(TARGET)_DEPS     :=\n+$(TARGET)_FILES    := $($(TARGET)_SCRIPT) \\\n+                      $($(TARGET)_PATCH)\n+$(TARGET)_FILES    += $(foreach PACKAGE, \\\n+                                $($(TARGET)_PKGS), \\\n+                                contrib/vagrant/cache/$($(PACKAGE)_FILE))\n+$(TARGET)_FILES    := $(sort $($(TARGET)_FILES))\n+$(TARGET)_MANIFEST := $(call BUILD_MANIFEST,$($(TARGET)_FILES))\n+TARGETS            += $(TARGET)\n+\n+TARGET             := bitcoin-linux\n+$(TARGET)_NAME     := bitcoin\n+$(TARGET)_VERSION  := 0.6.99\n+$(TARGET)_OUTPUT   := $(TARGET)-$($(TARGET)_VERSION)-gitian.zip\n+$(TARGET)_SCRIPT   := contrib/gitian-descriptors/gitian.yml\n+$(TARGET)_PATCH    := contrib/vagrant/$(HOST_PATCH_DIR)/bitcoin-contrib-gitian-descriptors-$(TARGET).patch\n+$(TARGET)_PKGS     := miniupnpc qrencode\n+$(TARGET)_DEPS     :=\n+$(TARGET)_FILES    := $($(TARGET)_SCRIPT) \\\n+                      $($(TARGET)_PATCH) \\\n+                      contrib/vagrant/cache/src-local.tar.xz\n+$(TARGET)_FILES    += $(foreach PACKAGE, \\\n+                                $($(TARGET)_PKGS), \\\n+                                contrib/vagrant/cache/$($(PACKAGE)_FILE))\n+$(TARGET)_FILES    := $(sort $($(TARGET)_FILES))\n+$(TARGET)_MANIFEST := $(call BUILD_MANIFEST,$($(TARGET)_FILES))\n+TARGETS            += $(TARGET)\n+\n+TARGET             := bitcoin-win32\n+$(TARGET)_NAME     := bitcoin\n+$(TARGET)_VERSION  := 0.6.99\n+$(TARGET)_OUTPUT   := $(TARGET)-$($(TARGET)_VERSION)-gitian.zip\n+$(TARGET)_SCRIPT   := contrib/gitian-descriptors/gitian-win32.yml\n+$(TARGET)_PATCH    := contrib/vagrant/$(HOST_PATCH_DIR)/bitcoin-contrib-gitian-descriptors-$(TARGET).patch\n+$(TARGET)_PKGS     :=\n+$(TARGET)_DEPS     := boost-win32 qt-win32 bitcoin-deps-win32\n+$(TARGET)_FILES    := $($(TARGET)_SCRIPT) \\\n+                      $($(TARGET)_PATCH) \\\n+                      contrib/vagrant/cache/src-local.tar.xz\n+$(TARGET)_FILES    += $(foreach PACKAGE, \\\n+                                $($(TARGET)_PKGS), \\\n+                                contrib/vagrant/cache/$($(PACKAGE)_FILE))\n+$(TARGET)_FILES    := $(sort $($(TARGET)_FILES))\n+$(TARGET)_MANIFEST := $(call BUILD_MANIFEST,$($(TARGET)_FILES))\n+TARGETS            += $(TARGET)\n+\n+TARGET             := boost-win32\n+$(TARGET)_NAME     := boost\n+$(TARGET)_VERSION  := 1.49.0\n+$(TARGET)_OUTPUT   := $(TARGET)-$($(TARGET)_VERSION)-gitian2.zip\n+$(TARGET)_SCRIPT   := contrib/gitian-descriptors/$(TARGET).yml\n+$(TARGET)_PATCH    := contrib/vagrant/$(HOST_PATCH_DIR)/bitcoin-contrib-gitian-descriptors-$(TARGET).patch\n+$(TARGET)_PKGS     := boost-win32\n+$(TARGET)_DEPS     :=\n+$(TARGET)_FILES    := $($(TARGET)_SCRIPT) \\\n+                      $($(TARGET)_PATCH)\n+$(TARGET)_FILES    += $(foreach PACKAGE, \\\n+                                $($(TARGET)_PKGS), \\\n+                                contrib/vagrant/cache/$($(PACKAGE)_FILE))\n+$(TARGET)_FILES    := $(sort $($(TARGET)_FILES))\n+$(TARGET)_MANIFEST := $(call BUILD_MANIFEST,$($(TARGET)_FILES))\n+TARGETS            += $(TARGET)\n+\n+TARGET             := qt-win32\n+$(TARGET)_NAME     := qt\n+$(TARGET)_VERSION  := 4.7.4\n+$(TARGET)_OUTPUT   := $(TARGET)-$($(TARGET)_VERSION)-gitian.zip\n+$(TARGET)_SCRIPT   := contrib/gitian-descriptors/$(TARGET).yml\n+$(TARGET)_PATCH    := contrib/vagrant/$(HOST_PATCH_DIR)/bitcoin-contrib-gitian-descriptors-$(TARGET).patch\n+$(TARGET)_PKGS     := qt\n+$(TARGET)_DEPS     :=\n+$(TARGET)_FILES    := $($(TARGET)_SCRIPT) \\\n+                      $($(TARGET)_PATCH)\n+$(TARGET)_FILES    += $(foreach PACKAGE, \\\n+                                $($(TARGET)_PKGS), \\\n+                                contrib/vagrant/cache/$($(PACKAGE)_FILE))\n+$(TARGET)_FILES    := $(sort $($(TARGET)_FILES))\n+$(TARGET)_MANIFEST := $(call BUILD_MANIFEST,$($(TARGET)_FILES))\n+TARGETS            += $(TARGET)\n+\n+DEPLOY_SOURCE_BUNDLE = \\\n+\tvagrant ssh --command \"rm -rf ~/'$(1)' || true\"; \\\n+\tvagrant ssh --command \"mkdir -p ~/'$(1)'\"; \\\n+\tvagrant ssh --command \"cd ~/'$(1)' && \\\n+\t    tar -xf $(GUEST_CACHE_DIR)/src-local.tar.xz\"\n+\n+define TARGET_RULE\n+.PHONY: $(1)\n+$(1): $(HOST_OUTPUT_DIR)/$($(1)_OUTPUT)\n+$(HOST_OUTPUT_DIR)/$($(1)_OUTPUT): \\\n+\t.stamp-gitian-guest-vm.manifest \\\n+\t$(HOST_CACHE_DIR)/src-local.manifest \\\n+\t$(foreach TARGET,$($(1)_DEPS),$(HOST_OUTPUT_DIR)/$($(TARGET)_OUTPUT)) \\\n+\t$(foreach PACKAGE,$($(1)_PKGS),$(HOST_CACHE_DIR)/$($(PACKAGE)_FILE))\n+\t\n+\tmkdir -p $(HOST_OUTPUT_DIR)\n+\t\n+\t$(call VAGRANT_UP)\n+\t\n+\t$(call DEPLOY_SOURCE_BUNDLE,bitcoin)\n+\tvagrant ssh --command \"cd ~/bitcoin && \\\n+\t    if [ -f $(GUEST_PATCH_DIR)/bitcoin-contrib-gitian-descriptors-$(1).patch ]; then \\\n+\t        patch -p1 < $(GUEST_PATCH_DIR)/bitcoin-contrib-gitian-descriptors-$(1).patch || exit 1; \\\n+\t    fi\"\n+\t\n+\techo `$($(TARGET)_MANIFEST)` > .$(TARGET).manifest\n+\t\n+\tif [ ! -f $(HOST_CACHE_DIR)/$(TARGET)/`cat .$(TARGET).manifest`/$($(TARGET)_OUTPUT) ]; then \\\n+\t    vagrant ssh --command \"cd ~/gitian-builder && \\\n+\t        USE_LXC=1 ./bin/gbuild ../bitcoin/$($(1)_SCRIPT)\" || exit 1; \\\n+\t    vagrant ssh --command \"cd ~/gitian-builder/build/out && \\\n+\t        if [ ! -f $($(TARGET)_OUTPUT) ]; then \\\n+\t            zip -r $($(TARGET)_OUTPUT) * || exit 1; \\\n+\t        fi\" || exit 1; \\\n+\t    vagrant ssh --command \"mkdir -p '$(GUEST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`/\" || exit 1; \\\n+\t    vagrant ssh --command \"cd ~/gitian-builder && \\\n+\t        mv build/out/$($(TARGET)_OUTPUT) \\\n+\t           '$(GUEST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`/\" || exit 1; \\\n+\t    vagrant ssh --command \"cd ~/gitian-builder && \\\n+\t        mv result/$($(TARGET)_NAME)-res.yml \\\n+\t           '$(GUEST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`'/$(1)-$($(TARGET)_VERSION)-gitian-res.yml'\" || exit 1; \\\n+\t    vagrant ssh --command \"cd ~/gitian-builder && \\\n+\t        mv var/build.log \\\n+\t           '$(GUEST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`'/$(1)-$($(TARGET)_VERSION)-gitian-build.log'\" || exit 1; \\\n+\t    vagrant ssh --command \"cd ~/gitian-builder && \\\n+\t        mv var/install.log \\\n+\t           '$(GUEST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`'/$(1)-$($(TARGET)_VERSION)-gitian-install.log'\" || exit 1; \\\n+\tfi\n+\t\n+\tcp -a '$(HOST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`'/$($(TARGET)_OUTPUT)' \\\n+\t      '$(HOST_CACHE_DIR)/'\n+\tcp -a '$(HOST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`'/$($(TARGET)_OUTPUT)' \\\n+\t      '$(HOST_OUTPUT_DIR)/'\n+\tcp -a '$(HOST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`'/$(1)-$($(TARGET)_VERSION)-gitian-res.yml' \\\n+\t      '$(HOST_OUTPUT_DIR)/'\n+\tcp -a '$(HOST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`'/$(1)-$($(TARGET)_VERSION)-gitian-build.log' \\\n+\t      '$(HOST_OUTPUT_DIR)/'\n+\tcp -a '$(HOST_CACHE_DIR)/$(TARGET)/'`cat .$(TARGET).manifest`'/$(1)-$($(TARGET)_VERSION)-gitian-install.log' \\\n+\t      '$(HOST_OUTPUT_DIR)/'\n+\t\n+\trm -f .$(TARGET).manifest\n+\t\n+\tvagrant ssh --command \"rm -rf ~/bitcoin\"\n+\t\n+\t-$(call VAGRANT_HALT)\n+\n+endef\n+$(foreach TARGET,$(TARGETS),$(eval $(call TARGET_RULE,$(TARGET))))\n+\n+# ===----------------------------------------------------------------------===\n+# End of File\n+# ===----------------------------------------------------------------------==="
      },
      {
        "sha": "42061c01a1c70097d1e4579f29a5adf40abdec95",
        "filename": "contrib/vagrant/README",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/README?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1 @@\n+README.md\n\\ No newline at end of file"
      },
      {
        "sha": "a227759ede1c7c219fc4ee2024b350b588f17547",
        "filename": "contrib/vagrant/README.md",
        "status": "added",
        "additions": 114,
        "deletions": 0,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/README.md?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,114 @@\n+Automated Gitian builds with Vagrant\n+====================================\n+\n+This directory contains platform-independent scripts for building bitcoind and\n+Bitcoin-QT using the deterministic Gitian build process.\n+\n+Dependencies\n+------------\n+\n+These build scripts depend on a UNIX-like build environment, the freely\n+available open-source release of VirtualBox, and the Vagrant ruby gem. The\n+makefile will complain if any of the required tools are not found. Use the\n+makefile to find out which requirements are missing:\n+\n+    $ cd contrib/vagrant\n+    $ make check-requirements\n+\n+Instructions\n+------------\n+\n+    $ cd contrib/vagrant && make\n+\n+It really is that simple.\n+\n+Read the remainder of this document for some platform-specific instructions\n+for setting up an appropriate build environment.\n+\n+Mac OS X\n+--------\n+\n+Install the latest versions of VirtualBox and Vagrant. The scripts are known\n+to work with VirtualBox 4.1.16 r78094 and Vagrant 1.0.3 on Mac OS X 10.7 Lion\n+with XCode 4.3.2 and the command-line developer tools installed.\n+\n+VirtualBox binaries are available from the VirtualBox website:\n+\n+    https://www.virtualbox.org/wiki/Downloads\n+\n+The Vagrant installer for Mac OS X works:\n+\n+    http://vagrantup.com/\n+\n+Use MacPorts or homebrew to install any missing dependencies, for example:\n+\n+    $ sudo port install openssl wget xz\n+\n+Then use GNU make to initiate the build:\n+\n+    $ cd contrib/vagrant\n+    $ make\n+\n+Linux\n+-----\n+\n+Existing binaries for VirtualBox, Vagrant, git, and the various UNIX\n+dependencies provided by your distribution should work. Use the makefile to\n+find out which requirements are missing:\n+\n+    $ cd contrib/vagrant\n+    $ make check-requirements\n+\n+If you cannot find `vagrant` in your distribution's package repositories, you\n+can install it using ruby gems:\n+\n+    $ sudo gem install vagrant\n+\n+Once the dependencies are met, use GNU make to initiate the build:\n+\n+    $ cd contrib/vagrant\n+    $ make\n+\n+Windows\n+-------\n+\n+A UNIX-like build environment is required, but due to the peculiarities of the\n+required dependencies, the exact combination you have installed probably won't\n+work. Here are build instructions that are known to work from an updated fresh\n+install of Windows 7:\n+\n+Install Git for Windows (if you need git):\n+\n+    http://msysgit.github.com/\n+\n+You don't need the msys version--we will be installing msys separately.\n+\n+Install ruby using the one-click ruby installer:\n+\n+    http://rubyinstaller.org/downloads/\n+\n+Install ruby development environment, from the same download page.\n+Instructions:\n+\n+    https://github.com/oneclick/rubyinstaller/wiki/Development-Kit\n+\n+Install Virtualbox (extension pack not required):\n+\n+    https://www.virtualbox.org/wiki/Downloads\n+\n+Install mingw + msys environment:\n+\n+    http://www.mingw.org/wiki/Getting_Started\n+\n+Install Vagrant via gem:\n+\n+    $ gem install vagrant\n+\n+Use mingw-get to install other required packages.\n+\n+    $ mingw-get install wget\n+\n+Once the dependencies are met, use GNU make to initiate the build:\n+\n+    $ cd contrib/vagrant\n+    $ make"
      },
      {
        "sha": "8534c83bc82d647bf0871922d80128e7069626b3",
        "filename": "contrib/vagrant/Vagrantfile",
        "status": "added",
        "additions": 124,
        "deletions": 0,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/Vagrantfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/Vagrantfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/Vagrantfile?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,124 @@\n+# -*- mode: ruby -*-\n+# vi: set ft=ruby :\n+\n+# === Vagrantfile ---------------------------------------------------------===\n+# Copyright \u00a9 2012 Bitcoin Developers.\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy\n+# of this software and associated documentation files (the \"Software\"), to deal\n+# in the Software without restriction, including without limitation the rights\n+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+# copies of the Software, and to permit persons to whom the Software is\n+# furnished to do so, subject to the following conditions:\n+\n+# The above copyright notice and this permission notice shall be included in\n+# all copies or substantial portions of the Software.\n+\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+# THE SOFTWARE.\n+# ===----------------------------------------------------------------------===\n+\n+Vagrant::Config.run do |config|\n+  # All Vagrant configuration is done here. The most common configuration\n+  # options are documented and commented below. For a complete reference,\n+  # please see the online documentation at vagrantup.com.\n+\n+  # Every Vagrant virtual environment requires a box to build off of.\n+  config.vm.box = \"Ubuntu 12.04 (x86_64)\"\n+\n+  # The url from where the 'config.vm.box' box will be fetched if it\n+  # doesn't already exist on the user's system.\n+  config.vm.box_url = \"http://files.vagrantup.com/precise64.box\"\n+\n+  # Set RAM to 1.25GB\n+  config.vm.customize [\"modifyvm\", :id, \"--memory\", 1280]\n+\n+  # Boot with a GUI so you can see the screen. (Default is headless)\n+  # config.vm.boot_mode = :gui\n+\n+  # Assign this VM to a host-only network IP, allowing you to access it\n+  # via the IP. Host-only networks can talk to the host machine as well as\n+  # any other machines on the same network, but cannot be accessed (through this\n+  # network interface) by any external networks.\n+  # config.vm.network :hostonly, \"192.168.33.10\"\n+\n+  # Assign this VM to a bridged network, allowing you to connect directly to a\n+  # network using the host's network device. This makes the VM appear as another\n+  # physical device on your network.\n+  # config.vm.network :bridged\n+\n+  # Forward a port from the guest to the host, which allows for outside\n+  # computers to access the VM, whereas host only networking does not.\n+  # config.vm.forward_port 80, 8080\n+\n+  # Share an additional folder to the guest VM. The first argument is\n+  # an identifier, the second is the path on the guest to mount the\n+  # folder, and the third is the path on the host to the actual folder.\n+  # config.vm.share_folder \"v-data\", \"/vagrant_data\", \"../data\"\n+\n+  # Enable provisioning with Puppet stand alone.  Puppet manifests\n+  # are contained in a directory path relative to this Vagrantfile.\n+  # You will need to create the manifests directory and a manifest in\n+  # the file base.pp in the manifests_path directory.\n+  #\n+  # An example Puppet manifest to provision the message of the day:\n+  #\n+  # # group { \"puppet\":\n+  # #   ensure => \"present\",\n+  # # }\n+  # #\n+  # # File { owner => 0, group => 0, mode => 0644 }\n+  # #\n+  # # file { '/etc/motd':\n+  # #   content => \"Welcome to your Vagrant-built virtual machine!\n+  # #               Managed by Puppet.\\n\"\n+  # # }\n+  #\n+  # config.vm.provision :puppet do |puppet|\n+  #   puppet.manifests_path = \"manifests\"\n+  #   puppet.manifest_file  = \"base.pp\"\n+  # end\n+\n+  # Enable provisioning with chef solo, specifying a cookbooks path, roles\n+  # path, and data_bags path (all relative to this Vagrantfile), and adding \n+  # some recipes and/or roles.\n+  #\n+  # config.vm.provision :chef_solo do |chef|\n+  #   chef.cookbooks_path = \"../my-recipes/cookbooks\"\n+  #   chef.roles_path = \"../my-recipes/roles\"\n+  #   chef.data_bags_path = \"../my-recipes/data_bags\"\n+  #   chef.add_recipe \"mysql\"\n+  #   chef.add_role \"web\"\n+  #\n+  #   # You may also specify custom JSON attributes:\n+  #   chef.json = { :mysql_password => \"foo\" }\n+  # end\n+\n+  # Enable provisioning with chef server, specifying the chef server URL,\n+  # and the path to the validation key (relative to this Vagrantfile).\n+  #\n+  # The Opscode Platform uses HTTPS. Substitute your organization for\n+  # ORGNAME in the URL and validation key.\n+  #\n+  # If you have your own Chef Server, use the appropriate URL, which may be\n+  # HTTP instead of HTTPS depending on your configuration. Also change the\n+  # validation key to validation.pem.\n+  #\n+  # config.vm.provision :chef_client do |chef|\n+  #   chef.chef_server_url = \"https://api.opscode.com/organizations/ORGNAME\"\n+  #   chef.validation_key_path = \"ORGNAME-validator.pem\"\n+  # end\n+  #\n+  # If you're using the Opscode platform, your validator client is\n+  # ORGNAME-validator, replacing ORGNAME with your organization name.\n+  #\n+  # IF you have your own Chef Server, the default validation client name is\n+  # chef-validator, unless you changed the configuration.\n+  #\n+  #   chef.validation_client_name = \"ORGNAME-validator\"\n+end"
      },
      {
        "sha": "0a9f1887e9aceeae20ee3bd700b369834145ec2f",
        "filename": "contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-deps-win32.patch",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-deps-win32.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-deps-win32.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-deps-win32.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,31 @@\n+diff --git a/contrib/gitian-descriptors/deps-win32.yml b/contrib/gitian-descriptors/deps-win32.yml\n+--- a/contrib/gitian-descriptors/deps-win32.yml\n++++ b/contrib/gitian-descriptors/deps-win32.yml\n+@@ -40,7 +40,10 @@ script: |\n+   tar xzf miniupnpc-1.6.tar.gz\n+   cd miniupnpc-1.6\n+   sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw\n+-  sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw\n++  cp miniupnpcstrings.h.in miniupnpcstrings.h\n++  sed 's|\"OS/version\"|\"MSWindows/5.1.2600\"|' -i miniupnpcstrings.h\n++  sed 's|\"version\"|\"1.6\"|' -i miniupnpcstrings.h\n++  sed 's|wingenminiupnpcstrings $< $@|true|' -i Makefile.mingw\n+   make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar\n+   cd ..\n+   mv miniupnpc-1.6 miniupnpc\n+@@ -52,13 +55,13 @@ script: |\n+   #\n+   tar xzf libpng-1.5.9.tar.gz\n+   cd libpng-1.5.9\n+-  ./configure -disable-shared CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld LDFLAGS=\"-L../zlib-1.2.6/\" CFLAGS=\"-I../zlib-1.2.6/\"\n++  ./configure -disable-shared --host=i586-mingw32msvc LDFLAGS=\"-L../zlib-1.2.6/\" CFLAGS=\"-I../zlib-1.2.6/\"\n+   make $MAKEOPTS\n+   cd ..\n+   #\n+   tar xjf qrencode-3.2.0.tar.bz2\n+   cd qrencode-3.2.0\n+-  ./configure CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld png_LIBS=\"../libpng-1.5.9/.libs/libpng15.a ../zlib-1.2.6/libz.a\" png_CFLAGS=\"-I../libpng-1.5.9\"\n++  ./configure --host=i586-mingw32msvc png_LIBS=\"../libpng-1.5.9/.libs/libpng15.a ../zlib-1.2.6/libz.a\" png_CFLAGS=\"-I../libpng-1.5.9\"\n+   make $MAKEOPTS\n+   cd ..\n+   #"
      },
      {
        "sha": "9aa4c64674cdadaf10562f8cf8be6ac0f1d7e926",
        "filename": "contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-linux.patch",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-linux.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-linux.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-linux.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,31 @@\n+diff --git a/contrib/gitian-descriptors/gitian.yml b/contrib/gitian-descriptors/gitian.yml\n+--- a/contrib/gitian-descriptors/gitian.yml\n++++ b/contrib/gitian-descriptors/gitian.yml\n+@@ -19,12 +19,11 @@ packages:\n+ - \"pkg-config\"\n+ - \"libpng12-dev\"\n+ reference_datetime: \"2011-01-30 00:00:00\"\n+-remotes:\n+-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+-  \"dir\": \"bitcoin\"\n++remotes: []\n+ files:\n+ - \"miniupnpc-1.6.tar.gz\"\n+ - \"qrencode-3.2.0.tar.bz2\"\n++- \"src-local.tar.xz\"\n+ script: |\n+   INSTDIR=\"$HOME/install\"\n+   export LIBRARY_PATH=\"$INSTDIR/lib\"\n+@@ -40,9 +39,11 @@ script: |\n+   make $MAKEOPTS install\n+   cd ..\n+   #\n++  mkdir -p bitcoin\n++  tar -C bitcoin -xf src-local.tar.xz\n+   cd bitcoin\n+   mkdir -p $OUTDIR/src\n+-  git archive HEAD | tar -x -C $OUTDIR/src\n++  tar -C $OUTDIR/src -xf ../src-local.tar.xz\n+   cp $OUTDIR/src/doc/README $OUTDIR\n+   cp $OUTDIR/src/COPYING $OUTDIR\n+   cd src"
      },
      {
        "sha": "af1535b554a1aa711730c870ebf79158752628c8",
        "filename": "contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-win32.patch",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-win32.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-win32.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-bitcoin-win32.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,48 @@\n+diff --git a/contrib/gitian-descriptors/gitian-win32.yml b/contrib/gitian-descriptors/gitian-win32.yml\n+--- a/contrib/gitian-descriptors/gitian-win32.yml\n++++ b/contrib/gitian-descriptors/gitian-win32.yml\n+@@ -11,13 +11,12 @@ packages:\n+ - \"nsis\"\n+ - \"faketime\"\n+ reference_datetime: \"2011-01-30 00:00:00\"\n+-remotes:\n+-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+-  \"dir\": \"bitcoin\"\n++remotes: []\n+ files:\n+ - \"qt-win32-4.7.4-gitian.zip\"\n+ - \"boost-win32-1.49.0-gitian2.zip\"\n+ - \"bitcoin-deps-0.0.4.zip\"\n++- \"src-local.tar.xz\"\n+ script: |\n+   #\n+   mkdir $HOME/qt\n+@@ -43,15 +42,17 @@ script: |\n+   #\n+   find -type f | xargs touch --date=\"$REFERENCE_DATETIME\"\n+   #\n++  mkdir -p bitcoin\n++  tar -C bitcoin -xf src-local.tar.xz\n+   cd bitcoin\n+   mkdir -p $OUTDIR/src\n+-  git archive HEAD | tar -x -C $OUTDIR/src\n++  tar -C $OUTDIR/src -xf ../src-local.tar.xz\n+   cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt\n+   cp $OUTDIR/src/COPYING $OUTDIR/license.txt\n+   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+   export FAKETIME=$REFERENCE_DATETIME\n+   export TZ=UTC\n+-  $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_47_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_47_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1b OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1b/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 USE_QRCODE=1 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin QMAKE_LFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n++  $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_49_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_49_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1b OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1b/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 USE_QRCODE=1 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin QMAKE_LFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n+   make $MAKEOPTS\n+   cp release/bitcoin-qt.exe $OUTDIR/\n+   #\n+@@ -65,7 +66,7 @@ script: |\n+   cp bitcoind.exe $OUTDIR/daemon\n+   cd ..\n+   mkdir nsis\n+-  git archive HEAD | tar -x -C nsis\n++  tar -C nsis -xf $HOME/build/src-local.tar.xz\n+   cd nsis/src\n+   mkdir ../release\n+   cp ../../release/* ../release/"
      },
      {
        "sha": "cac66e4b0282b602cf6b1161846f942b9604010d",
        "filename": "contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-boost-win32.patch",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-boost-win32.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-boost-win32.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-boost-win32.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,38 @@\n+diff --git a/contrib/gitian-descriptors/boost-win32.yml b/contrib/gitian-descriptors/boost-win32.yml\n+--- a/contrib/gitian-descriptors/boost-win32.yml\n++++ b/contrib/gitian-descriptors/boost-win32.yml\n+@@ -18,20 +18,20 @@ script: |\n+   tar xjf boost_1_49_0.tar.bz2\n+   cd boost_1_49_0\n+   echo \"--- tmp_dir_helpers.orig.hpp\t2012-06-10 01:39:25.403268210 +0200\n+-+++ tmp_dir_helpers.hpp\t2012-06-10 01:41:14.653823479 +0200\n+-@@ -19,9 +19,9 @@\n+- #include <string>\n+- \n+- #if defined(BOOST_INTERPROCESS_WINDOWS)\n+--   //#define BOOST_INTERPROCESS_HAS_WINDOWS_KERNEL_BOOTTIME\n+--   //#define BOOST_INTERPROCESS_HAS_KERNEL_BOOTTIME\n+--   //#include <boost/interprocess/detail/win32_api.hpp>\n+-+   #define BOOST_INTERPROCESS_HAS_WINDOWS_KERNEL_BOOTTIME\n+-+   #define BOOST_INTERPROCESS_HAS_KERNEL_BOOTTIME\n+-+   #include <boost/interprocess/detail/win32_api.hpp>\n+- #elif defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__APPLE__)\n+-    //#include <sys/sysctl.h>\n+-    //#if defined(CTL_KERN) && defined (KERN_BOOTTIME)\" > useboottime.patch\n++  +++ tmp_dir_helpers.hpp\t2012-06-10 01:41:14.653823479 +0200\n++  @@ -19,9 +19,9 @@\n++   #include <string>\n++   \n++   #if defined(BOOST_INTERPROCESS_WINDOWS)\n++  -   //#define BOOST_INTERPROCESS_HAS_WINDOWS_KERNEL_BOOTTIME\n++  -   //#define BOOST_INTERPROCESS_HAS_KERNEL_BOOTTIME\n++  -   //#include <boost/interprocess/detail/win32_api.hpp>\n++  +   #define BOOST_INTERPROCESS_HAS_WINDOWS_KERNEL_BOOTTIME\n++  +   #define BOOST_INTERPROCESS_HAS_KERNEL_BOOTTIME\n++  +   #include <boost/interprocess/detail/win32_api.hpp>\n++   #elif defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__APPLE__)\n++      //#include <sys/sysctl.h>\n++      //#if defined(CTL_KERN) && defined (KERN_BOOTTIME)\" > useboottime.patch\n+   patch boost/interprocess/detail/tmp_dir_helpers.hpp useboottime.patch\n+   echo \"using gcc : 4.4 : i586-mingw32msvc-g++\n+         :"
      },
      {
        "sha": "9116cca989c8e5f02d6116fe9d64aab6a762792a",
        "filename": "contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-qt-win32.patch",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-qt-win32.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-qt-win32.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/bitcoin-contrib-gitian-descriptors-qt-win32.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,31 @@\n+diff --git a/contrib/gitian-descriptors/qt-win32.yml b/contrib/gitian-descriptors/qt-win32.yml\n+--- a/contrib/gitian-descriptors/qt-win32.yml\n++++ b/contrib/gitian-descriptors/qt-win32.yml\n+@@ -18,11 +18,17 @@ script: |\n+   SRCDIR=\"$INSTDIR/src/\"\n+   mkdir $SRCDIR\n+   #\n++  if [ x\"`uname -p`\" == x\"x86_64\" ]; then\n++    BITNESS=64\n++  else\n++    BITNESS=32\n++  fi\n++  #\n+   tar xzf qt-everywhere-opensource-src-4.7.4.tar.gz\n+   cd qt-everywhere-opensource-src-4.7.4\n+   sed 's/$TODAY/2011-01-30/' -i configure\n+   sed 's/i686-pc-mingw32-/i586-mingw32msvc-/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+-  sed --posix 's|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/i586-mingw32msvc/include/ -frandom-seed=qtbuild|' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n++  sed --posix 's|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/i586-mingw32msvc/include/ -frandom-seed=qtbuild -m32|' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+   sed 's/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+   sed 's/QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads/QMAKE_LFLAGS_EXCEPTIONS_ON = -lmingwthrd/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+   sed --posix 's/QMAKE_MOC\\t\\t= i586-mingw32msvc-moc/QMAKE_MOC\\t\\t= moc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+@@ -40,7 +46,7 @@ script: |\n+   #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+   export FAKETIME=$REFERENCE_DATETIME\n+   export TZ=UTC\n+-  ./configure -prefix $INSTDIR -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit  -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -opengl no -nomake examples -nomake demos -nomake docs\n++  ./configure -prefix $INSTDIR -confirm-license -release -opensource -static -no-qt3support -platform linux-g++-$BITNESS -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit  -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -opengl no -nomake examples -nomake demos -nomake docs\n+   find . -name *.prl | xargs -l sed 's|/\\.||' -i\n+   find . -name *.prl | xargs -l sed 's|/$||' -i\n+   make $MAKEOPTS install"
      },
      {
        "sha": "be814d718bfdf182796210c9f8ae9d5db627864d",
        "filename": "contrib/vagrant/patch/gitian-builder-69bd6a53-100-change_ip.patch",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/gitian-builder-69bd6a53-100-change_ip.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/gitian-builder-69bd6a53-100-change_ip.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/gitian-builder-69bd6a53-100-change_ip.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,11 @@\n+diff --git a/target-bin/bootstrap-fixup b/target-bin/bootstrap-fixup\n+--- a/target-bin/bootstrap-fixup\n++++ b/target-bin/bootstrap-fixup\n+@@ -2,5 +2,5 @@\n+ \n+ set -e\n+ \n+-echo 'deb http://10.0.2.2:3142/archive.ubuntu.com/ubuntu lucid main universe' > $1/etc/apt/sources.list\n+-echo 'deb http://10.0.2.2:3142/archive.ubuntu.com/ubuntu lucid-updates main universe' >> $1/etc/apt/sources.list\n++echo 'deb http://10.0.2.15:3142/archive.ubuntu.com/ubuntu lucid main universe' > $1/etc/apt/sources.list\n++echo 'deb http://10.0.2.15:3142/archive.ubuntu.com/ubuntu lucid-updates main universe' >> $1/etc/apt/sources.list"
      },
      {
        "sha": "95c281b478d537b1531dcb9f187c53bbd00286b4",
        "filename": "contrib/vagrant/patch/gitian-builder-69bd6a53-200-removepkg_cron.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/gitian-builder-69bd6a53-200-removepkg_cron.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/gitian-builder-69bd6a53-200-removepkg_cron.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/gitian-builder-69bd6a53-200-removepkg_cron.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,20 @@\n+diff --git a/bin/make-base-vm b/bin/make-base-vm\n+--- a/bin/make-base-vm\n++++ b/bin/make-base-vm\n+@@ -69,6 +69,7 @@ if [ $ARCH = \"amd64\" -a $SUITE = \"hardy\" ]; then\n+ fi\n+ \n+ addpkg=openssh-server,pciutils,build-essential,git-core,subversion\n++removepkg=cron\n+ \n+ if [ -e $OUT.qcow2 ]; then\n+   echo $OUT.qcow2 already exists, please remove it first\n+@@ -76,7 +77,7 @@ if [ -e $OUT.qcow2 ]; then\n+ fi\n+ \n+ rm -rf $OUT\n+-sudo vmbuilder kvm ubuntu --arch=$ARCH --suite=$SUITE --addpkg=$addpkg --ssh-key=var/id_dsa.pub --ssh-user-key=var/id_dsa.pub --mirror=$MIRROR --security-mirror=$SECURITY_MIRROR --dest=$OUT --flavour=$FLAVOUR --firstboot=`pwd`/target-bin/bootstrap-fixup\n++sudo vmbuilder kvm ubuntu --arch=$ARCH --suite=$SUITE --addpkg=$addpkg --removepkg=$removepkg --ssh-key=var/id_dsa.pub --ssh-user-key=var/id_dsa.pub --mirror=$MIRROR --security-mirror=$SECURITY_MIRROR --dest=$OUT --flavour=$FLAVOUR --firstboot=`pwd`/target-bin/bootstrap-fixup\n+ mv $OUT/*.qcow2 $OUT.qcow2\n+ rm -rf $OUT\n+ "
      },
      {
        "sha": "c6165ce77bada7cb0f3893932358d6c83f198310",
        "filename": "contrib/vagrant/patch/gitian-builder-69bd6a53-300-external_mirrors.patch",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/gitian-builder-69bd6a53-300-external_mirrors.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/gitian-builder-69bd6a53-300-external_mirrors.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/gitian-builder-69bd6a53-300-external_mirrors.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,14 @@\n+diff --git a/bin/make-base-vm b/bin/make-base-vm\n+--- a/bin/make-base-vm\n++++ b/bin/make-base-vm\n+@@ -3,8 +3,8 @@ set -e\n+ \n+ SUITE=lucid\n+ ARCH=amd64\n+-MIRROR=http://${MIRROR_HOST:-127.0.0.1}:3142/archive.ubuntu.com/ubuntu\n+-SECURITY_MIRROR=http://${MIRROR_HOST:-127.0.0.1}:3142/security.ubuntu.com/ubuntu\n++MIRROR=http://mirror.anl.gov/pub/ubuntu/\n++SECURITY_MIRROR=http://security.ubuntu.com/ubuntu\n+ LXC=0\n+ \n+ usage() {"
      },
      {
        "sha": "7a184862c36a3ad843f31fb6a7c5d0a44fd60eed",
        "filename": "contrib/vagrant/patch/gitian-builder-69bd6a53-400-ssh_key.patch",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/gitian-builder-69bd6a53-400-ssh_key.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/gitian-builder-69bd6a53-400-ssh_key.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/gitian-builder-69bd6a53-400-ssh_key.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,21 @@\n+diff -rupN a/var/id_dsa b/var/id_dsa\n+--- a/var/id_dsa\t1970-01-01 00:00:00.000000000 +0000\n++++ b/var/id_dsa\t2012-07-06 01:35:07.514553903 +0000\n+@@ -0,0 +1,12 @@\n++-----BEGIN DSA PRIVATE KEY-----\n++MIIBugIBAAKBgQCjPELx9IgbW7F17XHddG/v1e47UOFuArK27FCBEnH/OBWQWmSr\n++4qUGYg4OSIOWK1zc4XQB53dXt0ukOlz9230jILyEffoTrqW/Lca6OdzEex/FF88C\n++ROmEAQC1lq5edts7UkIPT8WSxlINFh3VI85m1YqNe4G9UIVyAVIATLq/kQIVAJD1\n++oWkFkhTqyHzGcq3NrJuVkpfFAoGAMWADuFyUtPtYmUyZ4dFSgjGpCAfHIGb1S8wW\n++LKWAmqjKVLq92pvSQqFaZDkcq80ivSsUaYrftydhxx2eSFBQuEKp9ibAi+oDf+0h\n++pnq4hW8sBXzanjF3vZ2CZ1hxifJnFBrG9rcHfnE3/poXUKOQGr3HXH7MpeZoYlih\n++dsgsOd4CgYBTe12qpE5oV/2t7dXEoiR2qgh7q2g8ow8A683NBmlyRl6HvJqKMAd3\n++/b8ckqqWkCoCe92JnmlSaR8MNB1EIc5N+H6oZXIxjwW1wxVCnqT65jcgjF3KNqwC\n++0wUGbjZJw9u8v5MYJNRVGASM29C/J+TRpJjaA4onOR/DO1bjIwN90wIUAVvjDDOK\n++MhkC+5GN+VGrMSAdD44=\n++-----END DSA PRIVATE KEY-----\n+diff -rupN a/var/id_dsa.pub b/var/id_dsa.pub\n+--- a/var/id_dsa.pub\t1970-01-01 00:00:00.000000000 +0000\n++++ b/var/id_dsa.pub\t2012-07-06 01:35:07.518555852 +0000\n+@@ -0,0 +1 @@\n++ssh-dss AAAAB3NzaC1kc3MAAACBAKM8QvH0iBtbsXXtcd10b+/V7jtQ4W4CsrbsUIEScf84FZBaZKvipQZiDg5Ig5YrXNzhdAHnd1e3S6Q6XP3bfSMgvIR9+hOupb8txro53MR7H8UXzwJE6YQBALWWrl522ztSQg9PxZLGUg0WHdUjzmbVio17gb1QhXIBUgBMur+RAAAAFQCQ9aFpBZIU6sh8xnKtzayblZKXxQAAAIAxYAO4XJS0+1iZTJnh0VKCMakIB8cgZvVLzBYspYCaqMpUur3am9JCoVpkORyrzSK9KxRpit+3J2HHHZ5IUFC4Qqn2JsCL6gN/7SGmeriFbywFfNqeMXe9nYJnWHGJ8mcUGsb2twd+cTf+mhdQo5Aavcdcfsyl5mhiWKF2yCw53gAAAIBTe12qpE5oV/2t7dXEoiR2qgh7q2g8ow8A683NBmlyRl6HvJqKMAd3/b8ckqqWkCoCe92JnmlSaR8MNB1EIc5N+H6oZXIxjwW1wxVCnqT65jcgjF3KNqwC0wUGbjZJw9u8v5MYJNRVGASM29C/J+TRpJjaA4onOR/DO1bjIwN90w== vagrant@precise64"
      },
      {
        "sha": "70c70e6396c413b8b2f9ff2f4e25dab641a762e9",
        "filename": "contrib/vagrant/patch/host-vm-etc-network-interfaces-100-add_lxc_br0.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/host-vm-etc-network-interfaces-100-add_lxc_br0.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/host-vm-etc-network-interfaces-100-add_lxc_br0.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/host-vm-etc-network-interfaces-100-add_lxc_br0.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,20 @@\n+diff -rupN a/interfaces b/interfaces\n+--- a/interfaces\t2012-06-27 18:06:52.832120820 +0000\n++++ b/interfaces\t2012-06-27 18:07:50.211791421 +0000\n+@@ -5,7 +5,15 @@\n+ auto lo\n+ iface lo inet loopback\n+ \n++# LXC bridge\n++auto br0\n++iface br0 inet dhcp\n++    bridge_ports eth0\n++    bridge_stp off\n++    bridge_fd 0\n++    bridge_maxwait 0\n++\n+ # The primary network interface\n+ auto eth0\n+-iface eth0 inet dhcp\n++iface eth0 inet manual\n+ pre-up sleep 2"
      },
      {
        "sha": "cdc85ab7f35f93fb3b51424102709c808a59db14",
        "filename": "contrib/vagrant/patch/host-vm-etc-sysctl.conf-100-enable_ipv4_forward.patch",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/host-vm-etc-sysctl.conf-100-enable_ipv4_forward.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aac4cfa93d4dae1941ac71233d824da00552069d/contrib/vagrant/patch/host-vm-etc-sysctl.conf-100-enable_ipv4_forward.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/vagrant/patch/host-vm-etc-sysctl.conf-100-enable_ipv4_forward.patch?ref=aac4cfa93d4dae1941ac71233d824da00552069d",
        "patch": "@@ -0,0 +1,12 @@\n+diff -rupN a/sysctl.conf b/sysctl.conf\n+--- a/sysctl.conf\t2012-06-27 21:59:24.588545751 +0000\n++++ b/sysctl.conf\t2012-06-27 21:59:40.640017010 +0000\n+@@ -25,7 +25,7 @@\n+ #net.ipv4.tcp_syncookies=1\n+ \n+ # Uncomment the next line to enable packet forwarding for IPv4\n+-#net.ipv4.ip_forward=1\n++net.ipv4.ip_forward=1\n+ \n+ # Uncomment the next line to enable packet forwarding for IPv6\n+ #  Enabling this option disables Stateless Address Autoconfiguration"
      }
    ]
  }
]