practicalswift,2018-02-26T08:04:57Z,utACK ac68e6d7176c1b24a69559afd1a66b2d04c67dc6,https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-368419417,368419417,
promag,2018-02-26T09:22:00Z,utACK ac68e6d.,https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-368437684,368437684,
ajtowns,2018-02-28T03:58:47Z,"Removed code invokes copy-constructor, and `operator=(uint64_t)`; new code invokes default-constructor and `operator=(base_uint)`. So doesn't seem like an extra `=` operation to me?\n\nShouldn't the fix be committed first, then the tests? Or is having an intermediate commit where the tests fail ok? Looks good to me otherwise though.",https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369113935,369113935,
kallewoof,2018-02-28T04:18:35Z,"@ajtowns I kinda wanted to demonstrate that it fails up until that point, which is why I put the tests before the fix. And yeah, you're right, I forgot I removed one `operator=` so it should be `+/- 0`. :)",https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369116617,369116617,
ajtowns,2018-02-28T20:50:47Z,"@kallewoof I like the idea of demonstrating the test fails before the fix, but still not convinced having the test actually fail (which could mess up attempts to use `git bisect` later, eg) is great. How about:\n\n```\n-BOOST_AUTO_TEST_CASE( operator_with_self )\n+BOOST_AUTO_TEST_CASE( operator_with_self,\n+               *boost::unit_test::expected_failures(1) )\n {\n     arith_uint256 v =",https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369378218,369378218,
promag,2018-02-28T21:46:54Z,I'm also -0 in having broken commits. How about https://docs.travis-ci.com/user/customizing-the-build/#Skipping-a-build?,https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369394288,369394288,
Empact,2018-03-01T00:59:58Z,"Yeah I would just squash the test and fix commits together, it's clear enough how they're related.",https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369438133,369438133,
kallewoof,2018-03-01T02:51:06Z,"The bisect thing makes sense yeah. I swapped the order so the fix comes before the tests.\n\nEdit: @ajtowns Very cool about the expected failures thing. Learned something new. I think just swapping tests is OK though, but may make use of that in the future. :)",https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369457314,369457314,
practicalswift,2018-03-01T07:09:10Z,utACK b120f7bdbee83c00e46a9ec6d0cd09a816631f45,https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369497444,369497444,
laanwj,2018-03-01T14:30:03Z,"> with drawback that *this is set to a at the end, an extra = operation in other words.\n\nCould be extra copying be conditional on `a` being equal to self?\n\nI don't think we rely on the performance of this function in any inner loop, but much of a performance hit are we going to take for functionality that isn't used in the code base?\n\nAn alternative would be to add an assert to forbid ",https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369609063,369609063,
kallewoof,2018-03-01T14:45:35Z,"@laanwj Actually, it turns out this is +/- 0, because I remove `*this = 0` at the top, so it shouldn't cause a performance drop at all.",https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369613928,369613928,
laanwj,2018-03-01T18:16:36Z,"Ok, seems better than preventing it then, utACK https://github.com/bitcoin/bitcoin/commit/b120f7bdbee83c00e46a9ec6d0cd09a816631f45.",https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-369681687,369681687,
ken2812221,2018-03-20T09:52:22Z,utACK b120f7b,https://github.com/bitcoin/bitcoin/pull/12537#issuecomment-374537179,374537179,
