[
  {
    "sha": "06c5ce9714f7090bfb494309980f375975b7a00e",
    "node_id": "C_kwDOABII59oAKDA2YzVjZTk3MTRmNzA5MGJmYjQ5NDMwOTk4MGYzNzU5NzViN2EwMGU",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-07-23T13:11:17Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-09-29T14:13:16Z"
      },
      "message": "Re-include RBF replacement txs in fee estimation\n\nThis effectively reverts de1ae324bf3fb7451c1008a1a9721ff9f469533b.\n\nRBF is now largely in use on the network (signaled for by around 20% of\nall transactions on average) and replacement logic is implemented in\nmost end-user wallets. The rate of replaced transactions is also\nexpected to rise as fee-bumping techniques are being developed for\npre-signed transaction (\"L2\") protocols.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "d0b26fc3edc97af815412c6f3a63a4cd4450eae9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0b26fc3edc97af815412c6f3a63a4cd4450eae9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06c5ce9714f7090bfb494309980f375975b7a00e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmFUdHwACgkQ4T/BRc0/\nQwSrEQv+IZ9ONLZ/FTw23JB7VQKtxYVPf4laS8HvXNlT0YFqycIxTM1psLec52y0\nb28QJLrhPXg8fPTYh7iMW0MXXb9p0/Q6pP9WDFm4Kp7vifJg2dDmmUDfmy46d/iK\nhYFg3CEhU+wDkBnBSL0gJJlov4ggh9btlq0JcAGDlSvZOLIV03k7rjR214oHj5zO\nk6DRU+iBXLmx7teCsoerKw6ukI0wlswAyS/gvR3Jh1e8rkmw/DLqkTQbB7S4noSn\nA5ONB3mHbn7gYaJbjkHNGScdMirX+P/9rTN75olqnxLM/wLqlZbP/xHixY3YdKaR\nXPFiiZBdV54rCN3ZDuHgpIFGrJ9KzBIUIbHbphhhm9nVPcbicdMNtwNQkcEKkrWB\nQLQ7Zcuv6ogln8hpabmtS7lqRWx08p/EHcGyv8OSQYPdTcxSHnIlEohfqAcx7Tze\ngEdJZyHVNbpL6GG+is2bGYapCxEhh+IH1YVnLtqC9k59f5c3nRG2ZFRfdALIJ4NT\nEpn8TDJp\n=1rzY\n-----END PGP SIGNATURE-----",
        "payload": "tree d0b26fc3edc97af815412c6f3a63a4cd4450eae9\nparent ad47fb8b6461333607ffed2bf549d133fd6de659\nauthor Antoine Poinsot <darosior@protonmail.com> 1627045877 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1632924796 +0200\n\nRe-include RBF replacement txs in fee estimation\n\nThis effectively reverts de1ae324bf3fb7451c1008a1a9721ff9f469533b.\n\nRBF is now largely in use on the network (signaled for by around 20% of\nall transactions on average) and replacement logic is implemented in\nmost end-user wallets. The rate of replaced transactions is also\nexpected to rise as fee-bumping techniques are being developed for\npre-signed transaction (\"L2\") protocols.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06c5ce9714f7090bfb494309980f375975b7a00e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06c5ce9714f7090bfb494309980f375975b7a00e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06c5ce9714f7090bfb494309980f375975b7a00e/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad47fb8b6461333607ffed2bf549d133fd6de659",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad47fb8b6461333607ffed2bf549d133fd6de659",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad47fb8b6461333607ffed2bf549d133fd6de659"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 2,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a1144b9cce0de5bc8797b12949c7422363e4ca79",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c5ce9714f7090bfb494309980f375975b7a00e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c5ce9714f7090bfb494309980f375975b7a00e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=06c5ce9714f7090bfb494309980f375975b7a00e",
        "patch": "@@ -473,7 +473,6 @@ class MemPoolAccept\n         std::unique_ptr<CTxMemPoolEntry> m_entry;\n         std::list<CTransactionRef> m_replaced_transactions;\n \n-        bool m_replacement_transaction;\n         CAmount m_base_fees;\n         CAmount m_modified_fees;\n         /** Total modified fees of all transactions being replaced. */\n@@ -555,7 +554,6 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     CTxMemPool::setEntries& allConflicting = ws.m_all_conflicting;\n     CTxMemPool::setEntries& setAncestors = ws.m_ancestors;\n     std::unique_ptr<CTxMemPoolEntry>& entry = ws.m_entry;\n-    bool& fReplacementTransaction = ws.m_replacement_transaction;\n     CAmount& nModifiedFees = ws.m_modified_fees;\n     CAmount& nConflictingFees = ws.m_conflicting_fees;\n     size_t& nConflictingSize = ws.m_conflicting_size;\n@@ -778,8 +776,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n \n-    fReplacementTransaction = setConflicts.size();\n-    if (fReplacementTransaction) {\n+    if (!setConflicts.empty()) {\n         CFeeRate newFeeRate(nModifiedFees, nSize);\n         // It's possible that the replacement pays more fees than its direct conflicts but not more\n         // than all conflicts (i.e. the direct conflicts have high-fee descendants). However, if the\n@@ -884,7 +881,6 @@ bool MemPoolAccept::Finalize(const ATMPArgs& args, Workspace& ws)\n     const CAmount& nModifiedFees = ws.m_modified_fees;\n     const CAmount& nConflictingFees = ws.m_conflicting_fees;\n     const size_t& nConflictingSize = ws.m_conflicting_size;\n-    const bool fReplacementTransaction = ws.m_replacement_transaction;\n     std::unique_ptr<CTxMemPoolEntry>& entry = ws.m_entry;\n \n     // Remove conflicting transactions from the mempool\n@@ -900,11 +896,10 @@ bool MemPoolAccept::Finalize(const ATMPArgs& args, Workspace& ws)\n     m_pool.RemoveStaged(allConflicting, false, MemPoolRemovalReason::REPLACED);\n \n     // This transaction should only count for fee estimation if:\n-    // - it isn't a BIP 125 replacement transaction (may not be widely supported)\n     // - it's not being re-added during a reorg which bypasses typical mempool fee limits\n     // - the node is not behind\n     // - the transaction is not dependent on any other transactions in the mempool\n-    bool validForFeeEstimation = !fReplacementTransaction && !bypass_limits && IsCurrentForFeeEstimation(m_active_chainstate) && m_pool.HasNoInputsOf(tx);\n+    bool validForFeeEstimation = !bypass_limits && IsCurrentForFeeEstimation(m_active_chainstate) && m_pool.HasNoInputsOf(tx);\n \n     // Store transaction in memory\n     m_pool.addUnchecked(*entry, setAncestors, validForFeeEstimation);"
      }
    ]
  },
  {
    "sha": "053415b297b8665f2d2c4dce7c2c54bcc5298ef4",
    "node_id": "C_kwDOABII59oAKDA1MzQxNWIyOTdiODY2NWYyZDJjNGRjZTdjMmM1NGJjYzUyOThlZjQ",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-09-21T10:44:41Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-09-29T15:15:18Z"
      },
      "message": "qa: split run_test into smaller parts\n\nLet's not have run_test get into a giant function as we add more tests\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "8fd47da416d34436083d95633c9a786f3f537bab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8fd47da416d34436083d95633c9a786f3f537bab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/053415b297b8665f2d2c4dce7c2c54bcc5298ef4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmFUgwsACgkQ4T/BRc0/\nQwSkZAwAjsmX1+uCrWqKR/YF/PwSIMCdahLh2F2PlzvS2c5wfqngWusBBTl8QsgV\nq9Rd+1DBfw4HB40flBTJP40TwsD/R9XGV+s0VKn0cetQH6bPfYK0wooTnQsZgEsJ\nITADfEGt5D3r1Rq/C3LAnWq5BM2cqJ7pOm8k9v41ADtEdYhL9D2iouo+XPioCdc5\npYdB/pS1STZDzoBMo10O+qj+Om7qckU7588I5F3yZg01hZQx7AZfJkHMRkLqAoEx\nk7mEdcRiRV4cInYhKeY15YMO5C0mbmVLvg7vFl1h7GT9uGg04vPFjVryrZ3mssHk\nSI10Nf4vJ26cVbn1MMSKA/cZEU4wndyvr4B8YkJQMiK5c3/wnvi+lmew+kFOMRUz\n3ochPju4ifzm3k1W5//ENRWAgwUVmMineAmnXTVKAMcW9pwJd2GSSnWbbFxvUBov\nil8KDmeZ+K3TQMYbSrkYQ9b2PHiMNCtOcR7vaoMmaRYPmuXQ2YLY7ucJAZ9FWX6C\nd+mBTwHw\n=EsmA\n-----END PGP SIGNATURE-----",
        "payload": "tree 8fd47da416d34436083d95633c9a786f3f537bab\nparent 06c5ce9714f7090bfb494309980f375975b7a00e\nauthor Antoine Poinsot <darosior@protonmail.com> 1632221081 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1632928518 +0200\n\nqa: split run_test into smaller parts\n\nLet's not have run_test get into a giant function as we add more tests\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/053415b297b8665f2d2c4dce7c2c54bcc5298ef4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/053415b297b8665f2d2c4dce7c2c54bcc5298ef4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/053415b297b8665f2d2c4dce7c2c54bcc5298ef4/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06c5ce9714f7090bfb494309980f375975b7a00e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06c5ce9714f7090bfb494309980f375975b7a00e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06c5ce9714f7090bfb494309980f375975b7a00e"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 40,
      "deletions": 28
    },
    "files": [
      {
        "sha": "613ed41654b8602ae6acea4b6867f656d44c5afc",
        "filename": "test/functional/feature_fee_estimation.py",
        "status": "modified",
        "additions": 40,
        "deletions": 28,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/053415b297b8665f2d2c4dce7c2c54bcc5298ef4/test/functional/feature_fee_estimation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/053415b297b8665f2d2c4dce7c2c54bcc5298ef4/test/functional/feature_fee_estimation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_fee_estimation.py?ref=053415b297b8665f2d2c4dce7c2c54bcc5298ef4",
        "patch": "@@ -212,48 +212,36 @@ def transact_and_mine(self, numblocks, mining_node):\n                     newmem.append(utx)\n             self.memutxo = newmem\n \n-    def run_test(self):\n-        self.log.info(\"This test is time consuming, please be patient\")\n-        self.log.info(\"Splitting inputs so we can generate tx's\")\n-\n-        # Start node0\n-        self.start_node(0)\n+    def initial_split(self, node):\n+        \"\"\"Split two coinbase UTxOs into many small coins\"\"\"\n         self.txouts = []\n         self.txouts2 = []\n         # Split a coinbase into two transaction puzzle outputs\n-        split_inputs(self.nodes[0], self.nodes[0].listunspent(0), self.txouts, True)\n+        split_inputs(node, node.listunspent(0), self.txouts, True)\n \n         # Mine\n-        while len(self.nodes[0].getrawmempool()) > 0:\n-            self.generate(self.nodes[0], 1)\n+        while len(node.getrawmempool()) > 0:\n+            self.generate(node, 1)\n \n         # Repeatedly split those 2 outputs, doubling twice for each rep\n         # Use txouts to monitor the available utxo, since these won't be tracked in wallet\n         reps = 0\n         while reps < 5:\n             # Double txouts to txouts2\n             while len(self.txouts) > 0:\n-                split_inputs(self.nodes[0], self.txouts, self.txouts2)\n-            while len(self.nodes[0].getrawmempool()) > 0:\n-                self.generate(self.nodes[0], 1)\n+                split_inputs(node, self.txouts, self.txouts2)\n+            while len(node.getrawmempool()) > 0:\n+                self.generate(node, 1)\n             # Double txouts2 to txouts\n             while len(self.txouts2) > 0:\n-                split_inputs(self.nodes[0], self.txouts2, self.txouts)\n-            while len(self.nodes[0].getrawmempool()) > 0:\n-                self.generate(self.nodes[0], 1)\n+                split_inputs(node, self.txouts2, self.txouts)\n+            while len(node.getrawmempool()) > 0:\n+                self.generate(node, 1)\n             reps += 1\n-        self.log.info(\"Finished splitting\")\n-\n-        # Now we can connect the other nodes, didn't want to connect them earlier\n-        # so the estimates would not be affected by the splitting transactions\n-        self.start_node(1)\n-        self.start_node(2)\n-        self.connect_nodes(1, 0)\n-        self.connect_nodes(0, 2)\n-        self.connect_nodes(2, 1)\n-\n-        self.sync_all()\n \n+    def sanity_check_estimates_range(self):\n+        \"\"\"Populate estimation buckets, assert estimates are in a sane range and\n+        are strictly increasing as the target decreases.\"\"\"\n         self.fees_per_kb = []\n         self.memutxo = []\n         self.confutxo = self.txouts  # Start with the set of confirmed txouts after splitting\n@@ -279,12 +267,36 @@ def run_test(self):\n         self.log.info(\"Final estimates after emptying mempools\")\n         check_estimates(self.nodes[1], self.fees_per_kb)\n \n-        # check that the effective feerate is greater than or equal to the mempoolminfee even for high mempoolminfee\n-        self.log.info(\"Test fee rate estimation after restarting node with high MempoolMinFee\")\n+    def test_feerate_mempoolminfee(self):\n         high_val = 3*self.nodes[1].estimatesmartfee(1)['feerate']\n         self.restart_node(1, extra_args=[f'-minrelaytxfee={high_val}'])\n         check_estimates(self.nodes[1], self.fees_per_kb)\n \n+    def run_test(self):\n+        self.log.info(\"This test is time consuming, please be patient\")\n+        self.log.info(\"Splitting inputs so we can generate tx's\")\n+\n+        # Split two coinbases into many small utxos\n+        self.start_node(0)\n+        self.initial_split(self.nodes[0])\n+        self.log.info(\"Finished splitting\")\n+\n+        # Now we can connect the other nodes, didn't want to connect them earlier\n+        # so the estimates would not be affected by the splitting transactions\n+        self.start_node(1)\n+        self.start_node(2)\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(2, 1)\n+        self.sync_all()\n+\n+        self.log.info(\"Testing estimates with single transactions.\")\n+        self.sanity_check_estimates_range()\n+\n+        # check that the effective feerate is greater than or equal to the mempoolminfee even for high mempoolminfee\n+        self.log.info(\"Test fee rate estimation after restarting node with high MempoolMinFee\")\n+        self.test_feerate_mempoolminfee()\n+\n         self.log.info(\"Testing that fee estimation is disabled in blocksonly.\")\n         self.restart_node(0, [\"-blocksonly\"])\n         assert_raises_rpc_error(-32603, \"Fee estimation disabled\","
      }
    ]
  },
  {
    "sha": "45564065627ada5dfadff13bc32bc672a4edf152",
    "node_id": "C_kwDOABII59oAKDQ1NTY0MDY1NjI3YWRhNWRmYWRmZjEzYmMzMmJjNjcyYTRlZGYxNTI",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-09-21T13:12:42Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-09-29T15:24:28Z"
      },
      "message": "qa: test fee estimation with replacement transactions\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "3104e24193a374f431ac29bc9b5af3a3584b1aac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3104e24193a374f431ac29bc9b5af3a3584b1aac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45564065627ada5dfadff13bc32bc672a4edf152",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmFUhS0ACgkQ4T/BRc0/\nQwReTAv+JiKaA9KxVUtGg+ITcyWZgUt/7w2xwtHZte1EjSUJVd5XVxRPlxeEexo4\nt8UZTUcpTUe5kH1VtVHrFvDesExddP0m8RNAf/10keK26HtB8kVsx7KTDczwiuBG\n4GPzRajhiDYqVD3iLskcYDUnNbVZ1+UPRUieQifRnk1emq/iSE2LkPz/LaaM516D\nW4Jyi/PtwIQ5Yh2md5cJFr71gfpk71raGG2xWpByiDzE4Gj4PUaGg3sWpdXvbm5U\nTO2KRyOCLBVA90rmKTLLPxOq+uAKKpUrsZaK+T6D/9B5CwnLpX9dcHuP+yDunuCJ\nJIT7AUmMtgr3KY8uvpo4exbl9Sr+nd3IhIKY7ezUZLcuSeyDy2nLlgyN5fnd0H43\nPw+tGgt0H2GgPXCT2LRfULxK7Eg8UuFiuBxUgVXFK3zreVkjtCSeXBFMU6JrvzA1\nuuBfFIZitc2E9BRlGz9qZ+5dLveN7A/bLo0JvnmGba2IV6N4SjneafN0rMDvVHRu\nNQYoh0Zy\n=syS8\n-----END PGP SIGNATURE-----",
        "payload": "tree 3104e24193a374f431ac29bc9b5af3a3584b1aac\nparent 053415b297b8665f2d2c4dce7c2c54bcc5298ef4\nauthor Antoine Poinsot <darosior@protonmail.com> 1632229962 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1632929068 +0200\n\nqa: test fee estimation with replacement transactions\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45564065627ada5dfadff13bc32bc672a4edf152",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/45564065627ada5dfadff13bc32bc672a4edf152",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45564065627ada5dfadff13bc32bc672a4edf152/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "053415b297b8665f2d2c4dce7c2c54bcc5298ef4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/053415b297b8665f2d2c4dce7c2c54bcc5298ef4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/053415b297b8665f2d2c4dce7c2c54bcc5298ef4"
      }
    ],
    "stats": {
      "total": 81,
      "additions": 81,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ac00db8ff0ad107ed23ff8ca12776a0630840391",
        "filename": "test/functional/feature_fee_estimation.py",
        "status": "modified",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45564065627ada5dfadff13bc32bc672a4edf152/test/functional/feature_fee_estimation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45564065627ada5dfadff13bc32bc672a4edf152/test/functional/feature_fee_estimation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_fee_estimation.py?ref=45564065627ada5dfadff13bc32bc672a4edf152",
        "patch": "@@ -4,6 +4,7 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test fee estimation code.\"\"\"\n from decimal import Decimal\n+import os\n import random\n \n from test_framework.messages import (\n@@ -155,6 +156,21 @@ def check_estimates(node, fees_seen):\n     check_raw_estimates(node, fees_seen)\n     check_smart_estimates(node, fees_seen)\n \n+\n+def send_tx(node, utxo, feerate):\n+    \"\"\"Broadcast a 1in-1out transaction with a specific input and feerate (sat/vb).\"\"\"\n+    overhead, op, scriptsig, nseq, value, spk = 10, 36, 5, 4, 8, 24\n+    tx_size = overhead + op + scriptsig + nseq + value + spk\n+    fee = tx_size * feerate\n+\n+    tx = CTransaction()\n+    tx.vin = [CTxIn(COutPoint(int(utxo[\"txid\"], 16), utxo[\"vout\"]), SCRIPT_SIG[utxo[\"vout\"]])]\n+    tx.vout = [CTxOut(int(utxo[\"amount\"] * COIN) - fee, P2SH_1)]\n+    txid = node.sendrawtransaction(tx.serialize().hex())\n+\n+    return txid\n+\n+\n class EstimateFeeTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 3\n@@ -271,6 +287,60 @@ def test_feerate_mempoolminfee(self):\n         high_val = 3*self.nodes[1].estimatesmartfee(1)['feerate']\n         self.restart_node(1, extra_args=[f'-minrelaytxfee={high_val}'])\n         check_estimates(self.nodes[1], self.fees_per_kb)\n+        self.restart_node(1)\n+\n+    def sanity_check_rbf_estimates(self, utxos):\n+        \"\"\"During 5 blocks, broadcast low fee transactions. Only 10% of them get\n+        confirmed and the remaining ones get RBF'd with a high fee transaction at\n+        the next block.\n+        The block policy estimator should return the high feerate.\n+        \"\"\"\n+        # The broadcaster and block producer\n+        node = self.nodes[0]\n+        miner = self.nodes[1]\n+        # In sat/vb\n+        low_feerate = 1\n+        high_feerate = 10\n+        # Cache the utxos of which to replace the spender after it failed to get\n+        # confirmed\n+        utxos_to_respend = []\n+        txids_to_replace = []\n+\n+        assert len(utxos) >= 250\n+        for _ in range(5):\n+            # Broadcast 45 low fee transactions that will need to be RBF'd\n+            for _ in range(45):\n+                u = utxos.pop(0)\n+                txid = send_tx(node, u, low_feerate)\n+                utxos_to_respend.append(u)\n+                txids_to_replace.append(txid)\n+            # Broadcast 5 low fee transaction which don't need to\n+            for _ in range(5):\n+                send_tx(node, utxos.pop(0), low_feerate)\n+            # Mine the transactions on another node\n+            self.sync_mempools(wait=.1, nodes=[node, miner])\n+            for txid in txids_to_replace:\n+                miner.prioritisetransaction(txid=txid, fee_delta=-COIN)\n+            self.generate(miner, 1)\n+            self.sync_blocks(wait=.1, nodes=[node, miner])\n+            # RBF the low-fee transactions\n+            while True:\n+                try:\n+                    u = utxos_to_respend.pop(0)\n+                    send_tx(node, u, high_feerate)\n+                except IndexError:\n+                    break\n+\n+        # Mine the last replacement txs\n+        self.sync_mempools(wait=.1, nodes=[node, miner])\n+        self.generate(miner, 1)\n+        self.sync_blocks(wait=.1, nodes=[node, miner])\n+\n+        # Only 10% of the transactions were really confirmed with a low feerate,\n+        # the rest needed to be RBF'd. We must return the 90% conf rate feerate.\n+        high_feerate_kvb = Decimal(high_feerate) / COIN * 10**3\n+        est_feerate = node.estimatesmartfee(2)[\"feerate\"]\n+        assert est_feerate == high_feerate_kvb\n \n     def run_test(self):\n         self.log.info(\"This test is time consuming, please be patient\")\n@@ -297,6 +367,17 @@ def run_test(self):\n         self.log.info(\"Test fee rate estimation after restarting node with high MempoolMinFee\")\n         self.test_feerate_mempoolminfee()\n \n+        self.log.info(\"Restarting node with fresh estimation\")\n+        self.stop_node(0)\n+        fee_dat = os.path.join(self.nodes[0].datadir, self.chain, \"fee_estimates.dat\")\n+        os.remove(fee_dat)\n+        self.start_node(0)\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.log.info(\"Testing estimates with RBF.\")\n+        self.sanity_check_rbf_estimates(self.confutxo + self.memutxo)\n+\n         self.log.info(\"Testing that fee estimation is disabled in blocksonly.\")\n         self.restart_node(0, [\"-blocksonly\"])\n         assert_raises_rpc_error(-32603, \"Fee estimation disabled\","
      }
    ]
  },
  {
    "sha": "3b613722f6b895d7b268b3f878fddfc888381226",
    "node_id": "C_kwDOABII59oAKDNiNjEzNzIyZjZiODk1ZDdiMjY4YjNmODc4ZmRkZmM4ODgzODEyMjY",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-09-24T13:16:31Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2021-09-29T15:24:30Z"
      },
      "message": "Add release notes for fee est with replacement txs\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "9944d5286a4865c12a99e17c2dcafebb0b6a882c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9944d5286a4865c12a99e17c2dcafebb0b6a882c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b613722f6b895d7b268b3f878fddfc888381226",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmFUhS4ACgkQ4T/BRc0/\nQwTmzwwAmTaQkFXcU/aHSLPBQkFgKQdsurBYPFDNWzae2gNJqJod8bcUE1mAvIcg\nQmcvcghzaCNfpUKjcavnZQMx5pyq+Zi8iJg8dPbT6m1rNvyiUExlxs3K8MdgUCZ5\ni0PMqclhiQwUQA8DP5ezaejpuWW3y6HA2XtMQHPoiC8dy62xanNXH4dFm3yWt/7i\nrlvCZpOuJjgo4jD+skBmJfdvXET/1EAJXEbjoapyMQNL7rjDwarjmjwGx/A78O5l\nNeE9YN1PVUDKXK9zXDt+s4cLpEV6srweFDBL9+Bi6AfzCMltBwT9MlXiC01IixES\ncsUWCsGMfzcU1xLG4UK2ajpzri+5abNoEj2k2K+PWUGWBgdvSy7WrHDb2d8RyaV9\nGoFJrQpsI/Z//iu7qo+1jx8Is3LTbxtjJokyKd1TOQ7Fjijt0CpkcY5Zsg5ZRS64\ntjhia4WG86/zYHytguTn3DJfHiS36lnctjA5J7gAwVKLUHFSrie6whRkz4h5j0xG\nwJsOJH+M\n=k2KG\n-----END PGP SIGNATURE-----",
        "payload": "tree 9944d5286a4865c12a99e17c2dcafebb0b6a882c\nparent 45564065627ada5dfadff13bc32bc672a4edf152\nauthor Antoine Poinsot <darosior@protonmail.com> 1632489391 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1632929070 +0200\n\nAdd release notes for fee est with replacement txs\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b613722f6b895d7b268b3f878fddfc888381226",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b613722f6b895d7b268b3f878fddfc888381226",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b613722f6b895d7b268b3f878fddfc888381226/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "45564065627ada5dfadff13bc32bc672a4edf152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45564065627ada5dfadff13bc32bc672a4edf152",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45564065627ada5dfadff13bc32bc672a4edf152"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9f5607145198945f9dc76b870018ed4da41781e6",
        "filename": "doc/release-notes-22539.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b613722f6b895d7b268b3f878fddfc888381226/doc/release-notes-22539.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b613722f6b895d7b268b3f878fddfc888381226/doc/release-notes-22539.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-22539.md?ref=3b613722f6b895d7b268b3f878fddfc888381226",
        "patch": "@@ -0,0 +1,8 @@\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- Fee estimation now takes the feerate of replacement (RBF) transactions into\n+  account."
      }
    ]
  }
]