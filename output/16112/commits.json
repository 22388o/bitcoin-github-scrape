[
  {
    "sha": "412987430c98e78ccda033ab1cf7a176a4c0b835",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTI5ODc0MzBjOThlNzhjY2RhMDMzYWIxY2Y3YTE3NmE0YzBiODM1",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-05-03T00:14:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-28T18:26:06Z"
      },
      "message": "Replace OpenDebugLog() with StartLogging()\n\nStartLogging() is used to mark the start of logging generically, whether\nusing -printtoconsole or -debuglogfile.",
      "tree": {
        "sha": "5803f80fad55ff4262cd17a15c288980456a6fa6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5803f80fad55ff4262cd17a15c288980456a6fa6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/412987430c98e78ccda033ab1cf7a176a4c0b835",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/412987430c98e78ccda033ab1cf7a176a4c0b835",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/412987430c98e78ccda033ab1cf7a176a4c0b835",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/412987430c98e78ccda033ab1cf7a176a4c0b835/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ab4f282c06d67074b872dbda0be37636fdd5186",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ab4f282c06d67074b872dbda0be37636fdd5186",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ab4f282c06d67074b872dbda0be37636fdd5186"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "fdfde689f9b968f33e75fb404b6f2b56384864b5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/412987430c98e78ccda033ab1cf7a176a4c0b835/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/412987430c98e78ccda033ab1cf7a176a4c0b835/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=412987430c98e78ccda033ab1cf7a176a4c0b835",
        "patch": "@@ -1249,10 +1249,10 @@ bool AppInitMain(InitInterfaces& interfaces)\n             // and because this needs to happen before any other debug.log printing\n             LogInstance().ShrinkDebugFile();\n         }\n-        if (!LogInstance().OpenDebugLog()) {\n+    }\n+    if (!LogInstance().StartLogging()) {\n             return InitError(strprintf(\"Could not open debug log file %s\",\n                 LogInstance().m_file_path.string()));\n-        }\n     }\n \n     if (!LogInstance().m_log_timestamps)"
      },
      {
        "sha": "f9d9d9c56bed2f5e6ef3e3b2d6506ad6cafc61a6",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/412987430c98e78ccda033ab1cf7a176a4c0b835/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/412987430c98e78ccda033ab1cf7a176a4c0b835/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=412987430c98e78ccda033ab1cf7a176a4c0b835",
        "patch": "@@ -39,9 +39,10 @@ static int FileWriteStr(const std::string &str, FILE *fp)\n     return fwrite(str.data(), 1, str.size(), fp);\n }\n \n-bool BCLog::Logger::OpenDebugLog()\n+bool BCLog::Logger::StartLogging()\n {\n     std::lock_guard<std::mutex> scoped_lock(m_file_mutex);\n+    if (!m_print_to_file) return true;\n \n     assert(m_fileout == nullptr);\n     assert(!m_file_path.empty());"
      },
      {
        "sha": "4fa9e0c8a47c286a528491c90fd393e1c3a56e03",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/412987430c98e78ccda033ab1cf7a176a4c0b835/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/412987430c98e78ccda033ab1cf7a176a4c0b835/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=412987430c98e78ccda033ab1cf7a176a4c0b835",
        "patch": "@@ -93,7 +93,7 @@ namespace BCLog {\n         /** Returns whether logs will be written to any output */\n         bool Enabled() const { return m_print_to_console || m_print_to_file; }\n \n-        bool OpenDebugLog();\n+        bool StartLogging();\n         void ShrinkDebugFile();\n \n         uint32_t GetCategoryMask() const { return m_categories.load(); }"
      }
    ]
  },
  {
    "sha": "0b282f9b00da08734e2381477aad32d64b933745",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjI4MmY5YjAwZGEwODczNGUyMzgxNDc3YWFkMzJkNjRiOTMzNzQ1",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2018-05-03T01:09:28Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-28T18:26:42Z"
      },
      "message": "Log early messages with -printtoconsole\n\nThis ensures log messages prior to StartLogging() are replayed to\nthe console as well as to the debug log file.",
      "tree": {
        "sha": "ecc2d8957a556773296dbde794f5f330c4d3f5cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ecc2d8957a556773296dbde794f5f330c4d3f5cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b282f9b00da08734e2381477aad32d64b933745",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b282f9b00da08734e2381477aad32d64b933745",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b282f9b00da08734e2381477aad32d64b933745",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b282f9b00da08734e2381477aad32d64b933745/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "412987430c98e78ccda033ab1cf7a176a4c0b835",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/412987430c98e78ccda033ab1cf7a176a4c0b835",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/412987430c98e78ccda033ab1cf7a176a4c0b835"
      }
    ],
    "stats": {
      "total": 81,
      "additions": 49,
      "deletions": 32
    },
    "files": [
      {
        "sha": "9245d5e593e5faa9ee655aad3abd1139350f425f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b282f9b00da08734e2381477aad32d64b933745/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b282f9b00da08734e2381477aad32d64b933745/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=0b282f9b00da08734e2381477aad32d64b933745",
        "patch": "@@ -855,12 +855,6 @@ void InitLogging()\n {\n     LogInstance().m_print_to_file = !gArgs.IsArgNegated(\"-debuglogfile\");\n     LogInstance().m_file_path = AbsPathForConfigVal(gArgs.GetArg(\"-debuglogfile\", DEFAULT_DEBUGLOGFILE));\n-\n-    // Add newlines to the logfile to distinguish this execution from the last\n-    // one; called before console logging is set up, so this is only sent to\n-    // debug.log.\n-    LogPrintf(\"\\n\\n\\n\\n\\n\");\n-\n     LogInstance().m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", !gArgs.GetBoolArg(\"-daemon\", false));\n     LogInstance().m_log_timestamps = gArgs.GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n     LogInstance().m_log_time_micros = gArgs.GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);"
      },
      {
        "sha": "268614065ac2beb8374047b32ac0ab02636cef10",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 25,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b282f9b00da08734e2381477aad32d64b933745/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b282f9b00da08734e2381477aad32d64b933745/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=0b282f9b00da08734e2381477aad32d64b933745",
        "patch": "@@ -42,22 +42,35 @@ static int FileWriteStr(const std::string &str, FILE *fp)\n bool BCLog::Logger::StartLogging()\n {\n     std::lock_guard<std::mutex> scoped_lock(m_file_mutex);\n-    if (!m_print_to_file) return true;\n \n+    assert(m_buffering);\n     assert(m_fileout == nullptr);\n-    assert(!m_file_path.empty());\n \n-    m_fileout = fsbridge::fopen(m_file_path, \"a\");\n-    if (!m_fileout) {\n-        return false;\n+    if (m_print_to_file) {\n+        assert(!m_file_path.empty());\n+        m_fileout = fsbridge::fopen(m_file_path, \"a\");\n+        if (!m_fileout) {\n+            return false;\n+        }\n+\n+        setbuf(m_fileout, nullptr); // unbuffered\n+\n+        // Add newlines to the logfile to distinguish this execution from the\n+        // last one.\n+        FileWriteStr(\"\\n\\n\\n\\n\\n\", m_fileout);\n     }\n \n-    setbuf(m_fileout, nullptr); // unbuffered\n     // dump buffered messages from before we opened the log\n+    m_buffering = false;\n     while (!m_msgs_before_open.empty()) {\n-        FileWriteStr(m_msgs_before_open.front(), m_fileout);\n+        const std::string& s = m_msgs_before_open.front();\n+\n+        if (m_print_to_file) FileWriteStr(s, m_fileout);\n+        if (m_print_to_console) fwrite(s.data(), 1, s.size(), stdout);\n+\n         m_msgs_before_open.pop_front();\n     }\n+    if (m_print_to_console) fflush(stdout);\n \n     return true;\n }\n@@ -205,6 +218,7 @@ std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n \n void BCLog::Logger::LogPrintStr(const std::string &str)\n {\n+    std::lock_guard<std::mutex> scoped_lock(m_file_mutex);\n     std::string str_prefixed = str;\n \n     if (m_log_threadnames && m_started_new_line) {\n@@ -215,32 +229,31 @@ void BCLog::Logger::LogPrintStr(const std::string &str)\n \n     m_started_new_line = !str.empty() && str[str.size()-1] == '\\n';\n \n+    if (m_buffering) {\n+        // buffer if we haven't started logging yet\n+        m_msgs_before_open.push_back(str_prefixed);\n+        return;\n+    }\n+\n     if (m_print_to_console) {\n         // print to console\n         fwrite(str_prefixed.data(), 1, str_prefixed.size(), stdout);\n         fflush(stdout);\n     }\n     if (m_print_to_file) {\n-        std::lock_guard<std::mutex> scoped_lock(m_file_mutex);\n-\n-        // buffer if we haven't opened the log yet\n-        if (m_fileout == nullptr) {\n-            m_msgs_before_open.push_back(str_prefixed);\n-        }\n-        else\n-        {\n-            // reopen the log file, if requested\n-            if (m_reopen_file) {\n-                m_reopen_file = false;\n-                FILE* new_fileout = fsbridge::fopen(m_file_path, \"a\");\n-                if (new_fileout) {\n-                    setbuf(new_fileout, nullptr); // unbuffered\n-                    fclose(m_fileout);\n-                    m_fileout = new_fileout;\n-                }\n+        assert(m_fileout != nullptr);\n+\n+        // reopen the log file, if requested\n+        if (m_reopen_file) {\n+            m_reopen_file = false;\n+            FILE* new_fileout = fsbridge::fopen(m_file_path, \"a\");\n+            if (new_fileout) {\n+                setbuf(new_fileout, nullptr); // unbuffered\n+                fclose(m_fileout);\n+                m_fileout = new_fileout;\n             }\n-            FileWriteStr(str_prefixed, m_fileout);\n         }\n+        FileWriteStr(str_prefixed, m_fileout);\n     }\n }\n "
      },
      {
        "sha": "f40a10bc4c138ae834ec549448af7add97bdb0b4",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b282f9b00da08734e2381477aad32d64b933745/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b282f9b00da08734e2381477aad32d64b933745/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=0b282f9b00da08734e2381477aad32d64b933745",
        "patch": "@@ -63,6 +63,7 @@ namespace BCLog {\n         FILE* m_fileout = nullptr;\n         std::mutex m_file_mutex;\n         std::list<std::string> m_msgs_before_open;\n+        bool m_buffering = true; //!< Buffer messages before logging can be started\n \n         /**\n          * m_started_new_line is a state variable that will suppress printing of\n@@ -91,9 +92,11 @@ namespace BCLog {\n         void LogPrintStr(const std::string &str);\n \n         /** Returns whether logs will be written to any output */\n-        bool Enabled() const { return m_print_to_console || m_print_to_file; }\n+        bool Enabled() const { return m_buffering || m_print_to_console || m_print_to_file; }\n \n+        /** Start logging (and flush all buffered messages) */\n         bool StartLogging();\n+\n         void ShrinkDebugFile();\n \n         uint32_t GetCategoryMask() const { return m_categories.load(); }"
      },
      {
        "sha": "074a83259423a167712ad90e0d068deaa80c796c",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b282f9b00da08734e2381477aad32d64b933745/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b282f9b00da08734e2381477aad32d64b933745/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=0b282f9b00da08734e2381477aad32d64b933745",
        "patch": "@@ -61,9 +61,16 @@ def test_config_file_parser(self):\n         with open(inc_conf_file2_path, 'w', encoding='utf-8') as conf:\n             conf.write('')  # clear\n \n+    def test_log_buffer(self):\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Warning: parsed potentially confusing double-negative -connect=0']):\n+            self.start_node(0, extra_args=['-noconnect=0'])\n+        self.stop_node(0)\n+\n     def run_test(self):\n         self.stop_node(0)\n \n+        self.test_log_buffer()\n+\n         self.test_config_file_parser()\n \n         # Remove the -datadir argument so it doesn't override the config file"
      }
    ]
  },
  {
    "sha": "faa2a47cd7bcdbd187035c76f8dbd0442f6818dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWEyYTQ3Y2Q3YmNkYmQxODcwMzVjNzZmOGRiZDA0NDJmNjgxOGRj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-28T14:39:29Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-28T18:27:08Z"
      },
      "message": "logging: Add threadsafety comments",
      "tree": {
        "sha": "55d94c93f37e77734e8c0b50ccd6c9419fc59dc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55d94c93f37e77734e8c0b50ccd6c9419fc59dc2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa2a47cd7bcdbd187035c76f8dbd0442f6818dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgC/wv8DBX5jTS7erZG3aPIHV1szpZ1HJVmOupGBmMUT1sJqPZlrZe0gYovY1dv\nLDM5RNbKXr/Z+4fS8kFUWOEWNHbYm65jkJLJkqh364p2sCmPSQ8Y+JrwhS9or1kJ\nGEFZEIOkLRC1HTUpG4tA1DQH3rFwVnv2zjDkUMJDTF7GPm2Ih+LrZWs4mkkvQ5FF\nZerdr9BexVkS7eqHXHIVsCw7gcP9R2fZ6uiQzdjYZSXWm28VQZb3ao4BxGZGE+i6\n0QlCnzHvlYcuzwjxV+VbLTjpOpL8sH0Wc/Ah1YaCes6/PSS5plR3NOLLuue/xYVG\nPhLIPWo4J7HdG28RKrpRzVMKf5Km0+eht4e37RxLxSGhMSViM+9gwkQV+fMjvX/4\nlXhqRBvEk4Xb41me88xqb7QdbMriULcY+1U49bIPY4yt7OjHTivriQzglDJKQiH8\nxL/JpVVoGIUzdaKU893t92s46dBBNGnop1U+PTiitV/RU2PILp4bDLjLBUX1qv1G\nElAfr9yF\n=+MLQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 55d94c93f37e77734e8c0b50ccd6c9419fc59dc2\nparent 0b282f9b00da08734e2381477aad32d64b933745\nauthor MarcoFalke <falke.marco@gmail.com> 1559054369 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1559068028 -0400\n\nlogging: Add threadsafety comments\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa2a47cd7bcdbd187035c76f8dbd0442f6818dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faa2a47cd7bcdbd187035c76f8dbd0442f6818dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa2a47cd7bcdbd187035c76f8dbd0442f6818dc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b282f9b00da08734e2381477aad32d64b933745",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b282f9b00da08734e2381477aad32d64b933745",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b282f9b00da08734e2381477aad32d64b933745"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 13,
      "deletions": 9
    },
    "files": [
      {
        "sha": "418a70117931cd57343f74ca663477eebbfa7f20",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa2a47cd7bcdbd187035c76f8dbd0442f6818dc/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa2a47cd7bcdbd187035c76f8dbd0442f6818dc/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=faa2a47cd7bcdbd187035c76f8dbd0442f6818dc",
        "patch": "@@ -41,7 +41,7 @@ static int FileWriteStr(const std::string &str, FILE *fp)\n \n bool BCLog::Logger::StartLogging()\n {\n-    std::lock_guard<std::mutex> scoped_lock(m_file_mutex);\n+    std::lock_guard<std::mutex> scoped_lock(m_cs);\n \n     assert(m_buffering);\n     assert(m_fileout == nullptr);\n@@ -216,9 +216,9 @@ std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n     return strStamped;\n }\n \n-void BCLog::Logger::LogPrintStr(const std::string &str)\n+void BCLog::Logger::LogPrintStr(const std::string& str)\n {\n-    std::lock_guard<std::mutex> scoped_lock(m_file_mutex);\n+    std::lock_guard<std::mutex> scoped_lock(m_cs);\n     std::string str_prefixed = str;\n \n     if (m_log_threadnames && m_started_new_line) {"
      },
      {
        "sha": "36b1a4045db4f34f50539025d81c8bd7a5383cee",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa2a47cd7bcdbd187035c76f8dbd0442f6818dc/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa2a47cd7bcdbd187035c76f8dbd0442f6818dc/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=faa2a47cd7bcdbd187035c76f8dbd0442f6818dc",
        "patch": "@@ -60,10 +60,10 @@ namespace BCLog {\n     class Logger\n     {\n     private:\n-        FILE* m_fileout = nullptr;\n-        std::mutex m_file_mutex;\n-        std::list<std::string> m_msgs_before_open;\n-        bool m_buffering = true; //!< Buffer messages before logging can be started\n+        mutable std::mutex m_cs;                   // Can not use Mutex from sync.h because in debug mode it would cause a deadlock when a potential deadlock was detected\n+        FILE* m_fileout = nullptr;                 // GUARDED_BY(m_cs)\n+        std::list<std::string> m_msgs_before_open; // GUARDED_BY(m_cs)\n+        bool m_buffering{true};                    //!< Buffer messages before logging can be started. GUARDED_BY(m_cs)\n \n         /**\n          * m_started_new_line is a state variable that will suppress printing of\n@@ -89,10 +89,14 @@ namespace BCLog {\n         std::atomic<bool> m_reopen_file{false};\n \n         /** Send a string to the log output */\n-        void LogPrintStr(const std::string &str);\n+        void LogPrintStr(const std::string& str);\n \n         /** Returns whether logs will be written to any output */\n-        bool Enabled() const { return m_buffering || m_print_to_console || m_print_to_file; }\n+        bool Enabled() const\n+        {\n+            std::lock_guard<std::mutex> scoped_lock(m_cs);\n+            return m_buffering || m_print_to_console || m_print_to_file;\n+        }\n \n         /** Start logging (and flush all buffered messages) */\n         bool StartLogging();"
      }
    ]
  }
]