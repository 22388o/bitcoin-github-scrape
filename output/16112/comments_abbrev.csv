MarcoFalke,2019-05-28 14:38:51,"> I don't see a problem regarding the new circular dependency.\n\nIt would lead to issues in debug builds when a potential deadlock was detected, so I've reverted that for now.",https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-496545242,496545242,
DrahtBot,2019-05-28 15:56:33,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16224](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16224.html) (gui: Bilingual GUI error messages by hebast",https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-496578340,496578340,
sipa,2019-05-28 20:08:18,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-496669513,496669513,
practicalswift,2019-05-29 07:23:38,Is there any reason to buffer the writing to `stdout` (`m_print_to_console`)?,https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-496817697,496817697,
ajtowns,2019-05-31 01:37:55,"> Is there any reason to buffer the writing to `stdout` (`m_print_to_console`)?\n\nIf you have `bitcoind -noconnect=0` but have `printtoconsole=0` in bitcoind.conf, then the ""confusing double-negative"" error will be queued when parsing the command line, but `m_print_to_console` can't be set to false until later when the config file is actually read.",https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-497543744,497543744,
ajtowns,2019-05-31 02:07:12,"I've done #16127 to see what it would take to keep the thread safety annotations without the dependency loop (and hopefully also without the bugs), and what it'd look like to do the same thing elsewhere. Seems better to do that later (or not at all) than to add it to this PR to me...",https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-497548710,497548710,
ajtowns,2019-05-31 02:52:13,utACK faa2a47cd7bcdbd187035c76f8dbd0442f6818dc,https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-497556359,497556359,
practicalswift,2019-06-12 07:16:31,"@MarcoFalke, why buffer also the writing to `stdout`? Don't we want to print to `stdout` as soon as possible to be on the safe side? I think it makes sense to keep the ""print to console"" code path as simple/dumb as possible. Especially given the amount of trouble we've had with getting ""just-after-process-launch-logging"" working robustly :-)\n\n> Is there any reason to buffer the writing to stdo",https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-501150946,501150946,
MarcoFalke,2019-06-17 22:01:42,@practicalswift See https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-497543744,https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-502867476,502867476,
MarcoFalke,2019-06-17 22:03:25,"Unless there are objections, this will be merged tomorrow",https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-502867970,502867970,
hebasto,2019-06-18 10:16:37,"> Unless there are objections, this will be merged tomorrow\n\nGoing to test in a few hours.",https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-503042312,503042312,
hebasto,2019-06-18 14:47:07,"ACK faa2a47cd7bcdbd187035c76f8dbd0442f6818dc\n\nTested on Linux Mint 19.1:\n- the patched `test/functional/feature_config_args.py` fails on master (22b6c4ed7562a23e4363e8f0fd889b92c7653d5f)\n- #16098 is fixed:\n```\n$ cat ~/.bitcoin/bitcoin.conf\ntrash=1\n\n$ src/qt/bitcoin-qt -noonion=0\n\n$ head ~/.bitcoin/debug.log \n\n\n\n\n\n2019-06-18T14:40:23Z Warning: parsed potentially co",https://github.com/bitcoin/bitcoin/pull/16112#issuecomment-503169330,503169330,
promag,2019-05-28 13:29:30,"https://github.com/bitcoin/bitcoin/pull/16112/commits/2b0f4e1726379150fd3fc1e3f7bc127303ad850b\n\nnit, could fix indentation.",https://github.com/bitcoin/bitcoin/pull/16112#discussion_r288104155,288104155,src/init.cpp
hebasto,2019-05-28 15:44:39,Two `if`s above could be combined now.,https://github.com/bitcoin/bitcoin/pull/16112#discussion_r288173316,288173316,src/init.cpp
hebasto,2019-05-28 15:50:14,May I suggest to replace `str[str.size()-1]` with `str.back()`?,https://github.com/bitcoin/bitcoin/pull/16112#discussion_r288175959,288175959,src/logging.cpp
hebasto,2019-05-28 15:54:22,"If we mean **single**ton, could it be in singular?",https://github.com/bitcoin/bitcoin/pull/16112#discussion_r288178010,288178010,src/test/setup_common.cpp
hebasto,2019-05-28 15:58:39,"Could this message be translated?\nRef: [Translation Strings Policy](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_strings_policy.md#gui-strings)",https://github.com/bitcoin/bitcoin/pull/16112#discussion_r288180193,288180193,src/init.cpp
MarcoFalke,2019-06-17 22:02:35,Leaving it to minimize the diff,https://github.com/bitcoin/bitcoin/pull/16112#discussion_r294536751,294536751,src/init.cpp
MarcoFalke,2019-06-17 22:02:41,Leaving it to minimize the diff,https://github.com/bitcoin/bitcoin/pull/16112#discussion_r294536781,294536781,src/logging.cpp
MarcoFalke,2019-06-17 22:02:51,Leaving it to minimize the diff,https://github.com/bitcoin/bitcoin/pull/16112#discussion_r294536826,294536826,src/init.cpp
MarcoFalke,2019-06-17 22:03:05,Leaving it to minimize the diff,https://github.com/bitcoin/bitcoin/pull/16112#discussion_r294536888,294536888,src/init.cpp
