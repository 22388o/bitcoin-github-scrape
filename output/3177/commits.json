[
  {
    "sha": "d3c6a86f43c9142ffedc8a74b255bbfd40c52915",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2M2YTg2ZjQzYzkxNDJmZmVkYzhhNzRiMjU1YmJmZDQwYzUyOTE1",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-28T10:58:39Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-28T10:58:39Z"
      },
      "message": "rpcwallet: use EnsureWalletIsUnlocked() where possible\n\n- replaces pwalletMain->IsLocked() checks, which mostly did not even throw\n  an error\n- in keypoolrefill init kpSize to 0 as we have the logic to determine max\n  kpSize in pwalletMain->TopUpKeyPool() anyway",
      "tree": {
        "sha": "629f9d071a04579aa785c4c5247e7ba95ba1269e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/629f9d071a04579aa785c4c5247e7ba95ba1269e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3c6a86f43c9142ffedc8a74b255bbfd40c52915",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3c6a86f43c9142ffedc8a74b255bbfd40c52915",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3c6a86f43c9142ffedc8a74b255bbfd40c52915",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3c6a86f43c9142ffedc8a74b255bbfd40c52915/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "2315cc82a7c12256002893dff105ea4cff113a6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2315cc82a7c12256002893dff105ea4cff113a6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2315cc82a7c12256002893dff105ea4cff113a6d"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 8,
      "deletions": 10
    },
    "files": [
      {
        "sha": "34f6c7b3b7ff299ef68d409b7e24d7e34d09e234",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3c6a86f43c9142ffedc8a74b255bbfd40c52915/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3c6a86f43c9142ffedc8a74b255bbfd40c52915/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=d3c6a86f43c9142ffedc8a74b255bbfd40c52915",
        "patch": "@@ -109,8 +109,8 @@ Value getnewaddress(const Array& params, bool fHelp)\n     if (params.size() > 0)\n         strAccount = AccountFromValue(params[0]);\n \n-    if (!pwalletMain->IsLocked())\n-        pwalletMain->TopUpKeyPool();\n+    EnsureWalletIsUnlocked();\n+    pwalletMain->TopUpKeyPool();\n \n     // Generate a new key that is added to wallet\n     CPubKey newKey;\n@@ -188,8 +188,8 @@ Value getrawchangeaddress(const Array& params, bool fHelp)\n             \"Returns a new Bitcoin address, for receiving change.  \"\n             \"This is for use with raw transactions, NOT normal use.\");\n \n-    if (!pwalletMain->IsLocked())\n-        pwalletMain->TopUpKeyPool();\n+    EnsureWalletIsUnlocked();\n+    pwalletMain->TopUpKeyPool();\n \n     CReserveKey reservekey(pwalletMain);\n     CPubKey vchPubKey;\n@@ -296,8 +296,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"to\"]      = params[3].get_str();\n \n-    if (pwalletMain->IsLocked())\n-        throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n+    EnsureWalletIsUnlocked();\n \n     string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n     if (strError != \"\")\n@@ -1268,15 +1267,14 @@ Value keypoolrefill(const Array& params, bool fHelp)\n             \"Fills the keypool.\"\n             + HelpRequiringPassphrase());\n \n-    unsigned int kpSize = max(GetArg(\"-keypool\", 100), 0LL);\n+    unsigned int kpSize = 0;\n     if (params.size() > 0) {\n         if (params[0].get_int() < 0)\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, expected valid size\");\n-        kpSize = (unsigned int) params[0].get_int();\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, expected valid size.\");\n+        kpSize = (unsigned int)params[0].get_int();\n     }\n \n     EnsureWalletIsUnlocked();\n-\n     pwalletMain->TopUpKeyPool(kpSize);\n \n     if (pwalletMain->GetKeyPoolSize() < kpSize)"
      }
    ]
  }
]