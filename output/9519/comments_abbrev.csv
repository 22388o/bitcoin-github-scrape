luke-jr,2017-01-11T21:46:13Z,"Too much special-casing here... Estimates shouldn't break when 100% of the network adopts RBF support. But even more importantly, estimates shouldn't break when miners use unknown policies. There needs to be some tolerance of transactions being left unmined for reasons beyond the estimator's awareness.",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272005116,272005116,
morcos,2017-01-11T22:39:01Z,"@JeremyRubin \n- re: nits, seems kind of unnecessary optimization if you ask me..  \n- re: concern, I won't go so far as to say that's not a concern at all, but the debug information for fee estimates already lets you know how many of the transactions in blocks you're tracking.  So if that number drops significantly it'll be worth revisiting.  Beyond that, it shouldn't matter if a bunch of high ",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272018453,272018453,
sdaftuar,2017-01-12T21:46:13Z,utACK,https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272293811,272293811,
dcousens,2017-01-13T04:28:01Z,">  it's probably better not to \n\nWhy not consider them?",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272358364,272358364,
morcos,2017-01-13T14:04:33Z,"@dcousens The issue is that if some significant fraction of miners don't accept RBF replacements but your node does, then you would expect them to get mined quickly based on their fee rate but in reality it will take longer.   In the worst case situation this can lead fee estimation to think that all transactions of that fee rate would take longer to be confirmed.  \n\n If you know that some min",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272449918,272449918,
JeremyRubin,2017-01-13T22:28:19Z,"I am convinced now that the issue I brought up is unlikely to be workable, full utACK!",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272565436,272565436,
sipa,2017-01-13T23:06:14Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272572285,272572285,
dcousens,2017-01-13T23:13:21Z,"Thanks for the explanation @morcos.\n\nI still think given the fact this has near zero effect (0.1%),   and any increased usage of RBF would also incite miner acceptance... I don't think this is necessary,  but,  if it was an issue impacting estimates substantially (and negatively),  I would agree this is a good temporary fix.\n\nWeak NACK\n\n**edit:** I also think,  if https://github.com/bi",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272573407,272573407,
dcousens,2017-01-13T23:16:06Z,Do we have any data/estimates on widespread RBF policy usage [by miners]?,https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272573839,272573839,
MarcoFalke,2017-01-14T10:36:22Z,utACK 20418bdf7976b8ff807dc6ed9f2a8e6b7f068ec3,https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-272615885,272615885,
laanwj,2017-01-17T06:46:15Z,"I have the same worry as @luke-jr here, the special-casing seems surprising and unexpected and will distort estimates once RBF is more widely adopted.\n\nOnce they are in the block chain, RBF transactions are the same as non-RBF transactions. \nAlso the fee from a RBF transaction is worth just as much as from a non-RBF transaction.\nSo I'm not sure why a miner would adopt a anti-RBF policy in ",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-273035285,273035285,
morcos,2017-01-17T13:23:12Z,"To address the question about distorting estimates, I don't really believe that is a concern.   \n\nFundamentally if RBF replacements have the same confirmation profile as regular transactions, then none of this matters as long as we have enough total data points, which I think we are nowhere near worrying about even if all txs are default replaceable (only actual replacements are excluded).  \",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-273153472,273153472,
btcdrak,2017-01-18T10:43:57Z,Current usage stats of RBF transaction produced is about [0.2%-0.3%](http://p2sh.info/dashboard/db/replace-by-fee),https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-273442889,273442889,
TheBlueMatt,2017-01-18T18:36:01Z,"I dont buy the ""miners will be more incentivized to run RBF"" argument. While this is true, miners (in this case pools) have shown both a) long lags from incentivization to when they start adopting things which pay them more (eg many miners are still leaving lots on the table by not using 0.13 to do CPFP), and b) willingness to ignore incentivization when there is community drama - its not their in",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-273560959,273560959,
TheBlueMatt,2017-01-18T18:50:53Z,utACK 20418bdf7976b8ff807dc6ed9f2a8e6b7f068ec3,https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-273565035,273565035,
btcdrak,2017-01-19T19:18:49Z,utACK 20418bd,https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-273871003,273871003,
jtimon,2017-01-19T19:30:07Z,"utACK 20418bd reverting this when we feel it makes sense should be equally simple anyway.\nI don't see the reason not to fix @JeremyRubin 's nit. It's trivial to fix, and if anything, it will prevent someone else from bringing up the same micro-optimization again, or just think about it when reading the code.",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-273874050,273874050,
morcos,2017-01-20T01:18:57Z,"OK added @JeremyRubin's optimization suggestions\n",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-273949949,273949949,
morcos,2017-01-20T20:06:28Z,"Squashed bd1f849 -> 	de1ae32\n",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-274167204,274167204,
jtimon,2017-01-20T21:50:43Z,"re utACK de1ae32\n",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-274189188,274189188,
petertodd,2017-01-21T04:38:38Z,"If you want a source of opt-in RBF confirmation data, my OpenTimestamps calendars use opt-in RBF for all transactions; the fee strategy there is to start with the lowest possible fee, and then keep incrementing the fees with replacements over time. So any OpenTimestamps transaction that is mined is pretty much guaranteed to have been due to a replacement on default Bitcoin Core mempool settings.\",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-274234923,274234923,
TheBlueMatt,2017-01-21T18:14:35Z,"@petertodd I'm not sure that is required? Because blocks are not always full, if you get a transaction propagated its virtually guaranteed to get mined eventually still. What is your exact policy - is it possible that you're simply seeing the first relayed transaction get confirmed (keeping in mind that relay of things with low fee can be super unreliable)?",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-274278286,274278286,
sdaftuar,2017-01-23T20:45:26Z,re-utACK,https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-274611351,274611351,
dcousens,2017-01-24T02:03:28Z,"Could we just compare the median ""time to confirm"" for RBF v non-RBF to compare probability of miner acceptance?",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-274679497,274679497,
btcdrak,2017-01-24T11:25:20Z,re-utACK de1ae32,https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-274778326,274778326,
gmaxwell,2017-01-25T22:48:15Z,"ACK. The only downside of this is that if replacements become common, we may not end up with enough data. But if replacements were common, we could assume miners were mining them, and it would be harmless to remove this.  We know that right now that they do have a different confirmation profile, so I think this is the correct change to make.",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-275257559,275257559,
dcousens,2017-01-26T04:13:36Z,"> We know that right now that they do have a different confirmation profile, so I think this is the correct change to make.\n\nHow do we know this though?  I've been recording data for the last week in regards to this so I can verify myself,  but I haven't seen any data presented in this thread.\n\n**edit:**\n\nWe know they constitute ~0.2%: http://p2sh.info/dashboard/db/replace-by-fee\nBut",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-275304080,275304080,
dcousens,2017-02-03T12:33:23Z,"I collected 5181335 transactions between blocks 448207 and 451298,  observing the `txId` and the height of the blockchain when first seen,  later taking `confirmed_height - seen_height` to determine how many blocks each transaction waited until confirmation.\n\nIn that time,  14101 transactions were seen signalling RBF (~0.27%),  with a median wait of 1 block until confirmation and 78 bytes sato",https://github.com/bitcoin/bitcoin/pull/9519#issuecomment-277236677,277236677,
JeremyRubin,2017-01-11T21:05:46Z,nit: you may as well make this `const bool fReplacementTransaction = setConflicts.size()` under the lock & make the if below check fReplacementTransaction. ,https://github.com/bitcoin/bitcoin/pull/9519#discussion_r95671740,95671740,src/validation.cpp
JeremyRubin,2017-01-11T21:06:00Z,"nit: `!fReplacementTransaction` is a lot cheaper of a check than the others, so may as well make it the first one in the group of `&`s. I don't think the optimizer would do that automatically?",https://github.com/bitcoin/bitcoin/pull/9519#discussion_r95671785,95671785,src/validation.cpp
jtimon,2017-01-19T19:18:41Z,"No, the optimizer shouldn't do that automatically, because it could be done on purpose (ie to guarantee IsCurrentForFeeEstimation() is always called, even if fReplacementTransaction, assuming IsCurrentForFeeEstimation() changes some state). So, yeah, +1 on the nit.",https://github.com/bitcoin/bitcoin/pull/9519#discussion_r96935585,96935585,src/validation.cpp
