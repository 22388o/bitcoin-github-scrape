laanwj,2014-01-13T07:07:16Z,Thanks for having a shot at this.\n\nI agree with the UI part. However the core part should be more generic. The core doesn't need to know about UI-only data structures such as CReceiveRequestEntry.\n\nMy idea was to offer a interface for storing general-purpose data on destinations in the wallet. See https://github.com/bitcoin/bitcoin/pull/3281 and store payment requests and bitcoin URIs in there,https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32148871,32148871,
cozz,2014-01-13T13:54:38Z,"How about using Boost.Serialization, serializing the SendCoinsRecipient as xml/string and storing this in the wallet. Could this work / Is a good idea?\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32170700,32170700,
laanwj,2014-01-13T14:03:59Z,"I'd rather not import another serialization format.\n\nWe can use the bitcoin serialization format (used for most stuff in the wallet) or google protobuf (as used for payment requests).\n\nThe important part is that the serialization happens on the src/qt side, and not in the core, as to not burden the core with knowledge it doesn't need to know about.\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32171382,32171382,
cozz,2014-01-13T14:28:09Z,"Ah yes, having 3 serialization formats makes no sense.\n\nSo even if I implement this in on top of #3281 , there is no chance of getting ""storing the requests permanently"" into 0.9?\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32173250,32173250,
laanwj,2014-01-13T14:40:43Z,"It's most likely if you keep the core changes as small and non-invasive as possible. Basing on #3281 is a good idea I think as it only adds a minimal amount of code.\n\nI can't guarantee anything though. I'll just merge GUI changes, but core changes need more extensive scrutiny.\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32174266,32174266,
cozz,2014-01-13T14:51:45Z,"Ok thanks, I will take a look at this. Though I cant promise anything at this point.\n\nSo close for now and maybe reopen on top of #3281...\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32175255,32175255,
laanwj,2014-01-13T15:36:05Z,"Ok, in any case it'd be very welcome!\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32179635,32179635,
cozz,2014-01-14T04:43:13Z,Now based on #3281 \n\nWhen loading from wallet the sorting of the table is different than before. But I would want to add sorting in general to the table. So lets leave this sorting-problem for another pull.\n,https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32238433,32238433,
laanwj,2014-01-14T11:36:19Z,"Implementation looks good, I plan to test this in the coming week.\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32257659,32257659,
laanwj,2014-01-14T11:38:31Z,"Locking: Don't forget that the DestData functions on CWallet (just like the other address book manipulation functions) require a lock on cs_wallet before calling, as they don't acquire the lock themselves.\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32257781,32257781,
cozz,2014-01-14T16:19:52Z,Sounds good. Added the lock.\n,https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32279416,32279416,
laanwj,2014-01-17T09:05:03Z,"Indeed, deleting multiple rows at once seems to be broken. It deletes a different subset than asked (only visible after a restart).\n\nApart from that it works great. Changing the ordering is not a big issue.\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32589495,32589495,
cozz,2014-01-19T17:32:50Z,"Yes, I did not realize you are supposed to delete multiple rows there... Now fixed.\n@emmix Many thanks for pointing this out.\n\nI also added a third commit ""Add sorting feature"". Default is by date desc, fixing the ordering issue.\n",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32713947,32713947,
BitcoinPullTester,2014-01-19T17:41:31Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4d901023b732efb492d89cebd8555c689ab7663e for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32714194,32714194,
cozz,2014-01-20T07:42:54Z,"I have some questions/suggestions. What do you think about them?\n\n1) display (no amount) instead of 0.00, similar to (no label) (no message)\n\n2) rename table headline ""Requested payments"" => ""History""\n\n3) Change description from\n     ""Use this form to request payments.""\n     to\n     ""Use this form to create bitcoin addresses and URIs""\n     I dont like the term request payment. Someone ma",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32739436,32739436,
laanwj,2014-01-20T08:21:50Z,"1) ok\n\n2) History may be too general, don't forget there is transaction history too\n\n3/4) But eventually this form will be used to create payment requests (BIP 0070). It doesn't do that yet, which may be confusing, sure...\nMaybe a better word would be ""invoice""?\n\n5) Aligning the 'action' button to the right and the clear button to the left is consistent with the 'send' tab. Don't change thi",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32741144,32741144,
laanwj,2014-01-20T08:27:04Z,Please make a new issue for those changes. This pull request should be ready for testing/merging right? No need to hold it up.\n,https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32741376,32741376,
cozz,2014-01-20T16:51:58Z,"@laanwj @Diapolo I do prevent storing to CNoDestination, but in wallet.cpp, CWallet::AddDestData. I hope this is ok.\n\n@laanwj Thanks for your feedback, I will open a new pull for the other changes. Yes this one is ready for testing. I did not follow any testplan, just randomly sorted, added, deleted rows, then restart to check, if everything gets restored correctly. Works for me so far.\n\n@Diap",https://github.com/bitcoin/bitcoin/pull/3521#issuecomment-32776452,32776452,
Diapolo,2014-01-20T10:12:27Z,Any need to handle or any chance to see invalid addresses here?\n,https://github.com/bitcoin/bitcoin/pull/3521#discussion_r9000490,9000490,src/qt/walletmodel.cpp
Diapolo,2014-01-20T10:13:14Z,Minor personal nit: missing spaces\n,https://github.com/bitcoin/bitcoin/pull/3521#discussion_r9000501,9000501,src/qt/recentrequeststablemodel.h
Diapolo,2014-01-20T10:14:28Z,Minor personal nit: space after right\n,https://github.com/bitcoin/bitcoin/pull/3521#discussion_r9000524,9000524,src/qt/recentrequeststablemodel.h
laanwj,2014-01-20T11:48:01Z,"I don't think so: a payment request is always generated with one of our own addresses, which are correct by definition.\n\nEdit: though I suppose it wouldn't hurt to check to prevent storing information on CTXNoDestination\n",https://github.com/bitcoin/bitcoin/pull/3521#discussion_r9002464,9002464,src/qt/walletmodel.cpp
