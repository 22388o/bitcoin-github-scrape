[
  {
    "sha": "b10e147096b0e27fdff8c22029bc8b7a1a14f042",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTBlMTQ3MDk2YjBlMjdmZGZmOGMyMjAyOWJjOGI3YTFhMTRmMDQy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-18T15:55:54Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-19T17:21:54Z"
      },
      "message": "wallet: add interface for storing generic data on destinations",
      "tree": {
        "sha": "deb52bf797444b448e79df495d4a98906407af44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/deb52bf797444b448e79df495d4a98906407af44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b10e147096b0e27fdff8c22029bc8b7a1a14f042",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b10e147096b0e27fdff8c22029bc8b7a1a14f042",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b10e147096b0e27fdff8c22029bc8b7a1a14f042",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b10e147096b0e27fdff8c22029bc8b7a1a14f042/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd7c1cf534b760e9da55c225d6bb05f2bdb8e2e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd7c1cf534b760e9da55c225d6bb05f2bdb8e2e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd7c1cf534b760e9da55c225d6bb05f2bdb8e2e7"
      }
    ],
    "stats": {
      "total": 92,
      "additions": 92,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f4c14b437c0dcd5f9ac4f7a63b30c9fd8241a5f9",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b10e147096b0e27fdff8c22029bc8b7a1a14f042/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b10e147096b0e27fdff8c22029bc8b7a1a14f042/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=b10e147096b0e27fdff8c22029bc8b7a1a14f042",
        "patch": "@@ -1534,7 +1534,19 @@ bool CWallet::SetAddressBook(const CTxDestination& address, const string& strNam\n \n bool CWallet::DelAddressBook(const CTxDestination& address)\n {\n+\n     AssertLockHeld(cs_wallet); // mapAddressBook\n+\n+    if(fFileBacked)\n+    {\n+        // Delete destdata tuples associated with address\n+        std::string strAddress = CBitcoinAddress(address).ToString();\n+        BOOST_FOREACH(const PAIRTYPE(string, string) &item, mapAddressBook[address].destdata)\n+        {\n+            CWalletDB(strWalletFile).EraseDestData(strAddress, item.first);\n+        }\n+    }\n+\n     mapAddressBook.erase(address);\n     NotifyAddressBookChanged(this, address, \"\", ::IsMine(*this, address), \"\", CT_DELETED);\n     if (!fFileBacked)\n@@ -2008,3 +2020,42 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n     for (std::map<CKeyID, CBlockIndex*>::const_iterator it = mapKeyFirstBlock.begin(); it != mapKeyFirstBlock.end(); it++)\n         mapKeyBirth[it->first] = it->second->nTime - 7200; // block times can be 2h off\n }\n+\n+bool CWallet::AddDestData(const CTxDestination &dest, const std::string &key, const std::string &value)\n+{\n+    mapAddressBook[dest].destdata.insert(std::make_pair(key, value));\n+    if (!fFileBacked)\n+        return true;\n+    return CWalletDB(strWalletFile).WriteDestData(CBitcoinAddress(dest).ToString(), key, value);\n+}\n+\n+bool CWallet::EraseDestData(const CTxDestination &dest, const std::string &key)\n+{\n+    if (!mapAddressBook[dest].destdata.erase(key))\n+        return false;\n+    if (!fFileBacked)\n+        return true;\n+    return CWalletDB(strWalletFile).EraseDestData(CBitcoinAddress(dest).ToString(), key);\n+}\n+\n+bool CWallet::LoadDestData(const CTxDestination &dest, const std::string &key, const std::string &value)\n+{\n+    mapAddressBook[dest].destdata.insert(std::make_pair(key, value));\n+    return true;\n+}\n+\n+bool CWallet::GetDestData(const CTxDestination &dest, const std::string &key, std::string *value) const\n+{\n+    std::map<CTxDestination, CAddressBookData>::const_iterator i = mapAddressBook.find(dest);\n+    if(i != mapAddressBook.end())\n+    {\n+        CAddressBookData::StringMap::const_iterator j = i->second.destdata.find(key);\n+        if(j != i->second.destdata.end())\n+        {\n+            if(value)\n+                *value = j->second;\n+            return true;\n+        }\n+    }\n+    return false;\n+}"
      },
      {
        "sha": "dc8c007ac83ee6511486ad041a6f6eb4129bf9bb",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b10e147096b0e27fdff8c22029bc8b7a1a14f042/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b10e147096b0e27fdff8c22029bc8b7a1a14f042/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=b10e147096b0e27fdff8c22029bc8b7a1a14f042",
        "patch": "@@ -83,6 +83,9 @@ class CAddressBookData\n     {\n         purpose = \"unknown\";\n     }\n+\n+    typedef std::map<std::string, std::string> StringMap;\n+    StringMap destdata;\n };\n \n /** A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n@@ -189,6 +192,15 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     bool AddCScript(const CScript& redeemScript);\n     bool LoadCScript(const CScript& redeemScript) { return CCryptoKeyStore::AddCScript(redeemScript); }\n \n+    /// Adds a destination data tuple to the store, and saves it to disk\n+    bool AddDestData(const CTxDestination &dest, const std::string &key, const std::string &value);\n+    /// Erases a destination data tuple in the store and on disk\n+    bool EraseDestData(const CTxDestination &dest, const std::string &key);\n+    /// Adds a destination data tuple to the store, without saving it to disk\n+    bool LoadDestData(const CTxDestination &dest, const std::string &key, const std::string &value);\n+    /// Look up a destination data tuple in the store, return true if found false otherwise\n+    bool GetDestData(const CTxDestination &dest, const std::string &key, std::string *value) const;\n+\n     bool Unlock(const SecureString& strWalletPassphrase);\n     bool ChangeWalletPassphrase(const SecureString& strOldWalletPassphrase, const SecureString& strNewWalletPassphrase);\n     bool EncryptWallet(const SecureString& strWalletPassphrase);"
      },
      {
        "sha": "2e61c6cd58fcfbec2af3babed46c7287b81029fa",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b10e147096b0e27fdff8c22029bc8b7a1a14f042/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b10e147096b0e27fdff8c22029bc8b7a1a14f042/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=b10e147096b0e27fdff8c22029bc8b7a1a14f042",
        "patch": "@@ -564,6 +564,18 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         {\n             ssValue >> pwallet->nOrderPosNext;\n         }\n+        else if (strType == \"destdata\")\n+        {\n+            std::string strAddress, strKey, strValue;\n+            ssKey >> strAddress;\n+            ssKey >> strKey;\n+            ssValue >> strValue;\n+            if (!pwallet->LoadDestData(CBitcoinAddress(strAddress).Get(), strKey, strValue))\n+            {\n+                strErr = \"Error reading wallet database: LoadDestData failed\";\n+                return false;\n+            }\n+        }\n     } catch (...)\n     {\n         return false;\n@@ -865,3 +877,15 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename)\n {\n     return CWalletDB::Recover(dbenv, filename, false);\n }\n+\n+bool CWalletDB::WriteDestData(const std::string &address, const std::string &key, const std::string &value)\n+{\n+    nWalletDBUpdated++;\n+    return Write(boost::make_tuple(std::string(\"destdata\"), address, key), value);\n+}\n+\n+bool CWalletDB::EraseDestData(const std::string &address, const std::string &key)\n+{\n+    nWalletDBUpdated++;\n+    return Erase(boost::make_tuple(string(\"destdata\"), address, key));\n+}"
      },
      {
        "sha": "15af28724569c78d982dd3c5f7ec20a4bf225701",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b10e147096b0e27fdff8c22029bc8b7a1a14f042/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b10e147096b0e27fdff8c22029bc8b7a1a14f042/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=b10e147096b0e27fdff8c22029bc8b7a1a14f042",
        "patch": "@@ -124,6 +124,11 @@ class CWalletDB : public CDB\n \n     bool ReadAccount(const std::string& strAccount, CAccount& account);\n     bool WriteAccount(const std::string& strAccount, const CAccount& account);\n+\n+    /// Write destination data key,value tuple to database\n+    bool WriteDestData(const std::string &address, const std::string &key, const std::string &value);\n+    /// Erase destination data tuple from wallet database\n+    bool EraseDestData(const std::string &address, const std::string &key);\n private:\n     bool WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry);\n public:"
      }
    ]
  },
  {
    "sha": "8476d5d407645229faf3017b390f041ce0666247",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDc2ZDVkNDA3NjQ1MjI5ZmFmMzAxN2IzOTBmMDQxY2UwNjY2MjQ3",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-14T04:05:43Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-19T17:21:54Z"
      },
      "message": "[Qt] Permanently store requested payments in wallet",
      "tree": {
        "sha": "3bd9c035a61b8f066b81662b0b77743eee995dfe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3bd9c035a61b8f066b81662b0b77743eee995dfe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8476d5d407645229faf3017b390f041ce0666247",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8476d5d407645229faf3017b390f041ce0666247",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8476d5d407645229faf3017b390f041ce0666247",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8476d5d407645229faf3017b390f041ce0666247/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b10e147096b0e27fdff8c22029bc8b7a1a14f042",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b10e147096b0e27fdff8c22029bc8b7a1a14f042",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b10e147096b0e27fdff8c22029bc8b7a1a14f042"
      }
    ],
    "stats": {
      "total": 146,
      "additions": 142,
      "deletions": 4
    },
    "files": [
      {
        "sha": "70614f9eaea001155149cc56364912c711171865",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 1,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8476d5d407645229faf3017b390f041ce0666247/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8476d5d407645229faf3017b390f041ce0666247/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=8476d5d407645229faf3017b390f041ce0666247",
        "patch": "@@ -12,6 +12,13 @@ RecentRequestsTableModel::RecentRequestsTableModel(CWallet *wallet, WalletModel\n     walletModel(parent)\n {\n     Q_UNUSED(wallet);\n+    nReceiveRequestsMaxId = 0;\n+\n+    // Load entries from wallet\n+    std::vector<std::string> vReceiveRequests;\n+    parent->loadReceiveRequests(vReceiveRequests);\n+    BOOST_FOREACH(const std::string& request, vReceiveRequests)\n+        addNewRequest(request);\n \n     /* These columns must match the indices in the ColumnIndex enumeration */\n     columns << tr(\"Date\") << tr(\"Label\") << tr(\"Message\") << tr(\"Amount\");\n@@ -104,6 +111,14 @@ bool RecentRequestsTableModel::removeRows(int row, int count, const QModelIndex\n \n     if(count > 0 && row >= 0 && (row+count) <= list.size())\n     {\n+        const RecentRequestEntry *rec;\n+        for (int i = 0; i < count; ++i)\n+        {\n+            rec = &list[row+i];\n+            if (!walletModel->saveReceiveRequest(rec->recipient.address.toStdString(), rec->id, \"\"))\n+                return false;\n+        }\n+\n         beginRemoveRows(parent, row, row + count - 1);\n         list.erase(list.begin() + row, list.begin() + row + count);\n         endRemoveRows();\n@@ -118,12 +133,45 @@ Qt::ItemFlags RecentRequestsTableModel::flags(const QModelIndex &index) const\n     return Qt::ItemIsSelectable | Qt::ItemIsEnabled;\n }\n \n+// called when adding a request from the GUI\n void RecentRequestsTableModel::addNewRequest(const SendCoinsRecipient &recipient)\n {\n     RecentRequestEntry newEntry;\n+    newEntry.id = ++nReceiveRequestsMaxId;\n     newEntry.date = QDateTime::currentDateTime();\n     newEntry.recipient = recipient;\n+\n+    CDataStream ss(SER_DISK, CLIENT_VERSION);\n+    ss << newEntry;\n+\n+    if (!walletModel->saveReceiveRequest(recipient.address.toStdString(), newEntry.id, ss.str()))\n+        return;\n+\n+    addNewRequest(newEntry);\n+}\n+\n+// called from ctor when loading from wallet\n+void RecentRequestsTableModel::addNewRequest(const std::string &recipient)\n+{\n+    std::vector<char> data(recipient.begin(), recipient.end());\n+    CDataStream ss(data, SER_DISK, CLIENT_VERSION);\n+\n+    RecentRequestEntry entry;\n+    ss >> entry;\n+\n+    if (entry.id == 0) // should not happen\n+        return;\n+\n+    if (entry.id > nReceiveRequestsMaxId)\n+        nReceiveRequestsMaxId = entry.id;\n+\n+    addNewRequest(entry);\n+}\n+\n+// actually add to table in GUI\n+void RecentRequestsTableModel::addNewRequest(RecentRequestEntry &recipient)\n+{\n     beginInsertRows(QModelIndex(), 0, 0);\n-    list.prepend(newEntry);\n+    list.prepend(recipient);\n     endInsertRows();\n }"
      },
      {
        "sha": "f939c76666d242d4237d9b2bf82eaed70170ce4d",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 26,
        "deletions": 1,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8476d5d407645229faf3017b390f041ce0666247/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8476d5d407645229faf3017b390f041ce0666247/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=8476d5d407645229faf3017b390f041ce0666247",
        "patch": "@@ -13,10 +13,32 @@\n \n class CWallet;\n \n-struct RecentRequestEntry\n+class RecentRequestEntry\n {\n+public:\n+    RecentRequestEntry() : nVersion(RecentRequestEntry::CURRENT_VERSION), id(0) { }\n+\n+    static const int CURRENT_VERSION=1;\n+    int nVersion;\n+    int64_t id;\n     QDateTime date;\n     SendCoinsRecipient recipient;\n+\n+    IMPLEMENT_SERIALIZE\n+    (\n+        RecentRequestEntry* pthis = const_cast<RecentRequestEntry*>(this);\n+\n+        unsigned int nDate = date.toTime_t();\n+\n+        READWRITE(pthis->nVersion);\n+        nVersion = pthis->nVersion;\n+        READWRITE(id);\n+        READWRITE(nDate);\n+        READWRITE(recipient);\n+\n+        if (fRead)\n+            pthis->date = QDateTime::fromTime_t(nDate);\n+    )\n };\n \n /** Model for list of recently generated payment requests / bitcoin URIs.\n@@ -51,11 +73,14 @@ class RecentRequestsTableModel: public QAbstractTableModel\n \n     const RecentRequestEntry &entry(int row) const { return list[row]; }\n     void addNewRequest(const SendCoinsRecipient &recipient);\n+    void addNewRequest(const std::string &recipient);\n+    void addNewRequest(RecentRequestEntry &recipient);\n \n private:\n     WalletModel *walletModel;\n     QStringList columns;\n     QList<RecentRequestEntry> list;\n+    int64_t nReceiveRequestsMaxId;\n };\n \n #endif"
      },
      {
        "sha": "01f5a304a96908e556b7d51b6a7311244f84eb2c",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8476d5d407645229faf3017b390f041ce0666247/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8476d5d407645229faf3017b390f041ce0666247/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=8476d5d407645229faf3017b390f041ce0666247",
        "patch": "@@ -554,3 +554,27 @@ void WalletModel::listLockedCoins(std::vector<COutPoint>& vOutpts)\n     LOCK(wallet->cs_wallet);\n     wallet->ListLockedCoins(vOutpts);\n }\n+\n+void WalletModel::loadReceiveRequests(std::vector<std::string>& vReceiveRequests)\n+{\n+    LOCK(wallet->cs_wallet);\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& item, wallet->mapAddressBook)\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string)& item2, item.second.destdata)\n+            if (item2.first.size() > 2 && item2.first.substr(0,2) == \"rr\") // receive request\n+                vReceiveRequests.push_back(item2.second);\n+}\n+\n+bool WalletModel::saveReceiveRequest(const std::string &sAddress, const int64_t nId, const std::string &sRequest)\n+{\n+    CTxDestination dest = CBitcoinAddress(sAddress).Get();\n+\n+    std::stringstream ss;\n+    ss << nId;\n+    std::string key = \"rr\" + ss.str(); // \"rr\" prefix = \"receive request\" in destdata\n+\n+    LOCK(wallet->cs_wallet);\n+    if (sRequest.empty())\n+        return wallet->EraseDestData(dest, key);\n+    else\n+        return wallet->AddDestData(dest, key, sRequest);\n+}"
      },
      {
        "sha": "600bef346b80d3797159aebef62a42f8178842cd",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 40,
        "deletions": 2,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8476d5d407645229faf3017b390f041ce0666247/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8476d5d407645229faf3017b390f041ce0666247/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=8476d5d407645229faf3017b390f041ce0666247",
        "patch": "@@ -36,9 +36,9 @@ QT_END_NAMESPACE\n class SendCoinsRecipient\n {\n public:\n-    explicit SendCoinsRecipient() : amount(0) { }\n+    explicit SendCoinsRecipient() : amount(0), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n     explicit SendCoinsRecipient(const QString &addr, const QString &label, quint64 amount, const QString &message):\n-        address(addr), label(label), amount(amount), message(message) {}\n+        address(addr), label(label), amount(amount), message(message), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n \n     // If from an insecure payment request, this is used for storing\n     // the addresses, e.g. address-A<br />address-B<br />address-C.\n@@ -55,6 +55,41 @@ class SendCoinsRecipient\n     PaymentRequestPlus paymentRequest;\n     // Empty if no authentication or invalid signature/cert/etc.\n     QString authenticatedMerchant;\n+\n+    static const int CURRENT_VERSION=1;\n+    int nVersion;\n+\n+    IMPLEMENT_SERIALIZE\n+    (\n+        SendCoinsRecipient* pthis = const_cast<SendCoinsRecipient*>(this);\n+\n+        std::string sAddress = pthis->address.toStdString();\n+        std::string sLabel = pthis->label.toStdString();\n+        std::string sMessage = pthis->message.toStdString();\n+        std::string sPaymentRequest;\n+        if (!fRead && pthis->paymentRequest.IsInitialized())\n+            pthis->paymentRequest.SerializeToString(&sPaymentRequest);\n+        std::string sAuthenticatedMerchant = pthis->authenticatedMerchant.toStdString();\n+\n+        READWRITE(pthis->nVersion);\n+        nVersion = pthis->nVersion;\n+        READWRITE(sAddress);\n+        READWRITE(sLabel);\n+        READWRITE(amount);\n+        READWRITE(sMessage);\n+        READWRITE(sPaymentRequest);\n+        READWRITE(sAuthenticatedMerchant);\n+\n+        if (fRead)\n+        {\n+            pthis->address = QString::fromStdString(sAddress);\n+            pthis->label = QString::fromStdString(sLabel);\n+            pthis->message = QString::fromStdString(sMessage);\n+            if (!sPaymentRequest.empty())\n+                pthis->paymentRequest.parse(QByteArray::fromRawData(sPaymentRequest.data(), sPaymentRequest.size()));\n+            pthis->authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n+        }\n+    )\n };\n \n /** Interface to Bitcoin wallet from Qt view code. */\n@@ -152,6 +187,9 @@ class WalletModel : public QObject\n     void unlockCoin(COutPoint& output);\n     void listLockedCoins(std::vector<COutPoint>& vOutpts);\n \n+    void loadReceiveRequests(std::vector<std::string>& vReceiveRequests);\n+    bool saveReceiveRequest(const std::string &sAddress, const int64_t nId, const std::string &sRequest);\n+\n private:\n     CWallet *wallet;\n "
      },
      {
        "sha": "84642bee62a856df15a6cf97874b825785df3fad",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8476d5d407645229faf3017b390f041ce0666247/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8476d5d407645229faf3017b390f041ce0666247/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=8476d5d407645229faf3017b390f041ce0666247",
        "patch": "@@ -2023,6 +2023,9 @@ void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n \n bool CWallet::AddDestData(const CTxDestination &dest, const std::string &key, const std::string &value)\n {\n+    if (boost::get<CNoDestination>(&dest))\n+        return false;\n+\n     mapAddressBook[dest].destdata.insert(std::make_pair(key, value));\n     if (!fFileBacked)\n         return true;"
      }
    ]
  },
  {
    "sha": "4d901023b732efb492d89cebd8555c689ab7663e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDkwMTAyM2I3MzJlZmI0OTJkODljZWJkODU1NWM2ODlhYjc2NjNl",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-17T23:01:14Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-19T17:21:54Z"
      },
      "message": "[Qt] Add sorting feature to the requested payments table",
      "tree": {
        "sha": "68956b053435bc164a33389ee3fb466f1b8e0cd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68956b053435bc164a33389ee3fb466f1b8e0cd1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d901023b732efb492d89cebd8555c689ab7663e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d901023b732efb492d89cebd8555c689ab7663e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d901023b732efb492d89cebd8555c689ab7663e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d901023b732efb492d89cebd8555c689ab7663e/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8476d5d407645229faf3017b390f041ce0666247",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8476d5d407645229faf3017b390f041ce0666247",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8476d5d407645229faf3017b390f041ce0666247"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 52,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7bf01224eec60ce324ea9383c7ee7b936f7a6672",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d901023b732efb492d89cebd8555c689ab7663e/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d901023b732efb492d89cebd8555c689ab7663e/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=4d901023b732efb492d89cebd8555c689ab7663e",
        "patch": "@@ -207,7 +207,11 @@\n        </widget>\n       </item>\n       <item>\n-       <widget class=\"QTableView\" name=\"recentRequestsView\"/>\n+       <widget class=\"QTableView\" name=\"recentRequestsView\">\n+        <property name=\"sortingEnabled\">\n+         <bool>true</bool>\n+        </property>\n+       </widget>\n       </item>\n       <item>\n        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">"
      },
      {
        "sha": "38dc88f63bf5f04283b716821e70a4c61d763beb",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d901023b732efb492d89cebd8555c689ab7663e/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d901023b732efb492d89cebd8555c689ab7663e/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=4d901023b732efb492d89cebd8555c689ab7663e",
        "patch": "@@ -55,6 +55,8 @@ void ReceiveCoinsDialog::setModel(WalletModel *model)\n         ui->recentRequestsView->horizontalHeader()->setSectionResizeMode(RecentRequestsTableModel::Message, QHeaderView::Stretch);\n #endif\n         ui->recentRequestsView->horizontalHeader()->resizeSection(RecentRequestsTableModel::Amount, 100);\n+\n+        model->getRecentRequestsTableModel()->sort(RecentRequestsTableModel::Date, Qt::DescendingOrder);\n     }\n }\n "
      },
      {
        "sha": "74b43f1d24b43540d6686ae202b408025a9b229b",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d901023b732efb492d89cebd8555c689ab7663e/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d901023b732efb492d89cebd8555c689ab7663e/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=4d901023b732efb492d89cebd8555c689ab7663e",
        "patch": "@@ -175,3 +175,31 @@ void RecentRequestsTableModel::addNewRequest(RecentRequestEntry &recipient)\n     list.prepend(recipient);\n     endInsertRows();\n }\n+\n+void RecentRequestsTableModel::sort(int column, Qt::SortOrder order)\n+{\n+    qSort(list.begin(), list.end(), RecentRequestEntryLessThan(column, order));\n+    emit dataChanged(index(0, 0, QModelIndex()), index(list.size() - 1, NUMBER_OF_COLUMNS - 1, QModelIndex()));\n+}\n+\n+bool RecentRequestEntryLessThan::operator()(RecentRequestEntry &left, RecentRequestEntry &right) const\n+{\n+    RecentRequestEntry *pLeft = &left;\n+    RecentRequestEntry *pRight = &right;\n+    if (order == Qt::DescendingOrder)\n+        std::swap(pLeft, pRight);\n+\n+    switch(column)\n+    {\n+    case RecentRequestsTableModel::Date:\n+        return pLeft->date.toTime_t() < pRight->date.toTime_t();\n+    case RecentRequestsTableModel::Label:\n+        return pLeft->recipient.label < pRight->recipient.label;\n+    case RecentRequestsTableModel::Message:\n+        return pLeft->recipient.message < pRight->recipient.message;\n+    case RecentRequestsTableModel::Amount:\n+        return pLeft->recipient.amount < pRight->recipient.amount;\n+    default:\n+        return pLeft->id < pRight->id;\n+    }\n+}"
      },
      {
        "sha": "6b20402f780453a05d6c3f27be03f3f3ecdc3de7",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d901023b732efb492d89cebd8555c689ab7663e/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d901023b732efb492d89cebd8555c689ab7663e/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=4d901023b732efb492d89cebd8555c689ab7663e",
        "patch": "@@ -41,6 +41,18 @@ class RecentRequestEntry\n     )\n };\n \n+class RecentRequestEntryLessThan\n+{\n+public:\n+    RecentRequestEntryLessThan(int nColumn, Qt::SortOrder fOrder):\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(RecentRequestEntry &left, RecentRequestEntry &right ) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n /** Model for list of recently generated payment requests / bitcoin URIs.\n  * Part of wallet model.\n  */\n@@ -56,7 +68,8 @@ class RecentRequestsTableModel: public QAbstractTableModel\n         Date = 0,\n         Label = 1,\n         Message = 2,\n-        Amount = 3\n+        Amount = 3,\n+        NUMBER_OF_COLUMNS\n     };\n \n     /** @name Methods overridden from QAbstractTableModel\n@@ -76,6 +89,9 @@ class RecentRequestsTableModel: public QAbstractTableModel\n     void addNewRequest(const std::string &recipient);\n     void addNewRequest(RecentRequestEntry &recipient);\n \n+public slots:\n+    void sort(int column, Qt::SortOrder order = Qt::AscendingOrder);\n+\n private:\n     WalletModel *walletModel;\n     QStringList columns;"
      }
    ]
  }
]