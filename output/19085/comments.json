[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635100733",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-635100733",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 635100733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTEwMDczMw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T04:57:58Z",
    "updated_at": "2020-07-01T19:37:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19335 (wallet: Cleanup and separate BerkeleyDatabase and BerkeleyBatch by achow101)\n* #19334 (wallet: Introduce WalletDatabase abstract class by achow101)\n* #19325 (wallet: Refactor BerkeleyDatabase to introduce DatabaseBatch abstract class by achow101)\n* #19324 (wallet: Move BerkeleyBatch static functions to BerkeleyDatabase by achow101)\n* #19137 (wallettool: Add dump and createfromdump commands by achow101)\n* #19102 (wallet: Introduce and use DummyDatabase instead of dummy BerkeleyDatabase by achow101)\n* #19077 (wallet: Add sqlite as an alternative wallet database and use it for new descriptor wallets by achow101)\n* #18904 (Don't call lsn_reset in periodic flush by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635100733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635265128",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-635265128",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 635265128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTI2NTEyOA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T10:47:16Z",
    "updated_at": "2020-05-28T10:47:16Z",
    "author_association": "MEMBER",
    "body": "Concept \u24b6\u24b8\u24c0",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635265128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638916606",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-638916606",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 638916606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODkxNjYwNg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T15:14:58Z",
    "updated_at": "2020-06-04T15:14:58Z",
    "author_association": "MEMBER",
    "body": "Thanks @fanquake . I've rebased on master.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638916606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648344890",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-648344890",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 648344890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODM0NDg5MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-23T18:41:24Z",
    "updated_at": "2020-06-23T18:41:24Z",
    "author_association": "MEMBER",
    "body": "Rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648344890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652159459",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-652159459",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 652159459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjE1OTQ1OQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T03:04:05Z",
    "updated_at": "2020-07-01T03:04:05Z",
    "author_association": "MEMBER",
    "body": "Note to reviewers: I suggest looking at the diff with space changes ignored (`git show -w`).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652159459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655921919",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-655921919",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 655921919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTkyMTkxOQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T06:07:42Z",
    "updated_at": "2020-07-09T06:07:42Z",
    "author_association": "MEMBER",
    "body": "rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655921919/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656027186",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-656027186",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 656027186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjAyNzE4Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T09:45:01Z",
    "updated_at": "2020-07-09T09:45:01Z",
    "author_association": "MEMBER",
    "body": "ACK e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e \ud83c\udf81\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e \ud83c\udf81\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgG+wv/SWkvdinhfmWvllvmoyHz6TKFcTwBBsvJFneg6saYLV/A21hlxGfD+iS8\r\nxu5f03nFpFsb+bFQvRcm2FtG1McxQTnmEcnNUss0MZ53F8uNCoIG5kfM1eAfBXuw\r\nomRgHgMAk2NMZmCUrHT2Qv4ZOKwUZ2N/4TiVvc2apXy6Zbgf0NKxqagGKs7yRXKN\r\narajJLM8ua6ewKQFZtPZySRvH03Ed33im0vpae/nsSmluqtJ3VnzVhoCGuxybKzT\r\nRpbBtjD4ayMC/O8q2E93+VHao/zB/CIEpess1KEWIkyyT7w/JZ86XYiVWcEPdfkD\r\nyHUPoPTMOhJuPe/1Vvx9sMxoSV07c/aAgodFDP/UHHaT1JIPfZwyMHWmXcx5pIZd\r\nV9qIdH2uk2mBEp57o5HcJlA/57y4gtDd32WGo23mo/Ef1kqMKwjBs/o2YnE0/f+e\r\neoCn9pDih3lnbxg919suNbfCtLpVQAlqHVXMe5XafrYDLSQtXGBkfCk33CTSTEGL\r\n8AJuiXGE\r\n=0P36\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `d38062803983ae335282eeba787d6c83aeeabfe3699adc77650b02de45c422fc  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108d38062803983ae335282eeba787d6c83aeeabfe3699adc77650b02de45c422fcf010bbc8bc3d51d9f27058f0e81c716229e108fff010132374ed07b42d9297269b475e8d35bf08f020fc4ba1c87afee55a1bc2dbb8e14e2eea60ce4ea77a597ce4b651775d8e51bd5808f1045f06e708f008f4c89016368941ac0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010179c3c5fc5a2ff31293c3b3d914e3f0308f0200958fff8e5830e24c882b0e0f3f61c98c4c31af016de90e4b86c8db9d7d298bd08f1045f06e707f00851786ad1dea42ee40083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff01022ec517673fac8d0dc5e3709085939e308f1045f06e707f008dc7ecf29ad8b91630083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df01079eba2727ecff89f7140d14cb1c09a0208f02023dc5824013bea672b11525007ac9612f0481298c2a79f1940c530dbf54cc84b08f1045f06e707f008d385f2a1401ebd0a0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656027186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656027367",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-656027367",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 656027367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjAyNzM2Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T09:45:22Z",
    "updated_at": "2020-07-09T09:45:22Z",
    "author_association": "MEMBER",
    "body": "cc @achow101 any objections to this?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656027367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656052425",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-656052425",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 656052425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjA1MjQyNQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T10:40:20Z",
    "updated_at": "2020-07-09T10:40:20Z",
    "author_association": "MEMBER",
    "body": "I think this is ready for merge. It's a simple refactor and has 3 ACKs now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656052425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656064459",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#issuecomment-656064459",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19085",
    "id": 656064459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjA2NDQ1OQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-09T11:09:11Z",
    "updated_at": "2020-07-09T11:09:11Z",
    "author_association": "MEMBER",
    "body": "Went ahead to merge this and postponed to fix the nits in a related pull that had less ACKs (#18923)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656064459/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086302",
    "pull_request_review_id": 440512302,
    "id": 448086302,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4NjMwMg==",
    "diff_hunk": "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {",
    "path": "src/wallet/bdb.cpp",
    "position": 33,
    "original_position": 36,
    "commit_id": "e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e",
    "original_commit_id": "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, while retouching this code, `++i` is preferred over `i++`\r\n```suggestion\r\n    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); ++it) {\r\n```",
    "created_at": "2020-07-01T02:50:34Z",
    "updated_at": "2020-07-09T06:07:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448086302",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086302"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448086302"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 626,
    "original_line": 626,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086697",
    "pull_request_review_id": 440512302,
    "id": 448086697,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4NjY5Nw==",
    "diff_hunk": "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n+        if ((*it).second > 0) return false;\n+    }\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+    // Don't flush if there haven't been any batch writes for this database.\n+    auto it = env->mapFileUseCount.find(strFile);\n+    if (it == env->mapFileUseCount.end()) return false;\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n-        }\n-    }\n+    LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+    int64_t nStart = GetTimeMillis();\n+\n+    // Flush wallet file so it's self contained\n+    env->CloseDb(strFile);\n+    env->CheckpointLSN(strFile);\n+    env->mapFileUseCount.erase(it);",
    "path": "src/wallet/bdb.cpp",
    "position": 56,
    "original_position": 59,
    "commit_id": "e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e",
    "original_commit_id": "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sanity check: Does this erase the same element as the previous version? `env->mapFileUseCount.erase(mi++);`",
    "created_at": "2020-07-01T02:52:19Z",
    "updated_at": "2020-07-09T06:07:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448086697",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086697"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448086697"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448086697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 640,
    "original_line": 640,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448087227",
    "pull_request_review_id": 440512302,
    "id": 448087227,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4NzIyNw==",
    "diff_hunk": "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n+        if ((*it).second > 0) return false;\n+    }\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+    // Don't flush if there haven't been any batch writes for this database.\n+    auto it = env->mapFileUseCount.find(strFile);\n+    if (it == env->mapFileUseCount.end()) return false;\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n-        }\n-    }\n+    LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+    int64_t nStart = GetTimeMillis();\n+\n+    // Flush wallet file so it's self contained",
    "path": "src/wallet/bdb.cpp",
    "position": 53,
    "original_position": 56,
    "commit_id": "e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e",
    "original_commit_id": "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: self-contained",
    "created_at": "2020-07-01T02:54:50Z",
    "updated_at": "2020-07-09T06:07:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448087227",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448087227"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448087227"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448087227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 637,
    "original_line": 637,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448371355",
    "pull_request_review_id": 440879913,
    "id": 448371355,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MTM1NQ==",
    "diff_hunk": "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n+        if ((*it).second > 0) return false;\n+    }\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+    // Don't flush if there haven't been any batch writes for this database.\n+    auto it = env->mapFileUseCount.find(strFile);\n+    if (it == env->mapFileUseCount.end()) return false;\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n-        }\n-    }\n+    LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+    int64_t nStart = GetTimeMillis();\n+\n+    // Flush wallet file so it's self contained\n+    env->CloseDb(strFile);\n+    env->CheckpointLSN(strFile);\n+    env->mapFileUseCount.erase(it);",
    "path": "src/wallet/bdb.cpp",
    "position": 56,
    "original_position": 59,
    "commit_id": "e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e",
    "original_commit_id": "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. The post-incrementer returns (a copy of) the value before incrementing https://en.cppreference.com/w/cpp/language/operator_incdec",
    "created_at": "2020-07-01T13:41:34Z",
    "updated_at": "2020-07-09T06:07:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448371355",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448371355"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448371355"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448371355/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 640,
    "original_line": 640,
    "side": "RIGHT",
    "in_reply_to_id": 448086697
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372257",
    "pull_request_review_id": 440881201,
    "id": 448372257,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MjI1Nw==",
    "diff_hunk": "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {",
    "path": "src/wallet/bdb.cpp",
    "position": 33,
    "original_position": 36,
    "commit_id": "e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e",
    "original_commit_id": "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It makes no difference to the compiled code since we're not using the return value of the incrementer. I'll change to `++it` if I have to retouch this branch, but otherwise it's not worth invalidating ACKs.",
    "created_at": "2020-07-01T13:43:01Z",
    "updated_at": "2020-07-09T06:07:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448372257",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372257"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448372257"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372257/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 626,
    "original_line": 626,
    "side": "RIGHT",
    "in_reply_to_id": 448086302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372383",
    "pull_request_review_id": 440881358,
    "id": 448372383,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MjM4Mw==",
    "diff_hunk": "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {\n+        if ((*it).second > 0) return false;\n+    }\n \n-                // Flush wallet file so it's self contained\n-                env->CloseDb(strFile);\n-                env->CheckpointLSN(strFile);\n+    // Don't flush if there haven't been any batch writes for this database.\n+    auto it = env->mapFileUseCount.find(strFile);\n+    if (it == env->mapFileUseCount.end()) return false;\n \n-                env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::WALLETDB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n-                ret = true;\n-            }\n-        }\n-    }\n+    LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n+    int64_t nStart = GetTimeMillis();\n+\n+    // Flush wallet file so it's self contained",
    "path": "src/wallet/bdb.cpp",
    "position": 53,
    "original_position": 56,
    "commit_id": "e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e",
    "original_commit_id": "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will change if I need to retouch",
    "created_at": "2020-07-01T13:43:13Z",
    "updated_at": "2020-07-09T06:07:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448372383",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372383"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r448372383"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448372383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 637,
    "original_line": 637,
    "side": "RIGHT",
    "in_reply_to_id": 448087227
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452102648",
    "pull_request_review_id": 445464912,
    "id": 452102648,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMjY0OA==",
    "diff_hunk": "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {",
    "path": "src/wallet/bdb.cpp",
    "position": 33,
    "original_position": 36,
    "commit_id": "e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e",
    "original_commit_id": "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, extra space after `begin`. Better, use range based loop.",
    "created_at": "2020-07-09T09:55:31Z",
    "updated_at": "2020-07-09T10:01:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r452102648",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452102648"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r452102648"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452102648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 626,
    "original_line": 626,
    "side": "RIGHT",
    "in_reply_to_id": 448086302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452126633",
    "pull_request_review_id": 445497992,
    "id": 452126633,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyNjYzMw==",
    "diff_hunk": "@@ -626,44 +626,36 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n {\n-    if (database.IsDummy()) {\n-        return true;\n-    }\n-    bool ret = false;\n+    // There's nothing to do for dummy databases. Return true.\n+    if (database.IsDummy()) return true;\n+\n     BerkeleyEnvironment *env = database.env.get();\n     const std::string& strFile = database.strFile;\n+\n+    // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n-    if (lockDb)\n-    {\n-        // Don't do this if any databases are in use\n-        int nRefCount = 0;\n-        std::map<std::string, int>::iterator mit = env->mapFileUseCount.begin();\n-        while (mit != env->mapFileUseCount.end())\n-        {\n-            nRefCount += (*mit).second;\n-            mit++;\n-        }\n+    if (!lockDb) return false;\n \n-        if (nRefCount == 0)\n-        {\n-            std::map<std::string, int>::iterator mi = env->mapFileUseCount.find(strFile);\n-            if (mi != env->mapFileUseCount.end())\n-            {\n-                LogPrint(BCLog::WALLETDB, \"Flushing %s\\n\", strFile);\n-                int64_t nStart = GetTimeMillis();\n+    // Don't flush if any databases are in use\n+    for (auto it = env->mapFileUseCount.begin() ; it != env->mapFileUseCount.end(); it++) {",
    "path": "src/wallet/bdb.cpp",
    "position": 33,
    "original_position": 36,
    "commit_id": "e846a2a1d9e8aa37abfa55bd4d2a0a9f55ba6c8e",
    "original_commit_id": "7c10020456cbcf8df5db6cd2f5db70d8c9057808",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. Even better. Will change if I have to retouch.",
    "created_at": "2020-07-09T10:40:38Z",
    "updated_at": "2020-07-09T10:40:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r452126633",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452126633"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19085#discussion_r452126633"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19085"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452126633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 626,
    "original_line": 626,
    "side": "RIGHT",
    "in_reply_to_id": 448086302
  }
]