[
  {
    "sha": "e3245f2e7b6f98cda38a3806da854f7d513fec2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzI0NWYyZTdiNmY5OGNkYTM4YTM4MDZkYTg1NGY3ZDUxM2ZlYzJm",
    "commit": {
      "author": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-07-22T19:34:45Z"
      },
      "committer": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-07-22T19:34:45Z"
      },
      "message": "Removes Boost predicate.hpp dependency\n\nThis is a squashed commit that squashes the following commits:\n\nThis commit removes the `boost/algorithm/string/predicate.hpp` dependenc\nfrom the project by replacing the function calls to `boost::algorithm::starts_with`\n`boost::algorithm::ends_with` and `all` with respectively C++11'\n`std::basic_string::front`, `std::basic_string::back`, `std::all_of` function calls\n\nThis commit replaces `boost::algorithm::is_digit` with  a locale independent isdigi\nfunction, because the use of the standard library's `isdigit` and `std::isdigit\nfunctions is discoraged in the developer notes",
      "tree": {
        "sha": "84407bc96e5c75f252079bdb3a8d07fa6f4314b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84407bc96e5c75f252079bdb3a8d07fa6f4314b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3245f2e7b6f98cda38a3806da854f7d513fec2f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3245f2e7b6f98cda38a3806da854f7d513fec2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3245f2e7b6f98cda38a3806da854f7d513fec2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3245f2e7b6f98cda38a3806da854f7d513fec2f/comments",
    "author": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a34593ddb7a6d10c19533754d7a23345a155986",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a34593ddb7a6d10c19533754d7a23345a155986",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a34593ddb7a6d10c19533754d7a23345a155986"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 39,
      "deletions": 16
    },
    "files": [
      {
        "sha": "7225ecc4bb134f8577a461e0f893d3dc6e9dc628",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=e3245f2e7b6f98cda38a3806da854f7d513fec2f",
        "patch": "@@ -16,10 +16,11 @@\n #include <version.h>\n \n #include <boost/algorithm/string/classification.hpp>\n-#include <boost/algorithm/string/predicate.hpp>\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/algorithm/string/split.hpp>\n \n+#include <algorithm>\n+\n CScript ParseScript(const std::string& s)\n {\n     CScript result;\n@@ -54,20 +55,20 @@ CScript ParseScript(const std::string& s)\n         {\n             // Empty string, ignore. (boost::split given '' will return one word)\n         }\n-        else if (all(*w, boost::algorithm::is_digit()) ||\n-            (boost::algorithm::starts_with(*w, \"-\") && all(std::string(w->begin()+1, w->end()), boost::algorithm::is_digit())))\n+        else if (std::all_of(w->begin(), w->end(), ::IsDigit) ||\n+            (w->front() == '-' && w->size() > 1 && std::all_of(w->begin()+1, w->end(), ::IsDigit)))\n         {\n             // Number\n             int64_t n = atoi64(*w);\n             result << n;\n         }\n-        else if (boost::algorithm::starts_with(*w, \"0x\") && (w->begin()+2 != w->end()) && IsHex(std::string(w->begin()+2, w->end())))\n+        else if (w->substr(0,2) == \"0x\" && w->size() > 2 && IsHex(std::string(w->begin()+2, w->end())))\n         {\n             // Raw hex data, inserted NOT pushed onto stack:\n             std::vector<unsigned char> raw = ParseHex(std::string(w->begin()+2, w->end()));\n             result.insert(result.end(), raw.begin(), raw.end());\n         }\n-        else if (w->size() >= 2 && boost::algorithm::starts_with(*w, \"'\") && boost::algorithm::ends_with(*w, \"'\"))\n+        else if (w->size() >= 2 && w->front() == '\\'' && w->back() == '\\'')\n         {\n             // Single-quoted string, pushed as data. NOTE: this is poor-man's\n             // parsing, spaces/tabs/newlines in single-quoted strings won't work."
      },
      {
        "sha": "607eb89573b9434887135fb97ebe9d01d9e5a749",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=e3245f2e7b6f98cda38a3806da854f7d513fec2f",
        "patch": "@@ -20,7 +20,6 @@\n #endif\n \n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n-#include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n \n #if !defined(MSG_NOSIGNAL)\n #define MSG_NOSIGNAL 0\n@@ -121,8 +120,7 @@ bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nM\n     std::string strHost(pszName);\n     if (strHost.empty())\n         return false;\n-    if (boost::algorithm::starts_with(strHost, \"[\") && boost::algorithm::ends_with(strHost, \"]\"))\n-    {\n+    if (strHost.front() == '[' && strHost.back() == ']') {\n         strHost = strHost.substr(1, strHost.size() - 2);\n     }\n "
      },
      {
        "sha": "3661c762fccc5104412fc4a67a69f181daf0d8cb",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=e3245f2e7b6f98cda38a3806da854f7d513fec2f",
        "patch": "@@ -806,6 +806,21 @@ BOOST_AUTO_TEST_CASE(gettime)\n     BOOST_CHECK((GetTime() & ~0xFFFFFFFFLL) == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(test_IsDigit)\n+{\n+    BOOST_CHECK_EQUAL(IsDigit('0'), true);\n+    BOOST_CHECK_EQUAL(IsDigit('1'), true);\n+    BOOST_CHECK_EQUAL(IsDigit('8'), true);\n+    BOOST_CHECK_EQUAL(IsDigit('9'), true);\n+\n+    BOOST_CHECK_EQUAL(IsDigit('0' - 1), false);\n+    BOOST_CHECK_EQUAL(IsDigit('9' + 1), false);\n+    BOOST_CHECK_EQUAL(IsDigit(0), false);\n+    BOOST_CHECK_EQUAL(IsDigit(1), false);\n+    BOOST_CHECK_EQUAL(IsDigit(8), false);\n+    BOOST_CHECK_EQUAL(IsDigit(9), false);\n+}\n+\n BOOST_AUTO_TEST_CASE(test_ParseInt32)\n {\n     int32_t n;"
      },
      {
        "sha": "c6927021cb123d9aca58d03970ac584b1889639a",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=e3245f2e7b6f98cda38a3806da854f7d513fec2f",
        "patch": "@@ -473,7 +473,7 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n             /* pass single 0 */\n             ++ptr;\n         } else if (val[ptr] >= '1' && val[ptr] <= '9') {\n-            while (ptr < end && val[ptr] >= '0' && val[ptr] <= '9') {\n+            while (ptr < end && IsDigit(val[ptr])) {\n                 if (!ProcessMantissaDigit(val[ptr], mantissa, mantissa_tzeros))\n                     return false; /* overflow */\n                 ++ptr;\n@@ -483,9 +483,9 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     if (ptr < end && val[ptr] == '.')\n     {\n         ++ptr;\n-        if (ptr < end && val[ptr] >= '0' && val[ptr] <= '9')\n+        if (ptr < end && IsDigit(val[ptr]))\n         {\n-            while (ptr < end && val[ptr] >= '0' && val[ptr] <= '9') {\n+            while (ptr < end && IsDigit(val[ptr])) {\n                 if (!ProcessMantissaDigit(val[ptr], mantissa, mantissa_tzeros))\n                     return false; /* overflow */\n                 ++ptr;\n@@ -502,8 +502,8 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n             exponent_sign = true;\n             ++ptr;\n         }\n-        if (ptr < end && val[ptr] >= '0' && val[ptr] <= '9') {\n-            while (ptr < end && val[ptr] >= '0' && val[ptr] <= '9') {\n+        if (ptr < end && IsDigit(val[ptr])) {\n+            while (ptr < end && IsDigit(val[ptr])) {\n                 if (exponent > (UPPER_BOUND / 10LL))\n                     return false; /* overflow */\n                 exponent = exponent * 10 + val[ptr] - '0';"
      },
      {
        "sha": "47f9afba1c113be91428e97763802e447df6f795",
        "filename": "src/utilstrencodings.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/utilstrencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/utilstrencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.h?ref=e3245f2e7b6f98cda38a3806da854f7d513fec2f",
        "patch": "@@ -61,6 +61,16 @@ int64_t atoi64(const char* psz);\n int64_t atoi64(const std::string& str);\n int atoi(const std::string& str);\n \n+/**\n+ * Tests if the given character is a decimal digit.\n+ * @param[in] c     character to test\n+ * @return          true if the argument is a decimal digit; otherwise false.\n+ */\n+constexpr bool IsDigit(char c)\n+{\n+    return c >= '0' && c <= '9';\n+}\n+\n /**\n  * Convert string to signed 32-bit integer with strict parse error feedback.\n  * @returns true if the entire string could be parsed as valid integer,"
      },
      {
        "sha": "4e1f6548df41225234c74460d457a37aec16bd0b",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3245f2e7b6f98cda38a3806da854f7d513fec2f/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=e3245f2e7b6f98cda38a3806da854f7d513fec2f",
        "patch": "@@ -585,13 +585,13 @@ UniValue importwallet(const JSONRPCRequest& request)\n                 std::string strLabel;\n                 bool fLabel = true;\n                 for (unsigned int nStr = 2; nStr < vstr.size(); nStr++) {\n-                    if (boost::algorithm::starts_with(vstr[nStr], \"#\"))\n+                    if (vstr[nStr].front() == '#')\n                         break;\n                     if (vstr[nStr] == \"change=1\")\n                         fLabel = false;\n                     if (vstr[nStr] == \"reserve=1\")\n                         fLabel = false;\n-                    if (boost::algorithm::starts_with(vstr[nStr], \"label=\")) {\n+                    if (vstr[nStr].substr(0,6) == \"label=\") {\n                         strLabel = DecodeDumpString(vstr[nStr].substr(6));\n                         fLabel = true;\n                     }"
      },
      {
        "sha": "8f7a1fd76be419c6e993017802b220b1bba3fc70",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3245f2e7b6f98cda38a3806da854f7d513fec2f/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3245f2e7b6f98cda38a3806da854f7d513fec2f/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=e3245f2e7b6f98cda38a3806da854f7d513fec2f",
        "patch": "@@ -49,7 +49,6 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/algorithm/string.hpp\n     boost/algorithm/string/case_conv.hpp\n     boost/algorithm/string/classification.hpp\n-    boost/algorithm/string/predicate.hpp\n     boost/algorithm/string/replace.hpp\n     boost/algorithm/string/split.hpp\n     boost/bind.hpp"
      }
    ]
  }
]