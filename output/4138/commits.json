[
  {
    "sha": "783b182c8fa92674fa609b584c0b187469893ca4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODNiMTgyYzhmYTkyNjc0ZmE2MDliNTg0YzBiMTg3NDY5ODkzY2E0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-05-06T13:25:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-05-06T13:29:16Z"
      },
      "message": "Remove dummy PRIszX macros for formatting\n\nSize specifiers are no longer needed now that we use typesafe tinyformat\nfor string formatting, instead of the system's sprintf.\n\nNo functional changes.\n\nThis continues the work in #3735.",
      "tree": {
        "sha": "a350421cd300a76f3004547793d0a74faadd9c32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a350421cd300a76f3004547793d0a74faadd9c32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/783b182c8fa92674fa609b584c0b187469893ca4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/783b182c8fa92674fa609b584c0b187469893ca4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/783b182c8fa92674fa609b584c0b187469893ca4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/783b182c8fa92674fa609b584c0b187469893ca4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b733288d95842d13a6559477bc9e8b5a93457ef0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b733288d95842d13a6559477bc9e8b5a93457ef0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b733288d95842d13a6559477bc9e8b5a93457ef0"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 28,
      "deletions": 40
    },
    "files": [
      {
        "sha": "7651ce9957ed633cd1b9d5520ba84d2cdf5944d9",
        "filename": "src/core.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/core.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/core.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -140,7 +140,7 @@ double CTransaction::ComputePriority(double dPriorityInputs, unsigned int nTxSiz\n std::string CTransaction::ToString() const\n {\n     std::string str;\n-    str += strprintf(\"CTransaction(hash=%s, ver=%d, vin.size=%\"PRIszu\", vout.size=%\"PRIszu\", nLockTime=%u)\\n\",\n+    str += strprintf(\"CTransaction(hash=%s, ver=%d, vin.size=%u, vout.size=%u, nLockTime=%u)\\n\",\n         GetHash().ToString().substr(0,10),\n         nVersion,\n         vin.size(),\n@@ -269,7 +269,7 @@ uint256 CBlock::CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMer\n \n void CBlock::print() const\n {\n-    LogPrintf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%\"PRIszu\")\\n\",\n+    LogPrintf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%u)\\n\",\n         GetHash().ToString(),\n         nVersion,\n         hashPrevBlock.ToString(),"
      },
      {
        "sha": "821ac4c875adb2de32f103fef9c4e0e6ebeb63bb",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -1078,12 +1078,12 @@ bool AppInit2(boost::thread_group& threadGroup)\n     RandAddSeedPerfmon();\n \n     //// debug print\n-    LogPrintf(\"mapBlockIndex.size() = %\"PRIszu\"\\n\",   mapBlockIndex.size());\n+    LogPrintf(\"mapBlockIndex.size() = %u\\n\",   mapBlockIndex.size());\n     LogPrintf(\"nBestHeight = %d\\n\",                   chainActive.Height());\n #ifdef ENABLE_WALLET\n-    LogPrintf(\"setKeyPool.size() = %\"PRIszu\"\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n-    LogPrintf(\"mapWallet.size() = %\"PRIszu\"\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n-    LogPrintf(\"mapAddressBook.size() = %\"PRIszu\"\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+    LogPrintf(\"setKeyPool.size() = %u\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %u\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n #endif\n \n     StartNode(threadGroup);"
      },
      {
        "sha": "77418bbd15ee2b762cec3b40abaa118b21887daf",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -432,7 +432,7 @@ bool AddOrphanTx(const CTransaction& tx)\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n         mapOrphanTransactionsByPrev[txin.prevout.hash].insert(hash);\n \n-    LogPrint(\"mempool\", \"stored orphan tx %s (mapsz %\"PRIszu\")\\n\", hash.ToString(),\n+    LogPrint(\"mempool\", \"stored orphan tx %s (mapsz %u)\\n\", hash.ToString(),\n         mapOrphanTransactions.size());\n     return true;\n }\n@@ -3044,7 +3044,7 @@ void PrintBlockTree()\n         // print item\n         CBlock block;\n         ReadBlockFromDisk(block, pindex);\n-        LogPrintf(\"%d (blk%05u.dat:0x%x)  %s  tx %\"PRIszu\"\\n\",\n+        LogPrintf(\"%d (blk%05u.dat:0x%x)  %s  tx %u\\n\",\n             pindex->nHeight,\n             pindex->GetBlockPos().nFile, pindex->GetBlockPos().nPos,\n             DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", block.GetBlockTime()),\n@@ -3371,7 +3371,7 @@ void static ProcessGetData(CNode* pfrom)\n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n {\n     RandAddSeedPerfmon();\n-    LogPrint(\"net\", \"received: %s (%\"PRIszu\" bytes)\\n\", strCommand, vRecv.size());\n+    LogPrint(\"net\", \"received: %s (%u bytes)\\n\", strCommand, vRecv.size());\n     if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n     {\n         LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n@@ -3515,7 +3515,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (vAddr.size() > 1000)\n         {\n             Misbehaving(pfrom->GetId(), 20);\n-            return error(\"message addr size() = %\"PRIszu\"\", vAddr.size());\n+            return error(\"message addr size() = %u\", vAddr.size());\n         }\n \n         // Store the new addresses\n@@ -3578,7 +3578,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (vInv.size() > MAX_INV_SZ)\n         {\n             Misbehaving(pfrom->GetId(), 20);\n-            return error(\"message inv size() = %\"PRIszu\"\", vInv.size());\n+            return error(\"message inv size() = %u\", vInv.size());\n         }\n \n         LOCK(cs_main);\n@@ -3617,11 +3617,11 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (vInv.size() > MAX_INV_SZ)\n         {\n             Misbehaving(pfrom->GetId(), 20);\n-            return error(\"message getdata size() = %\"PRIszu\"\", vInv.size());\n+            return error(\"message getdata size() = %u\", vInv.size());\n         }\n \n         if (fDebug || (vInv.size() != 1))\n-            LogPrint(\"net\", \"received getdata (%\"PRIszu\" invsz)\\n\", vInv.size());\n+            LogPrint(\"net\", \"received getdata (%u invsz)\\n\", vInv.size());\n \n         if ((fDebug && vInv.size() > 0) || (vInv.size() == 1))\n             LogPrint(\"net\", \"received getdata for: %s\\n\", vInv[0].ToString());\n@@ -3729,7 +3729,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             vEraseQueue.push_back(inv.hash);\n \n \n-            LogPrint(\"mempool\", \"AcceptToMemoryPool: %s %s : accepted %s (poolsz %\"PRIszu\")\\n\",\n+            LogPrint(\"mempool\", \"AcceptToMemoryPool: %s %s : accepted %s (poolsz %u)\\n\",\n                 pfrom->addr.ToString(), pfrom->cleanSubVer,\n                 tx.GetHash().ToString(),\n                 mempool.mapTx.size());\n@@ -3914,7 +3914,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         if (!(sProblem.empty())) {\n-            LogPrint(\"net\", \"pong %s %s: %s, %x expected, %x received, %\"PRIszu\" bytes\\n\",\n+            LogPrint(\"net\", \"pong %s %s: %s, %x expected, %x received, %u bytes\\n\",\n                 pfrom->addr.ToString(),\n                 pfrom->cleanSubVer,\n                 sProblem,\n@@ -4049,7 +4049,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n bool ProcessMessages(CNode* pfrom)\n {\n     //if (fDebug)\n-    //    LogPrintf(\"ProcessMessages(%\"PRIszu\" messages)\\n\", pfrom->vRecvMsg.size());\n+    //    LogPrintf(\"ProcessMessages(%u messages)\\n\", pfrom->vRecvMsg.size());\n \n     //\n     // Message format\n@@ -4077,7 +4077,7 @@ bool ProcessMessages(CNode* pfrom)\n         CNetMessage& msg = *it;\n \n         //if (fDebug)\n-        //    LogPrintf(\"ProcessMessages(message %u msgsz, %\"PRIszu\" bytes, complete:%s)\\n\",\n+        //    LogPrintf(\"ProcessMessages(message %u msgsz, %u bytes, complete:%s)\\n\",\n         //            msg.hdr.nMessageSize, msg.vRecv.size(),\n         //            msg.complete() ? \"Y\" : \"N\");\n "
      },
      {
        "sha": "6bc6edf34f1bf783c01775fe72b375b93074f029",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -528,7 +528,7 @@ void static BitcoinMiner(CWallet *pwallet)\n         CBlock *pblock = &pblocktemplate->block;\n         IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n \n-        LogPrintf(\"Running BitcoinMiner with %\"PRIszu\" transactions in block (%u bytes)\\n\", pblock->vtx.size(),\n+        LogPrintf(\"Running BitcoinMiner with %u transactions in block (%u bytes)\\n\", pblock->vtx.size(),\n                ::GetSerializeSize(*pblock, SER_NETWORK, PROTOCOL_VERSION));\n \n         //"
      },
      {
        "sha": "6964b97be36e1b5180a7cdf00edf84ac57905bb5",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -187,7 +187,7 @@ CScript _createmultisig(const Array& params)\n     if ((int)keys.size() < nRequired)\n         throw runtime_error(\n             strprintf(\"not enough keys supplied \"\n-                      \"(got %\"PRIszu\" keys, but need at least %d to redeem)\", keys.size(), nRequired));\n+                      \"(got %u keys, but need at least %d to redeem)\", keys.size(), nRequired));\n     std::vector<CPubKey> pubkeys;\n     pubkeys.resize(keys.size());\n     for (unsigned int i = 0; i < keys.size(); i++)"
      },
      {
        "sha": "5cbaa535ab8800aee0afeb9a14ac9b9711f4c08e",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -92,7 +92,7 @@ string HTTPReply(int nStatus, const string& strMsg, bool keepalive)\n             \"HTTP/1.1 %d %s\\r\\n\"\n             \"Date: %s\\r\\n\"\n             \"Connection: %s\\r\\n\"\n-            \"Content-Length: %\"PRIszu\"\\r\\n\"\n+            \"Content-Length: %u\\r\\n\"\n             \"Content-Type: application/json\\r\\n\"\n             \"Server: bitcoin-json-rpc/%s\\r\\n\"\n             \"\\r\\n\""
      },
      {
        "sha": "44998cbda77c740471fbbd74bd312989d6d16b45",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -321,15 +321,15 @@ BOOST_AUTO_TEST_CASE(strprintf_numbers)\n \n     size_t st = 12345678; /* unsigned size_t test value */\n     ssize_t sst = -12345678; /* signed size_t test value */\n-    BOOST_CHECK(strprintf(\"%s %\"PRIszd\" %s\", B, sst, E) == B\" -12345678 \"E);\n-    BOOST_CHECK(strprintf(\"%s %\"PRIszu\" %s\", B, st, E) == B\" 12345678 \"E);\n-    BOOST_CHECK(strprintf(\"%s %\"PRIszx\" %s\", B, st, E) == B\" bc614e \"E);\n+    BOOST_CHECK(strprintf(\"%s %d %s\", B, sst, E) == B\" -12345678 \"E);\n+    BOOST_CHECK(strprintf(\"%s %u %s\", B, st, E) == B\" 12345678 \"E);\n+    BOOST_CHECK(strprintf(\"%s %x %s\", B, st, E) == B\" bc614e \"E);\n \n     ptrdiff_t pt = 87654321; /* positive ptrdiff_t test value */\n     ptrdiff_t spt = -87654321; /* negative ptrdiff_t test value */\n-    BOOST_CHECK(strprintf(\"%s %\"PRIpdd\" %s\", B, spt, E) == B\" -87654321 \"E);\n-    BOOST_CHECK(strprintf(\"%s %\"PRIpdu\" %s\", B, pt, E) == B\" 87654321 \"E);\n-    BOOST_CHECK(strprintf(\"%s %\"PRIpdx\" %s\", B, pt, E) == B\" 5397fb1 \"E);\n+    BOOST_CHECK(strprintf(\"%s %d %s\", B, spt, E) == B\" -87654321 \"E);\n+    BOOST_CHECK(strprintf(\"%s %u %s\", B, pt, E) == B\" 87654321 \"E);\n+    BOOST_CHECK(strprintf(\"%s %x %s\", B, pt, E) == B\" 5397fb1 \"E);\n }\n #undef B\n #undef E"
      },
      {
        "sha": "55d9308ab62bc738cc08db740ba8556fff878b2d",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -44,18 +44,6 @@ static const int64_t CENT = 1000000;\n #define UEND(a)             ((unsigned char*)&((&(a))[1]))\n #define ARRAYLEN(array)     (sizeof(array)/sizeof((array)[0]))\n \n-/* Format characters for (s)size_t, ptrdiff_t.\n- *\n- * Define these as empty as the tinyformat-based formatting system is\n- * type-safe, no special format characters are needed to specify sizes.\n- */\n-#define PRIszx    \"x\"\n-#define PRIszu    \"u\"\n-#define PRIszd    \"d\"\n-#define PRIpdx    \"x\"\n-#define PRIpdu    \"u\"\n-#define PRIpdd    \"d\"\n-\n // This is needed because the foreach macro can't get over the comma in pair<t1, t2>\n #define PAIRTYPE(t1, t2)    std::pair<t1, t2>\n "
      },
      {
        "sha": "22df7a9ad82b2b15dda504147138e2ef845e6df0",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -1638,7 +1638,7 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n             if (!walletdb.WritePool(nEnd, CKeyPool(GenerateNewKey())))\n                 throw runtime_error(\"TopUpKeyPool() : writing generated key failed\");\n             setKeyPool.insert(nEnd);\n-            LogPrintf(\"keypool added key %d, size=%\"PRIszu\"\\n\", nEnd, setKeyPool.size());\n+            LogPrintf(\"keypool added key %d, size=%u\\n\", nEnd, setKeyPool.size());\n         }\n     }\n     return true;"
      },
      {
        "sha": "80e9dded5f6ffbf70f8e980e99df4fc38a34d395",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783b182c8fa92674fa609b584c0b187469893ca4/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783b182c8fa92674fa609b584c0b187469893ca4/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=783b182c8fa92674fa609b584c0b187469893ca4",
        "patch": "@@ -894,7 +894,7 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys)\n         LogPrintf(\"Salvage(aggressive) found no records in %s.\\n\", newFilename);\n         return false;\n     }\n-    LogPrintf(\"Salvage(aggressive) found %\"PRIszu\" records\\n\", salvagedData.size());\n+    LogPrintf(\"Salvage(aggressive) found %u records\\n\", salvagedData.size());\n \n     bool fSuccess = allOK;\n     Db* pdbCopy = new Db(&dbenv.dbenv, 0);"
      }
    ]
  }
]