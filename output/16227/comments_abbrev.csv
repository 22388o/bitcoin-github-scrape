DrahtBot,2019-06-18 04:20:18,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16341](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16341.html) (WIP: Introduce ScriptPubKeyMan interface an",https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-502940054,502940054,
achow101,2019-06-19 22:09:07,Rebased,https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-503765066,503765066,
achow101,2019-06-21 17:55:14,Rebased,https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-504515700,504515700,
MarcoFalke,2019-06-24 14:18:45,Looks like this doesn't compile with `./configure CC=clang CXX=clang++`,https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-505030438,505030438,
achow101,2019-06-24 14:53:55,"There were some lock order issues (I guess bad copy paste?) that I fixed.\n\n> Looks like this doesn't compile with `./configure CC=clang CXX=clang++`\n\nSeems to be working for me now although I didn't actually do anything to try to fix it. Does it work for you now?",https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-505045798,505045798,
MarcoFalke,2019-06-24 15:45:07,"You can see the failure here: https://travis-ci.org/bitcoin/bitcoin/jobs/549788027#L3052 (in the build step)\n\n```\nwallet/wallet.cpp:4653:12: warning: reading variable 'vMasterKey' requires holding mutex 'cs_wallet' [-Wthread-safety-analysis]\n    return vMasterKey.empty();\n           ^\nwallet/wallet.cpp:4663:9: warning: reading variable 'vMasterKey' requires holding mutex 'cs_wallet' [-",https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-505067107,505067107,
achow101,2019-06-24 18:04:07,Fixed those warnings.,https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-505117334,505117334,
l2a5b1,2019-06-28 15:33:18,@achow101 per @MarcoFalke's request please see https://github.com/bitcoin/bitcoin/pull/16303#issuecomment-506768265,https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-506777541,506777541,
achow101,2019-06-28 15:58:13,Fixed the include mentioned in #16303,https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-506785873,506785873,
Sjors,2019-07-10 14:30:52,"re-ACK 93ce4a0; it keeps `EncryptSecret`, `DecryptSecret` and `DecryptKey` in `wallet/crypter.cpp`, but makes them not static. It improves alphabetical includes, reorders some function definitions, fixes commit message, brings back lost code comment.",https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-510086113,510086113,
instagibbs,2019-07-11 20:37:49,"utACK https://github.com/bitcoin/bitcoin/pull/16227/commits/93ce4a0b6fb54efb1f424a71dfc09cc33307e5b9\n\neasy to follow",https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-510644673,510644673,
laanwj,2019-07-11 20:42:34,code review ACK 93ce4a0b6fb54efb1f424a71dfc09cc33307e5b9,https://github.com/bitcoin/bitcoin/pull/16227#issuecomment-510646242,510646242,
MarcoFalke,2019-06-21 18:56:56,"```\nwallet/wallet.cpp:3270:9: error: acquiring mutex 'cs_wallet' that is already held [-Werror,-Wthread-safety-analysis]\n```\n\nAnd\n\n```\n./wallet/wallet.h:1009:10: warning: 'AddKeyPubKey' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]\n    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r296356901,296356901,src/wallet/wallet.cpp
achow101,2019-06-21 19:55:52,Fixed,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r296374300,296374300,src/wallet/wallet.cpp
MarcoFalke,2019-06-24 14:15:30,"This should probably move to wallet.h as well, since `NotifyStatusChanged` moved there.",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r296744852,296744852,src/wallet/crypter.h
achow101,2019-06-24 14:52:18,Fixed,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r296763859,296763859,src/wallet/crypter.h
ryanofsky,2019-06-24 20:36:35,"In commit ""Remove HaveKey static function from keystore"" (b8f6f3f25f9fd45d8659bfa15800c09bda951872)\n\nWould be good to mention why removing this doesnt' change behavior in the commit description (I'd assume because hd keys are always compressed).",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r296904376,296904376,src/keystore.cpp
ryanofsky,2019-06-24 21:13:03,"In commit ""Move WatchOnly stuff from SigningProvider to CWallet"" (8ce8d6a3200921c960d41bca0ba5bf0ab176c5ee)\n\nThe changes in this commit seem undesirable and I don't understand the motivation for them. Why move watch only storage code away from script and key storage code that it's actually similar to, into the cwallet class which less related and more complicated? I could understand if this wa",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r296917906,296917906,src/script/signingprovider.h
achow101,2019-06-24 22:08:47,The point of this was that SigningProviders provide things for signing which watchonly things are not. Those are just scripts and keys that `CWallet` needs to know and are not related to the things that a SigningProvider needs to provide. So that's why I moved them into CWallet. Later these will get moved in the the LegacyScryptPubKeyManager.,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r296935806,296935806,src/script/signingprovider.h
achow101,2019-06-24 22:09:32,"Actually, looking at it now, think this does actually change behavior. I think I will move this function into `rpcwallet.cpp` where it is used.",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r296936043,296936043,src/keystore.cpp
l2a5b1,2019-06-30 11:14:19,"Any thoughts on:\n\n(1) turning `SigningProvider` into a ""pure interface"" that only declares pure virtual functions?\n(2) isolating `SigningProvider` and define it in its own header file?\n\nThese changes could make sense because we are using `SigningProvider` as an interface.",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r298828918,298828918,src/script/signingprovider.h
l2a5b1,2019-06-30 11:15:32,In the spirit of this pull request it could make sense to choose composition of `FillableSigningProvider` over inheritance.,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r298828968,298828968,src/wallet/wallet.h
achow101,2019-06-30 14:04:48,"I think it is fine to leave it here. Making it a pure interface does make sense, but I don't think I will do that here.",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r298835885,298835885,src/script/signingprovider.h
achow101,2019-06-30 14:15:23,We do that later with the rest of the restructure with the introduction of the `ScriptPubKeyMan`. I'm not sure that it makes sense to make it a member now rather than later where a bunch of things will also change.,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r298836319,298836319,src/wallet/wallet.h
kallewoof,2019-07-09 05:55:40,"In 3408fd14267cd0d3f57af73f6ba870edd805ecb0\n\nIs there a reason why some of the methods here are non-virtual? Writing a subclass of this one could easily assume that an override works where it sometimes won't. Recommend adding `virtual` to all of them for simplicity.",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301406541,301406541,src/keystore.h
kallewoof,2019-07-09 06:03:12,Nit: `p` comes before `s` (move this one line down).,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301408391,301408391,src/bench/ccoins_caching.cpp
kallewoof,2019-07-09 06:03:50,Nit: `p` comes before `s` (move this 4 lines down).,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301408511,301408511,src/bitcoin-tx.cpp
kallewoof,2019-07-09 06:05:11,Nit: swap order for alphabeticality (as in other places).,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301408821,301408821,src/rpc/rawtransaction_util.cpp
kallewoof,2019-07-09 06:05:45,Nit: move to L27 for alphabeticality.,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301408943,301408943,src/rpc/rawtransaction.cpp
kallewoof,2019-07-09 06:06:06,Nit: 2 lines down.,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301409027,301409027,src/rpc/util.cpp
kallewoof,2019-07-09 06:06:23,"Nit: `i` comes before `t`\n\n(I am leaving the ones so far as is, as you seem to have paid some attention to ordering of includes, but I am not bringing this up in future occurrences during this review.)",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301409105,301409105,src/script/sign.cpp
kallewoof,2019-07-09 06:07:58,"Alternative, feel free to ignore:\n\n```C++\nif (it == map.end()) return false;\nvalue = it->second;\nreturn true;\n```",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301409521,301409521,src/script/signingprovider.cpp
Sjors,2019-07-09 13:39:57,nit: don't forget to rename the commit,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301591585,301591585,src/keystore.cpp
Sjors,2019-07-09 13:41:50,nit: don't lose this comment,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301592547,301592547,src/keystore.h
Sjors,2019-07-09 14:24:53,Why is this safe to remove?,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301615223,301615223,src/script/signingprovider.cpp
Sjors,2019-07-09 14:37:51,How does solvability play into this?,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301622589,301622589,src/script/signingprovider.h
achow101,2019-07-09 19:53:40,"It's moved, so I'll just leave it as is.",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301765400,301765400,src/script/signingprovider.cpp
achow101,2019-07-09 20:10:06,Made them virtual.,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301771788,301771788,src/keystore.h
achow101,2019-07-09 20:10:16,Fixed the order here and everywhere.,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301771849,301771849,src/bench/ccoins_caching.cpp
achow101,2019-07-09 20:10:35,Added it back,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r301771947,301771947,src/keystore.h
instagibbs,2019-07-11 20:06:06,mu-nit: code commend above should be removed as well,https://github.com/bitcoin/bitcoin/pull/16227#discussion_r302720176,302720176,src/keystore.h
instagibbs,2019-07-11 20:24:39,"This is only called directly after adding the privkey or watchonly key:\n\n```\nCCryptoKeyStore::AddCryptedKey\nCBasicKeyStore::AddKeyPubKey\nCBasicKeyStore::AddWatchOnly\n```\nperhaps leave a comment at the top of this function to the effect.",https://github.com/bitcoin/bitcoin/pull/16227#discussion_r302727073,302727073,src/script/signingprovider.cpp
