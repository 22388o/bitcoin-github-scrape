[
  {
    "sha": "fac724c78f281168ea174c36cada4f95112aea6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM3MjRjNzhmMjgxMTY4ZWExNzRjMzZjYWRhNGY5NTExMmFlYTZk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-03-20T17:56:13Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-03T18:49:32Z"
      },
      "message": "[qa] maxblocksinflight: Actually enable test",
      "tree": {
        "sha": "8f7a2e5f2035c751b8e12234e83ca46188c1db44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f7a2e5f2035c751b8e12234e83ca46188c1db44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac724c78f281168ea174c36cada4f95112aea6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac724c78f281168ea174c36cada4f95112aea6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac724c78f281168ea174c36cada4f95112aea6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac724c78f281168ea174c36cada4f95112aea6d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e662a76288011fe6a640f1c02c2381284ad93a03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e662a76288011fe6a640f1c02c2381284ad93a03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e662a76288011fe6a640f1c02c2381284ad93a03"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 26,
      "deletions": 30
    },
    "files": [
      {
        "sha": "ad633f661dd510d6c87e091e4d67a9ca4ca27324",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 26,
        "deletions": 30,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac724c78f281168ea174c36cada4f95112aea6d/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac724c78f281168ea174c36cada4f95112aea6d/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=fac724c78f281168ea174c36cada4f95112aea6d",
        "patch": "@@ -41,40 +41,36 @@ def add_new_connection(self, connection):\n         self.disconnectOkay = False\n \n     def run(self):\n-        try:\n-            fail = False\n-            self.connection.rpc.generate(1) # Leave IBD\n-\n-            numBlocksToGenerate = [ 8, 16, 128, 1024 ]\n-            for count in range(len(numBlocksToGenerate)):\n-                current_invs = []\n-                for i in range(numBlocksToGenerate[count]):\n-                    current_invs.append(CInv(2, random.randrange(0, 1<<256)))\n-                    if len(current_invs) >= 50000:\n-                        self.connection.send_message(msg_inv(current_invs))\n-                        current_invs = []\n-                if len(current_invs) > 0:\n+        self.connection.rpc.generate(1)  # Leave IBD\n+\n+        numBlocksToGenerate = [8, 16, 128, 1024]\n+        for count in range(len(numBlocksToGenerate)):\n+            current_invs = []\n+            for i in range(numBlocksToGenerate[count]):\n+                current_invs.append(CInv(2, random.randrange(0, 1 << 256)))\n+                if len(current_invs) >= 50000:\n                     self.connection.send_message(msg_inv(current_invs))\n-                \n-                # Wait and see how many blocks were requested\n-                time.sleep(2)\n-\n-                total_requests = 0\n-                with mininode_lock:\n-                    for key in self.blockReqCounts:\n-                        total_requests += self.blockReqCounts[key]\n-                        if self.blockReqCounts[key] > 1:\n-                            raise AssertionError(\"Error, test failed: block %064x requested more than once\" % key)\n-                if total_requests > MAX_REQUESTS:\n-                    raise AssertionError(\"Error, too many blocks (%d) requested\" % total_requests)\n-                print \"Round %d: success (total requests: %d)\" % (count, total_requests)\n-        except AssertionError as e:\n-            print \"TEST FAILED: \", e.args\n+                    current_invs = []\n+            if len(current_invs) > 0:\n+                self.connection.send_message(msg_inv(current_invs))\n+\n+            # Wait and see how many blocks were requested\n+            time.sleep(2)\n+\n+            total_requests = 0\n+            with mininode_lock:\n+                for key in self.blockReqCounts:\n+                    total_requests += self.blockReqCounts[key]\n+                    if self.blockReqCounts[key] > 1:\n+                        raise AssertionError(\"Error, test failed: block %064x requested more than once\" % key)\n+            if total_requests > MAX_REQUESTS:\n+                raise AssertionError(\"Error, too many blocks (%d) requested\" % total_requests)\n+            print \"Round %d: success (total requests: %d)\" % (count, total_requests)\n \n         self.disconnectOkay = True\n         self.connection.disconnect_node()\n \n-        \n+\n class MaxBlocksInFlightTest(BitcoinTestFramework):\n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n@@ -86,7 +82,7 @@ def setup_chain(self):\n         initialize_chain_clean(self.options.tmpdir, 1)\n \n     def setup_network(self):\n-        self.nodes = start_nodes(1, self.options.tmpdir, \n+        self.nodes = start_nodes(1, self.options.tmpdir,\n                                  extra_args=[['-debug', '-whitelist=127.0.0.1']],\n                                  binary=[self.options.testbinary])\n "
      }
    ]
  }
]