[
  {
    "sha": "cd0f402a8c24894752badd7b9572d66f18397098",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDBmNDAyYThjMjQ4OTQ3NTJiYWRkN2I5NTcyZDY2ZjE4Mzk3MDk4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-09-12T17:29:08Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:22:04Z"
      },
      "message": "Clarify validationinterface notification ordering",
      "tree": {
        "sha": "7653b0215b1529bcbd528c87f28e0ee21930b7e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7653b0215b1529bcbd528c87f28e0ee21930b7e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd0f402a8c24894752badd7b9572d66f18397098",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd0f402a8c24894752badd7b9572d66f18397098",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd0f402a8c24894752badd7b9572d66f18397098",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd0f402a8c24894752badd7b9572d66f18397098/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef8ba7d73a480197b756fab00126914e49de4e7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef8ba7d73a480197b756fab00126914e49de4e7b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef8ba7d73a480197b756fab00126914e49de4e7b"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 25,
      "deletions": 1
    },
    "files": [
      {
        "sha": "dd89969f6bc4c06ad01774d2c7969c50c178fdcd",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 25,
        "deletions": 1,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd0f402a8c24894752badd7b9572d66f18397098/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd0f402a8c24894752badd7b9572d66f18397098/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=cd0f402a8c24894752badd7b9572d66f18397098",
        "patch": "@@ -46,7 +46,14 @@ void CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n class CValidationInterface {\n protected:\n     /**\n-     * Notifies listeners of updated block chain tip\n+     * Notifies listeners of updated block chain tip.\n+     *\n+     * Is called after a series of BlockConnected/BlockDisconnected events once\n+     * the chain has made forward progress and is now at the best-known-tip.\n+     *\n+     * If a block is found to be invalid, this event may trigger without\n+     * forward-progress, only to trigger again soon thereafter.\n+     * (TODO: remove this edge case)\n      *\n      * Called on a background thread.\n      */\n@@ -65,6 +72,13 @@ class CValidationInterface {\n      * replacement. This does not include any transactions which are included\n      * in BlockConnectedDisconnected either in block->vtx or in txnConflicted.\n      *\n+     * reason == REORG is not ordered with BlockDisconnected/BlockDisconnected!\n+     *\n+     * Note that in some rare cases (eg mempool limiting) a\n+     * TransactionRemovedFromMempool event may fire with no corresponding\n+     * TransactionAddedToMempool event.\n+     * (TODO: remove this edge case)\n+     *\n      * Called on a background thread.\n      */\n     virtual void TransactionRemovedFromMempool(const CTransactionRef &ptx) {}\n@@ -78,12 +92,22 @@ class CValidationInterface {\n     /**\n      * Notifies listeners of a block being disconnected\n      *\n+     * The ordering of BlockDisconnected and TransactionRemovedFromMempool\n+     * (for transactions removed due to memory constraints or lock time/\n+     * coinbase maturity chenges during the disconnection/reorg) is undefined,\n+     * and the TransactionRemovedFromMempool callbacks may occur *both* before\n+     * and after BlockDisconnected/BlockConnected calls!\n+     *\n      * Called on a background thread.\n      */\n     virtual void BlockDisconnected(const std::shared_ptr<const CBlock> &block) {}\n     /**\n      * Notifies listeners of the new active block chain on-disk.\n      *\n+     * Because flushing to disk happens in batches, this can happen\n+     * significantly after BlockConnected/UpdatedBlockTip calls (and always is\n+     * ordered after BlockConnected/UpdatedBlockTip).\n+     *\n      * Called on a background thread.\n      */\n     virtual void SetBestChain(const CBlockLocator &locator) {}"
      }
    ]
  },
  {
    "sha": "dce98c5e7cdaa10c7a65a63a02e612f2cd623647",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2U5OGM1ZTdjZGFhMTBjN2E2NWE2M2EwMmU2MTJmMmNkNjIzNjQ3",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-08T19:16:59Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:22:04Z"
      },
      "message": "[validationinterface] Also call UpdatedBlockTip on invalidateblock",
      "tree": {
        "sha": "3d1d8172dad7fba3b71f7d4a68f4caf7367ca9c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d1d8172dad7fba3b71f7d4a68f4caf7367ca9c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dce98c5e7cdaa10c7a65a63a02e612f2cd623647",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dce98c5e7cdaa10c7a65a63a02e612f2cd623647",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dce98c5e7cdaa10c7a65a63a02e612f2cd623647",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dce98c5e7cdaa10c7a65a63a02e612f2cd623647/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd0f402a8c24894752badd7b9572d66f18397098",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd0f402a8c24894752badd7b9572d66f18397098",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd0f402a8c24894752badd7b9572d66f18397098"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ea59b2b1073dba54482e8e1139c84b0adab3be67",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dce98c5e7cdaa10c7a65a63a02e612f2cd623647/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dce98c5e7cdaa10c7a65a63a02e612f2cd623647/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=dce98c5e7cdaa10c7a65a63a02e612f2cd623647",
        "patch": "@@ -2717,6 +2717,7 @@ bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& c\n \n     InvalidChainFound(pindex);\n     uiInterface.NotifyBlockTip(IsInitialBlockDownload(), pindex->pprev);\n+    GetMainSignals().UpdatedBlockTip(chainActive.Tip(), chainActive.Tip(), IsInitialBlockDownload());\n     return true;\n }\n bool InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex) {"
      },
      {
        "sha": "410d443f2630a365b60373895fbabc3e6e9fa717",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dce98c5e7cdaa10c7a65a63a02e612f2cd623647/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dce98c5e7cdaa10c7a65a63a02e612f2cd623647/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=dce98c5e7cdaa10c7a65a63a02e612f2cd623647",
        "patch": "@@ -55,6 +55,9 @@ class CValidationInterface {\n      * forward-progress, only to trigger again soon thereafter.\n      * (TODO: remove this edge case)\n      *\n+     * In case of manual block invalidation, this event may trigger with\n+     * pindexNew == pindexFork both before the previous best tip.\n+     *\n      * Called on a background thread.\n      */\n     virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}"
      }
    ]
  },
  {
    "sha": "6be15ece763a669ae78b5de1d0d5d21636d554fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YmUxNWVjZTc2M2E2NjlhZTc4YjVkZTFkMGQ1ZDIxNjM2ZDU1NGZl",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-08T18:55:18Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:25:13Z"
      },
      "message": "Add interface to listen for RPC interrupted events temporarily",
      "tree": {
        "sha": "30eb5484a14ad018dcab18627ec0528e0098893c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30eb5484a14ad018dcab18627ec0528e0098893c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6be15ece763a669ae78b5de1d0d5d21636d554fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6be15ece763a669ae78b5de1d0d5d21636d554fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6be15ece763a669ae78b5de1d0d5d21636d554fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6be15ece763a669ae78b5de1d0d5d21636d554fe/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dce98c5e7cdaa10c7a65a63a02e612f2cd623647",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dce98c5e7cdaa10c7a65a63a02e612f2cd623647",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dce98c5e7cdaa10c7a65a63a02e612f2cd623647"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f4b17c5a7aba0590f55e350c6a781d9cace4ca07",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6be15ece763a669ae78b5de1d0d5d21636d554fe/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6be15ece763a669ae78b5de1d0d5d21636d554fe/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=6be15ece763a669ae78b5de1d0d5d21636d554fe",
        "patch": "@@ -36,6 +36,7 @@ static struct CRPCSignals\n {\n     boost::signals2::signal<void ()> Started;\n     boost::signals2::signal<void ()> Stopped;\n+    boost::signals2::signal<void ()> Interrupted;\n     boost::signals2::signal<void (const CRPCCommand&)> PreCommand;\n } g_rpcSignals;\n \n@@ -49,6 +50,19 @@ void RPCServer::OnStopped(std::function<void ()> slot)\n     g_rpcSignals.Stopped.connect(slot);\n }\n \n+namespace RPCServer {\n+    struct InterruptedListenerInternals {\n+        boost::signals2::scoped_connection connection;\n+    };\n+} // namespace RPCServer\n+\n+RPCServer::InterruptedListener::InterruptedListener(std::function<void ()> callback)\n+{\n+    m_internals.reset(new InterruptedListenerInternals());\n+    m_internals->connection = g_rpcSignals.Interrupted.connect(callback);\n+}\n+RPCServer::InterruptedListener::~InterruptedListener() {}\n+\n void RPCTypeCheck(const UniValue& params,\n                   const std::list<UniValue::VType>& typesExpected,\n                   bool fAllowNull)\n@@ -315,6 +329,7 @@ void InterruptRPC()\n     LogPrint(BCLog::RPC, \"Interrupting RPC\\n\");\n     // Interrupt e.g. running longpolls\n     fRPCRunning = false;\n+    g_rpcSignals.Interrupted();\n }\n \n void StopRPC()"
      },
      {
        "sha": "50203faef7fa49ce23b2c14d7e87b9feaafcac20",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6be15ece763a669ae78b5de1d0d5d21636d554fe/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6be15ece763a669ae78b5de1d0d5d21636d554fe/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=6be15ece763a669ae78b5de1d0d5d21636d554fe",
        "patch": "@@ -25,6 +25,18 @@ namespace RPCServer\n {\n     void OnStarted(std::function<void ()> slot);\n     void OnStopped(std::function<void ()> slot);\n+\n+    struct InterruptedListenerInternals;\n+    /** A scoped listener for when RPC is interrupted (ie IsRPCRunning moves\n+     * from true to false immediately prior to the invocation of this callback).\n+     */\n+    class InterruptedListener {\n+    private:\n+        std::unique_ptr<InterruptedListenerInternals> m_internals;\n+    public:\n+        InterruptedListener(std::function<void ()> callback);\n+        ~InterruptedListener();\n+    };\n }\n \n /** Wrapper for UniValue::VType, which includes typeAny:"
      }
    ]
  },
  {
    "sha": "c93c7d46f220efe594f351843b5ccda0b8532245",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTNjN2Q0NmYyMjBlZmU1OTRmMzUxODQzYjVjY2RhMGI4NTMyMjQ1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-08T19:29:24Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:25:13Z"
      },
      "message": "Add RPC utility to block until tip changes or RPC is interrupted",
      "tree": {
        "sha": "cd995c609e1ac69aac85b433d961bcd529eccbe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd995c609e1ac69aac85b433d961bcd529eccbe3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c93c7d46f220efe594f351843b5ccda0b8532245",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c93c7d46f220efe594f351843b5ccda0b8532245",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c93c7d46f220efe594f351843b5ccda0b8532245",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c93c7d46f220efe594f351843b5ccda0b8532245/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6be15ece763a669ae78b5de1d0d5d21636d554fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6be15ece763a669ae78b5de1d0d5d21636d554fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6be15ece763a669ae78b5de1d0d5d21636d554fe"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 58,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a6f92b8b49a9c353b87b262d246c74b16e76d313",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c93c7d46f220efe594f351843b5ccda0b8532245/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c93c7d46f220efe594f351843b5ccda0b8532245/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=c93c7d46f220efe594f351843b5ccda0b8532245",
        "patch": "@@ -13,6 +13,7 @@\n #include <ui_interface.h>\n #include <util.h>\n #include <utilstrencodings.h>\n+#include <validation.h>\n \n #include <boost/bind.hpp>\n #include <boost/signals2/signal.hpp>\n@@ -63,6 +64,34 @@ RPCServer::InterruptedListener::InterruptedListener(std::function<void ()> callb\n }\n RPCServer::InterruptedListener::~InterruptedListener() {}\n \n+\n+RPCServer::BlockChangeBlocker::BlockChangeBlocker() : m_interrupted_listener([this] {\n+            m_cv.notify_all();\n+        })\n+{\n+    {\n+        LOCK(cs_main);\n+        m_last_block_hash = chainActive.Tip()->GetBlockHash();\n+        m_last_block_height = chainActive.Tip()->nHeight;\n+    }\n+    RegisterValidationInterface(this);\n+}\n+\n+RPCServer::BlockChangeBlocker::~BlockChangeBlocker()\n+{\n+    UnregisterValidationInterface(this);\n+}\n+\n+void RPCServer::BlockChangeBlocker::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n+{\n+    {\n+        WaitableLock lock(m_cs);\n+        m_last_block_hash = pindexNew->GetBlockHash();\n+        m_last_block_height = pindexNew->nHeight;\n+    }\n+    m_cv.notify_all();\n+}\n+\n void RPCTypeCheck(const UniValue& params,\n                   const std::list<UniValue::VType>& typesExpected,\n                   bool fAllowNull)"
      },
      {
        "sha": "804ea13fe278eff0ec4ea1f0b51880e8f86fa1e5",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c93c7d46f220efe594f351843b5ccda0b8532245/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c93c7d46f220efe594f351843b5ccda0b8532245/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=c93c7d46f220efe594f351843b5ccda0b8532245",
        "patch": "@@ -8,7 +8,9 @@\n \n #include <amount.h>\n #include <rpc/protocol.h>\n+#include <sync.h>\n #include <uint256.h>\n+#include <validationinterface.h>\n \n #include <list>\n #include <map>\n@@ -37,6 +39,33 @@ namespace RPCServer\n         InterruptedListener(std::function<void ()> callback);\n         ~InterruptedListener();\n     };\n+\n+\n+    /**\n+     * A utility to block until either RPC is interrupted or the active block\n+     * tip changes.\n+     *\n+     * Automatically registers/deregisters itself with the validationinterface\n+     * on construction/deconstruction.\n+     */\n+    class BlockChangeBlocker : public CValidationInterface\n+    {\n+    private:\n+        InterruptedListener m_interrupted_listener;\n+\n+    public:\n+        uint256 m_last_block_hash;\n+        int m_last_block_height;\n+\n+        CWaitableCriticalSection m_cs;\n+        CConditionVariable m_cv;\n+\n+        BlockChangeBlocker();\n+        ~BlockChangeBlocker();\n+\n+    protected:\n+        void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n+    };\n }\n \n /** Wrapper for UniValue::VType, which includes typeAny:"
      }
    ]
  },
  {
    "sha": "12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMmYwNjdkMTc2NGZiOGU0OThiZjRmOWZmZTViMDFkNjMxZDI3NmYy",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-08T19:47:10Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:25:13Z"
      },
      "message": "Use BlockChangeBlocker instead of hacky workaround in chain RPCs",
      "tree": {
        "sha": "2a9c2f0abd85b5503256bb941f6332b665e4eafe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a9c2f0abd85b5503256bb941f6332b665e4eafe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12f067d1764fb8e498bf4f9ffe5b01d631d276f2/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c93c7d46f220efe594f351843b5ccda0b8532245",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c93c7d46f220efe594f351843b5ccda0b8532245",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c93c7d46f220efe594f351843b5ccda0b8532245"
      }
    ],
    "stats": {
      "total": 98,
      "additions": 30,
      "deletions": 68
    },
    "files": [
      {
        "sha": "712e44394494dcadc0b5cb8d005f645f9ecb7d59",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12f067d1764fb8e498bf4f9ffe5b01d631d276f2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12f067d1764fb8e498bf4f9ffe5b01d631d276f2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
        "patch": "@@ -296,15 +296,8 @@ static void registerSignalHandler(int signal, void(*handler)(int))\n }\n #endif\n \n-void OnRPCStarted()\n-{\n-    uiInterface.NotifyBlockTip.connect(&RPCNotifyBlockChange);\n-}\n-\n void OnRPCStopped()\n {\n-    uiInterface.NotifyBlockTip.disconnect(&RPCNotifyBlockChange);\n-    RPCNotifyBlockChange(false, nullptr);\n     cvBlockChange.notify_all();\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n@@ -707,7 +700,6 @@ bool InitSanityCheck(void)\n \n bool AppInitServers(boost::thread_group& threadGroup)\n {\n-    RPCServer::OnStarted(&OnRPCStarted);\n     RPCServer::OnStopped(&OnRPCStopped);\n     if (!InitHTTPServer())\n         return false;\n@@ -1516,7 +1508,6 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                     {\n                         LOCK(cs_main);\n                         CBlockIndex* tip = chainActive.Tip();\n-                        RPCNotifyBlockChange(true, tip);\n                         if (tip && tip->nTime > GetAdjustedTime() + 2 * 60 * 60) {\n                             strLoadError = _(\"The block database contains a block which appears to be from the future. \"\n                                     \"This may be due to your computer's date and time being set incorrectly. \""
      },
      {
        "sha": "9ce4062e54fb0dfeb433794b8b3d8d45ce1dfbfd",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 56,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12f067d1764fb8e498bf4f9ffe5b01d631d276f2/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12f067d1764fb8e498bf4f9ffe5b01d631d276f2/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
        "patch": "@@ -35,16 +35,6 @@\n #include <mutex>\n #include <condition_variable>\n \n-struct CUpdatedBlock\n-{\n-    uint256 hash;\n-    int height;\n-};\n-\n-static std::mutex cs_blockchange;\n-static std::condition_variable cond_blockchange;\n-static CUpdatedBlock latestblock;\n-\n extern void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n \n double GetDifficulty(const CBlockIndex* blockindex)\n@@ -184,14 +174,23 @@ UniValue getbestblockhash(const JSONRPCRequest& request)\n     return chainActive.Tip()->GetBlockHash().GetHex();\n }\n \n-void RPCNotifyBlockChange(bool ibd, const CBlockIndex * pindex)\n+template<typename T>\n+static UniValue AwaitBlockChangeCondition(int timeout, const T& term_condition)\n {\n-    if(pindex) {\n-        std::lock_guard<std::mutex> lock(cs_blockchange);\n-        latestblock.hash = pindex->GetBlockHash();\n-        latestblock.height = pindex->nHeight;\n-    }\n-    cond_blockchange.notify_all();\n+    RPCServer::BlockChangeBlocker block_waiter;\n+    WaitableLock lock(block_waiter.m_cs);\n+\n+    auto term = [&block_waiter, &term_condition]{ return term_condition(block_waiter) || !IsRPCRunning(); };\n+\n+    if(timeout)\n+        block_waiter.m_cv.wait_for(lock, std::chrono::milliseconds(timeout), std::move(term));\n+    else\n+        block_waiter.m_cv.wait(lock, std::move(term));\n+\n+    UniValue ret(UniValue::VOBJ);\n+    ret.push_back(Pair(\"hash\", block_waiter.m_last_block_hash.GetHex()));\n+    ret.push_back(Pair(\"height\", block_waiter.m_last_block_height));\n+    return ret;\n }\n \n UniValue waitfornewblock(const JSONRPCRequest& request)\n@@ -216,20 +215,18 @@ UniValue waitfornewblock(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         timeout = request.params[0].get_int();\n \n-    CUpdatedBlock block;\n+    int start_height;\n+    uint256 start_hash;\n     {\n-        std::unique_lock<std::mutex> lock(cs_blockchange);\n-        block = latestblock;\n-        if(timeout)\n-            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&block]{return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n-        else\n-            cond_blockchange.wait(lock, [&block]{return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n-        block = latestblock;\n+        LOCK(cs_main);\n+        start_height = chainActive.Tip()->nHeight;\n+        start_hash = chainActive.Tip()->GetBlockHash();\n     }\n-    UniValue ret(UniValue::VOBJ);\n-    ret.push_back(Pair(\"hash\", block.hash.GetHex()));\n-    ret.push_back(Pair(\"height\", block.height));\n-    return ret;\n+\n+    auto term_condition = [start_height, &start_hash](RPCServer::BlockChangeBlocker& block_waiter)\n+        {return block_waiter.m_last_block_height != start_height || block_waiter.m_last_block_hash != start_hash; };\n+\n+    return AwaitBlockChangeCondition(timeout, term_condition);\n }\n \n UniValue waitforblock(const JSONRPCRequest& request)\n@@ -258,20 +255,8 @@ UniValue waitforblock(const JSONRPCRequest& request)\n     if (!request.params[1].isNull())\n         timeout = request.params[1].get_int();\n \n-    CUpdatedBlock block;\n-    {\n-        std::unique_lock<std::mutex> lock(cs_blockchange);\n-        if(timeout)\n-            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&hash]{return latestblock.hash == hash || !IsRPCRunning();});\n-        else\n-            cond_blockchange.wait(lock, [&hash]{return latestblock.hash == hash || !IsRPCRunning(); });\n-        block = latestblock;\n-    }\n-\n-    UniValue ret(UniValue::VOBJ);\n-    ret.push_back(Pair(\"hash\", block.hash.GetHex()));\n-    ret.push_back(Pair(\"height\", block.height));\n-    return ret;\n+    auto term_condition = [&hash](RPCServer::BlockChangeBlocker& block_waiter){return block_waiter.m_last_block_hash == hash; };\n+    return AwaitBlockChangeCondition(timeout, term_condition);\n }\n \n UniValue waitforblockheight(const JSONRPCRequest& request)\n@@ -301,19 +286,8 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n     if (!request.params[1].isNull())\n         timeout = request.params[1].get_int();\n \n-    CUpdatedBlock block;\n-    {\n-        std::unique_lock<std::mutex> lock(cs_blockchange);\n-        if(timeout)\n-            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&height]{return latestblock.height >= height || !IsRPCRunning();});\n-        else\n-            cond_blockchange.wait(lock, [&height]{return latestblock.height >= height || !IsRPCRunning(); });\n-        block = latestblock;\n-    }\n-    UniValue ret(UniValue::VOBJ);\n-    ret.push_back(Pair(\"hash\", block.hash.GetHex()));\n-    ret.push_back(Pair(\"height\", block.height));\n-    return ret;\n+    auto term_condition = [&height](RPCServer::BlockChangeBlocker& block_waiter){return block_waiter.m_last_block_height >= height; };\n+    return AwaitBlockChangeCondition(timeout, term_condition);\n }\n \n UniValue getdifficulty(const JSONRPCRequest& request)"
      },
      {
        "sha": "e14bb76a8ae942feb644fc27a458d6f8fb702fbf",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12f067d1764fb8e498bf4f9ffe5b01d631d276f2/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12f067d1764fb8e498bf4f9ffe5b01d631d276f2/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
        "patch": "@@ -18,9 +18,6 @@ class UniValue;\n  */\n double GetDifficulty(const CBlockIndex* blockindex = nullptr);\n \n-/** Callback for when block tip changed. */\n-void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n-\n /** Block description to JSON */\n UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false);\n "
      }
    ]
  },
  {
    "sha": "b4928b2c786ddb424fc8486fd44cb38849135516",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDkyOGIyYzc4NmRkYjQyNGZjODQ4NmZkNDRjYjM4ODQ5MTM1NTE2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-08T19:54:58Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:25:13Z"
      },
      "message": "Replace BlockNotifyCallback with a validationinterface client",
      "tree": {
        "sha": "9218c253ceb092ad8231317f3b8173e5d8a9a89a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9218c253ceb092ad8231317f3b8173e5d8a9a89a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4928b2c786ddb424fc8486fd44cb38849135516",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4928b2c786ddb424fc8486fd44cb38849135516",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4928b2c786ddb424fc8486fd44cb38849135516",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4928b2c786ddb424fc8486fd44cb38849135516/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12f067d1764fb8e498bf4f9ffe5b01d631d276f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/12f067d1764fb8e498bf4f9ffe5b01d631d276f2"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 15,
      "deletions": 9
    },
    "files": [
      {
        "sha": "5798af1f069175621d6f88d7600ee82215afa485",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4928b2c786ddb424fc8486fd44cb38849135516/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4928b2c786ddb424fc8486fd44cb38849135516/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b4928b2c786ddb424fc8486fd44cb38849135516",
        "patch": "@@ -522,17 +522,23 @@ std::string LicenseInfo()\n            \"\\n\";\n }\n \n-static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex)\n+namespace {\n+class BlockNotifyCaller : public CValidationInterface\n {\n-    if (initialSync || !pBlockIndex)\n-        return;\n+public:\n+    void UpdatedBlockTip(const CBlockIndex *pBlockIndex, const CBlockIndex *, bool initialSync) override\n+    {\n+        if (initialSync || !pBlockIndex)\n+            return;\n \n-    std::string strCmd = gArgs.GetArg(\"-blocknotify\", \"\");\n-    if (!strCmd.empty()) {\n-        boost::replace_all(strCmd, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n-        boost::thread t(runCommand, strCmd); // thread runs free\n+        std::string strCmd = gArgs.GetArg(\"-blocknotify\", \"\");\n+        if (!strCmd.empty()) {\n+            boost::replace_all(strCmd, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n+            boost::thread t(runCommand, strCmd); // thread runs free\n+        }\n     }\n-}\n+} g_blocknotify_caller;\n+} // anonymous namespace\n \n static bool fHaveGenesis = false;\n static CWaitableCriticalSection cs_GenesisWait;\n@@ -1614,7 +1620,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     }\n \n     if (gArgs.IsArgSet(\"-blocknotify\"))\n-        uiInterface.NotifyBlockTip.connect(BlockNotifyCallback);\n+        RegisterValidationInterface(&g_blocknotify_caller);\n \n     std::vector<fs::path> vImportFiles;\n     for (const std::string& strFile : gArgs.GetArgs(\"-loadblock\")) {"
      }
    ]
  },
  {
    "sha": "31e890c72fe3fdc938fcc9c25fe89f2901a7e626",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWU4OTBjNzJmZTNmZGM5MzhmY2M5YzI1ZmU4OWYyOTAxYTdlNjI2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-08T20:00:07Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:25:13Z"
      },
      "message": "Use a validationinterface to wait for genesis block connection.",
      "tree": {
        "sha": "0e1b5c317a0a3f22ff7e8e2cd2f0050bd9f0b1d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e1b5c317a0a3f22ff7e8e2cd2f0050bd9f0b1d2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31e890c72fe3fdc938fcc9c25fe89f2901a7e626",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31e890c72fe3fdc938fcc9c25fe89f2901a7e626",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31e890c72fe3fdc938fcc9c25fe89f2901a7e626",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31e890c72fe3fdc938fcc9c25fe89f2901a7e626/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4928b2c786ddb424fc8486fd44cb38849135516",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4928b2c786ddb424fc8486fd44cb38849135516",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4928b2c786ddb424fc8486fd44cb38849135516"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 31,
      "deletions": 24
    },
    "files": [
      {
        "sha": "1b49543ca8c4fd7ba070477ca468411ec1a05647",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 24,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31e890c72fe3fdc938fcc9c25fe89f2901a7e626/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31e890c72fe3fdc938fcc9c25fe89f2901a7e626/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=31e890c72fe3fdc938fcc9c25fe89f2901a7e626",
        "patch": "@@ -538,22 +538,37 @@ class BlockNotifyCaller : public CValidationInterface\n         }\n     }\n } g_blocknotify_caller;\n-} // anonymous namespace\n-\n-static bool fHaveGenesis = false;\n-static CWaitableCriticalSection cs_GenesisWait;\n-static CConditionVariable condvar_GenesisWait;\n \n-static void BlockNotifyGenesisWait(bool, const CBlockIndex *pBlockIndex)\n+class GenesisWaiter : public CValidationInterface\n {\n-    if (pBlockIndex != nullptr) {\n-        {\n-            WaitableLock lock_GenesisWait(cs_GenesisWait);\n-            fHaveGenesis = true;\n+    bool m_have_genesis;\n+    CWaitableCriticalSection m_cs;\n+    CConditionVariable m_cv;\n+public:\n+    GenesisWaiter()\n+    {\n+        LOCK(cs_main);\n+        m_have_genesis = chainActive.Tip() != nullptr;\n+    }\n+\n+    void AwaitGenesisBlock()\n+    {\n+        WaitableLock lock(m_cs);\n+        m_cv.wait(lock, [this] { return m_have_genesis; });\n+    }\n+\n+    void UpdatedBlockTip(const CBlockIndex *pBlockIndex, const CBlockIndex *, bool) override\n+    {\n+        if (pBlockIndex != nullptr) {\n+            {\n+                WaitableLock lock_GenesisWait(m_cs);\n+                m_have_genesis = true;\n+            }\n+            m_cv.notify_all();\n         }\n-        condvar_GenesisWait.notify_all();\n     }\n-}\n+};\n+} // anonymous namespace\n \n struct CImportingNow\n {\n@@ -1613,11 +1628,8 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // Either install a handler to notify us when genesis activates, or set fHaveGenesis directly.\n     // No locking, as this happens before any background thread is started.\n-    if (chainActive.Tip() == nullptr) {\n-        uiInterface.NotifyBlockTip.connect(BlockNotifyGenesisWait);\n-    } else {\n-        fHaveGenesis = true;\n-    }\n+    GenesisWaiter genesis_waiter;\n+    RegisterValidationInterface(&genesis_waiter);\n \n     if (gArgs.IsArgSet(\"-blocknotify\"))\n         RegisterValidationInterface(&g_blocknotify_caller);\n@@ -1630,13 +1642,8 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     threadGroup.create_thread(boost::bind(&ThreadImport, vImportFiles));\n \n     // Wait for genesis block to be processed\n-    {\n-        WaitableLock lock(cs_GenesisWait);\n-        while (!fHaveGenesis) {\n-            condvar_GenesisWait.wait(lock);\n-        }\n-        uiInterface.NotifyBlockTip.disconnect(BlockNotifyGenesisWait);\n-    }\n+    genesis_waiter.AwaitGenesisBlock();\n+    UnregisterValidationInterface(&genesis_waiter);\n \n     // ********************************************************* Step 11: start node\n "
      }
    ]
  },
  {
    "sha": "f6837cdb865497d2e47493c17c3e871904ba99cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjgzN2NkYjg2NTQ5N2QyZTQ3NDkzYzE3YzNlODcxOTA0YmE5OWNk",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-08T20:07:15Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:25:13Z"
      },
      "message": "Remove ui_interface.BlockTipChanged",
      "tree": {
        "sha": "6449070a43a9ce69fccc51bd544d3f5b7e7865aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6449070a43a9ce69fccc51bd544d3f5b7e7865aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6837cdb865497d2e47493c17c3e871904ba99cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6837cdb865497d2e47493c17c3e871904ba99cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6837cdb865497d2e47493c17c3e871904ba99cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6837cdb865497d2e47493c17c3e871904ba99cd/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31e890c72fe3fdc938fcc9c25fe89f2901a7e626",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31e890c72fe3fdc938fcc9c25fe89f2901a7e626",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31e890c72fe3fdc938fcc9c25fe89f2901a7e626"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 18,
      "deletions": 11
    },
    "files": [
      {
        "sha": "ecf16aa9f608ef7454d0b46c1ccddc23117b49ed",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6837cdb865497d2e47493c17c3e871904ba99cd/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6837cdb865497d2e47493c17c3e871904ba99cd/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=f6837cdb865497d2e47493c17c3e871904ba99cd",
        "patch": "@@ -313,6 +313,20 @@ static void BlockTipChanged(ClientModel *clientmodel, bool initialSync, const CB\n     }\n }\n \n+namespace {\n+class ValidationListener : public CValidationInterface {\n+    ClientModel *m_clientmodel;\n+public:\n+    ValidationListener(ClientModel *clientmodel) : m_clientmodel(clientmodel) {}\n+    ValidationListener() : m_clientmodel(nullptr) {}\n+\n+    void UpdatedBlockTip(const CBlockIndex *pIndex, const CBlockIndex *, bool initialSync) override {\n+        BlockTipChanged(m_clientmodel, initialSync, pIndex, false);\n+    }\n+};\n+ValidationListener g_validationlistener;\n+} // anonymous namespace\n+\n void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n@@ -321,8 +335,10 @@ void ClientModel::subscribeToCoreSignals()\n     uiInterface.NotifyNetworkActiveChanged.connect(boost::bind(NotifyNetworkActiveChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this));\n     uiInterface.BannedListChanged.connect(boost::bind(BannedListChanged, this));\n-    uiInterface.NotifyBlockTip.connect(boost::bind(BlockTipChanged, this, _1, _2, false));\n     uiInterface.NotifyHeaderTip.connect(boost::bind(BlockTipChanged, this, _1, _2, true));\n+\n+    g_validationlistener = ValidationListener(this);\n+    RegisterValidationInterface(&g_validationlistener);\n }\n \n void ClientModel::unsubscribeFromCoreSignals()\n@@ -333,6 +349,6 @@ void ClientModel::unsubscribeFromCoreSignals()\n     uiInterface.NotifyNetworkActiveChanged.disconnect(boost::bind(NotifyNetworkActiveChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this));\n     uiInterface.BannedListChanged.disconnect(boost::bind(BannedListChanged, this));\n-    uiInterface.NotifyBlockTip.disconnect(boost::bind(BlockTipChanged, this, _1, _2, false));\n     uiInterface.NotifyHeaderTip.disconnect(boost::bind(BlockTipChanged, this, _1, _2, true));\n+    UnregisterValidationInterface(&g_validationlistener);\n }"
      },
      {
        "sha": "1857501d3ce63e1f01d1d0e5adaf87441889c0a1",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6837cdb865497d2e47493c17c3e871904ba99cd/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6837cdb865497d2e47493c17c3e871904ba99cd/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=f6837cdb865497d2e47493c17c3e871904ba99cd",
        "patch": "@@ -100,9 +100,6 @@ class CClientUIInterface\n      */\n     boost::signals2::signal<void (const std::string &title, int nProgress, bool resume_possible)> ShowProgress;\n \n-    /** New block has been accepted */\n-    boost::signals2::signal<void (bool, const CBlockIndex *)> NotifyBlockTip;\n-\n     /** Best header has changed */\n     boost::signals2::signal<void (bool, const CBlockIndex *)> NotifyHeaderTip;\n "
      },
      {
        "sha": "25456fae1f63d35e27e8870c768986ec53cb27a9",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6837cdb865497d2e47493c17c3e871904ba99cd/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6837cdb865497d2e47493c17c3e871904ba99cd/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=f6837cdb865497d2e47493c17c3e871904ba99cd",
        "patch": "@@ -2608,11 +2608,6 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n         // Notify external listeners about the new tip.\n         GetMainSignals().UpdatedBlockTip(pindexNewTip, pindexFork, fInitialDownload);\n \n-        // Always notify the UI if a new block tip was connected\n-        if (pindexFork != pindexNewTip) {\n-            uiInterface.NotifyBlockTip(fInitialDownload, pindexNewTip);\n-        }\n-\n         if (nStopAtHeight && pindexNewTip && pindexNewTip->nHeight >= nStopAtHeight) StartShutdown();\n     } while (pindexNewTip != pindexMostWork);\n     CheckBlockIndex(chainparams.GetConsensus());\n@@ -2716,7 +2711,6 @@ bool CChainState::InvalidateBlock(CValidationState& state, const CChainParams& c\n     }\n \n     InvalidChainFound(pindex);\n-    uiInterface.NotifyBlockTip(IsInitialBlockDownload(), pindex->pprev);\n     GetMainSignals().UpdatedBlockTip(chainActive.Tip(), chainActive.Tip(), IsInitialBlockDownload());\n     return true;\n }"
      }
    ]
  },
  {
    "sha": "17e931d2ff74b08f8d77d1faa96e906d6fef1842",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2U5MzFkMmZmNzRiMDhmOGQ3N2QxZmFhOTZlOTA2ZDZmZWYxODQy",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-08T18:55:35Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-15T23:25:13Z"
      },
      "message": "Replace csBestBlock/cvBlockChanged with validationinterface\n\nAlso push down cs_main locking in getblocktemplate a bit.",
      "tree": {
        "sha": "506ee95d60c9c58dfbde43092495f84106c87bd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/506ee95d60c9c58dfbde43092495f84106c87bd8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17e931d2ff74b08f8d77d1faa96e906d6fef1842",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17e931d2ff74b08f8d77d1faa96e906d6fef1842",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17e931d2ff74b08f8d77d1faa96e906d6fef1842",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17e931d2ff74b08f8d77d1faa96e906d6fef1842/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6837cdb865497d2e47493c17c3e871904ba99cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6837cdb865497d2e47493c17c3e871904ba99cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6837cdb865497d2e47493c17c3e871904ba99cd"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 20,
      "deletions": 18
    },
    "files": [
      {
        "sha": "c4d807c10777aafbe4f6639de86ad1a4dbd4051d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17e931d2ff74b08f8d77d1faa96e906d6fef1842/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17e931d2ff74b08f8d77d1faa96e906d6fef1842/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=17e931d2ff74b08f8d77d1faa96e906d6fef1842",
        "patch": "@@ -296,12 +296,6 @@ static void registerSignalHandler(int signal, void(*handler)(int))\n }\n #endif\n \n-void OnRPCStopped()\n-{\n-    cvBlockChange.notify_all();\n-    LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n-}\n-\n std::string HelpMessage(HelpMessageMode mode)\n {\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n@@ -721,7 +715,6 @@ bool InitSanityCheck(void)\n \n bool AppInitServers(boost::thread_group& threadGroup)\n {\n-    RPCServer::OnStopped(&OnRPCStopped);\n     if (!InitHTTPServer())\n         return false;\n     if (!StartRPC())"
      },
      {
        "sha": "3c269a453f01520710d80bdee704458bb6146214",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17e931d2ff74b08f8d77d1faa96e906d6fef1842/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17e931d2ff74b08f8d77d1faa96e906d6fef1842/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=17e931d2ff74b08f8d77d1faa96e906d6fef1842",
        "patch": "@@ -26,6 +26,7 @@\n #include <validationinterface.h>\n #include <warnings.h>\n \n+#include <future>\n #include <memory>\n #include <stdint.h>\n \n@@ -370,8 +371,6 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getblocktemplate\", \"\")\n          );\n \n-    LOCK(cs_main);\n-\n     std::string strMode = \"template\";\n     UniValue lpval = NullUniValue;\n     std::set<std::string> setClientRules;\n@@ -400,6 +399,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n             if (!DecodeHexBlk(block, dataval.get_str()))\n                 throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block decode failed\");\n \n+            LOCK(cs_main);\n             uint256 hash = block.GetHash();\n             BlockMap::iterator mi = mapBlockIndex.find(hash);\n             if (mi != mapBlockIndex.end()) {\n@@ -447,6 +447,19 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n     if (IsInitialBlockDownload())\n         throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Bitcoin is downloading blocks...\");\n \n+    if (!lpval.isNull()) {\n+        // Make sure the validation interface is drained to avoid spurious wakeups.\n+        // Without this, someone may begin a longpoll immediately after having\n+        // received a block, only to find it immediately waking up!\n+        std::promise<void> promise;\n+        CallFunctionInValidationInterfaceQueue([&promise] {\n+            promise.set_value();\n+        });\n+        promise.get_future().wait();\n+    }\n+\n+    LOCK(cs_main);\n+\n     static unsigned int nTransactionsUpdatedLast;\n \n     if (!lpval.isNull())\n@@ -471,15 +484,17 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n             nTransactionsUpdatedLastLP = nTransactionsUpdatedLast;\n         }\n \n+        RPCServer::BlockChangeBlocker block_waiter;\n+\n         // Release the wallet and main lock while waiting\n         LEAVE_CRITICAL_SECTION(cs_main);\n         {\n             checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\n \n-            WaitableLock lock(csBestBlock);\n-            while (chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning())\n+            WaitableLock lock(block_waiter.m_cs);\n+            while (block_waiter.m_last_block_hash == hashWatchedChain && IsRPCRunning())\n             {\n-                if (cvBlockChange.wait_until(lock, checktxtime) == std::cv_status::timeout)\n+                if (block_waiter.m_cv.wait_until(lock, checktxtime) == std::cv_status::timeout)\n                 {\n                     // Timeout: Check transactions for update\n                     if (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLastLP)"
      },
      {
        "sha": "f9d2384615d2a003604de0f93885c26ab4b762d0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17e931d2ff74b08f8d77d1faa96e906d6fef1842/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17e931d2ff74b08f8d77d1faa96e906d6fef1842/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=17e931d2ff74b08f8d77d1faa96e906d6fef1842",
        "patch": "@@ -201,8 +201,6 @@ CCriticalSection cs_main;\n BlockMap& mapBlockIndex = g_chainstate.mapBlockIndex;\n CChain& chainActive = g_chainstate.chainActive;\n CBlockIndex *pindexBestHeader = nullptr;\n-CWaitableCriticalSection csBestBlock;\n-CConditionVariable cvBlockChange;\n int nScriptCheckThreads = 0;\n std::atomic_bool fImporting(false);\n std::atomic_bool fReindex(false);\n@@ -2138,8 +2136,6 @@ void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainPar\n     // New best block\n     mempool.AddTransactionsUpdated(1);\n \n-    cvBlockChange.notify_all();\n-\n     std::vector<std::string> warningMessages;\n     if (!IsInitialBlockDownload())\n     {"
      },
      {
        "sha": "e9dfd166f279aa1751af11aad63290ab4770f1ec",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17e931d2ff74b08f8d77d1faa96e906d6fef1842/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17e931d2ff74b08f8d77d1faa96e906d6fef1842/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=17e931d2ff74b08f8d77d1faa96e906d6fef1842",
        "patch": "@@ -163,8 +163,6 @@ extern BlockMap& mapBlockIndex;\n extern uint64_t nLastBlockTx;\n extern uint64_t nLastBlockWeight;\n extern const std::string strMessageMagic;\n-extern CWaitableCriticalSection csBestBlock;\n-extern CConditionVariable cvBlockChange;\n extern std::atomic_bool fImporting;\n extern std::atomic_bool fReindex;\n extern int nScriptCheckThreads;"
      }
    ]
  }
]