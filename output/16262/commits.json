[
  {
    "sha": "3b9bf0eb0e0d69f112ce905078018d8351c73e26",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjliZjBlYjBlMGQ2OWYxMTJjZTkwNTA3ODAxOGQ4MzUxYzczZTI2",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2019-06-21T17:27:00Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2019-06-24T00:51:02Z"
      },
      "message": "rpc: Allow shutdown while in generateblocks\n\nBy checking the shutdown flag every loop we can use the entire nonce space\ninstead of breaking every 16 bits to check the shutdown flag.\n\nThis has been possible since the shutdown flag was switched to an atomic,\nbefore that change it was controlled by a condition variable and lock.",
      "tree": {
        "sha": "5c2511317309107e9851edde11690aeaf37802f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c2511317309107e9851edde11690aeaf37802f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b9bf0eb0e0d69f112ce905078018d8351c73e26",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b9bf0eb0e0d69f112ce905078018d8351c73e26",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b9bf0eb0e0d69f112ce905078018d8351c73e26",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b9bf0eb0e0d69f112ce905078018d8351c73e26/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "32e94538185b61fe64bd16de2459e763ec46b4da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32e94538185b61fe64bd16de2459e763ec46b4da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/32e94538185b61fe64bd16de2459e763ec46b4da"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "1dfaecc95173e2d8ec248b0f4a2fc9d596577bcb",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b9bf0eb0e0d69f112ce905078018d8351c73e26/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b9bf0eb0e0d69f112ce905078018d8351c73e26/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=3b9bf0eb0e0d69f112ce905078018d8351c73e26",
        "patch": "@@ -103,7 +103,6 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n \n static UniValue generateBlocks(const CScript& coinbase_script, int nGenerate, uint64_t nMaxTries)\n {\n-    static const int nInnerLoopCount = 0x10000;\n     int nHeightEnd = 0;\n     int nHeight = 0;\n \n@@ -124,14 +123,14 @@ static UniValue generateBlocks(const CScript& coinbase_script, int nGenerate, ui\n             LOCK(cs_main);\n             IncrementExtraNonce(pblock, ::ChainActive().Tip(), nExtraNonce);\n         }\n-        while (nMaxTries > 0 && pblock->nNonce < nInnerLoopCount && !CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus())) {\n+        while (nMaxTries > 0 && pblock->nNonce < std::numeric_limits<uint32_t>::max() && !CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()) && !ShutdownRequested()) {\n             ++pblock->nNonce;\n             --nMaxTries;\n         }\n-        if (nMaxTries == 0) {\n+        if (nMaxTries == 0 || ShutdownRequested()) {\n             break;\n         }\n-        if (pblock->nNonce == nInnerLoopCount) {\n+        if (pblock->nNonce == std::numeric_limits<uint32_t>::max()) {\n             continue;\n         }\n         std::shared_ptr<const CBlock> shared_pblock = std::make_shared<const CBlock>(*pblock);"
      }
    ]
  }
]