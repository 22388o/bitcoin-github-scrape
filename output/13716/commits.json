[
  {
    "sha": "0da503e9475fea5644168544668581796bf66334",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGE1MDNlOTQ3NWZlYTU2NDQxNjg1NDQ2Njg1ODE3OTZiZjY2MzM0",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2018-07-19T14:48:38Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-10-01T03:19:31Z"
      },
      "message": "add stdin helpers for password input support",
      "tree": {
        "sha": "76c6131af2e7580f6ce5c51f2322fd4dc68daffd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76c6131af2e7580f6ce5c51f2322fd4dc68daffd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0da503e9475fea5644168544668581796bf66334",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl2SxcMACgkQV692LbM1\nMyLboxAAk52Co65L6CvmCb4XLJIx8THu2NvHK7xkXCJ5D6we20EUEx1cEP7O4PtO\nOyKo7yAydtNGBYjOdFxpP9SbRDj38ZBZDp1BY+nfCyA/YwLS9dAyM/q0k8PIAz/9\n6/IUoarQfoZsv7YF1eQ5cKi0wnUzntOiWUzD2wkVvltv/SjBV3ZIRJ6v5aqXjkmL\nGHWhsD11SqFY+ykz6xvi3dD36EvyY0L9rXtbEy9IfT61cikRDbpaCHd+aI1p5aqU\nAZEld64/PHPeiG16b+xzF5Ng6YAAvZ29sts8TRfRt499zUfN4/ngQYjEcCm8dS7U\naC+6M/QD58nBeGjJGz1RhDsm8PL2zbxfe06TXWVu1kzYrEpqfL9Mz2U3AuqfqIBF\nd8/xrD/7eQoSNA7p8eX0dKloDZ6hzJlAZWxE3izaK+qvNkcoktJo431W4dIDwy3S\nqYPY3Pjn51MuXfVhJAqj0WW+HnTIvKFu/UXIEjL5uxgi3nQVGQNUj60xRDmGiJuO\nYLna0un7Qrgo25pqxUy0hdLsWRbdgxhcQWXs7Rl2qmNHLWyKTeHBEcvrj8GjgVs1\nDZPCHEoRNYHyKhR93DI9SVjQkPZNvLBlTx9Y7w5kMnhcXU6Tnq+rDco86DRyFmsZ\nJ+nZjlpMnH7NUSO/mYW14Ppr6E5W7B0jVr5sAU49xsXoX8xefy0=\n=Ng4T\n-----END PGP SIGNATURE-----",
        "payload": "tree 76c6131af2e7580f6ce5c51f2322fd4dc68daffd\nparent b0e268d2f6ac9b80247b5dab353794ba6b3c2828\nauthor Karl-Johan Alm <kalle.alm@gmail.com> 1532011718 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1569899971 +0900\n\nadd stdin helpers for password input support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0da503e9475fea5644168544668581796bf66334",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0da503e9475fea5644168544668581796bf66334",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0da503e9475fea5644168544668581796bf66334/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0e268d2f6ac9b80247b5dab353794ba6b3c2828",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e268d2f6ac9b80247b5dab353794ba6b3c2828",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0e268d2f6ac9b80247b5dab353794ba6b3c2828"
      }
    ],
    "stats": {
      "total": 92,
      "additions": 92,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d25f7ebe87946599a99feb6ab8a82edbd787f7d6",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0da503e9475fea5644168544668581796bf66334/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0da503e9475fea5644168544668581796bf66334/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=0da503e9475fea5644168544668581796bf66334",
        "patch": "@@ -520,6 +520,8 @@ endif\n libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_cli_a_SOURCES = \\\n+  compat/stdin.h \\\n+  compat/stdin.cpp \\\n   rpc/client.cpp \\\n   $(BITCOIN_CORE_H)\n "
      },
      {
        "sha": "4f2ba1e9c425f1876275b5ec37b8fa3502f630cc",
        "filename": "src/compat/stdin.cpp",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0da503e9475fea5644168544668581796bf66334/src/compat/stdin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0da503e9475fea5644168544668581796bf66334/src/compat/stdin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/stdin.cpp?ref=0da503e9475fea5644168544668581796bf66334",
        "patch": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <cstdio>       // for fileno(), stdin\n+\n+#ifdef WIN32\n+#include <windows.h>    // for SetStdinEcho()\n+#include <io.h>         // for isatty()\n+#else\n+#include <termios.h>    // for SetStdinEcho()\n+#include <unistd.h>     // for SetStdinEcho(), isatty()\n+#include <sys/poll.h>   // for StdinReady()\n+#endif\n+\n+#include <compat/stdin.h>\n+\n+// https://stackoverflow.com/questions/1413445/reading-a-password-from-stdcin\n+void SetStdinEcho(bool enable)\n+{\n+#ifdef WIN32\n+    HANDLE hStdin = GetStdHandle(STD_INPUT_HANDLE);\n+    DWORD mode;\n+    GetConsoleMode(hStdin, &mode);\n+    if (!enable) {\n+        mode &= ~ENABLE_ECHO_INPUT;\n+    } else {\n+        mode |= ENABLE_ECHO_INPUT;\n+    }\n+    SetConsoleMode(hStdin, mode);\n+#else\n+    struct termios tty;\n+    tcgetattr(STDIN_FILENO, &tty);\n+    if (!enable) {\n+        tty.c_lflag &= ~ECHO;\n+    } else {\n+        tty.c_lflag |= ECHO;\n+    }\n+    (void)tcsetattr(STDIN_FILENO, TCSANOW, &tty);\n+#endif\n+}\n+\n+bool StdinTerminal()\n+{\n+#ifdef WIN32\n+    return _isatty(_fileno(stdin));\n+#else\n+    return isatty(fileno(stdin));\n+#endif\n+}\n+\n+bool StdinReady()\n+{\n+    if (!StdinTerminal()) {\n+        return true;\n+    }\n+#ifdef WIN32\n+    return false;\n+#else\n+    struct pollfd fds;\n+    fds.fd = 0; /* this is STDIN */\n+    fds.events = POLLIN;\n+    return poll(&fds, 1, 0) == 1;\n+#endif\n+}\n+\n+NoechoInst::NoechoInst() { SetStdinEcho(false); }\n+NoechoInst::~NoechoInst() { SetStdinEcho(true); }"
      },
      {
        "sha": "468fe4d6a6e0d18ccd3e177574cb917da76f75e9",
        "filename": "src/compat/stdin.h",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0da503e9475fea5644168544668581796bf66334/src/compat/stdin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0da503e9475fea5644168544668581796bf66334/src/compat/stdin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/stdin.h?ref=0da503e9475fea5644168544668581796bf66334",
        "patch": "@@ -0,0 +1,18 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMPAT_STDIN_H\n+#define BITCOIN_COMPAT_STDIN_H\n+\n+struct NoechoInst {\n+    NoechoInst();\n+    ~NoechoInst();\n+};\n+\n+#define NO_STDIN_ECHO() NoechoInst _no_echo\n+\n+bool StdinTerminal();\n+bool StdinReady();\n+\n+#endif // BITCOIN_COMPAT_STDIN_H"
      }
    ]
  },
  {
    "sha": "7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjExZmJhMmUzYzdiMWUwMGZmYjk4NTA0Y2RjZmMyZGVkOWMwOWNm",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2018-07-19T14:48:55Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-10-01T03:19:31Z"
      },
      "message": "cli: add -stdinwalletpassphrase for (slightly more) secure CLI",
      "tree": {
        "sha": "912761a0dbb74317ad7d63c4808cb3ccfa38fbcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/912761a0dbb74317ad7d63c4808cb3ccfa38fbcc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl2SxcMACgkQV692LbM1\nMyLJlQ//XgrnHDb9eoATazGTg8aihn3E2cjU9KrTfz7dw5gDXMw0dxLElSrz6jfI\njZNMr9L4tZDD5fNkcBFZDmzKO5y5z/3zEjuftC+qM7i2fAfrPAgh8NKYlR/iT3Nm\nDhp61S9IY0jBXT0Wul1IIync55TTm/Uto9sufxkts1arUtza47r3WdwTzwXc7JdH\nnm6HvVdK3K0LbvcgyDli+XN6NE40bGOtXsWMuH0Cq/TPet++B9/wtzIBeYidrKV/\nrRB3SgN0iHBkOusw7zMFJ5xQH117mTEKfdVlj07XVm5xjgb2PTmPTTFTMXpoYUQy\nwxgjxT1+eH+vjLyhndxqkFcs/rTaX4IOfTDOW7CKtYkrkV1tiYz0IIaYMveshQhR\nPSOKW/3wZkx2wKbcbJll1iua3ol9mi3q3Bg8QkTxBiGVmQ8VjPBBm9QBz8YhJybI\nt2KsKWo/rf5MryQ3dsjZds8o7MbL5Un8psblbIGfKJww8B0lkS6gUHhSJdJ3WXxt\nSQ/sY6IglNFd7anbe/1rNigKm8x/AjqTElOwYCuUN2jsdQ/7hvh10lQGD/vr9tZN\n1ZOP3KzYfZ5v7dPlfhnP5FTaDk1AMuDdFaqjpyHT3V0UZjODJG0/WYdX7lFwDm4D\ns1MJP3wgiaz/bpLiBqjcKcVuNV0S5mOGFeVJJHnof6wJYf8KLwM=\n=meJN\n-----END PGP SIGNATURE-----",
        "payload": "tree 912761a0dbb74317ad7d63c4808cb3ccfa38fbcc\nparent 0da503e9475fea5644168544668581796bf66334\nauthor Karl-Johan Alm <kalle.alm@gmail.com> 1532011735 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1569899971 +0900\n\ncli: add -stdinwalletpassphrase for (slightly more) secure CLI\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0da503e9475fea5644168544668581796bf66334",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0da503e9475fea5644168544668581796bf66334",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0da503e9475fea5644168544668581796bf66334"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 23,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e1be5b7f92eadebe5be191ce93d5e37febbdb527",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf",
        "patch": "@@ -27,6 +27,7 @@\n #include <support/events.h>\n \n #include <univalue.h>\n+#include <compat/stdin.h>\n \n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n \n@@ -58,7 +59,8 @@ static void SetupCliArgs()\n     gArgs.AddArg(\"-rpcwait\", \"Wait for RPC server to start\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind). This changes the RPC endpoint used, e.g. http://127.0.0.1:8332/wallet/<walletname>\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-stdin\", \"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases). When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password. When combined with -stdinwalletpassphrase, -stdinrpcpass consumes the first line, and -stdinwalletpassphrase consumes the second.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-stdinwalletpassphrase\", \"Read wallet passphrase from standard input as a single line. When combined with -stdin, the first line from standard input is used for the wallet passphrase.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n }\n \n /** libevent event log callback */\n@@ -411,12 +413,32 @@ static int CommandLineRPC(int argc, char *argv[])\n         }\n         std::string rpcPass;\n         if (gArgs.GetBoolArg(\"-stdinrpcpass\", false)) {\n+            NO_STDIN_ECHO();\n+            if (!StdinReady()) {\n+                fputs(\"RPC password> \", stderr);\n+                fflush(stderr);\n+            }\n             if (!std::getline(std::cin, rpcPass)) {\n                 throw std::runtime_error(\"-stdinrpcpass specified but failed to read from standard input\");\n             }\n             gArgs.ForceSetArg(\"-rpcpassword\", rpcPass);\n         }\n         std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);\n+        if (gArgs.GetBoolArg(\"-stdinwalletpassphrase\", false)) {\n+            NO_STDIN_ECHO();\n+            std::string walletPass;\n+            if (args.size() < 1 || args[0].substr(0, 16) != \"walletpassphrase\") {\n+                throw std::runtime_error(\"-stdinwalletpassphrase is only applicable for walletpassphrase(change)\");\n+            }\n+            if (!StdinReady()) {\n+                fputs(\"Wallet passphrase> \", stderr);\n+                fflush(stderr);\n+            }\n+            if (!std::getline(std::cin, walletPass)) {\n+                throw std::runtime_error(\"-stdinwalletpassphrase specified but failed to read from standard input\");\n+            }\n+            args.insert(args.begin() + 1, walletPass);\n+        }\n         if (gArgs.GetBoolArg(\"-stdin\", false)) {\n             // Read one arg per line from stdin and append\n             std::string line;"
      }
    ]
  },
  {
    "sha": "50c4afa3c420f11329cffb091b62beeb96b39183",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGM0YWZhM2M0MjBmMTEzMjljZmZiMDkxYjYyYmVlYjk2YjM5MTgz",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-14T05:51:28Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-10-01T03:19:31Z"
      },
      "message": "add newline after -stdin*",
      "tree": {
        "sha": "5849b329010625b08ad508a5a1a5753c9fb7c6a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5849b329010625b08ad508a5a1a5753c9fb7c6a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50c4afa3c420f11329cffb091b62beeb96b39183",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl2SxcMACgkQV692LbM1\nMyIrGQ/7B1I8b3ttB5eicXhdLF3rED46TDCyuCwVSlkvyZt59jycZOteHqpTr6cK\nCyATn3/tDnKrT5hNw6jHKeOoOD888Chan/TPXOGlBGCascxJ6K9CJYsT1lPcn49E\nYQW5y2p4u2wkGL1SnRl+wcSA2hyGQRem6nqlrgmuasEXxDeS2+yG1p6Gd9ZXjXtm\nGHqRc8S6s9b+kXuSZydm+VAg9fQiMs52kqbXeOMD/QAgl5d4l9LCGgeXcpm1XGhM\nV8j15QIJmhdWxtSrFmSTJ7RMhOmhcOlsOyzfjrj1Yte7sVxrst98iPUJGek2FYg5\nJ000HVcQR/Ky7k5Tn1m1f0b/l6V7cKkLk/GOheiGyVGh9kSvIWlpOiAiq6EsPI5f\nQL3nf0h/S+OyMG+I7a920fQ/EG7puZ/TUvsBBVkD+1v3U6cN6ydMwrTCa91pibjI\nvK1ibVTv4vYMXAvdnAlPcUGgYO6neCOqUsKKbdX9AaQxr7e0nfxRt9CFf6/G4KeE\n9MUI5XiwglrXWEOy0RYvzZ8LKzZQUGPwciteLBOB2lGRORStFz9QykJUlYfjCH8t\ngNeuZXcfVLDOD2j0d84K5fBlEe+rSdHfqwacYl0K2RB9UT1jVlT6VSugxFEAxMSR\nlQdIRPcdU5rDUrcIbZQPE7+cSgAdJLEjJQE7UWqgZnudJwA2ApM=\n=zl5d\n-----END PGP SIGNATURE-----",
        "payload": "tree 5849b329010625b08ad508a5a1a5753c9fb7c6a9\nparent 7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550123488 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1569899971 +0900\n\nadd newline after -stdin*\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50c4afa3c420f11329cffb091b62beeb96b39183",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50c4afa3c420f11329cffb091b62beeb96b39183",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50c4afa3c420f11329cffb091b62beeb96b39183/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f11fba2e3c7b1e00ffb98504cdcfc2ded9c09cf"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "73773c4ec5ff524e0c20d4b811380b72acf33600",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50c4afa3c420f11329cffb091b62beeb96b39183/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50c4afa3c420f11329cffb091b62beeb96b39183/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=50c4afa3c420f11329cffb091b62beeb96b39183",
        "patch": "@@ -421,6 +421,9 @@ static int CommandLineRPC(int argc, char *argv[])\n             if (!std::getline(std::cin, rpcPass)) {\n                 throw std::runtime_error(\"-stdinrpcpass specified but failed to read from standard input\");\n             }\n+            if (StdinTerminal()) {\n+                fputc('\\n', stdout);\n+            }\n             gArgs.ForceSetArg(\"-rpcpassword\", rpcPass);\n         }\n         std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);\n@@ -437,6 +440,9 @@ static int CommandLineRPC(int argc, char *argv[])\n             if (!std::getline(std::cin, walletPass)) {\n                 throw std::runtime_error(\"-stdinwalletpassphrase specified but failed to read from standard input\");\n             }\n+            if (StdinTerminal()) {\n+                fputc('\\n', stdout);\n+            }\n             args.insert(args.begin() + 1, walletPass);\n         }\n         if (gArgs.GetBoolArg(\"-stdin\", false)) {\n@@ -445,6 +451,9 @@ static int CommandLineRPC(int argc, char *argv[])\n             while (std::getline(std::cin, line)) {\n                 args.push_back(line);\n             }\n+            if (StdinTerminal()) {\n+                fputc('\\n', stdout);\n+            }\n         }\n         std::unique_ptr<BaseRequestHandler> rh;\n         std::string method;"
      }
    ]
  }
]