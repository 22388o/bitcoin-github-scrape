practicalswift,2018-07-19T20:29:27Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-406404300,406404300,
DrahtBot,2018-07-22T13:22:22Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-406866263,406866263,
hebasto,2018-08-05T08:47:07Z,"There are conflicting pull requests:\n- this one adds new features and, as a side effect, fixes one of two bugs in bitcoin-cli --help output;\n- [#13879](https://github.com/bitcoin/bitcoin/pull/13879) fixes all found bugs in bitcoin-cli --help output and is safe for the whole code.\n\nSo, [#13879](https://github.com/bitcoin/bitcoin/pull/13879) can be merged regardless of this pull request.",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-410505436,410505436,
laanwj,2018-09-10T16:40:06Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-419979117,419979117,
laanwj,2018-09-11T09:56:11Z,"Checked that this compiles and works as-is on OpenBSD 6.3 and FreeBSD 11.2-RELEASE-p2.\n\nWould be good to have functional tests for this, in as far as that is possibleâ€”seems tricky to simulate a terminal",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-420216896,420216896,
kallewoof,2018-09-11T11:50:11Z,@laanwj Thanks for review and especially for testing on other distros! I'm a bit stumped on how to make tests for this. Is it even possible to test stdin echo?,https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-420245967,420245967,
laanwj,2018-09-11T12:15:12Z,">  Is it even possible to test stdin echo?\n\nYes, it's certainly possible. However I'm afraid that it'd involve allocating a pty and emulating an actual terminal, all from python.\nThere is code for that, but it's probably a bit too much to pull in a dependency for.\nIt's a good indication that we should stop here at accommodating terminals, though, at the minimum possible code dedicated to t",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-420252601,420252601,
laanwj,2018-09-11T16:21:42Z,lightly-tested ACK 2836f6fc1ef98cef41993970f8b3f7c0758484f5,https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-420332970,420332970,
jonasschnelli,2018-09-11T19:25:36Z,"From the control flow, it seems a bit odd that one gets asked for the password first via std-in, but then get an error like `RPC password> error: too few parameters (need at least command)`.\n\nIMO a) we should newline after a password read and b) eventually check for missing command (and other static checks) before asking for the password.",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-420392966,420392966,
kallewoof,2018-09-12T03:34:39Z,"@jonasschnelli That particular case will never happen, as the code already checks that the command starts with ""walletpassphrase"". Are there other cases or potential cases?",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-420500936,420500936,
kallewoof,2018-10-06T00:38:50Z,Addressed @practicalswift nits.,https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-427532152,427532152,
Sjors,2019-01-31T18:30:14Z,"tACK b197e57 for macOS 10.14.3\n\nNit: return `\n` after password entry.\n\nNeeds Windows testing too, @ken2812221?\n\nFor a followup it would be great if all wallet RPC's that need a private key worked directly with `-stdinwalletpassphrase` and just lock when they're done (though then the question is what default timeout you need).",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-459453610,459453610,
kallewoof,2019-02-13T06:01:39Z,"@Sjors \n\n> Nit: return `\n` after password entry.\n\nHitting enter adds a newline on my mac. Where do you want one to be added? After the `std::getline` call?",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-463071016,463071016,
Sjors,2019-02-13T09:17:25Z,"@kallewoof it didn't return a new line for me (macOS 10.14.3):\n<img width=""665"" alt=""schermafbeelding 2019-02-13 om 10 11 12"" src=""https://user-images.githubusercontent.com/10217/52700180-c1c46c80-2f77-11e9-8975-da11c9d0cc18.png"">\n\n<img width=""560"" alt=""schermafbeelding 2019-02-13 om 10 17 12"" src=""https://user-images.githubusercontent.com/10217/52700569-8bd3b800-2f78-11e9-8449-cc1c4b44e1ed.",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-463120694,463120694,
kallewoof,2019-02-14T05:51:59Z,"Oh, okay! So this is the case for pre-existing `-stdinrpcpass` as well. Fixed in d1688c9.",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-463499776,463499776,
Sjors,2019-02-14T15:59:47Z,re-tACK d1688c9,https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-463682262,463682262,
laanwj,2019-10-01T11:15:56Z,"Thanks, LGTM now\ncode review ACK 50c4afa3c420f11329cffb091b62beeb96b39183",https://github.com/bitcoin/bitcoin/pull/13716#issuecomment-536989478,536989478,
laanwj,2018-09-10T16:37:32Z,"As this is only used in bitcoin-cli, it doesn't need to be in `util.cpp` (which is shared between the server and client), would be better in a client-specific utility, e.g. `compat/noecho.{cpp,h}` or something like that, that is only linked into `-cli`.",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216390582,216390582,src/util.cpp
laanwj,2018-09-10T16:38:35Z,"is this generally supported on all UNIX, or does it need checks in the build system?",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216390976,216390976,src/util.cpp
kallewoof,2018-09-11T06:12:10Z,Good point. Fixing.,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216555074,216555074,src/util.cpp
kallewoof,2018-09-11T06:15:13Z,termios.h? It seems to be pretty standard FWICT.,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216555512,216555512,src/util.cpp
laanwj,2018-09-11T09:22:01Z,going to test on FreeBSD and OpenBSD,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216601378,216601378,src/util.cpp
laanwj,2018-09-11T09:49:25Z,"- need to re-enable echoing before the normal `-stdin` processing\n- make sure that this is not called unless either `-stdinrpcpass` or `-stdinwalletpassphrase` is called to avoid interfering with scripts that pipe in data, not attached to a TTY",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216609771,216609771,src/bitcoin-cli.cpp
kallewoof,2018-09-11T11:49:20Z,Good points. Addressed both.,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216639757,216639757,src/bitcoin-cli.cpp
laanwj,2018-09-11T12:24:16Z,"will this leave the user's terminal in a bad state in case of an exception?\n\nif so, might want to use a RAII class",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216648293,216648293,src/bitcoin-cli.cpp
kallewoof,2018-09-11T12:38:00Z,"It didn't for Macs, but you're right, there's really no guarantees so a RAII makes sense. Will fix.",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216652164,216652164,src/bitcoin-cli.cpp
kallewoof,2018-09-11T12:58:10Z,Added RAII wrapper.,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r216658269,216658269,src/bitcoin-cli.cpp
practicalswift,2018-09-23T08:14:08Z,"```\n2018-09-22 21:56:54 cpplint(pr=13716): src/compat/stdin.cpp:26:  Else clause should never be on same line as else (use 2 lines)  [whitespace/newline] [4]\n2018-09-22 21:56:54 cpplint(pr=13716): src/compat/stdin.cpp:26:  If/else bodies with multiple statements require braces  [readability/braces] [4]\n```",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r219691544,219691544,src/compat/stdin.cpp
practicalswift,2018-09-23T08:14:20Z,"```\n2018-09-22 21:56:54 cpplint(pr=13716): src/compat/stdin.cpp:31:  Else clause should never be on same line as else (use 2 lines)  [whitespace/newline] [4]\n2018-09-22 21:56:54 cpplint(pr=13716): src/compat/stdin.cpp:31:  If/else bodies with multiple statements require braces  [readability/braces] [4]\n```",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r219691552,219691552,src/compat/stdin.cpp
practicalswift,2018-09-23T11:27:05Z,Nit: Could be written with something more idiomatic than `strlen`? :-),https://github.com/bitcoin/bitcoin/pull/13716#discussion_r219695710,219695710,src/bitcoin-cli.cpp
practicalswift,2018-10-03T08:33:35Z,A negative integer is implicitly converted to unsigned type here. Please make the conversion explicit.,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r222225786,222225786,src/compat/stdin.cpp
kallewoof,2018-10-06T00:35:52Z,Is there a case when this would be a problem?,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r223165324,223165324,src/compat/stdin.cpp
kallewoof,2018-10-06T00:36:07Z,Fixed. :P,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r223165334,223165334,src/bitcoin-cli.cpp
kallewoof,2018-11-30T02:31:30Z,"I may have misunderstood what you were saying here; what are you suggesting I do, exactly?",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r237728707,237728707,src/compat/stdin.cpp
laanwj,2019-09-30T12:05:45Z,you could  use fputs here (same below) and avoid introducing the locale dependency exception,https://github.com/bitcoin/bitcoin/pull/13716#discussion_r329540810,329540810,src/bitcoin-cli.cpp
laanwj,2019-09-30T12:06:56Z,"please only print this extra newline if stdin terminal is detected, and not when, say, piping in from a script (same below 2x)",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r329541195,329541195,src/bitcoin-cli.cpp
MarcoFalke,2019-09-30T12:28:45Z,"`tfm::format(std::cerr, ...` should work as well",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r329548916,329548916,src/bitcoin-cli.cpp
kallewoof,2019-10-01T03:05:43Z,"D'oh, yeah. Removing linter changes and using `fputs`.",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r329863823,329863823,src/bitcoin-cli.cpp
kallewoof,2019-10-01T03:33:34Z,"Understood. I think the latest version achieves this. (See `StdinTerminal()`.)\n\n```Bash\n$ ./bitcoin-cli -datadir=d -regtest encryptwallet foobar38\nwallet encrypted; The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.\n$ ./bitcoin-cli -datadir=d -regtest -stdinwalletpassphrase walletpassphrase 10\nWallet passphrase>\n$ echo f",https://github.com/bitcoin/bitcoin/pull/13716#discussion_r329867481,329867481,src/bitcoin-cli.cpp
