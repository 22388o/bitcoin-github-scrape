[
  {
    "sha": "fa46ac3127142358116c8473741708b3bb70ca15",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQ2YWMzMTI3MTQyMzU4MTE2Yzg0NzM3NDE3MDhiM2JiNzBjYTE1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-10T19:06:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-15T20:49:34Z"
      },
      "message": "bench: Add wallet_balance benchmarks",
      "tree": {
        "sha": "2a3a0a2f91df5ba0fcc0a6868a43290c458d36ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a3a0a2f91df5ba0fcc0a6868a43290c458d36ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa46ac3127142358116c8473741708b3bb70ca15",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjx1gv9HueJLyGFg8vPZxE8xgM9UuKvvpFQa/S0XsVgQAmzskKfChayHyHU1KIm\njJdIIhM/hS7NPjJJNWxtkh1u7LL2hKi3OMqu7Z4CtWY3N72Zog1AZN3OPVtDJ8om\nAMhY4dIajUeM55ciFxywL7kuAqMncakajsRuK/vzUyNWJUsSzxUwNIBLxFrUQTfY\n43GUlDDKg7W3YOZ+3+I42J8D9YdnKZ9af4h2XkAVPdiTz2pf5rRbpsFWIl78NLje\nuTM+tR2sPB6VIadR/2u7kppdLgTMqAzSeGZgedu+3F60b9eoQRsa6HZ3c+XiSEBi\nCT+Svi33p1Xf8GOJM9ZXMyyXdUkRdk/RMgqAdFDxwv++hZbDGsLnItPQRw9dK/Qu\nDfIEsYnQ/BN5yTxiN2w3T9h7KaK7aQQDoHSo3hfpOS2lMn37TikjAy7YQcOjLfKQ\nj98fB2RRMfKiDXDIzWcd10lvThGFpZYEYKEmUKi8GjGggJwQ2CLPhlFpLvAiyGnU\ndmgnOfPw\n=KRpO\n-----END PGP SIGNATURE-----",
        "payload": "tree 2a3a0a2f91df5ba0fcc0a6868a43290c458d36ea\nparent 78295e97b8d38ecf6628b5d8ce1efd3900a5c345\nauthor MarcoFalke <falke.marco@gmail.com> 1554923191 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1555361374 -0400\n\nbench: Add wallet_balance benchmarks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa46ac3127142358116c8473741708b3bb70ca15",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa46ac3127142358116c8473741708b3bb70ca15",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa46ac3127142358116c8473741708b3bb70ca15/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78295e97b8d38ecf6628b5d8ce1efd3900a5c345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78295e97b8d38ecf6628b5d8ce1efd3900a5c345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78295e97b8d38ecf6628b5d8ce1efd3900a5c345"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 76,
      "deletions": 1
    },
    "files": [
      {
        "sha": "723e230d3ac9fe9904d018cd112fb7c0bdd54a53",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46ac3127142358116c8473741708b3bb70ca15/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46ac3127142358116c8473741708b3bb70ca15/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj?ref=fa46ac3127142358116c8473741708b3bb70ca15",
        "patch": "@@ -39,6 +39,7 @@\n     <ClCompile Include=\"..\\..\\src\\bench\\rpc_mempool.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\bench\\merkle_root.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\bench\\rollingbloom.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\wallet_balance.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\bench\\verify_script.cpp\" />\n   </ItemGroup>\n   <ItemGroup>"
      },
      {
        "sha": "ae7eb19ceb20d2778be227428f90be19ffcfdad6",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46ac3127142358116c8473741708b3bb70ca15/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46ac3127142358116c8473741708b3bb70ca15/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=fa46ac3127142358116c8473741708b3bb70ca15",
        "patch": "@@ -64,6 +64,7 @@ endif\n \n if ENABLE_WALLET\n bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n+bench_bench_bitcoin_SOURCES += bench/wallet_balance.cpp\n endif\n \n bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)"
      },
      {
        "sha": "7fd2794164170bbdfc6843748e01c65a0d18221c",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46ac3127142358116c8473741708b3bb70ca15/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46ac3127142358116c8473741708b3bb70ca15/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=fa46ac3127142358116c8473741708b3bb70ca15",
        "patch": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2012-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <interfaces/chain.h>\n+#include <key_io.h>\n+#include <optional.h>\n+#include <test/util.h>\n+#include <validationinterface.h>\n+#include <wallet/wallet.h>\n+\n+struct WalletTestingSetup {\n+    std::unique_ptr<interfaces::Chain> m_chain = interfaces::MakeChain();\n+    CWallet m_wallet;\n+\n+    WalletTestingSetup()\n+        : m_wallet{m_chain.get(), WalletLocation(), WalletDatabase::CreateMock()}\n+    {\n+    }\n+\n+    void handleNotifications()\n+    {\n+        m_wallet.m_chain_notifications_handler = m_chain->handleNotifications(m_wallet);\n+    }\n+};\n+\n+static void WalletBalance(benchmark::State& state, const bool set_dirty, const bool add_watchonly, const bool add_mine)\n+{\n+    const auto& ADDRESS_WATCHONLY = ADDRESS_BCRT1_UNSPENDABLE;\n+\n+    WalletTestingSetup wallet_t{};\n+    auto& wallet = wallet_t.m_wallet;\n+    {\n+        bool first_run;\n+        if (wallet.LoadWallet(first_run) != DBErrors::LOAD_OK) assert(false);\n+        wallet_t.handleNotifications();\n+    }\n+\n+\n+    const Optional<std::string> address_mine{add_mine ? Optional<std::string>{getnewaddress(wallet)} : nullopt};\n+    if (add_watchonly) importaddress(wallet, ADDRESS_WATCHONLY);\n+\n+    for (int i = 0; i < 100; ++i) {\n+        generatetoaddress(address_mine.get_value_or(ADDRESS_WATCHONLY));\n+        generatetoaddress(ADDRESS_WATCHONLY);\n+    }\n+    SyncWithValidationInterfaceQueue();\n+\n+    auto bal = wallet.GetBalance(); // Cache\n+\n+    while (state.KeepRunning()) {\n+        if (set_dirty) wallet.MarkDirty();\n+        bal = wallet.GetBalance();\n+        if (add_mine) assert(bal.m_mine_trusted > 0);\n+        if (add_watchonly) assert(bal.m_watchonly_trusted > 0);\n+    }\n+}\n+\n+static void WalletBalanceDirty(benchmark::State& state) { WalletBalance(state, /* set_dirty */ true, /* add_watchonly */ true, /* add_mine */ true); }\n+static void WalletBalanceClean(benchmark::State& state) { WalletBalance(state, /* set_dirty */ false, /* add_watchonly */ true, /* add_mine */ true); }\n+static void WalletBalanceMine(benchmark::State& state) { WalletBalance(state, /* set_dirty */ false, /* add_watchonly */ false, /* add_mine */ true); }\n+static void WalletBalanceWatch(benchmark::State& state) { WalletBalance(state, /* set_dirty */ false, /* add_watchonly */ true, /* add_mine */ false); }\n+\n+BENCHMARK(WalletBalanceDirty, 2500);\n+BENCHMARK(WalletBalanceClean, 8000);\n+BENCHMARK(WalletBalanceMine, 16000);\n+BENCHMARK(WalletBalanceWatch, 8000);"
      },
      {
        "sha": "05d3a97a596e102a95338a393b2e8fd669b94b35",
        "filename": "src/test/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46ac3127142358116c8473741708b3bb70ca15/src/test/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46ac3127142358116c8473741708b3bb70ca15/src/test/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util.cpp?ref=fa46ac3127142358116c8473741708b3bb70ca15",
        "patch": "@@ -22,6 +22,8 @@\n \n #include <boost/thread.hpp>\n \n+const std::string ADDRESS_BCRT1_UNSPENDABLE = \"bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj\";\n+\n #ifdef ENABLE_WALLET\n std::string getnewaddress(CWallet& w)\n {\n@@ -75,7 +77,6 @@ CTxIn MineBlock(const CScript& coinbase_scriptPubKey)\n     return CTxIn{block->vtx[0]->GetHash(), 0};\n }\n \n-\n std::shared_ptr<CBlock> PrepareBlock(const CScript& coinbase_scriptPubKey)\n {\n     auto block = std::make_shared<CBlock>("
      },
      {
        "sha": "8ba647ec3f282851e71cd8c3f8b0ae0db5d8225f",
        "filename": "src/test/util.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa46ac3127142358116c8473741708b3bb70ca15/src/test/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa46ac3127142358116c8473741708b3bb70ca15/src/test/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util.h?ref=fa46ac3127142358116c8473741708b3bb70ca15",
        "patch": "@@ -13,6 +13,10 @@ class CScript;\n class CTxIn;\n class CWallet;\n \n+// Constants //\n+\n+extern const std::string ADDRESS_BCRT1_UNSPENDABLE;\n+\n // Lower-level utils //\n \n /** Returns the generated coin */"
      }
    ]
  },
  {
    "sha": "fad7c33342cb51b310a7dd372bfa675df8810367",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ3YzMzMzQyY2I1MWIzMTBhN2RkMzcyYmZhNjc1ZGY4ODEwMzY3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-17T17:27:02Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-17T18:20:44Z"
      },
      "message": "refactor: Add handleNotifications method to wallet\n\nFurther stylistic cleanups in touched files:\n\n* Sort the includes\n* Wrap long single-line constructors into multiple lines",
      "tree": {
        "sha": "64bc06d2bdd76ca1dc13d9be5a28d6462e07e990",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64bc06d2bdd76ca1dc13d9be5a28d6462e07e990"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad7c33342cb51b310a7dd372bfa675df8810367",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjyhgwAzKL8AN2unIeWlhpelzzQt0aMZ9s21TtpW0S8lEKzLC/QGJfkQgefH0J1\nBVPfd1Vcg2GD+Db7YnjpoRlICbqiOTCFFg2xti7ZyJDfC0GTvFdgn/7kRxGxn+hj\nk8u8kZTLtXBrvF8IQUg2HMMedICt5S1By0dmSxCz3CSbECapBq+kjksrehj5dUEQ\n2LdzrAgi1L9ddNCjeiynzxNstqo6G07iePEVtUi+F3njx76mOz8rEcQtnoHsVOsL\nMljNK/Etzi/CGwamQ/dJnlvkC9JUNjCxWk6mIYUUG0Cqp4tZ+GRvTr12wVOm/FFI\nqL4NAovmuTJ6VJCJezEV5In3aHjff7ojcVpYhr0gUEWmZh7tFX54QRzjZSosaDEJ\nlEAzUNR4cPUM3ErbNbErxqzH833wWrfX56R64HwpNkv/kneNZOM4Le69qMIyEZT+\nJiOXbvfK/oJvoVzBtNzz6CO0iAYlbcrAUf8ZZglTqBmP9Ca2bak/2NESs9KdHVAF\nmct/Oj21\n=oGSF\n-----END PGP SIGNATURE-----",
        "payload": "tree 64bc06d2bdd76ca1dc13d9be5a28d6462e07e990\nparent fa46ac3127142358116c8473741708b3bb70ca15\nauthor MarcoFalke <falke.marco@gmail.com> 1555522022 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1555525244 -0400\n\nrefactor: Add handleNotifications method to wallet\n\nFurther stylistic cleanups in touched files:\n\n* Sort the includes\n* Wrap long single-line constructors into multiple lines\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad7c33342cb51b310a7dd372bfa675df8810367",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad7c33342cb51b310a7dd372bfa675df8810367",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad7c33342cb51b310a7dd372bfa675df8810367/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa46ac3127142358116c8473741708b3bb70ca15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa46ac3127142358116c8473741708b3bb70ca15",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa46ac3127142358116c8473741708b3bb70ca15"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 27,
      "deletions": 32
    },
    "files": [
      {
        "sha": "46ca12826b43415bd458fc6f579bc0fca7c2f13e",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 18,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad7c33342cb51b310a7dd372bfa675df8810367/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad7c33342cb51b310a7dd372bfa675df8810367/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=fad7c33342cb51b310a7dd372bfa675df8810367",
        "patch": "@@ -10,31 +10,16 @@\n #include <validationinterface.h>\n #include <wallet/wallet.h>\n \n-struct WalletTestingSetup {\n-    std::unique_ptr<interfaces::Chain> m_chain = interfaces::MakeChain();\n-    CWallet m_wallet;\n-\n-    WalletTestingSetup()\n-        : m_wallet{m_chain.get(), WalletLocation(), WalletDatabase::CreateMock()}\n-    {\n-    }\n-\n-    void handleNotifications()\n-    {\n-        m_wallet.m_chain_notifications_handler = m_chain->handleNotifications(m_wallet);\n-    }\n-};\n-\n static void WalletBalance(benchmark::State& state, const bool set_dirty, const bool add_watchonly, const bool add_mine)\n {\n     const auto& ADDRESS_WATCHONLY = ADDRESS_BCRT1_UNSPENDABLE;\n \n-    WalletTestingSetup wallet_t{};\n-    auto& wallet = wallet_t.m_wallet;\n+    std::unique_ptr<interfaces::Chain> chain = interfaces::MakeChain();\n+    CWallet wallet{chain.get(), WalletLocation(), WalletDatabase::CreateMock()};\n     {\n         bool first_run;\n         if (wallet.LoadWallet(first_run) != DBErrors::LOAD_OK) assert(false);\n-        wallet_t.handleNotifications();\n+        wallet.handleNotifications();\n     }\n \n "
      },
      {
        "sha": "6526e69eea2ffab3ee3e93168b382b4cccc8374d",
        "filename": "src/wallet/test/wallet_test_fixture.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad7c33342cb51b310a7dd372bfa675df8810367/src/wallet/test/wallet_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad7c33342cb51b310a7dd372bfa675df8810367/src/wallet/test/wallet_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_test_fixture.cpp?ref=fad7c33342cb51b310a7dd372bfa675df8810367",
        "patch": "@@ -8,12 +8,13 @@\n #include <wallet/db.h>\n #include <wallet/rpcwallet.h>\n \n-WalletTestingSetup::WalletTestingSetup(const std::string& chainName):\n-    TestingSetup(chainName), m_wallet(m_chain.get(), WalletLocation(), WalletDatabase::CreateMock())\n+WalletTestingSetup::WalletTestingSetup(const std::string& chainName)\n+    : TestingSetup(chainName),\n+      m_wallet(m_chain.get(), WalletLocation(), WalletDatabase::CreateMock())\n {\n     bool fFirstRun;\n     m_wallet.LoadWallet(fFirstRun);\n-    m_wallet.m_chain_notifications_handler = m_chain->handleNotifications(m_wallet);\n+    m_wallet.handleNotifications();\n \n     m_chain_client->registerRpcs();\n }"
      },
      {
        "sha": "4737e2f6f4318d90351b4e61cb52071b72a50f3b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad7c33342cb51b310a7dd372bfa675df8810367/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad7c33342cb51b310a7dd372bfa675df8810367/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fad7c33342cb51b310a7dd372bfa675df8810367",
        "patch": "@@ -5,9 +5,8 @@\n \n #include <wallet/wallet.h>\n \n-#include <checkpoints.h>\n #include <chain.h>\n-#include <wallet/coincontrol.h>\n+#include <checkpoints.h>\n #include <consensus/consensus.h>\n #include <consensus/validation.h>\n #include <fs.h>\n@@ -16,7 +15,6 @@\n #include <key.h>\n #include <key_io.h>\n #include <keystore.h>\n-#include <validation.h>\n #include <net.h>\n #include <policy/fees.h>\n #include <policy/policy.h>\n@@ -34,6 +32,8 @@\n #include <util/moneystr.h>\n #include <util/rbf.h>\n #include <util/validation.h>\n+#include <validation.h>\n+#include <wallet/coincontrol.h>\n #include <wallet/fees.h>\n \n #include <algorithm>\n@@ -4303,7 +4303,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     chain.loadWallet(interfaces::MakeWallet(walletInstance));\n \n     // Register with the validation interface. It's ok to do this after rescan since we're still holding locked_chain.\n-    walletInstance->m_chain_notifications_handler = chain.handleNotifications(*walletInstance);\n+    walletInstance->handleNotifications();\n \n     walletInstance->SetBroadcastTransactions(gArgs.GetBoolArg(\"-walletbroadcast\", DEFAULT_WALLETBROADCAST));\n \n@@ -4316,6 +4316,11 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     return walletInstance;\n }\n \n+void CWallet::handleNotifications()\n+{\n+    m_chain_notifications_handler = m_chain->handleNotifications(*this);\n+}\n+\n void CWallet::postInitProcess()\n {\n     auto locked_chain = chain().lock();"
      },
      {
        "sha": "62ba0aa962e7a01e613705368944b7af6b489dab",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad7c33342cb51b310a7dd372bfa675df8810367/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad7c33342cb51b310a7dd372bfa675df8810367/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=fad7c33342cb51b310a7dd372bfa675df8810367",
        "patch": "@@ -11,16 +11,16 @@\n #include <interfaces/handler.h>\n #include <outputtype.h>\n #include <policy/feerate.h>\n+#include <script/ismine.h>\n+#include <script/sign.h>\n #include <streams.h>\n #include <tinyformat.h>\n #include <ui_interface.h>\n #include <util/strencodings.h>\n-#include <validationinterface.h>\n-#include <script/ismine.h>\n-#include <script/sign.h>\n #include <util/system.h>\n-#include <wallet/crypter.h>\n+#include <validationinterface.h>\n #include <wallet/coinselection.h>\n+#include <wallet/crypter.h>\n #include <wallet/walletdb.h>\n #include <wallet/walletutil.h>\n \n@@ -767,7 +767,10 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n     unsigned int nMasterKeyMaxID = 0;\n \n     /** Construct wallet with specified name and database implementation. */\n-    CWallet(interfaces::Chain* chain, const WalletLocation& location, std::unique_ptr<WalletDatabase> database) : m_chain(chain), m_location(location), database(std::move(database))\n+    CWallet(interfaces::Chain* chain, const WalletLocation& location, std::unique_ptr<WalletDatabase> database)\n+        : m_chain(chain),\n+          m_location(location),\n+          database(std::move(database))\n     {\n     }\n \n@@ -794,6 +797,9 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n     /** Registered interfaces::Chain::Notifications handler. */\n     std::unique_ptr<interfaces::Handler> m_chain_notifications_handler;\n \n+    /** Register the wallet for chain notifications */\n+    void handleNotifications();\n+\n     /** Interface for accessing chain state. */\n     interfaces::Chain& chain() const { assert(m_chain); return *m_chain; }\n \n@@ -1208,8 +1214,6 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n \n     /** Add a KeyOriginInfo to the wallet */\n     bool AddKeyOrigin(const CPubKey& pubkey, const KeyOriginInfo& info);\n-\n-    friend struct WalletTestingSetup;\n };\n \n /**"
      }
    ]
  }
]