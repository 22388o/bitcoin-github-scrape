MarcoFalke,2019-04-11T14:16:26Z,Going to reopen next week,https://github.com/bitcoin/bitcoin/pull/15779#issuecomment-482132860,482132860,
MarcoFalke,2019-04-16T18:24:37Z,this is ready for review now,https://github.com/bitcoin/bitcoin/pull/15779#issuecomment-483789403,483789403,
laanwj,2019-04-17T16:05:47Z,utACK fa46ac3127142358116c8473741708b3bb70ca15,https://github.com/bitcoin/bitcoin/pull/15779#issuecomment-484154746,484154746,
MarcoFalke,2019-04-17T18:54:26Z,Added a method to the wallet to handle notifications (and removed the `friend struct` workarounds in tests),https://github.com/bitcoin/bitcoin/pull/15779#issuecomment-484217313,484217313,
ryanofsky,2019-04-17T16:18:56Z,Could get rid of WalletTestingSetup constructor and just initialize m_wallet directly above.,https://github.com/bitcoin/bitcoin/pull/15779#discussion_r276325165,276325165,src/bench/wallet_balance.cpp
ryanofsky,2019-04-17T16:21:27Z,"I think there's no need for this to be indented, but I guess it's reasonable to limit the scope the first_run variable.",https://github.com/bitcoin/bitcoin/pull/15779#discussion_r276326143,276326143,src/bench/wallet_balance.cpp
ryanofsky,2019-04-17T16:32:29Z,"This seems fine, but in the future it might be better not have two different structs called `WalletTestingSetup` with different implementations. (The other one is https://github.com/bitcoin/bitcoin/blob/master/src/wallet/test/wallet_test_fixture.h), because if the other `WalletTestingSetup` struct is ever used in a benchmark, it might result in weird link errors or even runtime errors.\n\nI thin",https://github.com/bitcoin/bitcoin/pull/15779#discussion_r276330626,276330626,src/bench/wallet_balance.cpp
decryp2kanon,2020-10-23T13:09:59Z,"interesting. just curious, how to create this un-spendable address? @MarcoFalke ",https://github.com/bitcoin/bitcoin/pull/15779#discussion_r510872126,510872126,src/test/util.cpp
