Sjors,2021-11-11 18:48:00,"Concept ACK. For slightly easier review, maybe split into a pure refactor/reformat commit and the actual behavior change.",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-966541375,966541375,
MarcoFalke,2021-11-11 19:09:06,"If you pass in `--ignore-all-space`, it will show only the behaviour changes. I think it makes sense to adjust the whitespace in the same commit that removes the if-body.",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-966554613,966554613,
DrahtBot,2021-11-12 03:04:38,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23507](https://github.com/bitcoin/bitcoin/pull/23507) (Refactor: Improve API design of `ScriptToUniv`, `TxToUniv` etc to",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-966782730,966782730,
laanwj,2021-11-12 09:54:28,"I agree with @Sjors here. I think it makes sense to split the functionality change into a separate commit. Even if it can still be reviewed by providing extra arguments to diff, it just seems cleaner, say, when browsing git history later.\n\nDoes this need a functional test?",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-966969324,966969324,
laanwj,2021-11-12 12:08:28,"~~Code review ACK fa1c1f417ef97d15331f4a13b40be9e00ecdb464~~\n\nCode review re-ACK fa972d8d771c93c1d37eeb31da04e95e8e5ca0ad",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-967062461,967062461,
MarcoFalke,2021-11-12 15:13:07,"> Does this need a functional test?\n\nThere are steps to test in the first comment, but I am happy to add a commit with tests if someone writes them. I am also happy to review a pull if someone adds them after merge.",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-967192330,967192330,
Sjors,2021-11-12 15:36:28,tACK fa1c1f417ef97d15331f4a13b40be9e00ecdb464,https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-967209533,967209533,
MarcoFalke,2021-11-14 17:21:47,Reworked and updated pull request description,https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-968331423,968331423,
sipa,2021-11-15 16:51:02,We may also need to check that no OP_CHECKSIGADD opcodes occur in a script before reporting a P2WSH for it.,https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-969105412,969105412,
achow101,2021-11-15 17:09:06,"> We may also need to check that no OP_CHECKSIGADD opcodes occur in a script before reporting a P2WSH for it.\n\nAnd OP_SUCCESSx too",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-969122906,969122906,
MarcoFalke,2021-11-16 19:20:03,"> And OP_SUCCESSx too\n\nAnd unparseable, and unspendable scripts.",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-970593400,970593400,
MarcoFalke,2021-11-22 12:55:39,"Force pushed to fix a ""typo"" :confounded: and updated OP to include more tests.",https://github.com/bitcoin/bitcoin/pull/23486#issuecomment-975493876,975493876,
katesalazar,2021-11-11 16:26:11,Why this line departs from the comment style around?,https://github.com/bitcoin/bitcoin/pull/23486#discussion_r747643612,747643612,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-11 16:28:33,I updated the style for the `p2sh` field because I changed the description for it. See https://github.com/bitcoin/bitcoin/pull/23437#discussion_r743438724,https://github.com/bitcoin/bitcoin/pull/23486#discussion_r747645500,747645500,src/rpc/rawtransaction.cpp
achow101,2021-11-12 20:45:52,"In fa1c1f417ef97d15331f4a13b40be9e00ecdb464 ""rpc: Avoid returning P2SH for witness_v1_taproot in decodescript""\n\nI think it would be more future proof to disallow P2SH wrapping for witness v1+ scripts. If this did `IsWitnessProgram` and checked the version was not 0, then this could be futureproofed. Otherwise this list would need to be updated for every new witness version). Doing it in this w",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r748575997,748575997,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-14 08:43:05,"Good point. It is unlikely that a future witness version will be wrappable, so the least maintenance effort would be to disallow all except v0.",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r748821648,748821648,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-14 10:44:40,I am thinking about also skipping P2SH for OP_RETURN data outputs,https://github.com/bitcoin/bitcoin/pull/23486#discussion_r748835511,748835511,src/rpc/rawtransaction.cpp
achow101,2021-11-14 15:28:52,"> I am thinking about also skipping P2SH for OP_RETURN data outputs\n\nI think that is reasonable as OP_RETURN in a P2SH is also unspendable.",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r748870232,748870232,src/rpc/rawtransaction.cpp
achow101,2021-11-14 15:35:08,"In b9cc2008ecfe823da840dd1c321aa298f8c8bef2 ""rpc: Only return P2SH wrapped witness programs for BIP141 types in deâ€¦ ""\n\nThis doesn't work as it is also catching all of the legacy things that can be wrapped such as multisig, p2pkh, p2pk, etc.\n\nI think it would be better to just enumerate lists of P2SH wrappable, and P2WSH wrappable, and check against those. I doubt any additional types would",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r748870964,748870964,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-14 17:20:31,"Thanks, done.",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r748883674,748883674,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-14 17:20:40,Fixed,https://github.com/bitcoin/bitcoin/pull/23486#discussion_r748883684,748883684,src/rpc/rawtransaction.cpp
sipa,2021-11-15 16:49:29,Typo: s/then/they/,https://github.com/bitcoin/bitcoin/pull/23486#discussion_r749507992,749507992,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-16 19:19:32,"Thx, removed whole sentence.",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r750588797,750588797,src/rpc/rawtransaction.cpp
achow101,2021-11-17 18:22:14,"In fa200104235398a0c507122b95e0899022650be0 ""rpc: Only allow specific types to be P2(W)SH wrapped in decodescript""\n\nReturning false here is incorrect. If a script contained Taproot opcodes, we still want to decode them, we just don't want to get it wrapped in any addresses.\n\nThis also results in the following error scripts containing `OP_CHECKSIGADD` and `OP_SUCCESSx`:\n\n```\n> src/bit",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r751522225,751522225,src/rpc/rawtransaction.cpp
achow101,2021-11-17 18:28:37,"In fa200104235398a0c507122b95e0899022650be0 ""rpc: Only allow specific types to be P2(W)SH wrapped in decodescript""\n\nReturning false here is incorrect. If a script contained invalid opcodes or is otherwise unspendable, we still want to decode them, we just don't want to get it wrapped in any addresses\n\nAny such scripts would result in an error similar to the following:\n\n```\n> src/bitc",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r751527130,751527130,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-22 12:54:29,Well that is one embarrassing typo. Force pushed `return r;`.,https://github.com/bitcoin/bitcoin/pull/23486#discussion_r754247593,754247593,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-22 12:54:39,Force pushed `return r;`.,https://github.com/bitcoin/bitcoin/pull/23486#discussion_r754247725,754247725,src/rpc/rawtransaction.cpp
luke-jr,2021-11-30 19:31:23,Isn't it TBD if future witnesses can be wrapped? Though maybe too unlikely to matter...,https://github.com/bitcoin/bitcoin/pull/23486#discussion_r759596698,759596698,src/rpc/rawtransaction.cpp
luke-jr,2021-11-30 19:32:25,"Not sure this ""return early"" is a good approach. Seems like it would be better to have a conditional block.",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r759597391,759597391,src/rpc/rawtransaction.cpp
MarcoFalke,2021-11-30 19:39:52,"It is possible but unlikely. In that case you need to upgrade to a version of Bitcoin Core that ""understands"" the witness program to wrap it.",https://github.com/bitcoin/bitcoin/pull/23486#discussion_r759602525,759602525,src/rpc/rawtransaction.cpp
