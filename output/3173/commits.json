[
  {
    "sha": "d5d1425657d0dd2dc76f4938c8141a387a81a5a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWQxNDI1NjU3ZDBkZDJkYzc2ZjQ5MzhjODE0MWEzODdhODFhNWE4",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-10-29T01:16:27Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-10-29T01:20:14Z"
      },
      "message": "Bug fix: CDataStream::GetAndClear() when nReadPos > 0\n\nChanged CDataStream::GetAndClear() to use the most obvious\nget get and clear instead of a tricky swap().\n\nAdded a unit test for CDataStream insert/erase/GetAndClear.\n\nNote: GetAndClear() is not performance critical, it is used only\nby the send-a-message-to-the-network code. Bug was not noticed\nbefore now because the send-a-message code never erased from the\nstream.",
      "tree": {
        "sha": "5083c171ee7a73e0c7ab6956987c23ddc2cf08af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5083c171ee7a73e0c7ab6956987c23ddc2cf08af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5d1425657d0dd2dc76f4938c8141a387a81a5a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5d1425657d0dd2dc76f4938c8141a387a81a5a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5d1425657d0dd2dc76f4938c8141a387a81a5a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5d1425657d0dd2dc76f4938c8141a387a81a5a8/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd1fc2434ce80f50242e41b5e675f6d0b36045ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd1fc2434ce80f50242e41b5e675f6d0b36045ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd1fc2434ce80f50242e41b5e675f6d0b36045ad"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 50,
      "deletions": 2
    },
    "files": [
      {
        "sha": "32f386b3668a0b3fb796c046fba7f604b9b12078",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5d1425657d0dd2dc76f4938c8141a387a81a5a8/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5d1425657d0dd2dc76f4938c8141a387a81a5a8/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=d5d1425657d0dd2dc76f4938c8141a387a81a5a8",
        "patch": "@@ -1104,8 +1104,8 @@ class CDataStream\n     }\n \n     void GetAndClear(CSerializeData &data) {\n-        vch.swap(data);\n-        CSerializeData().swap(vch);\n+        data.insert(data.end(), begin(), end());\n+        clear();\n     }\n };\n "
      },
      {
        "sha": "7e193c88ce19578c5f63d7bbaf5fb20963bfb70c",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5d1425657d0dd2dc76f4938c8141a387a81a5a8/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5d1425657d0dd2dc76f4938c8141a387a81a5a8/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=d5d1425657d0dd2dc76f4938c8141a387a81a5a8",
        "patch": "@@ -102,4 +102,52 @@ BOOST_AUTO_TEST_CASE(noncanonical)\n     BOOST_CHECK_EXCEPTION(ReadCompactSize(ss), std::ios_base::failure, isCanonicalException);\n }\n \n+BOOST_AUTO_TEST_CASE(insert_delete)\n+{\n+    // Test inserting/deleting bytes.\n+    CDataStream ss(SER_DISK, 0);\n+    BOOST_CHECK_EQUAL(ss.size(), 0);\n+\n+    ss.write(\"\\x00\\x01\\x02\\xff\", 4);\n+    BOOST_CHECK_EQUAL(ss.size(), 4);\n+\n+    char c = (char)11;\n+\n+    // Inserting at beginning/end/middle:\n+    ss.insert(ss.begin(), c);\n+    BOOST_CHECK_EQUAL(ss.size(), 5);\n+    BOOST_CHECK_EQUAL(ss[0], c);\n+    BOOST_CHECK_EQUAL(ss[1], 0);\n+\n+    ss.insert(ss.end(), c);\n+    BOOST_CHECK_EQUAL(ss.size(), 6);\n+    BOOST_CHECK_EQUAL(ss[4], (char)0xff);\n+    BOOST_CHECK_EQUAL(ss[5], c);\n+\n+    ss.insert(ss.begin()+2, c);\n+    BOOST_CHECK_EQUAL(ss.size(), 7);\n+    BOOST_CHECK_EQUAL(ss[2], c);\n+\n+    // Delete at beginning/end/middle\n+    ss.erase(ss.begin());\n+    BOOST_CHECK_EQUAL(ss.size(), 6);\n+    BOOST_CHECK_EQUAL(ss[0], 0);\n+\n+    ss.erase(ss.begin()+ss.size()-1);\n+    BOOST_CHECK_EQUAL(ss.size(), 5);\n+    BOOST_CHECK_EQUAL(ss[4], (char)0xff);\n+\n+    ss.erase(ss.begin()+1);\n+    BOOST_CHECK_EQUAL(ss.size(), 4);\n+    BOOST_CHECK_EQUAL(ss[0], 0);\n+    BOOST_CHECK_EQUAL(ss[1], 1);\n+    BOOST_CHECK_EQUAL(ss[2], 2);\n+    BOOST_CHECK_EQUAL(ss[3], (char)0xff);\n+\n+    // Make sure GetAndClear does the right thing:\n+    CSerializeData d;\n+    ss.GetAndClear(d);\n+    BOOST_CHECK_EQUAL(ss.size(), 0);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "9038b18f4655a5b8ad119d768decd1c693ebd7dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDM4YjE4ZjQ2NTVhNWI4YWQxMTlkNzY4ZGVjZDFjNjkzZWJkN2Rk",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-10-28T06:28:00Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-10-29T01:20:14Z"
      },
      "message": "-fuzzmessagestest=N : randomly corrupt 1-of-N sent messages\n\nI needed this to test the new \"reject\" p2p message, but it should be generally\nuseful for fuzz-testing network message handling code.",
      "tree": {
        "sha": "6c1f93a7b83201ef029347bfdbf388a9216860b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c1f93a7b83201ef029347bfdbf388a9216860b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9038b18f4655a5b8ad119d768decd1c693ebd7dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9038b18f4655a5b8ad119d768decd1c693ebd7dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9038b18f4655a5b8ad119d768decd1c693ebd7dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9038b18f4655a5b8ad119d768decd1c693ebd7dd/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d5d1425657d0dd2dc76f4938c8141a387a81a5a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5d1425657d0dd2dc76f4938c8141a387a81a5a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d5d1425657d0dd2dc76f4938c8141a387a81a5a8"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 44,
      "deletions": 1
    },
    "files": [
      {
        "sha": "de8543da592bd3e3bd4b5394694ec28b8158d2b5",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9038b18f4655a5b8ad119d768decd1c693ebd7dd/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9038b18f4655a5b8ad119d768decd1c693ebd7dd/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9038b18f4655a5b8ad119d768decd1c693ebd7dd",
        "patch": "@@ -1894,3 +1894,38 @@ uint64 CNode::GetTotalBytesSent()\n     LOCK(cs_totalBytesSent);\n     return nTotalBytesSent;\n }\n+\n+void CNode::Fuzz(int nChance)\n+{\n+    if (!fSuccessfullyConnected) return; // Don't fuzz initial handshake\n+    if (GetRand(nChance) != 0) return; // Fuzz 1 of every nChance messages\n+\n+    switch (GetRand(3))\n+    {\n+    case 0:\n+        // xor a random byte with a random value:\n+        if (!ssSend.empty()) {\n+            CDataStream::size_type pos = GetRand(ssSend.size());\n+            ssSend[pos] ^= (unsigned char)(GetRand(256));\n+        }\n+        break;\n+    case 1:\n+        // delete a random byte:\n+        if (!ssSend.empty()) {\n+            CDataStream::size_type pos = GetRand(ssSend.size());\n+            ssSend.erase(ssSend.begin()+pos);\n+        }\n+        break;\n+    case 2:\n+        // insert a random byte at a random position\n+        {\n+            CDataStream::size_type pos = GetRand(ssSend.size());\n+            char ch = (char)GetRand(256);\n+            ssSend.insert(ssSend.begin()+pos, ch);\n+        }\n+        break;\n+    }\n+    // Chance of more than one change half the time:\n+    // (more changes exponentially less likely):\n+    Fuzz(2);\n+}"
      },
      {
        "sha": "b32178ad41bbdbb5c028151993a6f6112d980d7a",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9038b18f4655a5b8ad119d768decd1c693ebd7dd/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9038b18f4655a5b8ad119d768decd1c693ebd7dd/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=9038b18f4655a5b8ad119d768decd1c693ebd7dd",
        "patch": "@@ -218,6 +218,9 @@ class CNode\n     static CCriticalSection cs_setBanned;\n     int nMisbehavior;\n \n+    // Basic fuzz-testing\n+    void Fuzz(int nChance); // modifies ssSend\n+\n public:\n     uint256 hashContinue;\n     CBlockIndex* pindexLastGetBlocksBegin;\n@@ -434,12 +437,17 @@ class CNode\n     // TODO: Document the precondition of this function.  Is cs_vSend locked?\n     void EndMessage() UNLOCK_FUNCTION(cs_vSend)\n     {\n-        if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n+        // The -*messagestest options are intentionally not documented in the help message,\n+        // since they are only used during development to debug the networking code and are\n+        // not intended for end-users.\n+        if (mapArgs.count(\"-dropmessagestest\") && GetRand(GetArg(\"-dropmessagestest\", 2)) == 0)\n         {\n             LogPrint(\"net\", \"dropmessages DROPPING SEND MESSAGE\\n\");\n             AbortMessage();\n             return;\n         }\n+        if (mapArgs.count(\"-fuzzmessagestest\"))\n+            Fuzz(GetArg(\"-fuzzmessagestest\", 10));\n \n         if (ssSend.size() == 0)\n             return;"
      }
    ]
  }
]