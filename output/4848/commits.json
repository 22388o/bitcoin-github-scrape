[
  {
    "sha": "dbc2fcbabeece8ac85c3cd08903cf6f715e25de0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmMyZmNiYWJlZWNlOGFjODVjM2NkMDg5MDNjZjZmNzE1ZTI1ZGUw",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-09-05T07:18:49Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-09-05T07:27:01Z"
      },
      "message": "Remove extraneous ERROR messages where they give no additional information.",
      "tree": {
        "sha": "008fca6f31e9db8141375ba3dccb4f9bd7383573",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/008fca6f31e9db8141375ba3dccb4f9bd7383573"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbc2fcbabeece8ac85c3cd08903cf6f715e25de0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbc2fcbabeece8ac85c3cd08903cf6f715e25de0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbc2fcbabeece8ac85c3cd08903cf6f715e25de0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbc2fcbabeece8ac85c3cd08903cf6f715e25de0/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af9c3b0cffa4449f1254da3073aef77bafddf9cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af9c3b0cffa4449f1254da3073aef77bafddf9cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af9c3b0cffa4449f1254da3073aef77bafddf9cd"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "ecf3eaa052644bfb8560c3d8420358c6bcdb3c74",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbc2fcbabeece8ac85c3cd08903cf6f715e25de0/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbc2fcbabeece8ac85c3cd08903cf6f715e25de0/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dbc2fcbabeece8ac85c3cd08903cf6f715e25de0",
        "patch": "@@ -743,29 +743,29 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n-        return state.DoS(10, error(\"CheckTransaction() : vin empty\"),\n+        return state.DoS(10, false, // vin empty\n                          REJECT_INVALID, \"bad-txns-vin-empty\");\n     if (tx.vout.empty())\n-        return state.DoS(10, error(\"CheckTransaction() : vout empty\"),\n+        return state.DoS(10, false, // vout empty\n                          REJECT_INVALID, \"bad-txns-vout-empty\");\n     // Size limits\n     if (::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION) > MAX_BLOCK_SIZE)\n-        return state.DoS(100, error(\"CheckTransaction() : size limits failed\"),\n+        return state.DoS(100, false, // size limits failed\"\n                          REJECT_INVALID, \"bad-txns-oversize\");\n \n     // Check for negative or overflow output values\n     int64_t nValueOut = 0;\n     BOOST_FOREACH(const CTxOut& txout, tx.vout)\n     {\n         if (txout.nValue < 0)\n-            return state.DoS(100, error(\"CheckTransaction() : txout.nValue negative\"),\n+            return state.DoS(100, false, // txout.nValue negative\n                              REJECT_INVALID, \"bad-txns-vout-negative\");\n         if (txout.nValue > MAX_MONEY)\n-            return state.DoS(100, error(\"CheckTransaction() : txout.nValue too high\"),\n+            return state.DoS(100, false, // txout.nValue too high\n                              REJECT_INVALID, \"bad-txns-vout-toolarge\");\n         nValueOut += txout.nValue;\n         if (!MoneyRange(nValueOut))\n-            return state.DoS(100, error(\"CheckTransaction() : txout total out of range\"),\n+            return state.DoS(100, false, // txout total out of range\n                              REJECT_INVALID, \"bad-txns-txouttotal-toolarge\");\n     }\n \n@@ -774,22 +774,22 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n     {\n         if (vInOutPoints.count(txin.prevout))\n-            return state.DoS(100, error(\"CheckTransaction() : duplicate inputs\"),\n+            return state.DoS(100, false, // duplicate inputs\n                              REJECT_INVALID, \"bad-txns-inputs-duplicate\");\n         vInOutPoints.insert(txin.prevout);\n     }\n \n     if (tx.IsCoinBase())\n     {\n         if (tx.vin[0].scriptSig.size() < 2 || tx.vin[0].scriptSig.size() > 100)\n-            return state.DoS(100, error(\"CheckTransaction() : coinbase script size\"),\n+            return state.DoS(100, false, // coinbase script size\n                              REJECT_INVALID, \"bad-cb-length\");\n     }\n     else\n     {\n         BOOST_FOREACH(const CTxIn& txin, tx.vin)\n             if (txin.prevout.IsNull())\n-                return state.DoS(10, error(\"CheckTransaction() : prevout is null\"),\n+                return state.DoS(10, false, // prevout is null\n                                  REJECT_INVALID, \"bad-txns-prevout-null\");\n     }\n \n@@ -834,7 +834,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         *pfMissingInputs = false;\n \n     if (!CheckTransaction(tx, state))\n-        return error(\"AcceptToMemoryPool: : CheckTransaction failed\");\n+        return false;\n \n     // Coinbase is only valid in a block, not as a loose transaction\n     if (tx.IsCoinBase())\n@@ -894,7 +894,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // are the actual inputs available?\n         if (!view.HaveInputs(tx))\n-            return state.Invalid(error(\"AcceptToMemoryPool : inputs already spent\"),\n+            return state.Invalid(false, // inputs already spent\n                                  REJECT_DUPLICATE, \"bad-txns-inputs-spent\");\n \n         // Bring the best block into scope\n@@ -955,7 +955,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             // -limitfreerelay unit is thousand-bytes-per-minute\n             // At default rate it would take over a month to fill 1GB\n             if (dFreeCount >= GetArg(\"-limitfreerelay\", 15)*10*1000)\n-                return state.DoS(0, error(\"AcceptToMemoryPool : free transaction rejected by rate limiter\"),\n+                return state.DoS(0, false, // free transaction rejected by rate limiter\n                                  REJECT_INSUFFICIENTFEE, \"insufficient priority\");\n             LogPrint(\"mempool\", \"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n             dFreeCount += nSize;"
      }
    ]
  },
  {
    "sha": "3f6cba882540c884a10d171b5f834026e4f4ef99",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjZjYmE4ODI1NDBjODg0YTEwZDE3MWI1ZjgzNDAyNmU0ZjRlZjk5",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-09-05T07:25:00Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-09-05T07:27:31Z"
      },
      "message": "Enable this debugging always now that the previous error messages are no longer logged.",
      "tree": {
        "sha": "ba47f4643975093834280fc52e6f6a0c229f1eb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba47f4643975093834280fc52e6f6a0c229f1eb3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f6cba882540c884a10d171b5f834026e4f4ef99",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f6cba882540c884a10d171b5f834026e4f4ef99",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f6cba882540c884a10d171b5f834026e4f4ef99",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f6cba882540c884a10d171b5f834026e4f4ef99/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dbc2fcbabeece8ac85c3cd08903cf6f715e25de0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbc2fcbabeece8ac85c3cd08903cf6f715e25de0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dbc2fcbabeece8ac85c3cd08903cf6f715e25de0"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "16492781d3a245e3b69ad7d9b3b262eb14d5a71f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f6cba882540c884a10d171b5f834026e4f4ef99/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f6cba882540c884a10d171b5f834026e4f4ef99/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3f6cba882540c884a10d171b5f834026e4f4ef99",
        "patch": "@@ -3820,9 +3820,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n         {\n-            LogPrint(\"mempool\", \"%s from peer=%d %s was not accepted into the memory pool: %s\\n\", tx.GetHash().ToString(),\n-                pfrom->id, pfrom->cleanSubVer,\n-                state.GetRejectReason());\n+            LogPrintf(\"mempool: %s not accepted from peer=%d %s: %s\\n\", inv.ToString(),\n+                pfrom->id, pfrom->cleanSubVer.substr(0,20), state.GetRejectReason());\n             pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n                                state.GetRejectReason(), inv.hash);\n             if (nDoS > 0)"
      }
    ]
  }
]