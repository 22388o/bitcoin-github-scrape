[
  {
    "sha": "55e760f54721f320e913f885c89490a9531faaa5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NWU3NjBmNTQ3MjFmMzIwZTkxM2Y4ODVjODk0OTBhOTUzMWZhYWE1",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-11T06:58:11Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-06-15T03:10:09Z"
      },
      "message": "use IsBlockPruned() where appropriate",
      "tree": {
        "sha": "f62ed823683cb3e240e5c672e4f92fee5633fbe8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f62ed823683cb3e240e5c672e4f92fee5633fbe8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55e760f54721f320e913f885c89490a9531faaa5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlsjLhEACgkQV692LbM1\nMyIppQ/+OPLaWU0ho8hCgd4F9Wqv/HpvUUHtxpMELiSdI7OV+GMXTp3YrZDO+gCc\nUmtwZyZmuz/QDyfLVwOKYRflz9vu0/btgiSZybjLm8wF44h6pm7IA7XT5vzXAkzJ\nnr6AS1zG9aln+HHwShqGbih2TBDee9XOWM/0ifsBXdbhdRvbgGBHUbbRNRZY2twi\n8Wa/GOe5zl13KIrUHOQSHeNzUu4+LagPGoxCIRrnmPon+yxflM6ozDdmrRRbo33L\nId7YK+4f6iQ/M0eRM+CbOCPXfMw3om+jEsY3HmHtTL307aJAX+CUFnm00ZwoEhLv\ngNyYT2+sTS1FoUWmyhOUopp0RXKlLcQsK0fEIDTfFVueSwFx+KmpJKnzO9IK9ZeF\nrnhMVn/u3z7/zgF8JszvZ59UjbfhWn0mbeW+QkFhMMxB5J+AYU3tPw55XLynfec+\nXBxBcd28HSef+J8rOeEh5uDITeyYdlQAA1cMEvcU3YgW0dtHHncMhJgkjnL+R8Oi\nKV+h0TGUwqAMnbhuPOcBMYa8/iQhVCbYWLzS7KKjlw2ONaTkcGUDi2nSVjO4SQmC\n2pqPrYR6ThDuE6hSHJHAbchkzWdjQelAw3t81OaVYYK35mz+fE9/fGx4W2eI8tjw\nsXGqzSCeIOEVjVZo6isMD1JiETtIPcg2QUh3Sb+NYUY1KQ+FRgg=\n=6YbM\n-----END PGP SIGNATURE-----",
        "payload": "tree f62ed823683cb3e240e5c672e4f92fee5633fbe8\nparent 2b770080a49f282e51b7e4d176b2d9fbe0f8f5db\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1528700291 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1529032209 +0900\n\nuse IsBlockPruned() where appropriate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55e760f54721f320e913f885c89490a9531faaa5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55e760f54721f320e913f885c89490a9531faaa5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55e760f54721f320e913f885c89490a9531faaa5/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b770080a49f282e51b7e4d176b2d9fbe0f8f5db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b770080a49f282e51b7e4d176b2d9fbe0f8f5db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b770080a49f282e51b7e4d176b2d9fbe0f8f5db"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 8,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7686488883cc3c5493294ada6bfdcc6611146dce",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e760f54721f320e913f885c89490a9531faaa5/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e760f54721f320e913f885c89490a9531faaa5/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=55e760f54721f320e913f885c89490a9531faaa5",
        "patch": "@@ -2040,8 +2040,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // If pruning, don't inv blocks unless we have on disk and are likely to still have\n             // for some reasonable time window (1 hour) that block relay might require.\n             const int nPrunedBlocksLikelyToHave = MIN_BLOCKS_TO_KEEP - 3600 / chainparams.GetConsensus().nPowTargetSpacing;\n-            if (fPruneMode && (!(pindex->nStatus & BLOCK_HAVE_DATA) || pindex->nHeight <= chainActive.Tip()->nHeight - nPrunedBlocksLikelyToHave))\n-            {\n+            if (IsBlockPruned(pindex) || pindex->nHeight <= chainActive.Tip()->nHeight - nPrunedBlocksLikelyToHave) {\n                 LogPrint(BCLog::NET, \" getblocks stopping, pruned or too old block at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n                 break;\n             }"
      },
      {
        "sha": "5580b53ed8d23eb2b55759d19cc7adedec374e91",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e760f54721f320e913f885c89490a9531faaa5/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e760f54721f320e913f885c89490a9531faaa5/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=55e760f54721f320e913f885c89490a9531faaa5",
        "patch": "@@ -1244,7 +1244,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     if (fPruneMode) {\n         CBlockIndex* block = chainActive.Tip();\n         assert(block);\n-        while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {\n+        while (block->pprev && !IsBlockPruned(block->pprev)) {\n             block = block->pprev;\n         }\n "
      },
      {
        "sha": "48eeb3ee04200b3c646d6c40bd6ffc9304270953",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e760f54721f320e913f885c89490a9531faaa5/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e760f54721f320e913f885c89490a9531faaa5/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=55e760f54721f320e913f885c89490a9531faaa5",
        "patch": "@@ -4002,7 +4002,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n         uiInterface.ShowProgress(_(\"Verifying blocks...\"), percentageDone, false);\n         if (pindex->nHeight <= chainActive.Height()-nCheckDepth)\n             break;\n-        if (fPruneMode && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+        if (IsBlockPruned(pindex)) {\n             // If pruning, only go back as far as we have data.\n             LogPrintf(\"VerifyDB(): block verification stopping at height %d (pruning, no data)\\n\", pindex->nHeight);\n             break;\n@@ -4177,7 +4177,7 @@ bool CChainState::RewindBlockIndex(const CChainParams& params)\n     CValidationState state;\n     CBlockIndex* pindex = chainActive.Tip();\n     while (chainActive.Height() >= nHeight) {\n-        if (fPruneMode && !(chainActive.Tip()->nStatus & BLOCK_HAVE_DATA)) {\n+        if (IsBlockPruned(chainActive.Tip())) {\n             // If pruning, don't try rewinding past the HAVE_DATA point;\n             // since older blocks can't be served anyway, there's\n             // no need to walk further, and trying to DisconnectTip()"
      },
      {
        "sha": "2684611ac6b258be437636436f9311d104f8286b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e760f54721f320e913f885c89490a9531faaa5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e760f54721f320e913f885c89490a9531faaa5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=55e760f54721f320e913f885c89490a9531faaa5",
        "patch": "@@ -3891,7 +3891,7 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         LOCK(cs_main);\n         CBlockIndex *block = pindexStop ? pindexStop : pChainTip;\n         while (block && block->nHeight >= pindexStart->nHeight) {\n-            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+            if (IsBlockPruned(block)) {\n                 throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n             }\n             block = block->pprev;"
      },
      {
        "sha": "602aa3b11ae2448f4993d0ff1f7a73ee7cb8d8c8",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e760f54721f320e913f885c89490a9531faaa5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e760f54721f320e913f885c89490a9531faaa5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=55e760f54721f320e913f885c89490a9531faaa5",
        "patch": "@@ -4281,11 +4281,11 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(const std::string& name,\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n-        if (fPruneMode)\n-        {\n+        if (fPruneMode) {\n             CBlockIndex *block = chainActive.Tip();\n-            while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA) && block->pprev->nTx > 0 && pindexRescan != block)\n+            while (block->pprev && !IsBlockPruned(block->pprev) && pindexRescan != block) {\n                 block = block->pprev;\n+            }\n \n             if (pindexRescan != block) {\n                 InitError(_(\"Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)\"));"
      }
    ]
  }
]