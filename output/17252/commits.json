[
  {
    "sha": "d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWMzNmNlMGM0YjkyZWU3YTJiNWYyNTZlYzVmNzNjZDFjOTVkMjFk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-10-14T19:46:34Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-10-25T13:55:33Z"
      },
      "message": "gui: Make polling in ClientModel asynchronous\n\nWith this change polling runs in a different thread to prevent\ndisturbing the event loop.\n\nGithub-Pull: #17135\nRebased-From: 6b6be41c36e4fe9a74bed50e7f0a06532ab1260b",
      "tree": {
        "sha": "200b39ac30c83288c7f7736311f40fd583bfca88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/200b39ac30c83288c7f7736311f40fd583bfca88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b68d1654f078bdcc7a1a79300d5db7eb5b8f40e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b68d1654f078bdcc7a1a79300d5db7eb5b8f40e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b68d1654f078bdcc7a1a79300d5db7eb5b8f40e"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 21,
      "deletions": 14
    },
    "files": [
      {
        "sha": "5b216b2705b812b8fd459752b2992f1c29200fa2",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 12,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d",
        "patch": "@@ -19,6 +19,7 @@\n #include <stdint.h>\n \n #include <QDebug>\n+#include <QThread>\n #include <QTimer>\n \n static int64_t nLastHeaderTipUpdateNotification = 0;\n@@ -30,22 +31,36 @@ ClientModel::ClientModel(interfaces::Node& node, OptionsModel *_optionsModel, QO\n     optionsModel(_optionsModel),\n     peerTableModel(nullptr),\n     banTableModel(nullptr),\n-    pollTimer(nullptr)\n+    m_thread(new QThread(this))\n {\n     cachedBestHeaderHeight = -1;\n     cachedBestHeaderTime = -1;\n     peerTableModel = new PeerTableModel(m_node, this);\n     banTableModel = new BanTableModel(m_node, this);\n-    pollTimer = new QTimer(this);\n-    connect(pollTimer, &QTimer::timeout, this, &ClientModel::updateTimer);\n-    pollTimer->start(MODEL_UPDATE_DELAY);\n+\n+    QTimer* timer = new QTimer;\n+    timer->setInterval(MODEL_UPDATE_DELAY);\n+    connect(timer, &QTimer::timeout, [this] {\n+        // no locking required at this point\n+        // the following calls will acquire the required lock\n+        Q_EMIT mempoolSizeChanged(m_node.getMempoolSize(), m_node.getMempoolDynamicUsage());\n+        Q_EMIT bytesChanged(m_node.getTotalBytesRecv(), m_node.getTotalBytesSent());\n+    });\n+    connect(m_thread, &QThread::finished, timer, &QObject::deleteLater);\n+    connect(m_thread, &QThread::started, [timer] { timer->start(); });\n+    // move timer to thread so that polling doesn't disturb main event loop\n+    timer->moveToThread(m_thread);\n+    m_thread->start();\n \n     subscribeToCoreSignals();\n }\n \n ClientModel::~ClientModel()\n {\n     unsubscribeFromCoreSignals();\n+\n+    m_thread->quit();\n+    m_thread->wait();\n }\n \n int ClientModel::getNumConnections(unsigned int flags) const\n@@ -90,14 +105,6 @@ int64_t ClientModel::getHeaderTipTime() const\n     return cachedBestHeaderTime;\n }\n \n-void ClientModel::updateTimer()\n-{\n-    // no locking required at this point\n-    // the following calls will acquire the required lock\n-    Q_EMIT mempoolSizeChanged(m_node.getMempoolSize(), m_node.getMempoolDynamicUsage());\n-    Q_EMIT bytesChanged(m_node.getTotalBytesRecv(), m_node.getTotalBytesSent());\n-}\n-\n void ClientModel::updateNumConnections(int numConnections)\n {\n     Q_EMIT numConnectionsChanged(numConnections);"
      },
      {
        "sha": "d3a95d531e7fa33b1663a3deff3823d44361fa3e",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=d5c36ce0c4b92ee7a2b5f256ec5f73cd1c95d21d",
        "patch": "@@ -90,7 +90,8 @@ class ClientModel : public QObject\n     PeerTableModel *peerTableModel;\n     BanTableModel *banTableModel;\n \n-    QTimer *pollTimer;\n+    //! A thread to interact with m_node asynchronously\n+    QThread* const m_thread;\n \n     void subscribeToCoreSignals();\n     void unsubscribeFromCoreSignals();\n@@ -110,7 +111,6 @@ class ClientModel : public QObject\n     void showProgress(const QString &title, int nProgress);\n \n public Q_SLOTS:\n-    void updateTimer();\n     void updateNumConnections(int numConnections);\n     void updateNetworkActive(bool networkActive);\n     void updateAlert();"
      }
    ]
  }
]