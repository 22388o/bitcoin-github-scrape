[
  {
    "sha": "384273260a6ccbcf79dade0830011f528e5a1581",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODQyNzMyNjBhNmNjYmNmNzlkYWRlMDgzMDAxMWY1MjhlNWExNTgx",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-05-12T03:17:55Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-08-03T06:45:20Z"
      },
      "message": "test: Add testing of value_ret for SelectCoinsBnB\n\nFix that the early bailout optimization tests did not test the actual\nselection because their utxo pool was polluted by the make_hard_case test\npreceding.",
      "tree": {
        "sha": "f8c41c512eee59e481a50f753c36e1359d49919c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8c41c512eee59e481a50f753c36e1359d49919c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/384273260a6ccbcf79dade0830011f528e5a1581",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbY/oFAAoJEG7l83hfeLNFmRgH/22Ah+7CYgCD7OIeFt3wswUe\nY7tfKNDpz+8yd5HDhTHnyjfydGU2H6ewIi62y6nm6I4QJQ04RtVKO2D5fnpZe2O3\nFJsZ+TJPqorJQbZLlG2KdMAvsal5Tj/4/kVa/gO+LBRgS91Yli86k3OfkJhiF6TM\n7SlkVqP7ENv2bsoE3qO/KYeHfjiXxdptY8PnCCczviQ7oN500s33gagRuUImfP8G\nP0ifbbImtdI6BghU03YpHZSy3QC3auElDoK8eGpkiN44orLLq5DLWvdvsJij2uPx\nxv+k3T+mPOxiEKgKMX0AiGrkpv8PEwGPAFRusrGPainnKKiFkZ1fQwBVCHlZwrI=\n=6KSD\n-----END PGP SIGNATURE-----",
        "payload": "tree f8c41c512eee59e481a50f753c36e1359d49919c\nparent 29b4ee64695f79511912ae127e66e0fe82f7a0d1\nauthor Ben Woosley <ben.woosley@gmail.com> 1526095075 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1533278720 -0400\n\ntest: Add testing of value_ret for SelectCoinsBnB\n\nFix that the early bailout optimization tests did not test the actual\nselection because their utxo pool was polluted by the make_hard_case test\npreceding.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/384273260a6ccbcf79dade0830011f528e5a1581",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/384273260a6ccbcf79dade0830011f528e5a1581",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/384273260a6ccbcf79dade0830011f528e5a1581/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29b4ee64695f79511912ae127e66e0fe82f7a0d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29b4ee64695f79511912ae127e66e0fe82f7a0d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29b4ee64695f79511912ae127e66e0fe82f7a0d1"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f36b2243448ef72fa9874610ec1411e81d276057",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/384273260a6ccbcf79dade0830011f528e5a1581/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/384273260a6ccbcf79dade0830011f528e5a1581/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=384273260a6ccbcf79dade0830011f528e5a1581",
        "patch": "@@ -150,13 +150,15 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     add_coin(1 * CENT, 1, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 1 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n+    BOOST_CHECK_EQUAL(value_ret, 1 * CENT);\n     actual_selection.clear();\n     selection.clear();\n \n     // Select 2 Cent\n     add_coin(2 * CENT, 2, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 2 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n+    BOOST_CHECK_EQUAL(value_ret, 2 * CENT);\n     actual_selection.clear();\n     selection.clear();\n \n@@ -165,6 +167,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     add_coin(2 * CENT, 2, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 5 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n+    BOOST_CHECK_EQUAL(value_ret, 5 * CENT);\n     actual_selection.clear();\n     selection.clear();\n \n@@ -181,6 +184,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     add_coin(1 * CENT, 1, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 10 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n     BOOST_CHECK(equal_sets(selection, actual_selection));\n+    BOOST_CHECK_EQUAL(value_ret, 10 * CENT);\n     actual_selection.clear();\n     selection.clear();\n \n@@ -190,6 +194,9 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     add_coin(3 * CENT, 3, actual_selection);\n     add_coin(2 * CENT, 2, actual_selection);\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 10 * CENT, 5000, selection, value_ret, not_input_fees));\n+    BOOST_CHECK_EQUAL(value_ret, 10 * CENT);\n+    // FIXME: this test is redundant with the above, because 1 Cent is selected, not \"too small\"\n+    // BOOST_CHECK(equal_sets(selection, actual_selection));\n \n     // Select 0.25 Cent, not possible\n     BOOST_CHECK(!SelectCoinsBnB(GroupCoins(utxo_pool), 0.25 * CENT, 0.5 * CENT, selection, value_ret, not_input_fees));\n@@ -203,6 +210,7 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), target, 0, selection, value_ret, not_input_fees)); // Should not exhaust\n \n     // Test same value early bailout optimization\n+    utxo_pool.clear();\n     add_coin(7 * CENT, 7, actual_selection);\n     add_coin(7 * CENT, 7, actual_selection);\n     add_coin(7 * CENT, 7, actual_selection);\n@@ -217,6 +225,8 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n         add_coin(5 * CENT, 7, utxo_pool);\n     }\n     BOOST_CHECK(SelectCoinsBnB(GroupCoins(utxo_pool), 30 * CENT, 5000, selection, value_ret, not_input_fees));\n+    BOOST_CHECK_EQUAL(value_ret, 30 * CENT);\n+    BOOST_CHECK(equal_sets(selection, actual_selection));\n \n     ////////////////////\n     // Behavior tests //"
      }
    ]
  }
]