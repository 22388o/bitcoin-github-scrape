[
  {
    "sha": "9b5659d1c4c62bc6b80e35ff7573c781835e4187",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjU2NTlkMWM0YzYyYmM2YjgwZTM1ZmY3NTczYzc4MTgzNWU0MTg3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-10T09:59:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-10T09:59:23Z"
      },
      "message": "Remove translation for -help-debug options\n\nDo not translate -help-debug options, Many technical terms, and\nonly a very small audience, so is unnecessary stress to translators.\n\nBrings the code up to date with translation string policy in\n`doc/translation_strings_policy.md`.\n\nAlso remove no-longer-relevant \"In this mode -genproclimit controls how\nmany blocks are generated immediately.\" (as of #5957) from regtest help.",
      "tree": {
        "sha": "6a44745676b21dfa1cc2cd2b4f6119ecda1b614c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a44745676b21dfa1cc2cd2b4f6119ecda1b614c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b5659d1c4c62bc6b80e35ff7573c781835e4187",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b5659d1c4c62bc6b80e35ff7573c781835e4187",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b5659d1c4c62bc6b80e35ff7573c781835e4187",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b5659d1c4c62bc6b80e35ff7573c781835e4187/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e54ff2fc0ef526e4403526a31a6d7625abdf5245",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e54ff2fc0ef526e4403526a31a6d7625abdf5245",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e54ff2fc0ef526e4403526a31a6d7625abdf5245"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 26,
      "deletions": 25
    },
    "files": [
      {
        "sha": "4473cd9ec9610c0498f2e9480a0656b0d7eba609",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 25,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b5659d1c4c62bc6b80e35ff7573c781835e4187/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b5659d1c4c62bc6b80e35ff7573c781835e4187/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9b5659d1c4c62bc6b80e35ff7573c781835e4187",
        "patch": "@@ -260,8 +260,10 @@ void OnRPCPreCommand(const CRPCCommand& cmd)\n \n std::string HelpMessage(HelpMessageMode mode)\n {\n+    const bool showDebug = GetBoolArg(\"-help-debug\", false);\n \n     // When adding new options to the categories, please keep and ensure alphabetical ordering.\n+    // Do not translate _(...) -help-debug options, Many technical terms, and only a very small audience, so is unnecessary stress to translators.\n     string strUsage = HelpMessageGroup(_(\"Options:\"));\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n     strUsage += HelpMessageOpt(\"-alertnotify=<cmd>\", _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\"));\n@@ -331,8 +333,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n     strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n-    if (GetBoolArg(\"-help-debug\", false))\n-        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n+    if (showDebug)\n+        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\",\n             FormatMoney(CWallet::minTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n@@ -351,16 +353,16 @@ std::string HelpMessage(HelpMessageMode mode)\n #endif\n \n     strUsage += HelpMessageGroup(_(\"Debugging/Testing options:\"));\n-    if (GetBoolArg(\"-help-debug\", false))\n+    if (showDebug)\n     {\n-        strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(_(\"Disable expensive verification for known chain history (default: %u)\"), 1));\n-        strUsage += HelpMessageOpt(\"-dblogsize=<n>\", strprintf(_(\"Flush database activity from memory pool to disk log every <n> megabytes (default: %u)\"), 100));\n-        strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(_(\"Disable safemode, override a real safe mode event (default: %u)\"), 0));\n-        strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(_(\"Force safe mode (default: %u)\"), 0));\n-        strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", _(\"Randomly drop 1 of every <n> network messages\"));\n-        strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", _(\"Randomly fuzz 1 of every <n> network messages\"));\n-        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(_(\"Run a thread to flush wallet periodically (default: %u)\"), 1));\n-        strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(_(\"Stop running after importing blocks from disk (default: %u)\"), 0));\n+        strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-dblogsize=<n>\", strprintf(\"Flush database activity from memory pool to disk log every <n> megabytes (default: %u)\", 100));\n+        strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", 0));\n+        strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", 0));\n+        strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n+        strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n     }\n     string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, net, proxy, prune\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n@@ -374,21 +376,20 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-help-debug\", _(\"Show all debugging options (usage: --help -help-debug)\"));\n     strUsage += HelpMessageOpt(\"-logips\", strprintf(_(\"Include IP addresses in debug output (default: %u)\"), 0));\n     strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), 1));\n-    if (GetBoolArg(\"-help-debug\", false))\n+    if (showDebug)\n     {\n-        strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(_(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\"), 15));\n-        strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(_(\"Require high priority for relaying free or low-fee transactions (default: %u)\"), 1));\n-        strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(_(\"Limit size of signature cache to <n> entries (default: %u)\"), 50000));\n+        strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", 15));\n+        strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n     }\n     strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)\"), FormatMoney(::minRelayTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-printtoconsole\", _(\"Send trace/debug info to console instead of debug.log file\"));\n-    if (GetBoolArg(\"-help-debug\", false))\n+    if (showDebug)\n     {\n-        strUsage += HelpMessageOpt(\"-printpriority\", strprintf(_(\"Log transaction priority and fee per kB when mining blocks (default: %u)\"), 0));\n-        strUsage += HelpMessageOpt(\"-privdb\", strprintf(_(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\"), 1));\n-        strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \" \" +\n-            _(\"This is intended for regression testing tools and app development.\") + \" \" +\n-            _(\"In this mode -genproclimit controls how many blocks are generated immediately.\"));\n+        strUsage += HelpMessageOpt(\"-printpriority\", strprintf(\"Log transaction priority and fee per kB when mining blocks (default: %u)\", 0));\n+        strUsage += HelpMessageOpt(\"-privdb\", strprintf(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n+            \"This is intended for regression testing tools and app development.\");\n     }\n     strUsage += HelpMessageOpt(\"-shrinkdebugfile\", _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\"));\n     strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n@@ -401,8 +402,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-blockminsize=<n>\", strprintf(_(\"Set minimum block size in bytes (default: %u)\"), 0));\n     strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE));\n     strUsage += HelpMessageOpt(\"-blockprioritysize=<n>\", strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE));\n-    if (GetBoolArg(\"-help-debug\", false))\n-        strUsage += HelpMessageOpt(\"-blockversion=<n>\", strprintf(_(\"Override block version to test forking scenarios (default: %d)\"), (int)CBlock::CURRENT_VERSION));\n+    if (showDebug)\n+        strUsage += HelpMessageOpt(\"-blockversion=<n>\", strprintf(\"Override block version to test forking scenarios (default: %d)\", (int)CBlock::CURRENT_VERSION));\n \n     strUsage += HelpMessageGroup(_(\"RPC server options:\"));\n     strUsage += HelpMessageOpt(\"-server\", _(\"Accept command line and JSON-RPC commands\"));\n@@ -424,8 +425,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (mode == HMM_BITCOIN_QT)\n     {\n         strUsage += HelpMessageGroup(_(\"UI Options:\"));\n-        if (GetBoolArg(\"-help-debug\", false)) {\n-            strUsage += HelpMessageOpt(\"-allowselfsignedrootcertificates\", _(\"Allow self signed root certificates (default: 0)\"));\n+        if (showDebug) {\n+            strUsage += HelpMessageOpt(\"-allowselfsignedrootcertificates\", \"Allow self signed root certificates (default: 0)\");\n         }\n         strUsage += HelpMessageOpt(\"-choosedatadir\", _(\"Choose data directory on startup (default: 0)\"));\n         strUsage += HelpMessageOpt(\"-lang=<lang>\", _(\"Set language, for example \\\"de_DE\\\" (default: system locale)\"));"
      }
    ]
  }
]