[
  {
    "sha": "ddb68acebe0c41e1958a783c38a272ae11671f86",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGI2OGFjZWJlMGM0MWUxOTU4YTc4M2MzOGEyNzJhZTExNjcxZjg2",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2010-12-20T19:44:54Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2010-12-21T18:39:10Z"
      },
      "message": "Add address to listtransactions output",
      "tree": {
        "sha": "1db5bfb4717063bab3e6b110a1ba2ef30e56a74a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1db5bfb4717063bab3e6b110a1ba2ef30e56a74a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddb68acebe0c41e1958a783c38a272ae11671f86",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddb68acebe0c41e1958a783c38a272ae11671f86",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddb68acebe0c41e1958a783c38a272ae11671f86",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddb68acebe0c41e1958a783c38a272ae11671f86/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5568d82c26d59aa90df22a6ac0900a93a5731aaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5568d82c26d59aa90df22a6ac0900a93a5731aaf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5568d82c26d59aa90df22a6ac0900a93a5731aaf"
      }
    ],
    "stats": {
      "total": 101,
      "additions": 67,
      "deletions": 34
    },
    "files": [
      {
        "sha": "b7dfd9fabebb2b892d12cf24b412a4ca92335ad6",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 18,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddb68acebe0c41e1958a783c38a272ae11671f86/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddb68acebe0c41e1958a783c38a272ae11671f86/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=ddb68acebe0c41e1958a783c38a272ae11671f86",
        "patch": "@@ -395,9 +395,12 @@ int CWalletTx::GetRequestCount() const\n }\n \n void CWalletTx::GetAmounts(int64& nGenerated, list<pair<string, int64> >& listReceived,\n-                           int64& nSent, int64& nFee, string& strSentAccount) const\n+                           list<pair<string, int64> >& listSent, int64& nFee, string& strSentAccount) const\n {\n-    nGenerated = nSent = nFee = 0;\n+    nGenerated = nFee = 0;\n+    listReceived.clear();\n+    listSent.clear();\n+    strSentAccount = strFromAccount;\n \n     if (IsCoinBase())\n     {\n@@ -406,42 +409,58 @@ void CWalletTx::GetAmounts(int64& nGenerated, list<pair<string, int64> >& listRe\n         return;\n     }\n \n-    // Received.  Standard client will never generate a send-to-multiple-recipients,\n+    // Compute fee:\n+    int64 nDebit = GetDebit();\n+    if (nDebit > 0) // debit>0 means we signed/sent this transaction\n+    {\n+        int64 nValueOut = GetValueOut();\n+        nFee = nDebit - nValueOut;\n+    }\n+\n+    // Sent/received.  Standard client will never generate a send-to-multiple-recipients,\n     // but non-standard clients might (so return a list of address/amount pairs)\n     foreach(const CTxOut& txout, vout)\n     {\n+        string address;\n+        uint160 hash160;\n         vector<unsigned char> vchPubKey;\n-        if (ExtractPubKey(txout.scriptPubKey, true, vchPubKey))\n-            listReceived.push_back(make_pair(PubKeyToAddress(vchPubKey), txout.nValue));\n-    }\n+        if (ExtractHash160(txout.scriptPubKey, hash160))\n+            address = Hash160ToAddress(hash160);\n+        else if (ExtractPubKey(txout.scriptPubKey, false, vchPubKey))\n+            address = PubKeyToAddress(vchPubKey);\n+        else\n+            address = \" unknown \"; // some type of weird non-standard transaction?\n \n-    // Sent\n-    int64 nDebit = GetDebit();\n-    if (nDebit > 0)\n-    {\n-        int64 nValueOut = GetValueOut();\n-        nFee = nDebit - nValueOut;\n-        nSent = nValueOut - GetChange();\n-        strSentAccount = strFromAccount;\n+        if (nDebit > 0 && txout.IsChange())\n+            continue;\n+\n+        if (nDebit > 0)\n+            listSent.push_back(make_pair(address, txout.nValue));\n+\n+        if (txout.IsMine())\n+            listReceived.push_back(make_pair(address, txout.nValue));\n     }\n+\n }\n \n void CWalletTx::GetAccountAmounts(const string& strAccount, int64& nGenerated, int64& nReceived, \n                                   int64& nSent, int64& nFee) const\n {\n     nGenerated = nReceived = nSent = nFee = 0;\n \n-    int64 allGenerated, allSent, allFee;\n-    allGenerated = allSent = allFee = 0;\n+    int64 allGenerated, allFee;\n+    allGenerated = allFee = 0;\n     string strSentAccount;\n     list<pair<string, int64> > listReceived;\n-    GetAmounts(allGenerated, listReceived, allSent, allFee, strSentAccount);\n+    list<pair<string, int64> > listSent;\n+    GetAmounts(allGenerated, listReceived, listSent, allFee, strSentAccount);\n \n     if (strAccount == \"\")\n         nGenerated = allGenerated;\n     if (strAccount == strSentAccount)\n     {\n-        nSent = allSent;\n+        foreach(const PAIRTYPE(string,int64)& s, listSent)\n+            nSent += s.second;\n         nFee = allFee;\n     }\n     CRITICAL_BLOCK(cs_mapAddressBook)"
      },
      {
        "sha": "3c7bcb22f0f0ae4f5f1cd1553dc21005a24e3e36",
        "filename": "main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddb68acebe0c41e1958a783c38a272ae11671f86/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddb68acebe0c41e1958a783c38a272ae11671f86/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=ddb68acebe0c41e1958a783c38a272ae11671f86",
        "patch": "@@ -874,7 +874,7 @@ class CWalletTx : public CMerkleTx\n     }\n \n     void GetAmounts(int64& nGenerated, list<pair<string /* address */, int64> >& listReceived,\n-                    int64& nSent, int64& nFee, string& strSentAccount) const;\n+                    list<pair<string /* address */, int64> >& listSent, int64& nFee, string& strSentAccount) const;\n \n     void GetAccountAmounts(const string& strAccount, int64& nGenerated, int64& nReceived, \n                            int64& nSent, int64& nFee) const;"
      },
      {
        "sha": "aede2e4c4ce4439ae3bcfce88837811100d300b3",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 15,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddb68acebe0c41e1958a783c38a272ae11671f86/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddb68acebe0c41e1958a783c38a272ae11671f86/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=ddb68acebe0c41e1958a783c38a272ae11671f86",
        "patch": "@@ -859,10 +859,11 @@ Value listreceivedbyaccount(const Array& params, bool fHelp)\n \n void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, Array& ret)\n {\n-    int64 nGenerated, nSent, nFee;\n+    int64 nGenerated, nFee;\n     string strSentAccount;\n     list<pair<string, int64> > listReceived;\n-    wtx.GetAmounts(nGenerated, listReceived, nSent, nFee, strSentAccount);\n+    list<pair<string, int64> > listSent;\n+    wtx.GetAmounts(nGenerated, listReceived, listSent, nFee, strSentAccount);\n \n     bool fAllAccounts = (strAccount == string(\"*\"));\n \n@@ -878,31 +879,41 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     }\n \n     // Sent\n-    if ((nSent != 0 || nFee != 0) && (fAllAccounts || strAccount == strSentAccount))\n+    if ((!listSent.empty() || nFee != 0) && (fAllAccounts || strAccount == strSentAccount))\n     {\n-        Object entry;\n-        entry.push_back(Pair(\"account\", strSentAccount));\n-        entry.push_back(Pair(\"category\", \"send\"));\n-        entry.push_back(Pair(\"amount\", ValueFromAmount(-nSent)));\n-        entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee)));\n-        WalletTxToJSON(wtx, entry);\n-        ret.push_back(entry);\n+        foreach(const PAIRTYPE(string, int64)& s, listSent)\n+        {\n+            Object entry;\n+            entry.push_back(Pair(\"account\", strSentAccount));\n+            entry.push_back(Pair(\"address\", s.first));\n+            entry.push_back(Pair(\"category\", \"send\"));\n+            entry.push_back(Pair(\"amount\", ValueFromAmount(-s.second)));\n+            entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee)));\n+            WalletTxToJSON(wtx, entry);\n+            ret.push_back(entry);\n+        }\n     }\n \n     // Received\n     if (listReceived.size() > 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n         CRITICAL_BLOCK(cs_mapAddressBook)\n         {\n             foreach(const PAIRTYPE(string, int64)& r, listReceived)\n-                if (mapAddressBook.count(r.first) && (fAllAccounts || mapAddressBook[r.first] == strAccount))\n+            {\n+                string account;\n+                if (mapAddressBook.count(r.first))\n+                    account = mapAddressBook[r.first];\n+                if (fAllAccounts || (account == strAccount))\n                 {\n                     Object entry;\n-                    entry.push_back(Pair(\"account\", mapAddressBook[r.first]));\n+                    entry.push_back(Pair(\"account\", account));\n+                    entry.push_back(Pair(\"address\", r.first));\n                     entry.push_back(Pair(\"category\", \"receive\"));\n                     entry.push_back(Pair(\"amount\", ValueFromAmount(r.second)));\n                     WalletTxToJSON(wtx, entry);\n                     ret.push_back(entry);\n                 }\n+            }\n         }\n \n }\n@@ -1007,11 +1018,14 @@ Value listaccounts(const Array& params, bool fHelp)\n         for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx& wtx = (*it).second;\n-            int64 nGenerated, nSent, nFee;\n+            int64 nGenerated, nFee;\n             string strSentAccount;\n             list<pair<string, int64> > listReceived;\n-            wtx.GetAmounts(nGenerated, listReceived, nSent, nFee, strSentAccount);\n-            mapAccountBalances[strSentAccount] -= nSent+nFee;\n+            list<pair<string, int64> > listSent;\n+            wtx.GetAmounts(nGenerated, listReceived, listSent, nFee, strSentAccount);\n+            mapAccountBalances[strSentAccount] -= nFee;\n+            foreach(const PAIRTYPE(string, int64)& s, listSent)\n+                mapAccountBalances[strSentAccount] -= s.second;\n             if (wtx.GetDepthInMainChain() >= nMinDepth)\n             {\n                 mapAccountBalances[\"\"] += nGenerated;"
      }
    ]
  }
]