[
  {
    "sha": "c4588bcb658807db060cf0f62233ed927ee2c7e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDU4OGJjYjY1ODgwN2RiMDYwY2YwZjYyMjMzZWQ5MjdlZTJjN2U0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-12T13:11:57Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-12T16:02:26Z"
      },
      "message": "leveldb: Add ARMv8 CRC32C support\n\nUse the optional CRC32 instructions to accelerate leveldb's\nCRC32C computation on ARMv8.",
      "tree": {
        "sha": "be49754a8e4c830bc78a580a7b7a2d6e58ea0303",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be49754a8e4c830bc78a580a7b7a2d6e58ea0303"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4588bcb658807db060cf0f62233ed927ee2c7e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4588bcb658807db060cf0f62233ed927ee2c7e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4588bcb658807db060cf0f62233ed927ee2c7e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4588bcb658807db060cf0f62233ed927ee2c7e4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "39439e5ab4195bb1abebd2c8b1ac702bc33c2e60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39439e5ab4195bb1abebd2c8b1ac702bc33c2e60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39439e5ab4195bb1abebd2c8b1ac702bc33c2e60"
      }
    ],
    "stats": {
      "total": 189,
      "additions": 169,
      "deletions": 20
    },
    "files": [
      {
        "sha": "2c67bae2d734778529642aab6956e9c6f7304f45",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 36,
        "deletions": 5,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -303,11 +303,16 @@ fi\n # Check for optional instruction set support. Enabling these does _not_ imply that all code will\n # be compiled with them, rather that specific objects/libs may use them after checking for runtime\n # compatibility.\n-AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4.2],[[CRCACCEL_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n \n+# -fpermissive is a workaround for gcc 7.2.0 and 7.3.0, which have an issue in\n+# arm_acle.h __arm_stc2* causing incompatibility with C++\n+AX_CHECK_COMPILE_FLAG([-march=armv8-a+crc],[[CRCACCEL_CXXFLAGS=\"-march=armv8-a+crc -fpermissive\"]],,[[$CXXFLAG_WERROR]])\n+\n+# Check whether x86(_64) SSE4.2 crc32c instructions can be used\n TEMP_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n-AC_MSG_CHECKING(for assembler crc32 support)\n+AC_MSG_CHECKING(for SSE4.2 assembler crc32 support)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n     #include <stdint.h>\n     #if defined(_MSC_VER)\n@@ -322,7 +327,32 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n     l = _mm_crc32_u64(l, 0);\n     return l;\n   ]])],\n- [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n+ [ AC_MSG_RESULT(yes); enable_hwcrc32_sse42=yes],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+# Check whether ARMv8 crc32c instructions can be used, and that (Linux specific) HWCAPx_CRC32 exists to detect it\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $CRCACCEL_CXXFLAGS\"\n+AC_MSG_CHECKING(for ARMv8 assembler crc32 support)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <arm_acle.h>\n+    #include <sys/auxv.h>\n+    #include <asm/hwcap.h>\n+  ]],[[\n+    uint32_t l = 0;\n+    l = __crc32cb(l, 0);\n+    l = __crc32cw(l, 0);\n+    l = __crc32cd(l, 0);\n+#if defined(__aarch64__) && defined(__GNUC__)\n+    l += (getauxval(AT_HWCAP) & HWCAP_CRC32) != 0;\n+#elif defined(__arm__) && defined(__GNUC__)\n+    l += (getauxval(AT_HWCAP2) & HWCAP2_CRC32) != 0;\n+#endif\n+    return l;\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_hwcrc32_armv8=yes],\n  [ AC_MSG_RESULT(no)]\n )\n CXXFLAGS=\"$TEMP_CXXFLAGS\"\n@@ -1248,7 +1278,8 @@ AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n-AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n+AM_CONDITIONAL([ENABLE_HWCRC32_SSE42],[test x$enable_hwcrc32_sse42 = xyes])\n+AM_CONDITIONAL([ENABLE_HWCRC32_ARMV8],[test x$enable_hwcrc32_armv8 = xyes])\n AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n@@ -1286,7 +1317,7 @@ AC_SUBST(PIC_FLAGS)\n AC_SUBST(PIE_FLAGS)\n AC_SUBST(SANITIZER_CXXFLAGS)\n AC_SUBST(SANITIZER_LDFLAGS)\n-AC_SUBST(SSE42_CXXFLAGS)\n+AC_SUBST(CRCACCEL_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)"
      },
      {
        "sha": "625d291e47a82ba54e61c9310f74470de9d9b1ab",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -410,7 +410,7 @@ bitcoind_LDADD = \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n-  $(LIBLEVELDB_SSE42) \\\n+  $(LIBLEVELDB_CRCACCEL) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n "
      },
      {
        "sha": "47aad3956a08be5432d21c284de3c2aefa986147",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -41,7 +41,7 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n-  $(LIBLEVELDB_SSE42) \\\n+  $(LIBLEVELDB_CRCACCEL) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1) \\\n   $(LIBUNIVALUE)"
      },
      {
        "sha": "464414ea421f3b5c436fb94652e31147e0f3cd50",
        "filename": "src/Makefile.leveldb.include",
        "status": "modified",
        "additions": 17,
        "deletions": 10,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -4,15 +4,15 @@\n \n LIBLEVELDB_INT = leveldb/libleveldb.a\n LIBMEMENV_INT  = leveldb/libmemenv.a\n-LIBLEVELDB_SSE42_INT  = leveldb/libleveldb_sse42.a\n+LIBLEVELDB_CRCACCEL_INT  = leveldb/libleveldb_crcaccel.a\n \n EXTRA_LIBRARIES += $(LIBLEVELDB_INT)\n EXTRA_LIBRARIES += $(LIBMEMENV_INT)\n-EXTRA_LIBRARIES += $(LIBLEVELDB_SSE42_INT)\n+EXTRA_LIBRARIES += $(LIBLEVELDB_CRCACCEL_INT)\n \n LIBLEVELDB += $(LIBLEVELDB_INT)\n LIBMEMENV += $(LIBMEMENV_INT)\n-LIBLEVELDB_SSE42 = $(LIBLEVELDB_SSE42_INT)\n+LIBLEVELDB_CRCACCEL = $(LIBLEVELDB_CRCACCEL_INT)\n \n LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/include\n LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/helpers/memenv\n@@ -140,10 +140,17 @@ leveldb_libmemenv_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)\n leveldb_libmemenv_a_SOURCES =  leveldb/helpers/memenv/memenv.cc\n leveldb_libmemenv_a_SOURCES += leveldb/helpers/memenv/memenv.h\n \n-leveldb_libleveldb_sse42_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)\n-leveldb_libleveldb_sse42_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)\n-if ENABLE_HWCRC32\n-leveldb_libleveldb_sse42_a_CPPFLAGS += -DLEVELDB_PLATFORM_POSIX_SSE\n-leveldb_libleveldb_sse42_a_CXXFLAGS += $(SSE42_CXXFLAGS)\n-endif\n-leveldb_libleveldb_sse42_a_SOURCES =  leveldb/port/port_posix_sse.cc\n+leveldb_libleveldb_crcaccel_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)\n+leveldb_libleveldb_crcaccel_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)\n+leveldb_libleveldb_crcaccel_a_CXXFLAGS += $(CRCACCEL_CXXFLAGS)\n+if ENABLE_HWCRC32_ARMV8\n+leveldb_libleveldb_crcaccel_a_CPPFLAGS += -DLEVELDB_PLATFORM_POSIX_ARMV8\n+leveldb_libleveldb_crcaccel_a_SOURCES =  leveldb/port/port_posix_armv8.cc\n+else\n+if ENABLE_HWCRC32_SSE42\n+leveldb_libleveldb_crcaccel_a_CPPFLAGS += -DLEVELDB_PLATFORM_POSIX_SSE\n+leveldb_libleveldb_crcaccel_a_SOURCES =  leveldb/port/port_posix_sse.cc\n+else\n+leveldb_libleveldb_crcaccel_a_SOURCES =  leveldb/port/port_posix_dummy.cc\n+endif # ENABLE_HWCRC32_SSE42\n+endif # ENABLE_HWCRC32_ARMV8"
      },
      {
        "sha": "f37254fbf34d481f999024fad4111c5acbb06e56",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -407,7 +407,7 @@ endif\n if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_CRCACCEL) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)"
      },
      {
        "sha": "7c104015ea614c3aea33b4c662333934a7d31989",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -58,7 +58,7 @@ if ENABLE_ZMQ\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n-  $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n+  $(LIBLEVELDB_CRCACCEL) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)"
      },
      {
        "sha": "5857d1f2f7a10b8ca9d897ceab91dc8ff8c588e1",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -108,7 +108,7 @@ if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif\n test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \\\n-  $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n+  $(LIBLEVELDB) $(LIBLEVELDB_CRCACCEL) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)"
      },
      {
        "sha": "958915f4617533fd3d812120651c691bba1b85de",
        "filename": "src/leveldb/port/port_posix.cc",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/leveldb/port/port_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/leveldb/port/port_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix.cc?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -11,6 +11,10 @@\n #if (defined(__x86_64__) || defined(__i386__)) && defined(__GNUC__)\n #include <cpuid.h>\n #endif\n+#if (defined(__aarch64__) || defined(__arm__)) && defined(__GNUC__)\n+#include <sys/auxv.h>\n+#include <asm/hwcap.h>\n+#endif\n \n namespace leveldb {\n namespace port {\n@@ -58,6 +62,10 @@ bool HasAcceleratedCRC32C() {\n   unsigned int eax, ebx, ecx, edx;\n   __get_cpuid(1, &eax, &ebx, &ecx, &edx);\n   return (ecx & (1 << 20)) != 0;\n+#elif defined(__aarch64__) && defined(__GNUC__)\n+  return (getauxval(AT_HWCAP) & HWCAP_CRC32) != 0;\n+#elif defined(__arm__) && defined(__GNUC__)\n+  return (getauxval(AT_HWCAP2) & HWCAP2_CRC32) != 0;\n #else\n   return false;\n #endif"
      },
      {
        "sha": "e22754ed308716401e74921532b595435e8601ff",
        "filename": "src/leveldb/port/port_posix_armv8.cc",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/leveldb/port/port_posix_armv8.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/leveldb/port/port_posix_armv8.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix_armv8.cc?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -0,0 +1,87 @@\n+// Copyright 2018 The LevelDB Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style license that can be\n+// found in the LICENSE file. See the AUTHORS file for names of contributors.\n+//\n+// A portable implementation of crc32c, optimized to handle\n+// four bytes at a time.\n+//\n+// In a separate source file to allow this accelerated CRC32C function to be\n+// compiled with the appropriate compiler flags to enable ARMV8 CRC32C\n+// instructions.\n+\n+#include <stdint.h>\n+#include <string.h>\n+#include \"port/port.h\"\n+\n+#if defined(LEVELDB_PLATFORM_POSIX_ARMV8)\n+#include <arm_acle.h>\n+#endif  // defined(LEVELDB_PLATFORM_POSIX_ARMV8)\n+\n+namespace leveldb {\n+namespace port {\n+\n+#if defined(LEVELDB_PLATFORM_POSIX_ARMV8)\n+// Used to fetch a naturally-aligned 32-bit word in little endian byte-order\n+static inline uint32_t LE_LOAD32(const uint8_t *p) {\n+  // ARMv8 only, so ensured that |p| is always little-endian.\n+  uint32_t word;\n+  memcpy(&word, p, sizeof(word));\n+  return word;\n+}\n+\n+// Used to fetch a naturally-aligned 64-bit word in little endian byte-order\n+static inline uint64_t LE_LOAD64(const uint8_t *p) {\n+  uint64_t dword;\n+  memcpy(&dword, p, sizeof(dword));\n+  return dword;\n+}\n+#endif\n+\n+uint32_t AcceleratedCRC32C(uint32_t crc, const char* buf, size_t size) {\n+#if !defined(LEVELDB_PLATFORM_POSIX_ARMV8)\n+  return 0;\n+#else\n+\n+  const uint8_t *p = reinterpret_cast<const uint8_t *>(buf);\n+  const uint8_t *e = p + size;\n+  uint32_t l = crc ^ 0xffffffffu;\n+\n+#define STEP1 do {                              \\\n+    l = __crc32cb(l, *p++);                  \\\n+} while (0)\n+#define STEP4 do {                              \\\n+    l = __crc32cw(l, LE_LOAD32(p));         \\\n+    p += 4;                                     \\\n+} while (0)\n+#define STEP8 do {                              \\\n+    l = __crc32cd(l, LE_LOAD64(p));         \\\n+    p += 8;                                     \\\n+} while (0)\n+\n+  if (size > 16) {\n+    // Process unaligned bytes\n+    for (unsigned int i = reinterpret_cast<uintptr_t>(p) % 8; i; --i) {\n+      STEP1;\n+    }\n+    // Process 8 bytes at a time\n+    while ((e-p) >= 8) {\n+      STEP8;\n+    }\n+    // Process 4 bytes at a time\n+    if ((e-p) >= 4) {\n+      STEP4;\n+    }\n+  }\n+  // Process the last few bytes\n+  while (p != e) {\n+    STEP1;\n+  }\n+#undef STEP8\n+#undef STEP4\n+#undef STEP1\n+  return l ^ 0xffffffffu;\n+#endif  // defined(LEVELDB_PLATFORM_POSIX_ARMV8)\n+}\n+\n+}  // namespace port\n+}  // namespace leveldb"
      },
      {
        "sha": "00ccffd55066891eac39e3fccb672983a1d80b26",
        "filename": "src/leveldb/port/port_posix_dummy.cc",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/leveldb/port/port_posix_dummy.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4588bcb658807db060cf0f62233ed927ee2c7e4/src/leveldb/port/port_posix_dummy.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix_dummy.cc?ref=c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The LevelDB Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style license that can be\n+// found in the LICENSE file. See the AUTHORS file for names of contributors.\n+//\n+// Dummy file for when no accelerated CRC32C is available on the platform.\n+\n+#include <stdint.h>\n+#include <string.h>\n+#include \"port/port.h\"\n+\n+uint32_t AcceleratedCRC32C(uint32_t crc, const char* buf, size_t size) {\n+  return 0;\n+}\n+\n+}  // namespace port\n+}  // namespace leveldb"
      }
    ]
  },
  {
    "sha": "a46249ce144d68d99ab4fe4c096085bbf8d009bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDYyNDljZTE0NGQ2OGQ5OWFiNGZlNGMwOTYwODViYmY4ZDAwOWJm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-12T17:55:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-04-12T17:55:15Z"
      },
      "message": "squashme: namespacery",
      "tree": {
        "sha": "e6bccca5d863fc07cba5ae61a5ef9484757ec5de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6bccca5d863fc07cba5ae61a5ef9484757ec5de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a46249ce144d68d99ab4fe4c096085bbf8d009bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a46249ce144d68d99ab4fe4c096085bbf8d009bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a46249ce144d68d99ab4fe4c096085bbf8d009bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a46249ce144d68d99ab4fe4c096085bbf8d009bf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4588bcb658807db060cf0f62233ed927ee2c7e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4588bcb658807db060cf0f62233ed927ee2c7e4"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c07b839d031e517ef9a5aa304cc6f1cc2b8d3a62",
        "filename": "src/leveldb/port/port_posix_dummy.cc",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a46249ce144d68d99ab4fe4c096085bbf8d009bf/src/leveldb/port/port_posix_dummy.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a46249ce144d68d99ab4fe4c096085bbf8d009bf/src/leveldb/port/port_posix_dummy.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix_dummy.cc?ref=a46249ce144d68d99ab4fe4c096085bbf8d009bf",
        "patch": "@@ -8,6 +8,9 @@\n #include <string.h>\n #include \"port/port.h\"\n \n+namespace leveldb {\n+namespace port {\n+\n uint32_t AcceleratedCRC32C(uint32_t crc, const char* buf, size_t size) {\n   return 0;\n }"
      }
    ]
  }
]