ken2812221,2018-10-07T17:04:47Z,"For reference, the boost implementation is in https://github.com/boostorg/interprocess/blob/8b3621353017aa527a22124655c9458d0b64b358/include/boost/interprocess/detail/os_file_functions.hpp#L230-L243",https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-427669184,427669184,
ch4ot1c,2018-10-07T20:23:40Z,"Lgtm, nice test",https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-427684024,427684024,
donaloconnor,2018-10-08T17:06:06Z,utACK https://github.com/bitcoin/bitcoin/pull/14426/commits/6d336e39dffb4951f09beedc478ba425c38c60b2,https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-427909683,427909683,
DrahtBot,2018-10-09T08:16:55Z,"<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #14320 ([bugfix] wallet: Fix duplicate fileid detection by ken2812221)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-428102594,428102594,
donaloconnor,2018-10-09T19:40:03Z,utACK https://github.com/bitcoin/bitcoin/pull/14426/commits/474d022036ca2114750fc650f6712a99eda1bad4,https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-428323766,428323766,
jnewbery,2018-10-18T15:19:04Z,"This seems like a reasonable change (although I know nothing about the windows API). `LockFileEx` documentation is here: https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-lockfileex.\n\nThe test case is good, but it has the wrong file permissions and replicates functionality that is already available in the test framework. I've reimplemented it here: https://github.com/jnew",https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-431050370,431050370,
ken2812221,2018-10-18T16:20:53Z,"Thanks, I didn't know test framework that much, just trying to do what I want. Your commit looks good to me, I'll take it. The only thing I change is to skip wallet test if it's not compiled.",https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-431072814,431072814,
jnewbery,2018-10-18T16:30:13Z,"utACK c7296a98e56a3a38730575c7aa7f524f10e2a0a9.\n\nI think the `feature_notifications.py` failure in appveyer is unrelated. The `feature_filelock.py` failure is due to a path slash mismatch: `C:/Users\appveyor` instead of `C:\Users\appveyor`.",https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-431075921,431075921,
donaloconnor,2018-10-18T16:40:43Z,@ken2812221 should we explicitly call UnlockFile before closing the handle. The OS does unlock it but it's not instant potentially. Maybe safer to unlock before closing,https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-431079402,431079402,
ken2812221,2018-10-18T17:12:04Z,"@donaloconnor I am not sure what condition would be unsafe if we don't unlock the file. Also, the [boost implementation](https://github.com/boostorg/interprocess/blob/b962143350e9af0ec64098911744bd1fff65f31d/include/boost/interprocess/sync/file_lock.hpp#L169) here only close file in deconstructor.",https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-431089567,431089567,
donaloconnor,2018-10-18T21:51:08Z,"@ken2812221 I did a test there across 2 processes to see if there's any weird race conditions with not unlocking before  close and there's not. I thought being explicit might be better. Anyway no big deal.\n\ntested ACK.",https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-431176306,431176306,
jnewbery,2018-10-19T13:29:29Z,utACK 369244f654c9e36b803e841eb30fd0aa2960087a,https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-431363372,431363372,
sipa,2018-10-20T01:59:22Z,utACK 369244f654c9e36b803e841eb30fd0aa2960087a,https://github.com/bitcoin/bitcoin/pull/14426#issuecomment-431539796,431539796,
Empact,2018-10-09T01:30:07Z,nit: `std::numeric_limits<DWORD>::max()` or explicitly casting to unsigned might be more clear.,https://github.com/bitcoin/bitcoin/pull/14426#discussion_r223539001,223539001,src/fs.cpp
promag,2018-10-10T01:00:02Z,"Move to node class as `get_output`? If that's controversial then extract to a module function for now? Then below:\n\n```py\n_, output = get_node_output(node=self.nodes[1], ret_code_expected=1)\n```",https://github.com/bitcoin/bitcoin/pull/14426#discussion_r223909417,223909417,test/functional/feature_filelock.py
ken2812221,2018-10-11T15:22:06Z,Done,https://github.com/bitcoin/bitcoin/pull/14426#discussion_r224492412,224492412,test/functional/feature_filelock.py
practicalswift,2018-10-14T21:25:24Z,Specify string format arguments as logging function parameters to allow for lazy evaluation.,https://github.com/bitcoin/bitcoin/pull/14426#discussion_r225009649,225009649,test/functional/feature_filelock.py
ken2812221,2018-10-14T21:56:59Z,Done,https://github.com/bitcoin/bitcoin/pull/14426#discussion_r225010682,225010682,test/functional/feature_filelock.py
