jnewbery,2021-03-10 23:44:15,Concept ACK. This will probably be useful for people developing lightning and other offchain contracts that use timelocks/relative timelocks.,https://github.com/bitcoin/bitcoin/pull/21413#issuecomment-796294039,796294039,
DrahtBot,2021-03-11 04:17:30,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21415 (refactor: remove Optional & nullopt by fanquake)\n* #21391 ([Bundle 5/n] Prune g_chainman usage in RPC modules by ",https://github.com/bitcoin/bitcoin/pull/21413#issuecomment-796435642,796435642,
harding,2021-04-27 00:40:09,"Concept ACK.  I hate to suggest significant scope creep, but I wonder if it might be more useful to:\n\n1. Allow passing in MTP and height parameters, which will be used to evaluate all absolute timelocks and heightlocks, plus any relative time/heightlocks for confirmed UTXOs,\n2. Separately, allow overriding relative timelocks between unconfirmed transactions in the package.\n\nFor contract ",https://github.com/bitcoin/bitcoin/pull/21413#issuecomment-827228002,827228002,
glozow,2021-04-28 19:56:23,"@harding ah, that is super helpful! Thanks!\n\nFor overriding relative timelocks between unconfirmed transactions in a package, approach-wise, I think we could just add a special `PACKAGE_HEIGHT` value for coins added by package transactions (similar to the `MEMPOOL_HEIGHT` value).",https://github.com/bitcoin/bitcoin/pull/21413#issuecomment-828736608,828736608,
ariard,2021-03-15 17:23:07,"I think I would get even further and have `m_bypass_absolute_timelocks`/`m_bypass_relative_timelocks`. \n\nYou might be willingly to shrug about the relative timelocks encumbering the nSequence of a transaction while being sure the nLocktime make sense (e.g spotting bug in your anti-fee snipping logic).",https://github.com/bitcoin/bitcoin/pull/21413#discussion_r594535695,594535695,src/validation.cpp
ariard,2021-03-15 17:24:05,I'll write a doc/release note for this :),https://github.com/bitcoin/bitcoin/pull/21413#discussion_r594536419,594536419,src/rpc/rawtransaction.cpp
glozow,2021-03-23 14:13:52,"How common is it to have both in a transaction? ðŸ˜®\nIf it's very common then sure. But also for this particular case, checking absolute but not relative, calling another `testmempoolaccept` without `bypass_timelocks` and checking that it fails on `non-BIP68-final` would do the trick, since nLockTime is checked before the nSequences.",https://github.com/bitcoin/bitcoin/pull/21413#discussion_r599606369,599606369,src/validation.cpp
luke-jr,2021-06-24 15:25:28,Prefer turning maxfeerate into an options Object,https://github.com/bitcoin/bitcoin/pull/21413#discussion_r658051322,658051322,src/rpc/rawtransaction.cpp
