[
  {
    "sha": "7356ed39abb2d9c64ff480144cd9c754b737d944",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzU2ZWQzOWFiYjJkOWM2NGZmNDgwMTQ0Y2Q5Yzc1NGI3MzdkOTQ0",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-03-02T06:09:02Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-03-08T16:05:40Z"
      },
      "message": "Add net2 debug option",
      "tree": {
        "sha": "2c1b027ed925aa8ff9e9c23222902b99ba66b231",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c1b027ed925aa8ff9e9c23222902b99ba66b231"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7356ed39abb2d9c64ff480144cd9c754b737d944",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7356ed39abb2d9c64ff480144cd9c754b737d944",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7356ed39abb2d9c64ff480144cd9c754b737d944",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7356ed39abb2d9c64ff480144cd9c754b737d944/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87d65622996d6b6539dba973a4427e542cc291c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87d65622996d6b6539dba973a4427e542cc291c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87d65622996d6b6539dba973a4427e542cc291c7"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "cbe102a4a6011d0f8d33346951f43191ea049834",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7356ed39abb2d9c64ff480144cd9c754b737d944/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7356ed39abb2d9c64ff480144cd9c754b737d944/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7356ed39abb2d9c64ff480144cd9c754b737d944",
        "patch": "@@ -448,7 +448,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http, libevent, tor, zmq\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, net2, proxy, prune, http, libevent, tor, zmq\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +"
      },
      {
        "sha": "07df0efa55334f268f20b7018feb1cba110039cd",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7356ed39abb2d9c64ff480144cd9c754b737d944/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7356ed39abb2d9c64ff480144cd9c754b737d944/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7356ed39abb2d9c64ff480144cd9c754b737d944",
        "patch": "@@ -4358,7 +4358,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n {\n     const CChainParams& chainparams = Params();\n     RandAddSeedPerfmon();\n-    LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->id);\n+    LogPrint(\"net2\", \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->id);\n     if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n     {\n         LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n@@ -4633,7 +4633,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             pfrom->AddInventoryKnown(inv);\n \n             bool fAlreadyHave = AlreadyHave(inv);\n-            LogPrint(\"net\", \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom->id);\n+            LogPrint(\"net2\", \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom->id);\n \n             if (inv.type == MSG_BLOCK) {\n                 UpdateBlockAvailability(pfrom->GetId(), inv.hash);"
      },
      {
        "sha": "ed44a137bf130b35d15516a32a60b9b5a4b1e2b6",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7356ed39abb2d9c64ff480144cd9c754b737d944/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7356ed39abb2d9c64ff480144cd9c754b737d944/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=7356ed39abb2d9c64ff480144cd9c754b737d944",
        "patch": "@@ -2470,7 +2470,7 @@ void CNode::BeginMessage(const char* pszCommand) EXCLUSIVE_LOCK_FUNCTION(cs_vSen\n     ENTER_CRITICAL_SECTION(cs_vSend);\n     assert(ssSend.size() == 0);\n     ssSend << CMessageHeader(Params().MessageStart(), pszCommand, 0);\n-    LogPrint(\"net\", \"sending: %s \", SanitizeString(pszCommand));\n+    LogPrint(\"net2\", \"sending: %s \", SanitizeString(pszCommand));\n }\n \n void CNode::AbortMessage() UNLOCK_FUNCTION(cs_vSend)\n@@ -2479,7 +2479,7 @@ void CNode::AbortMessage() UNLOCK_FUNCTION(cs_vSend)\n \n     LEAVE_CRITICAL_SECTION(cs_vSend);\n \n-    LogPrint(\"net\", \"(aborted)\\n\");\n+    LogPrint(\"net2\", \"(aborted)\\n\");\n }\n \n void CNode::EndMessage(const char* pszCommand) UNLOCK_FUNCTION(cs_vSend)\n@@ -2515,7 +2515,7 @@ void CNode::EndMessage(const char* pszCommand) UNLOCK_FUNCTION(cs_vSend)\n     assert(ssSend.size () >= CMessageHeader::CHECKSUM_OFFSET + sizeof(nChecksum));\n     memcpy((char*)&ssSend[CMessageHeader::CHECKSUM_OFFSET], &nChecksum, sizeof(nChecksum));\n \n-    LogPrint(\"net\", \"(%d bytes) peer=%d\\n\", nSize, id);\n+    LogPrint(\"net2\", \"(%d bytes) peer=%d\\n\", nSize, id);\n \n     std::deque<CSerializeData>::iterator it = vSendMsg.insert(vSendMsg.end(), CSerializeData());\n     ssSend.GetAndClear(*it);"
      }
    ]
  }
]