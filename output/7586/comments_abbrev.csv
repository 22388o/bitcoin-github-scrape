jonasschnelli,2016-02-24T09:48:22Z,Added a commit that fixes a logical text-issue when compiling with LibreSSL.\nCurrent masters shows: `Using OpenSSL Version:    OpenSSL 1.0.2d 9 Jul 2015` (or similar).\nAfter this PR: `Using SSL Version:    OpenSSL 1.0.2d 9 Jul 2015` (or similar).\n,https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188168222,188168222,
laanwj,2016-02-24T10:08:19Z,"In main.cpp we explicitly cede for LibreSSL, do we want a similar construction here? (or even: factor it out somehow so it exists only in one place, so that we don't have this inconsistency next time)\n\n```\n#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n    LogPrintf(""Using OpenSSL version %s\n"", SSLeay_version(SSLEAY_VERSION));\n#elif defined OPENSSL_VERSION\n    LogPrintf(""Using OpenSSL version %",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188174042,188174042,
jonasschnelli,2016-02-24T10:12:51Z,"Yes. Let me factor it out.\n\nBut not sure about extra treating LibreSSL, IMO we should just use `SSLeay_version()` (which will result in returning `LIBRESSL_VERSION_TEXT` in the background when compiling against LibreSSL). Any OpenSSL compatible layer should probably implement `SSLeay_version()`.\n\nI could imaging allow compiling against different OpenSSL alternatives (Apple also has it's own II",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188176385,188176385,
laanwj,2016-02-24T10:18:08Z,"IIRC support for `SSLeay_version()` was dropped in recent OpenSSL, that's why the version check was added. But apparently LibreSSL didn't follow that convention, even though they report as an OpenSSL version that would no longer have `SSLeay_version()`. So it is, sort of, their mistake, as they aren't a perfect drop-in replacement for OpenSSL anymore.\n\n(or we have the `OpenSSL_version` versus `S",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188178245,188178245,
AliceWonderMiscreations,2016-02-24T10:21:49Z,It's not LibreSSL's mistake. They forked at a specific version of OpenSSL that they guarantee API compatibility with. That version uses SSLEAY_VERSION. So LibreSSL has to keep that in order to keep the API compatibility promise.\n\nThe change in OpenSSL is after the fork.\n,https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188179151,188179151,
jonasschnelli,2016-02-24T10:29:51Z,Added a commit that refactors the SSL detection.\nNeeds testing on CentOS (or other LibreSSL distribution)\n,https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188182779,188182779,
laanwj,2016-02-24T10:30:39Z,"> It's not LibreSSL's mistake. They forked at a specific version of OpenSSL that they guarantee API compatibility with. That version uses SSLEAY_VERSION. So LibreSSL has to keep that in order to keep the API compatibility promise.\n\nThat's true but they do report a newer OpenSSL version in  the `OPENSSL_VERSION_NUMBER` macro, which, in case of OpenSSL means that there is no longer a `SSLeay_versi",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188183275,188183275,
AliceWonderMiscreations,2016-02-24T10:34:20Z,"@jonasschnelli just a note, CentOS is not a LibreSSL distribution. I built and run LibreSSL on it, as the OpenSSL it has is old and has poor ECC support.\n",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188185283,188185283,
laanwj,2016-02-24T11:25:46Z,"> as the OpenSSL it has is old and has poor ECC support.\n\nAside, as it is no reason to have worse support for LibreSSL, but as of 0.12, ECC support in OpenSSL is no longer a requirement for Bitcoin Core.\n",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188205932,188205932,
AliceWonderMiscreations,2016-02-24T12:50:13Z,"@laanwj yeah, but while I can have both openssl and libressl installed at the same time I can't have the header files to both installed at the same time, at least not with both installed in /usr/include\n",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188241651,188241651,
MarcoFalke,2016-02-24T13:41:49Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188259036,188259036,
paveljanik,2016-02-24T16:50:18Z,"Debug log:\n\nbefore:\n\n```\n2016-02-24 16:42:18 Using OpenSSL version OpenSSL 1.0.x 9 Apr 20xx\n```\n\nafter:\n\n```\n2016-02-24 16:44:02 Using SSL version: OpenSSL 1.0.x 9 Apr 20xx\n```\n\nI propose to change the text to ""Using SSL library""\n",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188349479,188349479,
gmaxwell,2016-02-24T18:54:58Z,Since its no longer part of consensus does it make sense to log it?  Bitcoind doesn't log the boost version or the QT version.\n,https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188404467,188404467,
MarcoFalke,2016-02-25T14:22:18Z,"Agree with @gmaxwell. This way we could get rid of the hacky logic and also tidy up the GUI a bit, keeping in mind there are other ways to detect the library version, if this is ever desired.\n",https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188804941,188804941,
paveljanik,2016-02-25T14:35:54Z,I think it could be useful in the debug log. But I agree it can be removed in the UI.\n,https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-188812561,188812561,
laanwj,2016-03-03T12:56:16Z,Closing (#7605 merged)\n,https://github.com/bitcoin/bitcoin/pull/7586#issuecomment-191751235,191751235,
MarcoFalke,2016-02-24T13:41:29Z,Maybe add _library_ to make clear it's not the protocol? \n,https://github.com/bitcoin/bitcoin/pull/7586#discussion_r53938922,53938922,src/qt/forms/debugwindow.ui
paveljanik,2016-02-24T16:35:09Z,"what about returning _(""unknown"") and further simplify the code?\n",https://github.com/bitcoin/bitcoin/pull/7586#discussion_r53965797,53965797,src/util.cpp
paveljanik,2016-02-24T16:38:21Z,RET please\n,https://github.com/bitcoin/bitcoin/pull/7586#discussion_r53966337,53966337,src/util.cpp
paveljanik,2016-02-24T18:28:52Z,"Looks like this file is completely documented, can you please extend the comments? E.g. like this:\n\n``` c++\n/**\n  * Return the product name with the version number of the SSL library being used.\n  * @note Bitcoin Core supports OpenSSL and LibreSSL.\n  */\n```\n",https://github.com/bitcoin/bitcoin/pull/7586#discussion_r53983012,53983012,src/util.h
jonasschnelli,2016-02-24T18:53:01Z,"Soon, there could be an option to run without SSL (after rand and aes implementation).\nThen we might want to skip/hide the SSL log info?\n",https://github.com/bitcoin/bitcoin/pull/7586#discussion_r53986812,53986812,src/util.cpp
jonasschnelli,2016-02-24T18:53:37Z,Thanks. Will use you comment.\n,https://github.com/bitcoin/bitcoin/pull/7586#discussion_r53986906,53986906,src/util.h
