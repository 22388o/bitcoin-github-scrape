TheBlueMatt,2017-06-28T22:11:34Z,"We do not have a framework for backwards compatibility aliases (but if you want to add one, feel free, dont think its worth doing for Knots, but we may need it at some point).\n\nIt is important to be consistent, and we use replaceable elsewhere in 0.14, so we should stick with that IMO, if folks want to paint the shed ""opt_into_rbf"", I'd be ok with that too.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311806967,311806967,
TheBlueMatt,2017-06-28T22:11:42Z,This should likely be tagged 0.15.,https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311806992,311806992,
luke-jr,2017-06-28T22:19:15Z,"Yes we do. See getblock's ""verbosity"" aka ""verbose"" param.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311808377,311808377,
TheBlueMatt,2017-06-28T22:22:01Z,"Ahh, didnt realize that, alright, well then its a super simple patch for Knots to carry to keep backwards compat with itself, no need to upstream it :).",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311808873,311808873,
gmaxwell,2017-06-28T22:36:06Z,"in terms of the ""other things arn't"" -- this is why the list transaction output calls it BIP125 replaceable.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311811452,311811452,
luke-jr,2017-06-28T22:41:13Z,@TheBlueMatt The default should be compatibility. There is no reason to be incompatible.,https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311812331,311812331,
TheBlueMatt,2017-06-28T22:45:16Z,"@gmaxwell Good point, updated the docs to point to BIP 125.\n\n@luke Indeed, compatibility is the default, but that does not override the legitimate reason that we should be *consistent* in our naming, and I'm really not at all convinced that compatibility with previous unreleased code is really much of a preference.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311813041,311813041,
luke-jr,2017-06-28T23:16:35Z,"@TheBlueMatt Yes, we should be consistent, but compatibility doesn't interfere in this at all. It's not unreleased code; it's been part of Knots for several releases now.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311818173,311818173,
jonasschnelli,2017-06-29T06:25:21Z,"I generally think this change makes sense... though I'm worried about the API break.\nUsers/apps calling RPC with the then invalid `optintorbf` will not even get a notice that this has been deprecated/nuked, leading to the fact, that this could harm businesses.\nSame could be true for the startup argument.\n\nThis is why I'm not sure if this is a ""hard"" improvement.\nIdeally, we deprecate the",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311874053,311874053,
jnewbery,2017-06-29T11:17:55Z,"ACK.\n\n> though I'm worried about the API break.\n\nThis isn't an API break. These arguments are not yet in a release. We should change them to be consistent *before* v0.15 is released.\n\n> If we go with this PR, then it would certainly require a release-notes part.\n\nYes - since these are new arguments.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311936902,311936902,
laanwj,2017-06-29T12:32:18Z,"Concept ACK (we've discussed this on IRC)\n\n> Note that none of these have been in a release, except ""replaceable"", which has been used in wallet tx descriptions in RPCs in 0.14.2, at least. Hence why I stuck with ""replaceable"" for all of them.\n\nThis means that we're in time to fix this. Breaking compatiblity is a non-issue for things that haven't been in a release. Everything in master sho",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311952498,311952498,
jonasschnelli,2017-06-29T12:50:47Z,"> This means that we're in time to fix this. Breaking compatiblity is a non-issue for things that haven't been in a release. Everything in master should be considered unstable from an API point of view.\n\nAh. Yes. I though we have released the RBF opt-in argument in `createrawtransaction` and `fundrawtransaction`.\nBut right, we haven't so there is no API break. Sorry for the noise.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-311956521,311956521,
luke-jr,2017-07-05T02:17:15Z,"> I'm sorry, but we really can't take into account the release schedule of derived projects. By taking on patches that aren't in a release yet, you risk later incompatibility.\n\nIf there was an argument for being incompatible, maybe, but when it is reasonable to be compatible, compatibility should be preferred. In this case, there is zero harm or overhead from being compatible, and `opt_into_rb",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-312980651,312980651,
jnewbery,2017-07-05T10:30:26Z,"> > We do not have a framework for backwards compatibility aliases\n\n> Yes we do. See getblock's ""verbosity"" aka ""verbose"" param.\n\nI wasn't aware of this, so I tried it out:\n\n```\n→ bitcoin-cli -named getblock blockhash=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206 verbose=true\nerror code: -1\nerror message:\nJSON value is not a boolean as expected\n\n→ bitcoin",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-313065517,313065517,
morcos,2017-07-05T15:24:36Z,"utACK\n",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-313136861,313136861,
TheBlueMatt,2017-07-05T22:11:56Z,"Changed ""Allowing""s to ""Allows"" as requested by @jnewbery.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-313241324,313241324,
laanwj,2017-07-06T18:38:57Z,"utACK 73c942e, this fixes one of the issues found by #10753.",https://github.com/bitcoin/bitcoin/pull/10698#issuecomment-313483062,313483062,
jnewbery,2017-06-29T11:14:59Z,I think `Allow` or `Allows` is better than `Allowing`.,https://github.com/bitcoin/bitcoin/pull/10698#discussion_r124772459,124772459,src/rpc/rawtransaction.cpp
jnewbery,2017-06-29T11:15:19Z,as above - prefer `Allow` over `Allowing`.,https://github.com/bitcoin/bitcoin/pull/10698#discussion_r124772536,124772536,src/wallet/rpcwallet.cpp
