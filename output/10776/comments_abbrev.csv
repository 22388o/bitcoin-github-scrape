promag,2017-07-08T23:04:02Z,PR title too long. Please keep it short and clear.,https://github.com/bitcoin/bitcoin/pull/10776#issuecomment-313886066,313886066,
sipa,2017-07-09T00:28:37Z,"@promag Generally, anything larger than 1 or 2 pointers is better passed by reference.",https://github.com/bitcoin/bitcoin/pull/10776#issuecomment-313889304,313889304,
practicalswift,2017-07-09T05:31:59Z,"@promag See @sipa:s answer for the common definition of (non-)cheaply-copied types.\n\nRegarding completeness: I only targeted `const` arguments.",https://github.com/bitcoin/bitcoin/pull/10776#issuecomment-313900078,313900078,
practicalswift,2017-07-10T05:18:34Z,@TheBlueMatt Good point! I missed the `std::move(â€¦)`. Closing this PR - I'll have to evaluate it deeper and contemplate if the performance reward is worth any potential risk. Thanks for reviewing!,https://github.com/bitcoin/bitcoin/pull/10776#issuecomment-314008164,314008164,
promag,2017-07-09T00:00:32Z,Why these changes?,https://github.com/bitcoin/bitcoin/pull/10776#discussion_r126292823,126292823,src/wallet/wallet.cpp
practicalswift,2017-07-09T05:24:54Z,To get signature consistency with `GetImmatureWatchOnlyCredit`. See the other changes made to the same file.,https://github.com/bitcoin/bitcoin/pull/10776#discussion_r126296217,126296217,src/wallet/wallet.cpp
TheBlueMatt,2017-07-09T23:29:23Z,This is broken - txidIn is std::move()d two lines down.,https://github.com/bitcoin/bitcoin/pull/10776#discussion_r126318388,126318388,src/wallet/feebumper.cpp
sipa,2017-07-10T08:13:21Z,"It certainly seems misplaced, but it's not actually wrong, as std::move in this case just casts to `const uint256&&`, which won't be moved from (also, uint256 doesn't have a move constructor that destroys the argument).",https://github.com/bitcoin/bitcoin/pull/10776#discussion_r126358134,126358134,src/wallet/feebumper.cpp
dcousens,2017-07-10T08:14:36Z,"`const uint256&` will not be moved,  `std::move` is simply a cast,  it will do nothing here.\nRef: https://stackoverflow.com/questions/28595117/why-can-we-use-stdmove-on-a-const-object",https://github.com/bitcoin/bitcoin/pull/10776#discussion_r126358329,126358329,src/wallet/feebumper.cpp
ArielLorenzo-Luaces,2017-07-10T13:36:23Z,"```txidIn``` should not be const nor pass-by-reference.\nIf ```CFeeBumper``` is going to cannibalize ```txidIn``` two lines down it should be copied in the case it was an lvalue. In the case that it was an rvalue, it will not be copied anyway.\n```const uint256&``` only causes inefficiencies (due to unnecessary copying) when the caller sends ```txidIn``` as an rvalue\n\nedit: My mistake, the i",https://github.com/bitcoin/bitcoin/pull/10776#discussion_r126422741,126422741,src/wallet/feebumper.cpp
TheBlueMatt,2017-07-10T13:48:41Z,"@sipa sorry, broken is a bad word there, I meant ""unsafe code"", ie we want to be careful of having code like that.",https://github.com/bitcoin/bitcoin/pull/10776#discussion_r126425841,126425841,src/wallet/feebumper.cpp
