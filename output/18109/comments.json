[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585177117",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18109#issuecomment-585177117",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18109",
    "id": 585177117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTE3NzExNw==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T12:12:43Z",
    "updated_at": "2020-02-12T12:13:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I usually avoid to do code-reviews before I can give at least \"Concept ACK\". In this case I unfortunately don't have enough clue about the details of fuzzing, but saw that the matching logic doesn't correspond to the desired effect in the PR description. Hope that's still okay and helpful.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585177117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585183783",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18109#issuecomment-585183783",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18109",
    "id": 585183783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTE4Mzc4Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T12:31:30Z",
    "updated_at": "2020-02-12T12:39:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@theStack Thanks for the review! I'll address the nit about `.find(char)`. The skipping logic is intentional - I wanted to keep it as simple as possible and the overshoot (that `c[\u2026]%` is matched in addition to `%[\u2026]c`) doesn't matter in practice. I'm happy to change that if proven wrong or if anyone cares strongly :)  Regardless I'll update the PR description to make the intention more clear. Again, thanks for reviewing!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585183783/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378209601",
    "pull_request_review_id": 357398705,
    "id": 378209601,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwOTYwMQ==",
    "diff_hunk": "@@ -115,28 +115,50 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         case 5:\n             (void)strprintf(format_string, fuzzed_data_provider.ConsumeBool());\n             break;\n-        case 6:\n+        }\n+    } catch (const tinyformat::format_error&) {\n+    }\n+\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"c\") != std::string::npos) {",
    "path": "src/test/fuzz/strprintf.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "470e2ac602ed2d6e62e5c80f27cd0a60c7cf6bce",
    "original_commit_id": "7f82eec0c55090eeace58cf3298e1185fd422b57",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This not just matches `%<some junk>c`, but also `c<some junk>%`, since both searches start from the begin of the format string. To correct that you'd need to save the found position of the `%` (=return value of the first `.find()`) and pass it to the search for the `c` (=second parameter of the second `.find()`). Given that if I understood your intention correctly ;-)\r\nAlso, a tiny nit: could use the overloaded version of `.find()` which takes a `char` as first parameter instead of passing strings with length 1, see http://www.cplusplus.com/reference/string/string/find/ (probably more efficient).",
    "created_at": "2020-02-12T12:03:51Z",
    "updated_at": "2020-02-12T14:29:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378209601",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378209601"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378209601"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378209601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 122,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378211259",
    "pull_request_review_id": 357398705,
    "id": 378211259,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIxMTI1OQ==",
    "diff_hunk": "@@ -115,28 +115,50 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         case 5:\n             (void)strprintf(format_string, fuzzed_data_provider.ConsumeBool());\n             break;\n-        case 6:\n+        }\n+    } catch (const tinyformat::format_error&) {\n+    }\n+\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"c\") != std::string::npos) {\n+        // Avoid triggering the following:\n+        // * strprintf(\"%c\", 1.31783e+38);\n+        // tinyformat.h:244:36: runtime error: 1.31783e+38 is outside the range of representable values of type 'char'\n+        return;\n+    }\n+\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"*\") != std::string::npos) {",
    "path": "src/test/fuzz/strprintf.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "470e2ac602ed2d6e62e5c80f27cd0a60c7cf6bce",
    "original_commit_id": "7f82eec0c55090eeace58cf3298e1185fd422b57",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See my review comment above (matching logic and as micro-nit using `.find()`-version with `char` as first parameter).",
    "created_at": "2020-02-12T12:07:49Z",
    "updated_at": "2020-02-12T14:29:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378211259",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378211259"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378211259"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378211259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 129,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378222055",
    "pull_request_review_id": 357414812,
    "id": 378222055,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyMjA1NQ==",
    "diff_hunk": "@@ -115,28 +115,50 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         case 5:\n             (void)strprintf(format_string, fuzzed_data_provider.ConsumeBool());\n             break;\n-        case 6:\n+        }\n+    } catch (const tinyformat::format_error&) {\n+    }\n+\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"c\") != std::string::npos) {",
    "path": "src/test/fuzz/strprintf.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "470e2ac602ed2d6e62e5c80f27cd0a60c7cf6bce",
    "original_commit_id": "7f82eec0c55090eeace58cf3298e1185fd422b57",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See comment below :)",
    "created_at": "2020-02-12T12:32:33Z",
    "updated_at": "2020-02-12T14:29:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378222055",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378222055"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18109#discussion_r378222055"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18109"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378222055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 122,
    "side": "RIGHT",
    "in_reply_to_id": 378209601
  }
]