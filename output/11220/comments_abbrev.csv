luke-jr,2017-09-02T22:21:35Z,"Most of the rejection reasons are not standardised, and we only care that it fails. It might make the most sense to check that it's a `consensus_rule_violation` exception or such, but I'm not sure checking the specific string is useful.\n\nYour example is invalid, because for the `bad-blk-sigops` test, we would not care what the outcome is if the subsidy is broken. Instead, the subsidy should be",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-326772350,326772350,
sdaftuar,2017-09-02T22:58:10Z,"Concept ACK.  I think in general checking for the specific error we expect makes it less likely that we inadvertently introduce a bug in the tests; certainly this kind of thing has cropped up in the functional test suite, where bugs introduced into a test harness cause the test to not actually be testing anything, or to be testing the wrong thing.\n\nIMO the downside (in general) to additional s",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-326773735,326773735,
Sjors,2017-09-03T07:09:33Z,"I'll see what I can do about Travis failing on everything but OSX. It's throwing `multiple definition of IsRejectInvalidReason` in a bunch of places.\n\nI agree the example isn't great. I did actually run into it while trying an extremely high value for MAX_BLOCK_SIGOPS_COST (250x) in an [experiment](https://github.com/Sjors/bitcoin/pull/1). In attempt to make the test pass, I increased the tran",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-326788435,326788435,
Sjors,2017-09-03T12:15:29Z,"I pushed a few improvements, apparently to the satisfaction of Travis:\n\n1. moved changes from `test_bitcoin.h` to `testutil.h`, which seems more appropriate\n2. instead of one function for each validation error type, there's now a `class CheckRejectInvalid` whose constructor takes a string\n3. `#define` for validation error strings so they're all in one place. That should make later refactor",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-326801262,326801262,
Sjors,2017-09-03T15:22:17Z,"@sipa and @morcos worked on `miner_tests.cpp` earlier this year.\n\n@morcos since you refactored `CreateNewBlock` in late 2015 (#6898), could you check that I picked the right specific validation errors? Just to make sure the tests weren't already misbehaving.",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-326811329,326811329,
Sjors,2017-09-06T08:30:09Z,"@MarcoFalke  since #11234 just snatched `testutil.h` out from under me, I moved everything into `miner_test.cpp`.\n\nThere are a lot of other tests that use `BOOST_CHECK_THROW` without checking the precise error, so it might make sense to revert #11234 at some point.",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-327413789,327413789,
MarcoFalke,2017-10-02T19:10:58Z,Please squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits,https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-333634695,333634695,
Sjors,2017-10-03T09:43:27Z,"Done, as well as rebased to latest master.",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-333792324,333792324,
Sjors,2017-10-03T09:47:25Z,"I pushed again to fix commit message and code comment (it was saying ""BOOST_CHECK_THROW"" instead of ""BOOST_CHECK_EXCEPTION"" in two places).",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-333793268,333793268,
Sjors,2017-10-03T10:19:13Z,"The `p2p-segwit.py` test failed in one environment. Random time-out? All machines passed on my previous force push.\n![schermafbeelding 2017-10-03 om 11 16 49](https://user-images.githubusercontent.com/10217/31120475-713a535c-a82c-11e7-969b-cc0c8a6fc21f.png)\n",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-333800243,333800243,
meshcollider,2017-10-03T11:04:56Z,"@Sjors probably just an unrelated failure, Travis does that sometimes. I've restarted that test for you.",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-333809488,333809488,
Sjors,2017-10-04T11:50:33Z,I believe I addressed all code style issued raised. Rebased to latest master. I also signed the commit this time.,https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-334130862,334130862,
Sjors,2017-10-20T11:00:35Z,"@JeremyRubin it would be great to get your feedback on this PR, given that you're working on these validation errors. I was able to cherry-pick my commit on top of your #11523 without a problem.",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-338175461,338175461,
JeremyRubin,2017-10-20T22:14:39Z,"Concept Ack!\n\nI would think one improvement might be if the strings were not to be literals (as Luke points out, they aren't standardized). I think it's ok for now though.",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-338334746,338334746,
Sjors,2017-10-21T05:41:27Z,"@JeremyRubin the downside of squashing commits is you can't see history :-) I actually used `#define REJECT_INVALID_BAD_CB_MULTIPLE ""invalid_bad_cb_multiple""` in an earlier version, but switched back to literal strings  based on @promag's [feedback](https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142387624).",https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-338366005,338366005,
sipa,2017-10-21T14:10:03Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-338402007,338402007,
MarcoFalke,2017-10-23T09:19:02Z,utACK 59d0ede514f7754ad4df11ffe11f27e2ea63bf3e,https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-338598693,338598693,
Sjors,2017-11-09T11:20:06Z,Rebased to account for #11389.,https://github.com/bitcoin/bitcoin/pull/11220#issuecomment-343125176,343125176,
MarcoFalke,2017-09-05T23:23:43Z,Maybe move all of this to the cpp?,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r137139278,137139278,src/test/testutil.h
promag,2017-10-03T12:36:50Z,IMO inline these strings.,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142387624,142387624,src/test/miner_tests.cpp
promag,2017-10-03T12:37:25Z,Move down near other boost includes (try to keep it sorted too).,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142387732,142387732,src/test/miner_tests.cpp
promag,2017-10-03T12:38:40Z,"```cpp\nCheckRejectInvalid(const std::string& reason) : m_reason(reason) {}\n```",https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142387974,142387974,src/test/miner_tests.cpp
promag,2017-10-03T12:42:26Z,Use `std::string::find`?,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142388740,142388740,src/test/miner_tests.cpp
promag,2017-10-03T12:42:53Z,"Nit, `const std::runtime_error& e`.",https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142388815,142388815,src/test/miner_tests.cpp
promag,2017-10-03T12:48:03Z,"IMO this sounds better:\n```cpp\n..., std::runtime_error, HasReason(""bad-blk-sigops""));\n```",https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142389969,142389969,src/test/miner_tests.cpp
Sjors,2017-10-03T12:56:17Z,That should indeed help with #8670.,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142391949,142391949,src/test/miner_tests.cpp
Sjors,2017-10-03T12:57:53Z,I renamed `CheckRejectInvalid` to `HasReason`; seems more readable indeed.,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142392390,142392390,src/test/miner_tests.cpp
MarcoFalke,2017-10-03T12:58:49Z,Âµnit: Can be `const`,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142392603,142392603,src/test/miner_tests.cpp
Sjors,2017-10-03T13:00:20Z,"I used `#define` to make it (slightly) easier to find all occurrences in the codebase if these rejection reasons ever need to be renamed. It also helps against typos, although typos would be immediately obvious when you run the test.\n\nHappy to change it to inline if nobody objects.",https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142392956,142392956,src/test/miner_tests.cpp
Sjors,2017-10-03T13:04:11Z,"Thanks. If it wasn't obvious, I'm not terribly familiar with C++. :-)",https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142393809,142393809,src/test/miner_tests.cpp
promag,2017-10-03T13:52:41Z,The test will fail if there is a typo. Having inline is good because a rename forces you to update the relevant tests and double check everything related.,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142407977,142407977,src/test/miner_tests.cpp
Sjors,2017-10-04T11:45:16Z,I got rid of this dependency.,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142647564,142647564,src/test/miner_tests.cpp
Sjors,2017-10-04T11:45:32Z,Using inline now.,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142647612,142647612,src/test/miner_tests.cpp
Sjors,2017-10-04T11:45:59Z,"Done, and renamed the private variable from `reason` to `m_reason` ",https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142647695,142647695,src/test/miner_tests.cpp
Sjors,2017-10-04T11:46:12Z,Done,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142647727,142647727,src/test/miner_tests.cpp
Sjors,2017-10-04T11:46:21Z,Done,https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142647753,142647753,src/test/miner_tests.cpp
Sjors,2017-10-04T11:47:03Z,Done (Github needs a check-mark emoticon),https://github.com/bitcoin/bitcoin/pull/11220#discussion_r142647867,142647867,src/test/miner_tests.cpp
