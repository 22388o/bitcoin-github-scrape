[
  {
    "sha": "7257353b93e9f45e67071b0b86a0313e7a70aaaa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjU3MzUzYjkzZTlmNDVlNjcwNzFiMGI4NmEwMzEzZTdhNzBhYWFh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-11-01T00:24:38Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-13T21:46:33Z"
      },
      "message": "Select orphan transaction uniformly for eviction\n\nThe previous code was biased towards evicting transactions whose txid has\na larger gap (lexicographically) with the previous txid in the orphan pool.",
      "tree": {
        "sha": "24a754e18aa3701d608d824182b1c55a5746d654",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24a754e18aa3701d608d824182b1c55a5746d654"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7257353b93e9f45e67071b0b86a0313e7a70aaaa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7257353b93e9f45e67071b0b86a0313e7a70aaaa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7257353b93e9f45e67071b0b86a0313e7a70aaaa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7257353b93e9f45e67071b0b86a0313e7a70aaaa/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a4334443085970a42792db3528695585fe7053b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a4334443085970a42792db3528695585fe7053b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a4334443085970a42792db3528695585fe7053b"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 19,
      "deletions": 6
    },
    "files": [
      {
        "sha": "17e8578f57450b7c1bee8d76b7baf860bb131476",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 6,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7257353b93e9f45e67071b0b86a0313e7a70aaaa/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7257353b93e9f45e67071b0b86a0313e7a70aaaa/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=7257353b93e9f45e67071b0b86a0313e7a70aaaa",
        "patch": "@@ -69,6 +69,7 @@ struct COrphanTx {\n     CTransactionRef tx;\n     NodeId fromPeer;\n     int64_t nTimeExpire;\n+    size_t list_pos;\n };\n CCriticalSection g_cs_orphans;\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n@@ -170,6 +171,8 @@ namespace {\n     };\n     std::map<COutPoint, std::set<std::map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\n \n+    std::vector<std::map<uint256, COrphanTx>::iterator> g_orphan_list GUARDED_BY(g_cs_orphans); //! For random eviction\n+\n     static size_t vExtraTxnForCompactIt GUARDED_BY(g_cs_orphans) = 0;\n     static std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(g_cs_orphans);\n } // namespace\n@@ -706,8 +709,9 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n         return false;\n     }\n \n-    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME});\n+    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME, g_orphan_list.size()});\n     assert(ret.second);\n+    g_orphan_list.push_back(ret.first);\n     for (const CTxIn& txin : tx->vin) {\n         mapOrphanTransactionsByPrev[txin.prevout].insert(ret.first);\n     }\n@@ -733,6 +737,18 @@ int static EraseOrphanTx(uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans)\n         if (itPrev->second.empty())\n             mapOrphanTransactionsByPrev.erase(itPrev);\n     }\n+\n+    size_t old_pos = it->second.list_pos;\n+    assert(g_orphan_list[old_pos] == it);\n+    if (old_pos + 1 != g_orphan_list.size()) {\n+        // Unless we're deleting the last entry in g_orphan_list, move the last\n+        // entry to the position we're deleting.\n+        auto it_last = g_orphan_list.back();\n+        g_orphan_list[old_pos] = it_last;\n+        it_last->second.list_pos = old_pos;\n+    }\n+    g_orphan_list.pop_back();\n+\n     mapOrphanTransactions.erase(it);\n     return 1;\n }\n@@ -783,11 +799,8 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n     while (mapOrphanTransactions.size() > nMaxOrphans)\n     {\n         // Evict a random orphan:\n-        uint256 randomhash = rng.rand256();\n-        std::map<uint256, COrphanTx>::iterator it = mapOrphanTransactions.lower_bound(randomhash);\n-        if (it == mapOrphanTransactions.end())\n-            it = mapOrphanTransactions.begin();\n-        EraseOrphanTx(it->first);\n+        size_t randompos = rng.randrange(g_orphan_list.size());\n+        EraseOrphanTx(g_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n     return nEvicted;"
      }
    ]
  }
]