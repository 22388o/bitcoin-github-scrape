[
  {
    "sha": "ab03660824daa2c49379d0da28e1d9cb03f6b995",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjAzNjYwODI0ZGFhMmM0OTM3OWQwZGEyOGUxZDljYjAzZjZiOTk1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-02-06T04:56:10Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-02-06T04:56:10Z"
      },
      "message": "Implement BIP 66 validation rules and switchover logic",
      "tree": {
        "sha": "ab934a1cec5b35a03b5b52eda28f7a7b557b7b0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab934a1cec5b35a03b5b52eda28f7a7b557b7b0a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab03660824daa2c49379d0da28e1d9cb03f6b995",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab03660824daa2c49379d0da28e1d9cb03f6b995",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab03660824daa2c49379d0da28e1d9cb03f6b995",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab03660824daa2c49379d0da28e1d9cb03f6b995/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41f94edf221019a6c4b8f78c2b17c389442f546e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41f94edf221019a6c4b8f78c2b17c389442f546e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41f94edf221019a6c4b8f78c2b17c389442f546e"
      }
    ],
    "stats": {
      "total": 105,
      "additions": 105,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1aac4b31dd6c986d613dc8debec05079cb8fc74c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab03660824daa2c49379d0da28e1d9cb03f6b995/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab03660824daa2c49379d0da28e1d9cb03f6b995/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ab03660824daa2c49379d0da28e1d9cb03f6b995",
        "patch": "@@ -1795,6 +1795,12 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n     unsigned int flags = SCRIPT_VERIFY_NOCACHE |\n                          (fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE);\n \n+    if (block.nVersion >= 3 &&\n+        ((!TestNet() && CBlockIndex::IsSuperMajority(3, pindex->pprev, 750, 1000)) ||\n+            (TestNet() && CBlockIndex::IsSuperMajority(3, pindex->pprev, 51, 100)))) {\n+        flags |= SCRIPT_VERIFY_DERSIG;\n+    }\n+\n     CBlockUndo blockundo;\n \n     CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads ? &scriptcheckqueue : NULL);\n@@ -2427,6 +2433,16 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CDiskBlockPos* dbp)\n                                      REJECT_OBSOLETE, \"bad-version\");\n             }\n         }\n+        // Reject block.nVersion=2 blocks when 95% (75% on testnet) of the network has upgraded:\n+        if (block.nVersion < 3)\n+        {\n+            if ((!TestNet() && CBlockIndex::IsSuperMajority(3, pindexPrev, 950, 1000)) ||\n+                (TestNet() && CBlockIndex::IsSuperMajority(3, pindexPrev, 75, 100)))\n+            {\n+                return state.Invalid(error(\"AcceptBlock() : rejected nVersion=2 block\"),\n+                                     REJECT_OBSOLETE, \"bad-version\");\n+            }\n+        }\n         // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n         if (block.nVersion >= 2)\n         {"
      },
      {
        "sha": "139c8e6684ecf9625eb8d81d787dc4e8074f5fc4",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab03660824daa2c49379d0da28e1d9cb03f6b995/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab03660824daa2c49379d0da28e1d9cb03f6b995/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=ab03660824daa2c49379d0da28e1d9cb03f6b995",
        "patch": "@@ -294,6 +294,86 @@ bool IsCanonicalSignature(const valtype &vchSig, unsigned int flags) {\n     return true;\n }\n \n+// BIP 66 defined signature encoding check. This largely overlaps with\n+// IsCanonicalSignature above, but lacks hashtype constraints, and uses the\n+// exact implementation code from BIP 66.\n+bool static IsValidSignatureEncoding(const std::vector<unsigned char> &sig) {\n+    // Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S] [sighash]\n+    // * total-length: 1-byte length descriptor of everything that follows,\n+    //   excluding the sighash byte.\n+    // * R-length: 1-byte length descriptor of the R value that follows.\n+    // * R: arbitrary-length big-endian encoded R value. It must use the shortest\n+    //   possible encoding for a positive integers (which means no null bytes at\n+    //   the start, except a single one when the next byte has its highest bit set).\n+    // * S-length: 1-byte length descriptor of the S value that follows.\n+    // * S: arbitrary-length big-endian encoded S value. The same rules apply.\n+    // * sighash: 1-byte value indicating what data is hashed (not part of the DER\n+    //   signature)\n+\n+    // Minimum and maximum size constraints.\n+    if (sig.size() < 9) return false;\n+    if (sig.size() > 73) return false;\n+\n+    // A signature is of type 0x30 (compound).\n+    if (sig[0] != 0x30) return false;\n+\n+    // Make sure the length covers the entire signature.\n+    if (sig[1] != sig.size() - 3) return false;\n+\n+    // Extract the length of the R element.\n+    unsigned int lenR = sig[3];\n+\n+    // Make sure the length of the S element is still inside the signature.\n+    if (5 + lenR >= sig.size()) return false;\n+\n+    // Extract the length of the S element.\n+    unsigned int lenS = sig[5 + lenR];\n+\n+    // Verify that the length of the signature matches the sum of the length\n+    // of the elements.\n+    if ((size_t)(lenR + lenS + 7) != sig.size()) return false;\n+ \n+    // Check whether the R element is an integer.\n+    if (sig[2] != 0x02) return false;\n+\n+    // Zero-length integers are not allowed for R.\n+    if (lenR == 0) return false;\n+\n+    // Negative numbers are not allowed for R.\n+    if (sig[4] & 0x80) return false;\n+\n+    // Null bytes at the start of R are not allowed, unless R would\n+    // otherwise be interpreted as a negative number.\n+    if (lenR > 1 && (sig[4] == 0x00) && !(sig[5] & 0x80)) return false;\n+\n+    // Check whether the S element is an integer.\n+    if (sig[lenR + 4] != 0x02) return false;\n+\n+    // Zero-length integers are not allowed for S.\n+    if (lenS == 0) return false;\n+\n+    // Negative numbers are not allowed for S.\n+    if (sig[lenR + 6] & 0x80) return false;\n+\n+    // Null bytes at the start of S are not allowed, unless S would otherwise be\n+    // interpreted as a negative number.\n+    if (lenS > 1 && (sig[lenR + 6] == 0x00) && !(sig[lenR + 7] & 0x80)) return false;\n+\n+    return true;\n+}\n+\n+bool static CheckSignatureEncoding(const valtype &vchSig, unsigned int flags) {\n+    // Empty signature. Not strictly DER encoded, but allowed to provide a\n+    // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n+    if (vchSig.size() == 0) {\n+        return true;\n+    }\n+    if ((flags & SCRIPT_VERIFY_DERSIG) != 0 && !IsValidSignatureEncoding(vchSig)) {\n+        return false;\n+    }\n+    return true;\n+}\n+\n bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, const CTransaction& txTo, unsigned int nIn, unsigned int flags, int nHashType)\n {\n     CScript::const_iterator pc = script.begin();\n@@ -846,6 +926,10 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     // Drop the signature, since there's no way for a signature to sign itself\n                     scriptCode.FindAndDelete(CScript(vchSig));\n \n+                    if (!CheckSignatureEncoding(vchSig, flags)) {\n+                        return false;\n+                    }\n+\n                     bool fSuccess = IsCanonicalSignature(vchSig, flags) && IsCanonicalPubKey(vchPubKey, flags) &&\n                         CheckSig(vchSig, vchPubKey, scriptCode, txTo, nIn, nHashType, flags);\n \n@@ -906,6 +990,10 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                         valtype& vchSig    = stacktop(-isig);\n                         valtype& vchPubKey = stacktop(-ikey);\n \n+                        if (!CheckSignatureEncoding(vchSig, flags)) {\n+                            return false;\n+                        }\n+\n                         // Check signature\n                         bool fOk = IsCanonicalSignature(vchSig, flags) && IsCanonicalPubKey(vchPubKey, flags) &&\n                             CheckSig(vchSig, vchPubKey, scriptCode, txTo, nIn, nHashType, flags);"
      },
      {
        "sha": "c6e31f603cedec11806809622d09842ddbec38f7",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab03660824daa2c49379d0da28e1d9cb03f6b995/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab03660824daa2c49379d0da28e1d9cb03f6b995/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=ab03660824daa2c49379d0da28e1d9cb03f6b995",
        "patch": "@@ -190,6 +190,7 @@ enum\n     SCRIPT_VERIFY_STRICTENC = (1U << 1), // enforce strict conformance to DER and SEC2 for signatures and pubkeys\n     SCRIPT_VERIFY_EVEN_S    = (1U << 2), // enforce even S values in signatures (depends on STRICTENC)\n     SCRIPT_VERIFY_NOCACHE   = (1U << 3), // do not store results in signature cache (but do query it)\n+    SCRIPT_VERIFY_DERSIG    = (1U << 4), // enforce signature encodings as defined by BIP 66 (which is a softfork, while STRICTENC is not)\n };\n \n enum txnouttype"
      }
    ]
  },
  {
    "sha": "989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODlkNDk5MjFiZDg5ODFhY2FhYjJkMmU1ZTllMDZkN2IxYTI5YmQz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-02-06T05:26:15Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-02-06T05:26:15Z"
      },
      "message": "Backport of some of BIP66's tests",
      "tree": {
        "sha": "f603692d494808653b162792f16e8cd3662c5fbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f603692d494808653b162792f16e8cd3662c5fbf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab03660824daa2c49379d0da28e1d9cb03f6b995",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab03660824daa2c49379d0da28e1d9cb03f6b995",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab03660824daa2c49379d0da28e1d9cb03f6b995"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 104,
      "deletions": 2
    },
    "files": [
      {
        "sha": "923e9b9df4f85a7284cb856d6ef760b8c76b574d",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
        "patch": "@@ -330,5 +330,45 @@\n [\"0 0x01 0x50\", \"HASH160 0x14 0xece424a6bb6ddf4db592c0faed60685047a361b1 EQUAL\", \"OP_RESERVED in P2SH should fail\"],\n [\"0 0x01 VER\", \"HASH160 0x14 0x0f4d7845db968f2a81b530b6f3c1d6246d4c7e01 EQUAL\", \"OP_VER in P2SH should fail\"],\n \n+[\"0x4a 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"0 CHECKSIG NOT\", \"DERSIG\", \"Overly long signature is incorrectly encoded for DERSIG\"],\n+[\"0x25 0x30220220000000000000000000000000000000000000000000000000000000000000000000\", \"0 CHECKSIG NOT\", \"DERSIG\", \"Missing S is incorrectly encoded for DERSIG\"],\n+[\"0x27 0x3024021077777777777777777777777777777777020a7777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"DERSIG\", \"S with invalid S length is incorrectly encoded for DERSIG\"],\n+[\"0x27 0x302403107777777777777777777777777777777702107777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"DERSIG\", \"Non-integer R is incorrectly encoded for DERSIG\"],\n+[\"0x27 0x302402107777777777777777777777777777777703107777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"DERSIG\", \"Non-integer S is incorrectly encoded for DERSIG\"],\n+[\"0x17 0x3014020002107777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"DERSIG\", \"Zero-length R is incorrectly encoded for DERSIG\"],\n+[\"0x17 0x3014021077777777777777777777777777777777020001\", \"0 CHECKSIG NOT\", \"DERSIG\", \"Zero-length S is incorrectly encoded for DERSIG\"],\n+[\"0x27 0x302402107777777777777777777777777777777702108777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"DERSIG\", \"Negative S is incorrectly encoded for DERSIG\"],\n+\n+[\n+    \"0x47 0x30440220003040725f724b0e2142fc44ac71f6e13161f6410aeb6dee477952ede3b6a6ca022041ff4940ee3d88116ad281d7cc556e1f2c9427d82290bd7974a25addbcd5bede01\",\n+    \"0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 CHECKSIG NOT\",\n+    \"DERSIG\",\n+    \"P2PK NOT with bad sig with too much R padding\"\n+],\n+[\n+    \"0x47 0x30440220003040725f724a0e2142fc44ac71f6e13161f6410aeb6dee477952ede3b6a6ca022041ff4940ee3d88116ad281d7cc556e1f2c9427d82290bd7974a25addbcd5bede01\",\n+    \"0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 CHECKSIG NOT\",\n+    \"DERSIG\",\n+    \"P2PK NOT with too much R padding\"\n+],\n+[\n+    \"0x47 0x304402208e43c0b91f7c1e5bc58e41c8185f8a6086e111b0090187968a86f2822462d3c902200a58f4076b1133b18ff1dc83ee51676e44c60cc608d9534e0df5ace0424fc0be01\",\n+    \"0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 CHECKSIG NOT\",\n+    \"DERSIG\",\n+    \"BIP66 example 2, with DERSIG\"\n+],\n+[\n+    \"1\",\n+    \"0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 CHECKSIG NOT\",\n+    \"DERSIG\",\n+    \"BIP66 example 6, with DERSIG\"\n+],\n+[\n+    \"0 0 0x47 0x30440220afa76a8f60622f813b05711f051c6c3407e32d1b1b70b0576c1f01b54e4c05c702200d58e9df044fd1845cabfbeef6e624ba0401daf7d7e084736f9ff601c3783bf501\",\n+    \"2 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 2 CHECKMULTISIG NOT\",\n+    \"DERSIG\",\n+    \"BIP66 example 10, with DERSIG\"\n+],\n+\n [\"0x00\", \"'00' EQUAL\", \"Basic OP_0 execution\"]\n ]"
      },
      {
        "sha": "82a69d02a463181c04089893d773cded4a2eb988",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
        "patch": "@@ -426,5 +426,57 @@\n \"0x4d 0x4000 0x42424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242 EQUAL\",\n \"Basic PUSHDATA1 signedness check\"],\n \n+[\"0x4a 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"0 CHECKSIG NOT\", \"\", \"Overly long signature is correctly encoded\"],\n+[\"0x25 0x30220220000000000000000000000000000000000000000000000000000000000000000000\", \"0 CHECKSIG NOT\", \"\", \"Missing S is correctly encoded\"],\n+[\"0x27 0x3024021077777777777777777777777777777777020a7777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"\", \"S with invalid S length is correctly encoded\"],\n+[\"0x27 0x302403107777777777777777777777777777777702107777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"\", \"Non-integer R is correctly encoded\"],\n+[\"0x27 0x302402107777777777777777777777777777777703107777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"\", \"Non-integer S is correctly encoded\"],\n+[\"0x17 0x3014020002107777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"\", \"Zero-length R is correctly encoded\"],\n+[\"0x17 0x3014021077777777777777777777777777777777020001\", \"0 CHECKSIG NOT\", \"\", \"Zero-length S is correctly encoded\"],\n+[\"0x27 0x302402107777777777777777777777777777777702108777777777777777777777777777777701\", \"0 CHECKSIG NOT\", \"\", \"Negative S is correctly encoded\"],\n+\n+[\n+    \"0x47 0x30440220003040725f724b0e2142fc44ac71f6e13161f6410aeb6dee477952ede3b6a6ca022041ff4940ee3d88116ad281d7cc556e1f2c9427d82290bd7974a25addbcd5bede01\",\n+    \"0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 CHECKSIG NOT\",\n+    \"\",\n+    \"P2PK NOT with bad sig with too much R padding but no DERSIG\"\n+],\n+[\n+    \"0\",\n+    \"0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 CHECKSIG NOT\",\n+    \"\",\n+    \"BIP66 example 4, without DERSIG\"\n+],\n+[\n+    \"0\",\n+    \"0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 CHECKSIG NOT\",\n+    \"DERSIG\",\n+    \"BIP66 example 4, with DERSIG\"\n+],\n+[\n+    \"1\",\n+    \"0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 CHECKSIG NOT\",\n+    \"\",\n+    \"BIP66 example 6, without DERSIG\"\n+],\n+[\n+    \"0 0 0x47 0x30440220afa76a8f60622f813b05711f051c6c3407e32d1b1b70b0576c1f01b54e4c05c702200d58e9df044fd1845cabfbeef6e624ba0401daf7d7e084736f9ff601c3783bf501\",\n+    \"2 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 2 CHECKMULTISIG NOT\",\n+    \"\",\n+    \"BIP66 example 10, without DERSIG\"\n+],\n+[\n+    \"0 0x47 0x30440220f00a77260d34ec2f0c59621dc710f58169d0ca06df1a88cd4b1f1b97bd46991b02201ee220c7e04f26aed03f94aa97fb09ca5627163bf4ba07e6979972ec737db22601 0\",\n+    \"2 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 2 CHECKMULTISIG NOT\",\n+    \"\",\n+    \"BIP66 example 12, without DERSIG\"\n+],\n+[\n+    \"0 0x47 0x30440220f00a77260d34ec2f0c59621dc710f58169d0ca06df1a88cd4b1f1b97bd46991b02201ee220c7e04f26aed03f94aa97fb09ca5627163bf4ba07e6979972ec737db22601 0\",\n+    \"2 0x21 0x038282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508 0x21 0x03363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640 2 CHECKMULTISIG NOT\",\n+    \"DERSIG\",\n+    \"BIP66 example 12, with DERSIG\"\n+],\n+\n [\"0x00\", \"SIZE 0 EQUAL\", \"Basic OP_0 execution\"]\n ]"
      },
      {
        "sha": "a4d7a90f20912f9304aa790eb26bef9ad50befb7",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
        "patch": "@@ -140,8 +140,13 @@ BOOST_AUTO_TEST_CASE(script_valid)\n         string scriptPubKeyString = test[1].get_str();\n         CScript scriptPubKey = ParseScript(scriptPubKeyString);\n \n+        int flagsNow = flags;\n+        if (test.size() > 3 && (\",\" + test[2].get_str() + \",\").find(\",DERSIG,\") != string::npos) {\n+            flagsNow |= SCRIPT_VERIFY_DERSIG;\n+        }\n+\n         CTransaction tx;\n-        BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, tx, 0, flags, SIGHASH_NONE), strTest);\n+        BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, tx, 0, flagsNow, SIGHASH_NONE), strTest);\n     }\n }\n \n@@ -164,8 +169,13 @@ BOOST_AUTO_TEST_CASE(script_invalid)\n         string scriptPubKeyString = test[1].get_str();\n         CScript scriptPubKey = ParseScript(scriptPubKeyString);\n \n+        int flagsNow = flags;\n+        if (test.size() > 3 && (\",\" + test[2].get_str() + \",\").find(\",DERSIG,\") != string::npos) {\n+            flagsNow |= SCRIPT_VERIFY_DERSIG;\n+        }\n+\n         CTransaction tx;\n-        BOOST_CHECK_MESSAGE(!VerifyScript(scriptSig, scriptPubKey, tx, 0, flags, SIGHASH_NONE), strTest);\n+        BOOST_CHECK_MESSAGE(!VerifyScript(scriptSig, scriptPubKey, tx, 0, flagsNow, SIGHASH_NONE), strTest);\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "3230b329ea84d234e04b36044f288ea05b1f116e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjMwYjMyOWVhODRkMjM0ZTA0YjM2MDQ0ZjI4OGVhMDViMWYxMTZl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-02-06T18:42:01Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-02-06T18:42:01Z"
      },
      "message": "Raise version of created blocks, and enforce DERSIG in mempool",
      "tree": {
        "sha": "d424fd13c08d615356f100f8ac0e709dd90e448d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d424fd13c08d615356f100f8ac0e709dd90e448d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3230b329ea84d234e04b36044f288ea05b1f116e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3230b329ea84d234e04b36044f288ea05b1f116e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3230b329ea84d234e04b36044f288ea05b1f116e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3230b329ea84d234e04b36044f288ea05b1f116e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/989d49921bd8981acaab2d2e5e9e06d7b1a29bd3"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d89f06b1217d75eacdaf8f080eac4827564f0ebb",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3230b329ea84d234e04b36044f288ea05b1f116e/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3230b329ea84d234e04b36044f288ea05b1f116e/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=3230b329ea84d234e04b36044f288ea05b1f116e",
        "patch": "@@ -345,7 +345,7 @@ class CBlockHeader\n {\n public:\n     // header\n-    static const int CURRENT_VERSION=2;\n+    static const int CURRENT_VERSION=3;\n     int nVersion;\n     uint256 hashPrevBlock;\n     uint256 hashMerkleRoot;"
      },
      {
        "sha": "58255682b6ed6f0e0268af4b7120cd14203426cd",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3230b329ea84d234e04b36044f288ea05b1f116e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3230b329ea84d234e04b36044f288ea05b1f116e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3230b329ea84d234e04b36044f288ea05b1f116e",
        "patch": "@@ -974,7 +974,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n-        if (!CheckInputs(tx, state, view, true, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC))\n+        if (!CheckInputs(tx, state, view, true, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC | SCRIPT_VERIFY_DERSIG))\n         {\n             return error(\"AcceptToMemoryPool: : ConnectInputs failed %s\", hash.ToString());\n         }"
      }
    ]
  }
]