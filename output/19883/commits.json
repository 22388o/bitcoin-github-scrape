[
  {
    "sha": "bd2aa75c3346bdca82451cebdc3b6703fba695d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDJhYTc1YzMzNDZiZGNhODI0NTFjZWJkYzNiNjcwM2ZiYTY5NWQ5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-09-05T11:39:36Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-09-06T11:39:02Z"
      },
      "message": "net, rpc: expose connection type in getpeerinfo",
      "tree": {
        "sha": "80986d4132965f8b8f1b5b5665cddc0cc729a017",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80986d4132965f8b8f1b5b5665cddc0cc729a017"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd2aa75c3346bdca82451cebdc3b6703fba695d9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9UylwACgkQT1chs9Dj\nkh1X7g/9EDTlJTnR5DAIaPhH1Y7fGuqh7JIsUdeVAv8mbtYRpPzQbHeDxong1Dhr\nhEOHarmfWccNoLwwNO35S6hXcZuyovzsR+kEbJz3zybiw9HZQqxHK0E9qtlwLJcS\ngRU1qsHHdfb9LmsStsYi64+SfTE87IJ5q8GHpzkxAmrf4IUiyRJUbobqpP4luG8r\n6HBo2S5gAFW4SedIcnrhUlvsFZ3Enz05EvCNrGvasOl7YpEGJGNOggSBxYDjJNFg\n9P4aDDmBtwDkFCZgIVMSMEn5bA00PSm6nUI7uVXoMgRg4DaXXiyaPlB/RIuQNI9m\n0nyN6c4QjJdF+mYfyQI16P8vX+jkxQGkWKiN9q5g8O9hsiblT11vsYHgw0y1oRrB\njc/qaTueRNkMBU0MP499NK3/yPqtHreGlPfyKfHPNvNMa19SUKlw/CD2cn25J0s5\nuh1KVP0fK7eI8Kx2O3Vwe7nehGOtOVfcT6b5x+wnPuqnDemFWjWaKse7PjH8nHia\nlFK26/7iwTGuE6NC8bh8ivm/RxNmlSD916hbuZjfP9yH2J8rpXSIK+3o55O8KWCh\nwJ3v3uJlYZpsOVZ3WRNCVLz/nQEJCprp/jcINor/Kvd6kFEFU6qWS/6ORERbl2zJ\nKvc5BnSi55PmOwKSYeEyvP6wOjCPw7oziSJLS85q9/EUX7MDXKM=\n=fAke\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJNNKC5My5otFtwsqaZZFPzo8xIODTMDXswufCFxk9dOCP/wEALdXONHI8+M\nCZ3jFKN6O7sI8QRfVMpd8AjtLM1BNGK6+QCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQWvyEZPgP3ZdrDF86\nBM67RwjxBF9Uyl7wCEsgGE16mwyLAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQpvfrRU4a/A576elWfHOPdwjxBF9Uyl7wCI9R\n1cdAI4BpAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDBPtceaZe0qJImhQH+npXICPEEX1TKXvAIhF9AD56nz6oA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 80986d4132965f8b8f1b5b5665cddc0cc729a017\nparent 23d3ae7accfc690298b1b0bac9615155f485c5ad\nauthor Jon Atack <jon@atack.com> 1599305976 +0200\ncommitter Jon Atack <jon@atack.com> 1599392342 +0200\n\nnet, rpc: expose connection type in getpeerinfo\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd2aa75c3346bdca82451cebdc3b6703fba695d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd2aa75c3346bdca82451cebdc3b6703fba695d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd2aa75c3346bdca82451cebdc3b6703fba695d9/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23d3ae7accfc690298b1b0bac9615155f485c5ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23d3ae7accfc690298b1b0bac9615155f485c5ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23d3ae7accfc690298b1b0bac9615155f485c5ad"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f7143a597cdc2d14538fc0848bbd6ef22f0f95ba",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd2aa75c3346bdca82451cebdc3b6703fba695d9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd2aa75c3346bdca82451cebdc3b6703fba695d9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=bd2aa75c3346bdca82451cebdc3b6703fba695d9",
        "patch": "@@ -542,6 +542,7 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n     }\n     stats.fInbound = IsInboundConn();\n     stats.m_manual_connection = IsManualConn();\n+    stats.m_conn_type = uint8_t(m_conn_type);\n     X(nStartingHeight);\n     {\n         LOCK(cs_vSend);"
      },
      {
        "sha": "5e40d40543fa153cfd07cfaa6dbec2dfa1fe1898",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd2aa75c3346bdca82451cebdc3b6703fba695d9/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd2aa75c3346bdca82451cebdc3b6703fba695d9/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=bd2aa75c3346bdca82451cebdc3b6703fba695d9",
        "patch": "@@ -117,7 +117,7 @@ struct CSerializedNetMsg\n /** Different types of connections to a peer. This enum encapsulates the\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n-enum class ConnectionType {\n+enum class ConnectionType : uint8_t {\n     /**\n      * Inbound connections are those initiated by a peer. This is the only\n      * property we know at the time of connection, until P2P messages are\n@@ -688,6 +688,7 @@ class CNodeStats\n     // Bind address of our side of the connection\n     CAddress addrBind;\n     uint32_t m_mapped_as;\n+    uint8_t m_conn_type;\n };\n \n "
      },
      {
        "sha": "e2d69607df1e0541f04c4216723fd208239b6397",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd2aa75c3346bdca82451cebdc3b6703fba695d9/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd2aa75c3346bdca82451cebdc3b6703fba695d9/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=bd2aa75c3346bdca82451cebdc3b6703fba695d9",
        "patch": "@@ -113,6 +113,13 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n                             {RPCResult::Type::STR, \"subver\", \"The string version\"},\n                             {RPCResult::Type::BOOL, \"inbound\", \"Inbound (true) or Outbound (false)\"},\n                             {RPCResult::Type::BOOL, \"addnode\", \"Whether connection was due to addnode/-connect or if it was an automatic/inbound connection\"},\n+                            {RPCResult::Type::NUM, \"conn_type\", \"Connection type between 0 and 5:\\n\"\n+                                \"0 - inbound (initiated by the peer)\\n\"\n+                                \"1 - outbound-full-relay (default automatic connections)\\n\"\n+                                \"2 - manual (added using the -addnode/-connect configuration options or the addnode RPC)\\n\"\n+                                \"3 - feeler (short-lived automatic connection to test addresses)\\n\"\n+                                \"4 - block-relay-only (does not relay transactions or addresses)\\n\"\n+                                \"5 - addr-fetch (short-lived automatic connection to request addresses)\"},\n                             {RPCResult::Type::NUM, \"startingheight\", \"The starting height (block) of the peer\"},\n                             {RPCResult::Type::NUM, \"banscore\", \"The ban score (DEPRECATED, returned only if config option -deprecatedrpc=banscore is passed)\"},\n                             {RPCResult::Type::NUM, \"synced_headers\", \"The last header we have in common with this peer\"},\n@@ -193,6 +200,7 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n         obj.pushKV(\"subver\", stats.cleanSubVer);\n         obj.pushKV(\"inbound\", stats.fInbound);\n         obj.pushKV(\"addnode\", stats.m_manual_connection);\n+        obj.pushKV(\"conn_type\", stats.m_conn_type);\n         obj.pushKV(\"startingheight\", stats.nStartingHeight);\n         if (fStateStats) {\n             if (IsDeprecatedRPCEnabled(\"banscore\")) {"
      },
      {
        "sha": "e8d8b9ecd9d7d8857688c25cdb4a0f4ce50b9975",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd2aa75c3346bdca82451cebdc3b6703fba695d9/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd2aa75c3346bdca82451cebdc3b6703fba695d9/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=bd2aa75c3346bdca82451cebdc3b6703fba695d9",
        "patch": "@@ -171,6 +171,8 @@ def test_getpeerinfo(self):\n         assert_equal(peer_info[1][0]['addrbind'], peer_info[0][0]['addr'])\n         assert_equal(peer_info[0][0]['minfeefilter'], Decimal(\"0.00000500\"))\n         assert_equal(peer_info[1][0]['minfeefilter'], Decimal(\"0.00001000\"))\n+        assert_equal(peer_info[0][0]['conn_type'], 0)\n+        assert_equal(peer_info[0][1]['conn_type'], 2)\n         # check the `servicesnames` field\n         for info in peer_info:\n             assert_net_servicesnames(int(info[0][\"services\"], 0x10), info[0][\"servicesnames\"])"
      }
    ]
  }
]