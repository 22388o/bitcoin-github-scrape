[
  {
    "sha": "2f15e86a68aba56a8ea8e01e58b2fb7b71846b51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjE1ZTg2YTY4YWJhNTZhOGVhOGUwMWU1OGIyZmI3YjcxODQ2YjUx",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-05-02T16:43:07Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-05-02T16:43:07Z"
      },
      "message": "Do not write to wallet during LoadWallet\n\nWhen debugging another issue, I found a hang-during-startup race condition due to\nLoadWallet calling SetMinVersion (via LoadCryptedKey).\n\nWriting to the file that you're in the process of reading is a bad idea.",
      "tree": {
        "sha": "62a394f718d3f7a910579b43bfd33dda1f706cd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62a394f718d3f7a910579b43bfd33dda1f706cd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eef2091fe9ee39ecd8e874c91d3ab0ff023c5356",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eef2091fe9ee39ecd8e874c91d3ab0ff023c5356",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eef2091fe9ee39ecd8e874c91d3ab0ff023c5356"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9658dab67813e65330c747b6163c32e66f747ec5",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=2f15e86a68aba56a8ea8e01e58b2fb7b71846b51",
        "patch": "@@ -71,6 +71,11 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey, const vector<unsigned char\n     return false;\n }\n \n+bool CWallet::LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n+{\n+    return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret);\n+}\n+\n bool CWallet::AddCScript(const CScript& redeemScript)\n {\n     if (!CCryptoKeyStore::AddCScript(redeemScript))"
      },
      {
        "sha": "348f36a0e459a71ea337305ef8102e560555324d",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f15e86a68aba56a8ea8e01e58b2fb7b71846b51/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=2f15e86a68aba56a8ea8e01e58b2fb7b71846b51",
        "patch": "@@ -145,7 +145,7 @@ class CWallet : public CCryptoKeyStore\n     // Adds an encrypted key to the store, and saves it to disk.\n     bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     // Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n-    bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret) { SetMinVersion(FEATURE_WALLETCRYPT); return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret); }\n+    bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     bool AddCScript(const CScript& redeemScript);\n     bool LoadCScript(const CScript& redeemScript) { return CCryptoKeyStore::AddCScript(redeemScript); }\n "
      }
    ]
  }
]