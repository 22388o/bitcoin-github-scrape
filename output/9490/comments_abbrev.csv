gmaxwell,2017-01-08T07:32:29Z,"Tag for 0.14 please.   Comments on if we should do something about the lack of grace in importmulti?\n\nThis came up while I was reviewing #7871 and realized that an obvious use of it would be making sure that you only pruned after performing your relevant importmultis, so it's important that we be able to prune and importmulti on the same basis.  (also, looks like importmulti will crash on prun",https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-271135461,271135461,
ryanofsky,2017-01-11T16:33:57Z,Will need to rebase now that #7871 is merged (it added a new FindLatestBefore call),https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-271918443,271918443,
gmaxwell,2017-01-11T22:06:13Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272010593,272010593,
sipa,2017-01-11T22:14:54Z,"At least on x86_64 + glibc malloc, this does not actually increase memory usage.",https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272012816,272012816,
jtimon,2017-01-11T23:18:56Z,"I can't think of a better solution, but in principle it looks like introducing ```unsigned int CBlockIndex::nTimeMax``` should hurt in terms of memory. I didn't tried sipa's memory test though.\n\nAs an aside, I don't really understand the recommended policy for choosing between unsigned int, uint_32t and uint_64t for class attributes.",https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272027132,272027132,
gmaxwell,2017-01-12T00:57:19Z,"> I can't think of a better solution, but in principle it looks like introducing unsigned int CBlockIndex::nTimeMax should hurt in terms of memory. I didn't tried sipa's memory test though.\n\nIt doesn't increase the usage because the alignment requirements of the existing objects required padding.",https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272044531,272044531,
sdaftuar,2017-01-12T02:52:18Z,ACK 336289e39285fcfdc80be969501e5db4cf35e1ae.  Tested `FindEarliestAtLeast()` with a unit test here: 3e1f59823f572b71359884487bdc273dbab0eadf,https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272062020,272062020,
laanwj,2017-01-12T11:17:37Z,"utACK 336289e, will merge after pull 3e1f598 into this.",https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272138371,272138371,
gmaxwell,2017-01-12T14:25:17Z,@laanwj Pulled it in.  @sdaftuar Thank you so much for the test!,https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272175825,272175825,
morcos,2017-01-12T18:52:24Z,"utACK\n\n@gmaxwell +1 on adding a grace period.  I can't really imagine any downside to and only annoying hard to debug potential issues if we don't.  ",https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272248393,272248393,
sipa,2017-01-13T23:45:41Z,utACK 4b06e41c309123c4eefce0d3578c01efe1ae10df,https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-272578255,272578255,
ryanofsky,2017-02-14T15:36:53Z,">An issue that remains is that there is no grace period in importmulti:\nIf a address is created at time T and a send is immediately broadcast\nand included by a miner with a slow clock there may not yet have been\nany block with at least time T.\n>\n>The normal rescan has a grace period of 7200 seconds, but importmulti\ndoes not.\n\nThis is not actually true. There is a check in importmul",https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-279741578,279741578,
ryanofsky,2017-02-14T15:50:50Z,">> The normal rescan has a grace period of 7200 seconds, but importmulti\n>> does not.\n\n> This is not actually true.\n\nActually it is true. @morcos pointed out the lack of grace period wasn't in the `GetBlockTimeMax` comparison, but in the `FindEarliestAtLeast` call. I can make another PR to add a grace period to that call.",https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-279746085,279746085,
ryanofsky,2017-02-14T23:07:52Z,Added grace period in #9761.,https://github.com/bitcoin/bitcoin/pull/9490#issuecomment-279865888,279865888,
ryanofsky,2017-01-09T15:43:27Z,How does nTimeMax get assigned when the block index is loaded on startup? Do you need to add a similar assignment to `LoadBlockIndexDB`?,https://github.com/bitcoin/bitcoin/pull/9490#discussion_r95179838,95179838,src/validation.cpp
gmaxwell,2017-01-09T19:43:56Z,::facepalm:: fixed.,https://github.com/bitcoin/bitcoin/pull/9490#discussion_r95230937,95230937,src/validation.cpp
