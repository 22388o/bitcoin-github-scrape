[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775595337",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-775595337",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 775595337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTU5NTMzNw==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T01:54:04Z",
    "updated_at": "2021-02-09T01:54:04Z",
    "author_association": "MEMBER",
    "body": "the failing test seems unrelated. The failure is in `feature_assumevalid.py`, which seems hard to impact from changes that exclusively touch the unit tests, unit test framework, and some comments :) ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775595337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775637714",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-775637714",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 775637714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTYzNzcxNA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T03:40:47Z",
    "updated_at": "2021-02-17T01:02:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775637714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776696006",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-776696006",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 776696006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjY5NjAwNg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-10T13:11:35Z",
    "updated_at": "2021-02-10T13:11:35Z",
    "author_association": "MEMBER",
    "body": "Code review ACK e7573304b7e112b6b7f49c79c25fce36a5440209\r\n\r\nThe new function is added but not used (so not tested), I would prefer if it was, but I guess it can wait until #21061.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776696006/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777960611",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-777960611",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 777960611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3Nzk2MDYxMQ==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T04:26:15Z",
    "updated_at": "2021-02-12T04:26:15Z",
    "author_association": "MEMBER",
    "body": "@vasild- thanks for the review! I've taken all your suggestions locally, but I'm currently getting a linker error when trying to `#include <boost/test/unit_test.hpp>` in `setup_common.cpp` (to use `BOOST_REQUIRE`). I'll dig into it more tomorrow, but just dropping a line here incase you (or anybody else) knows the cause off hand. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777960611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778253143",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-778253143",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 778253143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODI1MzE0Mw==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T15:12:55Z",
    "updated_at": "2021-02-12T15:12:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@amitiuttarwar, I see no boost code is used in `setup_common.cpp`. Maybe it would be easier to use `assert()` inside `CreateValidMempoolTransaction()` instead or somehow signal a failure from that method and make the callers use `BOOST_REQUIRE()` to ensure that it succeeded.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778253143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778261597",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-778261597",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 778261597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODI2MTU5Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T15:27:09Z",
    "updated_at": "2021-02-12T15:27:09Z",
    "author_association": "MEMBER",
    "body": "It is only allowed to use boost in the unit tests, not the fuzz tests (or other tests). setup_common is used by all test and bench libraries.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778261597/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778387486",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-778387486",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 778387486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODM4NzQ4Ng==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T19:00:41Z",
    "updated_at": "2021-02-12T19:00:41Z",
    "author_association": "MEMBER",
    "body": "ah interesting. used `asserts` instead. thanks! \r\n\r\ntook all the feedback. \r\n- added asserts to `CreateValidMempool` helper\r\n- changed `GetMockTime` to return chrono time, updated the call sites\r\n- introduced a `SetMockTime` that takes in chrono time, did not update call sites, but documented in the notes that the `int64_t` is deprecated and the chrono one should be used\r\n\r\nthis means that in this commit, I introduce `CreateValidMempoolTransaction` and `SetMockTime(std::chrono::seconds)`, but they are currently unused. I tested them by locally applying #21061, but ofc there is no guarantee that PR will be merged. if reviewers prefer, I can remove commit 88e62f78a7920bbeec01a05126bc8dd7b1407c4b `Introduce a SetTMockTime that takes chrono time`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778387486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778413486",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-778413486",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 778413486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODQxMzQ4Ng==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T19:45:16Z",
    "updated_at": "2021-02-12T19:45:16Z",
    "author_association": "MEMBER",
    "body": "fixed a silent merge conflict since the function signature of ATMP has changed. updated #21061 to use e020cd6 to test the helper. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778413486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/779472863",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-779472863",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 779472863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTQ3Mjg2Mw==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-15T22:20:08Z",
    "updated_at": "2021-02-15T22:20:08Z",
    "author_association": "MEMBER",
    "body": "updated to incorporate feedback from @vasild ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/779472863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/779960668",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-779960668",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 779960668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTk2MDY2OA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-16T16:40:44Z",
    "updated_at": "2021-02-16T16:40:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 903bbf7f1068da0c27b99401483444f037a17840",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/779960668/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780096301",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-780096301",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 780096301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDA5NjMwMQ==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-16T20:24:38Z",
    "updated_at": "2021-02-16T20:24:38Z",
    "author_association": "MEMBER",
    "body": "rebased ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780096301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780413994",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#issuecomment-780413994",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21121",
    "id": 780413994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDQxMzk5NA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-17T09:10:54Z",
    "updated_at": "2021-02-17T09:10:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780413994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573713098",
    "pull_request_review_id": 587587358,
    "id": 573713098,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzcxMzA5OA==",
    "diff_hunk": "@@ -40,9 +40,16 @@ int64_t GetTimeMicros();\n /** Returns the system time (not mockable) */\n int64_t GetSystemTimeInSeconds(); // Like GetTime(), but not mockable\n \n-/** For testing. Set e.g. with the setmocktime rpc, or -mocktime argument */\n+/**\n+ * For testing. Set e.g. with the setmocktime rpc, or -mocktime argument\n+ *\n+ * @param[in] nMockTimeIn Time in seconds.",
    "path": "src/util/time.h",
    "position": 9,
    "original_position": 8,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Probably more of a hassle, but another way to document would be to use `std::chrono` types with explicit units.",
    "created_at": "2021-02-10T13:09:47Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r573713098",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573713098"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r573713098"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573713098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573981587",
    "pull_request_review_id": 587933726,
    "id": 573981587,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Mzk4MTU4Nw==",
    "diff_hunk": "@@ -40,9 +40,16 @@ int64_t GetTimeMicros();\n /** Returns the system time (not mockable) */\n int64_t GetSystemTimeInSeconds(); // Like GetTime(), but not mockable\n \n-/** For testing. Set e.g. with the setmocktime rpc, or -mocktime argument */\n+/**\n+ * For testing. Set e.g. with the setmocktime rpc, or -mocktime argument\n+ *\n+ * @param[in] nMockTimeIn Time in seconds.",
    "path": "src/util/time.h",
    "position": 9,
    "original_position": 8,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yeah, I took a quick look at changing the signature to a chrono type, but ended up taking the efficient/lazy way for now. there are a couple tweaks that would need to be made to switch it over, nothing difficult but not currently at the top of my priority list\r\n\r\nso I thought leaving a comment was the smallest way to help :) ",
    "created_at": "2021-02-10T18:43:14Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r573981587",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573981587"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r573981587"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573981587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "RIGHT",
    "in_reply_to_id": 573713098
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574396383",
    "pull_request_review_id": 588421416,
    "id": 574396383,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDM5NjM4Mw==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit\r\n\r\n```suggestion\r\n    CTxIn input(outpoint_to_spend);\r\n```\r\n\r\nThe last two arguments have default values equal to the above.",
    "created_at": "2021-02-11T10:36:31Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574396383",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574396383"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574396383"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574396383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 245,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574401946",
    "pull_request_review_id": 588421416,
    "id": 574401946,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQwMTk0Ng==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe `assert()` or `BOOST_REQUIRE()` that `GetCoin()` returns `true`?",
    "created_at": "2021-02-11T10:45:07Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574401946",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574401946"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574401946"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574401946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 262,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574403104",
    "pull_request_review_id": 588421416,
    "id": 574403104,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQwMzEwNA==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit\r\n\r\n```suggestion\r\n    COutPoint outpoint_to_spend(input_transaction->GetHash(), input_vout);\r\n```",
    "created_at": "2021-02-11T10:46:56Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574403104",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574403104"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574403104"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574403104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 244,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574407638",
    "pull_request_review_id": 588421416,
    "id": 574407638,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQwNzYzOA==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The prototype of `AddCoins()` is:\r\n\r\n```cpp\r\nvoid AddCoins(CCoinsViewCache& cache, const CTransaction& tx, int nHeight, bool check = false);\r\n```\r\n\r\nI think the above call implicitly converts `false` to `0` for the 3rd argument `nHeight`. Maybe that should be:\r\n\r\n```suggestion\r\n    const int height = 123;\r\n    AddCoins(coins_cache, *input_transaction.get(), height);\r\n```",
    "created_at": "2021-02-11T10:54:16Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574407638",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574407638"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574407638"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574407638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 259,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574409892",
    "pull_request_review_id": 588421416,
    "id": 574409892,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQwOTg5Mg==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);\n+    // - Then add it to a map to pass in to SignTransaction\n+    std::map<COutPoint, Coin> input_coins;\n+    input_coins.insert({outpoint_to_spend, utxo_to_spend});\n+    // - Default signature hashing type\n+    int nHashType = SIGHASH_ALL;\n+    std::map<int, std::string> input_errors;\n+    SignTransaction(mempool_txn, &keystore, input_coins, nHashType, input_errors);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`assert()` or `BOOST_REQUIRE()` a successful sign?",
    "created_at": "2021-02-11T10:57:43Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574409892",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574409892"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574409892"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574409892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 269,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574411812",
    "pull_request_review_id": 588421416,
    "id": 574411812,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQxMTgxMg==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);\n+    // - Then add it to a map to pass in to SignTransaction\n+    std::map<COutPoint, Coin> input_coins;\n+    input_coins.insert({outpoint_to_spend, utxo_to_spend});\n+    // - Default signature hashing type\n+    int nHashType = SIGHASH_ALL;\n+    std::map<int, std::string> input_errors;\n+    SignTransaction(mempool_txn, &keystore, input_coins, nHashType, input_errors);\n+\n+    // Add transaction to the mempool\n+    TxValidationState state;\n+    WITH_LOCK(cs_main, AcceptToMemoryPool(*m_node.mempool.get(), state, MakeTransactionRef(mempool_txn), nullptr, false));",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`assert()` or `BOOST_REQUIRE()` a success here?",
    "created_at": "2021-02-11T11:00:35Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574411812",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574411812"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574411812"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574411812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 273,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574417478",
    "pull_request_review_id": 588421416,
    "id": 574417478,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDQxNzQ3OA==",
    "diff_hunk": "@@ -121,6 +121,11 @@ struct TestChain100Setup : public RegTestingSetup {\n     CBlock CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns,\n                                  const CScript& scriptPubKey);\n \n+    CMutableTransaction CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                      int input_vout,\n+                                                      CScript output_destination,\n+                                                      CAmount output_amount = CAmount(1 * COIN));",
    "path": "src/test/util/setup_common.h",
    "position": null,
    "original_position": 7,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The implementation assumes that the key to spend `input_transaction:input_vout` is `this->coinbaseKey`. Indeed all callers of this in #21061 pass some tx from `this->m_coinbase_txns[]`.\r\n\r\nThis is not clear from the above prototype. Maybe document this explicitly or even better - pass the spend key here, together with `input_transaction` and `input_vout`.",
    "created_at": "2021-02-11T11:10:32Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574417478",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574417478"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r574417478"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574417478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 124,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 141,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575450955",
    "pull_request_review_id": 589748343,
    "id": 575450955,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ1MDk1NQ==",
    "diff_hunk": "@@ -40,9 +40,16 @@ int64_t GetTimeMicros();\n /** Returns the system time (not mockable) */\n int64_t GetSystemTimeInSeconds(); // Like GetTime(), but not mockable\n \n-/** For testing. Set e.g. with the setmocktime rpc, or -mocktime argument */\n+/**\n+ * For testing. Set e.g. with the setmocktime rpc, or -mocktime argument\n+ *\n+ * @param[in] nMockTimeIn Time in seconds.",
    "path": "src/util/time.h",
    "position": 9,
    "original_position": 8,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in the latest push, I updated the function signature of `GetMockTime`, with updated call sites. I also overloaded `SetMockTime` to take in chronos. This does mean I introduced another function that doesn't get used until #21061, so I can remove if you'd prefer. ",
    "created_at": "2021-02-12T18:46:43Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575450955",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575450955"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575450955"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575450955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "RIGHT",
    "in_reply_to_id": 573713098
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452023",
    "pull_request_review_id": 589749627,
    "id": 575452023,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ1MjAyMw==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2021-02-12T18:48:41Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575452023",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452023"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575452023"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 245,
    "side": "RIGHT",
    "in_reply_to_id": 574396383
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452175",
    "pull_request_review_id": 589749815,
    "id": 575452175,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ1MjE3NQ==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2021-02-12T18:48:57Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575452175",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452175"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575452175"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 262,
    "side": "RIGHT",
    "in_reply_to_id": 574401946
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452579",
    "pull_request_review_id": 589750356,
    "id": 575452579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ1MjU3OQ==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2021-02-12T18:49:47Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575452579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575452579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575452579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 244,
    "side": "RIGHT",
    "in_reply_to_id": 574403104
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453458",
    "pull_request_review_id": 589751543,
    "id": 575453458,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ1MzQ1OA==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "good catch! I updated so the height is a param that's passed in. It seems to not matter for my use cases, but since this is a helper it definitely is better to have consistency in the data structure. thanks :) ",
    "created_at": "2021-02-12T18:51:37Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575453458",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453458"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575453458"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 259,
    "side": "RIGHT",
    "in_reply_to_id": 574407638
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453527",
    "pull_request_review_id": 589751649,
    "id": 575453527,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ1MzUyNw==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);\n+    // - Then add it to a map to pass in to SignTransaction\n+    std::map<COutPoint, Coin> input_coins;\n+    input_coins.insert({outpoint_to_spend, utxo_to_spend});\n+    // - Default signature hashing type\n+    int nHashType = SIGHASH_ALL;\n+    std::map<int, std::string> input_errors;\n+    SignTransaction(mempool_txn, &keystore, input_coins, nHashType, input_errors);",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2021-02-12T18:51:46Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575453527",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453527"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575453527"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 269,
    "side": "RIGHT",
    "in_reply_to_id": 574409892
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453671",
    "pull_request_review_id": 589751865,
    "id": 575453671,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ1MzY3MQ==",
    "diff_hunk": "@@ -231,6 +231,50 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     return block;\n }\n \n+\n+CMutableTransaction TestChain100Setup::CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                                     int input_vout,\n+                                                                     CScript output_destination,\n+                                                                     CAmount output_amount)\n+{\n+    // Transaction we will submit to the mempool\n+    CMutableTransaction mempool_txn;\n+\n+    // Create an input\n+    COutPoint outpoint_to_spend = COutPoint(input_transaction->GetHash(), input_vout);\n+    CTxIn input(outpoint_to_spend, CScript(), CTxIn::SEQUENCE_FINAL);\n+    mempool_txn.vin.push_back(input);\n+\n+    // Create an output\n+    CTxOut output(output_amount, output_destination);\n+    mempool_txn.vout.push_back(output);\n+\n+    // Sign the transaction\n+    // - Add the signing key to a keystore\n+    FillableSigningProvider keystore;\n+    keystore.AddKey(coinbaseKey);\n+    // - Populate a CoinsViewCache with the unspent output\n+    CCoinsView coins_view;\n+    CCoinsViewCache coins_cache(&coins_view);\n+    AddCoins(coins_cache, *input_transaction.get(), /* check_for_overwrite */ false);\n+    // - Use GetCoin to properly populate utxo_to_spend,\n+    Coin utxo_to_spend;\n+    coins_cache.GetCoin(outpoint_to_spend, utxo_to_spend);\n+    // - Then add it to a map to pass in to SignTransaction\n+    std::map<COutPoint, Coin> input_coins;\n+    input_coins.insert({outpoint_to_spend, utxo_to_spend});\n+    // - Default signature hashing type\n+    int nHashType = SIGHASH_ALL;\n+    std::map<int, std::string> input_errors;\n+    SignTransaction(mempool_txn, &keystore, input_coins, nHashType, input_errors);\n+\n+    // Add transaction to the mempool\n+    TxValidationState state;\n+    WITH_LOCK(cs_main, AcceptToMemoryPool(*m_node.mempool.get(), state, MakeTransactionRef(mempool_txn), nullptr, false));",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2021-02-12T18:52:05Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575453671",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453671"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575453671"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 273,
    "side": "RIGHT",
    "in_reply_to_id": 574411812
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453883",
    "pull_request_review_id": 589752143,
    "id": 575453883,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTQ1Mzg4Mw==",
    "diff_hunk": "@@ -121,6 +121,11 @@ struct TestChain100Setup : public RegTestingSetup {\n     CBlock CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns,\n                                  const CScript& scriptPubKey);\n \n+    CMutableTransaction CreateValidMempoolTransaction(CTransactionRef input_transaction,\n+                                                      int input_vout,\n+                                                      CScript output_destination,\n+                                                      CAmount output_amount = CAmount(1 * COIN));",
    "path": "src/test/util/setup_common.h",
    "position": null,
    "original_position": 7,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "e7573304b7e112b6b7f49c79c25fce36a5440209",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "good point! extracted `input_signing_key` as a param to be passed in. ",
    "created_at": "2021-02-12T18:52:29Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575453883",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453883"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r575453883"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575453883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 124,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 141,
    "side": "RIGHT",
    "in_reply_to_id": 574417478
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576207710",
    "pull_request_review_id": 590495824,
    "id": 576207710,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjIwNzcxMA==",
    "diff_hunk": "@@ -203,9 +203,9 @@ std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n             strStamped.pop_back();\n             strStamped += strprintf(\".%06dZ\", nTimeMicros%1000000);\n         }\n-        int64_t mocktime = GetMockTime();\n-        if (mocktime) {\n-            strStamped += \" (mocktime: \" + FormatISO8601DateTime(mocktime) + \")\";\n+        std::chrono::seconds mocktime = GetMockTime();\n+        if (mocktime.count() == 0) {",
    "path": "src/logging.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "82de557f8c6452cbd83849422f43abc1a2d1e4f1",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't that be `!=` instead of `==`? Or:\r\n\r\n```suggestion\r\n        if (mocktime > 0) {\r\n```",
    "created_at": "2021-02-15T13:54:12Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576207710",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576207710"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576207710"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576207710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 207,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576209663",
    "pull_request_review_id": 590495824,
    "id": 576209663,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjIwOTY2Mw==",
    "diff_hunk": "@@ -203,9 +203,9 @@ std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n             strStamped.pop_back();\n             strStamped += strprintf(\".%06dZ\", nTimeMicros%1000000);\n         }\n-        int64_t mocktime = GetMockTime();\n-        if (mocktime) {\n-            strStamped += \" (mocktime: \" + FormatISO8601DateTime(mocktime) + \")\";\n+        std::chrono::seconds mocktime = GetMockTime();\n+        if (mocktime.count() == 0) {\n+            strStamped += \" (mocktime: \" + FormatISO8601DateTime(mocktime.count()) + \")\";",
    "path": "src/logging.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "82de557f8c6452cbd83849422f43abc1a2d1e4f1",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n            strStamped += \" (mocktime: \" + FormatISO8601DateTime(count_seconds(mocktime)) + \")\";\r\n```\r\n\r\nThis will prevent silent surprises if `GetMockTime()` is changed some day to return something else than `std::chrono::seconds`, e.g. `std::chrono:milliseconds`.",
    "created_at": "2021-02-15T13:57:13Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576209663",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576209663"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576209663"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576209663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 208,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576445111",
    "pull_request_review_id": 590774780,
    "id": 576445111,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjQ0NTExMQ==",
    "diff_hunk": "@@ -203,9 +203,9 @@ std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n             strStamped.pop_back();\n             strStamped += strprintf(\".%06dZ\", nTimeMicros%1000000);\n         }\n-        int64_t mocktime = GetMockTime();\n-        if (mocktime) {\n-            strStamped += \" (mocktime: \" + FormatISO8601DateTime(mocktime) + \")\";\n+        std::chrono::seconds mocktime = GetMockTime();\n+        if (mocktime.count() == 0) {",
    "path": "src/logging.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "82de557f8c6452cbd83849422f43abc1a2d1e4f1",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\ud83e\udd26\u200d\u2640\ufe0f good catch. ",
    "created_at": "2021-02-15T22:01:57Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576445111",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576445111"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576445111"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576445111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 207,
    "side": "RIGHT",
    "in_reply_to_id": 576207710
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576450338",
    "pull_request_review_id": 590780601,
    "id": 576450338,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjQ1MDMzOA==",
    "diff_hunk": "@@ -203,9 +203,9 @@ std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n             strStamped.pop_back();\n             strStamped += strprintf(\".%06dZ\", nTimeMicros%1000000);\n         }\n-        int64_t mocktime = GetMockTime();\n-        if (mocktime) {\n-            strStamped += \" (mocktime: \" + FormatISO8601DateTime(mocktime) + \")\";\n+        std::chrono::seconds mocktime = GetMockTime();\n+        if (mocktime.count() == 0) {",
    "path": "src/logging.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "82de557f8c6452cbd83849422f43abc1a2d1e4f1",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed. can't compare chrono time directly to an int, so I updated to `if (mocktime > 0s)` to keep the comparison in chronos. ",
    "created_at": "2021-02-15T22:19:06Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576450338",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576450338"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576450338"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576450338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 207,
    "side": "RIGHT",
    "in_reply_to_id": 576207710
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576450421",
    "pull_request_review_id": 590780709,
    "id": 576450421,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjQ1MDQyMQ==",
    "diff_hunk": "@@ -203,9 +203,9 @@ std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n             strStamped.pop_back();\n             strStamped += strprintf(\".%06dZ\", nTimeMicros%1000000);\n         }\n-        int64_t mocktime = GetMockTime();\n-        if (mocktime) {\n-            strStamped += \" (mocktime: \" + FormatISO8601DateTime(mocktime) + \")\";\n+        std::chrono::seconds mocktime = GetMockTime();\n+        if (mocktime.count() == 0) {\n+            strStamped += \" (mocktime: \" + FormatISO8601DateTime(mocktime.count()) + \")\";",
    "path": "src/logging.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "82de557f8c6452cbd83849422f43abc1a2d1e4f1",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "cool, didn't know about these helpers. updated. thanks!",
    "created_at": "2021-02-15T22:19:27Z",
    "updated_at": "2021-02-16T20:23:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576450421",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576450421"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r576450421"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576450421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 208,
    "side": "RIGHT",
    "in_reply_to_id": 576209663
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578691834",
    "pull_request_review_id": 593574649,
    "id": 578691834,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODY5MTgzNA==",
    "diff_hunk": "@@ -123,6 +123,7 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     m_node.mempool->addUnchecked(entry.Fee(50000).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n \n     std::unique_ptr<CBlockTemplate> pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n+    BOOST_REQUIRE_EQUAL(pblocktemplate->block.vtx.size(), 4);",
    "path": "src/test/miner_tests.cpp",
    "position": 4,
    "original_position": 4,
    "commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "original_commit_id": "1363b6c27dbd2614fd555d148ea624ed8b95f14e",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Somehow this leads to a \"comparison of integers of different signs\" on bitcoinbuilds.org:\r\nhttps://bitcoinbuilds.org/index.php?ansilog=982c61cf-6969-4001-bebc-dc215e5d29a4.log#l1906\r\nMaybe only happening on older boost versions?",
    "created_at": "2021-02-18T19:31:53Z",
    "updated_at": "2021-02-18T19:31:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r578691834",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578691834"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21121#discussion_r578691834"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21121"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578691834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 126,
    "original_line": 126,
    "side": "RIGHT"
  }
]