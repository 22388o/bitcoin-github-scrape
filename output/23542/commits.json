[
  {
    "sha": "634f2838ee137234093a1fc89162f395366a387f",
    "node_id": "C_kwDOABII59oAKDYzNGYyODM4ZWUxMzcyMzQwOTNhMWZjODkxNjJmMzk1MzY2YTM4N2Y",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-11-18T08:19:09Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-11-19T10:43:53Z"
      },
      "message": "net: open p2p connections to nodes that listen on non-default ports\n\nBy default, for mainnet, the p2p listening port is 8333. Bitcoin Core\nhas a strong preference for only connecting to nodes that listen on that\nport.\n\nRemove that preference because connections over clearnet that involve\nport 8333 make it easy to detect, analyze, block or divert Bitcoin p2p\ntraffic before the connection is even established (at TCP SYN time).\n\nFor further justification see the OP of:\nhttps://github.com/bitcoin/bitcoin/pull/23306",
      "tree": {
        "sha": "3aa5a9d96306d4ed815f7e75407266eadb02114e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3aa5a9d96306d4ed815f7e75407266eadb02114e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/634f2838ee137234093a1fc89162f395366a387f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmGXf+sACgkQVN8G9ktV\ny78I0yAAj37pfaMU5OXEHYuSUVthPCp7dz/R4ufgphFyu/kAaq+GWhq8Lhm1rU9I\nZ0+MpIGeQgUixw8xRCSu6J2q6Ey8O8g9n/A/h4yNRvGDWy+B+HGXONYBNP5kc/na\nsEKswIkcGI/JV7DqmzMJeliOoaeCVCVCFa80Zn/C8/e3AcWJdCKjau03LQT4ZOcN\nJfEEd1KQ/+CvqT7vxcO3vqB/vngPr2efm0FFdiV1XqwVOZyvfs6u9ilpP/WFIok8\n9pVV7DFwmrNdig158M8jUqZQJD11tYoJU0eLX0qr14pi8Vp8K6EqxZOIf+fjLoXn\nQGEIRqvr1aqiJSUSk0yGq69+18TxD4mCbwmiUg5Zc+tgcxqE2BhyrkY1NCelmvph\nhMo3/qM3AcC6jV0GJUszeWg8G6a5ymIS2Msq2aRQUXe9AfQZdn81KOotRjtQr++a\nMuo4oVVWJM5ocif6z1jGVOs1k4fsrBH6989NkTeZvK/7E+iY/449fUg9N9IExTOW\nf3z712Yh7p8Gvxw9ybSnsiq2zB4DTzIoldqebsQrEQKuNiWRyESd9WA9TNSxkiWV\naHALbX1OluUwBcwkJBnN6KFzHjFdtLQ2GLOdLJiyXm0y3GX+nn5j6qHWPIMzz7wB\n217MpIyW+er+4BiZ1p2t6UbimB9q31nVkfk9y1pguBcxZDTy3mVN9XjTNnptMana\nbydyz/BwKutkiIGxVrRy6+Lwq4DZMGRG0+OlMji05/Y+oq+J/cLrABbrgDx72G4s\nGSMkMtMoTbD7e4AWR+oeqhVfU1/REVUVVJw+4ob0SClOKrR6/S61BOD3S1+wVmrQ\nIebH6M7w3SL78Dplw3zFXfUaQuuiSkDHrHt82YeRxyNdhZDhf/qEgCr7dxR6EQs/\n28ng1dePHnDaLf51SMrybJAziEd3Yo+mM+l/Li3ZtjXzCau6sDfanHeodXDDd+92\nXiAa49+9E+0nS6/D+e5txPT6up3Cd0bSyIjq9iY06hypj+cUCYHKlz6vOl4rUR4Y\nlMRvfmVpKVRqUKJeC/EOPMi7ukCKJQklkjc5NVBN2dcoQC6t7gN15Y0ObCCTkYTb\nVBDrFyuMtzfcrnq2svtlVDtAe3MTYheRFhl+qELk2KNfJ5GnYmDJiq/CryPKrRxb\nRa6Tf5aQ1DZK82oPcWe7/xHcVBlHbp+XBy2dMgh6NkjZLWKBL6Tp9j9Y6/o6Oqx6\nmSyC5ziBrzpVb2R7m7g58WSAvQ3z/Wi7H/A4hY/V9PTzW98T27E46u79UteRNe7u\ndD7Ot1NA42/hRLPz6vBHAgVPguZ9I6SyguvnmrI/VUfhb02Pkd62DLFNa6aLVA9p\nZfrx3L7BdqrMWkBx2OF6WTrBPDWTYg==\n=sr26\n-----END PGP SIGNATURE-----",
        "payload": "tree 3aa5a9d96306d4ed815f7e75407266eadb02114e\nparent fe03f7a37fd0ef05149161f6b95a25493e1fe38f\nauthor Vasil Dimov <vd@FreeBSD.org> 1637223549 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1637318633 +0100\n\nnet: open p2p connections to nodes that listen on non-default ports\n\nBy default, for mainnet, the p2p listening port is 8333. Bitcoin Core\nhas a strong preference for only connecting to nodes that listen on that\nport.\n\nRemove that preference because connections over clearnet that involve\nport 8333 make it easy to detect, analyze, block or divert Bitcoin p2p\ntraffic before the connection is even established (at TCP SYN time).\n\nFor further justification see the OP of:\nhttps://github.com/bitcoin/bitcoin/pull/23306\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/634f2838ee137234093a1fc89162f395366a387f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/634f2838ee137234093a1fc89162f395366a387f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/634f2838ee137234093a1fc89162f395366a387f/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe03f7a37fd0ef05149161f6b95a25493e1fe38f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe03f7a37fd0ef05149161f6b95a25493e1fe38f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe03f7a37fd0ef05149161f6b95a25493e1fe38f"
      }
    ],
    "stats": {
      "total": 138,
      "additions": 131,
      "deletions": 7
    },
    "files": [
      {
        "sha": "94bbef612eca8fdd48886c6b06b444d95b35aded",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/634f2838ee137234093a1fc89162f395366a387f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/634f2838ee137234093a1fc89162f395366a387f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=634f2838ee137234093a1fc89162f395366a387f",
        "patch": "@@ -444,7 +444,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-peerbloomfilters\", strprintf(\"Support filtering of blocks and transaction with bloom filters (default: %u)\", DEFAULT_PEERBLOOMFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-peerblockfilters\", strprintf(\"Serve compact block filters to peers per BIP 157 (default: %u)\", DEFAULT_PEERBLOCKFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-permitbaremultisig\", strprintf(\"Relay non-P2SH multisig (default: %u)\", DEFAULT_PERMIT_BAREMULTISIG), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port>. Nodes not using the default ports (default: %u, testnet: %u, signet: %u, regtest: %u) are unlikely to get incoming connections. Not relevant for I2P (see doc/i2p.md).\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), signetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-port=<port>\", \"Listen for connections on <port>. Not relevant for I2P (see doc/i2p.md).\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-proxy=<ip:port>\", \"Connect through SOCKS5 proxy, set -noproxy to disable (default: disabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-proxyrandomize\", strprintf(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\", DEFAULT_PROXYRANDOMIZE), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-seednode=<ip>\", \"Connect to a node to retrieve peer addresses, and disconnect. This option can be specified multiple times to connect to multiple nodes.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n@@ -1770,6 +1770,13 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         if (index == std::string::npos) {\n             if (Lookup(bind_arg, bind_addr, GetListenPort(), false)) {\n                 connOptions.vBinds.push_back(bind_addr);\n+                if (IsBadPort(bind_addr.GetPort())) {\n+                    InitWarning(strprintf(\n+                        _(\"-bind request to listen on port %u. This port is considered \\\"bad\\\" and \"\n+                          \"thus it is unlikely that any Bitcoin Core peers connect to it. See \"\n+                          \"https://fetch.spec.whatwg.org/#port-blocking\"),\n+                        bind_addr.GetPort()));\n+                }\n                 continue;\n             }\n         } else {"
      },
      {
        "sha": "869364d10dff8203b6662b9c2997b57cb8c20795",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/634f2838ee137234093a1fc89162f395366a387f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/634f2838ee137234093a1fc89162f395366a387f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=634f2838ee137234093a1fc89162f395366a387f",
        "patch": "@@ -2084,12 +2084,8 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 continue;\n             }\n \n-            // Do not allow non-default ports, unless after 50 invalid\n-            // addresses selected already. This is to prevent malicious peers\n-            // from advertising themselves as a service on another host and\n-            // port, causing a DoS attack as nodes around the network attempt\n-            // to connect to it fruitlessly.\n-            if (addr.GetPort() != Params().GetDefaultPort(addr.GetNetwork()) && nTries < 50) {\n+            // Do not connect to bad ports, unless 50 invalid addresses have been selected already.\n+            if (IsBadPort(addr.GetPort()) && (addr.IsIPv4() || addr.IsIPv6()) && nTries < 50) {\n                 continue;\n             }\n "
      },
      {
        "sha": "010ff415c556e6b8c443253d64c8bd677992ff87",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/634f2838ee137234093a1fc89162f395366a387f/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/634f2838ee137234093a1fc89162f395366a387f/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=634f2838ee137234093a1fc89162f395366a387f",
        "patch": "@@ -755,3 +755,91 @@ void InterruptSocks5(bool interrupt)\n {\n     interruptSocks5Recv = interrupt;\n }\n+\n+bool IsBadPort(uint16_t port)\n+{\n+    switch (port) {\n+    case 1:     // tcpmux\n+    case 7:     // echo\n+    case 9:     // discard\n+    case 11:    // systat\n+    case 13:    // daytime\n+    case 15:    // netstat\n+    case 17:    // qotd\n+    case 19:    // chargen\n+    case 20:    // ftp data\n+    case 21:    // ftp access\n+    case 22:    // ssh\n+    case 23:    // telnet\n+    case 25:    // smtp\n+    case 37:    // time\n+    case 42:    // name\n+    case 43:    // nicname\n+    case 53:    // domain\n+    case 69:    // tftp\n+    case 77:    // priv-rjs\n+    case 79:    // finger\n+    case 87:    // ttylink\n+    case 95:    // supdup\n+    case 101:   // hostname\n+    case 102:   // iso-tsap\n+    case 103:   // gppitnp\n+    case 104:   // acr-nema\n+    case 109:   // pop2\n+    case 110:   // pop3\n+    case 111:   // sunrpc\n+    case 113:   // auth\n+    case 115:   // sftp\n+    case 117:   // uucp-path\n+    case 119:   // nntp\n+    case 123:   // NTP\n+    case 135:   // loc-srv /epmap\n+    case 137:   // netbios\n+    case 139:   // netbios\n+    case 143:   // imap2\n+    case 161:   // snmp\n+    case 179:   // BGP\n+    case 389:   // ldap\n+    case 427:   // SLP (Also used by Apple Filing Protocol)\n+    case 465:   // smtp+ssl\n+    case 512:   // print / exec\n+    case 513:   // login\n+    case 514:   // shell\n+    case 515:   // printer\n+    case 526:   // tempo\n+    case 530:   // courier\n+    case 531:   // chat\n+    case 532:   // netnews\n+    case 540:   // uucp\n+    case 548:   // AFP (Apple Filing Protocol)\n+    case 554:   // rtsp\n+    case 556:   // remotefs\n+    case 563:   // nntp+ssl\n+    case 587:   // smtp (rfc6409)\n+    case 601:   // syslog-conn (rfc3195)\n+    case 636:   // ldap+ssl\n+    case 989:   // ftps-data\n+    case 990:   // ftps\n+    case 993:   // ldap+ssl\n+    case 995:   // pop3+ssl\n+    case 1719:  // h323gatestat\n+    case 1720:  // h323hostcall\n+    case 1723:  // pptp\n+    case 2049:  // nfs\n+    case 3659:  // apple-sasl / PasswordServer\n+    case 4045:  // lockd\n+    case 5060:  // sip\n+    case 5061:  // sips\n+    case 6000:  // X11\n+    case 6566:  // sane-port\n+    case 6665:  // Alternate IRC [Apple addition]\n+    case 6666:  // Alternate IRC [Apple addition]\n+    case 6667:  // Standard IRC [Apple addition]\n+    case 6668:  // Alternate IRC [Apple addition]\n+    case 6669:  // Alternate IRC [Apple addition]\n+    case 6697:  // IRC + TLS\n+    case 10080: // Amanda\n+        return true;\n+    }\n+    return false;\n+}"
      },
      {
        "sha": "eca42db6065fda0d75ad15b6ea79812564625632",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/634f2838ee137234093a1fc89162f395366a387f/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/634f2838ee137234093a1fc89162f395366a387f/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=634f2838ee137234093a1fc89162f395366a387f",
        "patch": "@@ -246,4 +246,17 @@ void InterruptSocks5(bool interrupt);\n  */\n bool Socks5(const std::string& strDest, uint16_t port, const ProxyCredentials* auth, const Sock& socket);\n \n+/**\n+ * Determine if a port is \"bad\" from the perspective of attempting to connect\n+ * to a node on that port.\n+ * See\n+ * https://fetch.spec.whatwg.org/#port-blocking\n+ * https://chromium.googlesource.com/chromium/src.git/+/refs/heads/main/net/base/port_util.cc\n+ * https://hg.mozilla.org/mozilla-central/file/tip/netwerk/base/nsIOService.cpp\n+ * https://github.com/bitcoin/bitcoin/pull/23306#issuecomment-947516736\n+ * @param[in] port Port to check.\n+ * @return true if the port is bad\n+ */\n+bool IsBadPort(uint16_t port);\n+\n #endif // BITCOIN_NETBASE_H"
      },
      {
        "sha": "8e5e623193ffa7a93cb88010e3c5f88b603f52f1",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/634f2838ee137234093a1fc89162f395366a387f/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/634f2838ee137234093a1fc89162f395366a387f/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=634f2838ee137234093a1fc89162f395366a387f",
        "patch": "@@ -576,4 +576,24 @@ BOOST_AUTO_TEST_CASE(caddress_unserialize_v2)\n     BOOST_CHECK(fixture_addresses == addresses_unserialized);\n }\n \n+BOOST_AUTO_TEST_CASE(isbadport)\n+{\n+    BOOST_CHECK(IsBadPort(1));\n+    BOOST_CHECK(IsBadPort(22));\n+    BOOST_CHECK(IsBadPort(6000));\n+\n+    BOOST_CHECK(!IsBadPort(80));\n+    BOOST_CHECK(!IsBadPort(443));\n+    BOOST_CHECK(!IsBadPort(8333));\n+\n+    // Check all ports, there must be 80 bad ports in total.\n+    size_t total_bad_ports{0};\n+    for (uint16_t port = std::numeric_limits<uint16_t>::max(); port > 0; --port) {\n+        if (IsBadPort(port)) {\n+            ++total_bad_ports;\n+        }\n+    }\n+    BOOST_CHECK_EQUAL(total_bad_ports, 80);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "d627f223e8af53c0e49b5f225b3c30566ea980a3",
    "node_id": "C_kwDOABII59oAKGQ2MjdmMjIzZThhZjUzYzBlNDliNWYyMjViM2MzMDU2NmVhOTgwYTM",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-11-29T11:00:40Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-11-29T11:10:20Z"
      },
      "message": "net: add CServiceHash constructor so the caller can provide the salts\n\nThis new constructor will be useful if we just want to hash a `CService`\nobject without the two `GetRand()` calls (in `RelayAddress()` in a\nsubsequent commit).",
      "tree": {
        "sha": "6ee4e06435b6d6d524114b1b729a5719ba201e17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ee4e06435b6d6d524114b1b729a5719ba201e17"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d627f223e8af53c0e49b5f225b3c30566ea980a3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmGktRwACgkQVN8G9ktV\ny7+TFSAAg42LxrBpfNAWmPHG1oss+PE51XNXvpOKxos0+jaqTPbqEwroxDxvLSkG\nRCgUm+cs3lCtGtfXvpGthKraoaJbFZwtP81p5ssNtuu74OOFuKgkthjF9FWMNIha\nLHucX9V8tzOJmKYhqbkreQ4YRRPz4uhZP+mFxZdif1gdB8uM08I/jxHApmTTkVGD\nBkqfgnfjAx1PdEPILJ0QSl+XW8hWdTpvDS9ltRVKYrpHRlSPqYr4+muuvu22DQ7F\n1LWSn0EhTea9FIeRFqYh7ohOhGd9OAusPcCDpmBcJi6QmYdT98sSrQYE+NAtQ4VN\n+JrS6A8IlpLnFScbwfQXE1B0tYcJPPqK2mwblsYN9lGMDNJQQQD4R56ZFV8lsWoE\nA/ImnkILJz2GHhT5dYJJK8y8wYz6TaeH01Y1l16/w47YQk3w82C9W6FCfbt3o44z\nnWUX23+1PweW1Mn5jFna9gkswGapKtkFi5JEjPthZyhHHqmX1fzSk6+mbIS2m1Ff\ngRHwpRt3tMBtF/J9JLg15tHrcSbGHTmYSrps9ipe5Lv5HOi2v7ffkxiVMlYm77l4\no7FKCny+oBxCeWMSteHtK1HpiZeHUb4cTmmRzZuSGToqaRtiUcHNTxvz7/myTMTL\nrzViWNFLhfmZFp0bB3CHHoAswj4ylJLevNr453xiSpe0XlAktilyBEwVELeOYKa3\nhyVYGDU7NYC6csiA906AK4KVz/PRPzld3bxS9ysn9B+cQBrpyk2ntJDXeTpPQg39\nkv8tYBMTraigY3FleBXPr8wedDjMLIJ3NWrXDTnPtPY0LP0dcJID40bOeE8IDLUW\nzNxPiBO0chbExItyFgnkYfu61dxKNWVTgMc3ERTOTaHb7nJoQZ+F15omkkq5z4SY\n7hghyjaQmyrkRQWsW5csOVPbMqHHw9HECVKVIQ2brlOIX2zehG0Hp09+EU6JJLGB\n5MOLPVEiesafTvUZ+FpoiJN78W9M1hX5s04lnNcwOs5cTHXxZaJdZg0rVR3UnSD3\nDsJUBzGYM5ecj/38EZhE8XGArkxdPrtwK3kWX/QgWR0A5Cxja1Yls6yvgQ9iJ5sQ\nTcwUDolipWaoReKNcrPKofYC3T7sbHC75IPtg+NiU3x309SeqDhmCU9DZOccn7fn\nOGccbCTDday3bvauaq/52R/1UWU8czAvCArRvrhUcew3SAg9oX/04Nk6/TX3EmhX\nZ87pj7AearHF9c5keWuSUwSo84am2DcH7gVIErHrvr9rNud4fsV6+6rTGknWD69n\nNreG8J0cxQKxySZUmGOieL7v2AHdaaDXzjmvFIJISszN0mCm45kAmBIisimaqvvW\nh1ujVtrSDrSmzWNZzUH5bGHmruvJvA==\n=xc+Y\n-----END PGP SIGNATURE-----",
        "payload": "tree 6ee4e06435b6d6d524114b1b729a5719ba201e17\nparent 634f2838ee137234093a1fc89162f395366a387f\nauthor Vasil Dimov <vd@FreeBSD.org> 1638183640 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1638184220 +0100\n\nnet: add CServiceHash constructor so the caller can provide the salts\n\nThis new constructor will be useful if we just want to hash a `CService`\nobject without the two `GetRand()` calls (in `RelayAddress()` in a\nsubsequent commit).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d627f223e8af53c0e49b5f225b3c30566ea980a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d627f223e8af53c0e49b5f225b3c30566ea980a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d627f223e8af53c0e49b5f225b3c30566ea980a3/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "634f2838ee137234093a1fc89162f395366a387f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/634f2838ee137234093a1fc89162f395366a387f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/634f2838ee137234093a1fc89162f395366a387f"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c78f611b82f6e7ef10ae7d94c230d80e13d17d46",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d627f223e8af53c0e49b5f225b3c30566ea980a3/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d627f223e8af53c0e49b5f225b3c30566ea980a3/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=d627f223e8af53c0e49b5f225b3c30566ea980a3",
        "patch": "@@ -562,6 +562,14 @@ class CService : public CNetAddr\n class CServiceHash\n {\n public:\n+    CServiceHash()\n+        : m_salt_k0{GetRand(std::numeric_limits<uint64_t>::max())},\n+          m_salt_k1{GetRand(std::numeric_limits<uint64_t>::max())}\n+    {\n+    }\n+\n+    CServiceHash(uint64_t salt_k0, uint64_t salt_k1) : m_salt_k0{salt_k0}, m_salt_k1{salt_k1} {}\n+\n     size_t operator()(const CService& a) const noexcept\n     {\n         CSipHasher hasher(m_salt_k0, m_salt_k1);\n@@ -572,8 +580,8 @@ class CServiceHash\n     }\n \n private:\n-    const uint64_t m_salt_k0 = GetRand(std::numeric_limits<uint64_t>::max());\n-    const uint64_t m_salt_k1 = GetRand(std::numeric_limits<uint64_t>::max());\n+    const uint64_t m_salt_k0;\n+    const uint64_t m_salt_k1;\n };\n \n #endif // BITCOIN_NETADDRESS_H"
      },
      {
        "sha": "56accbb3b9a41bbe01a0d53e1e97d50d2a988f5d",
        "filename": "src/test/fuzz/netaddress.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d627f223e8af53c0e49b5f225b3c30566ea980a3/src/test/fuzz/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d627f223e8af53c0e49b5f225b3c30566ea980a3/src/test/fuzz/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/netaddress.cpp?ref=d627f223e8af53c0e49b5f225b3c30566ea980a3",
        "patch": "@@ -84,6 +84,8 @@ FUZZ_TARGET(netaddress)\n     (void)service.ToString();\n     (void)service.ToStringIPPort();\n     (void)service.ToStringPort();\n+    (void)CServiceHash()(service);\n+    (void)CServiceHash(0, 0)(service);\n \n     const CNetAddr other_net_addr = ConsumeNetAddr(fuzzed_data_provider);\n     (void)net_addr.GetReachabilityFrom(&other_net_addr);"
      }
    ]
  },
  {
    "sha": "b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3",
    "node_id": "C_kwDOABII59oAKGIzYTFhM2JhZmMxMDRkOGY1ZWViNDE5YTU5YjBkOWRiY2NhNzdhYjM",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-11-29T11:05:05Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-11-29T11:10:21Z"
      },
      "message": "net: include the port when deciding a relay destination\n\nIn `PeerManagerImpl::RelayAddress()` we used just the hash of the\naddress that is being relayed to decide where to relay it to. Include\nthe port in that hash, so that e.g. `1.1.1.1:5555` and `1.1.1.1:6666`\nget relayed to different peers. Those are two different, distinct\nservices after all.",
      "tree": {
        "sha": "070d5b86911c5ac74b24e8cfdb54e37ec1eae39c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/070d5b86911c5ac74b24e8cfdb54e37ec1eae39c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmGktR0ACgkQVN8G9ktV\ny79VYx/9FWkNpVN+WLSonjNjNLJS8TUqV3U5/qPoCdPHswtDgzFfmJ9akbeY/gAd\n18gTUU6Z6ZTa2gjq7oLz1xvtJ5pHOARBvpezOu4sqdTPnOexh3WW2Xuw3PK0slGP\nMCROmVm4SXS0mflVHUufbSMgtUa/uwW9O0QUfsGjn+X5qsTIN2KlPnsK0YGTRS5u\n2jv8dlNogYioy3U3hX/jt77gXUQysSg2/vU29BJqa6Yq1Q3F9ghcZH0exa+8OUTw\nFc0WGI9oWn+EFopQIY/ISHl2TjR4WI4JAEOo7hKISDVTY5akN0XjhJ4evr6Nqjhb\nXOCQYVoy4qD1gT/o8hNP6wX0PLgCiDvSrKzRVsr+nrQ8l9pQ8mMgYUzKyx0e84Ie\nPpW4kgG5scuaESBIjmn67LlZbsdJ5/F9G1ro3VM0uJdXPkTxfu2hdOpg0FvwadF0\nxR1bECO75UAmFoVjMCLSmOnzRf4oZH1MUs1jhhyyUe6b9y+DZ6riEKY0f9VrAjDo\neXHoPTiuhvy6Csn89lRiVjtUB2DBrFtQ2SJP3A5qrAaszj1D6dqpqGcPUmEB031H\ndbEGfS3F48ccUW9sWxaBBKeaR919cRHMLwpDHr4+dqLy99qx3SEJbeHcPX9nBkJR\nVbMkrFPZ5EQEKnIPiPV72h3l3z9WKQB0VBDheksyqhPdDBrPF+Ji5du7yHZSCBg/\nmeqlJdFrvjSCftw/m/Az/LuvWcT4JEmKbGow/nIGlo134QCXYgsPDCq9jrSjg1hU\nfpoFR85q4NYHMc7HzK0KJefpUnGLVXY9cTgynnGoXy6XZnxYdXdX1I/JgVeKcteK\nP1bKHFy2WdDK8KlM1YWex6P5NmN2PAJKf7+tCAwvnTRoS5B82fhs8LUgz2ymiz8r\nyp0bITRT+Jvc7Ngu+E6DWtK8l3ECvRc1Zx6dw9mTnQ3G26AUYXSnASdDo1zQcOg3\nVc72HDSb2Igs07P5KrWhd9UXxQq9HW8ed7Ium6fgQySGN+I5sx3g0TuQHnCqd2tc\nCrHQ+PxVmFEtiTfJ6ZDKljjwCfAtLesYYQOmIRvH915tgqb6crwtWxfBV2toaq/9\nN3V4HTe49spAZ6TCpeYJ8ZEkoPAsBKGXRTFZOldJBCbMhIKsH6jVbIXR0Mo0kTl2\nwxVC6eczQi65Vez/jCtDScmQBxS0MQfMt0DUVdKnRm0vtPJPo37PcR/HaJyNL5tQ\nDf8GWVCZSUjwyiblerLd5VdWTAxUS0084OUaXm7lcxKwgVM4jNHS/UbUwieeZMAG\noblJEWWHcGHNONUfpazP/zXM2m1Pwwy/Mkd+LfjdH43y9eXLq/MzxhezViUVXUB8\nR3frxSFlSh9XW/Vqqg29KsujVpEdNw==\n=ERQN\n-----END PGP SIGNATURE-----",
        "payload": "tree 070d5b86911c5ac74b24e8cfdb54e37ec1eae39c\nparent d627f223e8af53c0e49b5f225b3c30566ea980a3\nauthor Vasil Dimov <vd@FreeBSD.org> 1638183905 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1638184221 +0100\n\nnet: include the port when deciding a relay destination\n\nIn `PeerManagerImpl::RelayAddress()` we used just the hash of the\naddress that is being relayed to decide where to relay it to. Include\nthe port in that hash, so that e.g. `1.1.1.1:5555` and `1.1.1.1:6666`\nget relayed to different peers. Those are two different, distinct\nservices after all.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d627f223e8af53c0e49b5f225b3c30566ea980a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d627f223e8af53c0e49b5f225b3c30566ea980a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d627f223e8af53c0e49b5f225b3c30566ea980a3"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ddac6caca3ddcda5e20ee9a5cd955c280382c312",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3",
        "patch": "@@ -1707,8 +1707,10 @@ void PeerManagerImpl::RelayAddress(NodeId originator,\n     // Relay to a limited number of other nodes\n     // Use deterministic randomness to send to the same nodes for 24 hours\n     // at a time so the m_addr_knowns of the chosen nodes prevent repeats\n-    uint64_t hashAddr = addr.GetHash();\n-    const CSipHasher hasher = m_connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24 * 60 * 60));\n+    const uint64_t hash_addr = CServiceHash(0, 0)(addr);\n+    const CSipHasher hasher = m_connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY)\n+                                  .Write(hash_addr << 32)\n+                                  .Write((GetTime() + hash_addr) / (24 * 60 * 60));\n     FastRandomContext insecure_rand;\n \n     // Relay reachable addresses to 2 peers. Unreachable addresses are relayed randomly to 1 or 2 peers."
      }
    ]
  },
  {
    "sha": "0671bc5313b0a5fd125ef40c7ed4590bdca6b347",
    "node_id": "C_kwDOABII59oAKDA2NzFiYzUzMTNiMGE1ZmQxMjVlZjQwYzdlZDQ1OTBiZGNhNmIzNDc",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-11-29T11:09:33Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2021-11-29T11:10:21Z"
      },
      "message": "net: remove unused CNetAddr::GetHash()",
      "tree": {
        "sha": "84109d683ca59e0ff450f2c5acc1a108975872fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84109d683ca59e0ff450f2c5acc1a108975872fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0671bc5313b0a5fd125ef40c7ed4590bdca6b347",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmGktR4ACgkQVN8G9ktV\ny79fJCAAoSCih5DFwPEXW9f3t9mvvhwXEm734a6o5/ZphyQbIHfMXoG1HHPMbNEn\nS/Zas3XR/2+/SqxxR3DkFHljsIXmrOGAklLH3oV5QurUPmNNmg+qP8xLLlCNyK41\nkNMcSwFtPCo8UmJSunTapSkX55MdkWoZoOjXogT8STSj/VdP7iBxKxVh8DRstXtK\nLKrqj+O5ZWEBsXekOEa61BXhXSGS7+i26koQ9QNGPgF0JfkvMxvpZ3Bt+sF553Rz\nrw6LP6MH9XV/YVcb38/Z3Rb3VjYJdP5lVdaUqxdvAROqx6xJTQS+iUdY5G6g+xqo\nsDp0bE5jzUgHNcljIZNJ9oKJ2jS+IeJNdIq6xQF+N+Fw2oVxrERQwgZeQKl+S4YS\nbVEFre6Cxypu/pjmMFgGM+rvMNo0axeJFA6rvjDguPNXnKanp3ym/ttgePMNKn9l\nM7N4yzplMduzsDn2jbVJeT/pnk52D9IEG2PO8e+XWJ+9S9hZjz0Da5vsyhMtpoOX\nBePFdborgnagYxPo4d6BvgIH4HLfeo/tT+MrtsiwOH9/A7U4cKuEkW0k4CN84HI8\n+2oi3ZckmuZXcg4RESjUT655USVjr+w89vhZpknItB4CPeFZFrfAHyboQ03k03ln\nxKQ+oz9w6PcdJbe0mjOWqo/WGueX0NSXA4WXCIXH4qCF1ZG+WKx9KtA9lU9JKq3t\n/DMNQjGFJ/BtlnlBxddPqzFVHLdp4D5pjTsJERN2qRvb8snIeX2Z1sc582XK5p8s\n5xxI5RjV4QzboL2Mx+hoHIgf3xBCxgrulPgiBJLmDqUw9Hjqf5Y5h0ZHS06HXJcb\nDIeEjd69FAjUqjGfanmi1UUOcKBbXNVwn5UdYFC4FfSS23UkTDUaW9vSkYtvNt/Q\nnKPosE0Ee7/v4AH+P2cc+seLNCoszyLxNf/780MYyQrKgPGExzSUAttxG5oSc3w3\n6/98gAfp1ZQI1pYwLt6+jJ2PPcJ5rkFWXLNiDyem1aEMP08YrdGFGs76QSOnjm/u\nwNI0HVaw0qtXeXYKKETP61MnX5rmQFyB/clFOjlglxu22X80ELhPGLYXqiqjSbBU\niU4H97+TC5cDSRX6VlBDT8pdR2kpiSXUX4b139OOQJaM3PpzW8dWnAnrCdo1UNPR\nzDHlECDSFHXcTkJc4ziPSDY9TiwGL36F+GtYbTWzccUM36NF8+oekZECNP/Pksfm\n7GYdIvsb987+aFngwmdE32pBZkUifKGvaZ4uQxs8cuhSCX01tglCNoTC4sEz/sSD\n0sd/JI4dXXoirXYgLxYB1CVmU2uI0aVzjLS6sv5MlVVL7QJFNICTFQaIMjUynKJk\nGfPnGeq0Nah9IljCUGh1LdWe4V0Jdg==\n=zr1o\n-----END PGP SIGNATURE-----",
        "payload": "tree 84109d683ca59e0ff450f2c5acc1a108975872fa\nparent b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3\nauthor Vasil Dimov <vd@FreeBSD.org> 1638184173 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1638184221 +0100\n\nnet: remove unused CNetAddr::GetHash()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0671bc5313b0a5fd125ef40c7ed4590bdca6b347",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0671bc5313b0a5fd125ef40c7ed4590bdca6b347",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0671bc5313b0a5fd125ef40c7ed4590bdca6b347/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b3a1a3bafc104d8f5eeb419a59b0d9dbcca77ab3"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 0,
      "deletions": 10
    },
    "files": [
      {
        "sha": "6ec3894a06dec813a41966dd40e1194b72be7903",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0671bc5313b0a5fd125ef40c7ed4590bdca6b347/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0671bc5313b0a5fd125ef40c7ed4590bdca6b347/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=0671bc5313b0a5fd125ef40c7ed4590bdca6b347",
        "patch": "@@ -833,14 +833,6 @@ std::vector<unsigned char> CNetAddr::GetAddrBytes() const\n     return std::vector<unsigned char>(m_addr.begin(), m_addr.end());\n }\n \n-uint64_t CNetAddr::GetHash() const\n-{\n-    uint256 hash = Hash(m_addr);\n-    uint64_t nRet;\n-    memcpy(&nRet, &hash, sizeof(nRet));\n-    return nRet;\n-}\n-\n // private extensions to enum Network, only returned by GetExtNetwork,\n // and only used in GetReachabilityFrom\n static const int NET_UNKNOWN = NET_MAX + 0;"
      },
      {
        "sha": "303a5042514f77386d9b536bf0f3aeac1174dac6",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0671bc5313b0a5fd125ef40c7ed4590bdca6b347/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0671bc5313b0a5fd125ef40c7ed4590bdca6b347/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=0671bc5313b0a5fd125ef40c7ed4590bdca6b347",
        "patch": "@@ -194,7 +194,6 @@ class CNetAddr\n     enum Network GetNetwork() const;\n     std::string ToString() const;\n     std::string ToStringIP() const;\n-    uint64_t GetHash() const;\n     bool GetInAddr(struct in_addr* pipv4Addr) const;\n     Network GetNetClass() const;\n "
      },
      {
        "sha": "35e6688c6134faa95ccce59e9618ed1d442ed32a",
        "filename": "src/test/fuzz/netaddress.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0671bc5313b0a5fd125ef40c7ed4590bdca6b347/src/test/fuzz/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0671bc5313b0a5fd125ef40c7ed4590bdca6b347/src/test/fuzz/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/netaddress.cpp?ref=0671bc5313b0a5fd125ef40c7ed4590bdca6b347",
        "patch": "@@ -16,7 +16,6 @@ FUZZ_TARGET(netaddress)\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n \n     const CNetAddr net_addr = ConsumeNetAddr(fuzzed_data_provider);\n-    (void)net_addr.GetHash();\n     (void)net_addr.GetNetClass();\n     if (net_addr.GetNetwork() == Network::NET_IPV4) {\n         assert(net_addr.IsIPv4());"
      }
    ]
  }
]