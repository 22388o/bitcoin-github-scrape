[
  {
    "sha": "f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDZjNWE3ZWVkNTRmNTYyNTU1YjU5NDViMWQwMmZmZWFhMzFkZGIw",
    "commit": {
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2019-08-05T16:39:53Z"
      },
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2019-08-05T16:39:53Z"
      },
      "message": "GOAL: Make the flag *fDiscover* an instance variable of CConnman\n\n REFEERS TO: #14210\n\n https://github.com/bitcoin/bitcoin/issues/14210\n\n - net.h, net.cpp : Removed global flag bool fDiscover\n - net.h, net.cpp : Added field bool fDiscover = true to struct CConnman.Options\n - net.h, net.cpp : Added instance variable bool fDiscover and method bool isDiscover() to CConnman class\n - net.h, net.cpp : Added bool fDiscover to signatures of AddLocal, AdvertiseLocal and IsPeerAddrLocalGood\n - net.h, net.cpp : ThreadMapPort reads fDiscover from the command line, which defaults to *true*\n\n - test/net_tests.cpp : Test case LocalAddress_BasicLifecycle runs with fDiscovery = true\n\n - net_processing.cpp : Made PeerLogicValidation use CConnman.isDiscover()\n\n - torcontrol.cpp : Added instance variable bool fDiscover to TorController class\n - torcontrol.cpp : TorControllerThread reads fDiscover from the command line, which defaults to *true*\n\n - init.h : AppInitMain reads bool fDiscover from the command line and sets CConnman.Option.fDiscovery",
      "tree": {
        "sha": "f3e339f68bedbf7362d11fcf18f17c04106f6b56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3e339f68bedbf7362d11fcf18f17c04106f6b56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/comments",
    "author": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a3d8b83571205b8329d4ee25537e3cc4397c3b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a3d8b83571205b8329d4ee25537e3cc4397c3b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a3d8b83571205b8329d4ee25537e3cc4397c3b8"
      }
    ],
    "stats": {
      "total": 81,
      "additions": 47,
      "deletions": 34
    },
    "files": [
      {
        "sha": "339b33ccc47829150975078f323f329e2c3b70e5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
        "patch": "@@ -1392,13 +1392,13 @@ bool AppInitMain(InitInterfaces& interfaces)\n \n     // see Step 2: parameter interactions for more information about these\n     fListen = gArgs.GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n-    fDiscover = gArgs.GetBoolArg(\"-discover\", true);\n+    bool fDiscover = gArgs.GetBoolArg(\"-discover\", true);\n     g_relay_txes = !gArgs.GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY);\n \n     for (const std::string& strAddr : gArgs.GetArgs(\"-externalip\")) {\n         CService addrLocal;\n         if (Lookup(strAddr.c_str(), addrLocal, GetListenPort(), fNameLookup) && addrLocal.IsValid())\n-            AddLocal(addrLocal, LOCAL_MANUAL);\n+            AddLocal(addrLocal, fDiscover, LOCAL_MANUAL);\n         else\n             return InitError(ResolveErrMsg(\"externalip\", strAddr));\n     }\n@@ -1767,6 +1767,8 @@ bool AppInitMain(InitInterfaces& interfaces)\n     connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n     connOptions.m_peer_connect_timeout = peer_connect_timeout;\n \n+    connOptions.fDiscover = fDiscover;\n+\n     for (const std::string& strBind : gArgs.GetArgs(\"-bind\")) {\n         CService addrBind;\n         if (!Lookup(strBind.c_str(), addrBind, GetListenPort(), false)) {"
      },
      {
        "sha": "c6ec7ab8572af058d79e8ca5d21bc5f4b91731c7",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
        "patch": "@@ -81,7 +81,6 @@ static const uint64_t RANDOMIZER_ID_LOCALHOSTNONCE = 0xd93e69e2bbfa5735ULL; // S\n //\n // Global state variables\n //\n-bool fDiscover = true;\n bool fListen = true;\n bool g_relay_txes = !DEFAULT_BLOCKSONLY;\n CCriticalSection cs_mapLocalHost;\n@@ -170,29 +169,30 @@ static int GetnScore(const CService& addr)\n }\n \n // Is our peer's addrLocal potentially useful as an external IP source?\n-bool IsPeerAddrLocalGood(CNode *pnode)\n+bool IsPeerAddrLocalGood(CNode* pnode, bool fDiscover)\n {\n     CService addrLocal = pnode->GetAddrLocal();\n     return fDiscover && pnode->addr.IsRoutable() && addrLocal.IsRoutable() &&\n            IsReachable(addrLocal.GetNetwork());\n }\n \n // pushes our own address to a peer\n-void AdvertiseLocal(CNode *pnode)\n+void AdvertiseLocal(CNode* pnode, bool fDiscover)\n {\n     if (fListen && pnode->fSuccessfullyConnected)\n     {\n         CAddress addrLocal = GetLocalAddress(&pnode->addr, pnode->GetLocalServices());\n-        if (gArgs.GetBoolArg(\"-addrmantest\", false)) {\n+        if (gArgs.GetBoolArg(\"-addrmantest\", false))\n+        {\n             // use IPv4 loopback during addrmantest\n             addrLocal = CAddress(CService(LookupNumeric(\"127.0.0.1\", GetListenPort())), pnode->GetLocalServices());\n         }\n         // If discovery is enabled, sometimes give our peer the address it\n         // tells us that it sees us as in case it has a better idea of our\n         // address than we do.\n         FastRandomContext rng;\n-        if (IsPeerAddrLocalGood(pnode) && (!addrLocal.IsRoutable() ||\n-             rng.randbits((GetnScore(addrLocal) > LOCAL_MANUAL) ? 3 : 1) == 0))\n+        if (IsPeerAddrLocalGood(pnode, fDiscover) && (!addrLocal.IsRoutable() ||\n+            rng.randbits((GetnScore(addrLocal) > LOCAL_MANUAL) ? 3 : 1) == 0))\n         {\n             addrLocal.SetIP(pnode->GetAddrLocal());\n         }\n@@ -205,7 +205,7 @@ void AdvertiseLocal(CNode *pnode)\n }\n \n // learn a new local address\n-bool AddLocal(const CService& addr, int nScore)\n+bool AddLocal(const CService& addr, bool fDiscover, int nScore)\n {\n     if (!addr.IsRoutable())\n         return false;\n@@ -216,7 +216,7 @@ bool AddLocal(const CService& addr, int nScore)\n     if (!IsReachable(addr))\n         return false;\n \n-    LogPrintf(\"AddLocal(%s,%i)\\n\", addr.ToString(), nScore);\n+    LogPrintf(\"AddLocal(%s,%i,%d)\\n\", addr.ToString(), nScore, fDiscover);\n \n     {\n         LOCK(cs_mapLocalHost);\n@@ -231,9 +231,9 @@ bool AddLocal(const CService& addr, int nScore)\n     return true;\n }\n \n-bool AddLocal(const CNetAddr &addr, int nScore)\n+bool AddLocal(const CNetAddr& addr, bool fDiscover, int nScore)\n {\n-    return AddLocal(CService(addr, GetListenPort()), nScore);\n+    return AddLocal(CService(addr, GetListenPort()), fDiscover, nScore);\n }\n \n void RemoveLocal(const CService& addr)\n@@ -1421,6 +1421,8 @@ static void ThreadMapPort()\n     r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n     if (r == 1)\n     {\n+        bool fDiscover = gArgs.GetBoolArg(\"-discover\", true);\n+\n         if (fDiscover) {\n             char externalIPAddress[40];\n             r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n@@ -1431,7 +1433,7 @@ static void ThreadMapPort()\n                     CNetAddr resolved;\n                     if (LookupHost(externalIPAddress, resolved, false)) {\n                         LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString().c_str());\n-                        AddLocal(resolved, LOCAL_UPNP);\n+                        AddLocal(resolved, fDiscover, LOCAL_UPNP);\n                     }\n                 } else {\n                     LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n@@ -2047,13 +2049,15 @@ bool CConnman::BindListenPort(const CService &addrBind, std::string& strError, b\n     vhListenSocket.push_back(ListenSocket(hListenSocket, fWhitelisted));\n \n     if (addrBind.IsRoutable() && fDiscover && !fWhitelisted)\n-        AddLocal(addrBind, LOCAL_BIND);\n+        AddLocal(addrBind, fDiscover, LOCAL_BIND);\n \n     return true;\n }\n \n void Discover()\n {\n+    bool fDiscover = gArgs.GetBoolArg(\"-discover\", true);\n+\n     if (!fDiscover)\n         return;\n \n@@ -2067,7 +2071,7 @@ void Discover()\n         {\n             for (const CNetAddr &addr : vaddr)\n             {\n-                if (AddLocal(addr, LOCAL_IF))\n+                if (AddLocal(addr, fDiscover, LOCAL_IF))\n                     LogPrintf(\"%s: %s - %s\\n\", __func__, pszHostName, addr.ToString());\n             }\n         }\n@@ -2087,14 +2091,14 @@ void Discover()\n             {\n                 struct sockaddr_in* s4 = (struct sockaddr_in*)(ifa->ifa_addr);\n                 CNetAddr addr(s4->sin_addr);\n-                if (AddLocal(addr, LOCAL_IF))\n+                if (AddLocal(addr, fDiscover, LOCAL_IF))\n                     LogPrintf(\"%s: IPv4 %s: %s\\n\", __func__, ifa->ifa_name, addr.ToString());\n             }\n             else if (ifa->ifa_addr->sa_family == AF_INET6)\n             {\n                 struct sockaddr_in6* s6 = (struct sockaddr_in6*)(ifa->ifa_addr);\n                 CNetAddr addr(s6->sin6_addr);\n-                if (AddLocal(addr, LOCAL_IF))\n+                if (AddLocal(addr, fDiscover, LOCAL_IF))\n                     LogPrintf(\"%s: IPv6 %s: %s\\n\", __func__, ifa->ifa_name, addr.ToString());\n             }\n         }"
      },
      {
        "sha": "c444178d57e71d30dae6c3b88669eb957c0da9d2",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
        "patch": "@@ -143,6 +143,7 @@ class CConnman\n         bool m_use_addrman_outgoing = true;\n         std::vector<std::string> m_specified_outgoing;\n         std::vector<std::string> m_added_nodes;\n+        bool fDiscover = true;\n     };\n \n     void Init(const Options& connOptions) {\n@@ -169,6 +170,7 @@ class CConnman\n             LOCK(cs_vAddedNodes);\n             vAddedNodes = connOptions.m_added_nodes;\n         }\n+        fDiscover = connOptions.fDiscover;\n     }\n \n     CConnman(uint64_t seed0, uint64_t seed1);\n@@ -190,9 +192,11 @@ class CConnman\n     bool GetNetworkActive() const { return fNetworkActive; };\n     bool GetUseAddrmanOutgoing() const { return m_use_addrman_outgoing; };\n     void SetNetworkActive(bool active);\n-    void OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound = nullptr, const char *strDest = nullptr, bool fOneShot = false, bool fFeeler = false, bool manual_connection = false);\n+    void OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant* grantOutbound = nullptr, const char* strDest = nullptr, bool fOneShot = false, bool fFeeler = false, bool manual_connection = false);\n     bool CheckIncomingNonce(uint64_t nonce);\n \n+    bool isDiscover() const { return fDiscover; };\n+\n     bool ForNode(NodeId id, std::function<bool(CNode* pnode)> func);\n \n     void PushMessage(CNode* pnode, CSerializedNetMsg&& msg);\n@@ -413,6 +417,7 @@ class CConnman\n     CClientUIInterface* clientInterface;\n     NetEventsInterface* m_msgproc;\n     BanMan* m_banman;\n+    bool fDiscover;\n \n     /** SipHasher seeds for deterministic randomness */\n     const uint64_t nSeed0, nSeed1;\n@@ -495,8 +500,8 @@ enum\n     LOCAL_MAX\n };\n \n-bool IsPeerAddrLocalGood(CNode *pnode);\n-void AdvertiseLocal(CNode *pnode);\n+bool IsPeerAddrLocalGood(CNode* pnode, bool fDiscover);\n+void AdvertiseLocal(CNode* pnode, bool fDiscover);\n \n /**\n  * Mark a network as reachable or unreachable (no automatic connects to it)\n@@ -508,16 +513,15 @@ bool IsReachable(enum Network net);\n /** @returns true if the address is in a reachable network, false otherwise */\n bool IsReachable(const CNetAddr& addr);\n \n-bool AddLocal(const CService& addr, int nScore = LOCAL_NONE);\n-bool AddLocal(const CNetAddr& addr, int nScore = LOCAL_NONE);\n+bool AddLocal(const CService& addr, bool fDiscover, int nScore = LOCAL_NONE);\n+bool AddLocal(const CNetAddr& addr, bool fDiscover, int nScore = LOCAL_NONE);\n void RemoveLocal(const CService& addr);\n bool SeenLocal(const CService& addr);\n bool IsLocal(const CService& addr);\n bool GetLocal(CService &addr, const CNetAddr *paddrPeer = nullptr);\n CAddress GetLocalAddress(const CNetAddr *paddrPeer, ServiceFlags nLocalServices);\n \n \n-extern bool fDiscover;\n extern bool fListen;\n extern bool g_relay_txes;\n "
      },
      {
        "sha": "14a12add87390dc75ac8774a3e1e7789754af71c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
        "patch": "@@ -2027,7 +2027,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 {\n                     LogPrint(BCLog::NET, \"ProcessMessages: advertising address %s\\n\", addr.ToString());\n                     pfrom->PushAddress(addr, insecure_rand);\n-                } else if (IsPeerAddrLocalGood(pfrom)) {\n+                } else if (IsPeerAddrLocalGood(pfrom, connman->isDiscover())) {\n                     addr.SetIP(addrMe);\n                     LogPrint(BCLog::NET, \"ProcessMessages: advertising address %s\\n\", addr.ToString());\n                     pfrom->PushAddress(addr, insecure_rand);\n@@ -3570,7 +3570,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         // Address refresh broadcast\n         int64_t nNow = GetTimeMicros();\n         if (!::ChainstateActive().IsInitialBlockDownload() && pto->nNextLocalAddrSend < nNow) {\n-            AdvertiseLocal(pto);\n+            AdvertiseLocal(pto, connman->isDiscover());\n             pto->nNextLocalAddrSend = PoissonNextSend(nNow, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n         }\n "
      },
      {
        "sha": "8cf85a0080da2435f5e04458f4ef2e10ac6d75a1",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
        "patch": "@@ -222,7 +222,8 @@ BOOST_AUTO_TEST_CASE(ipv4_peer_with_ipv6_addrMe_test)\n     pnode->SetAddrLocal(addrLocal);\n \n     // before patch, this causes undefined behavior detectable with clang's -fsanitize=memory\n-    AdvertiseLocal(&*pnode);\n+    bool fDiscover = true; // default value set in the application is: true\n+    AdvertiseLocal(&*pnode, fDiscover);\n \n     // suppress no-checks-run warning; if this test fails, it's by triggering a sanitizer\n     BOOST_CHECK(1);\n@@ -296,7 +297,9 @@ BOOST_AUTO_TEST_CASE(LocalAddress_BasicLifecycle)\n     SetReachable(NET_IPV4, true);\n \n     BOOST_CHECK_EQUAL(IsLocal(addr), false);\n-    BOOST_CHECK_EQUAL(AddLocal(addr, 1000), true);\n+\n+    bool fDiscover = true; // default value set in the application is: true\n+    BOOST_CHECK_EQUAL(AddLocal(addr, fDiscover, 1000), true);\n     BOOST_CHECK_EQUAL(IsLocal(addr), true);\n \n     RemoveLocal(addr);"
      },
      {
        "sha": "2a287949a69e9061f3cbdfbfdc2a123567d89145",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
        "patch": "@@ -410,7 +410,7 @@ static bool WriteBinaryFile(const fs::path &filename, const std::string &data)\n class TorController\n {\n public:\n-    TorController(struct event_base* base, const std::string& target);\n+    TorController(struct event_base* base, const std::string& target, bool fDiscover);\n     ~TorController();\n \n     /** Get name of file to store private key in */\n@@ -428,6 +428,7 @@ class TorController\n     struct event *reconnect_ev;\n     float reconnect_timeout;\n     CService service;\n+    const bool fDiscover;\n     /** Cookie for SAFECOOKIE auth */\n     std::vector<uint8_t> cookie;\n     /** ClientNonce for SAFECOOKIE auth */\n@@ -450,10 +451,9 @@ class TorController\n     static void reconnect_cb(evutil_socket_t fd, short what, void *arg);\n };\n \n-TorController::TorController(struct event_base* _base, const std::string& _target):\n-    base(_base),\n-    target(_target), conn(base), reconnect(true), reconnect_ev(0),\n-    reconnect_timeout(RECONNECT_TIMEOUT_START)\n+TorController::TorController(struct event_base* _base, const std::string& _target, bool _fDiscover) :\n+    base(_base),target(_target), conn(base), reconnect(true), reconnect_ev(0),\n+    reconnect_timeout(RECONNECT_TIMEOUT_START), fDiscover(_fDiscover)\n {\n     reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n     if (!reconnect_ev)\n@@ -508,7 +508,7 @@ void TorController::add_onion_cb(TorControlConnection& _conn, const TorControlRe\n         } else {\n             LogPrintf(\"tor: Error writing service private key to %s\\n\", GetPrivateKeyFile().string());\n         }\n-        AddLocal(service, LOCAL_MANUAL);\n+        AddLocal(service, fDiscover, LOCAL_MANUAL);\n         // ... onion requested - keep connection open\n     } else if (reply.code == 510) { // 510 Unrecognized command\n         LogPrintf(\"tor: Add onion failed with unrecognized command (You probably need to upgrade Tor)\\n\");\n@@ -733,7 +733,7 @@ static std::thread torControlThread;\n \n static void TorControlThread()\n {\n-    TorController ctrl(gBase, gArgs.GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL));\n+    TorController ctrl(gBase, gArgs.GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL), gArgs.GetBoolArg(\"-discover\", true));\n \n     event_base_dispatch(gBase);\n }"
      }
    ]
  },
  {
    "sha": "485b429c40f8005002006087153304eef80fc057",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODViNDI5YzQwZjgwMDUwMDIwMDYwODcxNTMzMDRlZWY4MGZjMDU3",
    "commit": {
      "author": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2019-11-11T23:08:23Z"
      },
      "committer": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2019-11-11T23:08:23Z"
      },
      "message": "applied coding conventions",
      "tree": {
        "sha": "9d46adcf4667f3d94e2ad4dd253b126a495df594",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d46adcf4667f3d94e2ad4dd253b126a495df594"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/485b429c40f8005002006087153304eef80fc057",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/485b429c40f8005002006087153304eef80fc057",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/485b429c40f8005002006087153304eef80fc057",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/485b429c40f8005002006087153304eef80fc057/comments",
    "author": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f46c5a7eed54f562555b5945b1d02ffeaa31ddb0"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 43,
      "deletions": 47
    },
    "files": [
      {
        "sha": "d16375a221feb16d1e191bb19219e55073468227",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1392,13 +1392,13 @@ bool AppInitMain(InitInterfaces& interfaces)\n \n     // see Step 2: parameter interactions for more information about these\n     fListen = gArgs.GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n-    bool fDiscover = gArgs.GetBoolArg(\"-discover\", true);\n+    bool f_discover = gArgs.GetBoolArg(\"-discover\", true);\n     g_relay_txes = !gArgs.GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY);\n \n     for (const std::string& strAddr : gArgs.GetArgs(\"-externalip\")) {\n         CService addrLocal;\n         if (Lookup(strAddr.c_str(), addrLocal, GetListenPort(), fNameLookup) && addrLocal.IsValid())\n-            AddLocal(addrLocal, fDiscover, LOCAL_MANUAL);\n+            AddLocal(addrLocal, f_discover, LOCAL_MANUAL);\n         else\n             return InitError(ResolveErrMsg(\"externalip\", strAddr));\n     }\n@@ -1767,7 +1767,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n     connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n     connOptions.m_peer_connect_timeout = peer_connect_timeout;\n \n-    connOptions.fDiscover = fDiscover;\n+    connOptions.m_f_discover = f_discover;\n \n     for (const std::string& strBind : gArgs.GetArgs(\"-bind\")) {\n         CService addrBind;"
      },
      {
        "sha": "a0b4b587b306997aa7c43da7ace0d06275cee808",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 27,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -169,54 +169,50 @@ static int GetnScore(const CService& addr)\n }\n \n // Is our peer's addrLocal potentially useful as an external IP source?\n-bool IsPeerAddrLocalGood(CNode* pnode, bool fDiscover)\n+bool IsPeerAddrLocalGood(CNode* pnode, bool f_discover)\n {\n     CService addrLocal = pnode->GetAddrLocal();\n-    return fDiscover && pnode->addr.IsRoutable() && addrLocal.IsRoutable() &&\n+    return f_discover && pnode->addr.IsRoutable() && addrLocal.IsRoutable() &&\n            IsReachable(addrLocal.GetNetwork());\n }\n \n // pushes our own address to a peer\n-void AdvertiseLocal(CNode* pnode, bool fDiscover)\n+void AdvertiseLocal(CNode* pnode, bool f_discover)\n {\n-    if (fListen && pnode->fSuccessfullyConnected)\n-    {\n+    if (fListen && pnode->fSuccessfullyConnected) {\n         CAddress addrLocal = GetLocalAddress(&pnode->addr, pnode->GetLocalServices());\n-        if (gArgs.GetBoolArg(\"-addrmantest\", false))\n-        {\n+        if (gArgs.GetBoolArg(\"-addrmantest\", false)) {\n             // use IPv4 loopback during addrmantest\n             addrLocal = CAddress(CService(LookupNumeric(\"127.0.0.1\", GetListenPort())), pnode->GetLocalServices());\n         }\n         // If discovery is enabled, sometimes give our peer the address it\n         // tells us that it sees us as in case it has a better idea of our\n         // address than we do.\n         FastRandomContext rng;\n-        if (IsPeerAddrLocalGood(pnode, fDiscover) && (!addrLocal.IsRoutable() ||\n-            rng.randbits((GetnScore(addrLocal) > LOCAL_MANUAL) ? 3 : 1) == 0))\n-        {\n+        if (IsPeerAddrLocalGood(pnode, f_discover) && (!addrLocal.IsRoutable() ||\n+            rng.randbits((GetnScore(addrLocal) > LOCAL_MANUAL) ? 3 : 1) == 0)) {\n             addrLocal.SetIP(pnode->GetAddrLocal());\n         }\n-        if (addrLocal.IsRoutable() || gArgs.GetBoolArg(\"-addrmantest\", false))\n-        {\n+        if (addrLocal.IsRoutable() || gArgs.GetBoolArg(\"-addrmantest\", false)) {\n             LogPrint(BCLog::NET, \"AdvertiseLocal: advertising address %s\\n\", addrLocal.ToString());\n             pnode->PushAddress(addrLocal, rng);\n         }\n     }\n }\n \n // learn a new local address\n-bool AddLocal(const CService& addr, bool fDiscover, int nScore)\n+bool AddLocal(const CService& addr, bool f_discover, int nScore)\n {\n     if (!addr.IsRoutable())\n         return false;\n \n-    if (!fDiscover && nScore < LOCAL_MANUAL)\n+    if (!f_discover && nScore < LOCAL_MANUAL)\n         return false;\n \n     if (!IsReachable(addr))\n         return false;\n \n-    LogPrintf(\"AddLocal(%s,%i,%d)\\n\", addr.ToString(), nScore, fDiscover);\n+    LogPrintf(\"AddLocal(%s,%i,%d)\\n\", addr.ToString(), nScore, f_discover);\n \n     {\n         LOCK(cs_mapLocalHost);\n@@ -231,9 +227,9 @@ bool AddLocal(const CService& addr, bool fDiscover, int nScore)\n     return true;\n }\n \n-bool AddLocal(const CNetAddr& addr, bool fDiscover, int nScore)\n+bool AddLocal(const CNetAddr& addr, bool f_discover, int nScore)\n {\n-    return AddLocal(CService(addr, GetListenPort()), fDiscover, nScore);\n+    return AddLocal(CService(addr, GetListenPort()), f_discover, nScore);\n }\n \n void RemoveLocal(const CService& addr)\n@@ -1421,9 +1417,9 @@ static void ThreadMapPort()\n     r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n     if (r == 1)\n     {\n-        bool fDiscover = gArgs.GetBoolArg(\"-discover\", true);\n+        bool f_discover = gArgs.GetBoolArg(\"-discover\", true);\n \n-        if (fDiscover) {\n+        if (f_discover) {\n             char externalIPAddress[40];\n             r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n             if (r != UPNPCOMMAND_SUCCESS) {\n@@ -1433,7 +1429,7 @@ static void ThreadMapPort()\n                     CNetAddr resolved;\n                     if (LookupHost(externalIPAddress, resolved, false)) {\n                         LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString().c_str());\n-                        AddLocal(resolved, fDiscover, LOCAL_UPNP);\n+                        AddLocal(resolved, f_discover, LOCAL_UPNP);\n                     }\n                 } else {\n                     LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n@@ -2048,17 +2044,17 @@ bool CConnman::BindListenPort(const CService &addrBind, std::string& strError, b\n \n     vhListenSocket.push_back(ListenSocket(hListenSocket, fWhitelisted));\n \n-    if (addrBind.IsRoutable() && fDiscover && !fWhitelisted)\n-        AddLocal(addrBind, fDiscover, LOCAL_BIND);\n+    if (addrBind.IsRoutable() && m_f_discover && !fWhitelisted)\n+        AddLocal(addrBind, m_f_discover, LOCAL_BIND);\n \n     return true;\n }\n \n void Discover()\n {\n-    bool fDiscover = gArgs.GetBoolArg(\"-discover\", true);\n+    bool f_discover = gArgs.GetBoolArg(\"-discover\", true);\n \n-    if (!fDiscover)\n+    if (!f_discover)\n         return;\n \n #ifdef WIN32\n@@ -2071,7 +2067,7 @@ void Discover()\n         {\n             for (const CNetAddr &addr : vaddr)\n             {\n-                if (AddLocal(addr, fDiscover, LOCAL_IF))\n+                if (AddLocal(addr, f_discover, LOCAL_IF))\n                     LogPrintf(\"%s: %s - %s\\n\", __func__, pszHostName, addr.ToString());\n             }\n         }\n@@ -2091,14 +2087,14 @@ void Discover()\n             {\n                 struct sockaddr_in* s4 = (struct sockaddr_in*)(ifa->ifa_addr);\n                 CNetAddr addr(s4->sin_addr);\n-                if (AddLocal(addr, fDiscover, LOCAL_IF))\n+                if (AddLocal(addr, f_discover, LOCAL_IF))\n                     LogPrintf(\"%s: IPv4 %s: %s\\n\", __func__, ifa->ifa_name, addr.ToString());\n             }\n             else if (ifa->ifa_addr->sa_family == AF_INET6)\n             {\n                 struct sockaddr_in6* s6 = (struct sockaddr_in6*)(ifa->ifa_addr);\n                 CNetAddr addr(s6->sin6_addr);\n-                if (AddLocal(addr, fDiscover, LOCAL_IF))\n+                if (AddLocal(addr, f_discover, LOCAL_IF))\n                     LogPrintf(\"%s: IPv6 %s: %s\\n\", __func__, ifa->ifa_name, addr.ToString());\n             }\n         }"
      },
      {
        "sha": "ad2bd2d727227c3c65f894fe79c4bbcf4702caa5",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -143,7 +143,7 @@ class CConnman\n         bool m_use_addrman_outgoing = true;\n         std::vector<std::string> m_specified_outgoing;\n         std::vector<std::string> m_added_nodes;\n-        bool fDiscover = true;\n+        bool m_f_discover = true;\n     };\n \n     void Init(const Options& connOptions) {\n@@ -170,7 +170,7 @@ class CConnman\n             LOCK(cs_vAddedNodes);\n             vAddedNodes = connOptions.m_added_nodes;\n         }\n-        fDiscover = connOptions.fDiscover;\n+        m_f_discover = connOptions.m_f_discover;\n     }\n \n     CConnman(uint64_t seed0, uint64_t seed1);\n@@ -195,7 +195,7 @@ class CConnman\n     void OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant* grantOutbound = nullptr, const char* strDest = nullptr, bool fOneShot = false, bool fFeeler = false, bool manual_connection = false);\n     bool CheckIncomingNonce(uint64_t nonce);\n \n-    bool isDiscover() const { return fDiscover; };\n+    bool isDiscover() const { return m_f_discover; };\n \n     bool ForNode(NodeId id, std::function<bool(CNode* pnode)> func);\n \n@@ -417,7 +417,7 @@ class CConnman\n     CClientUIInterface* clientInterface;\n     NetEventsInterface* m_msgproc;\n     BanMan* m_banman;\n-    bool fDiscover;\n+    bool m_f_discover;\n \n     /** SipHasher seeds for deterministic randomness */\n     const uint64_t nSeed0, nSeed1;\n@@ -500,8 +500,8 @@ enum\n     LOCAL_MAX\n };\n \n-bool IsPeerAddrLocalGood(CNode* pnode, bool fDiscover);\n-void AdvertiseLocal(CNode* pnode, bool fDiscover);\n+bool IsPeerAddrLocalGood(CNode* pnode, bool f_discover);\n+void AdvertiseLocal(CNode* pnode, bool f_discover);\n \n /**\n  * Mark a network as reachable or unreachable (no automatic connects to it)\n@@ -513,8 +513,8 @@ bool IsReachable(enum Network net);\n /** @returns true if the address is in a reachable network, false otherwise */\n bool IsReachable(const CNetAddr& addr);\n \n-bool AddLocal(const CService& addr, bool fDiscover, int nScore = LOCAL_NONE);\n-bool AddLocal(const CNetAddr& addr, bool fDiscover, int nScore = LOCAL_NONE);\n+bool AddLocal(const CService& addr, bool f_discover, int nScore = LOCAL_NONE);\n+bool AddLocal(const CNetAddr& addr, bool f_discover, int nScore = LOCAL_NONE);\n void RemoveLocal(const CService& addr);\n bool SeenLocal(const CService& addr);\n bool IsLocal(const CService& addr);"
      },
      {
        "sha": "635b4be5308fdae3b8cb6bee5352332c34eac104",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -222,8 +222,8 @@ BOOST_AUTO_TEST_CASE(ipv4_peer_with_ipv6_addrMe_test)\n     pnode->SetAddrLocal(addrLocal);\n \n     // before patch, this causes undefined behavior detectable with clang's -fsanitize=memory\n-    bool fDiscover = true; // default value set in the application is: true\n-    AdvertiseLocal(&*pnode, fDiscover);\n+    bool f_discover = true; // default value set in the application is: true\n+    AdvertiseLocal(&*pnode, f_discover);\n \n     // suppress no-checks-run warning; if this test fails, it's by triggering a sanitizer\n     BOOST_CHECK(1);\n@@ -298,8 +298,8 @@ BOOST_AUTO_TEST_CASE(LocalAddress_BasicLifecycle)\n \n     BOOST_CHECK_EQUAL(IsLocal(addr), false);\n \n-    bool fDiscover = true; // default value set in the application is: true\n-    BOOST_CHECK_EQUAL(AddLocal(addr, fDiscover, 1000), true);\n+    bool f_discover = true; // default value set in the application is: true\n+    BOOST_CHECK_EQUAL(AddLocal(addr, f_discover, 1000), true);\n     BOOST_CHECK_EQUAL(IsLocal(addr), true);\n \n     RemoveLocal(addr);"
      },
      {
        "sha": "2b5bf125eac9b7d485bca0e1b840f72ef6deab68",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -410,7 +410,7 @@ static bool WriteBinaryFile(const fs::path &filename, const std::string &data)\n class TorController\n {\n public:\n-    TorController(struct event_base* base, const std::string& target, bool fDiscover);\n+    TorController(struct event_base* base, const std::string& target, bool f_discover);\n     ~TorController();\n \n     /** Get name of file to store private key in */\n@@ -428,7 +428,7 @@ class TorController\n     struct event *reconnect_ev;\n     float reconnect_timeout;\n     CService service;\n-    const bool fDiscover;\n+    const bool m_f_discover;\n     /** Cookie for SAFECOOKIE auth */\n     std::vector<uint8_t> cookie;\n     /** ClientNonce for SAFECOOKIE auth */\n@@ -451,9 +451,9 @@ class TorController\n     static void reconnect_cb(evutil_socket_t fd, short what, void *arg);\n };\n \n-TorController::TorController(struct event_base* _base, const std::string& _target, bool _fDiscover) :\n+TorController::TorController(struct event_base* _base, const std::string& _target, bool f_discover) :\n     base(_base),target(_target), conn(base), reconnect(true), reconnect_ev(0),\n-    reconnect_timeout(RECONNECT_TIMEOUT_START), fDiscover(_fDiscover)\n+    reconnect_timeout(RECONNECT_TIMEOUT_START), m_f_discover(f_discover)\n {\n     reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n     if (!reconnect_ev)\n@@ -508,7 +508,7 @@ void TorController::add_onion_cb(TorControlConnection& _conn, const TorControlRe\n         } else {\n             LogPrintf(\"tor: Error writing service private key to %s\\n\", GetPrivateKeyFile().string());\n         }\n-        AddLocal(service, fDiscover, LOCAL_MANUAL);\n+        AddLocal(service, m_f_discover, LOCAL_MANUAL);\n         // ... onion requested - keep connection open\n     } else if (reply.code == 510) { // 510 Unrecognized command\n         LogPrintf(\"tor: Add onion failed with unrecognized command (You probably need to upgrade Tor)\\n\");"
      }
    ]
  },
  {
    "sha": "6ad22d081d113103c31584a275d832f827615cb1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWQyMmQwODFkMTEzMTAzYzMxNTg0YTI3NWQ4MzJmODI3NjE1Y2Ix",
    "commit": {
      "author": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2019-11-12T23:22:33Z"
      },
      "committer": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2019-11-12T23:22:33Z"
      },
      "message": "resolved PR #16548 merge conflicts",
      "tree": {
        "sha": "ae79f1e359e77556633c0bfeed51b3830714f1bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae79f1e359e77556633c0bfeed51b3830714f1bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ad22d081d113103c31584a275d832f827615cb1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ad22d081d113103c31584a275d832f827615cb1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ad22d081d113103c31584a275d832f827615cb1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ad22d081d113103c31584a275d832f827615cb1/comments",
    "author": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "485b429c40f8005002006087153304eef80fc057",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/485b429c40f8005002006087153304eef80fc057",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/485b429c40f8005002006087153304eef80fc057"
      },
      {
        "sha": "80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80fdb6fad132166b10fbeb8615e3c5c591209e0b"
      }
    ],
    "stats": {
      "total": 126616,
      "additions": 75642,
      "deletions": 50974
    },
    "files": [
      {
        "sha": "b4850d49c818264145cddc4c76da47f05a40b996",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 59,
        "deletions": 15,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,46 +1,90 @@\n version: '{branch}.{build}'\n skip_tags: true\n-image: Visual Studio 2017\n+image: Visual Studio 2019\n configuration: Release\n platform: x64\n clone_depth: 5\n environment:\n   APPVEYOR_SAVE_CACHE_ON_ERROR: true\n   CLCACHE_SERVER: 1\n-  PACKAGES: berkeleydb boost-filesystem boost-signals2 boost-test libevent openssl rapidcheck zeromq\n   PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n   PYTHONUTF8: 1\n+  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.4/Qt5.9.8_x64_static_vs2019.zip'\n+  QT_DOWNLOAD_HASH: 'f285cbb02bec3b3f3cc2621e3fa7d5edf0d6a66fa30c57859e583acda954ea80'\n+  QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n+  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n cache:\n-- C:\\tools\\vcpkg\\installed -> .appveyor.yml\n+- C:\\tools\\vcpkg\\installed -> build_msvc\\vcpkg-packages.txt\n - C:\\Users\\appveyor\\clcache -> .appveyor.yml, build_msvc\\**, **\\Makefile.am, **\\*.vcxproj.in\n+- C:\\Qt5.9.8_x64_static_vs2019\n install:\n - cmd: pip install --quiet git+https://github.com/frerich/clcache.git@v4.2.0\n # Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n # - cmd: pip install zmq\n-- cmd: echo set(VCPKG_BUILD_TYPE release) >> C:\\tools\\vcpkg\\triplets\\%PLATFORM%-windows-static.cmake\n-- cmd: vcpkg remove --outdated --recurse\n-- cmd: vcpkg install --triplet %PLATFORM%-windows-static %PACKAGES% > NUL\n+# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n+# 1. Check whether the vcpkg install directory exists (note that updating the vcpkg-packages.txt file\n+#    will cause the appveyor cache rules to invalidate the directory)\n+# 2. If the directory is missing:\n+#    a. Update the vcpkg source (including port files) and build the vcpkg binary,\n+#    b. Install the missing packages.\n+- ps: |\n+      $env:PACKAGES = Get-Content -Path build_msvc\\vcpkg-packages.txt\n+      Write-Host \"vcpkg list: $env:PACKAGES\"\n+      if(!(Test-Path -Path ($env:VCPKG_INSTALL_PATH))) {\n+          cd c:\\tools\\vcpkg\n+          $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n+          git pull origin master\n+          .\\bootstrap-vcpkg.bat\n+          Add-Content \"C:\\tools\\vcpkg\\triplets\\$env:PLATFORM-windows-static.cmake\" \"set(VCPKG_BUILD_TYPE release)\"\n+          .\\vcpkg install --triplet $env:PLATFORM-windows-static $env:PACKAGES.split() > $null\n+          cd \"$env:APPVEYOR_BUILD_FOLDER\"\n+      }\n+      else {\n+        Write-Host \"required vcpkg packages already installed.\"\n+      }\n+      c:\\tools\\vcpkg\\vcpkg integrate install\n before_build:\n - ps:  clcache -M 536870912\n+# Powershell block below is to download and extract the Qt static libraries. The pseudo code is:\n+# 1. If the Qt destination directory exists assume it is correct and do nothing. To\n+#    force a fresh install of the packages delete the job's appveyor cache.\n+# 2. Otherwise:\n+#    a. Download the zip file with the prebuilt Qt static libraries.\n+#    b. Check that the downloaded file matches the expected hash.\n+#    c. Extract the zip file to the specific destination path expected by the msbuild projects.\n+- ps: |\n+      if(!(Test-Path -Path ($env:QT_LOCAL_PATH))) {\n+        Write-Host \"Downloading Qt binaries.\";\n+        Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;\n+        Write-Host \"Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...\";\n+        if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {\n+          Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;\n+          Write-Host \"Qt binary download matched the expected hash.\";\n+        }\n+        else {\n+          Write-Host \"ERROR: Qt binary download did not match the expected hash.\";\n+          Exit-AppveyorBuild;\n+        }\n+      }\n+      else {\n+         Write-Host \"Qt binaries already present.\";\n+      }\n - cmd: python build_msvc\\msvc-autogen.py\n-- ps:  $files = (Get-ChildItem -Recurse | where {$_.extension -eq \".vcxproj\"}).FullName\n-- ps:  for (${i} = 0; ${i} -lt ${files}.length; ${i}++) {\n-           ${content} = (Get-Content ${files}[${i}]);\n-           ${content} = ${content}.Replace(\"</RuntimeLibrary>\", \"</RuntimeLibrary><DebugInformationFormat>None</DebugInformationFormat>\");\n-           ${content} = ${content}.Replace(\"<WholeProgramOptimization>true\", \"<WholeProgramOptimization>false\");\n-           Set-Content ${files}[${i}] ${content};\n-       }\n - ps:  Start-Process clcache-server\n - ps:  fsutil behavior set disablelastaccess 0 # Enable Access time feature on Windows (for clcache)\n build_script:\n-- cmd: msbuild /p:TrackFileAccess=false /p:CLToolExe=clcache.exe build_msvc\\bitcoin.sln /m /v:n /nologo\n+- cmd: msbuild /p:TrackFileAccess=false /p:CLToolExe=clcache.exe build_msvc\\bitcoin.sln /m /v:q /nologo\n after_build:\n - ps:  fsutil behavior set disablelastaccess 1 # Disable Access time feature on Windows (better performance)\n - ps:  clcache -z\n+#- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n test_script:\n - cmd: src\\test_bitcoin.exe -k stdout -e stdout 2> NUL\n - cmd: src\\bench_bitcoin.exe -evals=1 -scaling=0 > NUL\n - ps:  python test\\util\\bitcoin-util-test.py\n - cmd: python test\\util\\rpcauth-test.py\n-- cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast\n+# Fee estimation test failing on appveyor with: WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted.\n+- cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast --exclude feature_fee_estimation\n+artifacts:\n+#- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n deploy: off"
      },
      {
        "sha": "517cd935855dd7a52422f8b2dc3d62027e2523fd",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -9,6 +9,7 @@ task:\n     MAKEJOBS: \"-j9\"\n     CONFIGURE_OPTS: \"--disable-dependency-tracking\"\n     GOAL: \"install\"\n+    TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n     CCACHE_SIZE: \"200M\"\n     CCACHE_COMPRESS: 1\n     CCACHE_DIR: \"/tmp/ccache_dir\"\n@@ -27,3 +28,26 @@ task:\n     - gmake check ${MAKEJOBS} VERBOSE=1\n   functional_test_script:\n     - ./test/functional/test_runner.py --jobs 9 --ci --extended --exclude feature_dbcrash --combinedlogslen=1000 --quiet --failfast\n+task:\n+  name: \"x86_64 Linux  [GOAL: install]  [bionic]  [Using ./ci/ system]\"\n+  container:\n+    image: ubuntu:18.04\n+    cpu: 8\n+    memory: 8G\n+  timeout_in: 60m\n+  env:\n+    MAKEJOBS: \"-j9\"\n+    RUN_CI_ON_HOST: \"1\"\n+    TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n+    CCACHE_SIZE: \"200M\"\n+    CCACHE_DIR: \"/tmp/ccache_dir\"\n+  ccache_cache:\n+    folder: \"/tmp/ccache_dir\"\n+  depends_built_cache:\n+    folder: \"/tmp/cirrus-ci-build/depends/built\"\n+  install_script:\n+    - apt-get update\n+    - apt-get -y install git bash ccache\n+    - ccache --max-size=${CCACHE_SIZE}\n+  ci_script:\n+    - ./ci/test_run_all.sh"
      },
      {
        "sha": "35b42424adb3fec05b52b44da20382f0b3abd5dc",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -17,7 +17,7 @@ If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, p\n \n <!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n \n-<!-- For the GUI-related issue on Linux provide names and versions of a distro, a desktop environment and a graphical shell (if relevant). -->\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n \n <!-- Any extra information that might be useful in the debugging process. -->\n <!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,41 @@\n+---\n+name: Bug report\n+about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n+title: ''\n+labels: Bug\n+assignees: ''\n+\n+---\n+\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n+\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n+\n+<!-- Describe the issue -->\n+\n+**Expected behavior**\n+\n+<!--- What behavior did you expect? -->\n+\n+**Actual behavior**\n+\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+\n+**To reproduce**\n+\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+\n+**System information**\n+\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n+\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "2d5685185ea3621cb9c7d83e62a628468cb9f786",
        "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.github/ISSUE_TEMPLATE/feature_request.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.github/ISSUE_TEMPLATE/feature_request.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Feature request\n+about: Suggest an idea for this project\n+title: ''\n+labels: Feature\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n+\n+**Describe the solution you'd like**\n+<!-- A clear and concise description of what you want to happen. -->\n+\n+**Describe alternatives you've considered**\n+<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n+\n+**Additional context**\n+<!-- Add any other context or screenshots about the feature request here. -->"
      },
      {
        "sha": "67822186164240250331efc39dc66e747ca6ec08",
        "filename": ".github/ISSUE_TEMPLATE/good_first_issue.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/good_first_issue.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Good first issue\n+about: '(Regular devs only): Suggest a new good first issue'\n+title: ''\n+labels: good first issue\n+assignees: ''\n+\n+---\n+\n+The purpose of the `good first issue` label is to highlight which issues are suitable for a new contributor without a deep understanding of the codebase.\n+\n+Useful skills:\n+\n+(For example, \u201cC++11 std::thread\u201d, \u201cQt5 GUI and async GUI design\u201d or \u201cbasic understanding of Bitcoin mining and the Bitcoin Core RPC interface\u201d.)\n+\n+Want to work on this issue?\n+\n+You do not need to request permission to start working on this. You are encouraged to comment on the issue if you are planning to work on it. This will help other contributors monitor which issues are actively being addressed and is also an effective way to request assistance if and when you need it.\n+\n+For guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request."
      },
      {
        "sha": "d2c3b233751f8f0c189e143ba2c379cd0c35a631",
        "filename": ".github/PULL_REQUEST_TEMPLATE.md",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.github/PULL_REQUEST_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.github/PULL_REQUEST_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,9 +1,14 @@\n+<!--\n+*** Please remove the following help text before submitting: ***\n+\n Pull requests without a rationale and clear improvement may be closed\n immediately.\n+-->\n \n+<!--\n Please provide clear motivation for your patch and explain how it improves\n Bitcoin Core user experience or Bitcoin Core developer experience\n-significantly.\n+significantly:\n \n * Any test improvements or new tests that improve coverage are always welcome.\n * All other changes should have accompanying unit tests (see `src/test/`) or\n@@ -24,8 +29,11 @@ significantly.\n   is often a subjective matter. Unless they are explicitly mentioned to be\n   preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n   changes are usually rejected.\n+-->\n \n+<!--\n Bitcoin Core has a thorough review process and even the most trivial change\n needs to pass a lot of eyes and requires non-zero or even substantial time\n effort to review. There is a huge lack of active reviewers on the project, so\n patches often sit for a long time.\n+-->"
      },
      {
        "sha": "809e851ff111b2b534cb01310d9b8d98aeace10a",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -35,6 +35,7 @@ libtool\n src/config/bitcoin-config.h\n src/config/bitcoin-config.h.in\n src/config/stamp-h1\n+src/obj\n share/setup.nsi\n share/qt/Info.plist\n \n@@ -91,6 +92,9 @@ bitcoin-qt\n Bitcoin-Qt.app\n background.tiff*\n \n+# Qt Creator\n+Makefile.am.user\n+\n # Unit-tests\n Makefile.test\n bitcoin-qt_test\n@@ -129,3 +133,7 @@ db4/\n \n # clang-check\n *.plist\n+\n+osx_volname\n+dist/\n+*.background.tiff"
      },
      {
        "sha": "73e62cd2b044c64eee12757a4cf4ddcd3dd9d448",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 51,
        "deletions": 94,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -17,7 +17,7 @@\n # Bitcoin Core GitHub member via the Travis web interface [0].\n #\n # Travis CI uploads the cache after the script phase of the build [1].\n-# However, the build is terminated without saving the chache if it takes over\n+# However, the build is terminated without saving the cache if it takes over\n # 50 minutes [2]. Thus, if we spent too much time in early build stages, fail\n # with an error and save the cache.\n #\n@@ -28,48 +28,44 @@\n dist: xenial\n os: linux\n language: minimal\n+arch: amd64\n cache:\n   ccache: true\n   directories:\n     - $TRAVIS_BUILD_DIR/depends/built\n     - $TRAVIS_BUILD_DIR/depends/sdk-sources\n-    - $HOME/.ccache\n+    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n+    # macOS\n+    - $HOME/Library/Caches/Homebrew\n+    - /usr/local/Homebrew\n+before_cache:\n+  - if [ \"${TRAVIS_OS_NAME}\" = \"osx\" ]; then brew cleanup; fi\n stages:\n   - lint\n   - test\n   - extended-lint\n env:\n   global:\n-    - MAKEJOBS=-j3\n-    - RUN_UNIT_TESTS=true\n-    - RUN_FUNCTIONAL_TESTS=true\n-    - RUN_FUZZ_TESTS=false\n-    - DOCKER_NAME_TAG=ubuntu:18.04\n-    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n-    - CCACHE_SIZE=100M\n-    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n-    - CCACHE_COMPRESS=1\n-    - CCACHE_DIR=$HOME/.ccache\n-    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-    - WINEDEBUG=fixme-all\n-    - DOCKER_PACKAGES=\"build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache\"\n+    - CI_RETRY_EXE=\"travis_retry\"\n+    - CI_WAIT=\"while sleep 500; do echo .; done\"\n     - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved.\"\n before_install:\n-  - set -o errexit; source .travis/test_03_before_install.sh\n+  - set -o errexit; source ./ci/test/00_setup_env.sh\n+  - set -o errexit; source ./ci/test/03_before_install.sh\n install:\n-  - set -o errexit; source .travis/test_04_install.sh\n+  - set -o errexit; source ./ci/test/04_install.sh\n before_script:\n-  - set -o errexit; source .travis/test_05_before_script.sh\n+  - set -o errexit; source ./ci/test/05_before_script.sh\n script:\n   - export CONTINUE=1\n   - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # Whitelisted repo (90 minutes build time)\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n   - if [ $SECONDS -gt 2000 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # Whitelisted repo (90 minutes build time)\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n after_script:\n   - echo $TRAVIS_COMMIT_RANGE\n-  - echo $TRAVIS_COMMIT_LOG\n jobs:\n   include:\n \n@@ -80,11 +76,11 @@ jobs:\n       language: python\n       python: '3.5' # Oldest supported version according to doc/dependencies.md\n       install:\n-        - set -o errexit; source .travis/lint_04_install.sh\n+        - set -o errexit; source ./ci/lint/04_install.sh\n       before_script:\n-        - set -o errexit; source .travis/lint_05_before_script.sh\n+        - set -o errexit; source ./ci/lint/05_before_script.sh\n       script:\n-        - set -o errexit; source .travis/lint_06_script.sh\n+        - set -o errexit; source ./ci/lint/06_script.sh\n \n     - stage: extended-lint\n       name: 'extended lint [runtime >= 60 seconds]'\n@@ -93,110 +89,71 @@ jobs:\n       language: python\n       python: '3.5'\n       install:\n-        - set -o errexit; source .travis/extended_lint_04_install.sh\n+        - set -o errexit; source ./ci/extended_lint/04_install.sh\n       before_script:\n-        - set -o errexit; source .travis/lint_05_before_script.sh\n+        - set -o errexit; source ./ci/lint/05_before_script.sh\n       script:\n-        - set -o errexit; source .travis/extended_lint_06_script.sh\n+        - set -o errexit; source ./ci/extended_lint/06_script.sh\n \n     - stage: test\n-      name: 'ARM  [GOAL: install]  [no unit or functional tests]'\n+      name: 'ARM  [GOAL: install]  [unit tests, functional tests]'\n+      arch: arm64\n       env: >-\n-        HOST=arm-linux-gnueabihf\n-        PACKAGES=\"python3 g++-arm-linux-gnueabihf\"\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"install\"\n-        # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n-        # This could be removed once the ABI change warning does not show up by default\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\"\n+        FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n+        QEMU_USER_CMD=\"\"  # Can run the tests natively without qemu\n \n     - stage: test\n-      name: 'Win64  [GOAL: deploy]  [no gui or functional tests]'\n+      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no functional tests]'\n       env: >-\n-        HOST=x86_64-w64-mingw32\n-        PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\"\n+        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n \n     - stage: test\n-      name: '32-bit + dash  [GOAL: install]  [GUI: no BIP70]'\n+      name: '32-bit + dash  [GOAL: install]  [gui]'\n       env: >-\n-        HOST=i686-pc-linux-gnu\n-        PACKAGES=\"g++-multilib python3-zmq\"\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --disable-bip70 --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n-        CONFIG_SHELL=\"/bin/dash\"\n+        FILE_ENV=\"./ci/test/00_setup_env_i686.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n-        DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n-        TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_qt5.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no functional tests, no depends, only system libs]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        DOCKER_NAME_TAG=ubuntu:14.04\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_trusty.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        DOCKER_NAME_TAG=ubuntu:16.04\n-        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_tsan.sh\"\n+        TEST_RUNNER_EXTRA=\"--exclude feature_block\"  # Not enough memory on travis machines\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_asan.sh\"\n \n     - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: fuzzer,address]'\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: fuzzer,address,undefined]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"clang llvm python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n-        NO_DEPENDS=1\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        RUN_FUZZ_TESTS=true\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address CC=clang CXX=clang++\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_fuzz.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no wallet]'\n       env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq\"\n-        DEP_OPTS=\"NO_WALLET=1\"\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n \n     - stage: test\n       name: 'macOS 10.10  [GOAL: deploy] [no functional tests]'\n       env: >-\n-        HOST=x86_64-apple-darwin14\n-        PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n-        OSX_SDK=10.11\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+        FILE_ENV=\"./ci/test/00_setup_env_mac.sh\"\n+\n+    - stage: test\n+      name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n+      os: osx\n+      # Use the most recent version:\n+      # Xcode 11, macOS 10.14, JDK 12.0.1\n+      # https://docs.travis-ci.com/user/reference/osx/#macos-version\n+      osx_image: xcode11\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "21d1b9cc03aea1599db7dd258c945f5bce240067",
        "filename": ".travis/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/.travis/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/.travis/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/README.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,8 +0,0 @@\n-## travis build scripts\n-\n-The `.travis` directory contains scripts for each build step in each build stage.\n-Currently the travis build defines two stages `lint` and `test`. Each stage has\n-it's own [lifecycle](https://docs.travis-ci.com/user/customizing-the-build/#the-build-lifecycle).\n-Every script in here is named and numbered according to which stage and lifecycle\n-step it belongs to.\n-"
      },
      {
        "sha": "319f2c5b212526193ff18546bd34cde8898cdbd2",
        "filename": ".travis/test_04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/.travis/test_04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/.travis/test_04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_04_install.sh?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,37 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-free -m -h\n-echo \"Number of CPUs (nproc): $(nproc)\"\n-\n-travis_retry docker pull \"$DOCKER_NAME_TAG\"\n-\n-export DIR_FUZZ_IN=${TRAVIS_BUILD_DIR}/qa-assets\n-git clone https://github.com/bitcoin-core/qa-assets ${DIR_FUZZ_IN}\n-export DIR_FUZZ_IN=${DIR_FUZZ_IN}/fuzz_seed_corpus/\n-\n-mkdir -p \"${TRAVIS_BUILD_DIR}/sanitizer-output/\"\n-export ASAN_OPTIONS=\"\"\n-export LSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${TRAVIS_BUILD_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n-env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n-if [[ $HOST = *-mingw32 ]]; then\n-  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n-elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n-  DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n-fi\n-DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n-\n-DOCKER_EXEC () {\n-  docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"\n-}\n-\n-travis_retry DOCKER_EXEC apt-get update\n-travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n-"
      },
      {
        "sha": "e40055a6ee130fddb135debd2159fc2a2f84d555",
        "filename": ".travis/test_06_script_b.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/.travis/test_06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/.travis/test_06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_06_script_b.sh?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,29 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-cd \"build/bitcoin-$HOST\" || (echo \"could not enter distdir build/bitcoin-$HOST\"; exit 1)\n-\n-if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD unit-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD functional-tests\n-  DOCKER_EXEC test/functional/test_runner.py --ci --combinedlogslen=4000 ${TEST_RUNNER_EXTRA} --quiet --failfast\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD fuzz-tests\n-  DOCKER_EXEC test/fuzz/test_runner.py -l DEBUG ${DIR_FUZZ_IN}\n-  END_FOLD\n-fi\n-\n-cd ${TRAVIS_BUILD_DIR} || (echo \"could not enter travis build dir $TRAVIS_BUILD_DIR\"; exit 1)"
      },
      {
        "sha": "0e18a0df981aba730704b7d59ef6bc64d2c070cf",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-018x]\n+[bitcoin.qt-translation-019x]\n file_filter = src/qt/locale/bitcoin_<lang>.ts\n source_file = src/qt/locale/bitcoin_en.ts\n source_lang = en"
      },
      {
        "sha": "ecb5704a8fff9f9270da8138f111ff5100b6749a",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 18,
        "deletions": 17,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -46,7 +46,7 @@ facilitates social contribution, easy testing and peer review.\n \n To contribute a patch, the workflow is as follows:\n \n-  1. Fork repository\n+  1. Fork repository ([only the first time](https://help.github.com/en/articles/fork-a-repo)).\n   1. Create topic branch\n   1. Commit patches\n \n@@ -79,25 +79,26 @@ about Git.\n The title of the pull request should be prefixed by the component or area that\n the pull request affects. Valid areas as:\n \n-  - *Consensus* for changes to consensus critical code\n-  - *Doc* for changes to the documentation\n-  - *Qt* for changes to bitcoin-qt\n-  - *Log* Changes to log messages\n-  - *Mining* for changes to the mining code\n-  - *Net* or *P2P* for changes to the peer-to-peer network code\n-  - *Refactor* for structural changes that do not change behavior\n-  - *RPC/REST/ZMQ* for changes to the RPC, REST or ZMQ APIs\n-  - *Scripts and tools* for changes to the scripts and tools\n-  - *Test* for changes to the bitcoin unit tests or QA tests\n-  - *Utils and libraries* for changes to the utils and libraries\n-  - *Wallet* for changes to the wallet code\n+  - `consensus` for changes to consensus critical code\n+  - `doc` for changes to the documentation\n+  - `qt` or `gui` for changes to bitcoin-qt\n+  - `log` for changes to log messages\n+  - `mining` for changes to the mining code\n+  - `net` or `p2p` for changes to the peer-to-peer network code\n+  - `refactor` for structural changes that do not change behavior\n+  - `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n+  - `script` for changes to the scripts and tools\n+  - `test` for changes to the bitcoin unit tests or QA tests\n+  - `util` or `lib` for changes to the utils or libraries\n+  - `wallet` for changes to the wallet code\n+  - `build` for changes to the GNU Autotools, reproducible builds or CI code\n \n Examples:\n \n-    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n-    Net: Automatically create hidden service, listen on Tor\n-    Qt: Add feed bump button\n-    Log: Fix typo in log message\n+    consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    net: Automatically create hidden service, listen on Tor\n+    qt: Add feed bump button\n+    log: Fix typo in log message\n \n Note that translations should not be submitted as pull requests, please see\n [Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md)"
      },
      {
        "sha": "deae2c1b5750afcabfd1b2e5a00fb14e38524170",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,6 +2,10 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+# Pattern rule to print variables, e.g. make print-top_srcdir\n+print-%:\n+\t@echo $* = $($*)\n+\n ACLOCAL_AMFLAGS = -I build-aux/m4\n SUBDIRS = src\n if ENABLE_MAN\n@@ -39,13 +43,19 @@ OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n-DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n+DIST_DOCS = \\\n+  README.md \\\n+  $(wildcard doc/*.md) \\\n+  $(wildcard doc/release-notes/*.md)\n DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n \t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n \t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n \t       $(top_srcdir)/contrib/debian/copyright \\\n \t       $(top_srcdir)/contrib/init \\\n-\t       $(top_srcdir)/contrib/install_db4.sh\n+\t       $(top_srcdir)/contrib/install_db4.sh \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n+\n DIST_SHARE = \\\n   $(top_srcdir)/share/genbuild.sh \\\n   $(top_srcdir)/share/rpcauth\n@@ -310,4 +320,5 @@ clean-docs:\n clean-local: clean-docs\n \trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n \trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n+\trm -rf osx_volname dist/ dpi36.background.tiff dpi72.background.tiff\n "
      },
      {
        "sha": "400320dde016f37d0d3fb09a39d99a45338bc2c7",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -12,7 +12,7 @@ with no central authority: managing transactions and issuing money are carried\n out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n-For more information, as well as an immediately useable, binary version of\n+For more information, as well as an immediately usable, binary version of\n the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n "
      },
      {
        "sha": "3e922e7e64e8c75e3293db259432039d316da584",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,9 +5,9 @@\n \n export LC_ALL=C\n set -e\n-srcdir=\"$(dirname $0)\"\n+srcdir=\"$(dirname \"$0\")\"\n cd \"$srcdir\"\n-if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n+if [ -z \"${LIBTOOLIZE}\" ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n   LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n   export LIBTOOLIZE\n fi"
      },
      {
        "sha": "16fa69b41f5bba2b2f4bcb6f48f621ee85a0f680",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -33,7 +33,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 45\n+#serial 47\n \n # example boost program (need to pass version)\n m4_define([_AX_BOOST_BASE_PROGRAM],\n@@ -113,6 +113,7 @@ AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n     dnl are found, e.g. when only header-only libraries are installed!\n     AS_CASE([${host_cpu}],\n       [x86_64],[libsubdirs=\"lib64 libx32 lib lib64\"],\n+      [mips*64*],[libsubdirs=\"lib64 lib32 lib lib64\"],\n       [ppc64|powerpc64|s390x|sparc64|aarch64|ppc64le|powerpc64le|riscv64],[libsubdirs=\"lib64 lib lib64\"],\n       [libsubdirs=\"lib\"]\n     )"
      },
      {
        "sha": "4cd3b860410f83d28d9174c0d16e53e93b098334",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 4\n+#serial 5\n \n AC_DEFUN([AX_BOOST_CHRONO],\n [\n@@ -105,7 +105,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Chrono library!)\n             fi\n \t\t\tif test \"x$link_chrono\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 26\n+#serial 28\n \n AC_DEFUN([AX_BOOST_FILESYSTEM],\n [\n@@ -80,7 +80,6 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n \t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            ax_lib=\n             if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n                      ax_lib=${libextension}\n@@ -105,7 +104,7 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n             fi\n \t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 19\n+#serial 20\n \n AC_DEFUN([AX_BOOST_SYSTEM],\n [\n@@ -108,7 +108,7 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n             fi\n \t\t\tif test \"x$link_system\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "e9dea4353556e1a4135122bac13561ed88a95743",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "modified",
        "additions": 83,
        "deletions": 70,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -30,121 +30,134 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 27\n+#serial 32\n \n AC_DEFUN([AX_BOOST_THREAD],\n [\n-\tAC_ARG_WITH([boost-thread],\n-\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+    AC_ARG_WITH([boost-thread],\n+    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost -\n+                    it is possible to specify a certain library for the linker\n+                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n         [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n+        if test \"$withval\" = \"yes\"; then\n             want_boost=\"yes\"\n             ax_boost_user_thread_lib=\"\"\n         else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_thread_lib=\"$withval\"\n-\t\tfi\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"$withval\"\n+        fi\n         ],\n         [want_boost=\"yes\"]\n-\t)\n+    )\n \n-\tif test \"x$want_boost\" = \"xyes\"; then\n+    if test \"x$want_boost\" = \"xyes\"; then\n         AC_REQUIRE([AC_PROG_CC])\n         AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n+        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n \n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n+        LDFLAGS_SAVED=\"$LDFLAGS\"\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n \n         AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-\t\t\t\t\t   ax_cv_boost_thread,\n+                       ax_cv_boost_thread,\n         [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+             CXXFLAGS_SAVE=$CXXFLAGS\n \n-\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-\t\t\t else\n-\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n-\t\t\t fi\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n-                                   [[boost::thread_group thrds;\n-                                   return 0;]])],\n-                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             if test \"x$host_os\" = \"xsolaris\" ; then\n+                 CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+             elif test \"x$host_os\" = \"xmingw32\" ; then\n+                 CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+             else\n+                CXXFLAGS=\"-pthread $CXXFLAGS\"\n+             fi\n+             AC_COMPILE_IFELSE([\n+                 AC_LANG_PROGRAM(\n+                     [[@%:@include <boost/thread/thread.hpp>]],\n+                     [[boost::thread_group thrds;\n+                       return 0;]])],\n+                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+             CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+        ])\n+        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n            if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-\t\t   else\n-\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-\t\t   fi\n+              BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+           elif test \"x$host_os\" = \"xmingw32\" ; then\n+              BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+           else\n+              BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+           fi\n \n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+            AC_SUBST(BOOST_CPPFLAGS)\n \n-\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            AC_DEFINE(HAVE_BOOST_THREAD,,\n+                      [define if the Boost::Thread library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n \n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            LDFLAGS_SAVE=$LDFLAGS\n                         case \"x$host_os\" in\n                           *bsd* )\n                                LDFLAGS=\"-pthread $LDFLAGS\"\n                           break;\n                           ;;\n                         esac\n             if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n                                  [link_thread=\"no\"])\n-\t\t\t\tdone\n+                done\n                 if test \"x$link_thread\" != \"xyes\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n                                  [link_thread=\"no\"])\n-\t\t\t\tdone\n+                done\n                 fi\n \n             else\n                for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                      AC_CHECK_LIB($ax_lib, exit,\n+                                   [link_thread=\"yes\"; break],\n                                    [link_thread=\"no\"])\n                   done\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n             fi\n-\t\t\tif test \"x$link_thread\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-                        else\n-                           case \"x$host_os\" in\n-                              *bsd* )\n-\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                              break;\n-                              ;;\n-                           esac\n-\n-\t\t\tfi\n-\t\tfi\n+            if test \"x$link_thread\" = \"xno\"; then\n+                AC_MSG_ERROR(Could not link against $ax_lib !)\n+            else\n+                BOOST_THREAD_LIB=\"-l$ax_lib\"\n+                case \"x$host_os\" in\n+                    *bsd* )\n+                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        break;\n+                        ;;\n+                    xsolaris )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                    xmingw32 )\n+                        break;\n+                        ;;\n+                    * )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                esac\n+                AC_SUBST(BOOST_THREAD_LIB)\n+            fi\n+        fi\n \n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+    fi\n ])"
      },
      {
        "sha": "4cca32fcfd6539b53e0a55c02544342d1d03ae75",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 21\n+#serial 22\n \n AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n [\n@@ -124,7 +124,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n                done\n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Unit_Test_Framework library!)\n             fi\n \t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "aa0111e5a20f0c2bfd7c8de310dd0102ee1a2c6d",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -61,7 +61,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     BDB_CPPFLAGS=${BDB_CFLAGS}\n   fi\n   AC_SUBST(BDB_CPPFLAGS)\n-  \n+\n   if test \"x$BDB_LIBS\" = \"x\"; then\n     # TODO: Ideally this could find the library version and make sure it matches the headers being used\n     for searchlib in db_cxx-4.8 db_cxx db4_cxx; do"
      },
      {
        "sha": "83d054af5ff2ebdd5f4fefd05bc265a09411ea24",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -116,8 +116,10 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   if test \"x$bitcoin_cv_static_qt\" = xyes; then\n     _BITCOIN_QT_FIND_STATIC_PLUGINS\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-    _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n-    AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n+    if test \"x$TARGET_OS\" != xandroid; then\n+       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+       AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n+    fi\n     if test \"x$TARGET_OS\" = xwindows; then\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n       AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n@@ -128,6 +130,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n       AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+    elif test \"x$TARGET_OS\" = xandroid; then\n+      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype -lQt5EglSupport $QT_LIBS\"\n+      AC_DEFINE(QT_QPA_PLATFORM_ANDROID, 1, [Define this symbol if the qt platform is android])\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n@@ -228,7 +233,11 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ],[\n     bitcoin_enable_qt=no\n   ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt5)])\n+  if test x$bitcoin_enable_qt = xyes; then\n+    AC_MSG_RESULT([$bitcoin_enable_qt ($QT_LIB_PREFIX)])\n+  else\n+    AC_MSG_RESULT([$bitcoin_enable_qt])\n+  fi\n \n   AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n@@ -341,6 +350,9 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n       if test -d \"$qt_plugin_path/accessible\"; then\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n       fi\n+      if test -d \"$qt_plugin_path/platforms/android\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n+      fi\n      if test \"x$use_pkgconfig\" = xyes; then\n      : dnl\n      m4_ifdef([PKG_CHECK_MODULES],["
      },
      {
        "sha": "4d4aef7e35f20efaf6836832d91e52a63254320a",
        "filename": "build_msvc/.gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -10,3 +10,5 @@ packages/*\n *.vcxproj.user\n *.vcxproj\n */Win32\n+libbitcoin_qt/QtGeneratedFiles/*\n+test_bitcoin-qt/QtGeneratedFiles/*"
      },
      {
        "sha": "59be5298adacc04747c845cffbc77d34a97eb1d2",
        "filename": "build_msvc/README.md",
        "status": "modified",
        "additions": 53,
        "deletions": 14,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -3,48 +3,87 @@ Building Bitcoin Core with Visual Studio\n \n Introduction\n ---------------------\n-Solution and project files to build the Bitcoin Core applications (except Qt dependent ones) with Visual Studio 2017 can be found in the build_msvc directory.\n+Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the build_msvc directory. The build has been tested with Visual Studio 2017 and 2019.\n \n Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n \n+Quick Start\n+---------------------\n+The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n+\n+```\n+vcpkg install --triplet x64-windows-static boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent openssl zeromq berkeleydb rapidcheck double-conversion\n+py -3 build_msvc\\msvc-autogen.py\n+msbuild /m build_msvc\\bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n Dependencies\n ---------------------\n-A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin.\n+A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin Core.\n \n Options for installing the dependencies in a Visual Studio compatible manner are:\n \n - Use Microsoft's [vcpkg](https://docs.microsoft.com/en-us/cpp/vcpkg) to download the source packages and build locally. This is the recommended approach.\n - Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n - Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n \n-The external dependencies required for the Visual Studio build are (see [dependencies.md](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) for more info):\n+The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are:\n \n - Berkeley DB\n-- OpenSSL\n - Boost\n+- DoubleConversion\n - libevent\n-- ZeroMQ\n+- OpenSSL\n+- Qt5\n - RapidCheck\n+- ZeroMQ\n+\n+Qt\n+---------------------\n+In order to build the Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v141, v142) and platform type (x86 or x64) must also match.\n+\n+A prebuilt version of Qt can be downloaded from [here](https://github.com/sipsorcery/qt_win_binary/releases). Please be aware this download is NOT an officially sanctioned Bitcoin Core distribution and is provided for developer convenience. It should NOT be used for builds that will be used in a production environment or with real funds.\n \n-Additional dependencies required from the [bitcoin-core](https://github.com/bitcoin-core) GitHub repository are:\n-- libsecp256k1\n-- LevelDB\n+To build Bitcoin Core without Qt unload or disable the `bitcoin-qt`, `libbitcoin_qt` and `test_bitcoin-qt` projects.\n \n Building\n ---------------------\n The instructions below use `vcpkg` to install the dependencies.\n \n-- Clone `vcpkg` from the [github repository](https://github.com/Microsoft/vcpkg) and install as per the instructions in the main README.md.\n-- Install the required packages (replace x64 with x86 as required):\n+- Install [`vcpkg`](https://github.com/Microsoft/vcpkg).\n+- Install the required packages (replace x64 with x86 as required). The list of required packages can be found in the `build_msvc\\vcpkg-packages.txt` file. The PowerShell command below will work if run from the repository root directory and `vcpkg` is in the path. Alternatively the contents of the packages text file can be pasted in place of the `Get-Content` cmdlet.\n+\n+```\n+PS >.\\vcpkg install --triplet x64-windows-static $(Get-Content -Path build_msvc\\vcpkg-packages.txt).split()\n+```\n+\n+- Use Python to generate `*.vcxproj` from Makefile\n \n ```\n-    PS >.\\vcpkg install --triplet x64-windows-static boost-filesystem boost-signals2 boost-test libevent openssl zeromq berkeleydb secp256k1 leveldb rapidcheck\n+PS >py -3 msvc-autogen.py\n ```\n \n-- Use Python to generate *.vcxproj from Makefile\n+- An optional step is to adjust the settings in the build_msvc directory and the common.init.vcxproj file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n+\n+- Build with Visual Studio 2017 or msbuild.\n \n ```\n-    PS >py -3 msvc-autogen.py\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset=v141 /t:build\n ```\n \n-- Build in Visual Studio.\n+- Build with Visual Studio 2019 or msbuild.\n+\n+```\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n+AppVeyor\n+---------------------\n+The .appveyor.yml in the root directory is suitable to perform builds on [AppVeyor](https://www.appveyor.com/) Continuous Integration servers. The simplest way to perform an AppVeyor build is to fork Bitcoin Core and then configure a new AppVeyor Project pointing to the forked repository.\n+\n+For safety reasons the Bitcoin Core .appveyor.yml file has the artifact options disabled. The build will be performed but no executable files will be available. To enable artifacts on a forked repository uncomment the lines shown below:\n+\n+```\n+    #- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n+    #- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n+```"
      },
      {
        "sha": "56401d76184c1428ef7a2e60d394b88af151ddda",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 21,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -9,27 +9,7 @@\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n   </PropertyGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\test\\util.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\setup_common.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\base58.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\bech32.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\bench.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\bench_bitcoin.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\ccoins_caching.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\checkblock.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\checkqueue.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\coin_selection.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\crypto_hash.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\data.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\examples.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\lockedpool.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\mempool_eviction.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\rpc_blockchain.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\rpc_mempool.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\merkle_root.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\rollingbloom.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\wallet_balance.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\verify_script.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <ItemGroup>\n     <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">",
        "previous_filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj"
      },
      {
        "sha": "dcfc1e1b33987e3fdf2a62583916b51bde31b3e5",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,83 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}</ProjectGuid>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\qt\\main.cpp\" />\n+    <ResourceCompile Include=\"..\\..\\src\\qt\\res\\bitcoin-qt-res.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+</Project>"
      },
      {
        "sha": "d4b83b6529392571ab8b6d956c05832a776967cf",
        "filename": "build_msvc/bitcoin.sln",
        "status": "modified",
        "additions": 21,
        "deletions": 1,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -40,6 +40,10 @@ Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libsecp256k1\", \"libsecp256k\n EndProject\n Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libleveldb\", \"libleveldb\\libleveldb.vcxproj\", \"{18430FEF-6B61-4C53-B396-718E02850F1B}\"\n EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin_qt\\libbitcoin_qt.vcxproj\", \"{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n+EndProject\n Global\n     GlobalSection(SolutionConfigurationPlatforms) = preSolution\n         Debug|x64 = Debug|x64\n@@ -200,11 +204,27 @@ Global\n         {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.Build.0 = Release|x64\n         {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.ActiveCfg = Release|Win32\n         {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.Build.0 = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.Build.0 = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.Build.0 = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.ActiveCfg = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.Build.0 = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.ActiveCfg = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.Build.0 = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.ActiveCfg = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.Build.0 = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.Build.0 = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.ActiveCfg = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n     EndGlobalSection\n     GlobalSection(SolutionProperties) = preSolution\n         HideSolutionNode = FALSE\n     EndGlobalSection\n     GlobalSection(ExtensibilityGlobals) = postSolution\n-        SolutionGuid = {DA7D16A6-E5F0-45B3-B194-C3FE64F1BFCD}\n+        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n     EndGlobalSection\n EndGlobal"
      },
      {
        "sha": "e892765fdecddcb03802c839a8b31f8bd66edd88",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -14,7 +14,7 @@\n #define CLIENT_VERSION_MAJOR 0\n \n /* Minor version */\n-#define CLIENT_VERSION_MINOR 18\n+#define CLIENT_VERSION_MINOR 19\n \n /* Build revision */\n #define CLIENT_VERSION_REVISION 99\n@@ -98,10 +98,6 @@\n    */\n #define HAVE_DECL_DAEMON 0\n \n-/* Define to 1 if you have the declaration of `EVP_MD_CTX_new', and to 0 if\n-   you don't. */\n-//#define HAVE_DECL_EVP_MD_CTX_NEW 1\n-\n /* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n    don't. */\n #define HAVE_DECL_HTOBE16 0\n@@ -346,7 +342,7 @@\n #define PACKAGE_NAME \"Bitcoin Core\"\n \n /* Define to the full name and version of this package. */\n-#define PACKAGE_STRING \"Bitcoin Core 0.18.99\"\n+#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n \n /* Define to the one symbol short name of this package. */\n #define PACKAGE_TARNAME \"bitcoin\"\n@@ -355,7 +351,7 @@\n #define PACKAGE_URL \"https://bitcoincore.org/\"\n \n /* Define to the version of this package. */\n-#define PACKAGE_VERSION \"0.18.99\"\n+#define PACKAGE_VERSION \"0.19.99\"\n \n /* Define to necessary symbol if this constant uses a non-standard name on\n    your system. */"
      },
      {
        "sha": "a04a38ff7c19064110e064d0e57a31e0c2c52005",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,8 @@\n     <VCProjectVersion>16.0</VCProjectVersion>\n     <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n     <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n-</PropertyGroup>\n+   </PropertyGroup>\n+\n   <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n      <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n      <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n@@ -20,7 +21,7 @@\n       <Configuration>Release</Configuration>\n       <Platform>x64</Platform>\n     </ProjectConfiguration>\n-        <ProjectConfiguration Include=\"Debug|x64\">\n+    <ProjectConfiguration Include=\"Debug|x64\">\n       <Configuration>Debug</Configuration>\n       <Platform>x64</Platform>\n     </ProjectConfiguration>\n@@ -38,7 +39,7 @@\n     <LinkIncremental>true</LinkIncremental>\n     <WholeProgramOptimization>false</WholeProgramOptimization>\n     <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n+    <PlatformToolset>v142</PlatformToolset>\n     <CharacterSet>Unicode</CharacterSet>\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n     <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n@@ -47,7 +48,7 @@\n     <LinkIncremental>false</LinkIncremental>\n     <WholeProgramOptimization>true</WholeProgramOptimization>\n     <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n+    <PlatformToolset>v142</PlatformToolset>\n     <CharacterSet>Unicode</CharacterSet>\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n     <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n@@ -66,6 +67,7 @@\n       <OptimizeReferences>true</OptimizeReferences>\n     </Link>\n   </ItemDefinitionGroup>\n+\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n     <ClCompile>\n       <Optimization>Disabled</Optimization>\n@@ -75,6 +77,7 @@\n       <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n     </ClCompile>\n   </ItemDefinitionGroup>\n+\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n     <ClCompile>\n       <Optimization>MaxSpeed</Optimization>\n@@ -88,6 +91,7 @@\n       <OptimizeReferences>true</OptimizeReferences>\n     </Link>\n   </ItemDefinitionGroup>\n+\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n     <ClCompile>\n       <Optimization>Disabled</Optimization>\n@@ -103,7 +107,7 @@\n       <WarningLevel>Level3</WarningLevel>\n       <PrecompiledHeader>NotUsing</PrecompiledHeader>\n       <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n-      <DisableSpecificWarnings>4018;4221;4244;4267;4715;4805;</DisableSpecificWarnings>\n+      <DisableSpecificWarnings>4018;4221;4244;4267;4334;4715;4805;</DisableSpecificWarnings>\n       <TreatWarningAsError>true</TreatWarningAsError>\n       <PreprocessorDefinitions>ZMQ_STATIC;NOMINMAX;WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_CONSOLE;_WIN32_WINNT=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\secp256k1\\include;..\\..\\src\\leveldb\\include;..\\..\\src\\leveldb\\helpers\\memenv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n@@ -113,6 +117,9 @@\n       <GenerateDebugInformation>true</GenerateDebugInformation>\n       <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n     </Link>\n+    <Lib>\n+      <AdditionalOptions>/ignore:4221</AdditionalOptions>\n+    </Lib>\n   </ItemDefinitionGroup>\n   <Import Project=\"common.init.vcxproj.user\" Condition=\"Exists('common.init.vcxproj.user')\" />\n </Project>"
      },
      {
        "sha": "42150a23103773a96de2f25f86de7ccb589e821e",
        "filename": "build_msvc/common.qt.init.vcxproj",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/common.qt.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/common.qt.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.qt.init.vcxproj?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+\n+  <PropertyGroup Label=\"QtGlobals\">\n+    <QtBaseDir>C:\\Qt5.9.8_x64_static_vs2019</QtBaseDir>\n+    <QtPluginsLibraryDir>$(QtBaseDir)\\plugins</QtPluginsLibraryDir>\n+    <QtLibraryDir>$(QtBaseDir)\\lib</QtLibraryDir>\n+    <QtIncludeDir>$(QtBaseDir)\\include</QtIncludeDir>\n+    <QtIncludes>$(QtIncludeDir);$(QtIncludeDir)\\QtNetwork;$(QtIncludeDir)\\QtCore;$(QtIncludeDir)\\QtWidgets;$(QtIncludeDir)\\QtGui;</QtIncludes>\n+    <GeneratedFilesOutDir>.\\QtGeneratedFiles\\qt</GeneratedFilesOutDir>\n+    <QtToolsDir>$(QtBaseDir)\\bin</QtToolsDir>\n+    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n+    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtLibraryDir)\\*d.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n+  </PropertyGroup>\n+\n+</Project>"
      },
      {
        "sha": "992f64ec2e01dce5b2844dfe48b70757ced6a0ae",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "modified",
        "additions": 201,
        "deletions": 947,
        "changes": 1148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,976 +1,230 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n-  <ItemGroup Label=\"ProjectConfigurations\">\n-    <ProjectConfiguration Include=\"Debug|Win32\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|Win32\">\n-      <Configuration>Release</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Debug|x64\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|x64\">\n-      <Configuration>Release</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-  </ItemGroup>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n   <PropertyGroup Label=\"Globals\">\n-    <VCProjectVersion>15.0</VCProjectVersion>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n     <ProjectGuid>{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}</ProjectGuid>\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n   </PropertyGroup>\n   <ItemGroup>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin.qrc\">\n-      <Command>\"$(QTDIR)\\bincc.exe\" -name bitcoin \"%(Fullpath)\" -o .\\GeneratedFiles\\qrc_bitcoin.cpp</Command>\n-      <Message>Qt rcc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\qrc_bitcoin.cpp</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bincc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin_locale.qrc\">\n-      <Command>\"$(QTDIR)\\bincc.exe\" -name bitcoin_locale \"%(Fullpath)\" -o .\\GeneratedFiles\\qrc_bitcoin_locale.cpp</Command>\n-      <Message>Qt rcc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\qrc_bitcoin_locale.cpp</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bincc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <None Include=\"..\\..\\src\\qt\\forms\\addressbookpage.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\askpassphrasedialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\coincontroldialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\debugwindow.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\editaddressdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\helpmessagedialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\intro.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\modaloverlay.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\openuridialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\optionsdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\overviewpage.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\formseceivecoinsdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\formseceiverequestdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\sendcoinsdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\sendcoinsentry.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\signverifymessagedialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\transactiondescdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_af.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_af_ZA.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_am.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ar.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_be_BY.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_bg.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_bg_BG.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca%40valencia.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca_ES.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_cs.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_cy.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_da.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_de.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_el.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_el_GR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_en.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_en_GB.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_eo.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_AR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_CL.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_CO.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_DO.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_ES.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_MX.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_UY.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_VE.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_et.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_et_EE.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_eu_ES.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fa.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fa_IR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fi.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr_CA.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr_FR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_gl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_he.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hi_IN.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hr.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hu.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_id.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_id_ID.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_is.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_it.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_it_IT.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ja.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ka.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_kk_KZ.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ko.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ko_KR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ku_IQ.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ky.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_la.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_lt.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_lv_LV.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_mk_MK.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ml.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_mn.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ms_MY.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_nb.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ne.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_nl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pam.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pt_BR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pt_PT.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ro.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ro_RO.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ru.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ru_RU.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sk.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sl_SI.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sn.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sq.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sr.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sr%40latin.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sv.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_szl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ta.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_th_TH.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_tr.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_tr_TR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_uk.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ur_PK.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_uz%40Cyrl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_vi.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_vi_VN.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_CN.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_HK.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_TW.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\paymentrequest.proto\">\n-      <FileType>Document</FileType>\n-      <Command>F:\\Dependencies\\protobuf-cpp-3.4.1\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe --proto_path=%(RootDir)%(Directory) %(Fullpath) --cpp_out=.\\GeneratedFiles</Command>\n-      <Message>ProtoBuf source generation %(RootDir)%(Directory) %(Filename)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).pb.h;.\\GeneratedFiles\\(%Filename).pb.cc</Outputs>\n-      <AdditionalInputs>F:\\Dependencies\\protobuf-cpp-3.4.1\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe</AdditionalInputs>\n-      <LinkObjects>false</LinkObjects>\n-      <Command Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">F:\\deps\\protobuf\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe --proto_path=%(RootDir)%(Directory) %(Fullpath) --cpp_out=.\\GeneratedFiles</Command>\n-      <AdditionalInputs Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">F:\\deps\\protobuf\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <None Include=\"..\\..\\src\\qt\\macdockiconhandler.mm\" />\n-    <None Include=\"..\\..\\src\\qt\\macnotificationhandler.mm\" />\n-    <None Include=\"..\\..\\src\\qtes\\icons\\bitcoin.icns\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\bitcoin.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_0.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_1.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_2.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_3.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_4.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-0.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-1.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-2.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-3.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-4.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\hd_disabled.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\hd_enabled.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\mine.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\network_disabled.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\qt.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\transaction0.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\tx_in.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\tx_inout.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\verify.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"GeneratedFiles\\bitcoin.moc\" />\n-    <None Include=\"GeneratedFiles\\bitcoinamountfield.moc\" />\n-    <None Include=\"GeneratedFiles\\intro.moc\" />\n-    <None Include=\"GeneratedFiles\\overviewpage.moc\" />\n-    <None Include=\"GeneratedFilespcconsole.moc\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\about.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\about_qt.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\add.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\address-book.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin.ico\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin_testnet.ico\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\chevron.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock1.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock2.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock3.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock4.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock5.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\configure.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect0.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect1.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect2.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect3.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect4.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\debugwindow.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\edit.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\editcopy.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\editpaste.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\export.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\eye.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\eye_minus.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\eye_plus.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\filesave.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\fontbigger.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\fontsmaller.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\hd_disabled.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\hd_enabled.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\history.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\info.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\key.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\lock_closed.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\lock_open.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\network_disabled.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\open.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\overview.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\quit.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\iconseceive.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\iconsemove.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\send.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\synced.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction0.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction2.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction_abandoned.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction_conflicted.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_inout.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_input.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_mined.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_output.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\verify.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\warning.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-000.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-001.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-002.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-003.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-004.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-005.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-006.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-007.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-008.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-009.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-010.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-011.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-012.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-013.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-014.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-015.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-016.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-017.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-018.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-019.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-020.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-021.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-022.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-023.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-024.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-025.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-026.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-027.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-028.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-029.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-030.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-031.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-032.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-033.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-034.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-035.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\src\\spinner.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"GeneratedFiles\\qrc_bitcoin.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\qrc_bitcoin_locale.cpp\" />\n-    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\intro.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\overviewpage.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qtpcconsole.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <ClCompile Include=\"GeneratedFiles\\moc_addressbookpage.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_addresstablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_askpassphrasedialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bantablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinaddressvalidator.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinamountfield.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bitcoingui.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinunits.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_callback.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_clientmodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_coincontroldialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_coincontroltreewidget.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_csvmodelwriter.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_editaddressdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_guiconstants.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_guiutil.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_intro.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_macdockiconhandler.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_macnotificationhandler.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_modaloverlay.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_networkstyle.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_notificator.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_openuridialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_optionsdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_optionsmodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_overviewpage.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_paymentrequestplus.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_paymentserver.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_peertablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_platformstyle.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_qvalidatedlineedit.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_qvaluecombobox.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_receivecoinsdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_receiverequestdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_recentrequeststablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_rpcconsole.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_sendcoinsdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_sendcoinsentry.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_signverifymessagedialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_splashscreen.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_trafficgraphwidget.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactiondesc.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactiondescdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactionfilterproxy.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactionrecord.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactiontablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactionview.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_utilitydialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_walletframe.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_walletmodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_walletmodeltransaction.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_walletview.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_winshutdownmonitor.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\paymentrequest.pb.cc\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ClInclude Include=\"GeneratedFiles\\paymentrequest.pb.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_addressbookpage.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_askpassphrasedialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_coincontroldialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_debugwindow.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_editaddressdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_helpmessagedialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_intro.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_modaloverlay.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_openuridialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_optionsdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_overviewpage.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_receivecoinsdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_receiverequestdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_sendcoinsdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_sendcoinsentry.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_signverifymessagedialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_transactiondescdialog.h\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\addressbookpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\addresstablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bantablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoin.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoingui.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinstrings.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinunits.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\clientmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroldialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\createwalletdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\editaddressdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\guiutil.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\modaloverlay.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\networkstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\notificator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\openuridialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\splashscreen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondesc.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionrecord.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\utilitydialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletcontroller.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletframe.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbookpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addresstablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bantablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoingui.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinunits.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_clientmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroldialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_createwalletdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_editaddressdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_guiutil.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_intro.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_modaloverlay.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_networkstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_notificator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_openuridialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_overviewpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcconsole.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_splashscreen.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondesc.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionrecord.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_utilitydialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletcontroller.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletframe.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin_locale.cpp\" />\n   </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n+\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <ImportGroup Label=\"ExtensionSettings\">\n-  </ImportGroup>\n-  <ImportGroup Label=\"Shared\">\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <PropertyGroup Label=\"UserMacros\" />\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <LinkIncremental>false</LinkIncremental>\n-    <Linkage-protobuf>static</Linkage-protobuf>\n-    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <LinkIncremental>true</LinkIncremental>\n-    <Linkage-protobuf>static</Linkage-protobuf>\n-    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <LinkIncremental>true</LinkIncremental>\n-    <Linkage-protobuf>static</Linkage-protobuf>\n-    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <LinkIncremental>false</LinkIncremental>\n-    <Linkage-protobuf>static</Linkage-protobuf>\n-    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n-  </PropertyGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>false</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_X86_;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_X86_;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n   </ItemDefinitionGroup>\n-  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n-  <Target Name=\"QtHeadersMocCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+\n+  <ItemGroup>\n+    <QT_MOC Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <MocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n+    <ResourceTemplates Include=\"..\\..\\src\\qt\\*.qrc\" />\n+    <UiFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n+    <TranslationFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n+  </ItemGroup>\n+\n+  <Target Name=\"moccode\" Inputs=\"@(QT_MOC)\" Outputs=\"@(QT_MOC->'$(GeneratedFilesOutDir)\\%(Filename).moc')\">\n     <PropertyGroup>\n-      <ErrorText>There was an error executing the Qt headers moc code generation tasks.</ErrorText>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc code include generation task.</ErrorText>\n     </PropertyGroup>\n-    <ItemGroup>\n-      <QtMocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n-    </ItemGroup>\n-    <Exec Command=\"$(QTDIR)\\bin\\moc.exe &quot;%(QtMocHeaderFiles.Identity)&quot; -o .\\GeneratedFiles\\moc_%(Filename).cpp $(MOC_DEF)\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt moc code include generation task, output path $(GeneratedFilesOutDir).\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc.\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc\" />\n   </Target>\n-  <Target Name=\"QtFormsCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+\n+  <Target Name=\"mocheader\" Inputs=\"@(MocHeaderFiles)\" Outputs=\"@(MocHeaderFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n     <PropertyGroup>\n-      <ErrorText>There was an error executing the Qt forms code generation tasks.</ErrorText>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc header generation task.</ErrorText>\n     </PropertyGroup>\n-    <ItemGroup>\n-      <QtFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n-    </ItemGroup>\n-    <Exec Command=\"$(QTDIR)\\bin\\uic.exe &quot;%(QtFormFiles.Identity)&quot; -o .\\GeneratedFiles\\ui_%(Filename).h\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt moc header generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n   </Target>\n-  <Target Name=\"QtLocaleCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+\n+  <Target Name=\"forms\" Inputs=\"@(UiFormFiles)\" Outputs=\"@(UiFormFiles->'$(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h')\">\n     <PropertyGroup>\n-      <ErrorText>There was an error executing the Qt local code generation tasks.</ErrorText>\n+      <ErrorText>There was an error executing the libbitcoin_qt forms header generation task.</ErrorText>\n     </PropertyGroup>\n-    <ItemGroup>\n-      <QtLocaleFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n-    </ItemGroup>\n-    <Exec Command=\"$(QTDIR)\\bin\\lrelease.exe &quot;%(QtLocaleFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt forms header generation task, output path $(GeneratedFilesOutDir)\\forms.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\forms\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\uic.exe &quot;%(UiFormFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h\" />\n   </Target>\n-  <ImportGroup Label=\"ExtensionTargets\">\n-    <!--<Import Label=\"berkleyDbTarget\" Project=\"f:\\deps\\db-4.8.30\\db.targets\" />\n-    <Import Label=\"opensslTarget\" Project=\"f:\\deps\\openssl\\1.0.2\\openssl.targets\" />\n-    <Import Label=\"qtTarget\" Project=\"F:\\deps\\qt\\5.9.2-git-ssl\\vc141-x86elease\\qt.targets\" />\n-    <Import Label=\"protobufTarget\" Project=\"f:\\deps\\protobuf\\protobuf.targets\" />-->\n-  </ImportGroup>\n-  <ProjectExtensions>\n-    <VisualStudio>\n-      <UserProperties MocDir=\".\\GeneratedFiles\" UicDir=\".\\GeneratedFiles\" RccDir=\".\\GeneratedFiles\" lupdateOptions=\"\" lupdateOnBuild=\"0\" lreleaseOptions=\"\" Qt5Version_x0020_Win32=\"5.9.1_vs140_x86\" Qt5Version_x0020_x64=\"5.9.1_vs140_x86\" MocOptions=\"DUNICODE -DWIN32 -DQT_DLL -DQT_CORE_LIB -DQT_GUI_LIB -DQT_WIDGETS_LIB &quot;-I.\\GeneratedFiles&quot; &quot;-I.&quot; &quot;-I$(QTDIR)\\include&quot; &quot;-I$(QTDIR)\\include\\QtCore&quot; &quot;-I$(QTDIR)\\include\\QtGui&quot; &quot;-I$(QTDIR)\\include\\QtWidgets&quot;\" />\n-    </VisualStudio>\n-  </ProjectExtensions>\n+\n+  <Target Name=\"translation\" Inputs=\"@(TranslationFiles)\" Outputs=\"@(TranslationFiles->'..\\..\\src\\qt\\locale\\%(Filename).qm')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt translation file generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt translation file generation task.\" />\n+    <Exec Command=\"$(QtToolsDir)\\lrelease.exe &quot;%(TranslationFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n+  </Target>\n+\n+  <Target Name=\"resource\" Inputs=\"@(ResourceTemplates)\" Outputs=\"@(ResourceTemplates->'$(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp')\" DependsOnTargets=\"translation\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt resource code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt resource code generation task, output path $(GeneratedFilesOutDir)\\rcc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\rcc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\rcc.exe --verbose --name %(Filename) &quot;%(ResourceTemplates.Identity)&quot; -o $(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp\" />\n+  </Target>\n+\n+  <Target Name=\"qtclean\">\n+    <Exec Command=\"echo Clean libbitcoin_qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\forms;$(GeneratedFilesOutDir)\\moc;$(GeneratedFilesOutDir)\\rcc;\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\" />\n+  </Target>\n+\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+        moccode;\n+        mocheader;\n+        forms;\n+        translation;\n+        resource;\n+        $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        qtclean;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+\n </Project>"
      },
      {
        "sha": "5ddda3c03e8757ecf2927cbc53d0842c94ad99be",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -17,6 +17,7 @@\n     'libbitcoin_wallet_tool',\n     'libbitcoin_wallet',\n     'libbitcoin_zmq',\n+    'bench_bitcoin',\n ]\n \n ignore_list = ["
      },
      {
        "sha": "bd9b6cc8dbb5aa7b686552df52324f0fe7a1dde8",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "modified",
        "additions": 106,
        "deletions": 129,
        "changes": 235,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,146 +1,123 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n-  <ItemGroup Label=\"ProjectConfigurations\">\n-    <ProjectConfiguration Include=\"Debug|Win32\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|Win32\">\n-      <Configuration>Release</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Debug|x64\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|x64\">\n-      <Configuration>Release</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-  </ItemGroup>\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n   <PropertyGroup Label=\"Globals\">\n-    <VCProjectVersion>15.0</VCProjectVersion>\n     <ProjectGuid>{51201D5E-D939-4854-AE9D-008F03FF518E}</ProjectGuid>\n-    <Keyword>Win32Proj</Keyword>\n-    <RootNamespace>test_bitcoinqt</RootNamespace>\n-  </PropertyGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n   </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+  <PropertyGroup Label=\"Configuration\">\n     <ConfigurationType>Application</ConfigurationType>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <CharacterSet>Unicode</CharacterSet>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n   </PropertyGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <ImportGroup Label=\"ExtensionSettings\">\n-  </ImportGroup>\n-  <ImportGroup Label=\"Shared\">\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <PropertyGroup Label=\"UserMacros\" />\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <LinkIncremental>false</LinkIncremental>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <LinkIncremental>true</LinkIncremental>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <LinkIncremental>true</LinkIncremental>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <LinkIncremental>false</LinkIncremental>\n-  </PropertyGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-    </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n-  </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-    </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n-  </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\setup_common.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\addressbooktests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\apptests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\compattests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\test_main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\uritests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\util.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\wallettests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbooktests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_apptests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_compattests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_uritests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_wallettests.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>$(QtReleaseLibaries);%(AdditionalDependencies)</AdditionalDependencies>\n     </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+\n+    <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n-      <SubSystem>Console</SubSystem>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n     </Link>\n   </ItemDefinitionGroup>\n-  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n-</Project>\n+\n+  <ItemGroup>\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\addressbooktests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\apptests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\compattests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\paymentservertests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\uritests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\wallettests.h\" />\n+  </ItemGroup>\n+  <Target Name=\"moccode\" Inputs=\"@(MocTestFiles)\" Outputs=\"@(MocTestFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the test_bitcoin-qt moc code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing test_bitcoin-qt moc generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocTestFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n+  </Target>\n+  <Target Name=\"QtTestCleanGeneratedFiles\">\n+    <Exec Command=\"echo Clean test_bitcoin-qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\\*\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\" />\n+  </Target>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+       moccode;\n+       $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        QtTestCleanGeneratedFiles;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+ </Project>"
      },
      {
        "sha": "1d05ff6cba2131617ab6d0490c59ad9c311e5291",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -9,13 +9,13 @@\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n   </PropertyGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\*_properties.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\gen\\*_gen.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\setup_common.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\*.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">"
      },
      {
        "sha": "082a13f1cf416a86289811eddba2ffdc124de308",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1 @@\n+berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent openssl rapidcheck zeromq double-conversion\n\\ No newline at end of file"
      },
      {
        "sha": "fb1cd7460b655e1b2a601976a3ce680fc9bafa30",
        "filename": "ci/README.md",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,31 @@\n+## ci scripts\n+\n+This directory contains scripts for each build step in each build stage.\n+\n+Currently three stages `lint`, `extended_lint` and `test` are defined. Each stage has its own lifecycle, similar to the\n+[Travis CI lifecycle](https://docs.travis-ci.com/user/job-lifecycle#the-job-lifecycle). Every script in here is named\n+and numbered according to which stage and lifecycle step it belongs to.\n+\n+### Running a stage locally\n+\n+To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n+requires `docker` to be installed. To install all requirements on Ubuntu, run\n+\n+```\n+sudo apt install docker.io bash git\n+```\n+\n+To run the default test stage,\n+\n+```\n+./ci/test_run_all.sh\n+```\n+\n+To run the test stage with a specific configuration,\n+\n+```\n+FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n+```\n+\n+Be aware that the tests will be build and run in-place, so please run at your own risk.\n+If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first."
      },
      {
        "sha": "123d874a84da4b8531edf5e51052b581688cef27",
        "filename": "ci/extended_lint/04_install.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/extended_lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/extended_lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/04_install.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "previous_filename": ".travis/extended_lint_04_install.sh"
      },
      {
        "sha": "e8228c9c4d912c81e16b772e79e85231a2b6c1b9",
        "filename": "ci/extended_lint/06_script.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/extended_lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/extended_lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/06_script.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "previous_filename": ".travis/extended_lint_06_script.sh"
      },
      {
        "sha": "12c3bfce451c88f049724e1eea67bf8dd6180605",
        "filename": "ci/lint/04_install.sh",
        "status": "renamed",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,9 +6,8 @@\n \n export LC_ALL=C\n \n-travis_retry pip install codespell==1.15.0\n-travis_retry pip install flake8==3.5.0\n-travis_retry pip install vulture==0.29\n+travis_retry pip3 install codespell==1.15.0\n+travis_retry pip3 install flake8==3.7.8\n \n SHELLCHECK_VERSION=v0.6.0\n curl -s \"https://storage.googleapis.com/shellcheck/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/",
        "previous_filename": ".travis/lint_04_install.sh"
      },
      {
        "sha": "28bcbb47f748986c8e95bb87abd5a45faef75e1b",
        "filename": "ci/lint/05_before_script.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/lint/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/lint/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/05_before_script.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "previous_filename": ".travis/lint_05_before_script.sh"
      },
      {
        "sha": "c7dea599dcd7e8769e088a561372195986a3693b",
        "filename": "ci/lint/06_script.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "previous_filename": ".travis/lint_06_script.sh"
      },
      {
        "sha": "1b03c652dbbf5b51f8c05e85090ad6b3ce4a1a85",
        "filename": "ci/retry/README.md",
        "status": "added",
        "additions": 123,
        "deletions": 0,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,123 @@\n+retry - The command line retry tool\n+------------------------------------------\n+\n+Retry any shell command with exponential backoff or constant delay.\n+\n+### Instructions\n+\n+Install:\n+\n+retry is a shell script, so drop it somewhere and make sure it's added to your $PATH. Or you can use the following one-liner:\n+\n+```sh\n+sudo sh -c \"curl https://raw.githubusercontent.com/kadwanev/retry/master/retry -o /usr/local/bin/retry && chmod +x /usr/local/bin/retry\"\n+```\n+\n+If you're on OS X, retry is also on Homebrew:\n+\n+```\n+brew pull 27283\n+brew install retry\n+```\n+Not popular enough for homebrew-core. Please star this project to help.\n+\n+### Usage\n+\n+Help:\n+\n+`retry -?`\n+\n+    Usage: retry [options] -- execute command\n+        -h, -?, --help\n+        -v, --verbose                    Verbose output\n+        -t, --tries=#                    Set max retries: Default 10\n+        -s, --sleep=secs                 Constant sleep amount (seconds)\n+        -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+        -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n+        -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+\n+### Examples\n+\n+No problem:\n+\n+`retry echo u work good`\n+\n+    u work good\n+\n+Test functionality:\n+\n+`retry 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Before retry #5: sleeping 4.8 seconds\n+    y u no work\n+    Before retry #6: sleeping 9.6 seconds\n+    y u no work\n+    Before retry #7: sleeping 19.2 seconds\n+    y u no work\n+    Before retry #8: sleeping 38.4 seconds\n+    y u no work\n+    Before retry #9: sleeping 60.0 seconds\n+    y u no work\n+    Before retry #10: sleeping 60.0 seconds\n+    y u no work\n+    etc..\n+\n+Limit retries:\n+\n+`retry -t 4 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Retries exhausted\n+\n+Bad command:\n+\n+`retry poop`\n+\n+    bash: poop: command not found\n+\n+Fail command:\n+\n+`retry -t 3 -f 'echo \"oh poopsickles\"' 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Retries exhausted, running fail script\n+    oh poopsickles\n+\n+Last attempt passed:\n+\n+`retry -t 3 -- 'if [ $RETRY_ATTEMPT -eq 3 ]; then echo Passed at attempt $RETRY_ATTEMPT; true; else echo Failed at attempt $RETRY_ATTEMPT; false; fi;'`\n+\n+    Failed at attempt 0\n+    Before retry #1: sleeping 0.3 seconds\n+    Failed at attempt 1\n+    Before retry #2: sleeping 0.6 seconds\n+    Failed at attempt 2\n+    Before retry #3: sleeping 1.2 seconds\n+    Passed at attempt 3\n+\n+### License\n+\n+Apache 2.0 - go nuts"
      },
      {
        "sha": "3c06519dbdfebececdfe030cc60cab72d62658a2",
        "filename": "ci/retry/retry",
        "status": "added",
        "additions": 163,
        "deletions": 0,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,163 @@\n+#!/usr/bin/env bash\n+\n+GETOPT_BIN=$IN_GETOPT_BIN\n+GETOPT_BIN=${GETOPT_BIN:-getopt}\n+\n+__sleep_amount() {\n+  if [ -n \"$constant_sleep\" ]; then\n+    sleep_time=$constant_sleep\n+  else\n+    #TODO: check for awk\n+    #TODO: check if user would rather use one of the other possible dependencies: python, ruby, bc, dc\n+    sleep_time=`awk \"BEGIN {t = $min_sleep * $(( (1<<($attempts -1)) )); print (t > $max_sleep ? $max_sleep : t)}\"`\n+  fi\n+}\n+\n+__log_out() {\n+  echo \"$1\" 1>&2\n+}\n+\n+# Parameters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n+retry()\n+{\n+  local max_tries=\"$1\"; shift\n+  local min_sleep=\"$1\"; shift\n+  local max_sleep=\"$1\"; shift\n+  local constant_sleep=\"$1\"; shift\n+  local fail_script=\"$1\"; shift\n+  if [ -n \"$VERBOSE\" ]; then\n+    __log_out \"Retry Parameters: max_tries=$max_tries min_sleep=$min_sleep max_sleep=$max_sleep constant_sleep=$constant_sleep\"\n+    if [ -n \"$fail_script\" ]; then __log_out \"Fail script: $fail_script\"; fi\n+    __log_out \"\"\n+    __log_out \"Execution Command: $*\"\n+    __log_out \"\"\n+  fi\n+\n+  local attempts=0\n+  local return_code=1\n+\n+\n+  while [[ $return_code -ne 0 && $attempts -le $max_tries ]]; do\n+    if [ $attempts -gt 0 ]; then\n+      __sleep_amount\n+      __log_out \"Before retry #$attempts: sleeping $sleep_time seconds\"\n+      sleep $sleep_time\n+    fi\n+\n+    P=\"$1\"\n+    for param in \"${@:2}\"; do P=\"$P '$param'\"; done\n+    #TODO: replace single quotes in each arg with '\"'\"' ?\n+    export RETRY_ATTEMPT=$attempts\n+    bash -c \"$P\"\n+    return_code=$?\n+    #__log_out \"Process returned $return_code on attempt $attempts\"\n+    if [ $return_code -eq 127 ]; then\n+      # command not found\n+      exit $return_code\n+    elif [ $return_code -ne 0 ]; then\n+      attempts=$[$attempts +1]\n+    fi\n+  done\n+\n+  if [ $attempts -gt $max_tries ]; then\n+    if [ -n \"$fail_script\" ]; then\n+      __log_out \"Retries exhausted, running fail script\"\n+      eval $fail_script\n+    else\n+      __log_out \"Retries exhausted\"\n+    fi\n+  fi\n+\n+  exit $return_code\n+}\n+\n+# If we're being sourced, don't worry about such things\n+if [ \"$BASH_SOURCE\" == \"$0\" ]; then\n+  # Prints the help text\n+  help()\n+  {\n+    local retry=$(basename $0)\n+    cat <<EOF\n+Usage: $retry [options] -- execute command\n+    -h, -?, --help\n+    -v, --verbose                    Verbose output\n+    -t, --tries=#                    Set max retries: Default 10\n+    -s, --sleep=secs                 Constant sleep amount (seconds)\n+    -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+    -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n+    -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+EOF\n+  }\n+\n+  # show help for no arguments if stdin is a terminal\n+  if { [ -z \"$1\" ] && [ -t 0 ] ; } || [ \"$1\" == '-h' ] || [ \"$1\" == '-?' ] || [ \"$1\" == '--help' ]\n+  then\n+    help\n+    exit 0\n+  fi\n+\n+  $GETOPT_BIN --test > /dev/null\n+  if [[ $? -ne 4 ]]; then\n+      echo \"I\u2019m sorry, 'getopt --test' failed in this environment. Please load GNU getopt.\"\n+      exit 1\n+  fi\n+\n+  OPTIONS=vt:s:m:x:f:\n+  LONGOPTIONS=verbose,tries:,sleep:,min:,max:,fail:\n+\n+  PARSED=$($GETOPT_BIN --options=\"$OPTIONS\" --longoptions=\"$LONGOPTIONS\" --name \"$0\" -- \"$@\")\n+  if [[ $? -ne 0 ]]; then\n+    # e.g. $? == 1\n+    #  then getopt has complained about wrong arguments to stdout\n+    exit 2\n+  fi\n+  # read getopt\u2019s output this way to handle the quoting right:\n+  eval set -- \"$PARSED\"\n+\n+  max_tries=10\n+  min_sleep=0.3\n+  max_sleep=60.0\n+  constant_sleep=\n+  fail_script=\n+\n+  # now enjoy the options in order and nicely split until we see --\n+  while true; do\n+      case \"$1\" in\n+          -v|--verbose)\n+              VERBOSE=true\n+              shift\n+              ;;\n+          -t|--tries)\n+              max_tries=\"$2\"\n+              shift 2\n+              ;;\n+          -s|--sleep)\n+              constant_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -m|--min)\n+              min_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -x|--max)\n+              max_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -f|--fail)\n+              fail_script=\"$2\"\n+              shift 2\n+              ;;\n+          --)\n+              shift\n+              break\n+              ;;\n+          *)\n+              echo \"Programming error\"\n+              exit 3\n+              ;;\n+      esac\n+  done\n+\n+  retry \"$max_tries\" \"$min_sleep\" \"$max_sleep\" \"$constant_sleep\" \"$fail_script\" \"$@\"\n+\n+fi"
      },
      {
        "sha": "c65054cf9efaf9cd413031bd3e740e0117894722",
        "filename": "ci/test/00_setup_env.sh",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,51 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+echo \"Setting specific values in env\"\n+if [ -n \"${FILE_ENV}\" ]; then\n+  set -o errexit;\n+  # shellcheck disable=SC1090\n+  source \"${FILE_ENV}\"\n+fi\n+\n+BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n+export BASE_ROOT_DIR\n+\n+echo \"Fallback to default values in env (if not yet set)\"\n+# The number of parallel jobs to pass down to make and test_runner.py\n+export MAKEJOBS=${MAKEJOBS:--j4}\n+# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n+export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch/}\n+# What host to compile for. See also ./depends/README.md\n+# Tests that need cross-compilation export the appropriate HOST.\n+# Tests that run natively guess the host\n+export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n+# Whether to prefer BusyBox over GNU utilities\n+export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n+export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n+export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n+export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n+export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n+# Randomize test order.\n+# See https://www.boost.org/doc/libs/1_71_0/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/random.html\n+export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n+export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n+export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n+export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n+export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n+# Folder where the build is done (depends and dist). Can not be changed and is equal to the root of the git repo\n+export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_ROOT_DIR}\n+# Folder where the build is done (bin and lib). Can not be changed.\n+export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_BUILD_DIR/out/$HOST}\n+export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n+export WINEDEBUG=${WINEDEBUG:-fixme-all}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3}\n+export GOAL=${GOAL:-install}\n+export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_BUILD_DIR}/qa-assets}\n+export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n+export CI_RETRY_EXE=${CI_RETRY_EXE:retry}"
      },
      {
        "sha": "6e2542584ce110218ea21dc4f862c4eb0e74c7cb",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,23 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=arm-linux-gnueabihf\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+export QEMU_USER_CMD=\"${QEMU_USER_CMD:\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"\n+# We don't know whether the host can run the cross compiled binaries. To run them, either qemu-user or libc6:armhf for\n+# the target is required, so install both.\n+export DPKG_ADD_ARCH=\"armhf\"\n+export PACKAGES=\"python3 g++-arm-linux-gnueabihf busybox qemu-user libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n+export USE_BUSY_BOX=true\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\"\n+# -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n+# This could be removed once the ABI change warning does not show up by default\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\""
      },
      {
        "sha": "6df65dd4a0525296e7223efe02a2ea86bcac6cbe",
        "filename": "ci/test/00_setup_env_i686.sh",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_i686.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_i686.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=i686-pc-linux-gnu\n+export PACKAGES=\"g++-multilib python3-zmq\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n+export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "f384ba92636ca633092e9824766c36fdb66377c2",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-apple-darwin14\n+export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n+export OSX_SDK=10.11\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"deploy\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\""
      },
      {
        "sha": "aa68a5700e2aaa43091be6bd09bd3f116e6837ca",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-apple-darwin14\n+export BREW_PACKAGES=\"automake berkeley-db4 libtool boost miniupnpc pkg-config qt qrencode python3 ccache zeromq\"\n+export PIP_PACKAGES=\"zmq\"\n+export RUN_CI_ON_HOST=true\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+# Run without depends\n+export NO_DEPENDS=1\n+export OSX_SDK=\"\""
      },
      {
        "sha": "293f37fedf5da17eadcab95735bee4c75a7ae5f6",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,12 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\""
      },
      {
        "sha": "2e9f529216fde777616b71cb9a9b674b69216ff8",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"clang llvm python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUZZ_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++\""
      },
      {
        "sha": "53348559beaa5e86f9c68630b28ad856092ed55d",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,12 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"python3-zmq\"\n+export DEP_OPTS=\"NO_WALLET=1\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\""
      },
      {
        "sha": "622ec3cfe1731252b4a3a8793ddf4bb9a63e6187",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n+export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n+export TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\""
      },
      {
        "sha": "fbf1488f07b5d2e58e6c8e63d72542b1e7221e86",
        "filename": "ci/test/00_setup_env_native_trusty.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_trusty.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_trusty.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_trusty.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=ubuntu:14.04\n+export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libqrencode-dev\"\n+export NO_DEPENDS=1\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no\""
      },
      {
        "sha": "afc082d6cfaf3ffd257f39563d4e690518ce21f3",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=ubuntu:16.04\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\""
      },
      {
        "sha": "1e04c4287af1de65da686d3e8ab0565cd7ec705d",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-w64-mingw32\n+export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"deploy\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\""
      },
      {
        "sha": "5086114ba16e85b0399ffce587f6e1cf2b187bf9",
        "filename": "ci/test/03_before_install.sh",
        "status": "renamed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,6 @@\n \n export LC_ALL=C.UTF-8\n \n-PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n # Add llvm-symbolizer directory to PATH. Needed to get symbolized stack traces from the sanitizers.\n PATH=$PATH:/usr/lib/llvm-6.0/bin/\n export PATH",
        "previous_filename": ".travis/test_03_before_install.sh"
      },
      {
        "sha": "271ae82e5cbb42c29dbdc7759db9e2e1e2a2f911",
        "filename": "ci/test/04_install.sh",
        "status": "added",
        "additions": 98,
        "deletions": 0,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,98 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  set +o errexit\n+  pushd /usr/local/Homebrew || exit 1\n+  git reset --hard origin/master\n+  popd || exit 1\n+  set -o errexit\n+  ${CI_RETRY_EXE} brew update\n+  # brew upgrade returns an error if any of the packages is already up to date\n+  # Failure is safe to ignore, unless we really need an update.\n+  brew upgrade $BREW_PACKAGES || true\n+\n+  # install new packages (brew install returns an error if already installed)\n+  for i in $BREW_PACKAGES; do\n+    if ! brew list | grep -q $i; then\n+      ${CI_RETRY_EXE} brew install $i\n+    fi\n+  done\n+\n+  export PATH=\"/usr/local/opt/ccache/libexec:$PATH\"\n+  OPENSSL_PKG_CONFIG_PATH=\"/usr/local/opt/openssl@1.1/lib/pkgconfig\"\n+  export PKG_CONFIG_PATH=$OPENSSL_PKG_CONFIG_PATH:$PKG_CONFIG_PATH\n+\n+  ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n+\n+fi\n+\n+mkdir -p \"${BASE_SCRATCH_DIR}\"\n+mkdir -p \"${CCACHE_DIR}\"\n+\n+if [ ! -d ${DIR_QA_ASSETS} ]; then\n+  git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+fi\n+export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n+\n+mkdir -p \"${BASE_BUILD_DIR}/sanitizer-output/\"\n+export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n+export LSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_BUILD_DIR}/sanitizer-output/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n+env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n+elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n+  DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n+fi\n+\n+if [ -z \"$RUN_CI_ON_HOST\" ]; then\n+  echo \"Creating $DOCKER_NAME_TAG container to run in\"\n+  ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n+\n+  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$BASE_BUILD_DIR,dst=$BASE_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $BASE_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n+\n+  DOCKER_EXEC () {\n+    docker exec $DOCKER_ID bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $PWD && $*\"\n+  }\n+else\n+  echo \"Running on host system without docker wrapper\"\n+  DOCKER_EXEC () {\n+    bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $PWD && $*\"\n+  }\n+fi\n+\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n+  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n+else\n+  DOCKER_EXEC free -m -h\n+  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n+fi\n+\n+if [ -n \"$DPKG_ADD_ARCH\" ]; then\n+  DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n+fi\n+\n+if [ \"$TRAVIS_OS_NAME\" != \"osx\" ]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n+fi\n+\n+if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n+  echo \"Setup to use BusyBox utils\"\n+  DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/\n+  # tar excluded for now because it requires passing in the exact archive type in ./depends (fixed in later BusyBox version)\n+  # find excluded for now because it does not recognize the -delete option in ./depends (fixed in later BusyBox version)\n+  # ar excluded for now because it does not recognize the -q option in ./depends (unknown if fixed)\n+  # shellcheck disable=SC1010\n+  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) $BASE_SCRATCH_DIR/bins/\\$util\\; done\n+  # Print BusyBox version\n+  DOCKER_EXEC patch --help\n+fi"
      },
      {
        "sha": "a0488f08079445b85579ef8bbf63675187a03267",
        "filename": "ci/test/05_before_script.sh",
        "status": "renamed",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,12 @@\n \n export LC_ALL=C.UTF-8\n \n-DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file\n+# Make sure default datadir does not exist and is never read by creating a dummy file\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  echo > $HOME/Library/Application\\ Support/Bitcoin\n+else\n+  DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n+fi\n \n mkdir -p depends/SDKs depends/sdk-sources\n ",
        "previous_filename": ".travis/test_05_before_script.sh"
      },
      {
        "sha": "c4dc22bdd8e7e7e026fba6defae1056d1e4a711e",
        "filename": "ci/test/06_script_a.sh",
        "status": "renamed",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,11 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-TRAVIS_COMMIT_LOG=$(git log --format=fuller -1)\n-export TRAVIS_COMMIT_LOG\n-\n-OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$BASE_BUILD_DIR/depends/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n if [ -z \"$NO_DEPENDS\" ]; then\n   DOCKER_EXEC ccache --max-size=$CCACHE_SIZE\n fi\n@@ -23,8 +19,12 @@ else\n fi\n END_FOLD\n \n-mkdir build\n+mkdir -p build\n+\n+# Temporarily disable errexit, because Travis macOS fails without error message\n+set +o errexit\n cd build || (echo \"could not enter build directory\"; exit 1)\n+set -o errexit\n \n BEGIN_FOLD configure\n DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n@@ -34,17 +34,21 @@ BEGIN_FOLD distdir\n DOCKER_EXEC make distdir VERSION=$HOST\n END_FOLD\n \n+set +o errexit\n cd \"bitcoin-$HOST\" || (echo \"could not enter distdir bitcoin-$HOST\"; exit 1)\n+set -o errexit\n \n BEGIN_FOLD configure\n DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n END_FOLD\n \n set -o errtrace\n-trap 'DOCKER_EXEC \"cat ${TRAVIS_BUILD_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n+trap 'DOCKER_EXEC \"cat ${BASE_BUILD_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n \n BEGIN_FOLD build\n DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n END_FOLD\n \n-cd ${TRAVIS_BUILD_DIR} || (echo \"could not enter travis build dir $TRAVIS_BUILD_DIR\"; exit 1)\n+set +o errexit\n+cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)\n+set -o errexit",
        "previous_filename": ".travis/test_06_script_a.sh"
      },
      {
        "sha": "7ac4907d32c8481eb5b3fbc9a6d95ab553daa4ef",
        "filename": "ci/test/06_script_b.sh",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,54 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+# Temporarily disable errexit, because Travis macOS fails without error message\n+set +o errexit\n+cd \"build/bitcoin-$HOST\" || (echo \"could not enter distdir build/bitcoin-$HOST\"; exit 1)\n+set -o errexit\n+\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  BEGIN_FOLD wrap-qemu\n+  echo \"Prepare to run functional tests for HOST=$HOST\"\n+  # Generate all binaries, so that they can be wrapped\n+  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n+  DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n+  for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      DOCKER_EXEC mv \"$b\" \"${b}_orig\"\n+      DOCKER_EXEC echo \"\\#\\!/usr/bin/env bash\" \\> \"$b\"\n+      DOCKER_EXEC echo \"$QEMU_USER_CMD \\\\\\\"${b}_orig\\\\\\\" \\\\\\\"\\\\\\$@\\\\\\\"\" \\>\\> \"$b\"\n+      DOCKER_EXEC chmod +x \"$b\"\n+    done\n+  done\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD unit-tests\n+  bash -c \"${CI_WAIT}\" &  # Print dots in case the unit tests take a long time to run\n+  DOCKER_EXEC LD_LIBRARY_PATH=$BASE_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD functional-tests\n+  DOCKER_EXEC test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 ${TEST_RUNNER_EXTRA} --quiet --failfast\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD fuzz-tests\n+  DOCKER_EXEC test/fuzz/test_runner.py -l DEBUG ${DIR_FUZZ_IN}\n+  END_FOLD\n+fi\n+\n+set +o errexit\n+cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)\n+set -o errexit"
      },
      {
        "sha": "a1d4bd19524daefccee252ec22fbcdd780c2c3d1",
        "filename": "ci/test_run_all.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/ci/test_run_all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/ci/test_run_all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test_run_all.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+set -o errexit; source ./ci/test/00_setup_env.sh\n+set -o errexit; source ./ci/test/03_before_install.sh\n+set -o errexit; source ./ci/test/04_install.sh\n+set -o errexit; source ./ci/test/05_before_script.sh\n+set -o errexit; source ./ci/test/06_script_a.sh\n+set -o errexit; source ./ci/test/06_script_b.sh"
      },
      {
        "sha": "8bde6d9bc431e44eaf716fcc72c3685c9451067a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 65,
        "deletions": 76,
        "changes": 141,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,7 +1,7 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 18)\n+define(_CLIENT_VERSION_MINOR, 19)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_RC, 0)\n@@ -76,6 +76,10 @@ fi\n AC_PROG_OBJCXX\n ])\n \n+dnl Since libtool 1.5.2 (released 2004-01-25), on Linux libtool no longer\n+dnl sets RPATH for any directories in the dynamic linker search path.\n+dnl See more: https://wiki.debian.org/RpathIssue\n+LT_PREREQ([1.5.2])\n dnl Libtool init checks.\n LT_INIT([pic-only])\n \n@@ -133,7 +137,7 @@ AC_ARG_ENABLE(gui-tests,\n \n AC_ARG_WITH([rapidcheck],\n   [AS_HELP_STRING([--with-rapidcheck],\n-  [enable RapidCheck property based tests (default is yes if librapidcheck is found)])],\n+  [enable RapidCheck property-based tests (default is yes if librapidcheck is found)])],\n   [use_rapidcheck=$withval],\n   [use_rapidcheck=auto])\n \n@@ -222,13 +226,16 @@ AC_ARG_ENABLE([zmq],\n   [disable ZMQ notifications])],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n+\n AC_ARG_ENABLE([bip70],\n-  [AS_HELP_STRING([--disable-bip70],\n-  [disable BIP70 (payment protocol) support in GUI (enabled by default)])],\n+  [AS_HELP_STRING([--enable-bip70],\n+  [BIP70 (payment protocol) support in the GUI (no longer supported)])],\n   [enable_bip70=$enableval],\n-  [enable_bip70=auto])\n+  [enable_bip70=no])\n \n-AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n+if test x$enable_bip70 != xno; then\n+  AC_MSG_ERROR([BIP70 is no longer supported!])\n+fi\n \n AC_ARG_ENABLE(man,\n     [AS_HELP_STRING([--disable-man],\n@@ -239,7 +246,7 @@ AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n # Enable debug\n AC_ARG_ENABLE([debug],\n     [AS_HELP_STRING([--enable-debug],\n-                    [use debug compiler flags and macros (default is no)])],\n+                    [use compiler flags and macros suited for debugging (default is no)])],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n@@ -271,12 +278,9 @@ if test \"x$enable_debug\" = xyes; then\n   if test \"x$CXXFLAGS_overridden\" = xno; then\n \tCXXFLAGS=\"\"\n   fi\n-  # Prefer -Og, fall back to -O0 if that is unavailable.\n-  AX_CHECK_COMPILE_FLAG(\n-    [-Og],\n-    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -Og\"]],\n-    [AX_CHECK_COMPILE_FLAG([-O0],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])],\n-    [[$CXXFLAG_WERROR]])\n+\n+  # Disable all optimizations\n+  AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\n \n   # Prefer -g3, fall back to -g if that is unavailable.\n   AX_CHECK_COMPILE_FLAG(\n@@ -588,11 +592,12 @@ case $host in\n      fi\n \n      AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\"\n      OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n    *android*)\n      dnl make sure android stays above linux for hosts like *linux-android*\n+     TARGET_OS=android\n      LEVELDB_TARGET_FLAGS=\"-DOS_ANDROID\"\n      ;;\n    *linux*)\n@@ -752,12 +757,17 @@ if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+  # When enable_debug is yes, all optimizations are disabled.\n+  # However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n+  # Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n+  if test x$enable_debug != xyes; then\n+    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+      ])\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n     ])\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-  ])\n+  fi\n \n   AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n@@ -780,6 +790,39 @@ fi\n \n AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n \n+# FD_ZERO may be dependent on a declaration of memcpy, e.g. in SmartOS\n+# check that it fails to build without memcpy, then that it builds with\n+AC_MSG_CHECKING(FD_ZERO memcpy dependence)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <cstddef>\n+    #if HAVE_SYS_SELECT_H\n+    #include <sys/select.h>\n+    #endif\n+  ]],[[\n+    #if HAVE_SYS_SELECT_H\n+    fd_set fds;\n+    FD_ZERO(&fds);\n+    #endif\n+  ]])],\n+  [ AC_MSG_RESULT(no) ],\n+  [\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+          #include <cstring>\n+          #if HAVE_SYS_SELECT_H\n+          #include <sys/select.h>\n+          #endif\n+        ]], [[\n+          #if HAVE_SYS_SELECT_H\n+          fd_set fds;\n+          FD_ZERO(&fds);\n+          #endif\n+        ]])],\n+        [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_CSTRING_DEPENDENT_FD_ZERO, 1, [Define this symbol if FD_ZERO is dependent of a memcpy declaration being available]) ],\n+        [ AC_MSG_ERROR(failed with cstring include) ]\n+      )\n+  ]\n+)\n+\n AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n     [#include <sys/types.h>\n     #include <ifaddrs.h>]\n@@ -1198,11 +1241,7 @@ if test x$use_pkgconfig = xyes; then\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n-      if test x$enable_bip70 != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [have_protobuf=no])])\n-      fi\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n@@ -1228,9 +1267,6 @@ else\n   AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n   AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n \n-  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n-  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n-\n   if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n@@ -1262,23 +1298,13 @@ else\n     esac\n   fi\n \n-  if test x$enable_bip70 != xno; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], [have_protobuf=no]))\n-  fi\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n     BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n-save_CXXFLAGS=\"${CXXFLAGS}\"\n-CXXFLAGS=\"${CXXFLAGS} ${CRYPTO_CFLAGS} ${SSL_CFLAGS}\"\n-AC_CHECK_DECLS([EVP_MD_CTX_new],,,[AC_INCLUDES_DEFAULT\n-#include <openssl/x509_vfy.h>\n-])\n-CXXFLAGS=\"${save_CXXFLAGS}\"\n-\n-dnl RapidCheck Property Based Testing\n+dnl RapidCheck property-based testing\n \n enable_property_tests=no\n if test \"x$use_rapidcheck\" = xauto; then\n@@ -1342,12 +1368,6 @@ AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n AC_SUBST(UNIVALUE_CFLAGS)\n AC_SUBST(UNIVALUE_LIBS)\n \n-\n-if test x$have_protobuf != xno &&\n-   test x$enable_bip70 != xno; then\n-  BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n-fi\n-\n AC_MSG_CHECKING([whether to build bitcoind])\n AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n AC_MSG_RESULT($build_bitcoind)\n@@ -1469,23 +1489,6 @@ if test x$bitcoin_enable_qt != xno; then\n   else\n     AC_MSG_RESULT([no])\n   fi\n-\n-  AC_MSG_CHECKING([whether to build BIP70 support])\n-  if test x$have_protobuf = xno; then\n-    if test x$enable_bip70 = xyes; then\n-      AC_MSG_ERROR(protobuf missing)\n-    fi\n-    enable_bip70=no\n-    AC_MSG_RESULT(no)\n-  else\n-    if test x$enable_bip70 != xno; then\n-      AC_DEFINE([ENABLE_BIP70],[1],[Define if BIP70 support should be compiled in])\n-      enable_bip70=yes\n-      AC_MSG_RESULT([yes])\n-    else\n-      AC_MSG_RESULT([no])\n-    fi\n-  fi\n fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n@@ -1518,7 +1521,6 @@ AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n-AM_CONDITIONAL([ENABLE_BIP70],[test x$enable_bip70 = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n@@ -1584,11 +1586,9 @@ AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n AC_SUBST(CRYPTO_LIBS)\n-AC_SUBST(SSL_LIBS)\n AC_SUBST(EVENT_LIBS)\n AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)\n-AC_SUBST(PROTOBUF_LIBS)\n AC_SUBST(QR_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n@@ -1625,22 +1625,11 @@ if test x$need_bundled_univalue = xyes; then\n   AC_CONFIG_SUBDIRS([src/univalue])\n fi\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni\"\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery --disable-jni\"\n AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n \n-dnl Taken from https://wiki.debian.org/RpathIssue\n-case $host in\n-   *-*-linux-gnu)\n-     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n-     sed < libtool > libtool-2 \\\n-     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n-     mv libtool-2 libtool\n-     chmod 755 libtool\n-   ;;\n-esac\n-\n dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n case ${OS} in\n    *Windows*)\n@@ -1654,12 +1643,12 @@ echo \"Options used to compile and link:\"\n echo \"  with wallet   = $enable_wallet\"\n echo \"  with gui / qt = $bitcoin_enable_qt\"\n if test x$bitcoin_enable_qt != xno; then\n-    echo \"    with bip70  = $enable_bip70\"\n     echo \"    with qr     = $use_qr\"\n fi\n echo \"  with zmq      = $use_zmq\"\n echo \"  with test     = $use_tests\"\n if test x$use_tests != xno; then\n+    echo \"    with prop   = $enable_property_tests\"\n     echo \"    with fuzz   = $enable_fuzz\"\n fi\n echo \"  with bench    = $use_bench\""
      },
      {
        "sha": "361975baa4915b26e4e65fecaf359d230a411450",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -3,10 +3,10 @@ Repository Tools\n \n ### [Developer tools](/contrib/devtools) ###\n Specific tools for developers working on this repository.\n-Contains the script `github-merge.py` for merging GitHub pull requests securely and signing them using GPG.\n+Additional tools, including the `github-merge.py` script, are available in the [maintainer-tools](https://github.com/bitcoin-core/bitcoin-maintainer-tools) repository.\n \n ### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n+Tool to verify that every merge commit was signed by a developer using the `github-merge.py` script.\n \n ### [Linearize](/contrib/linearize) ###\n Construct a linear, no-fork, best version of the blockchain.\n@@ -33,12 +33,12 @@ Files used during the gitian build process. For more information about gitian, s\n PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n-Scripts and notes for Mac builds. \n+Scripts and notes for Mac builds.\n \n ### [Gitian-build](/contrib/gitian-build.py) ###\n Script for running full Gitian builds.\n \n-Test and Verify Tools \n+Test and Verify Tools\n ---------------------\n \n ### [TestGen](/contrib/testgen) ###"
      },
      {
        "sha": "f7f12a27732669004769eeb9c362e1863251225a",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "modified",
        "additions": 4,
        "deletions": 17,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -17,13 +17,6 @@ _bitcoin_rpc() {\n     $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n }\n \n-# Add wallet accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n _bitcoin_cli() {\n     local cur prev words=() cword\n     local bitcoin_cli\n@@ -60,10 +53,9 @@ _bitcoin_cli() {\n     if ((cword > 3)); then\n         case ${words[cword-3]} in\n             addmultisigaddress)\n-                _bitcoin_accounts\n                 return 0\n                 ;;\n-            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaddress|listsinceblock)\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n@@ -80,14 +72,10 @@ _bitcoin_cli() {\n                 COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n-            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n+            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listreceivedbyaddress|sendrawtransaction)\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n         esac\n     fi\n \n@@ -96,12 +84,11 @@ _bitcoin_cli() {\n             _filedir\n             return 0\n             ;;\n-        getaddednodeinfo|getrawmempool|lockunspent|setgenerate)\n+        getaddednodeinfo|getrawmempool|lockunspent)\n             COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n             return 0\n             ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n+        getbalance|getnewaddress|listtransactions|sendmany)\n             return 0\n             ;;\n     esac"
      },
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -16,6 +16,7 @@ FORMS += \\\n     ../src/qt/forms/sendcoinsentry.ui \\\n     ../src/qt/forms/signverifymessagedialog.ui \\\n     ../src/qt/forms/transactiondescdialog.ui \\\n+    ../src/qt/forms/createwalletdialog.ui\n \n RESOURCES += \\\n     ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "da869fa2c3c458e47962a74eef0cfcb7b2d03e65",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -15,7 +15,7 @@ _bitcoind() {\n     _get_comp_words_by_ref -n = cur prev words cword\n \n     case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-rootcertificates=*|-rpccookiefile=*|-wallet=*)\n+        -conf=*|-pid=*|-loadblock=*|-rpccookiefile=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0"
      },
      {
        "sha": "0eccbacb96a585ffb7406c16c62696bf17281320",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 4,
        "deletions": 15,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -26,21 +26,14 @@ License: GNU-All-permissive-License\n Files: src/qt/res/icons/add.png\n        src/qt/res/icons/address-book.png\n        src/qt/res/icons/chevron.png\n-       src/qt/res/icons/configure.png\n-       src/qt/res/icons/debugwindow.png\n        src/qt/res/icons/edit.png\n        src/qt/res/icons/editcopy.png\n        src/qt/res/icons/editpaste.png\n        src/qt/res/icons/export.png\n        src/qt/res/icons/eye.png\n-       src/qt/res/icons/filesave.png\n        src/qt/res/icons/history.png\n-       src/qt/res/icons/info.png\n-       src/qt/res/icons/key.png\n        src/qt/res/icons/lock_*.png\n-       src/qt/res/icons/open.png\n        src/qt/res/icons/overview.png\n-       src/qt/res/icons/quit.png\n        src/qt/res/icons/receive.png\n        src/qt/res/icons/remove.png\n        src/qt/res/icons/send.png\n@@ -60,7 +53,7 @@ Files: src/qt/res/icons/connect*.png\n Copyright: Marco Falke\n            Luke Dashjr\n License: Expat\n-Comment: Inspired by Stephan Hutchings Typicons\n+Comment: Inspired by Stephen Hutchings' Typicons\n \n Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/mine.svg\n@@ -72,21 +65,17 @@ Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/hd_enabled.svg\n Copyright: Jonas Schnelli\n License: Expat\n-Comment:\n \n Files: src/qt/res/icons/clock*.png\n        src/qt/res/icons/eye_*.png\n        src/qt/res/icons/tx_in*.png\n-       src/qt/res/icons/verify.png\n        src/qt/res/src/clock_*.svg\n        src/qt/res/src/tx_*.svg\n-       src/qt/res/src/verify.svg\n-Copyright: Stephan Hutching, Jonas Schnelli\n+Copyright: Stephen Hutchings, Jonas Schnelli\n License: Expat\n-Comment: Modifications of Stephan Hutchings Typicons\n+Comment: Modifications of Stephen Hutchings' Typicons\n \n-Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n+Files: src/qt/res/icons/bitcoin.*\n        share/pixmaps/bitcoin*\n        src/qt/res/src/bitcoin.svg\n Copyright: Bitboy, Jonas Schnelli"
      },
      {
        "sha": "04fa02484f558830a8e8b846aaedb4cc93f80503",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -89,66 +89,6 @@ example:\n BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n ```\n \n-github-merge.py\n-===============\n-\n-A small script to automate merging pull-requests securely and sign them with GPG.\n-\n-For example:\n-\n-  ./github-merge.py 3077\n-\n-(in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n-\n-What it does:\n-* Fetch master and the pull request.\n-* Locally construct a merge commit.\n-* Show the diff that merge results in.\n-* Ask you to verify the resulting source tree (so you can do a make\n-check or whatever).\n-* Ask you whether to GPG sign the merge commit.\n-* Ask you whether to push the result upstream.\n-\n-This means that there are no potential race conditions (where a\n-pullreq gets updated while you're reviewing it, but before you click\n-merge), and when using GPG signatures, that even a compromised GitHub\n-couldn't mess with the sources.\n-\n-Setup\n----------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n-\n-    git config githubmerge.repository bitcoin/bitcoin\n-    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n-    git config --global user.signingkey mykeyid\n-\n-Authentication (optional)\n---------------------------\n-\n-The API request limit for unauthenticated requests is quite low, but the\n-limit for authenticated requests is much higher. If you start running\n-into rate limiting errors it can be useful to set an authentication token\n-so that the script can authenticate requests.\n-\n-- First, go to [Personal access tokens](https://github.com/settings/tokens).\n-- Click 'Generate new token'.\n-- Fill in an arbitrary token description. No further privileges are needed.\n-- Click the `Generate token` button at the bottom of the form.\n-- Copy the generated token (should be a hexadecimal string)\n-\n-Then do:\n-\n-    git config --global user.ghtoken \"pasted token\"\n-\n-Create and verify timestamps of merge commits\n----------------------------------------------\n-To create or verify timestamps on the merge commits, install the OpenTimestamps\n-client via `pip3 install opentimestamps-client`. Then, download the gpg wrapper\n-`ots-git-gpg-wrapper.sh` and set it as git's `gpg.program`. See\n-[the ots git integration documentation](https://github.com/opentimestamps/opentimestamps-client/blob/master/doc/git-integration.md#usage)\n-for further details.\n-\n optimize-pngs.py\n ================\n \n@@ -180,18 +120,6 @@ If there are 'unsupported' symbols, the return value will be 1 a list like this\n     .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n     .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n-update-translations.py\n-======================\n-\n-Run this script from the root of the repository to update all translations from transifex.\n-It will do the following automatically:\n-\n-- fetch all translations\n-- post-process them into valid and committable format\n-- add missing translations to the build system (TODO)\n-\n-See doc/translation-process.md for more information.\n-\n circular-dependencies.py\n ========================\n "
      },
      {
        "sha": "98eee67f4300853629cc61baaaed13008819038c",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -106,7 +106,7 @@ def main():\n   filename = None\n   lines_by_file = {}\n   for line in sys.stdin:\n-    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    match = re.search(r'^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n     if match:\n       filename = match.group(2)\n     if filename is None:\n@@ -119,7 +119,7 @@ def main():\n       if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n         continue\n \n-    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    match = re.search(r'^@@.*\\+(\\d+)(,(\\d+))?', line)\n     if match:\n       start_line = int(match.group(1))\n       line_count = 1"
      },
      {
        "sha": "5307b041978769661d07a44e7f466157ce659ad1",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2018 The Bitcoin Core developers\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -34,7 +34,7 @@\n     \"src/univalue/\",\n ]\n \n-INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py']\n+INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py', '*.sh', '*.bash-completion']\n INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n \n def applies_to_file(filename):\n@@ -71,7 +71,7 @@ def get_filenames_to_examine(base_directory):\n ################################################################################\n \n \n-COPYRIGHT_WITH_C = 'Copyright \\(c\\)'\n+COPYRIGHT_WITH_C = r'Copyright \\(c\\)'\n COPYRIGHT_WITHOUT_C = 'Copyright'\n ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n \n@@ -85,21 +85,21 @@ def get_filenames_to_examine(base_directory):\n ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n \n def compile_copyright_regex(copyright_style, year_style, name):\n-    return re.compile('%s %s,? %s' % (copyright_style, year_style, name))\n+    return re.compile(r'%s %s,? %s( +\\*)?\\n' % (copyright_style, year_style, name))\n \n EXPECTED_HOLDER_NAMES = [\n-    \"Satoshi Nakamoto\\n\",\n-    \"The Bitcoin Core developers\\n\",\n-    \"BitPay Inc\\.\\n\",\n-    \"University of Illinois at Urbana-Champaign\\.\\n\",\n-    \"Pieter Wuille\\n\",\n-    \"Wladimir J. van der Laan\\n\",\n-    \"Jeff Garzik\\n\",\n-    \"Jan-Klaas Kollhof\\n\",\n-    \"ArtForz -- public domain half-a-node\\n\",\n-    \"Intel Corporation\",\n-    \"The Zcash developers\",\n-    \"Jeremy Rubin\",\n+    r\"Satoshi Nakamoto\",\n+    r\"The Bitcoin Core developers\",\n+    r\"BitPay Inc\\.\",\n+    r\"University of Illinois at Urbana-Champaign\\.\",\n+    r\"Pieter Wuille\",\n+    r\"Wladimir J\\. van der Laan\",\n+    r\"Jeff Garzik\",\n+    r\"Jan-Klaas Kollhof\",\n+    r\"ArtForz -- public domain half-a-node\",\n+    r\"Intel Corporation ?\",\n+    r\"The Zcash developers\",\n+    r\"Jeremy Rubin\",\n ]\n \n DOMINANT_STYLE_COMPILED = {}\n@@ -329,7 +329,7 @@ def write_file_lines(filename, file_lines):\n # update header years execution\n ################################################################################\n \n-COPYRIGHT = 'Copyright \\(c\\)'\n+COPYRIGHT = r'Copyright \\(c\\)'\n YEAR = \"20[0-9][0-9]\"\n YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n HOLDER = 'The Bitcoin Core developers'"
      },
      {
        "sha": "78ac671bfec2d0fc3fcfb01ef194c501052f4511",
        "filename": "contrib/devtools/github-merge.py",
        "status": "removed",
        "additions": 0,
        "deletions": 413,
        "changes": 413,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,413 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016-2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# This script will locally construct a merge commit for a pull request on a\n-# github repository, inspect it, sign it and optionally push it.\n-\n-# The following temporary branches are created/overwritten and deleted:\n-# * pull/$PULL/base (the current master we're merging onto)\n-# * pull/$PULL/head (the current state of the remote pull request)\n-# * pull/$PULL/merge (github's merge)\n-# * pull/$PULL/local-merge (our merge)\n-\n-# In case of a clean merge that is accepted by the user, the local branch with\n-# name $BRANCH is overwritten with the merged result, and optionally pushed.\n-import os\n-from sys import stdin,stdout,stderr\n-import argparse\n-import hashlib\n-import subprocess\n-import sys\n-import json\n-import codecs\n-from urllib.request import Request, urlopen\n-from urllib.error import HTTPError\n-\n-# External tools (can be overridden using environment)\n-GIT = os.getenv('GIT','git')\n-BASH = os.getenv('BASH','bash')\n-\n-# OS specific configuration for terminal attributes\n-ATTR_RESET = ''\n-ATTR_PR = ''\n-ATTR_NAME = ''\n-ATTR_WARN = ''\n-COMMIT_FORMAT = '%H %s (%an)%d'\n-if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n-    ATTR_RESET = '\\033[0m'\n-    ATTR_PR = '\\033[1;36m'\n-    ATTR_NAME = '\\033[0;36m'\n-    ATTR_WARN = '\\033[1;31m'\n-    COMMIT_FORMAT = '%C(bold blue)%H%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n-\n-def git_config_get(option, default=None):\n-    '''\n-    Get named configuration option from git repository.\n-    '''\n-    try:\n-        return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n-    except subprocess.CalledProcessError:\n-        return default\n-\n-def get_response(req_url, ghtoken):\n-    req = Request(req_url)\n-    if ghtoken is not None:\n-        req.add_header('Authorization', 'token ' + ghtoken)\n-    return urlopen(req)\n-\n-def retrieve_json(req_url, ghtoken, use_pagination=False):\n-    '''\n-    Retrieve json from github.\n-    Return None if an error happens.\n-    '''\n-    try:\n-        reader = codecs.getreader('utf-8')\n-        if not use_pagination:\n-            return json.load(reader(get_response(req_url, ghtoken)))\n-\n-        obj = []\n-        page_num = 1\n-        while True:\n-            req_url_page = '{}?page={}'.format(req_url, page_num)\n-            result = get_response(req_url_page, ghtoken)\n-            obj.extend(json.load(reader(result)))\n-\n-            link = result.headers.get('link', None)\n-            if link is not None:\n-                link_next = [l for l in link.split(',') if 'rel=\"next\"' in l]\n-                if len(link_next) > 0:\n-                    page_num = int(link_next[0][link_next[0].find(\"page=\")+5:link_next[0].find(\">\")])\n-                    continue\n-            break\n-        return obj\n-    except HTTPError as e:\n-        error_message = e.read()\n-        print('Warning: unable to retrieve pull information from github: %s' % e)\n-        print('Detailed error: %s' % error_message)\n-        return None\n-    except Exception as e:\n-        print('Warning: unable to retrieve pull information from github: %s' % e)\n-        return None\n-\n-def retrieve_pr_info(repo,pull,ghtoken):\n-    req_url = \"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull\n-    return retrieve_json(req_url,ghtoken)\n-\n-def retrieve_pr_comments(repo,pull,ghtoken):\n-    req_url = \"https://api.github.com/repos/\"+repo+\"/issues/\"+pull+\"/comments\"\n-    return retrieve_json(req_url,ghtoken,use_pagination=True)\n-\n-def retrieve_pr_reviews(repo,pull,ghtoken):\n-    req_url = \"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull+\"/reviews\"\n-    return retrieve_json(req_url,ghtoken,use_pagination=True)\n-\n-def ask_prompt(text):\n-    print(text,end=\" \",file=stderr)\n-    stderr.flush()\n-    reply = stdin.readline().rstrip()\n-    print(\"\",file=stderr)\n-    return reply\n-\n-def get_symlink_files():\n-    files = sorted(subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', 'HEAD']).splitlines())\n-    ret = []\n-    for f in files:\n-        if (int(f.decode('utf-8').split(\" \")[0], 8) & 0o170000) == 0o120000:\n-            ret.append(f.decode('utf-8').split(\"\\t\")[1])\n-    return ret\n-\n-def tree_sha512sum(commit='HEAD'):\n-    # request metadata for entire tree, recursively\n-    files = []\n-    blob_by_name = {}\n-    for line in subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', commit]).splitlines():\n-        name_sep = line.index(b'\\t')\n-        metadata = line[:name_sep].split() # perms, 'blob', blobid\n-        assert(metadata[1] == b'blob')\n-        name = line[name_sep+1:]\n-        files.append(name)\n-        blob_by_name[name] = metadata[2]\n-\n-    files.sort()\n-    # open connection to git-cat-file in batch mode to request data for all blobs\n-    # this is much faster than launching it per file\n-    p = subprocess.Popen([GIT, 'cat-file', '--batch'], stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n-    overall = hashlib.sha512()\n-    for f in files:\n-        blob = blob_by_name[f]\n-        # request blob\n-        p.stdin.write(blob + b'\\n')\n-        p.stdin.flush()\n-        # read header: blob, \"blob\", size\n-        reply = p.stdout.readline().split()\n-        assert(reply[0] == blob and reply[1] == b'blob')\n-        size = int(reply[2])\n-        # hash the blob data\n-        intern = hashlib.sha512()\n-        ptr = 0\n-        while ptr < size:\n-            bs = min(65536, size - ptr)\n-            piece = p.stdout.read(bs)\n-            if len(piece) == bs:\n-                intern.update(piece)\n-            else:\n-                raise IOError('Premature EOF reading git cat-file output')\n-            ptr += bs\n-        dig = intern.hexdigest()\n-        assert(p.stdout.read(1) == b'\\n') # ignore LF that follows blob data\n-        # update overall hash with file hash\n-        overall.update(dig.encode(\"utf-8\"))\n-        overall.update(\"  \".encode(\"utf-8\"))\n-        overall.update(f)\n-        overall.update(\"\\n\".encode(\"utf-8\"))\n-    p.stdin.close()\n-    if p.wait():\n-        raise IOError('Non-zero return value executing git cat-file')\n-    return overall.hexdigest()\n-\n-def get_acks_from_comments(head_commit, comments):\n-    # Look for abbreviated commit id, because not everyone wants to type/paste\n-    # the whole thing and the chance of collisions within a PR is small enough\n-    head_abbrev = head_commit[0:6]\n-    acks = []\n-    for c in comments:\n-        review = [l for l in c['body'].split('\\r\\n') if 'ACK' in l and head_abbrev in l]\n-        if review:\n-            acks.append((c['user']['login'], review[0]))\n-    return acks\n-\n-def make_acks_message(head_commit, acks):\n-    if acks:\n-        ack_str ='\\n\\nACKs for top commit:\\n'.format(head_commit)\n-        for name, msg in acks:\n-            ack_str += '  {}:\\n'.format(name)\n-            ack_str += '    {}\\n'.format(msg)\n-    else:\n-        ack_str ='\\n\\nTop commit has no ACKs.\\n'\n-    return ack_str\n-\n-def print_merge_details(pull, title, branch, base_branch, head_branch, acks):\n-    print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n-    subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n-    if acks is not None:\n-        if acks:\n-            print('{}ACKs:{}'.format(ATTR_PR, ATTR_RESET))\n-            for (name, message) in acks:\n-                print('* {} {}({}){}'.format(message, ATTR_NAME, name, ATTR_RESET))\n-        else:\n-            print('{}Top commit has no ACKs!{}'.format(ATTR_WARN, ATTR_RESET))\n-\n-def parse_arguments():\n-    epilog = '''\n-        In addition, you can set the following git configuration variables:\n-        githubmerge.repository (mandatory),\n-        user.signingkey (mandatory),\n-        user.ghtoken (default: none).\n-        githubmerge.host (default: git@github.com),\n-        githubmerge.branch (no default),\n-        githubmerge.testcmd (default: none).\n-    '''\n-    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n-            epilog=epilog)\n-    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n-        help='Pull request ID to merge')\n-    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n-        default=None, help='Branch to merge against (default: githubmerge.branch setting, or base branch for pull, or \\'master\\')')\n-    return parser.parse_args()\n-\n-def main():\n-    # Extract settings from git repo\n-    repo = git_config_get('githubmerge.repository')\n-    host = git_config_get('githubmerge.host','git@github.com')\n-    opt_branch = git_config_get('githubmerge.branch',None)\n-    testcmd = git_config_get('githubmerge.testcmd')\n-    ghtoken = git_config_get('user.ghtoken')\n-    signingkey = git_config_get('user.signingkey')\n-    if repo is None:\n-        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n-        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        sys.exit(1)\n-    if signingkey is None:\n-        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n-        print(\"git config --global user.signingkey <key>\",file=stderr)\n-        sys.exit(1)\n-\n-    if host.startswith(('https:','http:')):\n-        host_repo = host+\"/\"+repo+\".git\"\n-    else:\n-        host_repo = host+\":\"+repo\n-\n-    # Extract settings from command line\n-    args = parse_arguments()\n-    pull = str(args.pull[0])\n-\n-    # Receive pull information from github\n-    info = retrieve_pr_info(repo,pull,ghtoken)\n-    if info is None:\n-        sys.exit(1)\n-    title = info['title'].strip()\n-    body = info['body'].strip()\n-    # precedence order for destination branch argument:\n-    #   - command line argument\n-    #   - githubmerge.branch setting\n-    #   - base branch for pull (as retrieved from github)\n-    #   - 'master'\n-    branch = args.branch or opt_branch or info['base']['ref'] or 'master'\n-\n-    # Initialize source branches\n-    head_branch = 'pull/'+pull+'/head'\n-    base_branch = 'pull/'+pull+'/base'\n-    merge_branch = 'pull/'+pull+'/merge'\n-    local_merge_branch = 'pull/'+pull+'/local-merge'\n-\n-    devnull = open(os.devnull, 'w', encoding=\"utf8\")\n-    try:\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-    except subprocess.CalledProcessError:\n-        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*',\n-                                                          '+refs/heads/'+branch+':refs/heads/'+base_branch])\n-    except subprocess.CalledProcessError:\n-        print(\"ERROR: Cannot find pull request #%s or branch %s on %s.\" % (pull,branch,host_repo), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n-        head_commit = subprocess.check_output([GIT,'log','-1','--pretty=format:%H',head_branch]).decode('utf-8')\n-        assert len(head_commit) == 40\n-    except subprocess.CalledProcessError:\n-        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        sys.exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError:\n-        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        sys.exit(3)\n-    subprocess.check_call([GIT,'checkout','-q',base_branch])\n-    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n-    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n-\n-    try:\n-        # Go up to the repository's root.\n-        toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n-        os.chdir(toplevel)\n-        # Create unsigned merge commit.\n-        if title:\n-            firstline = 'Merge #%s: %s' % (pull,title)\n-        else:\n-            firstline = 'Merge #%s' % (pull,)\n-        message = firstline + '\\n\\n'\n-        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%H %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n-        message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n-        try:\n-            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','--no-gpg-sign','-m',message.encode('utf-8'),head_branch])\n-        except subprocess.CalledProcessError:\n-            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n-            subprocess.check_call([GIT,'merge','--abort'])\n-            sys.exit(4)\n-        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n-        if logmsg.rstrip() != firstline.rstrip():\n-            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            sys.exit(4)\n-\n-        symlink_files = get_symlink_files()\n-        for f in symlink_files:\n-            print(\"ERROR: File %s was a symlink\" % f)\n-        if len(symlink_files) > 0:\n-            sys.exit(4)\n-\n-        # Compute SHA512 of git tree (to be able to detect changes before sign-off)\n-        try:\n-            first_sha512 = tree_sha512sum()\n-        except subprocess.CalledProcessError:\n-            print(\"ERROR: Unable to compute tree hash\")\n-            sys.exit(4)\n-\n-        print_merge_details(pull, title, branch, base_branch, head_branch, None)\n-        print()\n-\n-        # Run test command if configured.\n-        if testcmd:\n-            if subprocess.call(testcmd,shell=True):\n-                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                sys.exit(5)\n-\n-            # Show the created merge.\n-            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n-            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n-            if diff:\n-                print(\"WARNING: merge differs from github!\",file=stderr)\n-                reply = ask_prompt(\"Type 'ignore' to continue.\")\n-                if reply.lower() == 'ignore':\n-                    print(\"Difference with github ignored.\",file=stderr)\n-                else:\n-                    sys.exit(6)\n-        else:\n-            # Verify the result manually.\n-            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n-            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n-            print(\"Type 'exit' when done.\",file=stderr)\n-            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n-                os.putenv('debian_chroot',pull)\n-            subprocess.call([BASH,'-i'])\n-\n-        second_sha512 = tree_sha512sum()\n-        if first_sha512 != second_sha512:\n-            print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n-            sys.exit(8)\n-\n-        # Retrieve PR comments and ACKs and add to commit message, store ACKs to print them with commit\n-        # description\n-        comments = retrieve_pr_comments(repo,pull,ghtoken) + retrieve_pr_reviews(repo,pull,ghtoken)\n-        if comments is None:\n-            print(\"ERROR: Could not fetch PR comments and reviews\",file=stderr)\n-            sys.exit(1)\n-        acks = get_acks_from_comments(head_commit=head_commit, comments=comments)\n-        message += make_acks_message(head_commit=head_commit, acks=acks)\n-        # end message with SHA512 tree hash, then update message\n-        message += '\\n\\nTree-SHA512: ' + first_sha512\n-        try:\n-            subprocess.check_call([GIT,'commit','--amend','--no-gpg-sign','-m',message.encode('utf-8')])\n-        except subprocess.CalledProcessError:\n-            print(\"ERROR: Cannot update message.\", file=stderr)\n-            sys.exit(4)\n-\n-        # Sign the merge commit.\n-        print_merge_details(pull, title, branch, base_branch, head_branch, acks)\n-        while True:\n-            reply = ask_prompt(\"Type 's' to sign off on the above merge, or 'x' to reject and exit.\").lower()\n-            if reply == 's':\n-                try:\n-                    subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n-                    break\n-                except subprocess.CalledProcessError:\n-                    print(\"Error while signing, asking again.\",file=stderr)\n-            elif reply == 'x':\n-                print(\"Not signing off on merge, exiting.\",file=stderr)\n-                sys.exit(1)\n-\n-        # Put the result in branch.\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n-    finally:\n-        # Clean up temporary branches.\n-        subprocess.call([GIT,'checkout','-q',branch])\n-        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n-\n-    # Push the result.\n-    while True:\n-        reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s, or 'x' to exit without pushing.\" % (host_repo,branch)).lower()\n-        if reply == 'push':\n-            subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n-            break\n-        elif reply == 'x':\n-            sys.exit(1)\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "d8b684026c52667a864d0e5c9e9244f47e8a25be",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -141,7 +141,7 @@ def read_libraries(filename):\n     for line in stdout.splitlines():\n         tokens = line.split()\n         if len(tokens)>2 and tokens[1] == '(NEEDED)':\n-            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n+            match = re.match(r'^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n             if match:\n                 libraries.append(match.group(1))\n             else:\n@@ -171,5 +171,3 @@ def read_libraries(filename):\n                 retval = 1\n \n     sys.exit(retval)\n-\n-"
      },
      {
        "sha": "1b9d3a4c279d4b91778068591de5b0962e105876",
        "filename": "contrib/devtools/update-translations.py",
        "status": "removed",
        "additions": 0,
        "deletions": 215,
        "changes": 215,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,215 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Run this script from the root of the repository to update all translations from\n-transifex.\n-It will do the following automatically:\n-\n-- fetch all translations using the tx tool\n-- post-process them into valid and committable format\n-  - remove invalid control characters\n-  - remove location tags (makes diffs less noisy)\n-\n-TODO:\n-- auto-add new translations to the build system according to the translation process\n-'''\n-import subprocess\n-import re\n-import sys\n-import os\n-import io\n-import xml.etree.ElementTree as ET\n-\n-# Name of transifex tool\n-TX = 'tx'\n-# Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n-# Directory with locale files\n-LOCALE_DIR = 'src/qt/locale'\n-# Minimum number of messages for translation to be considered at all\n-MIN_NUM_MESSAGES = 10\n-# Regexp to check for Bitcoin addresses\n-ADDRESS_REGEXP = re.compile('([13]|bc1)[a-zA-Z0-9]{30,}')\n-\n-def check_at_repository_root():\n-    if not os.path.exists('.git'):\n-        print('No .git directory found')\n-        print('Execute this script at the root of the repository', file=sys.stderr)\n-        sys.exit(1)\n-\n-def fetch_all_translations():\n-    if subprocess.call([TX, 'pull', '-f', '-a']):\n-        print('Error while fetching translations', file=sys.stderr)\n-        sys.exit(1)\n-\n-def find_format_specifiers(s):\n-    '''Find all format specifiers in a string.'''\n-    pos = 0\n-    specifiers = []\n-    while True:\n-        percent = s.find('%', pos)\n-        if percent < 0:\n-            break\n-        specifiers.append(s[percent+1])\n-        pos = percent+2\n-    return specifiers\n-\n-def split_format_specifiers(specifiers):\n-    '''Split format specifiers between numeric (Qt) and others (strprintf)'''\n-    numeric = []\n-    other = []\n-    for s in specifiers:\n-        if s in {'1','2','3','4','5','6','7','8','9'}:\n-            numeric.append(s)\n-        else:\n-            other.append(s)\n-\n-    # If both numeric format specifiers and \"others\" are used, assume we're dealing\n-    # with a Qt-formatted message. In the case of Qt formatting (see https://doc.qt.io/qt-5/qstring.html#arg)\n-    # only numeric formats are replaced at all. This means \"(percentage: %1%)\" is valid, without needing\n-    # any kind of escaping that would be necessary for strprintf. Without this, this function\n-    # would wrongly detect '%)' as a printf format specifier.\n-    if numeric:\n-        other = []\n-\n-    # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n-    return set(numeric),other\n-\n-def sanitize_string(s):\n-    '''Sanitize string for printing'''\n-    return s.replace('\\n',' ')\n-\n-def check_format_specifiers(source, translation, errors, numerus):\n-    source_f = split_format_specifiers(find_format_specifiers(source))\n-    # assert that no source messages contain both Qt and strprintf format specifiers\n-    # if this fails, go change the source as this is hacky and confusing!\n-    assert(not(source_f[0] and source_f[1]))\n-    try:\n-        translation_f = split_format_specifiers(find_format_specifiers(translation))\n-    except IndexError:\n-        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-        return False\n-    else:\n-        if source_f != translation_f:\n-            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n-                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n-                return True\n-            errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-            return False\n-    return True\n-\n-def all_ts_files(suffix=''):\n-    for filename in os.listdir(LOCALE_DIR):\n-        # process only language files, and do not process source language\n-        if not filename.endswith('.ts'+suffix) or filename == SOURCE_LANG+suffix:\n-            continue\n-        if suffix: # remove provided suffix\n-            filename = filename[0:-len(suffix)]\n-        filepath = os.path.join(LOCALE_DIR, filename)\n-        yield(filename, filepath)\n-\n-FIX_RE = re.compile(b'[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f]')\n-def remove_invalid_characters(s):\n-    '''Remove invalid characters from translation string'''\n-    return FIX_RE.sub(b'', s)\n-\n-# Override cdata escape function to make our output match Qt's (optional, just for cleaner diffs for\n-# comparison, disable by default)\n-_orig_escape_cdata = None\n-def escape_cdata(text):\n-    text = _orig_escape_cdata(text)\n-    text = text.replace(\"'\", '&apos;')\n-    text = text.replace('\"', '&quot;')\n-    return text\n-\n-def contains_bitcoin_addr(text, errors):\n-    if text is not None and ADDRESS_REGEXP.search(text) is not None:\n-        errors.append('Translation \"%s\" contains a bitcoin address. This will be removed.' % (text))\n-        return True\n-    return False\n-\n-def postprocess_translations(reduce_diff_hacks=False):\n-    print('Checking and postprocessing...')\n-\n-    if reduce_diff_hacks:\n-        global _orig_escape_cdata\n-        _orig_escape_cdata = ET._escape_cdata\n-        ET._escape_cdata = escape_cdata\n-\n-    for (filename,filepath) in all_ts_files():\n-        os.rename(filepath, filepath+'.orig')\n-\n-    have_errors = False\n-    for (filename,filepath) in all_ts_files('.orig'):\n-        # pre-fixups to cope with transifex output\n-        parser = ET.XMLParser(encoding='utf-8') # need to override encoding because 'utf8' is not understood only 'utf-8'\n-        with open(filepath + '.orig', 'rb') as f:\n-            data = f.read()\n-        # remove control characters; this must be done over the entire file otherwise the XML parser will fail\n-        data = remove_invalid_characters(data)\n-        tree = ET.parse(io.BytesIO(data), parser=parser)\n-\n-        # iterate over all messages in file\n-        root = tree.getroot()\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                numerus = message.get('numerus') == 'yes'\n-                source = message.find('source').text\n-                translation_node = message.find('translation')\n-                # pick all numerusforms\n-                if numerus:\n-                    translations = [i.text for i in translation_node.findall('numerusform')]\n-                else:\n-                    translations = [translation_node.text]\n-\n-                for translation in translations:\n-                    if translation is None:\n-                        continue\n-                    errors = []\n-                    valid = check_format_specifiers(source, translation, errors, numerus) and not contains_bitcoin_addr(translation, errors)\n-\n-                    for error in errors:\n-                        print('%s: %s' % (filename, error))\n-\n-                    if not valid: # set type to unfinished and clear string if invalid\n-                        translation_node.clear()\n-                        translation_node.set('type', 'unfinished')\n-                        have_errors = True\n-\n-                # Remove location tags\n-                for location in message.findall('location'):\n-                    message.remove(location)\n-\n-                # Remove entire message if it is an unfinished translation\n-                if translation_node.get('type') == 'unfinished':\n-                    context.remove(message)\n-\n-        # check if document is (virtually) empty, and remove it if so\n-        num_messages = 0\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                num_messages += 1\n-        if num_messages < MIN_NUM_MESSAGES:\n-            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n-            continue\n-\n-        # write fixed-up tree\n-        # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n-        if reduce_diff_hacks:\n-            out = io.BytesIO()\n-            tree.write(out, encoding='utf-8')\n-            out = out.getvalue()\n-            out = out.replace(b' />', b'/>')\n-            with open(filepath, 'wb') as f:\n-                f.write(out)\n-        else:\n-            tree.write(filepath, encoding='utf-8')\n-    return have_errors\n-\n-if __name__ == '__main__':\n-    check_at_repository_root()\n-    fetch_all_translations()\n-    postprocess_translations()\n-"
      },
      {
        "sha": "dee25ff67b61e3b798cf56f53657536e496cfef8",
        "filename": "contrib/devtools/utxo_snapshot.sh",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/utxo_snapshot.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/devtools/utxo_snapshot.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/utxo_snapshot.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,44 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+export LC_ALL=C\n+\n+set -ueo pipefail\n+\n+if (( $# < 3 )); then\n+  echo 'Usage: utxo_snapshot.sh <generate-at-height> <snapshot-out-path> <bitcoin-cli-call ...>'\n+  echo\n+  echo \"  if <snapshot-out-path> is '-', don't produce a snapshot file but instead print the \"\n+  echo \"  expected assumeutxo hash\"\n+  echo\n+  echo 'Examples:'\n+  echo\n+  echo \"  ./contrib/devtools/utxo_snapshot.sh 570000 utxo.dat ./src/bitcoin-cli -datadir=\\$(pwd)/testdata\"\n+  echo '  ./contrib/devtools/utxo_snapshot.sh 570000 - ./src/bitcoin-cli'\n+  exit 1\n+fi\n+\n+GENERATE_AT_HEIGHT=\"${1}\"; shift;\n+OUTPUT_PATH=\"${1}\"; shift;\n+# Most of the calls we make take a while to run, so pad with a lengthy timeout.\n+BITCOIN_CLI_CALL=\"${*} -rpcclienttimeout=9999999\"\n+\n+# Block we'll invalidate/reconsider to rewind/fast-forward the chain.\n+PIVOT_BLOCKHASH=$($BITCOIN_CLI_CALL getblockhash $(( GENERATE_AT_HEIGHT + 1 )) )\n+\n+(>&2 echo \"Rewinding chain back to height ${GENERATE_AT_HEIGHT} (by invalidating ${PIVOT_BLOCKHASH}); this may take a while\")\n+${BITCOIN_CLI_CALL} invalidateblock \"${PIVOT_BLOCKHASH}\"\n+\n+if [[ \"${OUTPUT_PATH}\" = \"-\" ]]; then\n+  (>&2 echo \"Generating txoutset info...\")\n+  ${BITCOIN_CLI_CALL} gettxoutsetinfo | grep hash_serialized_2 | sed 's/^.*: \"\\(.\\+\\)\\+\",/\\1/g'\n+else\n+  (>&2 echo \"Generating UTXO snapshot...\")\n+  ${BITCOIN_CLI_CALL} dumptxoutset \"${OUTPUT_PATH}\"\n+fi\n+\n+(>&2 echo \"Restoring chain to original height; this may take a while\")\n+${BITCOIN_CLI_CALL} reconsiderblock \"${PIVOT_BLOCKHASH}\""
      },
      {
        "sha": "e0b9f743972a56d7393278e194c3213f1a041701",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-core-linux-0.19\"\n+name: \"bitcoin-core-linux-0.20\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:\n@@ -181,7 +181,7 @@ script: |\n     rm -rf ${DISTNAME}/lib/pkgconfig\n     find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n     find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    cp ../doc/README.md ${DISTNAME}/\n+    cp ../README.md ${DISTNAME}/\n     find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n     find ${DISTNAME} -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n     cd ../../"
      },
      {
        "sha": "a563bef778e975c8476622667a7f6027370c77af",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-core-osx-0.19\"\n+name: \"bitcoin-core-osx-0.20\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:"
      },
      {
        "sha": "1c3d6a8dc81f7d41e58909b592b575346555297f",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 13,
        "deletions": 25,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-core-win-0.19\"\n+name: \"bitcoin-core-win-0.20\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:\n@@ -22,7 +22,6 @@ packages:\n - \"zip\"\n - \"ca-certificates\"\n - \"python3\"\n-- \"rename\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n@@ -73,18 +72,10 @@ script: |\n   done\n   }\n \n-  function create_per-host_linker_wrapper {\n-  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  function create_per-host_compiler_wrapper {\n+  # -posix variant is required for c++11 threading.\n   for i in $HOSTS; do\n     mkdir -p ${WRAP_DIR}/${i}\n-    for prog in collect2; do\n-        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}/${prog}\n-        REAL=$(${i}-gcc -print-prog-name=${prog})\n-        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n-        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n-        chmod +x ${WRAP_DIR}/${i}/${prog}\n-    done\n     for prog in gcc g++; do\n         echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n@@ -101,7 +92,7 @@ script: |\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n   create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n+  create_per-host_compiler_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n@@ -115,7 +106,7 @@ script: |\n   export PATH=${PATH_orig}\n   create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n   create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_linker_wrapper \"${REFERENCE_DATETIME}\"\n+  create_per-host_compiler_wrapper \"${REFERENCE_DATETIME}\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n@@ -124,14 +115,11 @@ script: |\n   make dist\n   SOURCEDIST=`echo bitcoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar -xf ../$SOURCEDIST\n   find bitcoin-* | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  mkdir -p $OUTDIR/src\n-  cp ../$SOURCEDIST $OUTDIR/src\n   popd\n \n   # Workaround for tarball not building with the bare tag version (prep)\n@@ -157,24 +145,24 @@ script: |\n     make ${MAKEOPTS} -C src check-security\n     make deploy\n     make install DESTDIR=${INSTALLPATH}\n-    rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cp -f --target-directory=\"${OUTDIR}\" ./bitcoin-*-setup-unsigned.exe\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n-    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n+    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    cp ../doc/README_windows.txt ${DISTNAME}/readme.txt\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}-debug.zip\n     cd ../../\n     rm -rf distsrc-${i}\n   done\n+  mkdir -p $OUTDIR/src\n+  mv $SOURCEDIST $OUTDIR/src\n   cp -rf contrib/windeploy $BUILD_DIR\n   cd $BUILD_DIR/windeploy\n   mkdir unsigned\n   cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n   find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip"
      },
      {
        "sha": "9222a40b175e5866d2e41bc7e340b173d0c3399d",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,3 +1,4 @@\n+9D3CC86A72F8494342EA5FD10A41BDC3F4FAFF1C Aaron Clauson (sipsorcery)\n 617C90010B3BD370B0AC7D424BB42E31C79111B8 Akira Takizawa\n E944AE667CF960B1004BC32FCA662BE18B877A60 Andreas Schildbach\n 152812300785C96444D3334D17565732E08E5E41 Andrew Chow"
      },
      {
        "sha": "ee207a957c12be10c155fec9ae8aa856ea3906e5",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -30,23 +30,38 @@ fi\n # Given a package name and an output name, return the path of that output in our\n # current guix environment\n store_path() {\n-    grep --extended-regexp \"/[^-]{32}-${1}-cross-${HOST}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n+    grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n         | head --lines=1 \\\n         | sed --expression='s|^[[:space:]]*\"||' \\\n               --expression='s|\"[[:space:]]*$||'\n }\n \n # Determine output paths to use in CROSS_* environment variables\n-CROSS_GLIBC=\"$(store_path glibc)\"\n-CROSS_GLIBC_STATIC=\"$(store_path glibc static)\"\n-CROSS_KERNEL=\"$(store_path linux-libre-headers)\"\n-CROSS_GCC=\"$(store_path gcc)\"\n+CROSS_GLIBC=\"$(store_path glibc-cross-${HOST})\"\n+CROSS_GLIBC_STATIC=\"$(store_path glibc-cross-${HOST} static)\"\n+CROSS_KERNEL=\"$(store_path linux-libre-headers-cross-${HOST})\"\n+CROSS_GCC=\"$(store_path gcc-cross-${HOST})\"\n+CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n \n # Set environment variables to point Guix's cross-toolchain to the right\n # includes/libs for $HOST\n-export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n-export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n-export CROSS_LIBRARY_PATH=\"${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib:${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_KERNEL}/lib\"\n+#\n+# NOTE: CROSS_C_INCLUDE_PATH is missing ${CROSS_GCC_LIB}/include-fixed, because\n+# the limits.h in it is missing a '#include_next <limits.h>'\n+#\n+export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n+export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n+\n+# Sanity check CROSS_*_PATH directories\n+IFS=':' read -ra PATHS <<< \"${CROSS_C_INCLUDE_PATH}:${CROSS_CPLUS_INCLUDE_PATH}:${CROSS_LIBRARY_PATH}\"\n+for p in \"${PATHS[@]}\"; do\n+    if [ ! -d \"$p\" ]; then\n+        echo \"'$p' doesn't exist or isn't a directory... Aborting...\"\n+        exit 1\n+    fi\n+done\n \n # Disable Guix ld auto-rpath behavior\n export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n@@ -121,17 +136,10 @@ DISTNAME=\"$(basename \"$SOURCEDIST\" '.tar.gz')\"\n # Binary Tarball Building #\n ###########################\n \n-# Create a spec file to normalize ssp linking behaviour\n-spec_file=\"$(mktemp)\"\n-cat << EOF > \"$spec_file\"\n-*link_ssp:\n-%{fstack-protector|fstack-protector-all|fstack-protector-strong|fstack-protector-explicit:}\n-EOF\n-\n # Similar flags to Gitian\n CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n-HOST_CFLAGS=\"-O2 -g -specs=${spec_file} -ffile-prefix-map=${PWD}=.\"\n-HOST_CXXFLAGS=\"-O2 -g -specs=${spec_file} -ffile-prefix-map=${PWD}=.\"\n+HOST_CFLAGS=\"-O2 -g -ffile-prefix-map=${PWD}=.\"\n+HOST_CXXFLAGS=\"-O2 -g -ffile-prefix-map=${PWD}=.\"\n HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++\"\n \n # Make $HOST-specific native binaries from depends available in $PATH"
      },
      {
        "sha": "23b656cad7e6d2e273464ae74cb3ce014c7b984b",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -106,7 +106,7 @@ chain for \" target \" development.\"))\n                                   (base-libc glibc-2.27)\n                                   (base-gcc (make-gcc-rpath-link\n                                              (make-ssp-fixed-gcc gcc-9))))\n-  \"Convienience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n+  \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n desirable for building Bitcoin Core release binaries.\"\n   (make-cross-toolchain target\n                    base-gcc-for-libc"
      },
      {
        "sha": "dde1bd0c4d16b7eede11a741b72777a47e0962c7",
        "filename": "contrib/init/bitcoind.conf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -16,7 +16,7 @@ expect fork\n \n respawn\n respawn limit 5 120\n-kill timeout 60\n+kill timeout 600\n \n pre-start script\n     # this will catch non-existent config files"
      },
      {
        "sha": "19e1f76d094ce4a17f883fca9bd2b8d12d0f6e8c",
        "filename": "contrib/init/bitcoind.init",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -39,7 +39,7 @@ start() {\n \n stop() {\n     echo -n $\"Stopping $prog: \"\n-    killproc $prog\n+    killproc $prog -t600\n     RETVAL=$?\n     echo\n     [ $RETVAL -eq 0 ] && rm -f $lockfile"
      },
      {
        "sha": "c8a22a08d92419a16f251d1c2b357ca371f68fe5",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -30,4 +30,4 @@\n # Note that this will be mapped as argument to start-stop-daemon's\n # '--retry' option, which means you can specify a retry schedule\n # here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60\n+BITCOIND_SIGTERM_TIMEOUT=600"
      },
      {
        "sha": "8b308644b10611ae4e558e08aa003a3a2e1ad370",
        "filename": "contrib/init/bitcoind.service",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,8 +5,9 @@\n # See \"man systemd.service\" for details.\n \n # Note that almost all daemon options could be specified in\n-# /etc/bitcoin/bitcoin.conf, except for those explicitly specified as arguments\n-# in ExecStart=\n+# /etc/bitcoin/bitcoin.conf, but keep in mind those explicitly\n+# specified as arguments in ExecStart= will override those in the\n+# config file.\n \n [Unit]\n Description=Bitcoin daemon\n@@ -18,12 +19,17 @@ ExecStart=/usr/bin/bitcoind -daemon \\\n                             -conf=/etc/bitcoin/bitcoin.conf \\\n                             -datadir=/var/lib/bitcoind\n \n+# Make sure the config directory is readable by the service user\n+PermissionsStartOnly=true\n+ExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n+\n # Process management\n ####################\n \n Type=forking\n PIDFile=/run/bitcoind/bitcoind.pid\n Restart=on-failure\n+TimeoutStopSec=600\n \n # Directory creation and permissions\n ####################################\n@@ -53,6 +59,9 @@ PrivateTmp=true\n # Mount /usr, /boot/ and /etc read-only for the process.\n ProtectSystem=full\n \n+# Deny access to /home, /root and /run/user\n+ProtectHome=true\n+\n # Disallow the process and all of its children to gain\n # new privileges through execve().\n NoNewPrivileges=true"
      },
      {
        "sha": "863b22f6b19866eb7c3c3766567fc7e625fe1c16",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -213,8 +213,11 @@ def run(self):\n \n             inMagic = inhdr[:4]\n             if (inMagic != self.settings['netmagic']):\n-                print(\"Invalid magic: \" + inMagic.hex())\n-                return\n+                # Seek backwards 7 bytes (skipping the first byte in the previous search)\n+                # and continue searching from the new position if the magic bytes are not\n+                # found.\n+                self.inF.seek(-7, os.SEEK_CUR)\n+                continue\n             inLenLE = inhdr[4:]\n             su = struct.unpack(\"<I\", inLenLE)\n             inLen = su[0] - 80 # length without header\n@@ -263,12 +266,12 @@ def run(self):\n     f = open(sys.argv[1], encoding=\"utf8\")\n     for line in f:\n         # skip comment lines\n-        m = re.search('^\\s*#', line)\n+        m = re.search(r'^\\s*#', line)\n         if m:\n             continue\n \n         # parse key=value lines\n-        m = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n         if m is None:\n             continue\n         settings[m.group(1)] = m.group(2)"
      },
      {
        "sha": "02c96d2a75a39f47fdfe2746b25a282adc12e4c1",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -106,12 +106,12 @@ def get_rpc_cookie():\n     f = open(sys.argv[1], encoding=\"utf8\")\n     for line in f:\n         # skip comment lines\n-        m = re.search('^\\s*#', line)\n+        m = re.search(r'^\\s*#', line)\n         if m:\n             continue\n \n         # parse key=value lines\n-        m = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n         if m is None:\n             continue\n         settings[m.group(1)] = m.group(2)"
      },
      {
        "sha": "29b49ebff4b5af0bb4bbffdc0030e0a07c04ab18",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,7 +1,7 @@\n ### MacDeploy ###\n \n For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n-\t\n+\n \tsudo easy_install argparse\n \n This script should not be run manually, instead, after building as usual:\n@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Bitcoin-Qt.dmg`.\n "
      },
      {
        "sha": "d8088aa1230441b59b7b8132d601671ca13c2a98",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 96,
        "deletions": 54,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -19,6 +19,7 @@\n import subprocess, sys, re, os, shutil, stat, os.path, time\n from string import Template\n from argparse import ArgumentParser\n+from typing import List, Optional\n \n # This is ported from the original macdeployqt with modifications\n \n@@ -48,18 +49,18 @@ class FrameworkInfo(object):\n             return False\n     \n     def __str__(self):\n-        return \"\"\" Framework name: %s\n- Framework directory: %s\n- Framework path: %s\n- Binary name: %s\n- Binary directory: %s\n- Binary path: %s\n- Version: %s\n- Install name: %s\n- Deployed install name: %s\n- Source file Path: %s\n- Deployed Directory (relative to bundle): %s\n-\"\"\" % (self.frameworkName,\n+        return \"\"\" Framework name: {}\n+ Framework directory: {}\n+ Framework path: {}\n+ Binary name: {}\n+ Binary directory: {}\n+ Binary path: {}\n+ Version: {}\n+ Install name: {}\n+ Deployed install name: {}\n+ Source file Path: {}\n+ Deployed Directory (relative to bundle): {}\n+\"\"\".format(self.frameworkName,\n        self.frameworkDirectory,\n        self.frameworkPath,\n        self.binaryName,\n@@ -85,7 +86,7 @@ class FrameworkInfo(object):\n     bundleBinaryDirectory = \"Contents/MacOS\"\n     \n     @classmethod\n-    def fromOtoolLibraryLine(cls, line):\n+    def fromOtoolLibraryLine(cls, line: str) -> Optional['FrameworkInfo']:\n         # Note: line must be trimmed\n         if line == \"\":\n             return None\n@@ -146,13 +147,12 @@ class FrameworkInfo(object):\n             info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n             info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n             info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n             info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n         \n         return info\n \n class ApplicationBundleInfo(object):\n-    def __init__(self, path):\n+    def __init__(self, path: str):\n         self.path = path\n         appName = \"Bitcoin-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n@@ -167,7 +167,7 @@ class DeploymentInfo(object):\n         self.pluginPath = None\n         self.deployedFrameworks = []\n     \n-    def detectQtPath(self, frameworkDirectory):\n+    def detectQtPath(self, frameworkDirectory: str):\n         parentDir = os.path.dirname(frameworkDirectory)\n         if os.path.exists(os.path.join(parentDir, \"translations\")):\n             # Classic layout, e.g. \"/usr/local/Trolltech/Qt-4.x.x\"\n@@ -180,9 +180,9 @@ class DeploymentInfo(object):\n             if os.path.exists(pluginPath):\n                 self.pluginPath = pluginPath\n     \n-    def usesFramework(self, name):\n-        nameDot = \"%s.\" % name\n-        libNameDot = \"lib%s.\" % name\n+    def usesFramework(self, name: str) -> bool:\n+        nameDot = \"{}.\".format(name)\n+        libNameDot = \"lib{}.\".format(name)\n         for framework in self.deployedFrameworks:\n             if framework.endswith(\".framework\"):\n                 if framework.startswith(nameDot):\n@@ -192,7 +192,7 @@ class DeploymentInfo(object):\n                     return True\n         return False\n \n-def getFrameworks(binaryPath, verbose):\n+def getFrameworks(binaryPath: str, verbose: int) -> List[FrameworkInfo]:\n     if verbose >= 3:\n         print(\"Inspecting with otool: \" + binaryPath)\n     otoolbin=os.getenv(\"OTOOL\", \"otool\")\n@@ -202,7 +202,7 @@ def getFrameworks(binaryPath, verbose):\n         if verbose >= 1:\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n-            raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n+            raise RuntimeError(\"otool failed with return code {}\".format(otool.returncode))\n \n     otoolLines = o_stdout.split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n@@ -221,33 +221,33 @@ def getFrameworks(binaryPath, verbose):\n     \n     return libraries\n \n-def runInstallNameTool(action, *args):\n+def runInstallNameTool(action: str, *args):\n     installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n     subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n \n-def changeInstallName(oldName, newName, binaryPath, verbose):\n+def changeInstallName(oldName: str, newName: str, binaryPath: str, verbose: int):\n     if verbose >= 3:\n         print(\"Using install_name_tool:\")\n         print(\" in\", binaryPath)\n         print(\" change reference\", oldName)\n         print(\" to\", newName)\n     runInstallNameTool(\"change\", oldName, newName, binaryPath)\n \n-def changeIdentification(id, binaryPath, verbose):\n+def changeIdentification(id: str, binaryPath: str, verbose: int):\n     if verbose >= 3:\n         print(\"Using install_name_tool:\")\n         print(\" change identification in\", binaryPath)\n         print(\" to\", id)\n     runInstallNameTool(\"id\", id, binaryPath)\n \n-def runStrip(binaryPath, verbose):\n+def runStrip(binaryPath: str, verbose: int):\n     stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n         print(\"Using strip:\")\n         print(\" stripped\", binaryPath)\n     subprocess.check_call([stripbin, \"-x\", binaryPath])\n \n-def copyFramework(framework, path, verbose):\n+def copyFramework(framework: FrameworkInfo, path: str, verbose: int) -> Optional[str]:\n     if framework.sourceFilePath.startswith(\"Qt\"):\n         #standard place for Nokia Qt installer's frameworks\n         fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n@@ -309,7 +309,7 @@ def copyFramework(framework, path, verbose):\n     \n     return toPath\n \n-def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploymentInfo=None):\n+def deployFrameworks(frameworks: List[FrameworkInfo], bundlePath: str, binaryPath: str, strip: bool, verbose: int, deploymentInfo: Optional[DeploymentInfo] = None) -> DeploymentInfo:\n     if deploymentInfo is None:\n         deploymentInfo = DeploymentInfo()\n     \n@@ -355,15 +355,15 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n     \n     return deploymentInfo\n \n-def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n+def deployFrameworksForAppBundle(applicationBundle: ApplicationBundleInfo, strip: bool, verbose: int) -> DeploymentInfo:\n     frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n     if len(frameworks) == 0 and verbose >= 1:\n-        print(\"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path))\n+        print(\"Warning: Could not find any external frameworks to deploy in {}.\".format(applicationBundle.path))\n         return DeploymentInfo()\n     else:\n         return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n \n-def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n+def deployPlugins(appBundleInfo: ApplicationBundleInfo, deploymentInfo: DeploymentInfo, strip: bool, verbose: int):\n     # Lookup available plugins, exclude unneeded\n     plugins = []\n     if deploymentInfo.pluginPath is None:\n@@ -373,10 +373,12 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n         if pluginDirectory == \"designer\":\n             # Skip designer plugins\n             continue\n-        elif pluginDirectory == \"phonon\" or pluginDirectory == \"phonon_backend\":\n-            # Deploy the phonon plugins only if phonon is in use\n-            if not deploymentInfo.usesFramework(\"phonon\"):\n-                continue\n+        elif pluginDirectory == \"printsupport\":\n+            # Skip printsupport plugins\n+            continue\n+        elif pluginDirectory == \"imageformats\":\n+            # Skip imageformats plugins\n+            continue\n         elif pluginDirectory == \"sqldrivers\":\n             # Deploy the sql plugins only if QtSql is in use\n             if not deploymentInfo.usesFramework(\"QtSql\"):\n@@ -409,6 +411,42 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n             # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n             if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n                 continue\n+        elif pluginDirectory == \"canbus\":\n+            # Deploy the canbus plugins only if QtSerialBus is in use\n+            if not deploymentInfo.usesFramework(\"QtSerialBus\"):\n+                continue\n+        elif pluginDirectory == \"webview\":\n+            # Deploy the webview plugins only if QtWebView is in use\n+            if not deploymentInfo.usesFramework(\"QtWebView\"):\n+                continue\n+        elif pluginDirectory == \"gamepads\":\n+            # Deploy the webview plugins only if QtGamepad is in use\n+            if not deploymentInfo.usesFramework(\"QtGamepad\"):\n+                continue\n+        elif pluginDirectory == \"geoservices\":\n+            # Deploy the webview plugins only if QtLocation is in use\n+            if not deploymentInfo.usesFramework(\"QtLocation\"):\n+                continue\n+        elif pluginDirectory == \"texttospeech\":\n+            # Deploy the texttospeech plugins only if QtTextToSpeech is in use\n+            if not deploymentInfo.usesFramework(\"QtTextToSpeech\"):\n+                continue\n+        elif pluginDirectory == \"virtualkeyboard\":\n+            # Deploy the virtualkeyboard plugins only if QtVirtualKeyboard is in use\n+            if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                continue\n+        elif pluginDirectory == \"sceneparsers\":\n+            # Deploy the virtualkeyboard plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"renderplugins\":\n+            # Deploy the renderplugins plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"geometryloaders\":\n+            # Deploy the geometryloaders plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n \n         for pluginName in filenames:\n             pluginPath = os.path.join(pluginDirectory, pluginName)\n@@ -431,6 +469,10 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 # Deploy the accessible qtquick plugin only if QtQuick is in use\n                 if not deploymentInfo.usesFramework(\"QtQuick\"):\n                     continue\n+            elif pluginPath == \"platforminputcontexts/libqtvirtualkeyboardplugin.dylib\":\n+                # Deploy the virtualkeyboardplugin plugin only if QtVirtualKeyboard is in use\n+                if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                    continue\n \n             plugins.append((pluginDirectory, pluginName))\n     \n@@ -499,7 +541,7 @@ app_bundle = config.app_bundle[0]\n \n if not os.path.exists(app_bundle):\n     if verbose >= 1:\n-        sys.stderr.write(\"Error: Could not find app bundle \\\"%s\\\"\\n\" % (app_bundle))\n+        sys.stderr.write(\"Error: Could not find app bundle \\\"{}\\\"\\n\".format(app_bundle))\n     sys.exit(1)\n \n app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n@@ -511,7 +553,7 @@ if config.translations_dir and config.translations_dir[0]:\n         translations_dir = config.translations_dir[0]\n     else:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n+            sys.stderr.write(\"Error: Could not find translation dir \\\"{}\\\"\\n\".format(translations_dir))\n         sys.exit(1)\n # ------------------------------------------------\n \n@@ -520,7 +562,7 @@ for p in config.add_resources:\n         print(\"Checking for \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find additional resource file \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not find additional resource file \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n \n # ------------------------------------------------\n@@ -537,17 +579,17 @@ if len(config.fancy) == 1:\n     \n     p = config.fancy[0]\n     if verbose >= 3:\n-        print(\"Fancy: Loading \\\"%s\\\"...\" % p)\n+        print(\"Fancy: Loading \\\"{}\\\"...\".format(p))\n     if not os.path.exists(p):\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     try:\n         fancy = plistlib.readPlist(p)\n     except:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     try:\n@@ -561,18 +603,18 @@ if len(config.fancy) == 1:\n                 assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n     except:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     if \"background_picture\" in fancy:\n         bp = fancy[\"background_picture\"]\n         if verbose >= 3:\n-            print(\"Fancy: Resolving background picture \\\"%s\\\"...\" % bp)\n+            print(\"Fancy: Resolving background picture \\\"{}\\\"...\".format(bp))\n         if not os.path.exists(bp):\n             bp = os.path.join(os.path.dirname(p), bp)\n             if not os.path.exists(bp):\n                 if verbose >= 1:\n-                    sys.stderr.write(\"Error: Could not find background picture at \\\"%s\\\" or \\\"%s\\\"\\n\" % (fancy[\"background_picture\"], bp))\n+                    sys.stderr.write(\"Error: Could not find background picture at \\\"{}\\\" or \\\"{}\\\"\\n\".format(fancy[\"background_picture\"], bp))\n                 sys.exit(1)\n             else:\n                 fancy[\"background_picture\"] = bp\n@@ -623,7 +665,7 @@ try:\n             config.plugins = False\n except RuntimeError as e:\n     if verbose >= 1:\n-        sys.stderr.write(\"Error: %s\\n\" % str(e))\n+        sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n     sys.exit(1)\n \n # ------------------------------------------------\n@@ -636,7 +678,7 @@ if config.plugins:\n         deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n     except RuntimeError as e:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: %s\\n\" % str(e))\n+            sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n         sys.exit(1)\n \n # ------------------------------------------------\n@@ -652,14 +694,14 @@ else:\n         else:\n             sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n             sys.exit(1)\n-    add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n+    add_qt_tr = [\"qt_{}.qm\".format(lng) for lng in config.add_qt_tr[0].split(\",\")]\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n         if verbose >= 3:\n-            print(\"Checking for \\\"%s\\\"...\" % p)\n+            print(\"Checking for \\\"{}\\\"...\".format(p))\n         if not os.path.exists(p):\n             if verbose >= 1:\n-                sys.stderr.write(\"Error: Could not find Qt translation file \\\"%s\\\"\\n\" % (lng_file))\n+                sys.stderr.write(\"Error: Could not find Qt translation file \\\"{}\\\"\\n\".format(lng_file))\n                 sys.exit(1)\n \n # ------------------------------------------------\n@@ -700,14 +742,14 @@ if config.sign and 'CODESIGNARGS' not in os.environ:\n     print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n elif config.sign:\n     if verbose >= 1:\n-        print(\"Code-signing app bundle %s\"%(target,))\n-    subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n+        print(\"Code-signing app bundle {}\".format(target))\n+    subprocess.check_call(\"codesign --force {} {}\".format(os.environ['CODESIGNARGS'], target), shell=True)\n \n # ------------------------------------------------\n \n if config.dmg is not None:\n \n-    def runHDIUtil(verb, image_basename, **kwargs):\n+    def runHDIUtil(verb: str, image_basename: str, **kwargs) -> int:\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n         if \"capture_stdout\" in kwargs:\n             del kwargs[\"capture_stdout\"]\n@@ -721,7 +763,7 @@ if config.dmg is not None:\n         \n         for key, value in kwargs.items():\n             hdiutil_args.append(\"-\" + key)\n-            if not value is True:\n+            if value is not True:\n                 hdiutil_args.append(str(value))\n         \n         return run(hdiutil_args, universal_newlines=True)\n@@ -765,8 +807,8 @@ if config.dmg is not None:\n             output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n-        \n-        m = re.search(\"/Volumes/(.+$)\", output)\n+\n+        m = re.search(r\"/Volumes/(.+$)\", output)\n         disk_root = m.group(0)\n         disk_name = m.group(1)\n         "
      },
      {
        "sha": "7630a7a4fa2550396e8e6ee5421a90f640b7be0a",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -74,7 +74,7 @@ def name_to_ipv6(addr):\n         raise ValueError('Could not parse address %s' % addr)\n \n def parse_spec(s, defaultport):\n-    match = re.match('\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n+    match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n     if match: # ipv6\n         host = match.group(1)\n         port = match.group(2)\n@@ -136,4 +136,3 @@ def main():\n \n if __name__ == '__main__':\n     main()\n-"
      },
      {
        "sha": "ec589d4c02793bef59ba5f802518f8194602bbe3",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 85,
        "deletions": 36,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -30,7 +30,15 @@\n PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.14.(0|1|2|99)/|/Satoshi:0.15.(0|1|2|99)|/Satoshi:0.16.(0|1|2|99)/)$\")\n+PATTERN_AGENT = re.compile(\n+    r\"^/Satoshi:(\"\n+    r\"0.14.(0|1|2|3|99)|\"\n+    r\"0.15.(0|1|2|99)|\"\n+    r\"0.16.(0|1|2|3|99)|\"\n+    r\"0.17.(0|0.1|1|2|99)|\"\n+    r\"0.18.(0|1|99)|\"\n+    r\"0.19.99\"\n+    r\")\")\n \n def parseline(line):\n     sline = line.split()\n@@ -99,78 +107,119 @@ def parseline(line):\n         'sortkey': sortkey,\n     }\n \n+def dedup(ips):\n+    '''deduplicate by address,port'''\n+    d = {}\n+    for ip in ips:\n+        d[ip['ip'],ip['port']] = ip\n+    return list(d.values())\n+\n def filtermultiport(ips):\n     '''Filter out hosts with more nodes per IP'''\n     hist = collections.defaultdict(list)\n     for ip in ips:\n         hist[ip['sortkey']].append(ip)\n     return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n \n+def lookup_asn(net, ip):\n+    '''\n+    Look up the asn for an IP (4 or 6) address by querying cymru.com, or None\n+    if it could not be found.\n+    '''\n+    try:\n+        if net == 'ipv4':\n+            ipaddr = ip\n+            prefix = '.origin'\n+        else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n+            res = str()                         # 2001:4860:b002:23::68\n+            for nb in ip.split(':')[:4]:  # pick the first 4 nibbles\n+                for c in nb.zfill(4):           # right padded with '0'\n+                    res += c + '.'              # 2001 4860 b002 0023\n+            ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n+            prefix = '.origin6'\n+\n+        asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n+                   reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n+                   'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n+        return asn\n+    except Exception:\n+        sys.stderr.write('ERR: Could not resolve ASN for \"' + ip + '\"\\n')\n+        return None\n+\n # Based on Greg Maxwell's seed_filter.py\n-def filterbyasn(ips, max_per_asn, max_total):\n+def filterbyasn(ips, max_per_asn, max_per_net):\n     # Sift out ips by type\n     ips_ipv46 = [ip for ip in ips if ip['net'] in ['ipv4', 'ipv6']]\n     ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n \n-    # Filter IPv46 by ASN\n+    # Filter IPv46 by ASN, and limit to max_per_net per network\n     result = []\n-    asn_count = {}\n+    net_count = collections.defaultdict(int)\n+    asn_count = collections.defaultdict(int)\n     for ip in ips_ipv46:\n-        if len(result) == max_total:\n-            break\n-        try:\n-            if ip['net'] == 'ipv4':\n-                ipaddr = ip['ip']\n-                prefix = '.origin'\n-            else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n-                res = str()                         # 2001:4860:b002:23::68\n-                for nb in ip['ip'].split(':')[:4]:  # pick the first 4 nibbles\n-                    for c in nb.zfill(4):           # right padded with '0'\n-                        res += c + '.'              # 2001 4860 b002 0023\n-                ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n-                prefix = '.origin6'\n-\n-            asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n-                       reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n-                       'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n-            if asn not in asn_count:\n-                asn_count[asn] = 0\n-            if asn_count[asn] == max_per_asn:\n-                continue\n-            asn_count[asn] += 1\n-            result.append(ip)\n-        except:\n-            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n-\n-    # Add back Onions\n-    result.extend(ips_onion)\n+        if net_count[ip['net']] == max_per_net:\n+            continue\n+        asn = lookup_asn(ip['net'], ip['ip'])\n+        if asn is None or asn_count[asn] == max_per_asn:\n+            continue\n+        asn_count[asn] += 1\n+        net_count[ip['net']] += 1\n+        result.append(ip)\n+\n+    # Add back Onions (up to max_per_net)\n+    result.extend(ips_onion[0:max_per_net])\n     return result\n \n+def ip_stats(ips):\n+    hist = collections.defaultdict(int)\n+    for ip in ips:\n+        if ip is not None:\n+            hist[ip['net']] += 1\n+\n+    return '%6d %6d %6d' % (hist['ipv4'], hist['ipv6'], hist['onion'])\n+\n def main():\n     lines = sys.stdin.readlines()\n     ips = [parseline(line) for line in lines]\n \n-    # Skip entries with valid address.\n+    print('\\x1b[7m  IPv4   IPv6  Onion Pass                                               \\x1b[0m', file=sys.stderr)\n+    print('%s Initial' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip entries with invalid address.\n     ips = [ip for ip in ips if ip is not None]\n+    print('%s Skip entries with invalid address' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip duplicates (in case multiple seeds files were concatenated)\n+    ips = dedup(ips)\n+    print('%s After removing duplicates' % (ip_stats(ips)), file=sys.stderr)\n     # Skip entries from suspicious hosts.\n     ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n+    print('%s Skip entries from suspicious hosts' % (ip_stats(ips)), file=sys.stderr)\n     # Enforce minimal number of blocks.\n     ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n+    print('%s Enforce minimal number of blocks' % (ip_stats(ips)), file=sys.stderr)\n     # Require service bit 1.\n     ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n-    # Require at least 50% 30-day uptime.\n-    ips = [ip for ip in ips if ip['uptime'] > 50]\n+    print('%s Require service bit 1' % (ip_stats(ips)), file=sys.stderr)\n+    # Require at least 50% 30-day uptime for clearnet, 10% for onion.\n+    req_uptime = {\n+        'ipv4': 50,\n+        'ipv6': 50,\n+        'onion': 10,\n+    }\n+    ips = [ip for ip in ips if ip['uptime'] > req_uptime[ip['net']]]\n+    print('%s Require minimum uptime' % (ip_stats(ips)), file=sys.stderr)\n     # Require a known and recent user agent.\n     ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n+    print('%s Require a known and recent user agent' % (ip_stats(ips)), file=sys.stderr)\n     # Sort by availability (and use last success as tie breaker)\n     ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n     # Filter out hosts with multiple bitcoin ports, these are likely abusive\n     ips = filtermultiport(ips)\n+    print('%s Filter out hosts with multiple bitcoin ports' % (ip_stats(ips)), file=sys.stderr)\n     # Look up ASNs and limit results, both per ASN and globally.\n     ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n+    print('%s Look up ASNs and limit results per ASN and per net' % (ip_stats(ips)), file=sys.stderr)\n     # Sort the results by IP address (for deterministic output).\n     ips.sort(key=lambda x: (x['net'], x['sortkey']))\n-\n     for ip in ips:\n         if ip['net'] == 'ipv6':\n             print('[%s]:%i' % (ip['ip'], ip['port']))"
      },
      {
        "sha": "89eb1d1638f667e19a630ae0739a024a8b391615",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 717,
        "deletions": 1233,
        "changes": 1950,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,1268 +1,752 @@\n-2.132.100.47:8333\n-5.1.97.4:8333\n-5.39.174.116:8333\n-5.45.79.14:8333\n-5.53.16.133:8333\n-5.101.139.166:8333\n-5.178.78.139:8333\n-5.189.176.17:8333\n-5.228.64.71:8333\n-8.18.38.122:8333\n-13.115.96.63:8333\n-14.2.124.84:8333\n-14.3.170.1:8333\n-23.94.28.250:8333\n-23.111.172.106:8333\n-23.125.224.84:8333\n-23.152.0.108:8333\n-23.175.0.222:8333\n-23.229.16.234:8333\n-23.233.6.70:8333\n-24.142.34.253:8333\n-24.171.203.87:8333\n+2.24.141.73:8333\n+5.8.18.29:8333\n+5.43.228.99:8333\n+5.145.10.122:8333\n+5.166.35.47:8333\n+5.188.187.130:8333\n+5.199.133.193:8333\n+5.206.226.216:8333\n+5.206.226.231:8333\n+13.92.254.226:8335\n+13.125.188.128:8333\n+18.228.144.20:8333\n+23.175.0.200:8333\n+23.226.90.172:8333\n+23.233.107.28:8333\n+23.245.24.154:8333\n+24.121.16.35:8333\n+24.150.94.79:8333\n 24.188.200.170:8333\n-24.216.65.41:8333\n-24.227.69.146:8333\n-27.33.11.193:8333\n-31.24.11.139:8333\n-31.28.10.13:8333\n-31.165.17.164:8333\n-31.179.204.142:8333\n-31.186.96.186:8333\n-31.210.172.21:8333\n-31.211.102.129:62734\n-34.217.122.178:8333\n-35.230.64.29:8333\n-35.231.225.42:8333\n-36.3.172.13:8333\n-36.251.163.42:8333\n-37.136.97.246:8333\n-37.153.1.150:8333\n-37.153.1.157:8333\n-37.228.92.110:8333\n-37.252.14.22:8333\n-38.27.101.224:8333\n-38.102.134.85:8333\n-38.104.225.30:8333\n-43.229.76.38:8333\n-45.40.132.57:8333\n-45.45.34.122:8333\n-45.48.177.222:8333\n-46.19.34.236:8333\n-46.28.66.196:8333\n-46.28.204.21:8333\n-46.28.205.161:8333\n-46.30.42.144:8333\n-46.138.139.195:8333\n-46.165.245.221:8333\n-46.166.129.155:8333\n-46.166.160.52:8333\n-46.166.160.56:8333\n-46.188.44.82:8333\n-46.188.126.74:8333\n-46.229.165.145:8333\n-46.229.168.201:8333\n-46.229.238.187:8333\n-47.54.204.246:8333\n-47.74.128.138:8333\n-47.94.224.99:8333\n-47.97.96.198:8333\n-47.187.36.48:8333\n-47.218.16.81:8333\n-47.223.66.222:8333\n-47.254.128.15:8333\n-50.31.170.53:8333\n-50.35.67.146:8333\n-50.76.96.230:8333\n-50.82.177.142:8333\n-51.15.3.46:8333\n-51.175.141.243:8333\n-52.144.47.153:8333\n-52.232.38.122:8333\n-54.38.192.164:8333\n-54.85.65.6:8333\n-54.91.227.188:8333\n-58.180.36.14:8333\n-59.106.208.68:8333\n-60.70.73.26:8333\n-61.160.234.57:8333\n-62.43.198.56:8333\n-62.45.0.15:8333\n+24.246.31.205:8333\n+27.102.102.157:8333\n+31.6.98.94:8333\n+31.20.226.115:8333\n+31.21.182.79:8333\n+31.43.140.190:8333\n+31.132.135.134:8333\n+31.173.48.61:8333\n+32.214.183.114:8333\n+34.231.234.150:8333\n+35.209.114.159:8333\n+35.213.18.190:8333\n+37.97.228.224:8333\n+37.116.95.41:8333\n+37.123.132.33:8333\n+37.133.140.169:8334\n+37.134.165.205:8333\n+37.191.253.125:8333\n+39.108.68.237:7781\n+40.78.19.149:8333\n+42.60.217.183:8333\n+43.229.132.102:8333\n+45.58.126.138:8333\n+46.28.132.34:8333\n+46.166.162.45:20001\n+46.166.176.137:8333\n+46.227.68.104:8333\n+46.227.68.105:8333\n+47.74.32.190:8885\n+47.89.19.134:30303\n+47.97.117.250:8333\n+50.2.13.166:8333\n+50.5.163.139:8333\n+50.34.65.217:8333\n+50.66.209.54:8333\n+50.67.179.36:8333\n+51.15.166.138:8333\n+51.15.239.164:8333\n+51.154.60.34:8333\n+51.154.136.60:8333\n+52.116.159.247:8333\n+54.167.232.37:8333\n+58.22.123.120:8333\n+58.158.0.86:8333\n+62.45.159.66:8333\n+62.75.191.166:8333\n+62.75.210.81:8333\n+62.97.244.242:8333\n 62.107.200.30:8333\n-62.133.194.2:8333\n-62.138.3.224:8333\n-62.146.70.216:8333\n-64.78.163.10:8333\n-64.120.110.2:8333\n-64.131.160.31:8333\n-66.18.172.16:8333\n-66.85.74.242:8333\n-66.110.132.10:8333\n-66.114.33.90:8333\n-66.180.64.95:8333\n-66.222.164.188:8333\n-67.11.139.67:8333\n-67.43.191.118:8333\n-67.61.137.157:8333\n-67.193.184.12:8333\n+62.138.0.217:8333\n+62.213.214.207:8333\n+64.98.18.21:8333\n+65.79.145.209:8333\n+66.151.242.154:8335\n+66.206.13.51:8333\n+66.248.206.86:8333\n+67.40.207.169:8333\n+67.149.252.79:8333\n+67.193.189.42:8333\n 67.210.228.203:8333\n-67.215.12.43:8333\n-67.253.72.119:8333\n-68.201.228.6:8333\n+67.220.22.78:8333\n+67.222.131.151:8333\n+68.168.122.2:8333\n 68.202.128.19:8333\n-69.30.218.226:8333\n-69.61.35.175:8333\n-69.61.171.22:8333\n-69.125.194.25:8333\n-70.35.98.12:8333\n-70.103.171.66:8333\n-70.172.252.29:8333\n-71.34.96.135:8333\n-71.68.48.149:8333\n-71.93.161.162:8333\n-71.162.192.5:8333\n-72.11.174.71:8333\n-72.50.240.124:8333\n-72.70.32.215:8333\n-72.211.196.232:8333\n-72.234.112.22:8333\n-72.253.237.0:8333\n-73.241.192.40:8333\n-74.15.230.112:8333\n-74.83.79.52:8333\n-74.126.14.27:8333\n-75.76.137.164:8333\n-76.64.166.230:8333\n-76.191.79.98:8333\n-77.37.170.106:8333\n-77.70.107.83:8333\n-77.95.226.194:8333\n-77.111.172.134:8333\n-77.163.136.136:8333\n-77.203.13.57:8333\n-77.239.37.12:8333\n-77.240.168.19:8333\n-77.244.219.164:8333\n-78.31.67.156:8333\n-78.34.2.126:8333\n-78.108.187.246:8333\n-78.109.163.153:8333\n-79.28.205.145:8333\n-79.66.70.89:8333\n-79.132.230.144:8333\n-80.209.224.79:8333\n-80.211.252.104:8333\n-80.229.28.60:8333\n-81.7.13.84:8333\n+68.206.21.144:8333\n+69.30.215.42:8333\n+69.59.18.22:8333\n+69.70.170.178:8333\n+69.132.150.43:8333\n+69.145.122.160:8333\n+70.26.149.104:8333\n+70.51.142.43:8333\n+70.63.170.86:8333\n+71.57.73.173:8333\n+71.237.255.140:8333\n+72.24.235.10:8333\n+72.95.104.94:8333\n+72.231.187.25:8333\n+72.253.239.246:8333\n+74.78.140.178:8333\n+74.83.234.97:8333\n+74.84.128.158:9333\n+74.197.236.58:8333\n+74.208.94.172:8333\n+74.220.255.190:8333\n+75.101.96.6:8333\n+75.157.77.34:8333\n+76.93.183.209:8333\n+76.174.129.203:8333\n+77.53.158.137:8333\n+77.85.204.149:8333\n+77.120.119.27:8433\n+77.134.172.81:8333\n+78.42.12.201:8333\n+78.58.140.102:8333\n+78.108.108.162:8333\n+78.119.180.62:8333\n+78.128.62.52:8333\n+78.130.148.218:8885\n+78.130.161.76:8333\n+78.143.214.223:8333\n+79.77.33.128:8333\n+79.175.125.210:8333\n+79.175.154.228:8333\n+80.79.114.34:8333\n+80.89.203.172:8001\n+80.100.128.128:8333\n+80.122.43.78:8333\n+80.151.124.127:8333\n+80.167.79.174:8333\n+80.211.191.11:8333\n+80.229.151.187:8333\n+81.4.102.69:8333\n+81.4.102.91:8333\n+81.6.34.154:8333\n 81.7.16.182:8333\n-81.18.224.62:8333\n-81.171.27.138:8333\n-81.187.80.221:8333\n-81.217.112.225:8333\n-81.245.141.6:8333\n-82.43.171.91:8333\n-82.102.10.251:8333\n-82.118.234.178:8333\n-82.144.197.93:8333\n-82.161.109.190:8333\n-82.193.102.228:8333\n-82.193.109.199:8333\n-82.199.102.10:8333\n-82.212.130.94:8333\n-82.213.208.16:8333\n-82.217.67.17:8333\n-82.221.108.27:8333\n-82.221.133.174:8333\n-83.55.130.30:8333\n-83.77.39.46:8333\n-83.137.41.10:8333\n-83.149.70.48:8333\n-83.151.233.218:8333\n-83.162.43.154:8333\n-83.164.131.243:8333\n-83.221.11.7:8333\n-83.243.128.13:8333\n-84.16.38.218:8333\n-84.38.3.249:8333\n-84.75.26.172:8333\n-84.200.106.128:8333\n-84.212.250.219:8333\n-84.215.134.195:8333\n-84.245.27.209:8333\n-84.254.40.152:8333\n-84.255.193.28:8333\n-85.10.112.194:8333\n-85.93.2.76:54382\n-85.94.172.33:8333\n-85.129.0.126:8333\n-85.145.168.159:8333\n-85.170.238.26:8333\n-85.195.232.197:8333\n-85.214.68.122:8333\n-85.214.235.137:8333\n-85.218.48.146:8333\n-85.220.165.205:8333\n-85.229.134.98:8333\n-85.241.49.242:8333\n-86.25.32.77:8333\n-86.41.89.170:8333\n-86.50.143.43:8333\n-86.61.67.183:8333\n-86.137.26.210:8333\n-86.177.194.215:8333\n-87.157.177.58:8333\n+81.7.17.202:8333\n+81.25.71.68:8444\n+81.235.185.150:8333\n+82.23.106.56:8333\n+82.29.58.109:8333\n+82.117.166.77:8333\n+82.145.41.24:8333\n+82.146.153.130:8333\n+82.149.97.25:17567\n+82.150.180.30:8333\n+82.177.176.24:8333\n+82.194.153.233:8333\n+82.197.215.125:8333\n+82.197.218.97:8333\n+82.199.102.133:8333\n+82.200.205.30:8333\n+82.221.111.136:8333\n+83.32.70.197:8333\n+83.58.134.138:8333\n+83.85.131.168:8333\n+83.163.211.75:8333\n+83.208.254.182:8333\n+83.243.191.199:8333\n+84.46.116.71:8333\n+84.52.255.147:8333\n+84.56.105.17:8333\n+84.59.243.22:8333\n+84.197.198.167:8333\n+84.214.74.65:8333\n+84.217.160.164:8333\n+84.227.14.62:8333\n+84.246.200.122:8333\n+85.14.79.26:8333\n+85.119.83.25:8333\n+85.190.0.5:8333\n+85.192.173.14:8333\n+85.214.80.203:8333\n+85.214.204.63:8333\n+85.229.166.15:8333\n+85.233.38.5:8333\n+86.76.7.132:8333\n+86.80.62.194:8333\n+86.107.204.50:8333\n+86.139.248.102:8333\n+87.79.68.86:8333\n+87.79.94.221:8333\n+87.99.79.123:8333\n+87.104.127.153:8333\n+87.117.19.226:8333\n+87.120.8.5:20008\n 87.224.163.66:8333\n-87.236.196.169:8333\n-87.246.46.132:8333\n-88.99.64.76:8333\n-89.1.100.49:8333\n-89.10.155.88:8333\n-89.27.59.246:8333\n-89.163.132.73:8333\n-89.179.240.131:8333\n-89.205.81.5:8333\n-89.212.75.6:8333\n-89.217.130.147:8333\n+87.233.181.146:8333\n+87.249.207.89:8333\n+88.86.116.140:8333\n+88.86.116.141:8333\n+88.86.243.241:8333\n+88.87.93.52:1691\n+88.98.198.130:8333\n+88.99.109.66:8333\n+88.119.128.36:8333\n+88.129.253.46:8333\n+88.212.44.33:8333\n+89.23.35.9:8333\n+89.47.217.222:8333\n+89.106.199.38:8333\n+89.142.75.60:8333\n+89.179.126.97:8333\n+89.212.9.96:8333\n+89.218.198.46:8333\n 89.230.96.42:8333\n-89.248.172.10:8333\n-90.46.57.17:8333\n-90.110.11.101:8333\n-90.240.37.163:8333\n-91.65.4.21:8333\n-91.65.192.159:8333\n-91.83.237.185:8333\n-91.110.125.26:8333\n-91.121.160.59:8333\n+90.125.157.153:8333\n+90.146.97.100:8333\n+90.182.165.18:8333\n+90.227.130.6:8333\n+91.92.128.32:8333\n+91.123.82.15:8333\n 91.135.0.187:8333\n-91.143.109.68:8333\n-91.195.42.134:8333\n-91.221.70.137:8333\n-92.35.132.5:8333\n-92.42.37.141:8333\n-92.54.16.144:8333\n-92.62.34.184:8333\n-92.186.231.240:8333\n-93.123.80.47:8333\n-93.170.13.15:8333\n-93.171.201.68:8333\n-93.179.197.152:8333\n-93.190.206.151:8333\n-93.191.131.177:8333\n-93.208.132.214:8333\n-94.104.97.247:8333\n-94.156.35.8:8333\n-94.199.173.113:8333\n-95.42.2.113:8333\n-95.94.225.61:8333\n-95.154.237.24:8333\n-95.158.39.64:8333\n-95.163.71.126:8333\n-95.163.106.139:8333\n-95.208.163.214:8333\n+91.152.121.138:8333\n+91.178.131.108:8333\n+91.185.198.234:8333\n+91.193.237.88:8333\n+91.202.133.75:8885\n+91.204.99.178:8333\n+91.204.149.5:8333\n+91.216.149.28:8333\n+91.219.25.232:8333\n+91.222.128.59:8333\n+92.62.231.253:8333\n+92.63.192.206:8333\n+92.63.197.243:8333\n+92.63.197.245:8333\n+92.119.112.59:8333\n+92.243.244.101:8333\n+92.255.176.109:8333\n+93.38.119.141:8333\n+93.50.177.66:8333\n+93.79.204.222:10333\n+93.115.28.30:11100\n+93.115.89.76:8333\n+93.115.240.26:8333\n+93.123.180.164:8333\n+93.126.94.192:8333\n+93.170.128.106:8333\n+93.185.103.70:8333\n+93.189.145.169:8333\n+93.190.142.127:8333\n+93.228.3.234:8333\n+94.19.128.204:8333\n+94.26.49.71:8333\n+94.63.65.127:8333\n+94.72.143.28:8333\n+94.104.217.250:8333\n+94.209.115.52:8333\n+94.237.72.166:8333\n+94.242.255.31:8333\n+95.24.48.84:15426\n+95.69.249.63:8333\n+95.79.35.133:8333\n+95.87.226.56:8333\n+95.91.80.140:8333\n+95.102.60.168:8333\n+95.154.90.99:8333\n+95.156.252.34:8333\n+95.165.175.75:8333\n+95.174.125.24:18333\n+95.183.54.101:12853\n+95.211.189.3:8333\n 95.213.143.13:8333\n-95.226.77.108:8333\n-96.3.74.66:8333\n-96.23.128.65:8333\n-96.27.8.242:8333\n-96.27.129.94:8333\n-96.126.100.148:8333\n-97.74.6.105:8333\n-97.116.160.102:8333\n-98.7.64.249:8333\n-98.10.106.49:8333\n-98.25.197.125:8333\n-98.29.7.103:8333\n-98.127.130.17:8333\n-99.224.192.201:8333\n-101.190.172.209:8333\n-103.35.151.76:8334\n-103.74.193.127:8333\n-103.80.133.191:8333\n-103.80.168.57:8333\n-103.99.168.102:8333\n-103.194.42.10:8333\n-104.168.101.207:8333\n-104.200.67.162:8333\n-104.207.132.42:8333\n-104.237.4.202:8333\n-107.155.72.108:8333\n-107.183.37.162:8333\n-108.175.3.18:8333\n-108.220.192.57:8333\n-109.61.102.5:8333\n-109.206.177.21:8333\n-109.237.111.156:8333\n-115.68.47.82:8333\n-116.88.75.110:8333\n-118.67.201.40:8333\n-119.28.4.230:8333\n-119.28.130.210:8333\n-120.31.143.167:8333\n-120.220.14.92:8333\n-120.220.14.93:8333\n-124.18.133.220:8333\n-126.207.39.22:8333\n-128.77.37.214:8333\n-128.125.100.2:8333\n-129.158.74.237:8333\n-129.213.32.176:8333\n-131.113.41.119:8333\n-131.113.41.125:8333\n-131.114.10.233:8333\n-131.188.40.191:8333\n-131.188.42.36:8333\n-134.0.112.92:8333\n-134.3.26.190:8333\n-135.23.196.24:8333\n-135.84.207.4:8333\n-136.59.129.125:8333\n-136.61.239.7:8333\n-137.117.164.18:8333\n-139.130.41.82:8333\n-141.134.71.188:8333\n-141.213.6.57:8333\n-141.223.82.139:8333\n-142.0.130.49:8333\n-142.0.130.53:8333\n-144.118.141.232:8333\n-148.66.58.146:8333\n-150.95.130.17:8333\n-150.187.36.233:8333\n-150.249.76.102:8333\n-153.125.129.187:8333\n-153.125.224.107:8333\n-154.48.236.250:8887\n-154.66.207.126:8333\n-155.143.140.186:8333\n-157.131.142.164:8333\n-158.64.79.182:8333\n-158.85.93.163:8333\n-158.140.128.239:8333\n-158.174.131.171:8333\n-159.8.4.19:8333\n-159.217.144.68:8333\n-159.217.144.252:8333\n-159.253.47.202:8333\n-162.155.64.226:8333\n-162.222.100.118:8333\n-162.255.168.27:8333\n-162.255.168.30:8333\n-163.158.228.125:8333\n-165.227.96.38:8333\n-169.229.238.17:8333\n-171.25.165.145:8333\n+95.213.184.109:778\n+96.9.80.109:8333\n+96.47.122.171:8333\n+97.81.244.191:8333\n+97.99.13.150:8333\n+97.104.206.3:8333\n+98.116.105.49:8333\n+99.224.131.4:8333\n+101.92.39.116:8333\n+101.100.163.118:8327\n+101.100.174.24:8333\n+101.251.68.146:12337\n+102.132.229.253:8333\n+103.14.244.190:8333\n+103.16.128.63:8333\n+103.59.144.135:8333\n+103.59.144.238:8333\n+103.99.168.100:8333\n+103.99.168.130:8333\n+103.100.220.46:8333\n+103.105.56.82:8333\n+103.106.208.207:8333\n+103.106.211.107:8333\n+103.108.228.51:8333\n+104.11.144.71:8333\n+104.128.228.252:8333\n+104.152.204.204:8333\n+104.153.30.236:8333\n+104.155.233.13:8333\n+104.198.126.116:8333\n+104.245.125.251:8333\n+106.12.57.72:8333\n+106.72.36.96:46289\n+106.163.158.127:8333\n+107.150.41.179:8333\n+107.191.116.103:8333\n+108.15.243.207:8333\n+108.58.252.82:8333\n+108.160.202.208:8333\n+108.213.205.103:8333\n+109.72.83.127:8333\n+109.99.63.159:8333\n+109.104.8.48:8333\n+109.183.251.77:8333\n+109.198.191.22:8333\n+109.236.90.122:58333\n+109.238.81.82:8333\n+109.248.206.13:8333\n+109.252.133.57:8333\n+111.90.145.57:8333\n+111.90.159.184:50001\n+113.35.179.149:8333\n+113.52.135.125:8333\n+115.47.141.250:8885\n+115.70.110.4:8333\n+116.58.171.67:8333\n+118.1.96.81:8333\n+118.103.126.140:28333\n+119.29.54.159:8333\n+119.207.78.152:8333\n+121.211.151.99:8333\n+122.112.148.153:8339\n+124.160.119.93:8333\n+128.197.128.222:8333\n+129.13.189.212:8333\n+129.97.243.18:8333\n+130.185.77.105:8333\n+130.255.187.86:8333\n+131.114.10.236:8333\n+131.188.40.34:8333\n+132.249.239.163:8333\n+133.18.1.114:8333\n+134.19.186.195:8333\n+136.36.123.20:8333\n+136.56.42.119:8333\n+137.226.34.46:8333\n+138.68.20.137:8333\n+141.101.8.36:8333\n+145.239.9.3:8333\n+145.249.106.103:8333\n+146.255.227.182:4033\n+147.192.18.175:8333\n+147.253.54.26:8333\n+148.66.58.58:8333\n+148.70.82.85:8333\n+149.90.34.119:8333\n+150.143.231.72:8333\n+153.92.127.216:8333\n+153.120.115.15:8333\n+153.124.187.220:8333\n+154.209.1.138:8333\n+154.211.159.200:8333\n+155.4.52.45:8333\n+156.19.19.90:8333\n+157.7.211.107:8333\n+159.100.248.234:8333\n+159.138.45.220:22235\n+160.16.0.30:8333\n+162.154.207.147:8333\n+163.158.243.230:8333\n+166.62.82.103:32771\n+166.62.100.55:8333\n+167.179.136.11:8333\n+168.235.74.110:8333\n+169.55.182.185:8333\n 171.33.177.9:8333\n-172.72.228.93:8333\n-172.96.161.244:8333\n-172.102.228.150:8333\n-172.118.136.98:8333\n-173.46.65.8:8333\n-173.212.193.35:8333\n-173.239.33.85:8333\n-173.243.64.48:8333\n-174.115.129.37:8333\n-176.12.6.59:8333\n-176.107.184.29:8333\n-176.123.10.192:8333\n+172.99.120.113:8333\n+172.105.112.233:8333\n+172.110.30.81:8333\n+173.21.218.95:8333\n+173.23.103.30:8000\n+173.51.177.2:8333\n+173.89.28.137:8333\n+173.208.128.10:8333\n+173.249.11.207:18333\n+174.65.135.60:8333\n+176.38.7.43:8333\n+176.92.150.12:8333\n+176.99.2.207:8333\n 176.126.167.10:8333\n-176.185.235.163:8333\n-176.223.130.254:8333\n-178.0.71.136:8333\n-178.12.32.39:8333\n-178.85.64.212:8333\n-178.124.162.209:8333\n-178.128.192.21:8333\n-178.151.133.56:8333\n-178.193.96.201:8333\n-178.248.200.126:8333\n-178.254.7.88:8333\n-180.233.106.171:8333\n-181.166.168.210:8333\n-183.66.227.70:12060\n-183.111.108.56:8333\n-184.70.33.190:8333\n-184.105.70.100:8333\n-184.105.70.101:8333\n-185.12.7.38:8333\n-185.21.216.134:8333\n+176.212.185.153:8333\n+176.223.136.171:8333\n+177.52.173.62:8333\n+178.33.136.162:8333\n+178.128.39.110:8333\n+178.143.50.8:8333\n+178.198.60.155:8333\n+178.236.137.63:8333\n+179.48.251.41:8333\n+180.150.52.37:8333\n+183.230.93.139:8333\n+184.80.255.250:8333\n+184.95.58.166:8336\n+184.180.129.98:8333\n+185.19.28.195:8333\n 185.25.48.184:8333\n-185.25.48.217:8333\n 185.25.60.199:8333\n-185.28.76.179:8333\n-185.35.139.54:8333\n-185.44.78.208:8333\n-185.47.132.55:8333\n-185.51.128.27:8333\n-185.59.100.107:8333\n-185.67.175.75:8333\n-185.67.204.76:8333\n-185.67.204.80:8333\n-185.70.105.74:8339\n-185.85.3.140:8333\n-185.86.15.23:8333\n-185.86.15.25:8333\n-185.102.71.6:8333\n-185.117.74.21:8333\n-185.121.173.223:8333\n-185.128.40.122:8333\n-185.145.131.218:8333\n-185.147.237.169:8333\n-185.162.128.83:8333\n-185.165.76.220:8333\n-185.172.165.130:8333\n-185.177.5.4:8333\n-185.183.131.75:8333\n-185.186.208.208:8333\n-185.215.224.22:8333\n-185.224.80.108:8333\n-185.225.16.4:8333\n-185.243.112.214:8333\n-185.244.193.18:8333\n-185.248.160.66:8333\n-186.19.136.144:8333\n-188.68.38.243:8333\n-188.68.240.89:8333\n+185.50.68.64:8333\n+185.53.158.12:8333\n+185.61.79.213:8333\n+185.64.116.15:8333\n+185.95.219.53:8333\n+185.130.215.73:8333\n+185.130.215.187:8333\n+185.141.60.127:8333\n+185.147.11.108:8333\n+185.154.159.164:9992\n+185.198.56.77:8333\n+185.198.59.183:8333\n+185.216.140.33:8333\n+185.217.241.142:8333\n+185.249.199.106:8333\n+188.42.40.234:18333\n+188.65.212.138:8333\n+188.65.212.211:8333\n+188.68.45.143:8333\n+188.120.246.125:8333\n+188.134.5.47:8333\n 188.134.6.84:8333\n-188.134.77.121:8333\n-188.138.1.43:8333\n-188.217.9.168:8333\n-190.2.133.91:8333\n+188.167.101.51:8333\n+188.175.77.16:8333\n+188.213.168.152:8333\n+188.230.245.188:8333\n+189.121.185.148:8333\n+190.104.249.44:8333\n 190.184.198.34:8333\n-190.211.204.68:8333\n-192.139.35.143:8333\n-192.162.100.156:8333\n-192.162.101.250:8333\n-192.206.202.6:8333\n-192.207.12.244:8333\n-192.207.12.245:8333\n-192.228.101.157:8333\n-193.112.192.73:8333\n-193.170.166.12:8333\n-194.15.231.236:8333\n-194.165.16.33:8333\n-194.181.80.77:8333\n-194.186.160.253:8333\n-194.247.13.7:8333\n-194.247.13.32:8333\n-195.0.203.21:8333\n-195.38.168.114:8333\n-195.43.141.28:8333\n-195.95.225.248:8333\n-195.123.224.7:8333\n-195.154.235.79:8333\n-195.169.99.82:8333\n-195.201.0.81:8333\n-197.155.6.43:8333\n+190.210.234.38:8333\n+190.218.190.85:8333\n+192.3.11.20:8333\n+192.3.11.24:8333\n+192.166.47.32:8333\n+192.167.149.143:8333\n+192.169.94.29:8333\n+192.169.94.70:8333\n+192.198.90.98:8333\n+192.254.89.134:8333\n+192.254.89.220:8333\n+193.41.78.125:8333\n+193.46.83.8:8333\n+193.59.41.11:8333\n+193.77.135.181:8333\n+193.84.116.22:8333\n+193.194.163.53:8333\n+194.71.225.55:8333\n+194.135.135.69:8333\n+194.158.92.150:8333\n+195.13.220.165:8333\n+195.56.63.10:8333\n+195.135.194.8:8333\n+195.168.36.20:8333\n+195.201.33.0:8333\n+195.202.169.149:8333\n+195.242.93.189:8333\n+198.1.231.6:8333\n 198.44.231.160:6333\n-198.58.102.35:8333\n-198.137.202.175:8333\n-199.127.224.50:8333\n-199.182.129.26:8333\n-199.188.204.102:8333\n-199.188.204.155:8333\n-199.244.49.224:8333\n-199.249.230.37:15738\n-200.83.123.46:8333\n-200.109.67.71:8333\n-200.122.128.185:8333\n-202.153.199.182:8333\n-202.159.136.54:8333\n-202.168.16.232:8333\n-203.11.71.1:8333\n-203.162.80.219:8333\n-203.178.143.13:8333\n-204.15.11.4:8333\n-206.125.169.162:8333\n-206.174.55.164:8333\n-207.182.146.18:8333\n-208.93.66.198:8333\n-208.98.196.249:8333\n-208.107.224.202:8333\n-208.110.65.114:8333\n-208.118.235.190:8333\n-209.122.208.131:8333\n-209.126.110.198:8333\n-209.131.238.80:8333\n-212.56.108.81:8333\n-212.73.150.132:8333\n-212.77.224.145:8333\n-212.85.90.194:8333\n-212.92.101.30:8333\n-212.112.133.92:8333\n-212.227.132.167:8333\n-213.10.100.182:8333\n-213.57.240.69:8333\n-213.91.205.134:8333\n-213.125.67.108:8333\n-213.152.161.170:45893\n-213.155.3.216:8333\n-213.180.70.138:8333\n-213.185.226.225:8333\n-216.71.203.79:8333\n-216.194.164.211:8333\n-216.240.168.226:8333\n-217.20.130.72:8333\n-217.23.9.180:8333\n+198.54.113.59:8333\n+198.251.83.19:8333\n+199.68.199.4:8333\n+199.247.1.117:8333\n+199.247.10.26:8333\n+200.76.194.7:8333\n+201.241.2.85:8333\n+202.185.45.110:8333\n+203.86.207.53:8333\n+203.130.48.117:8885\n+204.14.245.180:8333\n+204.111.241.195:8333\n+204.152.203.98:8333\n+205.185.122.150:8333\n+206.124.149.66:8333\n+207.182.154.178:8333\n+208.81.1.105:8333\n+209.133.201.114:8333\n+209.173.25.140:8333\n+209.180.174.200:8333\n+209.190.36.13:8333\n+210.54.38.227:8333\n+210.54.39.99:8333\n+210.203.222.52:8223\n+211.104.154.140:8333\n+212.24.103.20:8333\n+212.33.204.190:8333\n+212.51.156.139:8333\n+212.109.198.126:8333\n+212.237.96.98:8333\n+212.241.70.213:8333\n+213.37.92.163:8333\n+213.89.98.199:8333\n+213.89.150.13:8333\n+213.174.156.72:8333\n+213.209.123.165:8333\n+213.227.152.108:8333\n+216.38.129.164:8333\n+216.86.154.215:8333\n+216.93.139.63:8333\n+216.186.250.53:8333\n+216.194.165.98:8333\n+217.22.132.220:8333\n+217.43.72.105:8333\n 217.64.47.138:8333\n-217.169.14.90:8333\n-218.245.1.205:8333\n-220.130.128.58:8333\n-220.133.39.61:8333\n-222.239.193.116:8333\n-222.239.193.120:8333\n-[2001:0:4137:9e76:1cbd:3bc0:ade7:bf44]:8333\n-[2001:0:4137:9e76:2046:150d:8d65:de4]:8333\n-[2001:0:4137:9e76:2c99:3f36:d003:f47a]:8333\n-[2001:0:4137:9e76:34b6:3910:a3dc:7bfa]:8333\n-[2001:0:4137:9e76:3cec:2b5:525b:fb3c]:8333\n-[2001:0:53aa:64c:c5:235d:a10d:e0]:8333\n-[2001:0:53aa:64c:cbc:5ace:a625:39d1]:8333\n-[2001:0:5ef5:79fb:38e5:36c1:d0ee:5d98]:8333\n-[2001:0:5ef5:79fb:3c5c:c6c:39cf:69d3]:8333\n-[2001:0:5ef5:79fb:896:ef4:ba63:8d15]:8333\n-[2001:0:9d38:6ab8:106a:2112:e06b:b881]:8333\n-[2001:0:9d38:6ab8:1c99:1655:e782:9340]:8333\n-[2001:0:9d38:6ab8:20cd:1cd9:54e6:5a6e]:8333\n-[2001:0:9d38:6ab8:245e:2b3:a300:317e]:8333\n-[2001:0:9d38:6ab8:2814:215c:88e3:4ee0]:8333\n-[2001:0:9d38:6ab8:30ac:3a51:b2da:712d]:8333\n-[2001:0:9d38:6ab8:34a6:eeb:c3ed:5be7]:8333\n-[2001:0:9d38:6ab8:c2f:16d5:525a:107e]:8333\n-[2001:0:9d38:6ab8:cb1:2557:431c:f3e1]:8333\n-[2001:0:9d38:6abd:1056:290d:a671:3d90]:8333\n-[2001:0:9d38:6abd:1865:14fe:d0a7:1f72]:8333\n-[2001:0:9d38:6abd:2c3c:3006:a486:93c3]:8333\n-[2001:0:9d38:6abd:2c73:3313:f21a:96da]:8333\n-[2001:0:9d38:6abd:3050:fbff:a250:3386]:8333\n-[2001:0:9d38:6abd:3828:494:fdaa:56cd]:8333\n-[2001:0:9d38:6abd:454:187d:3e75:b00b]:8333\n-[2001:0:9d38:78cf:c2c:1dcc:fa42:41a3]:8333\n-[2001:0:9d38:90d7:1c4a:20d4:4daa:eb5a]:8333\n-[2001:0:9d38:90d7:1ca7:1612:9a18:31e5]:8333\n-[2001:0:9d38:90d7:24c8:3a0a:a68d:f799]:8333\n-[2001:0:9d38:90d7:2837:324e:d0cb:9f45]:22475\n-[2001:0:9d38:90d7:28c1:361e:a69c:b099]:8333\n-[2001:0:9d38:90d7:30fe:1c89:d0b4:4d18]:8333\n-[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333\n-[2001:0:9d38:90d7:34a8:fb1:88e3:fb19]:8333\n-[2001:0:9d38:90d7:3c19:3d23:d0b4:f831]:18652\n-[2001:0:9d38:90d7:3c45:2342:d0cb:d6ca]:8333\n-[2001:0:9d38:90d7:3c5f:3105:d0b4:60b6]:8333\n-[2001:0:9d38:90d7:8a1:2fb:d0cb:1e8f]:8333\n-[2001:0:9d38:90d7:a3:36e0:e020:53fa]:8333\n-[2001:0:9d38:90d7:eb:3b30:d0a4:aa5]:8333\n-[2001:0:9d38:953c:104e:8af:b3aa:f300]:8333\n-[2001:0:9d38:953c:1434:71f:b850:bab1]:8333\n-[2001:0:9d38:953c:144a:36e8:519a:bb69]:8333\n-[2001:0:9d38:953c:20fc:26ef:ed26:c737]:8333\n-[2001:0:9d38:953c:454:120:88e8:2fb]:8333\n-[2001:0:9d38:953c:801:1620:bc22:95bc]:8333\n-[2001:0:9d38:953c:8a0:1fdb:ab00:bc2]:8333\n-[2001:0:9d38:953c:cf6:3d48:4386:4937]:8333\n-[2001:13d8:1c01:1000::8]:8333\n-[2001:1620:923:0:75be:ed92:1a01:641]:8333\n-[2001:1680:101:8c::1]:8333\n-[2001:1970:5ae2:2b00:30bd:7910:c84:7a8f]:8333\n-[2001:1970:5d56:aa01:1e75:8ff:fead:da48]:8333\n-[2001:19f0:300:1045:225:90ff:fec9:29b3]:8333\n-[2001:19f0:5:1f93:5400:1ff:fe7a:c65a]:8333\n-[2001:19f0:6c01:4bd:5400:1ff:fe76:4db6]:8333\n-[2001:19f0:ac01:2fb:5400:ff:fe5b:c3ff]:8333\n-[2001:1a48:7:af1a:75f8:2c47:3285:d50e]:8333\n-[2001:1af8:4010:a094:3333::8c38]:8333\n-[2001:1af8:4070:a016:3333::5afb]:8333\n-[2001:1af8:4700:a071:4444::e26e]:8333\n-[2001:200:0:8801:5054:ff:fef2:1d0]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:41d0:1000:1f98::]:8333\n-[2001:41d0:1004:18c7::]:8333\n-[2001:41d0:1004:19dc::]:18555\n-[2001:41d0:1004:1f7c::]:8333\n-[2001:41d0:1008:2bed::]:8333\n-[2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:5395::1]:8333\n-[2001:41d0:1:85d3::1]:8333\n-[2001:41d0:1:8649::1]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:a5b8::1]:8333\n-[2001:41d0:1:ab6b::1]:8333\n-[2001:41d0:1:d227::]:8333\n-[2001:41d0:1:f897::1]:8333\n-[2001:41d0:1:f932::1]:8333\n-[2001:41d0:2:34b7::1]:8333\n-[2001:41d0:2:4975::]:8333\n-[2001:41d0:2:5c22::]:8333\n-[2001:41d0:2:84d4::1]:8333\n-[2001:41d0:2:ab38::]:8333\n-[2001:41d0:2:c33c::]:8333\n-[2001:41d0:303:193b::]:8333\n-[2001:41d0:303:2505::1a]:8333\n-[2001:41d0:303:41db::]:58333\n-[2001:41d0:303:4c68::]:8333\n-[2001:41d0:303:508::]:8333\n-[2001:41d0:303:6767::]:8333\n-[2001:41d0:303:68cd::]:8333\n-[2001:41d0:602:17a4::]:8333\n-[2001:41d0:602:1842::]:8333\n-[2001:41d0:602:3b7::]:8333\n-[2001:41d0:602:898::]:8333\n-[2001:41d0:602:b1a::]:8333\n-[2001:41d0:800:135::]:8333\n-[2001:41d0:800:3d3::]:8333\n-[2001:41d0:8:101d::1]:8333\n-[2001:41d0:8:1b29::]:8333\n-[2001:41d0:8:3f74::1]:8333\n-[2001:41d0:8:43a0::]:8333\n-[2001:41d0:8:bb32::1]:8333\n-[2001:41d0:8:bed3::]:8333\n-[2001:41d0:8:c67c::]:8333\n-[2001:41d0:8:ca2d::]:8333\n-[2001:41d0:8:d444::1]:8333\n-[2001:41d0:8:ddb::1]:8333\n-[2001:41d0:8:ea86::1]:8333\n-[2001:41d0:a:1220::1]:8333\n-[2001:41d0:a:27ed::1]:8333\n-[2001:41d0:a:296c::]:8139\n-[2001:41d0:a:2b18::1]:8333\n-[2001:41d0:a:405c::]:8333\n-[2001:41d0:a:42df::]:8312\n-[2001:41d0:a:4c49::aca:7929]:8333\n-[2001:41d0:a:6927::1]:8333\n-[2001:41d0:a:69a2::1]:8333\n-[2001:41d0:a:6a87::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:6c7d::1]:8333\n-[2001:41d0:a:f243::1]:8333\n-[2001:41d0:a:f9cd::1]:8333\n-[2001:41d0:d:dc9::]:8333\n-[2001:41d0:e:1146::1]:8333\n-[2001:41d0:e:126::1]:8333\n-[2001:41d0:e:12aa::1]:8333\n-[2001:41d0:e:1388::1]:8333\n-[2001:41d0:e:ec5::1]:8333\n-[2001:41f0:0:4:62:6974:636f:696e]:8333\n-[2001:470:18:be4::2]:8333\n-[2001:470:1c62:b170:bbff:53f1:edbf:99df]:42434\n-[2001:470:1f06:15b4::2]:8333\n-[2001:470:1f06:cea::2]:8333\n-[2001:470:1f07:803:20c:29ff:fe2d:5879]:8333\n-[2001:470:1f08:3cc::2]:8333\n-[2001:470:1f0a:18dd::2]:8333\n-[2001:470:1f15:11f8::10]:8333\n-[2001:470:1f15:cf7::14]:8333\n-[2001:470:1f17:b5::10]:8333\n-[2001:470:1f1a:172::2]:8333\n-[2001:470:1f1b:5a6:216:3eff:fe24:1162]:8333\n-[2001:470:28:365::7]:8333\n-[2001:470:41:6::2]:8333\n-[2001:470:6c80:101::1]:8333\n-[2001:470:6c80:3::1]:8333\n-[2001:470:7:63e::2]:8333\n-[2001:470:7:b74::2]:8333\n-[2001:470:8:bd3:4d25:ca57:a5b7:c6c4]:8333\n-[2001:470:a:c13::2]:8333\n-[2001:470:c144:cafe::23]:8333\n-[2001:470:c3c4:100:100::202]:8333\n-[2001:470:e696::1]:8333\n+217.69.145.234:8333\n+217.158.9.102:8333\n+220.130.142.178:33389\n+220.233.138.130:8333\n+[2001:1ba8:401:32:b842:3891:5915:c68f]:8333\n+[2001:1bc0:cc::a001]:8333\n+[2001:250:200:7:d6a9:fcf4:e78d:2d82]:8333\n+[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n+[2001:41d0:fc63:9c00:1acc:d22f:3f5c:ef7f]:8333\n+[2001:44b8:4195:1801:5c73:5d67:d2a6:9910]:8333\n+[2001:4800:7821:101:be76:4eff:fe04:9f50]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n+[2001:4801:7821:77:be76:4eff:fe10:c7f6]:8333\n+[2001:48d0:1:2163:0:ff:febe:5a80]:8333\n [2001:48f8:1003::3ba]:8333\n-[2001:48f8:9015:1422:3dc0:fcf2:772f:57bc]:8333\n-[2001:4ba0:babe:832::]:8333\n-[2001:628:22a0:9::12]:8333\n+[2001:4ba0:fffa:5d::93]:8333\n+[2001:4c48:2:a328:d8a7:e0ff:fe96:403a]:8333\n+[2001:56b:dda9:4b00:49f9:121b:aa9e:de30]:8333\n [2001:638:a000:4140::ffff:191]:8333\n-[2001:638:a000:4142::ff10:bed6]:8333\n+[2001:678:7dc:8::2]:8333\n+[2001:678:ec:1:250:56ff:fea7:47e9]:8333\n+[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n [2001:67c:21ec:1000::a]:8333\n-[2001:8d8:90b:c000::21:2fc0]:8333\n-[2001:8d8:91c:9200::5c:d425]:8333\n-[2001:980:231b:1:8e89:a5ff:fee3:f8be]:8333\n-[2001:980:ade8:1:14fc:fd6d:608c:f669]:8333\n-[2001:981:bdbd:1:c506:7d38:4b47:da15]:8333\n-[2001:982:27f2:1:7271:bcff:fe94:d5bb]:8333\n-[2001:984:26b5::1]:8333\n-[2001:984:aec7:1:dcb7:29a:7eda:b9a2]:8333\n-[2001:985:79af:20::35]:8333\n-[2001:985:cb69:0:20c:29ff:feaf:dd5e]:8333\n-[2001:b011:300d:1870:9c87:d4ff:fe9c:2d0f]:8333\n-[2001:b030:2422::208d]:8333\n-[2001:bc8:31d7:100::1]:8333\n-[2001:bc8:323c:100::]:8333\n-[2001:bc8:33ac:19ff::26]:8333\n-[2001:bc8:399f:f000::1]:8333\n-[2001:bc8:3dc1:100::142]:8333\n-[2001:bc8:4400:2000::463b]:8333\n-[2001:bc8:4400:2400::1b35]:8333\n-[2001:bc8:4700:2000::5823]:8333\n-[2001:da8:8001:2303:1cf4:4466:3f1a:7edb]:8333\n-[2001:da8:d800:741:652d:52db:5713:4515]:8333\n-[2002:17e5:10ea::17e5:10ea]:8333\n-[2002:1f2b:8cbe::1f2b:8cbe]:8333\n-[2002:2f59:30f3::2f59:30f3]:8333\n-[2002:2f5a:562a::2f5a:562a]:8333\n-[2002:3e92:46d8::3e92:46d8]:8333\n-[2002:3f62:e6bb::3f62:e6bb]:8333\n-[2002:404e:a30a::404e:a30a]:8333\n-[2002:43db:9616::43db:9616]:8333\n-[2002:43e5:a1fa::43e5:a1fa]:8333\n-[2002:5266:afb::5266:afb]:8333\n-[2002:5dbd:91a9::5dbd:91a9]:8333\n-[2002:627e:333d::627e:333d]:8333\n-[2002:6b9b:486c::6b9b:486c]:8333\n-[2002:6dcb:7cba::6dcb:7cba]:8333\n-[2002:7cf8:e33e::7cf8:e33e]:8333\n-[2002:8e00:8231::8e00:8231]:8333\n-[2002:8e00:8233::8e00:8233]:8333\n-[2002:b07e:a70a::b07e:a70a]:8333\n-[2002:b2c9:e6fc:10:3d5c:e3ad:813:9c46]:8333\n-[2002:b4b2:3612::b4b2:3612]:8333\n-[2002:b610:1ca2::b610:1ca2]:8333\n-[2002:b610:1ca3::b610:1ca3]:8333\n-[2002:b845:3322::1]:8333\n-[2002:b946:694a::b946:694a]:8339\n-[2002:b960:5e18::b960:5e18]:8333\n-[2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:c2a5:1021::c2a5:1021]:8333\n-[2002:c62c:e7a0::c62c:e7a0]:6333\n-[2002:ca99:c7b6::ca99:c7b6]:8333\n-[2002:d035:2734::d035:2734]:8333\n-[2002:d06e:5d1a::d06e:5d1a]:8333\n-[2002:d8da:b949::d8da:b949]:8333\n-[2400:2410:a960:4800:18be:d624:7018:cd2f]:8333\n-[2400:6180:0:d0::3e1:b001]:8333\n-[2400:6180:0:d0::5cd2:a001]:8333\n-[2400:6180:0:d1::4c6:8001]:8333\n-[2400:6180:100:d0::797:a001]:8333\n-[2400:8500:1302:817:150:95:130:17]:8333\n-[2401:1800:7800:106:be76:4eff:fe1c:1879]:8333\n+[2001:67c:22fc:1337::5]:8333\n+[2001:67c:2824:8001:225:90ff:fe67:9830]:7777\n+[2001:67c:2b5c:101:216:3eff:fea3:5234]:8333\n+[2001:67c:2db8:13::83]:8333\n+[2001:718:801:311:5054:ff:fe19:c483]:8333\n+[2001:8003:d136:1001::11:ffd1]:8333\n+[2001:8d8:96a:9300::ad:ae2c]:8333\n+[2001:8f1:1602:700:1b28:a3e3:bb08:a708]:9444\n+[2001:8f8:1327:1587:3f10:5ab:804d:4039]:8333\n+[2001:ba8:1f1:f069::2]:8333\n+[2001:e42:103:100::30]:8333\n+[2400:2650:480:bc00:bcaf:7c49:8c9e:7cdf]:8333\n+[2400:4052:e20:4f00:69fe:bb33:7b1c:a1ca]:8333\n+[2400:8902::f03c:91ff:fea5:ebb7]:8333\n+[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n+[2401:2500:203:184::15]:8333\n [2401:3900:2:1::2]:8333\n-[2401:a400:3200:5600:3c16:2deb:abce:70cd]:8333\n-[2401:b140::43:100]:8333\n-[2401:b140::43:102]:8333\n-[2402:1f00:8100:21c::]:8333\n-[2403:bd80:c000:1:103:202:216:182]:8333\n-[2405:6580:c5c0:1700:6cd2:b72e:740e:4311]:8333\n-[2405:800:1000:1:1000::2001]:8333\n-[2405:9800:b560:96d:630:c28e:a79a:a182]:8333\n+[2402:7340:1:56::d0d]:8333\n+[2405:9800:ba01:251a:c53c:b80a:320d:5b41]:8333\n [2405:aa00:2::40]:8333\n [2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n-[2600:1f16:625:e00:269a:3452:2edf:1011]:8333\n-[2600:1f16:625:e00:7bc:5879:4463:15dd]:8333\n-[2600:1f16:625:e00:a28b:5a16:849c:fe41]:8333\n-[2600:1f16:625:e00:a70f:e728:e8e1:2c2e]:8333\n-[2600:3c00::f03c:91ff:fe0c:4d74]:8333\n-[2600:3c00::f03c:91ff:fe2b:bf38]:8333\n-[2600:3c00::f03c:91ff:fe91:3e49]:8333\n-[2600:3c00::f03c:91ff:feb6:19f2]:8333\n-[2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c01::f03c:91ff:fed8:85a2]:8333\n-[2600:3c01::f03c:91ff:fed8:db38]:8333\n-[2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2601:147:4300:e61::30c]:8333\n-[2601:147:4300:e61::f91]:8333\n-[2601:186:c100:6bcd:16bd:cea1:235d:1c19]:8333\n-[2601:18d:4600:5f32:20e7:b3ff:fecf:a99]:8333\n-[2601:240:4601:ecee:309a:f9de:b64d:87df]:8333\n-[2601:240:8100:256b:20c:29ff:fe5e:d707]:8333\n-[2601:646:c202:5301:101b:a096:efba:c10a]:8333\n-[2601:807:8000:9508:9993:d2b3:1a:8225]:8333\n-[2601:c8:4100:770:c37:807b:98cc:bd7e]:8333\n-[2602:100:6154:d6e3:2c91:d0de:b032:b0a4]:8333\n-[2602:100:6154:d6e3::60]:8333\n-[2602:61:786c:2c00::1]:8333\n-[2602:ff83:fff:fffe::75]:8333\n-[2602:ff83:fff:fffe::76]:8333\n-[2603:3005:3000:5000:bc5a:72ac:36e9:175e]:8333\n-[2604:0:c1:100:6bc1:f98a:97f9:3845]:8333\n-[2604:2d80:c808:857b:8d6:9e1c:7131:4bea]:8333\n-[2604:4080:1008:0:96de:80ff:fe62:e650]:8333\n-[2604:4300:a:104:b699:baff:feaa:5109]:8333\n-[2604:5500:c226:7f00:2d96:ed64:ce45:9a6]:8333\n-[2604:8d80:100::adf3:4030]:8333\n-[2604:a880:2:d0::22f8:e001]:8333\n-[2604:a880:2:d0::22f8:f001]:8333\n-[2604:a880:2:d0::22f9:1]:8333\n-[2604:a880:2:d0::22f9:1001]:8333\n-[2604:a880:2:d0::22f9:c001]:8333\n-[2604:a880:2:d0::22f9:d001]:8333\n-[2604:a880:2:d0::22f9:e001]:8333\n-[2604:a880:2:d0::22fa:1001]:8333\n-[2604:a880:2:d0::22fa:2001]:8333\n-[2604:a880:2:d0::22fa:3001]:8333\n-[2604:a880:2:d0::38:f001]:8333\n-[2604:a880:2:d0::662:c001]:8333\n-[2604:a880:400:d0::1ac4:b001]:8333\n-[2604:a880:400:d0::2004:4001]:8333\n-[2604:a880:400:d0::2004:5001]:8333\n-[2604:a880:400:d0::2004:6001]:8333\n-[2604:a880:400:d0::2004:d001]:8333\n-[2604:a880:400:d0::2004:e001]:8333\n-[2604:a880:400:d0::2005:1]:8333\n-[2604:a880:400:d0::2005:2001]:8333\n-[2604:a880:400:d0::2005:3001]:8333\n-[2604:a880:400:d0::cd7:4001]:8333\n-[2604:a880:400:d1::729:b001]:8333\n-[2604:a880:800:a1::11a9:8001]:8333\n-[2604:a880:800:a1::59:9001]:8333\n-[2604:a880:800:a1::cbb:f001]:8333\n-[2604:a880:800:a1::ee8:e001]:8333\n-[2604:a880:cad:d0::370:f001]:8333\n-[2604:a880:cad:d0::a52:6001]:8333\n-[2605:4d00::50]:8333\n-[2605:9880:0:1cf:225:90ff:fec9:29b3]:8333\n-[2605:9880:0:3::8333]:8333\n+[2409:13:1200:d200:16da:e9ff:fee9:b19a]:8333\n+[240d:1a:3c0:ab00:e9f1:87c:93ac:7687]:8333\n+[2602:ffc5:1f::1f:9211]:8333\n+[2604:2000:ffc0:0:5862:b6f8:fe72:762f]:8333\n+[2604:4300:a:2e:21b:21ff:fe11:392]:8333\n+[2604:5500:c2a3:7b00:cc6:373b:44a8:caa4]:8333\n [2605:9880:201:17::4b7c]:8333\n-[2605:a000:4a87:9501:d613:fbf8:1e82:8d3c]:8333\n-[2605:a000:f343:b700:5054:ff:fea7:131]:8333\n-[2605:a601:a41:1a00:a00:27ff:fefc:4759]:8333\n [2605:ae00:203::203]:8333\n [2605:c000:2a0a:1::102]:8333\n-[2605:e000:1c00:80e8:984e:a697:97a3:50ed]:8333\n-[2605:e000:1c0d:437b:5054:ff:fe1b:2913]:8333\n-[2605:e000:9093:a700:9853:4464:5f78:c484]:8333\n-[2605:f700:100:400::104e:43bd]:8333\n [2605:f700:100:400::131:5b54]:8333\n-[2605:f700:100:c10:5575:8e73:b07c:bf5a]:8333\n-[2606:6000:c149:8830:5054:ff:fe78:66ff]:8333\n-[2607:1c00:a:6:3c1c:1b0d:ba4:8ea9]:8333\n-[2607:1c00:a:6::1000]:8333\n-[2607:5300:120:a04::]:8333\n-[2607:5300:203:2fac::]:8333\n-[2607:5300:203:408::]:8333\n-[2607:5300:203:6bc::]:18333\n-[2607:5300:203:8d::]:8333\n-[2607:5300:60:10aa::1]:8333\n-[2607:5300:60:122a::1]:8333\n-[2607:5300:60:13bb::1]:8333\n-[2607:5300:60:3ddf::]:8333\n-[2607:5300:60:5735::]:8333\n-[2607:5300:60:714::1]:8333\n-[2607:5300:60:981::1]:8333\n-[2607:5300:60:cff1::]:28633\n+[2606:c680:0:b:3830:34ff:fe66:6663]:8333\n [2607:9280:b:73b:250:56ff:fe21:bf32]:8333\n-[2607:f178:0:8::106]:8333\n-[2607:f1c0:823:af00::35:bbd1]:8333\n-[2607:f2c0:f00e:300:201:2eff:fe67:9130]:8333\n-[2607:fa18:0:beef::c012]:8333\n-[2607:ff28:1:7::176e:c4a5]:8333\n-[2607:ff28:1:7::65af:9afb]:8333\n-[2620:71:4000:0:192:30:120:110]:8333\n-[2801:84:0:1034:76d4:35ff:fe7f:5033]:8333\n-[2803:1500:1200:c487::1]:8333\n-[2804:14c:6582:60f0::1]:8333\n-[2804:14d:baa6:962c:486:47f6:c161:a79d]:8333\n+[2607:f128:40:1703::2]:8333\n+[2607:f3a0:1000:9:f82a:fdff:fea1:3315]:8333\n+[2607:f470:8:1048:ae1f:6bff:fe68:5e42]:8333\n+[2607:fd70:4a:babe:b00b:1e5:1bd5:f78]:8333\n+[2607:ff50:0:71::13]:8333\n+[2620:6e:a000:1:42:42:42:42]:8333\n+[2804:14d:baa7:9674:3615:9eff:fe23:d610]:8333\n+[2a00:1328:e101:c00::163]:8333\n+[2a00:1398:4:2a03:215:5dff:fed6:1033]:8333\n [2a00:13a0:3015:1:85:14:79:26]:8333\n-[2a00:16d8:c::5b6a:c261]:8333\n-[2a00:1768:2001:24::148:218]:8333\n-[2a00:1838:36:2c::ed85]:8333\n-[2a00:1a28:1157:2f8::946a]:8333\n-[2a00:1c48:6:203:a60:6eff:fe44:8086]:8333\n-[2a00:1f40:2::1126]:8333\n-[2a00:7c80:0:5d::1d0e]:8333\n+[2a00:1630:14::101]:8333\n+[2a00:1768:2001:27::ef6a]:8333\n+[2a00:1828:a004:2::666]:8333\n+[2a00:1838:36:2c::3e95]:8333\n+[2a00:1b60:2:4:40d0:eff:fe88:ebd4]:8333\n+[2a00:7b80:452:2000::138]:8333\n+[2a00:7b80:454:2000::101]:8333\n [2a00:8a60:e012:a00::21]:8333\n-[2a00:ab00:603:84::3]:8333\n-[2a00:bbe0:cc:0:6651:6ff:fe0e:9418]:8333\n-[2a00:ca8:a1f:3025:4121:5ca1:3b:4469]:8333\n-[2a00:ca8:a1f:9091:945e:80a3:830a:78cf]:8333\n-[2a01:238:433c:5300:7a61:3e1a:27f4:9dc2]:8333\n-[2a01:4240:a21:983b::c0a8:32]:8333\n-[2a01:488:66:1000:53a9:21b8:0:1]:8333\n-[2a01:4d60:3:1:5::1]:8333\n-[2a01:4f8:10a:3524::2]:8333\n-[2a01:4f8:10b:362::2]:8333\n-[2a01:4f8:10b:d50::2]:8333\n-[2a01:4f8:10b:f44::2]:8333\n-[2a01:4f8:120:1391::2]:8333\n-[2a01:4f8:120:70a3::2]:8333\n-[2a01:4f8:120:93f8::2]:8333\n-[2a01:4f8:121:2385::2]:8333\n-[2a01:4f8:130:71d2::2]:8333\n-[2a01:4f8:130:7422::2]:8333\n-[2a01:4f8:13a:124f::2]:8333\n-[2a01:4f8:13a:1dcb::2]:8333\n-[2a01:4f8:13a:708::2]:21775\n-[2a01:4f8:13a:723::2]:8333\n-[2a01:4f8:13b:109e::2]:8333\n-[2a01:4f8:13b:1a9e::201]:8333\n-[2a01:4f8:13b:271c::2]:10731\n-[2a01:4f8:13b:2d42::2]:8333\n-[2a01:4f8:13b:2d94::2]:8333\n-[2a01:4f8:13b:3810::2]:8333\n-[2a01:4f8:13b:3da8::2]:8333\n-[2a01:4f8:13b:41e6::2]:8333\n-[2a01:4f8:13b:4281::2]:8333\n-[2a01:4f8:13b:5c7::2]:8333\n-[2a01:4f8:13b:81::2]:8333\n-[2a01:4f8:140:236a:cafe::5]:8333\n-[2a01:4f8:140:324e::2]:8333\n-[2a01:4f8:140:5329::102]:8333\n-[2a01:4f8:140:5329::50:109]:8333\n-[2a01:4f8:140:931a::2]:8333\n-[2a01:4f8:140:93b0::2]:8333\n-[2a01:4f8:141:47::2]:8333\n-[2a01:4f8:150:53a4::4]:8333\n-[2a01:4f8:150:72ee::4202]:8333\n-[2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:4443::2]:8333\n-[2a01:4f8:160:6092:d7bd:a39:3e52:b65d]:8333\n-[2a01:4f8:160:60aa::2]:8333\n-[2a01:4f8:160:636e::2]:8333\n-[2a01:4f8:161:6091::2]:8333\n-[2a01:4f8:161:6111::2]:8333\n-[2a01:4f8:161:812e::2]:8333\n-[2a01:4f8:162:2c6::2]:8333\n-[2a01:4f8:162:33ac::2]:8333\n-[2a01:4f8:171:1c3::2]:8333\n-[2a01:4f8:171:2bdc::2]:8333\n-[2a01:4f8:171:3248::2]:8333\n-[2a01:4f8:171:4dc::2]:8333\n-[2a01:4f8:171:d09::2]:8333\n-[2a01:4f8:171:d4a::2]:8333\n-[2a01:4f8:171:e0d::2]:8333\n-[2a01:4f8:171:ecd::2]:8333\n-[2a01:4f8:172:1823::2]:8333\n-[2a01:4f8:173:1622::2]:8333\n-[2a01:4f8:190:50b6::2]:8333\n-[2a01:4f8:190:5176::123]:8333\n-[2a01:4f8:191:268::2]:8333\n-[2a01:4f8:192:216c::2]:8333\n-[2a01:4f8:192:628a::83]:8333\n-[2a01:4f8:1c0c:77af::1]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:442d::2]:8333\n-[2a01:4f8:201:1113::2]:8333\n-[2a01:4f8:201:4f0::2]:8333\n-[2a01:4f8:201:53cc::2]:8333\n-[2a01:4f8:201:8026::1337]:8333\n-[2a01:4f8:201:8026::2]:8333\n-[2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:211:309::2]:8333\n-[2a01:4f8:211:f08::2]:8333\n-[2a01:4f8:212:1e16::2]:8333\n-[2a01:4f8:221:1808::2]:15000\n-[2a01:4f8:221:2e18::2]:8333\n-[2a01:4f8:221:2fcf::2]:8333\n-[2a01:4f8:221:3441::2]:8333\n-[2a01:4f8:221:3452::2]:8333\n-[2a01:4f8:221:39c1::2]:8335\n-[2a01:4f8:221:3c82::2]:8333\n-[2a01:4f8:221:3c82:fea1::666]:8333\n-[2a01:4f8:221:6cd::2]:8333\n-[2a01:4f8:221:801::2]:8333\n-[2a01:4f8:221:f59::2]:8333\n-[2a01:4f8:a0:6147::2]:8333\n-[2a01:4f8:c0c:4268::2]:8333\n-[2a01:4f8:c0c:56a5::2]:8333\n-[2a01:4f8:c17:e00::2]:8333\n-[2a01:4f9:2a:10d4::2]:8333\n-[2a01:4f9:2a:1827::2]:8333\n-[2a01:4f9:2a:192c::2]:8333\n-[2a01:4f9:2a:1c87::2]:8333\n-[2a01:4f9:2a:2510::2]:8333\n-[2a01:4f9:2a:2518::2]:8333\n-[2a01:4f9:2a:2585::2]:8333\n-[2a01:4f9:2a:2698::2]:8333\n-[2a01:4f9:2a:2d0a::2]:8333\n-[2a01:4f9:2a:2d17::2]:8333\n-[2a01:4f9:2a:347::2]:8333\n-[2a01:4f9:2a:650::2]:8333\n-[2a01:4f9:2a:d54::2]:8333\n-[2a01:4f9:c010:12e7::1]:8333\n-[2a01:4f9:c010:1736::1]:8333\n-[2a01:5d00:1:4b6:d2bf:9cff:fe45:b834]:8333\n-[2a01:79c:cebe:70cc:1a03:73ff:fe48:e691]:8333\n-[2a01:7a0:2:1374::7]:8333\n-[2a01:7a7:2:1218:ec4:7aff:fe83:83c4]:8333\n-[2a01:7a7:2:1288:ea39:35ff:fef0:c429]:8333\n-[2a01:7c8:aaba:18:5054:ff:fe2b:df20]:8333\n-[2a01:7c8:fffa:50e:3035:741b:be02:b5de]:8333\n-[2a01:be00:10:201:0:80:cece:1]:8333\n-[2a01:cb00:5be:d500:227:eff:fe28:c565]:8333\n-[2a01:cb00:b3:d300:9276:8a8c:74bf:2a88]:8333\n-[2a01:cb14:b8:a500:dd9d:80f5:d305:68f9]:8333\n-[2a01:e0a:20:9120:7c3f:5643:9978:1825]:8333\n-[2a01:e0a:d:6ea0:56:deab:1b2f:300b]:8333\n-[2a01:e34:ec16:93f0:725d:d8d2:bb90:eabf]:8333\n-[2a01:e34:ee33:1640:c418:3c3a:8ff6:3eab]:8333\n-[2a01:e34:eed7:6670:28c0:183c:7783:7dc3]:8333\n-[2a01:e35:2f7d:a0b0:59c2:3c8a:95a2:c4d1]:8333\n-[2a01:e35:87ba:d0c0:75a2:9f39:efcb:f59f]:8333\n-[2a02:120b:c3c5:cef0:ec82:a43d:4d6:dc2]:8333\n-[2a02:120b:c3d1:f2d0:eea8:6bff:fefc:2265]:8333\n-[2a02:168:404c:0:eea8:6bff:fef3:7d5c]:8333\n-[2a02:180:1:1::517:10b6]:8333\n-[2a02:180:1:1::5b8f:538c]:8333\n-[2a02:1b8:10:147::2]:8333\n-[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333\n-[2a02:2528:503:2::14]:8333\n-[2a02:2528:fa:1400::1]:8333\n-[2a02:2770:17:0:21a:4aff:fe7b:175f]:8333\n-[2a02:2770:5:0:21a:4aff:fe44:8370]:8333\n-[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333\n+[2a01:4240:5f52:9246::1]:8333\n+[2a01:430:17:1::ffff:1153]:8333\n+[2a01:488:66:1000:53a9:1573:0:1]:8333\n+[2a01:6f0:ffff:120::8dcb]:8333\n+[2a01:7a0:2:137a::11]:8333\n+[2a01:7a7:2:131b:20c:29ff:fe9a:3922]:8333\n+[2a01:7c8:d002:318:5054:ff:febe:cbb1]:8333\n+[2a01:cb00:d3d:7700:227:eff:fe28:c565]:8333\n+[2a01:d0:ffff:7368::2]:8333\n+[2a01:e0a:182:1300:591e:529:b376:c654]:8333\n+[2a01:e34:ee6b:2ab0:88c2:1c12:f4eb:c26c]:8333\n+[2a02:1205:34c3:d890:c0e:741e:c45f:3605]:8333\n+[2a02:2c8:1:400:34::184]:8333\n+[2a02:2f0d:202:f900:5e9a:d8ff:fe57:8bc5]:8333\n [2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:750:7:c11:5054:ff:fe43:eb81]:8333\n+[2a02:4780:9:0:2:f928:f280:9a6f]:8333\n+[2a02:578:4f07:24:76ad:cef7:93c1:b9b9]:8333\n [2a02:7aa0:1619::590:eba2]:8333\n-[2a02:7b40:3e4d:9ed9::1]:8333\n-[2a02:7b40:50d1:e04f::1]:8333\n-[2a02:7b40:5928:f9e::1]:8333\n-[2a02:7b40:592f:a590::1]:8333\n-[2a02:7b40:b0df:82fe::1]:8333\n-[2a02:7b40:b0df:8925::1]:8333\n-[2a02:7b40:b0df:8b41::1]:8333\n-[2a02:7b40:b0df:8d57::1]:8333\n-[2a02:7b40:d418:6fcd::1]:8333\n-[2a02:8108:2340:1c18:7a:231e:1430:7f12]:8333\n-[2a02:8108:9c3f:dd18:922b:34ff:fe30:ac42]:8333\n-[2a02:810d:8a40:36f8:9af2:b3ff:fee8:6d7a]:8333\n-[2a02:8388:e301:7180:201:2eff:fe82:b3cc]:8333\n-[2a02:908:213:54a0:39bf:d4aa:60b2:d9c3]:8333\n-[2a02:908:4f0:7e1c:5054:ff:feb7:ce4b]:8333\n-[2a02:930:1:0:250:56ff:fe8e:2819]:8333\n-[2a02:a80:0:2052::2]:8333\n-[2a02:c205:0:5145::1]:8333\n-[2a02:c205:2008:272::1]:8333\n-[2a02:c205:2010:6230::1]:8333\n-[2a02:c205:2016:4327::1]:8333\n-[2a02:c205:2017:2116::1]:8333\n-[2a02:c205:2018:1754::1]:8333\n-[2a02:c205:2018:8229::1]:8333\n-[2a02:c205:3002:2787::1]:8333\n-[2a02:c205:3002:6525::1]:8333\n-[2a02:c207:0:3829::1]:8333\n-[2a02:c207:2007:4699::1]:8333\n-[2a02:c207:2009:213::1]:8333\n-[2a02:c207:2010:7751::1]:8333\n-[2a02:c207:2012:4826::1]:8333\n-[2a02:c207:2014:4199::1]:8333\n-[2a02:c207:2014:5639::1]:8333\n+[2a02:7aa0:1619::adc:8de0]:8333\n+[2a02:8108:95bf:eae3:211:32ff:fe8e:b5b8]:8333\n [2a02:c207:2014:9913::1]:18333\n-[2a02:c207:2015:3799::1]:8333\n-[2a02:c207:2015:3926::1]:8333\n-[2a02:c207:2015:5919::1]:8333\n-[2a02:c207:2015:6681::1]:8333\n-[2a02:c207:2016:2394::1]:8333\n-[2a02:c207:2016:9375::1]:8333\n-[2a02:c207:2017:1988::1]:8333\n-[2a02:c207:2017:3720::1]:8333\n-[2a02:c207:2017:4486::1]:8333\n-[2a02:c207:2017:4708::1]:8333\n-[2a02:c207:2017:5828::1]:8333\n-[2a02:c207:2017:7320::1]:8333\n-[2a02:c207:2017:8175::1]:8333\n-[2a02:c207:2017:8998::1]:8333\n-[2a02:c207:2018:1462::1]:8333\n-[2a02:c207:2018:3094::1]:8333\n-[2a02:c207:2018:3275::1]:8333\n-[2a02:c207:2018:3710::1]:8333\n-[2a02:c207:2018:4790::1]:8333\n-[2a02:c207:2018:7407::1]:8333\n-[2a02:c207:2019:1067::1]:8333\n-[2a02:c207:2019:1425::1]:8333\n-[2a02:c207:2019:2041::1]:8333\n-[2a02:c207:2019:248::1]:8333\n-[2a02:c207:2019:3592::1]:8333\n-[2a02:c207:3001:9320::1]:8333\n-[2a02:c207:3002:1287::1]:8333\n-[2a02:c207:3002:4187::1]:8333\n-[2a02:c207:3002:5642::1]:8333\n-[2a02:c207:3002:7150::1]:8333\n-[2a02:c207:3002:7222::1]:8333\n-[2a02:c207:3002:7610::1]:8333\n-[2a02:c207:3002:8456::1]:8333\n-[2a02:ce80:0:20::1]:8333\n-[2a02:e00:fff0:1b9::1]:8333\n-[2a02:e00:fff0:1b9::a]:8333\n-[2a02:e00:fff0:1e2::1]:8333\n-[2a03:b0c0:1:d0::69:3001]:8333\n-[2a03:b0c0:2:d0::3ba:b001]:8333\n-[2a03:b0c0:2:d0::8ce:4001]:8333\n-[2a03:b0c0:3:d0::116:5001]:8333\n-[2a03:b0c0:3:d0::12a:1]:8333\n-[2a03:b0c0:3:d0::23fb:6001]:8333\n-[2a03:b0c0:3:d0::409:1001]:8333\n-[2a03:b0c0:3:d0::44b8:9001]:8333\n-[2a03:b0c0:3:d0::44b8:a001]:8333\n-[2a03:b0c0:3:d0::44b8:e001]:8333\n-[2a03:b0c0:3:d0::44b8:f001]:8333\n-[2a03:b0c0:3:d0::44b9:1]:8333\n-[2a03:b0c0:3:d0::44b9:1001]:8333\n-[2a03:b0c0:3:d0::44b9:2001]:8333\n-[2a03:b0c0:3:d0::44b9:4001]:8333\n-[2a03:b0c0:3:d0::5e48:d001]:8333\n-[2a03:ee40:0:294:250:56ff:fe8d:4ad7]:8333\n+[2a02:e00:fff0:23f::1]:8333\n+[2a02:f680:1:1100::5453]:8333\n+[2a03:1b20:1:f410:40::3e]:16463\n+[2a03:2260:11e:301::8]:8333\n+[2a03:2260:11e:302::3]:8333\n+[2a03:4000:6:416c::43]:8333\n [2a04:2180:1:c:f000::15]:8333\n-[2a07:440:2000:20::ca0:1817]:8333\n-[2a0a:c800:1:1::4]:8333\n-226eupdnaouu4h2v.onion:8333\n-23wdfqkzttmenvki.onion:8333\n-2bfsxzluysybysnr.onion:8333\n-2f4xg7m3g6vtxqcd.onion:8333\n-2i5i6kvxoggngz67.onion:8333\n-336lqgffb4tg5gpm.onion:8333\n-342ouaetvqzgepjx.onion:8333\n-3mutzniftca5w7ou.onion:8333\n-3qpbpt4gkp3dxn2r.onion:8333\n-3r44ddzjitznyahw.onion:8333\n-3xucqntxp5ddoaz5.onion:8333\n-44walnmvlhcqa3c2.onion:8333\n-4ehtdyvvzhbbo6c5.onion:8333\n-4jekbh7cdlfda3ve.onion:8333\n-4mewwo2bfxk6lg3f.onion:8333\n-53tsjt6zq3iasv5q.onion:8333\n-546esc6botbjfbxb.onion:8333\n-55zzzsk7iqv6p3ew.onion:8333\n-56stijc6kcgw6flk.onion:8333\n-5elzwcg4xysogalo.onion:8333\n-5f4ysqk4eed4jcvj.onion:8333\n-5k3oxus2laabmyip.onion:8333\n-5ptuzplawb3svsos.onion:8333\n-5rmpsrrdb3vpfgzh.onion:8333\n-5wnkqzjzjehmq7hn.onion:8333\n-5xxsqhppii22pges.onion:8333\n-5ygszbkbbauzjx7m.onion:8333\n-5z2she4d6fvrdnme.onion:8333\n-64qrhyxglyjjhkne.onion:8333\n-6kn76kajckqg22ao.onion:8333\n-6m2iqgnqjxh7ulyk.onion:8333\n-6wcfnbb3vmaw6cwa.onion:8333\n-6zynxbbupfmnvc3g.onion:8333\n-7sns7raurpmllybi.onion:8333\n-7whaszg22pdkvfck.onion:8333\n-a3a6plzycomx5gqw.onion:8333\n-acs7hylaadjkt7mk.onion:8333\n-agpwcvixadbinyet.onion:8333\n-ajqvsylg5xd5vs3y.onion:8333\n-aktfeaqkbnk52bfx.onion:8333\n-albsennsmbsgxls3.onion:8333\n-alruzrdz7xcek67f.onion:8333\n-am6aq3dluz3njcnt.onion:8333\n-aoefyxgnpgaiw2xg.onion:8333\n-ap2frg2maqxpmkkd.onion:8333\n-ap4zz4imxbdl6plr.onion:8333\n-apbbvhk32myudnyy.onion:8333\n-arlocvowxtnlbpo3.onion:8333\n-b5d6etfljm2lje5y.onion:8333\n-bdwvcwafzpssqckj.onion:8333\n-brwqezn6le54w2bb.onion:8333\n-bxxvkb7czrxtvz2c.onion:8333\n-c2tpqkaz4ihjzwgb.onion:8333\n-cgcv32rbbbjyyzow.onion:8333\n-ckkqplgkzof45h2y.onion:8333\n-cpyfqbs4fs3vnbpf.onion:8333\n-ctzuzxnvla5xvb7z.onion:8333\n-cw4iqvcdy67b5tpw.onion:8333\n-cyvpgt25274i5b7c.onion:8333\n-dmudsr7x7edvyglt.onion:8333\n-dsbn53f2dwphv5mx.onion:8333\n-dssqdj6pxnzkth6i.onion:8333\n-e3zbephvcqmzcqkr.onion:8333\n-e63i7c7qazbdtjma.onion:8333\n-eiuaj2qjvbn737ph.onion:8333\n-ep2mjzox3kvb6ax4.onion:8333\n-eyvfxeefr4eokefr.onion:8333\n-f3nfioh27j2xlfe5.onion:8333\n-f5ezxphghknfbrtg.onion:8333\n-faewczjuzs4wfxhv.onion:8333\n-fefisckqu5raqe3c.onion:8333\n-fgbss353vsvandn7.onion:8333\n-fnlkrowsyrfeub6s.onion:8333\n-fno4aakpl6sg6y47.onion:8333\n-fnpnjdk24pzgcplx.onion:8333\n-foe4ymjz4hjhowud.onion:8333\n-fql436nz7qdis3nk.onion:8333\n-frhfucww5vghf7cv.onion:8333\n-frrxefv5dir5hm7l.onion:8333\n-fuckerolyuv7ebla.onion:8333\n-fz6nsij6jiyuwlsc.onion:8333\n-g4qfwcu5wm7ze5lg.onion:8333\n-gb5ypqt63du3wfhn.onion:8333\n-gcydj5id3jcxybzr.onion:8333\n-gfvnnnwcddfzosav.onion:8333\n-golevvyaydsduuw2.onion:8333\n-gq4su6stjnosqu67.onion:8333\n-hb4oreglor5x3xoa.onion:8333\n-hbuair37dxnblurw.onion:8333\n-hda7fvzq3voh7mu6.onion:8333\n-hnvk3pgvieyixyc2.onion:8333\n-ifwxwunja4pgwydg.onion:8333\n-ijmbmziunbszzxtj.onion:8333\n-in7r5ieo7ogkxbne.onion:8333\n-inysvhakrulg6lts.onion:8333\n-iwrwbwss7lfalfg4.onion:8333\n-ja7dmgkri7fi47xk.onion:8333\n-jtksnokusbzms7wl.onion:8333\n-jwxyqhp42cmwhqf3.onion:8333\n-jxrfatqtcevzwywz.onion:8333\n-jy6mvzb2ntutiye6.onion:8333\n-jydquxzliej6dm24.onion:8333\n-k2gdzvryrx7v6ksw.onion:8333\n-kkdas3qebkosygu5.onion:8333\n+[2a04:3543:1000:2310:8492:b8ff:fe91:22e8]:8333\n+[2a05:6d40:b94e:d100:225:90ff:fe0d:cfc2]:8333\n+[2a05:fc87:4::6]:8333\n+[2a07:7200:ffff:c53f::e1:17]:8333\n+[2a0b:2ac0:1:0:d6ae:52ff:fe7b:741c]:8333\n+[2a0b:2ac0:1:0:d6ae:52ff:fe7b:88eb]:8333\n+25lhwv6jaqbtek5x.onion:8333\n+2empatdfea6vwete.onion:8333\n+2hpjn6ndxjafgoej.onion:8333\n+34aqcwnnuiqh234f.onion:8333\n+3frtobxxkgkhwjx7.onion:8333\n+3gxqibajrtysyp5o.onion:8333\n+3lf37sdzhpxh6fpv.onion:8333\n+3q5iydjrrutqjb2y.onion:8333\n+3qzrkpxduf44jqg5.onion:8333\n+3sami4tg4yhctjyc.onion:8333\n+3w77hrilg6q64opl.onion:8333\n+46xh2sbjsjiyl4fu.onion:8333\n+4ee44qsamrjpywju.onion:8333\n+4gwvtoppsaffaxg7.onion:8333\n+4haplrtkprjqhm2j.onion:8333\n+4u3y3zf2emynt6ui.onion:8333\n+4wx34hn3kybujklg.onion:8333\n+56czufbruq46sb2c.onion:8333\n+57dytizbai7o4kq7.onion:8333\n+5guaeulc7xm4g2mm.onion:8334\n+5mtvd4dk62ccdk4v.onion:8333\n+5nsfm4nqqzzprjrp.onion:8333\n+5pmjz6mmikyabaw5.onion:8333\n+6eurcxoqsa4qpiqq.onion:8333\n+6ivvkeseojsmpby4.onion:8333\n+6luc7owlbbaj52lr.onion:8333\n+6tlha6njtcuwpfa3.onion:8333\n+6ymgbvnn6d5nfmv4.onion:8333\n+6z5cyaswulhxcvhj.onion:8333\n+72y2n5rary4mywkz.onion:8333\n+7a354g25lnvry4ic.onion:8333\n+7b75ub5dapphemit.onion:8333\n+7xaqpr7exrtlnjbb.onion:8333\n+a64haiqsl76l25gv.onion:8333\n+ab7ftdfw6qhdx3re.onion:8333\n+aiupgbtdqpmwfpuz.onion:8333\n+akeg56rzkg7rsyyg.onion:8333\n+akinbo7tlegsnsxn.onion:8333\n+anem5aq4cr2zl7tz.onion:8333\n+at3w5qisczgguije.onion:8333\n+auo4zjsp44vydv6c.onion:8333\n+b6vrxhrrle7jxiua.onion:8333\n+bitcoinranliixsu.onion:8333\n+blcktrgve5vetjsk.onion:8333\n+bowg4prf63givea4.onion:8333\n+cj2nexmwocyy5unq.onion:8333\n+cjuek22p4vv4hzbu.onion:8333\n+cklaa2xdawrb75fg.onion:8333\n+coxiru76nnfw3vdj.onion:8333\n+cqwcyvvk5xnqv3yw.onion:8333\n+cwq2fuc54mlp3ojc.onion:8333\n+dganr7dffsacayml.onion:8333\n+djbsspmvlc6ijiis.onion:8333\n+dmfwov5ycnpvulij.onion:8333\n+dp2ekfbxubpdfrt4.onion:8333\n+dw2ufbybrgtzssts.onion:4333\n+dxv5u4xaeydpbrrp.onion:8333\n+edkmfeaapvavhtku.onion:8333\n+ejdoey3uay3cz7bs.onion:8333\n+eladlvwflaahxomr.onion:8333\n+ffhx6ttq7ejbodua.onion:8333\n+fqdzxl4kjboae35b.onion:8333\n+hbnnzteon75un65y.onion:8333\n+hcyxhownxdv7yybw.onion:8333\n+hdfcxll2tqs2l4jc.onion:8333\n+hdld2bxyvzy45ds4.onion:8333\n+hnqwmqikfmnkpdja.onion:8333\n+hvmjovdasoin43wn.onion:8333\n+hwzcbnenp6dsp6ow.onion:8333\n+hz26wamjlbd7arrl.onion:8333\n+i5ellwzndjuke242.onion:8333\n+iapvpwzs4gpbl6fk.onion:8885\n+if7fsvgyqwowxkcn.onion:8333\n+ilukzjazxlxrbuwy.onion:8333\n+ju5duo3r6p6diznc.onion:8333\n+k3i3suxlg4w27uas.onion:8333\n+k7omfveynnjg674e.onion:8333\n+ko37ti7twplktxqu.onion:8333\n kswfyurnglm65u7b.onion:8333\n-l2pruzr3mnhieuug.onion:8333\n-lgkgcd4brjmhrqna.onion:8333\n-lgkvbvro67jomosw.onion:8333\n-llljnatksfgtlhko.onion:8333\n-mdpt6w5sjwcnxtwy.onion:8333\n-mhjcepzc4gyadw2w.onion:8333\n-mn744hbioayn3ojs.onion:8333\n-mpakpgzu7umgu3ze.onion:8333\n-mvomwfdddqfqg3lq.onion:8333\n-mx5kdfxwowc3ymzg.onion:8333\n-n4m32zcp5hvomkt4.onion:8333\n-n73steqcmjz5hwni.onion:8333\n-nc2bgkhqohrmwbxr.onion:8333\n-nc6zlswwqqg7c5yz.onion:8333\n-nrrfwdmrm3imuebn.onion:8333\n-nrrmkgmulpgsbwlt.onion:8333\n-o2tku2dbsd6iumch.onion:8333\n-o72zyzrv77ea2bwu.onion:8333\n-ohgwa5y65z4eem7b.onion:8333\n-olvdu57g7rxwpcr4.onion:8333\n-onlzo775ogdpjn5x.onion:8333\n-otshttbd6v2k3jlz.onion:8333\n-owr5tm7ygw62z4vl.onion:8333\n-pcfhsdqzs6q63ryu.onion:8333\n-pffwqxvuldeq55zc.onion:8333\n-pgnz7kwc36rcucpu.onion:8333\n-ph4g7b4jsyuntvr4.onion:8333\n-pjghcivzkoersesd.onion:8333\n-pu7w3jfyrzp7sxsi.onion:8333\n-pxvkjp6sfb2f7foe.onion:8333\n-qaxm5spmx5d2k3up.onion:8333\n-qepth54daysmpy5y.onion:8333\n-qj6irqn2i73edff5.onion:8333\n-qjpejfzlwqqnzsol.onion:8333\n-qxe3bqjmrcepxpx4.onion:8333\n-rlonjm7ui6fdyz4h.onion:8333\n-rs635ss24ymwyqkw.onion:8333\n-sgiitogeoqslvkjv.onion:8333\n-spidernetimmmkth.onion:8333\n-tb7qlicrt6rdzxzd.onion:8333\n-thbjka62axzuwtnt.onion:8333\n-toguvy5upyuctudx.onion:8333\n-u7mpvxotmnqntyn5.onion:8333\n-uccmw67l4kgl646y.onion:8333\n-ueo6royc3775ioq7.onion:8333\n-ujsb2qcjk4t6234z.onion:8333\n-uub43p3artmornv5.onion:8333\n-uvb55mwvuy22mgm2.onion:8333\n-uzzyjgqlf47ackbr.onion:8333\n-v5fgr3fnz3nw663t.onion:8333\n-v5zs2sgjyr3glh6c.onion:8333\n-vk3qjdehyy4dwcxw.onion:8333\n-voy6xbvejox4xbax.onion:8333\n-vuiw75kgpcqke4mv.onion:8333\n-w3q47ucyajtfic76.onion:8333\n-wg6vwmbrzyyzapun.onion:8333\n-wgpfwxgy2dowienn.onion:8333\n-wjtmvsznvdclncau.onion:8333\n-xab45bpmmrl5g3by.onion:8333\n-xdlu3ujzieheouo7.onion:8333\n-xgykmaa2jjay7cfu.onion:8333\n-xnlu3tvakngy7tkp.onion:8333\n-xsn5icce45gs3qy7.onion:8333\n-ydonogjpjd3me45v.onion:8333\n-ykn7vof37bavxetd.onion:8333\n-yl525dwhvqis7ryc.onion:8333\n-yrbaccpbyge6xaba.onion:8333\n-yyuxafli7fqdizhq.onion:8333\n-z33nukt7ngik3cpe.onion:8333\n-zon2bbc2q2ihqt4c.onion:8333\n-zqjvtxskxonu4kzv.onion:8333\n+ldu2hbiorkvdymja.onion:8333\n+lftugyhf6vnouikf.onion:8333\n+ln3csnn6774nzgyn.onion:8333\n+lvh7k53s62frc6ro.onion:8333\n+lvvgedppmpigudhz.onion:8333\n+mbjkotfqcn5gnsrm.onion:8333\n+mk3bnep5ubou7i44.onion:8333\n+muhp42ytbwi6qf62.onion:8333\n+n5khsbd6whw7ooip.onion:8333\n+na6otugfitr7pnlv.onion:8333\n+nclrhbeertvin7cu.onion:8333\n+ndmbrjcvu2s6jcom.onion:8333\n+nf4iypnyjwfpcjm7.onion:8333\n+nkdw6ywzt3dqwxuf.onion:8333\n+nqmxpgrpuysullkq.onion:8333\n+ntml2aeumyglyjlk.onion:8333\n+o4sl5na6jeqgi3l6.onion:8333\n+opencubebqqx3buj.onion:8333\n+oudab5q7ruclifdv.onion:8333\n+ovbkvgdllk3xxeah.onion:8333\n+pg2jeh62fkq3byps.onion:8333\n+pgufebhe6mt7knqz.onion:8333\n+pkcgxf23ws3lwqvq.onion:8333\n+po3j2hfkmf7sh36o.onion:8333\n+qdtau72ifwauot6b.onion:8333\n+qidnrqy2ozz3nzqq.onion:8333\n+qpebweackyztorrm.onion:8333\n+qsl3x63225alx4bt.onion:8333\n+readybit5veyche6.onion:8333\n+rjw6vpw5ffoncxuh.onion:8333\n+s2epxac7ovy36ruj.onion:8333\n+srkgyv5edn2pa7il.onion:8333\n+sv5oitfnsmfoc3wu.onion:8333\n+tdlpmqnpfqehqj7c.onion:8333\n+ttx7ddwltrixannm.onion:8333\n+uftbw4zi5wlzcwho.onion:8333\n+uoailgcebjuws47e.onion:8333\n+uqvucqhplwqbjrsb.onion:8333\n+uz3pvdhie3372vxw.onion:8333\n+v2x7gpj3shxfnl25.onion:8333\n+vdhrg3k2akmf6kek.onion:8333\n+vov46htt6gyixdmb.onion:8333\n+vrfs5jwtfzj2ss6n.onion:8333\n+vwpcfguewxhky4iy.onion:8333\n+wg3b3qxcwcrraq2o.onion:8333\n+wgeecjm4w4ko66f7.onion:8333\n+wmxc6ask4a5xyaxh.onion:8333\n+wqrafn4zal3bbbhr.onion:8333\n+xagzqmjgwgdvl2di.onion:8333\n+xhi5x5qc44elydk4.onion:8333\n+xk6bjlmgvwojvozj.onion:8333\n+xmgr7fsmp7bgburk.onion:8333\n+xocvz3dzyu2kzu6f.onion:8333\n+xv7pt6etwxiygss6.onion:8444\n+xz563swdjd7yqymb.onion:8333\n+yumx7asj7feoozic.onion:8333\n+yzmyolvp55rydnsm.onion:8333\n+z3forfpyjyxxgfr5.onion:8333\n+z5x2wes6mhbml2t5.onion:8333\n+zmaddsqelw2oywfb.onion:8444\n+zqlojwtc4lsurgie.onion:8333\n+zvwc7ad4m2dvc74x.onion:8333"
      },
      {
        "sha": "573a71a675312d3ce110bc60b788964116d9a0e4",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,7 +2,7 @@\n \n Utilities to generate test vectors for the data-driven Bitcoin tests.\n \n-Usage: \n+Usage:\n \n     PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_keys_valid.json\n     PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_keys_invalid.json"
      },
      {
        "sha": "9ec8663fbae7bd1a7e9acb83668c009ddbc5ab81",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -16,7 +16,7 @@\n def tree_sha512sum(commit='HEAD'):\n     \"\"\"Calculate the Tree-sha512 for the commit.\n \n-    This is copied from github-merge.py.\"\"\"\n+    This is copied from github-merge.py. See https://github.com/bitcoin-core/bitcoin-maintainer-tools.\"\"\"\n \n     # request metadata for entire tree, recursively\n     files = []"
      },
      {
        "sha": "cec99777ff1ef6a0ec1b4f94aeeb76d952b1bc1c",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,5 +1,9 @@\n .NOTPARALLEL :\n \n+# Pattern rule to print variables, e.g. make print-top_srcdir\n+print-%:\n+\t@echo $* = $($*)\n+\n SOURCES_PATH ?= $(BASEDIR)/sources\n WORK_PATH = $(BASEDIR)/work\n BASE_CACHE ?= $(BASEDIR)/built\n@@ -54,6 +58,11 @@ full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))\n host_os:=$(findstring linux,$(full_host_os))\n host_os+=$(findstring darwin,$(full_host_os))\n host_os+=$(findstring mingw32,$(full_host_os))\n+\n+ifeq (android,$(findstring android,$(full_host_os)))\n+host_os:=android\n+endif\n+\n host_os:=$(strip $(host_os))\n ifeq ($(host_os),)\n host_os=$(full_host_os)\n@@ -101,10 +110,6 @@ rapidcheck_packages_$(RAPIDCHECK) = $(rapidcheck_packages)\n packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n \n-ifneq ($(qt_packages_),)\n-native_packages += $(qt_native_packages)\n-endif\n-\n ifneq ($(zmq_packages_),)\n packages += $(zmq_packages)\n endif"
      },
      {
        "sha": "e5e2a8a653bc0ff9ec2024c9d340deda995134c2",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 24,
        "deletions": 3,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -12,22 +12,30 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-A prefix will be generated that's suitable for plugging into Bitcoin's\n-configure. In the above example, a dir named x86_64-w64-mingw32 will be\n+**Bitcoin's configure script by default will ignore the depends output.** In\n+order for it to pick up libraries, tools, and settings from the depends build,\n+you must point it at the appropriate `--prefix` directory generated by the\n+build. In the above example, a prefix dir named x86_64-w64-mingw32 will be\n created. To use it for Bitcoin:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n \n Common `host-platform-triplets` for cross compilation are:\n \n+- `i686-pc-linux-gnu` for Linux 32 bit\n+- `x86_64-pc-linux-gnu` for x86 Linux\n - `x86_64-w64-mingw32` for Win64\n - `x86_64-apple-darwin14` for macOS\n - `arm-linux-gnueabihf` for Linux ARM 32 bit\n - `aarch64-linux-gnu` for Linux ARM 64 bit\n - `riscv32-linux-gnu` for Linux RISC-V 32 bit\n - `riscv64-linux-gnu` for Linux RISC-V 64 bit\n+- `armv7a-linux-android` for Android ARM 32 bit\n+- `aarch64-linux-android` for Android ARM 64 bit\n+- `i686-linux-android` for Android x86 32 bit\n+- `x86_64-linux-android` for Android x86 64 bit\n \n-No other options are needed, the paths are automatically configured.\n+The paths are automatically configured and no other options are needed unless targeting [Android](#Android).\n \n ### Install the required dependencies: Ubuntu & Debian\n \n@@ -86,6 +94,19 @@ options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n     download-win: run 'make download-win' to fetch all sources needed for win builds\n     download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n \n+\n+### Android\n+\n+Before proceeding with an Android build one needs to get the [Android SDK](https://developer.android.com/studio) and use the \"SDK Manager\" tool to download the NDK and one or more \"Platform packages\" (these are Android versions and have a corresponding API level).\n+In order to build `ANDROID_API_LEVEL` (API level corresponding to the Android version targeted, e.g. Android 9.0 Pie is 28 and its \"Platform package\" needs to be available) and `ANDROID_TOOLCHAIN_BIN` (path to toolchain binaries depending on the platform the build is being performed on) need to be set.\n+\n+API levels from 24 to 29 have been tested to work.\n+\n+If the build includes Qt, environment variables `ANDROID_SDK` and `ANDROID_NDK` need to be set as well but can otherwise be omitted.\n+This is an example command for a default build with no disabled dependencies:\n+\n+    ANDROID_SDK=/home/user/Android/Sdk ANDROID_NDK=/home/user/Android/Sdk/ndk-bundle make HOST=aarch64-linux-android ANDROID_API_LEVEL=28 ANDROID_TOOLCHAIN_BIN=/home/user/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin\n+\n ### Other documentation\n \n - [description.md](description.md): General description of the depends system"
      },
      {
        "sha": "eb587fca890e939d86d996ef34355db213bde4d8",
        "filename": "depends/builders/darwin.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -10,8 +10,8 @@ build_darwin_SHA256SUM=shasum -a 256\n build_darwin_DOWNLOAD=curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n \n #darwin host on darwin builder. overrides darwin host preferences.\n-darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n-darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++\n+darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(shell xcrun --show-sdk-path)\n+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++ --sysroot $(shell xcrun --show-sdk-path)\n darwin_AR:=$(shell xcrun -f ar)\n darwin_RANLIB:=$(shell xcrun -f ranlib)\n darwin_STRIP:=$(shell xcrun -f strip)"
      },
      {
        "sha": "7f9ebbe31097dff5e381dceffadbf64502ab3d46",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 269,
        "deletions": 80,
        "changes": 349,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2018 Free Software Foundation, Inc.\n+#   Copyright 1992-2019 Free Software Foundation, Inc.\n \n-timestamp='2018-07-06'\n+timestamp='2019-09-10'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2018 Free Software Foundation, Inc.\n+Copyright 1992-2019 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -84,8 +84,6 @@ if test $# != 0; then\n   exit 1\n fi\n \n-trap 'exit 1' 1 2 15\n-\n # CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n # compiler to aid in system detection is discouraged as it requires\n # temporary files to be created and, as you can see below, it is a\n@@ -96,34 +94,38 @@ trap 'exit 1' 1 2 15\n \n # Portable tmp directory creation inspired by the Autoconf team.\n \n-set_cc_for_build='\n-trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n-trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n-: ${TMPDIR=/tmp} ;\n- { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n- { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp 2>/dev/null) ; } ||\n- { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n- { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n-dummy=$tmp/dummy ;\n-tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n-case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n- ,,)    echo \"int x;\" > \"$dummy.c\" ;\n-\tfor c in cc gcc c89 c99 ; do\n-\t  if ($c -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n-\t     CC_FOR_BUILD=\"$c\"; break ;\n-\t  fi ;\n-\tdone ;\n-\tif test x\"$CC_FOR_BUILD\" = x ; then\n-\t  CC_FOR_BUILD=no_compiler_found ;\n-\tfi\n-\t;;\n- ,,*)   CC_FOR_BUILD=$CC ;;\n- ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n-esac ; set_cc_for_build= ;'\n+tmp=\n+# shellcheck disable=SC2172\n+trap 'test -z \"$tmp\" || rm -fr \"$tmp\"' 0 1 2 13 15\n+\n+set_cc_for_build() {\n+    : \"${TMPDIR=/tmp}\"\n+    # shellcheck disable=SC2039\n+    { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+\t{ test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir \"$tmp\" 2>/dev/null) ; } ||\n+\t{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir \"$tmp\" 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n+\t{ echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; }\n+    dummy=$tmp/dummy\n+    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n+\t,,)    echo \"int x;\" > \"$dummy.c\"\n+\t       for driver in cc gcc c89 c99 ; do\n+\t\t   if ($driver -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n+\t\t       CC_FOR_BUILD=\"$driver\"\n+\t\t       break\n+\t\t   fi\n+\t       done\n+\t       if test x\"$CC_FOR_BUILD\" = x ; then\n+\t\t   CC_FOR_BUILD=no_compiler_found\n+\t       fi\n+\t       ;;\n+\t,,*)   CC_FOR_BUILD=$CC ;;\n+\t,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n+    esac\n+}\n \n # This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n # (ghazi@noc.rutgers.edu 1994-08-24)\n-if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+if test -f /.attbin/uname ; then\n \tPATH=$PATH:/.attbin ; export PATH\n fi\n \n@@ -138,7 +140,7 @@ Linux|GNU|GNU/*)\n \t# We could probably try harder.\n \tLIBC=gnu\n \n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tcat <<-EOF > \"$dummy.c\"\n \t#include <features.h>\n \t#if defined(__UCLIBC__)\n@@ -199,7 +201,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t\tos=netbsdelf\n \t\t;;\n \t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n-\t\teval \"$set_cc_for_build\"\n+\t\tset_cc_for_build\n \t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t\t\t| grep -q __ELF__\n \t\tthen\n@@ -260,6 +262,9 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n     *:SolidBSD:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-solidbsd\"$UNAME_RELEASE\"\n \texit ;;\n+    *:OS108:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-os108_\"$UNAME_RELEASE\"\n+\texit ;;\n     macppc:MirBSD:*:*)\n \techo powerpc-unknown-mirbsd\"$UNAME_RELEASE\"\n \texit ;;\n@@ -269,12 +274,15 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n     *:Sortix:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-sortix\n \texit ;;\n+    *:Twizzler:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-twizzler\n+\texit ;;\n     *:Redox:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-redox\n \texit ;;\n     mips:OSF1:*.*)\n-        echo mips-dec-osf1\n-        exit ;;\n+\techo mips-dec-osf1\n+\texit ;;\n     alpha:OSF1:*:*)\n \tcase $UNAME_RELEASE in\n \t*4.0)\n@@ -389,7 +397,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo i386-pc-auroraux\"$UNAME_RELEASE\"\n \texit ;;\n     i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tSUN_ARCH=i386\n \t# If there is a compiler, see if it is configured for 64-bit objects.\n \t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n@@ -482,7 +490,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo clipper-intergraph-clix\"$UNAME_RELEASE\"\n \texit ;;\n     mips:*:*:UMIPS | mips:*:*:RISCos)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n #ifdef __cplusplus\n #include <stdio.h>  /* for printf() prototype */\n@@ -579,7 +587,7 @@ EOF\n \texit ;;\n     *:AIX:2:3)\n \tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n-\t\teval \"$set_cc_for_build\"\n+\t\tset_cc_for_build\n \t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n \t\t#include <sys/systemcfg.h>\n \n@@ -660,7 +668,7 @@ EOF\n \t\t    esac\n \t\tfi\n \t\tif [ \"$HP_ARCH\" = \"\" ]; then\n-\t\t    eval \"$set_cc_for_build\"\n+\t\t    set_cc_for_build\n \t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n \n \t\t#define _HPUX_SOURCE\n@@ -700,7 +708,7 @@ EOF\n \tesac\n \tif [ \"$HP_ARCH\" = hppa2.0w ]\n \tthen\n-\t    eval \"$set_cc_for_build\"\n+\t    set_cc_for_build\n \n \t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n \t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n@@ -726,7 +734,7 @@ EOF\n \techo ia64-hp-hpux\"$HPUX_REV\"\n \texit ;;\n     3050*:HI-UX:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#include <unistd.h>\n \tint\n@@ -840,6 +848,17 @@ EOF\n     *:BSD/OS:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-bsdi\"$UNAME_RELEASE\"\n \texit ;;\n+    arm:FreeBSD:*:*)\n+\tUNAME_PROCESSOR=`uname -p`\n+\tset_cc_for_build\n+\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t    | grep -q __ARM_PCS_VFP\n+\tthen\n+\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabi\n+\telse\n+\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabihf\n+\tfi\n+\texit ;;\n     *:FreeBSD:*:*)\n \tUNAME_PROCESSOR=`/usr/bin/uname -p`\n \tcase \"$UNAME_PROCESSOR\" in\n@@ -881,7 +900,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-pc-uwin\n \texit ;;\n     amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n-\techo x86_64-unknown-cygwin\n+\techo x86_64-pc-cygwin\n \texit ;;\n     prep*:SunOS:5.*:*)\n \techo powerpcle-unknown-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n@@ -922,7 +941,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     arm*:Linux:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t    | grep -q __ARM_EABI__\n \tthen\n@@ -971,23 +990,51 @@ EOF\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     mips:Linux:*:* | mips64:Linux:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n+\tIS_GLIBC=0\n+\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#undef CPU\n-\t#undef ${UNAME_MACHINE}\n-\t#undef ${UNAME_MACHINE}el\n+\t#undef mips\n+\t#undef mipsel\n+\t#undef mips64\n+\t#undef mips64el\n+\t#if ${IS_GLIBC} && defined(_ABI64)\n+\tLIBCABI=gnuabi64\n+\t#else\n+\t#if ${IS_GLIBC} && defined(_ABIN32)\n+\tLIBCABI=gnuabin32\n+\t#else\n+\tLIBCABI=${LIBC}\n+\t#endif\n+\t#endif\n+\n+\t#if ${IS_GLIBC} && defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n+\tCPU=mipsisa64r6\n+\t#else\n+\t#if ${IS_GLIBC} && !defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n+\tCPU=mipsisa32r6\n+\t#else\n+\t#if defined(__mips64)\n+\tCPU=mips64\n+\t#else\n+\tCPU=mips\n+\t#endif\n+\t#endif\n+\t#endif\n+\n \t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n-\tCPU=${UNAME_MACHINE}el\n+\tMIPS_ENDIAN=el\n \t#else\n \t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n-\tCPU=${UNAME_MACHINE}\n+\tMIPS_ENDIAN=\n \t#else\n-\tCPU=\n+\tMIPS_ENDIAN=\n \t#endif\n \t#endif\n EOF\n-\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU'`\"\n-\ttest \"x$CPU\" != x && { echo \"$CPU-unknown-linux-$LIBC\"; exit; }\n+\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\"\n+\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n \t;;\n     mips64el:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n@@ -1100,7 +1147,7 @@ EOF\n \t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n \t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n \tesac\n-\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}{$UNAME_VERSION}\"\n+\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\"\n \texit ;;\n     i*86:*:3.2:*)\n \tif test -f /usr/options/cb.name; then\n@@ -1284,38 +1331,39 @@ EOF\n \techo \"$UNAME_MACHINE\"-apple-rhapsody\"$UNAME_RELEASE\"\n \texit ;;\n     *:Darwin:*:*)\n-\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n-\teval \"$set_cc_for_build\"\n-\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n-\t    UNAME_PROCESSOR=powerpc\n+\tUNAME_PROCESSOR=`uname -p`\n+\tcase $UNAME_PROCESSOR in\n+\t    unknown) UNAME_PROCESSOR=powerpc ;;\n+\tesac\n+\tif command -v xcode-select > /dev/null 2> /dev/null && \\\n+\t\t! xcode-select --print-path > /dev/null 2> /dev/null ; then\n+\t    # Avoid executing cc if there is no toolchain installed as\n+\t    # cc will be a stub that puts up a graphical alert\n+\t    # prompting the user to install developer tools.\n+\t    CC_FOR_BUILD=no_compiler_found\n+\telse\n+\t    set_cc_for_build\n \tfi\n-\tif test \"`echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'`\" -le 10 ; then\n-\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n-\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\t       grep IS_64BIT_ARCH >/dev/null\n-\t\tthen\n-\t\t    case $UNAME_PROCESSOR in\n-\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n-\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n-\t\t    esac\n-\t\tfi\n-\t\t# On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n-\t\tif (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n-\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\t       grep IS_PPC >/dev/null\n-\t\tthen\n-\t\t    UNAME_PROCESSOR=powerpc\n-\t\tfi\n+\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t   grep IS_64BIT_ARCH >/dev/null\n+\t    then\n+\t\tcase $UNAME_PROCESSOR in\n+\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n+\t\t    powerpc) UNAME_PROCESSOR=powerpc64 ;;\n+\t\tesac\n+\t    fi\n+\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n+\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n+\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t   grep IS_PPC >/dev/null\n+\t    then\n+\t\tUNAME_PROCESSOR=powerpc\n \t    fi\n \telif test \"$UNAME_PROCESSOR\" = i386 ; then\n-\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n-\t    # that puts up a graphical alert prompting to install\n-\t    # developer tools.  Any system running Mac OS X 10.7 or\n-\t    # later (Darwin 11 and later) is required to have a 64-bit\n-\t    # processor. This is not true of the ARM version of Darwin\n-\t    # that Apple uses in portable devices.\n-\t    UNAME_PROCESSOR=x86_64\n+\t    # uname -m returns i386 or x86_64\n+\t    UNAME_PROCESSOR=$UNAME_MACHINE\n \tfi\n \techo \"$UNAME_PROCESSOR\"-apple-darwin\"$UNAME_RELEASE\"\n \texit ;;\n@@ -1358,6 +1406,7 @@ EOF\n \t# \"uname -m\" is not consistent, so use $cputype instead. 386\n \t# is converted to i386 for consistency with other x86\n \t# operating systems.\n+\t# shellcheck disable=SC2154\n \tif test \"$cputype\" = 386; then\n \t    UNAME_MACHINE=i386\n \telse\n@@ -1414,8 +1463,148 @@ EOF\n     amd64:Isilon\\ OneFS:*:*)\n \techo x86_64-unknown-onefs\n \texit ;;\n+    *:Unleashed:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-unleashed\"$UNAME_RELEASE\"\n+\texit ;;\n esac\n \n+# No uname command or uname output not recognized.\n+set_cc_for_build\n+cat > \"$dummy.c\" <<EOF\n+#ifdef _SEQUENT_\n+#include <sys/types.h>\n+#include <sys/utsname.h>\n+#endif\n+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n+#if defined (vax) || defined (__vax) || defined (__vax__) || defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n+#include <signal.h>\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+#include <sys/utsname.h>\n+#endif\n+#endif\n+#endif\n+main ()\n+{\n+#if defined (sony)\n+#if defined (MIPSEB)\n+  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n+     I don't know....  */\n+  printf (\"mips-sony-bsd\\n\"); exit (0);\n+#else\n+#include <sys/param.h>\n+  printf (\"m68k-sony-newsos%s\\n\",\n+#ifdef NEWSOS4\n+  \"4\"\n+#else\n+  \"\"\n+#endif\n+  ); exit (0);\n+#endif\n+#endif\n+\n+#if defined (NeXT)\n+#if !defined (__ARCHITECTURE__)\n+#define __ARCHITECTURE__ \"m68k\"\n+#endif\n+  int version;\n+  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n+  if (version < 4)\n+    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n+  else\n+    printf (\"%s-next-openstep%d\\n\", __ARCHITECTURE__, version);\n+  exit (0);\n+#endif\n+\n+#if defined (MULTIMAX) || defined (n16)\n+#if defined (UMAXV)\n+  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n+#else\n+#if defined (CMU)\n+  printf (\"ns32k-encore-mach\\n\"); exit (0);\n+#else\n+  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined (__386BSD__)\n+  printf (\"i386-pc-bsd\\n\"); exit (0);\n+#endif\n+\n+#if defined (sequent)\n+#if defined (i386)\n+  printf (\"i386-sequent-dynix\\n\"); exit (0);\n+#endif\n+#if defined (ns32000)\n+  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n+#endif\n+#endif\n+\n+#if defined (_SEQUENT_)\n+  struct utsname un;\n+\n+  uname(&un);\n+  if (strncmp(un.version, \"V2\", 2) == 0) {\n+    printf (\"i386-sequent-ptx2\\n\"); exit (0);\n+  }\n+  if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n+    printf (\"i386-sequent-ptx1\\n\"); exit (0);\n+  }\n+  printf (\"i386-sequent-ptx\\n\"); exit (0);\n+#endif\n+\n+#if defined (vax)\n+#if !defined (ultrix)\n+#include <sys/param.h>\n+#if defined (BSD)\n+#if BSD == 43\n+  printf (\"vax-dec-bsd4.3\\n\"); exit (0);\n+#else\n+#if BSD == 199006\n+  printf (\"vax-dec-bsd4.3reno\\n\"); exit (0);\n+#else\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n+#endif\n+#endif\n+#else\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n+#endif\n+#else\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+  struct utsname un;\n+  uname (&un);\n+  printf (\"vax-dec-ultrix%s\\n\", un.release); exit (0);\n+#else\n+  printf (\"vax-dec-ultrix\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n+#if defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+  struct utsname *un;\n+  uname (&un);\n+  printf (\"mips-dec-ultrix%s\\n\", un.release); exit (0);\n+#else\n+  printf (\"mips-dec-ultrix\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined (alliant) && defined (i860)\n+  printf (\"i860-alliant-bsd\\n\"); exit (0);\n+#endif\n+\n+  exit (1);\n+}\n+EOF\n+\n+$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null && SYSTEM_NAME=`$dummy` &&\n+\t{ echo \"$SYSTEM_NAME\"; exit; }\n+\n+# Apollos put the system type in the environment.\n+test -d /usr/apollo && { echo \"$ISP-apollo-$SYSTYPE\"; exit; }\n+\n echo \"$0: unable to guess system type\" >&2\n \n case \"$UNAME_MACHINE:$UNAME_SYSTEM\" in"
      },
      {
        "sha": "dee568bc254ec81b24c684824a47e70e444bccdd",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -16,10 +16,6 @@ fi\n if test -z $with_qt_bindir && test -z \"@no_qt@\"; then\n   with_qt_bindir=$depends_prefix/native/bin\n fi\n-if test -z $with_protoc_bindir && test -z \"@no_qt@\"; then\n-  with_protoc_bindir=$depends_prefix/native/bin\n-fi\n-\n \n if test -z $enable_wallet && test -n \"@no_wallet@\"; then\n   enable_wallet=no"
      },
      {
        "sha": "a318a46868500fbeea993e693e32701041ffad1b",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 565,
        "deletions": 580,
        "changes": 1145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n-#   Copyright 1992-2018 Free Software Foundation, Inc.\n+#   Copyright 1992-2019 Free Software Foundation, Inc.\n \n-timestamp='2018-07-03'\n+timestamp='2019-06-30'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -67,7 +67,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright 1992-2018 Free Software Foundation, Inc.\n+Copyright 1992-2019 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -89,7 +89,7 @@ while test $# -gt 0 ; do\n     - )\t# Use stdin as input.\n        break ;;\n     -* )\n-       echo \"$me: invalid option $1$help\"\n+       echo \"$me: invalid option $1$help\" >&2\n        exit 1 ;;\n \n     *local*)\n@@ -111,7 +111,8 @@ case $# in\n esac\n \n # Split fields of configuration type\n-IFS=\"-\" read -r field1 field2 field3 field4 <<EOF\n+# shellcheck disable=SC2162\n+IFS=\"-\" read field1 field2 field3 field4 <<EOF\n $1\n EOF\n \n@@ -149,29 +150,39 @@ case $1 in\n \t\tesac\n \t\t;;\n \t*-*)\n-\t\t# Second component is usually, but not always the OS\n-\t\tcase $field2 in\n-\t\t\t# Prevent following clause from handling this valid os\n-\t\t\tsun*os*)\n-\t\t\t\tbasic_machine=$field1\n-\t\t\t\tos=$field2\n-\t\t\t\t;;\n-\t\t\t# Manufacturers\n-\t\t\tdec* | mips* | sequent* | encore* | pc532* | sgi* | sony* \\\n-\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n-\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n-\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* | hitachi* \\\n-\t\t\t| c[123]* | convex* | sun | crds | omron* | dg | ultra | tti* \\\n-\t\t\t| harris | dolphin | highlevel | gould | cbm | ns | masscomp \\\n-\t\t\t| apple | axis | knuth | cray | microblaze* \\\n-\t\t\t| sim | cisco | oki | wec | wrs | winbond)\n-\t\t\t\tbasic_machine=$field1-$field2\n+\t\t# A lone config we happen to match not fitting any pattern\n+\t\tcase $field1-$field2 in\n+\t\t\tdecstation-3100)\n+\t\t\t\tbasic_machine=mips-dec\n \t\t\t\tos=\n \t\t\t\t;;\n-\t\t\t*)\n-\t\t\t\tbasic_machine=$field1\n-\t\t\t\tos=$field2\n-\t\t\t\t;;\n+\t\t\t*-*)\n+\t\t\t\t# Second component is usually, but not always the OS\n+\t\t\t\tcase $field2 in\n+\t\t\t\t\t# Prevent following clause from handling this valid os\n+\t\t\t\t\tsun*os*)\n+\t\t\t\t\t\tbasic_machine=$field1\n+\t\t\t\t\t\tos=$field2\n+\t\t\t\t\t\t;;\n+\t\t\t\t\t# Manufacturers\n+\t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n+\t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n+\t\t\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n+\t\t\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* \\\n+\t\t\t\t\t| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \\\n+\t\t\t\t\t| ultra | tti* | harris | dolphin | highlevel | gould \\\n+\t\t\t\t\t| cbm | ns | masscomp | apple | axis | knuth | cray \\\n+\t\t\t\t\t| microblaze* | sim | cisco \\\n+\t\t\t\t\t| oki | wec | wrs | winbond)\n+\t\t\t\t\t\tbasic_machine=$field1-$field2\n+\t\t\t\t\t\tos=\n+\t\t\t\t\t\t;;\n+\t\t\t\t\t*)\n+\t\t\t\t\t\tbasic_machine=$field1\n+\t\t\t\t\t\tos=$field2\n+\t\t\t\t\t\t;;\n+\t\t\t\tesac\n+\t\t\t;;\n \t\tesac\n \t\t;;\n \t*)\n@@ -190,6 +201,14 @@ case $1 in\n \t\t\t\tbasic_machine=m68010-adobe\n \t\t\t\tos=scout\n \t\t\t\t;;\n+\t\t\talliant)\n+\t\t\t\tbasic_machine=fx80-alliant\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\taltos | altos3068)\n+\t\t\t\tbasic_machine=m68k-altos\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tam29k)\n \t\t\t\tbasic_machine=a29k-none\n \t\t\t\tos=bsd\n@@ -198,6 +217,10 @@ case $1 in\n \t\t\t\tbasic_machine=580-amdahl\n \t\t\t\tos=sysv\n \t\t\t\t;;\n+\t\t\tamiga)\n+\t\t\t\tbasic_machine=m68k-unknown\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tamigaos | amigados)\n \t\t\t\tbasic_machine=m68k-unknown\n \t\t\t\tos=amigaos\n@@ -234,13 +257,41 @@ case $1 in\n \t\t\t\tbasic_machine=arm-unknown\n \t\t\t\tos=cegcc\n \t\t\t\t;;\n+\t\t\tconvex-c1)\n+\t\t\t\tbasic_machine=c1-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c2)\n+\t\t\t\tbasic_machine=c2-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c32)\n+\t\t\t\tbasic_machine=c32-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c34)\n+\t\t\t\tbasic_machine=c34-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c38)\n+\t\t\t\tbasic_machine=c38-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n \t\t\tcray)\n \t\t\t\tbasic_machine=j90-cray\n \t\t\t\tos=unicos\n \t\t\t\t;;\n-\t\t\tcraynv)\n-\t\t\t\tbasic_machine=craynv-cray\n-\t\t\t\tos=unicosmp\n+\t\t\tcrds | unos)\n+\t\t\t\tbasic_machine=m68k-crds\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\tda30)\n+\t\t\t\tbasic_machine=m68k-da30\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\tdecstation | pmax | pmin | dec3100 | decstatn)\n+\t\t\t\tbasic_machine=mips-dec\n+\t\t\t\tos=\n \t\t\t\t;;\n \t\t\tdelta88)\n \t\t\t\tbasic_machine=m88k-motorola\n@@ -286,13 +337,13 @@ case $1 in\n \t\t\t\tbasic_machine=m88k-harris\n \t\t\t\tos=sysv3\n \t\t\t\t;;\n-\t\t\thp300bsd)\n+\t\t\thp300 | hp300hpux)\n \t\t\t\tbasic_machine=m68k-hp\n-\t\t\t\tos=bsd\n+\t\t\t\tos=hpux\n \t\t\t\t;;\n-\t\t\thp300hpux)\n+\t\t\thp300bsd)\n \t\t\t\tbasic_machine=m68k-hp\n-\t\t\t\tos=hpux\n+\t\t\t\tos=bsd\n \t\t\t\t;;\n \t\t\thppaosf)\n \t\t\t\tbasic_machine=hppa1.1-hp\n@@ -306,10 +357,6 @@ case $1 in\n \t\t\t\tbasic_machine=i386-mach\n \t\t\t\tos=mach\n \t\t\t\t;;\n-\t\t\tvsta)\n-\t\t\t\tbasic_machine=i386-unknown\n-\t\t\t\tos=vsta\n-\t\t\t\t;;\n \t\t\tisi68 | isi)\n \t\t\t\tbasic_machine=m68k-isi\n \t\t\t\tos=sysv\n@@ -371,7 +418,7 @@ case $1 in\n \t\t\t\tos=sysv4\n \t\t\t\t;;\n \t\t\tnetbsd386)\n-\t\t\t\tbasic_machine=i386-unknown\n+\t\t\t\tbasic_machine=i386-pc\n \t\t\t\tos=netbsd\n \t\t\t\t;;\n \t\t\tnetwinder)\n@@ -454,14 +501,26 @@ case $1 in\n \t\t\t\tbasic_machine=mips-sei\n \t\t\t\tos=seiux\n \t\t\t\t;;\n+\t\t\tsequent)\n+\t\t\t\tbasic_machine=i386-sequent\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsps7)\n \t\t\t\tbasic_machine=m68k-bull\n \t\t\t\tos=sysv2\n \t\t\t\t;;\n+\t\t\tst2000)\n+\t\t\t\tbasic_machine=m68k-tandem\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tstratus)\n \t\t\t\tbasic_machine=i860-stratus\n \t\t\t\tos=sysv4\n \t\t\t\t;;\n+\t\t\tsun2)\n+\t\t\t\tbasic_machine=m68000-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun2os3)\n \t\t\t\tbasic_machine=m68000-sun\n \t\t\t\tos=sunos3\n@@ -470,6 +529,10 @@ case $1 in\n \t\t\t\tbasic_machine=m68000-sun\n \t\t\t\tos=sunos4\n \t\t\t\t;;\n+\t\t\tsun3)\n+\t\t\t\tbasic_machine=m68k-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun3os3)\n \t\t\t\tbasic_machine=m68k-sun\n \t\t\t\tos=sunos3\n@@ -478,6 +541,10 @@ case $1 in\n \t\t\t\tbasic_machine=m68k-sun\n \t\t\t\tos=sunos4\n \t\t\t\t;;\n+\t\t\tsun4)\n+\t\t\t\tbasic_machine=sparc-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun4os3)\n \t\t\t\tbasic_machine=sparc-sun\n \t\t\t\tos=sunos3\n@@ -490,6 +557,10 @@ case $1 in\n \t\t\t\tbasic_machine=sparc-sun\n \t\t\t\tos=solaris2\n \t\t\t\t;;\n+\t\t\tsun386 | sun386i | roadrunner)\n+\t\t\t\tbasic_machine=i386-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsv1)\n \t\t\t\tbasic_machine=sv1-cray\n \t\t\t\tos=unicos\n@@ -534,6 +605,10 @@ case $1 in\n \t\t\t\tbasic_machine=vax-dec\n \t\t\t\tos=vms\n \t\t\t\t;;\n+\t\t\tvsta)\n+\t\t\t\tbasic_machine=i386-pc\n+\t\t\t\tos=vsta\n+\t\t\t\t;;\n \t\t\tvxworks960)\n \t\t\t\tbasic_machine=i960-wrs\n \t\t\t\tos=vxworks\n@@ -562,417 +637,162 @@ case $1 in\n \t\t;;\n esac\n \n-# Decode aliases for certain CPU-COMPANY combinations.\n+# Decode 1-component or ad-hoc basic machines\n case $basic_machine in\n-\t# Recognize the basic CPU types without company name.\n-\t# Some are omitted here because they have special meanings below.\n-\t1750a | 580 \\\n-\t| a29k \\\n-\t| aarch64 | aarch64_be \\\n-\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n-\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n-\t| am33_2.0 \\\n-\t| arc | arceb \\\n-\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv6m | armv[78][arm] \\\n-\t| avr | avr32 \\\n-\t| ba \\\n-\t| be32 | be64 \\\n-\t| bfin \\\n-\t| c4x | c8051 | clipper | csky \\\n-\t| d10v | d30v | dlx | dsp16xx \\\n-\t| e2k | epiphany \\\n-\t| fido | fr30 | frv | ft32 \\\n-\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n-\t| hexagon \\\n-\t| i370 | i860 | i960 | ia16 | ia64 \\\n-\t| ip2k | iq2000 \\\n-\t| k1om \\\n-\t| le32 | le64 \\\n-\t| lm32 \\\n-\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n-\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n-\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n-\t| mips16 \\\n-\t| mips64 | mips64el \\\n-\t| mips64octeon | mips64octeonel \\\n-\t| mips64orion | mips64orionel \\\n-\t| mips64r5900 | mips64r5900el \\\n-\t| mips64vr | mips64vrel \\\n-\t| mips64vr4100 | mips64vr4100el \\\n-\t| mips64vr4300 | mips64vr4300el \\\n-\t| mips64vr5000 | mips64vr5000el \\\n-\t| mips64vr5900 | mips64vr5900el \\\n-\t| mipsisa32 | mipsisa32el \\\n-\t| mipsisa32r2 | mipsisa32r2el \\\n-\t| mipsisa32r6 | mipsisa32r6el \\\n-\t| mipsisa64 | mipsisa64el \\\n-\t| mipsisa64r2 | mipsisa64r2el \\\n-\t| mipsisa64r6 | mipsisa64r6el \\\n-\t| mipsisa64sb1 | mipsisa64sb1el \\\n-\t| mipsisa64sr71k | mipsisa64sr71kel \\\n-\t| mipsr5900 | mipsr5900el \\\n-\t| mipstx39 | mipstx39el \\\n-\t| mn10200 | mn10300 \\\n-\t| moxie \\\n-\t| mt \\\n-\t| msp430 \\\n-\t| nds32 | nds32le | nds32be \\\n-\t| nfp \\\n-\t| nios | nios2 | nios2eb | nios2el \\\n-\t| ns16k | ns32k \\\n-\t| open8 | or1k | or1knd | or32 \\\n-\t| pdp10 | pj | pjl \\\n-\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n-\t| pru \\\n-\t| pyramid \\\n-\t| riscv | riscv32 | riscv64 \\\n-\t| rl78 | rx \\\n-\t| score \\\n-\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n-\t| sh64 | sh64le \\\n-\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n-\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n-\t| spu \\\n-\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n-\t| ubicom32 \\\n-\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n-\t| visium \\\n-\t| wasm32 \\\n-\t| x86 | xc16x | xstormy16 | xtensa \\\n-\t| z8k | z80)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n-\tc54x)\n-\t\tbasic_machine=tic54x-unknown\n-\t\t;;\n-\tc55x)\n-\t\tbasic_machine=tic55x-unknown\n-\t\t;;\n-\tc6x)\n-\t\tbasic_machine=tic6x-unknown\n-\t\t;;\n-\tleon|leon[3-9])\n-\t\tbasic_machine=sparc-$basic_machine\n-\t\t;;\n-\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=${os:-none}\n-\t\t;;\n-\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65)\n+\t# Here we handle the default manufacturer of certain CPU types.  It is in\n+\t# some cases the only manufacturer, in others, it is the most popular.\n+\tw89k)\n+\t\tcpu=hppa1.1\n+\t\tvendor=winbond\n \t\t;;\n-\tm9s12z | m68hcs12z | hcs12z | s12z)\n-\t\tbasic_machine=s12z-unknown\n-\t\tos=${os:-none}\n+\top50n)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n \t\t;;\n-\tms1)\n-\t\tbasic_machine=mt-unknown\n+\top60c)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n \t\t;;\n-\tstrongarm | thumb | xscale)\n-\t\tbasic_machine=arm-unknown\n+\tibm*)\n+\t\tcpu=i370\n+\t\tvendor=ibm\n \t\t;;\n-\txgate)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=${os:-none}\n+\torion105)\n+\t\tcpu=clipper\n+\t\tvendor=highlevel\n \t\t;;\n-\txscaleeb)\n-\t\tbasic_machine=armeb-unknown\n+\tmac | mpw | mac-mpw)\n+\t\tcpu=m68k\n+\t\tvendor=apple\n \t\t;;\n-\n-\txscaleel)\n-\t\tbasic_machine=armel-unknown\n+\tpmac | pmac-mpw)\n+\t\tcpu=powerpc\n+\t\tvendor=apple\n \t\t;;\n \n-\t# We use `pc' rather than `unknown'\n-\t# because (1) that's what they normally are, and\n-\t# (2) the word \"unknown\" tends to confuse beginning users.\n-\ti*86 | x86_64)\n-\t  basic_machine=$basic_machine-pc\n-\t  ;;\n-\t# Recognize the basic CPU types with company name.\n-\t580-* \\\n-\t| a29k-* \\\n-\t| aarch64-* | aarch64_be-* \\\n-\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n-\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n-\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n-\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n-\t| avr-* | avr32-* \\\n-\t| ba-* \\\n-\t| be32-* | be64-* \\\n-\t| bfin-* | bs2000-* \\\n-\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n-\t| c8051-* | clipper-* | craynv-* | csky-* | cydra-* \\\n-\t| d10v-* | d30v-* | dlx-* \\\n-\t| e2k-* | elxsi-* \\\n-\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n-\t| h8300-* | h8500-* \\\n-\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n-\t| hexagon-* \\\n-\t| i*86-* | i860-* | i960-* | ia16-* | ia64-* \\\n-\t| ip2k-* | iq2000-* \\\n-\t| k1om-* \\\n-\t| le32-* | le64-* \\\n-\t| lm32-* \\\n-\t| m32c-* | m32r-* | m32rle-* \\\n-\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n-\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n-\t| microblaze-* | microblazeel-* \\\n-\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n-\t| mips16-* \\\n-\t| mips64-* | mips64el-* \\\n-\t| mips64octeon-* | mips64octeonel-* \\\n-\t| mips64orion-* | mips64orionel-* \\\n-\t| mips64r5900-* | mips64r5900el-* \\\n-\t| mips64vr-* | mips64vrel-* \\\n-\t| mips64vr4100-* | mips64vr4100el-* \\\n-\t| mips64vr4300-* | mips64vr4300el-* \\\n-\t| mips64vr5000-* | mips64vr5000el-* \\\n-\t| mips64vr5900-* | mips64vr5900el-* \\\n-\t| mipsisa32-* | mipsisa32el-* \\\n-\t| mipsisa32r2-* | mipsisa32r2el-* \\\n-\t| mipsisa32r6-* | mipsisa32r6el-* \\\n-\t| mipsisa64-* | mipsisa64el-* \\\n-\t| mipsisa64r2-* | mipsisa64r2el-* \\\n-\t| mipsisa64r6-* | mipsisa64r6el-* \\\n-\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n-\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n-\t| mipsr5900-* | mipsr5900el-* \\\n-\t| mipstx39-* | mipstx39el-* \\\n-\t| mmix-* \\\n-\t| mt-* \\\n-\t| msp430-* \\\n-\t| nds32-* | nds32le-* | nds32be-* \\\n-\t| nfp-* \\\n-\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n-\t| none-* | np1-* | ns16k-* | ns32k-* \\\n-\t| open8-* \\\n-\t| or1k*-* \\\n-\t| orion-* \\\n-\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n-\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n-\t| pru-* \\\n-\t| pyramid-* \\\n-\t| riscv-* | riscv32-* | riscv64-* \\\n-\t| rl78-* | romp-* | rs6000-* | rx-* \\\n-\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n-\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n-\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n-\t| sparclite-* \\\n-\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n-\t| tahoe-* \\\n-\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n-\t| tile*-* \\\n-\t| tron-* \\\n-\t| ubicom32-* \\\n-\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n-\t| vax-* \\\n-\t| visium-* \\\n-\t| wasm32-* \\\n-\t| we32k-* \\\n-\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n-\t| xstormy16-* | xtensa*-* \\\n-\t| ymp-* \\\n-\t| z8k-* | z80-*)\n-\t\t;;\n-\t# Recognize the basic CPU types without company name, with glob match.\n-\txtensa*)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n \t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n-\t\tbasic_machine=m68000-att\n+\t\tcpu=m68000\n+\t\tvendor=att\n \t\t;;\n \t3b*)\n-\t\tbasic_machine=we32k-att\n-\t\t;;\n-\tabacus)\n-\t\tbasic_machine=abacus-unknown\n-\t\t;;\n-\talliant | fx80)\n-\t\tbasic_machine=fx80-alliant\n-\t\t;;\n-\taltos | altos3068)\n-\t\tbasic_machine=m68k-altos\n-\t\t;;\n-\tamd64)\n-\t\tbasic_machine=x86_64-pc\n-\t\t;;\n-\tamd64-*)\n-\t\tbasic_machine=x86_64-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tamiga | amiga-*)\n-\t\tbasic_machine=m68k-unknown\n-\t\t;;\n-\tasmjs)\n-\t\tbasic_machine=asmjs-unknown\n-\t\t;;\n-\tblackfin-*)\n-\t\tbasic_machine=bfin-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n+\t\tcpu=we32k\n+\t\tvendor=att\n \t\t;;\n \tbluegene*)\n-\t\tbasic_machine=powerpc-ibm\n+\t\tcpu=powerpc\n+\t\tvendor=ibm\n \t\tos=cnk\n \t\t;;\n-\tc54x-*)\n-\t\tbasic_machine=tic54x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc55x-*)\n-\t\tbasic_machine=tic55x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc6x-*)\n-\t\tbasic_machine=tic6x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc90)\n-\t\tbasic_machine=c90-cray\n-\t\tos=${os:-unicos}\n-\t\t;;\n-\tconvex-c1)\n-\t\tbasic_machine=c1-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c2)\n-\t\tbasic_machine=c2-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c32)\n-\t\tbasic_machine=c32-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c34)\n-\t\tbasic_machine=c34-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c38)\n-\t\tbasic_machine=c38-convex\n-\t\tos=bsd\n-\t\t;;\n-\tcr16 | cr16-*)\n-\t\tbasic_machine=cr16-unknown\n-\t\tos=${os:-elf}\n-\t\t;;\n-\tcrds | unos)\n-\t\tbasic_machine=m68k-crds\n-\t\t;;\n-\tcrisv32 | crisv32-* | etraxfs*)\n-\t\tbasic_machine=crisv32-axis\n-\t\t;;\n-\tcris | cris-* | etrax*)\n-\t\tbasic_machine=cris-axis\n-\t\t;;\n-\tcrx)\n-\t\tbasic_machine=crx-unknown\n-\t\tos=${os:-elf}\n-\t\t;;\n-\tda30 | da30-*)\n-\t\tbasic_machine=m68k-da30\n-\t\t;;\n-\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n-\t\tbasic_machine=mips-dec\n-\t\t;;\n \tdecsystem10* | dec10*)\n-\t\tbasic_machine=pdp10-dec\n+\t\tcpu=pdp10\n+\t\tvendor=dec\n \t\tos=tops10\n \t\t;;\n \tdecsystem20* | dec20*)\n-\t\tbasic_machine=pdp10-dec\n+\t\tcpu=pdp10\n+\t\tvendor=dec\n \t\tos=tops20\n \t\t;;\n \tdelta | 3300 | motorola-3300 | motorola-delta \\\n \t      | 3300-motorola | delta-motorola)\n-\t\tbasic_machine=m68k-motorola\n-\t\t;;\n-\tdpx20 | dpx20-*)\n-\t\tbasic_machine=rs6000-bull\n-\t\tos=${os:-bosx}\n+\t\tcpu=m68k\n+\t\tvendor=motorola\n \t\t;;\n \tdpx2*)\n-\t\tbasic_machine=m68k-bull\n+\t\tcpu=m68k\n+\t\tvendor=bull\n \t\tos=sysv3\n \t\t;;\n-\te500v[12])\n-\t\tbasic_machine=powerpc-unknown\n-\t\tos=$os\"spe\"\n-\t\t;;\n-\te500v[12]-*)\n-\t\tbasic_machine=powerpc-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=$os\"spe\"\n-\t\t;;\n \tencore | umax | mmax)\n-\t\tbasic_machine=ns32k-encore\n+\t\tcpu=ns32k\n+\t\tvendor=encore\n \t\t;;\n \telxsi)\n-\t\tbasic_machine=elxsi-elxsi\n+\t\tcpu=elxsi\n+\t\tvendor=elxsi\n \t\tos=${os:-bsd}\n \t\t;;\n \tfx2800)\n-\t\tbasic_machine=i860-alliant\n+\t\tcpu=i860\n+\t\tvendor=alliant\n \t\t;;\n \tgenix)\n-\t\tbasic_machine=ns32k-ns\n+\t\tcpu=ns32k\n+\t\tvendor=ns\n \t\t;;\n \th3050r* | hiux*)\n-\t\tbasic_machine=hppa1.1-hitachi\n+\t\tcpu=hppa1.1\n+\t\tvendor=hitachi\n \t\tos=hiuxwe2\n \t\t;;\n-\thp300-*)\n-\t\tbasic_machine=m68k-hp\n-\t\t;;\n \thp3k9[0-9][0-9] | hp9[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \thp9k2[0-9][0-9] | hp9k31[0-9])\n-\t\tbasic_machine=m68000-hp\n+\t\tcpu=m68000\n+\t\tvendor=hp\n \t\t;;\n \thp9k3[2-9][0-9])\n-\t\tbasic_machine=m68k-hp\n+\t\tcpu=m68k\n+\t\tvendor=hp\n \t\t;;\n \thp9k6[0-9][0-9] | hp6[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \thp9k7[0-79][0-9] | hp7[0-79][0-9])\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k78[0-9] | hp78[0-9])\n \t\t# FIXME: really hppa2.0-hp\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n \t\t# FIXME: really hppa2.0-hp\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[0-9][13679] | hp8[0-9][13679])\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[0-9][0-9] | hp8[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n-\t\t;;\n-\ti370-ibm* | ibm*)\n-\t\tbasic_machine=i370-ibm\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \ti*86v32)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv32\n \t\t;;\n \ti*86v4*)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv4\n \t\t;;\n \ti*86v)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv\n \t\t;;\n \ti*86sol2)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=solaris2\n \t\t;;\n \tj90 | j90-cray)\n-\t\tbasic_machine=j90-cray\n+\t\tcpu=j90\n+\t\tvendor=cray\n \t\tos=${os:-unicos}\n \t\t;;\n \tiris | iris4d)\n-\t\tbasic_machine=mips-sgi\n+\t\tcpu=mips\n+\t\tvendor=sgi\n \t\tcase $os in\n \t\t    irix*)\n \t\t\t;;\n@@ -981,40 +801,27 @@ case $basic_machine in\n \t\t\t;;\n \t\tesac\n \t\t;;\n-\tleon-*|leon[3-9]-*)\n-\t\tbasic_machine=sparc-`echo \"$basic_machine\" | sed 's/-.*//'`\n-\t\t;;\n-\tm68knommu-*)\n-\t\tbasic_machine=m68k-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n-\t\t;;\n-\tmicroblaze*)\n-\t\tbasic_machine=microblaze-xilinx\n-\t\t;;\n \tminiframe)\n-\t\tbasic_machine=m68000-convergent\n+\t\tcpu=m68000\n+\t\tvendor=convergent\n \t\t;;\n \t*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)\n-\t\tbasic_machine=m68k-atari\n+\t\tcpu=m68k\n+\t\tvendor=atari\n \t\tos=mint\n \t\t;;\n-\tmips3*-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/mips3/mips64/'`\n-\t\t;;\n-\tmips3*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/mips3/mips64/'`-unknown\n-\t\t;;\n-\tms1-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/ms1-/mt-/'`\n-\t\t;;\n \tnews-3600 | risc-news)\n-\t\tbasic_machine=mips-sony\n+\t\tcpu=mips\n+\t\tvendor=sony\n \t\tos=newsos\n \t\t;;\n \tnext | m*-next)\n-\t\tbasic_machine=m68k-next\n+\t\tcpu=m68k\n+\t\tvendor=next\n \t\tcase $os in\n-\t\t    nextstep* )\n+\t\t    openstep*)\n+\t\t        ;;\n+\t\t    nextstep*)\n \t\t\t;;\n \t\t    ns2*)\n \t\t      os=nextstep2\n@@ -1025,260 +832,442 @@ case $basic_machine in\n \t\tesac\n \t\t;;\n \tnp1)\n-\t\tbasic_machine=np1-gould\n+\t\tcpu=np1\n+\t\tvendor=gould\n \t\t;;\n-\tneo-tandem)\n-\t\tbasic_machine=neo-tandem\n+\top50n-* | op60c-*)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n+\t\tos=proelf\n \t\t;;\n-\tnse-tandem)\n-\t\tbasic_machine=nse-tandem\n+\tpa-hitachi)\n+\t\tcpu=hppa1.1\n+\t\tvendor=hitachi\n+\t\tos=hiuxwe2\n \t\t;;\n-\tnsr-tandem)\n-\t\tbasic_machine=nsr-tandem\n+\tpbd)\n+\t\tcpu=sparc\n+\t\tvendor=tti\n \t\t;;\n-\tnsv-tandem)\n-\t\tbasic_machine=nsv-tandem\n+\tpbb)\n+\t\tcpu=m68k\n+\t\tvendor=tti\n \t\t;;\n-\tnsx-tandem)\n-\t\tbasic_machine=nsx-tandem\n+\tpc532)\n+\t\tcpu=ns32k\n+\t\tvendor=pc532\n \t\t;;\n-\top50n-* | op60c-*)\n-\t\tbasic_machine=hppa1.1-oki\n-\t\tos=proelf\n+\tpn)\n+\t\tcpu=pn\n+\t\tvendor=gould\n \t\t;;\n-\topenrisc | openrisc-*)\n-\t\tbasic_machine=or32-unknown\n+\tpower)\n+\t\tcpu=power\n+\t\tvendor=ibm\n \t\t;;\n-\tpa-hitachi)\n-\t\tbasic_machine=hppa1.1-hitachi\n-\t\tos=hiuxwe2\n+\tps2)\n+\t\tcpu=i386\n+\t\tvendor=ibm\n \t\t;;\n-\tparisc-*)\n-\t\tbasic_machine=hppa-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n+\trm[46]00)\n+\t\tcpu=mips\n+\t\tvendor=siemens\n \t\t;;\n-\tpbd)\n-\t\tbasic_machine=sparc-tti\n+\trtpc | rtpc-*)\n+\t\tcpu=romp\n+\t\tvendor=ibm\n \t\t;;\n-\tpbb)\n-\t\tbasic_machine=m68k-tti\n+\tsde)\n+\t\tcpu=mipsisa32\n+\t\tvendor=sde\n+\t\tos=${os:-elf}\n \t\t;;\n-\tpc532 | pc532-*)\n-\t\tbasic_machine=ns32k-pc532\n+\tsimso-wrs)\n+\t\tcpu=sparclite\n+\t\tvendor=wrs\n+\t\tos=vxworks\n \t\t;;\n-\tpc98)\n-\t\tbasic_machine=i386-pc\n+\ttower | tower-32)\n+\t\tcpu=m68k\n+\t\tvendor=ncr\n \t\t;;\n-\tpc98-*)\n-\t\tbasic_machine=i386-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tvpp*|vx|vx-*)\n+\t\tcpu=f301\n+\t\tvendor=fujitsu\n \t\t;;\n-\tpentium | p5 | k5 | k6 | nexgen | viac3)\n-\t\tbasic_machine=i586-pc\n+\tw65)\n+\t\tcpu=w65\n+\t\tvendor=wdc\n \t\t;;\n-\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n-\t\tbasic_machine=i686-pc\n+\tw89k-*)\n+\t\tcpu=hppa1.1\n+\t\tvendor=winbond\n+\t\tos=proelf\n \t\t;;\n-\tpentiumii | pentium2 | pentiumiii | pentium3)\n-\t\tbasic_machine=i686-pc\n+\tnone)\n+\t\tcpu=none\n+\t\tvendor=none\n \t\t;;\n-\tpentium4)\n-\t\tbasic_machine=i786-pc\n+\tleon|leon[3-9])\n+\t\tcpu=sparc\n+\t\tvendor=$basic_machine\n \t\t;;\n-\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n-\t\tbasic_machine=i586-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tleon-*|leon[3-9]-*)\n+\t\tcpu=sparc\n+\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n \t\t;;\n-\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n-\t\tbasic_machine=i686-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\n+\t*-*)\n+\t\t# shellcheck disable=SC2162\n+\t\tIFS=\"-\" read cpu vendor <<EOF\n+$basic_machine\n+EOF\n \t\t;;\n-\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n-\t\tbasic_machine=i686-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti*86 | x86_64)\n+\t\tcpu=$basic_machine\n+\t\tvendor=pc\n \t\t;;\n-\tpentium4-*)\n-\t\tbasic_machine=i786-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t# These rules are duplicated from below for sake of the special case above;\n+\t# i.e. things that normalized to x86 arches should also default to \"pc\"\n+\tpc98)\n+\t\tcpu=i386\n+\t\tvendor=pc\n \t\t;;\n-\tpn)\n-\t\tbasic_machine=pn-gould\n+\tx64 | amd64)\n+\t\tcpu=x86_64\n+\t\tvendor=pc\n+\t\t;;\n+\t# Recognize the basic CPU types without company name.\n+\t*)\n+\t\tcpu=$basic_machine\n+\t\tvendor=unknown\n+\t\t;;\n+esac\n+\n+unset -v basic_machine\n+\n+# Decode basic machines in the full and proper CPU-Company form.\n+case $cpu-$vendor in\n+\t# Here we handle the default manufacturer of certain CPU types in canonical form. It is in\n+\t# some cases the only manufacturer, in others, it is the most popular.\n+\tcraynv-unknown)\n+\t\tvendor=cray\n+\t\tos=${os:-unicosmp}\n+\t\t;;\n+\tc90-unknown | c90-cray)\n+\t\tvendor=cray\n+\t\tos=${os:-unicos}\n \t\t;;\n-\tpower)\tbasic_machine=power-ibm\n+\tfx80-unknown)\n+\t\tvendor=alliant\n \t\t;;\n-\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n+\tromp-unknown)\n+\t\tvendor=ibm\n \t\t;;\n-\tppc-* | ppcbe-*)\n-\t\tbasic_machine=powerpc-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tmmix-unknown)\n+\t\tvendor=knuth\n \t\t;;\n-\tppcle | powerpclittle)\n-\t\tbasic_machine=powerpcle-unknown\n+\tmicroblaze-unknown | microblazeel-unknown)\n+\t\tvendor=xilinx\n \t\t;;\n-\tppcle-* | powerpclittle-*)\n-\t\tbasic_machine=powerpcle-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\trs6000-unknown)\n+\t\tvendor=ibm\n \t\t;;\n-\tppc64)\tbasic_machine=powerpc64-unknown\n+\tvax-unknown)\n+\t\tvendor=dec\n \t\t;;\n-\tppc64-*) basic_machine=powerpc64-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tpdp11-unknown)\n+\t\tvendor=dec\n \t\t;;\n-\tppc64le | powerpc64little)\n-\t\tbasic_machine=powerpc64le-unknown\n+\twe32k-unknown)\n+\t\tvendor=att\n \t\t;;\n-\tppc64le-* | powerpc64little-*)\n-\t\tbasic_machine=powerpc64le-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tcydra-unknown)\n+\t\tvendor=cydrome\n \t\t;;\n-\tps2)\n-\t\tbasic_machine=i386-ibm\n+\ti370-ibm*)\n+\t\tvendor=ibm\n \t\t;;\n-\trm[46]00)\n-\t\tbasic_machine=mips-siemens\n+\torion-unknown)\n+\t\tvendor=highlevel\n \t\t;;\n-\trtpc | rtpc-*)\n-\t\tbasic_machine=romp-ibm\n+\txps-unknown | xps100-unknown)\n+\t\tcpu=xps100\n+\t\tvendor=honeywell\n \t\t;;\n-\ts390 | s390-*)\n-\t\tbasic_machine=s390-ibm\n+\n+\t# Here we normalize CPU types with a missing or matching vendor\n+\tdpx20-unknown | dpx20-bull)\n+\t\tcpu=rs6000\n+\t\tvendor=bull\n+\t\tos=${os:-bosx}\n \t\t;;\n-\ts390x | s390x-*)\n-\t\tbasic_machine=s390x-ibm\n+\n+\t# Here we normalize CPU types irrespective of the vendor\n+\tamd64-*)\n+\t\tcpu=x86_64\n \t\t;;\n-\tsb1)\n-\t\tbasic_machine=mipsisa64sb1-unknown\n+\tblackfin-*)\n+\t\tcpu=bfin\n+\t\tos=linux\n \t\t;;\n-\tsb1el)\n-\t\tbasic_machine=mipsisa64sb1el-unknown\n+\tc54x-*)\n+\t\tcpu=tic54x\n \t\t;;\n-\tsde)\n-\t\tbasic_machine=mipsisa32-sde\n-\t\tos=${os:-elf}\n+\tc55x-*)\n+\t\tcpu=tic55x\n \t\t;;\n-\tsequent)\n-\t\tbasic_machine=i386-sequent\n+\tc6x-*)\n+\t\tcpu=tic6x\n \t\t;;\n-\tsh5el)\n-\t\tbasic_machine=sh5le-unknown\n+\te500v[12]-*)\n+\t\tcpu=powerpc\n+\t\tos=$os\"spe\"\n \t\t;;\n-\tsimso-wrs)\n-\t\tbasic_machine=sparclite-wrs\n-\t\tos=vxworks\n+\tmips3*-*)\n+\t\tcpu=mips64\n \t\t;;\n-\tspur)\n-\t\tbasic_machine=spur-unknown\n+\tms1-*)\n+\t\tcpu=mt\n \t\t;;\n-\tst2000)\n-\t\tbasic_machine=m68k-tandem\n+\tm68knommu-*)\n+\t\tcpu=m68k\n+\t\tos=linux\n \t\t;;\n-\tstrongarm-* | thumb-*)\n-\t\tbasic_machine=arm-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tm9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)\n+\t\tcpu=s12z\n \t\t;;\n-\tsun2)\n-\t\tbasic_machine=m68000-sun\n+\topenrisc-*)\n+\t\tcpu=or32\n \t\t;;\n-\tsun3 | sun3-*)\n-\t\tbasic_machine=m68k-sun\n+\tparisc-*)\n+\t\tcpu=hppa\n+\t\tos=linux\n \t\t;;\n-\tsun4)\n-\t\tbasic_machine=sparc-sun\n+\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n+\t\tcpu=i586\n \t\t;;\n-\tsun386 | sun386i | roadrunner)\n-\t\tbasic_machine=i386-sun\n+\tpentiumpro-* | p6-* | 6x86-* | athlon-* | athalon_*-*)\n+\t\tcpu=i686\n \t\t;;\n-\ttile*)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=linux-gnu\n+\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n+\t\tcpu=i686\n \t\t;;\n-\ttx39)\n-\t\tbasic_machine=mipstx39-unknown\n+\tpentium4-*)\n+\t\tcpu=i786\n \t\t;;\n-\ttx39el)\n-\t\tbasic_machine=mipstx39el-unknown\n+\tpc98-*)\n+\t\tcpu=i386\n \t\t;;\n-\ttower | tower-32)\n-\t\tbasic_machine=m68k-ncr\n+\tppc-* | ppcbe-*)\n+\t\tcpu=powerpc\n \t\t;;\n-\tvpp*|vx|vx-*)\n-\t\tbasic_machine=f301-fujitsu\n+\tppcle-* | powerpclittle-*)\n+\t\tcpu=powerpcle\n \t\t;;\n-\tw65*)\n-\t\tbasic_machine=w65-wdc\n-\t\tos=none\n+\tppc64-*)\n+\t\tcpu=powerpc64\n \t\t;;\n-\tw89k-*)\n-\t\tbasic_machine=hppa1.1-winbond\n-\t\tos=proelf\n+\tppc64le-* | powerpc64little-*)\n+\t\tcpu=powerpc64le\n \t\t;;\n-\tx64)\n-\t\tbasic_machine=x86_64-pc\n+\tsb1-*)\n+\t\tcpu=mipsisa64sb1\n \t\t;;\n-\txps | xps100)\n-\t\tbasic_machine=xps100-honeywell\n+\tsb1el-*)\n+\t\tcpu=mipsisa64sb1el\n \t\t;;\n-\txscale-* | xscalee[bl]-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/^xscale/arm/'`\n+\tsh5e[lb]-*)\n+\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n \t\t;;\n-\tnone)\n-\t\tbasic_machine=none-none\n-\t\tos=${os:-none}\n+\tspur-*)\n+\t\tcpu=spur\n \t\t;;\n-\n-# Here we handle the default manufacturer of certain CPU types.  It is in\n-# some cases the only manufacturer, in others, it is the most popular.\n-\tw89k)\n-\t\tbasic_machine=hppa1.1-winbond\n+\tstrongarm-* | thumb-*)\n+\t\tcpu=arm\n \t\t;;\n-\top50n)\n-\t\tbasic_machine=hppa1.1-oki\n+\ttx39-*)\n+\t\tcpu=mipstx39\n \t\t;;\n-\top60c)\n-\t\tbasic_machine=hppa1.1-oki\n+\ttx39el-*)\n+\t\tcpu=mipstx39el\n \t\t;;\n-\tromp)\n-\t\tbasic_machine=romp-ibm\n+\tx64-*)\n+\t\tcpu=x86_64\n \t\t;;\n-\tmmix)\n-\t\tbasic_machine=mmix-knuth\n+\txscale-* | xscalee[bl]-*)\n+\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n \t\t;;\n-\trs6000)\n-\t\tbasic_machine=rs6000-ibm\n+\n+\t# Recognize the canonical CPU Types that limit and/or modify the\n+\t# company names they are paired with.\n+\tcr16-*)\n+\t\tos=${os:-elf}\n \t\t;;\n-\tvax)\n-\t\tbasic_machine=vax-dec\n+\tcrisv32-* | etraxfs*-*)\n+\t\tcpu=crisv32\n+\t\tvendor=axis\n \t\t;;\n-\tpdp11)\n-\t\tbasic_machine=pdp11-dec\n+\tcris-* | etrax*-*)\n+\t\tcpu=cris\n+\t\tvendor=axis\n \t\t;;\n-\twe32k)\n-\t\tbasic_machine=we32k-att\n+\tcrx-*)\n+\t\tos=${os:-elf}\n \t\t;;\n-\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n-\t\tbasic_machine=sh-unknown\n+\tneo-tandem)\n+\t\tcpu=neo\n+\t\tvendor=tandem\n \t\t;;\n-\tcydra)\n-\t\tbasic_machine=cydra-cydrome\n+\tnse-tandem)\n+\t\tcpu=nse\n+\t\tvendor=tandem\n \t\t;;\n-\torion)\n-\t\tbasic_machine=orion-highlevel\n+\tnsr-tandem)\n+\t\tcpu=nsr\n+\t\tvendor=tandem\n \t\t;;\n-\torion105)\n-\t\tbasic_machine=clipper-highlevel\n+\tnsv-tandem)\n+\t\tcpu=nsv\n+\t\tvendor=tandem\n \t\t;;\n-\tmac | mpw | mac-mpw)\n-\t\tbasic_machine=m68k-apple\n+\tnsx-tandem)\n+\t\tcpu=nsx\n+\t\tvendor=tandem\n \t\t;;\n-\tpmac | pmac-mpw)\n-\t\tbasic_machine=powerpc-apple\n+\ts390-*)\n+\t\tcpu=s390\n+\t\tvendor=ibm\n \t\t;;\n-\t*-unknown)\n-\t\t# Make sure to match an already-canonicalized machine name.\n+\ts390x-*)\n+\t\tcpu=s390x\n+\t\tvendor=ibm\n \t\t;;\n+\ttile*-*)\n+\t\tos=${os:-linux-gnu}\n+\t\t;;\n+\n \t*)\n-\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$basic_machine\"\\' not recognized 1>&2\n-\t\texit 1\n+\t\t# Recognize the canonical CPU types that are allowed with any\n+\t\t# company name.\n+\t\tcase $cpu in\n+\t\t\t1750a | 580 \\\n+\t\t\t| a29k \\\n+\t\t\t| aarch64 | aarch64_be \\\n+\t\t\t| abacus \\\n+\t\t\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \\\n+\t\t\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \\\n+\t\t\t| alphapca5[67] | alpha64pca5[67] \\\n+\t\t\t| am33_2.0 \\\n+\t\t\t| amdgcn \\\n+\t\t\t| arc | arceb \\\n+\t\t\t| arm  | arm[lb]e | arme[lb] | armv* \\\n+\t\t\t| avr | avr32 \\\n+\t\t\t| asmjs \\\n+\t\t\t| ba \\\n+\t\t\t| be32 | be64 \\\n+\t\t\t| bfin | bpf | bs2000 \\\n+\t\t\t| c[123]* | c30 | [cjt]90 | c4x \\\n+\t\t\t| c8051 | clipper | craynv | csky | cydra \\\n+\t\t\t| d10v | d30v | dlx | dsp16xx \\\n+\t\t\t| e2k | elxsi | epiphany \\\n+\t\t\t| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \\\n+\t\t\t| h8300 | h8500 \\\n+\t\t\t| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n+\t\t\t| hexagon \\\n+\t\t\t| i370 | i*86 | i860 | i960 | ia16 | ia64 \\\n+\t\t\t| ip2k | iq2000 \\\n+\t\t\t| k1om \\\n+\t\t\t| le32 | le64 \\\n+\t\t\t| lm32 \\\n+\t\t\t| m32c | m32r | m32rle \\\n+\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \\\n+\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \\\n+\t\t\t| m88110 | m88k | maxq | mb | mcore | mep | metag \\\n+\t\t\t| microblaze | microblazeel \\\n+\t\t\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n+\t\t\t| mips16 \\\n+\t\t\t| mips64 | mips64eb | mips64el \\\n+\t\t\t| mips64octeon | mips64octeonel \\\n+\t\t\t| mips64orion | mips64orionel \\\n+\t\t\t| mips64r5900 | mips64r5900el \\\n+\t\t\t| mips64vr | mips64vrel \\\n+\t\t\t| mips64vr4100 | mips64vr4100el \\\n+\t\t\t| mips64vr4300 | mips64vr4300el \\\n+\t\t\t| mips64vr5000 | mips64vr5000el \\\n+\t\t\t| mips64vr5900 | mips64vr5900el \\\n+\t\t\t| mipsisa32 | mipsisa32el \\\n+\t\t\t| mipsisa32r2 | mipsisa32r2el \\\n+\t\t\t| mipsisa32r6 | mipsisa32r6el \\\n+\t\t\t| mipsisa64 | mipsisa64el \\\n+\t\t\t| mipsisa64r2 | mipsisa64r2el \\\n+\t\t\t| mipsisa64r6 | mipsisa64r6el \\\n+\t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n+\t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n+\t\t\t| mipsr5900 | mipsr5900el \\\n+\t\t\t| mipstx39 | mipstx39el \\\n+\t\t\t| mmix \\\n+\t\t\t| mn10200 | mn10300 \\\n+\t\t\t| moxie \\\n+\t\t\t| mt \\\n+\t\t\t| msp430 \\\n+\t\t\t| nds32 | nds32le | nds32be \\\n+\t\t\t| nfp \\\n+\t\t\t| nios | nios2 | nios2eb | nios2el \\\n+\t\t\t| none | np1 | ns16k | ns32k | nvptx \\\n+\t\t\t| open8 \\\n+\t\t\t| or1k* \\\n+\t\t\t| or32 \\\n+\t\t\t| orion \\\n+\t\t\t| picochip \\\n+\t\t\t| pdp10 | pdp11 | pj | pjl | pn | power \\\n+\t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n+\t\t\t| pru \\\n+\t\t\t| pyramid \\\n+\t\t\t| riscv | riscv32 | riscv64 \\\n+\t\t\t| rl78 | romp | rs6000 | rx \\\n+\t\t\t| score \\\n+\t\t\t| sh | shl \\\n+\t\t\t| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n+\t\t\t| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \\\n+\t\t\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \\\n+\t\t\t| sparclite \\\n+\t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n+\t\t\t| spu \\\n+\t\t\t| tahoe \\\n+\t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n+\t\t\t| tron \\\n+\t\t\t| ubicom32 \\\n+\t\t\t| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n+\t\t\t| vax \\\n+\t\t\t| visium \\\n+\t\t\t| w65 \\\n+\t\t\t| wasm32 | wasm64 \\\n+\t\t\t| we32k \\\n+\t\t\t| x86 | x86_64 | xc16x | xgate | xps100 \\\n+\t\t\t| xstormy16 | xtensa* \\\n+\t\t\t| ymp \\\n+\t\t\t| z8k | z80)\n+\t\t\t\t;;\n+\n+\t\t\t*)\n+\t\t\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$cpu-$vendor\"\\' not recognized 1>&2\n+\t\t\t\texit 1\n+\t\t\t\t;;\n+\t\tesac\n \t\t;;\n esac\n \n # Here we canonicalize certain aliases for manufacturers.\n-case $basic_machine in\n-\t*-digital*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/digital.*/dec/'`\n+case $vendor in\n+\tdigital*)\n+\t\tvendor=dec\n \t\t;;\n-\t*-commodore*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/commodore.*/cbm/'`\n+\tcommodore*)\n+\t\tvendor=cbm\n \t\t;;\n \t*)\n \t\t;;\n@@ -1356,9 +1345,9 @@ case $os in\n \t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n \t     | aos* | aros* | cloudabi* | sortix* \\\n \t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n-\t     | clix* | riscos* | uniplus* | iris* | rtu* | xenix* \\\n+\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n \t     | knetbsd* | mirbsd* | netbsd* \\\n-\t     | bitrig* | openbsd* | solidbsd* | libertybsd* \\\n+\t     | bitrig* | openbsd* | solidbsd* | libertybsd* | os108* \\\n \t     | ekkobsd* | kfreebsd* | freebsd* | riscix* | lynxos* \\\n \t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n \t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n@@ -1376,12 +1365,13 @@ case $os in\n \t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n \t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n \t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n-\t     | midnightbsd*)\n+\t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n+\t     | nsk* | powerunix)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \tqnx*)\n-\t\tcase $basic_machine in\n-\t\t    x86-* | i*86-*)\n+\t\tcase $cpu in\n+\t\t    x86 | i*86)\n \t\t\t;;\n \t\t    *)\n \t\t\tos=nto-$os\n@@ -1460,9 +1450,6 @@ case $os in\n \tns2)\n \t\tos=nextstep2\n \t\t;;\n-\tnsk*)\n-\t\tos=nsk\n-\t\t;;\n \t# Preserve the version number of sinix5.\n \tsinix5.*)\n \t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n@@ -1507,7 +1494,7 @@ case $os in\n \t\t# Until real need of OS specific support for\n \t\t# particular features comes up, bare metal\n \t\t# configurations are quite functional.\n-\t\tcase $basic_machine in\n+\t\tcase $cpu in\n \t\t    arm*)\n \t\t\tos=eabi\n \t\t\t;;\n@@ -1541,7 +1528,7 @@ else\n # will signal an error saying that MANUFACTURER isn't an operating\n # system, and we'll never get to this point.\n \n-case $basic_machine in\n+case $cpu-$vendor in\n \tscore-*)\n \t\tos=elf\n \t\t;;\n@@ -1722,9 +1709,8 @@ fi\n \n # Here we handle the case where we know the os, and the CPU type, but not the\n # manufacturer.  We pick the logical manufacturer.\n-vendor=unknown\n-case $basic_machine in\n-\t*-unknown)\n+case $vendor in\n+\tunknown)\n \t\tcase $os in\n \t\t\triscix*)\n \t\t\t\tvendor=acorn\n@@ -1793,11 +1779,10 @@ case $basic_machine in\n \t\t\t\tvendor=stratus\n \t\t\t\t;;\n \t\tesac\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed \"s/unknown/$vendor/\"`\n \t\t;;\n esac\n \n-echo \"$basic_machine-$os\"\n+echo \"$cpu-$vendor-$os\"\n exit\n \n # Local variables:"
      },
      {
        "sha": "0a6f2e644219008dcb4cefe4d7a152e838e9b66d",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,4 +1,4 @@\n-This is a system of building and caching dependencies necessary for building Bitcoin. \n+This is a system of building and caching dependencies necessary for building Bitcoin.\n There are several features that make it different from most similar systems:\n \n ### It is designed to be builder and host agnostic\n@@ -26,7 +26,7 @@ Before building, a unique build-id is generated for each package. This id\n consists of a hash of all files used to build the package (Makefiles, packages,\n etc), and as well as a hash of the same data for each recursive dependency. If\n any portion of a package's build recipe changes, it will be rebuilt as well as\n-any other package that depends on it. If any of the main makefiles (Makefile, \n+any other package that depends on it. If any of the main makefiles (Makefile,\n funcs.mk, etc) are changed, all packages will be rebuilt. After building, the\n results are cached into a tarball that can be re-used and distributed.\n "
      },
      {
        "sha": "a4434b5167ad970a184cb64dd796b3bc54d5662f",
        "filename": "depends/funcs.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -133,7 +133,7 @@ $(1)_config_env+=PKG_CONFIG_PATH=$($($(1)_type)_prefix)/share/pkgconfig\n $(1)_config_env+=PATH=$(build_prefix)/bin:$(PATH)\n $(1)_build_env+=PATH=$(build_prefix)/bin:$(PATH)\n $(1)_stage_env+=PATH=$(build_prefix)/bin:$(PATH)\n-$(1)_autoconf=./configure --host=$($($(1)_type)_host) --disable-dependency-tracking --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n+$(1)_autoconf=./configure --host=$($($(1)_type)_host) --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n \n ifneq ($($(1)_nm),)\n $(1)_autoconf += NM=\"$$($(1)_nm)\""
      },
      {
        "sha": "969ec2a1cb047f2895e17402012d637534f49b7a",
        "filename": "depends/hosts/android.mk",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/hosts/android.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/hosts/android.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/android.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,11 @@\n+ifeq ($(HOST),armv7a-linux-android)\n+android_AR=$(ANDROID_TOOLCHAIN_BIN)/arm-linux-androideabi-ar\n+android_CXX=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)eabi$(ANDROID_API_LEVEL)-clang++\n+android_CC=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)eabi$(ANDROID_API_LEVEL)-clang\n+android_RANLIB=$(ANDROID_TOOLCHAIN_BIN)/arm-linux-androideabi-ranlib\n+else\n+android_AR=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)-ar\n+android_CXX=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)$(ANDROID_API_LEVEL)-clang++\n+android_CC=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)$(ANDROID_API_LEVEL)-clang\n+android_RANLIB=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)-ranlib\n+endif"
      },
      {
        "sha": "7ed20ea1297dcad84173c4ec085dee714f87f22f",
        "filename": "depends/packages.md",
        "status": "modified",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -32,15 +32,15 @@ These variables are optional:\n \n     $(package)_build_subdir:\n     cd to this dir before running configure/build/stage commands.\n-    \n+\n     $(package)_download_file:\n     The file-name of the upstream source if it differs from how it should be\n     stored locally. This can be used to avoid storing file-names with strange\n     characters.\n-    \n+\n     $(package)_dependencies:\n     Names of any other packages that this one depends on.\n-    \n+\n     $(package)_patches:\n     Filenames of any patches needed to build the package\n \n@@ -134,7 +134,7 @@ the user. Other variables may be defined as needed.\n     Stage the build results. If undefined, does nothing.\n \n   The following variables are available for each recipe:\n-    \n+\n     $(1)_staging_dir: package's destination sysroot path\n     $(1)_staging_prefix_dir: prefix path inside of the package's staging dir\n     $(1)_extract_dir: path to the package's extracted sources\n@@ -181,3 +181,18 @@ For us, it's much easier to just link a static `libsecondary` into a shared\n static or dynamic `libseconday`, that's not our concern. With a static\n `libseconday`, when we need to link `libprimary` into our executable, there's no\n dependency chain to worry about as `libprimary` has all the symbols.\n+\n+## Build targets:\n+\n+To build an individual package (useful for debugging), following build targets are available.\n+\n+    make ${package}\n+    make ${package}_fetched\n+    make ${package}_extracted\n+    make ${package}_preprocessed\n+    make ${package}_configured\n+    make ${package}_built\n+    make ${package}_staged\n+    make ${package}_postprocessed\n+    make ${package}_cached\n+    make ${package}_cached_checksum"
      },
      {
        "sha": "b679438c6f65af33a263b714a4f3017bee964dcd",
        "filename": "depends/packages/bdb.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,7 @@ $(package)_sha256_hash=12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b857327\n $(package)_build_subdir=build_unix\n \n define $(package)_set_vars\n-$(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n+$(package)_config_opts=--disable-shared --enable-cxx --disable-replication --enable-option-checking\n $(package)_config_opts_mingw32=--enable-mingw\n $(package)_config_opts_linux=--with-pic\n $(package)_cxxflags=-std=c++11"
      },
      {
        "sha": "d360bb5ba6e6f13a1d454e3baa985af5bac0b252",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -10,18 +10,22 @@ $(package)_config_opts_debug=variant=debug\n $(package)_config_opts=--layout=tagged --build-type=complete --user-config=user-config.jam\n $(package)_config_opts+=threading=multi link=static -sNO_BZIP2=1 -sNO_ZLIB=1\n $(package)_config_opts_linux=threadapi=pthread runtime-link=shared\n-$(package)_config_opts_darwin=--toolset=darwin-4.2.1 runtime-link=shared\n+$(package)_config_opts_darwin=--toolset=clang-darwin runtime-link=shared\n $(package)_config_opts_mingw32=binary-format=pe target-os=windows threadapi=win32 runtime-link=static\n $(package)_config_opts_x86_64_mingw32=address-model=64\n $(package)_config_opts_i686_mingw32=address-model=32\n $(package)_config_opts_i686_linux=address-model=32 architecture=x86\n+$(package)_config_opts_i686_android=address-model=32\n+$(package)_config_opts_aarch64_android=address-model=64\n+$(package)_config_opts_x86_64_android=address-model=64\n+$(package)_config_opts_armv7a_android=address-model=32\n $(package)_toolset_$(host_os)=gcc\n $(package)_archiver_$(host_os)=$($(package)_ar)\n-$(package)_toolset_darwin=darwin\n-$(package)_archiver_darwin=$($(package)_libtool)\n+$(package)_toolset_darwin=clang-darwin\n $(package)_config_libraries=chrono,filesystem,system,thread,test\n $(package)_cxxflags=-std=c++11 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n+$(package)_cxxflags_android=-fPIC\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "902fe43be267919d8d71c44d9b6dea5cea9928d1",
        "filename": "depends/packages/expat.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,6 +6,7 @@ $(package)_sha256_hash=cbc9102f4a31a8dafd42d642e9a3aa31e79a0aedaa1f6efd2795ebc83\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --without-docbook --without-tests --without-examples\n+  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n endef\n "
      },
      {
        "sha": "128599ba773326b87901dd219946831838e39c80",
        "filename": "depends/packages/fontconfig.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,8 @@ $(package)_sha256_hash=b449a3e10c47e1d1c7a6ec6e2016cca73d3bd68fbbd4f0ae5cc6b573f\n $(package)_dependencies=freetype expat\n \n define $(package)_set_vars\n-  $(package)_config_opts=--disable-docs --disable-static\n+  $(package)_config_opts=--disable-docs --disable-static --disable-libxml2 --disable-iconv\n+  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "a1584608e19f714ca190875aae124edd33a1456a",
        "filename": "depends/packages/freetype.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,6 +6,7 @@ $(package)_sha256_hash=3a3bb2c4e15ffb433f2032f50a5b5a92558206822e22bfe8cbe339af4\n \n define $(package)_set_vars\n   $(package)_config_opts=--without-zlib --without-png --without-harfbuzz --without-bzip2 --disable-static\n+  $(package)_config_opts += --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n endef\n "
      },
      {
        "sha": "4c55c2df04b5cd50f1af5ae63bab275d7c1284ac",
        "filename": "depends/packages/libXau.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,8 +5,11 @@ $(package)_file_name=$(package)-$($(package)_version).tar.bz2\n $(package)_sha256_hash=fdd477320aeb5cdd67272838722d6b7d544887dfe7de46e1e7cc0c27c2bea4f2\n $(package)_dependencies=xproto\n \n+# When updating this package, check the default value of\n+# --disable-xthreads. It is currently enabled.\n define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared\n+  $(package)_config_opts=--disable-shared --disable-lint-library --without-lint\n+  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n endef\n "
      },
      {
        "sha": "b4333abaf086b395f29991707c1e8914581cae76",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -3,15 +3,24 @@ $(package)_version=2.1.8-stable\n $(package)_download_path=https://github.com/libevent/libevent/archive/\n $(package)_file_name=release-$($(package)_version).tar.gz\n $(package)_sha256_hash=316ddb401745ac5d222d7c529ef1eada12f58f6376a66c1118eee803cb70f83d\n+$(package)_patches=fix_android_arc4random_addrandom.patch\n \n-define $(package)_preprocess_cmds\n-  ./autogen.sh\n-endef\n+ifneq (,$(findstring android,$(host)))\n+  define $(package)_preprocess_cmds\n+    ./autogen.sh && patch -p1 < $($(package)_patch_dir)/fix_android_arc4random_addrandom.patch\n+  endef\n+else\n+  define $(package)_preprocess_cmds\n+    ./autogen.sh\n+  endef\n+endif\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress --disable-samples\n+  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n   $(package)_config_opts_release=--disable-debug-mode\n   $(package)_config_opts_linux=--with-pic\n+  $(package)_config_opts_android=--with-pic\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "2204b381958b8f0be875308764df849b62e9af40",
        "filename": "depends/packages/libxcb.mk",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,20 @@ $(package)_sha256_hash=98d9ab05b636dd088603b64229dd1ab2d2cc02ab807892e107d674f9c\n $(package)_dependencies=xcb_proto libXau\n \n define $(package)_set_vars\n-$(package)_config_opts=--disable-static\n+$(package)_config_opts=--disable-static --disable-build-docs --without-doxygen --without-launchd\n+$(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n+# Because we pass -qt-xcb to Qt, it will compile in a set of xcb helper libraries and extensions,\n+# so we skip building all of the extensions here.\n+# More info is available from: https://doc.qt.io/qt-5.9/linux-requirements.html\n+$(package)_config_opts += --disable-composite --disable-damage --disable-dpms\n+$(package)_config_opts += --disable-dri2 --disable-dri3 --disable-glx\n+$(package)_config_opts += --disable-present --disable-randr --disable-record\n+$(package)_config_opts += --disable-render --disable-resource --disable-screensaver\n+$(package)_config_opts += --disable-shape --disable-shm --disable-sync\n+$(package)_config_opts += --disable-xevie --disable-xfixes --disable-xfree86-dri\n+$(package)_config_opts += --disable-xinerama --disable-xinput --disable-xkb\n+$(package)_config_opts += --disable-xprint --disable-selinux --disable-xtest\n+$(package)_config_opts += --disable-xv --disable-xvmc\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "8493f1d9793d7c5d21a9035b9f56ffe471945361",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,16 +1,18 @@\n package=native_libdmg-hfsplus\n-$(package)_version=0.1\n-$(package)_download_path=https://github.com/theuni/libdmg-hfsplus/archive\n-$(package)_file_name=libdmg-hfsplus-v$($(package)_version).tar.gz\n-$(package)_sha256_hash=6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3\n+$(package)_version=7ac55ec64c96f7800d9818ce64c79670e7f02b67\n+$(package)_download_path=https://github.com/planetbeing/libdmg-hfsplus/archive\n+$(package)_file_name=$($(package)_version).tar.gz\n+$(package)_sha256_hash=56fbdc48ec110966342f0ecddd6f8f89202f4143ed2a3336e42bbf88f940850c\n $(package)_build_subdir=build\n+$(package)_patches=remove-libcrypto-dependency.patch\n \n define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/remove-libcrypto-dependency.patch && \\\n   mkdir build\n endef\n \n define $(package)_config_cmds\n-  cmake -DCMAKE_INSTALL_PREFIX:PATH=$(build_prefix)/bin ..\n+  cmake -DCMAKE_INSTALL_PREFIX:PATH=$(build_prefix) ..\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "1de8c37d362aa9f01bfd9631ce3d22aa77b35b8e",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,25 +0,0 @@\n-package=native_protobuf\n-$(package)_version=2.6.1\n-$(package)_download_path=https://github.com/google/protobuf/releases/download/v$($(package)_version)\n-$(package)_file_name=protobuf-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=ee445612d544d885ae240ffbcbf9267faa9f593b7b101f21d58beceb92661910\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-shared --without-zlib\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C src protoc\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install-strip\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf lib include\n-endef"
      },
      {
        "sha": "e3b3647dd9a95019b01925f319ff77d7abbacd5d",
        "filename": "depends/packages/openssl.mk",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -3,6 +3,7 @@ $(package)_version=1.0.1k\n $(package)_download_path=https://www.openssl.org/source\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n $(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n+$(package)_patches=0001-Add-OpenSSL-termios-fix-for-musl-libc.patch\n \n define $(package)_set_vars\n $(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n@@ -57,9 +58,15 @@ $(package)_config_opts_riscv64_linux=linux-generic64\n $(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n $(package)_config_opts_x86_64_mingw32=mingw64\n $(package)_config_opts_i686_mingw32=mingw\n+$(package)_config_opts_android=-fPIC\n+$(package)_config_opts_aarch64_android=linux-generic64\n+$(package)_config_opts_x86_64_android=linux-generic64\n+$(package)_config_opts_armv7a_android=linux-generic32\n+$(package)_config_opts_i686_android=linux-generic32\n endef\n \n define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch && \\\n   sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n   sed -i.old \"s|engines apps test|engines|\" Makefile.org\n endef\n@@ -69,7 +76,7 @@ define $(package)_config_cmds\n endef\n \n define $(package)_build_cmds\n-  $(MAKE) -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n+  $(MAKE) -j1 build_crypto libcrypto.pc libssl.pc openssl.pc\n endef\n \n define $(package)_stage_cmds"
      },
      {
        "sha": "09734c7e6f9e71ca5b5040f8e547f098954fa1bd",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,9 +1,9 @@\n packages:=boost openssl libevent\n \n-qt_native_packages = native_protobuf\n-qt_packages = qrencode protobuf zlib\n+qt_packages = qrencode zlib\n \n qt_linux_packages:=qt expat libxcb xcb_proto libXau xproto freetype fontconfig\n+qt_android_packages=qt\n \n rapidcheck_packages = rapidcheck\n "
      },
      {
        "sha": "52975b14ecc3325f0da5f4fac7725ee94c0bd67e",
        "filename": "depends/packages/protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,34 +0,0 @@\n-package=protobuf\n-$(package)_version=$(native_$(package)_version)\n-$(package)_download_path=$(native_$(package)_download_path)\n-$(package)_file_name=$(native_$(package)_file_name)\n-$(package)_sha256_hash=$(native_$(package)_sha256_hash)\n-$(package)_dependencies=native_$(package)\n-$(package)_cxxflags=-std=c++11\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_preprocess_cmds\n-   cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub . &&\\\n-   cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub gtest/build-aux\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C src libprotobuf.la\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) -C src install-libLTLIBRARIES install-nobase_includeHEADERS &&\\\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm lib/libprotoc.a lib/*.la\n-endef"
      },
      {
        "sha": "d1687883bcd5197372367e4a9a5f029594f9f273",
        "filename": "depends/packages/qrencode.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,8 +5,11 @@ $(package)_file_name=$(package)-$($(package)_version).tar.bz2\n $(package)_sha256_hash=efe5188b1ddbcbf98763b819b146be6a90481aac30cfc8d858ab78a19cde1fa5\n \n define $(package)_set_vars\n-$(package)_config_opts=--disable-shared -without-tools --disable-sdltest\n+$(package)_config_opts=--disable-shared --without-tools --without-tests --disable-sdltest\n+$(package)_config_opts += --disable-gprof --disable-gcov --disable-mudflap\n+$(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n $(package)_config_opts_linux=--with-pic\n+$(package)_config_opts_android=--with-pic\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "a0f7cda2c006313fc8906693068f4de29fa01136",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 33,
        "deletions": 12,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,20 +1,20 @@\n PACKAGE=qt\n-$(package)_version=5.9.7\n+$(package)_version=5.9.8\n $(package)_download_path=https://download.qt.io/official_releases/qt/5.9/$($(package)_version)/submodules\n $(package)_suffix=opensource-src-$($(package)_version).tar.xz\n $(package)_file_name=qtbase-$($(package)_suffix)\n-$(package)_sha256_hash=36dd9574f006eaa1e5af780e4b33d11fe39d09fd7c12f3b9d83294174bd28f00\n-$(package)_dependencies=openssl zlib\n+$(package)_sha256_hash=9b9dec1f67df1f94bce2955c5604de992d529dde72050239154c56352da0907d\n+$(package)_dependencies=zlib\n $(package)_linux_dependencies=freetype fontconfig libxcb\n $(package)_build_subdir=qtbase\n $(package)_qt_libs=corelib network widgets gui plugins testlib\n-$(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch fix_no_printer.patch fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch\n+$(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch fix_no_printer.patch fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch fix_android_qmake_conf.patch fix_android_jni_static.patch\n \n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n-$(package)_qttranslations_sha256_hash=b36da7d93c3ab6fca56b32053bb73bc619c8b192bb89b74e3bcde2705f1c2a14\n+$(package)_qttranslations_sha256_hash=fb5a47799754af73d3bf501fe513342cfe2fc37f64e80df5533f6110e804220c\n \n $(package)_qttools_file_name=qttools-$($(package)_suffix)\n-$(package)_qttools_sha256_hash=d62e0f70d99645d6704dbb8976fb2222443061743689943d40970c52c49367a1\n+$(package)_qttools_sha256_hash=a97556eb7b2f30252cdd8a598c396cfce2b2f79d2bae883af6d3b26a2cdcc63c\n \n $(package)_extra_sources  = $($(package)_qttranslations_file_name)\n $(package)_extra_sources += $($(package)_qttools_file_name)\n@@ -42,9 +42,11 @@ $(package)_config_opts += -no-linuxfb\n $(package)_config_opts += -no-libjpeg\n $(package)_config_opts += -no-libudev\n $(package)_config_opts += -no-mtdev\n+$(package)_config_opts += -no-openssl\n $(package)_config_opts += -no-openvg\n $(package)_config_opts += -no-reduce-relocations\n $(package)_config_opts += -no-qml-debug\n+$(package)_config_opts += -no-securetransport\n $(package)_config_opts += -no-sql-db2\n $(package)_config_opts += -no-sql-ibase\n $(package)_config_opts += -no-sql-oci\n@@ -59,7 +61,6 @@ $(package)_config_opts += -no-xinput2\n $(package)_config_opts += -nomake examples\n $(package)_config_opts += -nomake tests\n $(package)_config_opts += -opensource\n-$(package)_config_opts += -openssl-linked\n $(package)_config_opts += -optimized-qmake\n $(package)_config_opts += -pch\n $(package)_config_opts += -pkg-config\n@@ -127,6 +128,26 @@ $(package)_config_opts_x86_64_linux = -xplatform linux-g++-64\n $(package)_config_opts_aarch64_linux = -xplatform linux-aarch64-gnu-g++\n $(package)_config_opts_riscv64_linux = -platform linux-g++ -xplatform bitcoin-linux-g++\n $(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n+\n+$(package)_config_opts_android = -xplatform android-clang\n+$(package)_config_opts_android += -android-sdk $(ANDROID_SDK)\n+$(package)_config_opts_android += -android-ndk $(ANDROID_NDK)\n+$(package)_config_opts_android += -android-ndk-platform android-$(ANDROID_API_LEVEL)\n+$(package)_config_opts_android += -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_config_opts_android += -egl\n+$(package)_config_opts_android += -qpa xcb\n+$(package)_config_opts_android += -no-eglfs\n+$(package)_config_opts_android += -opengl es2\n+$(package)_config_opts_android += -qt-freetype\n+$(package)_config_opts_android += -no-fontconfig\n+$(package)_config_opts_android += -L $(host_prefix)/lib\n+$(package)_config_opts_android += -I $(host_prefix)/include\n+\n+$(package)_config_opts_aarch64_android += -android-arch arm64-v8a\n+$(package)_config_opts_armv7a_android += -android-arch armeabi-v7a\n+$(package)_config_opts_x86_64_android += -android-arch x86_64\n+$(package)_config_opts_i686_android += -android-arch i686\n+\n $(package)_build_env  = QT_RCC_TEST=1\n $(package)_build_env += QT_RCC_SOURCE_DATE_OVERRIDE=1\n endef\n@@ -156,9 +177,7 @@ define $(package)_preprocess_cmds\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   sed -i.old \"/updateqm.depends =/d\" qttranslations/translations/translations.pro && \\\n   sed -i.old \"s/src_plugins.depends = src_sql src_network/src_plugins.depends = src_network/\" qtbase/src/src.pro && \\\n-  sed -i.old \"s|X11/extensions/XIproto.h|X11/X.h|\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n   sed -i.old -e 's/if \\[ \"$$$$XPLATFORM_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/if \\[ \"$$$$BUILD_ON_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/' -e 's|/bin/pwd|pwd|' qtbase/configure && \\\n-  sed -i.old 's/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, 0)/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, kCGMouseButtonLeft)/' qtbase/src/plugins/platforms/cocoa/qcocoacursor.mm && \\\n   mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n   cp -f qtbase/mkspecs/macx-clang/Info.plist.lib qtbase/mkspecs/macx-clang-linux/ &&\\\n   cp -f qtbase/mkspecs/macx-clang/Info.plist.app qtbase/mkspecs/macx-clang-linux/ &&\\\n@@ -171,16 +190,18 @@ define $(package)_preprocess_cmds\n   patch -p1 -i $($(package)_patch_dir)/fix_no_printer.patch &&\\\n   patch -p1 -i $($(package)_patch_dir)/fix_rcc_determinism.patch &&\\\n   patch -p1 -i $($(package)_patch_dir)/xkb-default.patch &&\\\n+  patch -p1 -i $($(package)_patch_dir)/fix_android_qmake_conf.patch &&\\\n+  patch -p1 -i $($(package)_patch_dir)/fix_android_jni_static.patch &&\\\n   echo \"!host_build: QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"!host_build: QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"!host_build: QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_riscv64_arch.patch &&\\\n   patch -p1 -i $($(package)_patch_dir)/no-xlib.patch &&\\\n   echo \"QMAKE_LINK_OBJECT_MAX = 10\" >> qtbase/mkspecs/win32-g++/qmake.conf &&\\\n   echo \"QMAKE_LINK_OBJECT_SCRIPT = object_script\" >> qtbase/mkspecs/win32-g++/qmake.conf &&\\\n-  sed -i.old \"s|QMAKE_CFLAGS            = |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_LFLAGS            = |!host_build: QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_CXXFLAGS          = |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CFLAGS           += |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CXXFLAGS         += |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"0,/^QMAKE_LFLAGS_/s|^QMAKE_LFLAGS_|!host_build: QMAKE_LFLAGS            = $($(package)_ldflags)\\n&|\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n   sed -i.old \"s/LIBRARY_PATH/(CROSS_)?\\0/g\" qtbase/mkspecs/features/toolchain.prf\n endef\n "
      },
      {
        "sha": "a16fee270e87a56326a3091dbdea25cdbe334648",
        "filename": "depends/packages/rapidcheck.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/rapidcheck.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/rapidcheck.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/rapidcheck.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,11 +1,11 @@\n package=rapidcheck\n-$(package)_version=3eb9b4ff69f4ff2d9932e8f852c2b2a61d7c20d3\n+$(package)_version=d9482c683429fe79122e3dcab14c9655874aeb8e\n $(package)_download_path=https://github.com/emil-e/rapidcheck/archive\n $(package)_file_name=$($(package)_version).tar.gz\n-$(package)_sha256_hash=5fbf82755c9a647127e62563be079448ff8b1db9ca80a52a673dd9a88fdb714b\n+$(package)_sha256_hash=b9ee8955b175fd3c0757ebd887bb075541761af08b0c28391b7c6c0685351f6b\n \n define $(package)_config_cmds\n-  cmake -DCMAKE_INSTALL_PREFIX=$($(package)_staging_dir)$(host_prefix) -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DRC_INSTALL_ALL_EXTRAS=ON\n+  cmake -DCMAKE_INSTALL_PREFIX=$($(package)_staging_dir)$(host_prefix) -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DRC_ENABLE_BOOST_TEST=ON -B .\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "85d01ecd2fe8d5df9158f0918cef680ffc590187",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,7 +5,7 @@ $(package)_file_name=xcb-proto-$($(package)_version).tar.bz2\n $(package)_sha256_hash=7ef40ddd855b750bc597d2a435da21e55e502a0fefa85b274f2c922800baaf05\n \n define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared\n+  $(package)_config_opts=--disable-shared --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n endef\n "
      },
      {
        "sha": "6bd867d02b20f4cf46da0b73baa5fd1fab68f6b9",
        "filename": "depends/packages/xproto.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,7 +5,8 @@ $(package)_file_name=$(package)-$($(package)_version).tar.bz2\n $(package)_sha256_hash=636162c1759805a5a0114a369dffdeccb8af8c859ef6e1445f26a4e6e046514f\n \n define $(package)_set_vars\n-$(package)_config_opts=--disable-shared\n+$(package)_config_opts=--without-fop --without-xmlto --without-xsltproc --disable-specs\n+$(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "6f35ede24850ad76484f76fc1f607a8bd158de65",
        "filename": "depends/packages/zeromq.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,8 +6,12 @@ $(package)_sha256_hash=bcbabe1e2c7d0eec4ed612e10b94b112dd5f06fcefa994a0c79a45d83\n $(package)_patches=0001-fix-build-with-older-mingw64.patch 0002-disable-pthread_set_name_np.patch\n \n define $(package)_set_vars\n-  $(package)_config_opts=--without-docs --disable-shared --without-libsodium --disable-curve --disable-curve-keygen --disable-perf --disable-Werror\n+  $(package)_config_opts=--without-docs --disable-shared --disable-curve --disable-curve-keygen --disable-perf\n+  $(package)_config_opts += --without-libsodium --without-libgssapi_krb5 --without-pgm --without-norm --without-vmci\n+  $(package)_config_opts += --disable-libunwind --disable-radix-tree --without-gcov --disable-dependency-tracking\n+  $(package)_config_opts += --disable-Werror --disable-drafts --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n+  $(package)_config_opts_android=--with-pic\n   $(package)_cxxflags=-std=c++11\n endef\n "
      },
      {
        "sha": "acb02020a80b2424fe6080a0b64b8ac54d33df62",
        "filename": "depends/packages/zlib.mk",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,23 +5,27 @@ $(package)_file_name=$(package)-$($(package)_version).tar.gz\n $(package)_sha256_hash=c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\n \n define $(package)_set_vars\n-$(package)_build_opts= CC=\"$($(package)_cc)\"\n-$(package)_build_opts+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags) -fPIC\"\n-$(package)_build_opts+=RANLIB=\"$($(package)_ranlib)\"\n-$(package)_build_opts+=AR=\"$($(package)_ar)\"\n-$(package)_build_opts_darwin+=AR=\"$($(package)_libtool)\"\n-$(package)_build_opts_darwin+=ARFLAGS=\"-o\"\n+$(package)_config_opts= CC=\"$($(package)_cc)\"\n+$(package)_config_opts+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags) -fPIC\"\n+$(package)_config_opts+=RANLIB=\"$($(package)_ranlib)\"\n+$(package)_config_opts+=AR=\"$($(package)_ar)\"\n+$(package)_config_opts_darwin+=AR=\"$($(package)_libtool)\"\n+$(package)_config_opts_darwin+=ARFLAGS=\"-o\"\n+$(package)_config_opts_android+=CHOST=$(host)\n endef\n \n+# zlib has its own custom configure script that takes in options like CC,\n+# CFLAGS, RANLIB, AR, and ARFLAGS from the environment rather than from\n+# command-line arguments.\n define $(package)_config_cmds\n-  ./configure --static --prefix=$(host_prefix)\n+  env $($(package)_config_opts) ./configure --static --prefix=$(host_prefix)\n endef\n \n define $(package)_build_cmds\n-  $(MAKE) $($(package)_build_opts) libz.a\n+  $(MAKE) libz.a\n endef\n \n define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install $($(package)_build_opts)\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n endef\n "
      },
      {
        "sha": "5bcc64bef6bc86e6f5336aedb89f03c7458f1402",
        "filename": "depends/patches/libevent/fix_android_arc4random_addrandom.patch",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/libevent/fix_android_arc4random_addrandom.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/libevent/fix_android_arc4random_addrandom.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/fix_android_arc4random_addrandom.patch?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,68 @@\n+From cadae3ab7abf45e61ecae8aac39d97d1f3cbd336 Mon Sep 17 00:00:00 2001\n+From: Lawrence Nahum <lawrence@greenaddress.it>\n+Date: Sun, 3 Dec 2017 22:56:09 +0100\n+Subject: [PATCH] fixup\n+\n+---\n+ configure.ac          | 1 +\n+ evutil_rand.c         | 3 +++\n+ include/event2/util.h | 4 ++--\n+ 3 files changed, 6 insertions(+), 2 deletions(-)\n+\n+diff --git a/configure.ac b/configure.ac\n+index 7528d37..3bb2121 100644\n+--- a/configure.ac\n++++ b/configure.ac\n+@@ -341,6 +341,7 @@ dnl Checks for library functions.\n+ AC_CHECK_FUNCS([ \\\n+   accept4 \\\n+   arc4random \\\n++  arc4random_addrandom \\\n+   arc4random_buf \\\n+   eventfd \\\n+   epoll_create1 \\\n+diff --git a/evutil_rand.c b/evutil_rand.c\n+index 046a14b..3f0bf2c 100644\n+--- a/evutil_rand.c\n++++ b/evutil_rand.c\n+@@ -191,6 +191,7 @@ evutil_secure_rng_get_bytes(void *buf, size_t n)\n+ {\n+ \tev_arc4random_buf(buf, n);\n+ }\n++#ifdef HAVE_ARC4RANDOM_ADDRANDOM\n+ \n+ void\n+ evutil_secure_rng_add_bytes(const char *buf, size_t n)\n+@@ -199,6 +200,8 @@ evutil_secure_rng_add_bytes(const char *buf, size_t n)\n+ \t    n>(size_t)INT_MAX ? INT_MAX : (int)n);\n+ }\n+ \n++#endif\n++\n+ void\n+ evutil_free_secure_rng_globals_(void)\n+ {\n+diff --git a/include/event2/util.h b/include/event2/util.h\n+index dd4bbb6..a9a169d 100644\n+--- a/include/event2/util.h\n++++ b/include/event2/util.h\n+@@ -841,7 +841,7 @@ int evutil_secure_rng_init(void);\n+  */\n+ EVENT2_EXPORT_SYMBOL\n+ int evutil_secure_rng_set_urandom_device_file(char *fname);\n+-\n++#ifdef HAVE_ARC4RANDOM_ADDRANDOM\n+ /** Seed the random number generator with extra random bytes.\n+ \n+     You should almost never need to call this function; it should be\n+@@ -858,7 +858,7 @@ int evutil_secure_rng_set_urandom_device_file(char *fname);\n+  */\n+ EVENT2_EXPORT_SYMBOL\n+ void evutil_secure_rng_add_bytes(const char *dat, size_t datlen);\n+-\n++#endif\n+ #ifdef __cplusplus\n+ }\n+ #endif\n+-- \n+2.14.3"
      },
      {
        "sha": "f346c8f2cff8b040cc534c32402ccf92229d8c05",
        "filename": "depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,45 @@\n+From 3e5fd3fb56bc9ff03beb535979e33dcf83fe1f70 Mon Sep 17 00:00:00 2001\n+From: Cory Fields <cory-nospam-@coryfields.com>\n+Date: Thu, 8 May 2014 12:39:42 -0400\n+Subject: [PATCH] dmg: remove libcrypto dependency\n+\n+---\n+ dmg/CMakeLists.txt | 16 ----------------\n+ 1 file changed, 16 deletions(-)\n+\n+diff --git a/dmg/CMakeLists.txt b/dmg/CMakeLists.txt\n+index eec62d6..3969f64 100644\n+--- a/dmg/CMakeLists.txt\n++++ b/dmg/CMakeLists.txt\n+@@ -1,12 +1,5 @@\n+-INCLUDE(FindOpenSSL)\n+ INCLUDE(FindZLIB)\n+ \n+-FIND_LIBRARY(CRYPTO_LIBRARIES crypto\n+-      PATHS\n+-      /usr/lib\n+-      /usr/local/lib\n+-   )\n+-\n+ IF(NOT ZLIB_FOUND)\n+ \tmessage(FATAL_ERROR \"zlib is required for dmg!\")\n+ ENDIF(NOT ZLIB_FOUND)\n+@@ -18,15 +11,6 @@ link_directories(${PROJECT_BINARY_DIR}/common ${PROJECT_BINARY_DIR}/hfs)\n+ \n+ add_library(dmg adc.c base64.c checksum.c dmgfile.c dmglib.c filevault.c io.c partition.c resources.c udif.c)\n+ \n+-IF(OPENSSL_FOUND)\n+-\tadd_definitions(-DHAVE_CRYPT)\n+-\tinclude_directories(${OPENSSL_INCLUDE_DIR})\n+-\ttarget_link_libraries(dmg ${CRYPTO_LIBRARIES})\n+-\tIF(WIN32)\n+-\t\tTARGET_LINK_LIBRARIES(dmg gdi32)\n+-\tENDIF(WIN32)\n+-ENDIF(OPENSSL_FOUND)\n+-\n+ target_link_libraries(dmg common hfs z)\n+ \n+ add_executable(dmg-bin dmg.c)\n+-- \n+2.22.0\n+"
      },
      {
        "sha": "003099bdc20095d4050287d4457b8369b630fd62",
        "filename": "depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,17 @@\n+diff --git a/crypto/ui/ui_openssl.c b/crypto/ui/ui_openssl.c\n+index a38c758..d99edc2 100644\n+--- a/crypto/ui/ui_openssl.c\n++++ b/crypto/ui/ui_openssl.c\n+@@ -190,9 +190,9 @@\n+ # undef  SGTTY\n+ #endif\n+ \n+-#if defined(linux) && !defined(TERMIO)\n+-# undef  TERMIOS\n+-# define TERMIO\n++#if defined(linux)\n++# define TERMIOS\n++# undef  TERMIO\n+ # undef  SGTTY\n+ #endif\n+ "
      },
      {
        "sha": "2f6ff00f40c253c95d5bc62e887b032eac22055e",
        "filename": "depends/patches/qt/fix_android_jni_static.patch",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/qt/fix_android_jni_static.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/qt/fix_android_jni_static.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_jni_static.patch?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,18 @@\n+--- old/qtbase/src/plugins/platforms/android/androidjnimain.cpp\n++++ new/qtbase/src/plugins/platforms/android/androidjnimain.cpp\n+@@ -890,6 +890,14 @@\n+         __android_log_print(ANDROID_LOG_FATAL, \"Qt\", \"registerNatives failed\");\n+         return -1;\n+     }\n++\n++    const jint ret = QT_PREPEND_NAMESPACE(QtAndroidPrivate::initJNI(vm, env));\n++    if (ret != 0)\n++    {\n++        __android_log_print(ANDROID_LOG_FATAL, \"Qt\", \"initJNI failed\");\n++        return ret;\n++    }\n++\n+     QWindowSystemInterfacePrivate::TabletEvent::setPlatformSynthesizesMouse(false);\n+ \n+     m_javaVM = vm;\n+"
      },
      {
        "sha": "13bfff9776474028c5165f9e3d5e64bee3d576e5",
        "filename": "depends/patches/qt/fix_android_qmake_conf.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/qt/fix_android_qmake_conf.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/qt/fix_android_qmake_conf.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_qmake_conf.patch?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,20 @@\n+--- old/qtbase/mkspecs/android-clang/qmake.conf\n++++ new/qtbase/mkspecs/android-clang/qmake.conf\n+@@ -30,7 +30,7 @@\n+     QMAKE_CFLAGS += -target mips64el-none-linux-android\n+ \n+ QMAKE_CFLAGS += -gcc-toolchain $$NDK_TOOLCHAIN_PATH\n+-QMAKE_LINK    = $$QMAKE_CXX $$QMAKE_CFLAGS -Wl,--exclude-libs,libgcc.a\n++QMAKE_LINK    = $$QMAKE_CXX $$QMAKE_CFLAGS -Wl,--exclude-libs,libgcc.a -nostdlib++\n+ QMAKE_CFLAGS += -DANDROID_HAS_WSTRING --sysroot=$$NDK_ROOT/sysroot \\\n+                 -isystem $$NDK_ROOT/sysroot/usr/include/$$NDK_TOOLS_PREFIX \\\n+                 -isystem $$NDK_ROOT/sources/cxx-stl/llvm-libc++/include \\\n+@@ -40,7 +40,7 @@\n+ ANDROID_SOURCES_CXX_STL_LIBDIR = $$NDK_ROOT/sources/cxx-stl/llvm-libc++/libs/$$ANDROID_TARGET_ARCH\n+ \n+ ANDROID_STDCPP_PATH = $$ANDROID_SOURCES_CXX_STL_LIBDIR/libc++_shared.so\n+-ANDROID_CXX_STL_LIBS = -lc++\n++ANDROID_CXX_STL_LIBS = -lc++_shared\n+ \n+ QMAKE_ARM_CFLAGS_RELEASE                   = -Oz\n+ QMAKE_ARM_CFLAGS_RELEASE_WITH_DEBUGINFO    = -g -Oz"
      },
      {
        "sha": "b1c6f78a7046dbcdf4be20d3cc43e5cb09bc7528",
        "filename": "depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -12,7 +12,7 @@ diff --git a/src/thread.cpp b/src/thread.cpp\n index a1086b0c..9943f354 100644\n --- a/src/thread.cpp\n +++ b/src/thread.cpp\n-@@ -307,7 +307,7 @@ void zmq::thread_t::setThreadName (const char *name_)\n+@@ -308,7 +308,7 @@ void zmq::thread_t::setThreadName (const char *name_)\n   */\n      if (!name_)\n          return;\n@@ -21,9 +21,9 @@ index a1086b0c..9943f354 100644\n  #if defined(ZMQ_HAVE_PTHREAD_SETNAME_1)\n      int rc = pthread_setname_np (name_);\n      if (rc)\n-@@ -323,6 +323,8 @@ void zmq::thread_t::setThreadName (const char *name_)\n+@@ -324,6 +324,8 @@ void zmq::thread_t::setThreadName (const char *name_)\n  #elif defined(ZMQ_HAVE_PTHREAD_SET_NAME)\n-     pthread_set_name_np (descriptor, name_);\n+     pthread_set_name_np (_descriptor, name_);\n  #endif\n +#endif\n +    return;"
      },
      {
        "sha": "cd7ccf80ab4a01959b911f175969290368ecc60a",
        "filename": "doc/Doxyfile.in",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -790,7 +790,7 @@ WARN_LOGFILE           =\n # spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n # Note: If this tag is empty the current directory is searched.\n \n-INPUT                  = src\n+INPUT                  = src doc/README_doxygen.md\n \n # This tag can be used to specify the character encoding of the source files\n # that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n@@ -974,7 +974,7 @@ FILTER_SOURCE_PATTERNS =\n # (index.html). This can be useful if you have a project on for instance GitHub\n # and want to reuse the introduction page also for the doxygen output.\n \n-USE_MDFILE_AS_MAINPAGE =\n+USE_MDFILE_AS_MAINPAGE = doc/README_doxygen.md\n \n #---------------------------------------------------------------------------\n # Configuration options related to source browsing"
      },
      {
        "sha": "6888383a9861eaef1b5b1eb86d8e13712b2be2b0",
        "filename": "doc/README_doxygen.md",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/README_doxygen.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/README_doxygen.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_doxygen.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,15 @@\n+\\mainpage notitle\n+\n+\\section intro_sec Introduction\n+\n+This is the developer documentation of the reference client for an experimental new digital currency called Bitcoin,\n+which enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+with no central authority: managing transactions and issuing money are carried out collectively by the network.\n+\n+The software is a community-driven open source project, released under the MIT license.\n+\n+See https://github.com/bitcoin/bitcoin and https://bitcoincore.org/ for further information about the project.\n+\n+\\section Navigation\n+Use <a href=\"modules.html\"><code>Modules</code></a>, <a href=\"namespaces.html\"><code>Namespaces</code></a>, <a href=\"classes.html\"><code>Classes</code></a>, or <a href=\"files.html\"><code>Files</code></a> at the top of the page to start navigating the code.\n+"
      },
      {
        "sha": "a63391e01a0925aab552a4dbc21f41097cf16b89",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -50,7 +50,7 @@ Given a height: returns hash of block in best-block-chain at height provided.\n \n Returns various state info regarding block chain processing.\n Only supports JSON as output format.\n-* chain : (string) current network name as defined in BIP70 (main, test, regtest)\n+* chain : (string) current network name (main, test, regtest)\n * blocks : (numeric) the current number of blocks processed in the server\n * headers : (numeric) the current number of headers we have validated\n * bestblockhash : (string) the hash of the currently best block\n@@ -81,7 +81,7 @@ $ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff76\n       {\n          \"txvers\" : 1\n          \"height\" : 2147483647,\n-         \"value\" : 8.8687,\t\t \n+         \"value\" : 8.8687,\n          \"scriptPubKey\" : {\n             \"asm\" : \"OP_DUP OP_HASH160 1c7cebb529b86a04c683dfa87be49de35bcf589e OP_EQUALVERIFY OP_CHECKSIG\",\n             \"hex\" : \"76a9141c7cebb529b86a04c683dfa87be49de35bcf589e88ac\","
      },
      {
        "sha": "b1a06009b52a7f1a6f6fb6f5923403ed0028862c",
        "filename": "doc/benchmarking.md",
        "status": "modified",
        "additions": 22,
        "deletions": 29,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,54 +2,47 @@ Benchmarking\n ============\n \n Bitcoin Core has an internal benchmarking framework, with benchmarks\n-for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160), as well as the rolling bloom filter.\n+for cryptographic algorithms (e.g. SHA1, SHA256, SHA512, RIPEMD160, Poly1305, ChaCha20), rolling bloom filter, coins selection,\n+thread queue, wallet balance.\n \n Running\n ---------------------\n+\n+For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n+benchmarking by unlatching log printers and lock analysis.\n+\n+    make -C src bitcoin_bench\n+\n After compiling bitcoin-core, the benchmarks can be run with:\n \n     src/bench/bench_bitcoin\n \n The output will look similar to:\n ```\n # Benchmark, evals, iterations, total, min, max, median\n-Base58CheckEncode, 5, 320000, 120.772, 7.49351e-05, 7.59374e-05, 7.54759e-05\n-Base58Decode, 5, 800000, 122.833, 3.0467e-05, 3.11732e-05, 3.06304e-05\n-Base58Encode, 5, 470000, 137.094, 5.81061e-05, 5.85109e-05, 5.84462e-05\n-BenchLockedPool, 5, 530, 34.2023, 0.0128247, 0.0129613, 0.0129026\n-CCheckQueueSpeedPrevectorJob, 5, 1400, 26.1762, 0.00365048, 0.00388629, 0.00367108\n-CCoinsCaching, 5, 170000, 48.1074, 5.60229e-05, 5.72316e-05, 5.66214e-05\n-CoinSelection, 5, 650, 34.6426, 0.0105801, 0.0107699, 0.010664\n-DeserializeAndCheckBlockTest, 5, 160, 39.2084, 0.0483662, 0.0494199, 0.0490138\n-DeserializeBlockTest, 5, 130, 23.8129, 0.0357731, 0.0373763, 0.0365858\n-FastRandom_1bit, 5, 440000000, 38.1609, 1.72974e-08, 1.73882e-08, 1.73478e-08\n-FastRandom_32bit, 5, 110000000, 72.8237, 1.29992e-07, 1.37014e-07, 1.30115e-07\n-MempoolEviction, 5, 41000, 89.8883, 0.000432748, 0.000446857, 0.000438483\n-PrevectorClear, 5, 5600, 47.9229, 0.00169952, 0.0017455, 0.00170315\n-PrevectorDestructor, 5, 5700, 44.5498, 0.0015561, 0.00156977, 0.00156469\n-RIPEMD160, 5, 440, 135.988, 0.0615496, 0.062268, 0.0617779\n-RollingBloom, 5, 1500000, 36.5109, 4.80961e-06, 4.97463e-06, 4.85811e-06\n-SHA1, 5, 570, 51.808, 0.018065, 0.0182623, 0.0181865\n-SHA256, 5, 340, 8.31841, 0.00483231, 0.00499803, 0.00485486\n-SHA256_32b, 5, 4700000, 10.469, 4.43441e-07, 4.47611e-07, 4.45223e-07\n-SHA512, 5, 330, 33.3408, 0.02017, 0.0202554, 0.0201921\n-SipHash_32b, 5, 40000000, 38.7088, 1.91103e-07, 1.96998e-07, 1.93792e-07\n-Sleep100ms, 5, 10, 5.01062, 0.100131, 0.100368, 0.100147\n-Trig, 5, 12000000, 5.95494, 9.78115e-08, 1.04354e-07, 9.80682e-08\n-VerifyScriptBench, 5, 6300, 9.02493, 0.000285566, 0.000288433, 0.000286175\n+AssembleBlock, 5, 700, 1.79954, 0.000510913, 0.000517018, 0.000514497\n+...\n ```\n \n Help\n ---------------------\n-`-?` will print a list of options and exit:\n \n-    src/bench/bench_bitcoin -?\n+    src/bench/bench_bitcoin --help\n+\n+To print options like scaling factor or per-benchmark filter.\n \n Notes\n ---------------------\n More benchmarks are needed for, in no particular order:\n - Script Validation\n-- CCoinDBView caching\n - Coins database\n - Memory pool\n-- Wallet coin selection\n+- Cuckoo Cache\n+- P2P throughput\n+\n+Going Further\n+--------------------\n+\n+To monitor Bitcoin Core performance more in depth (like reindex or IBD): https://github.com/chaincodelabs/bitcoinperf\n+\n+To generate Flame Graphs for Bitcoin Core: https://github.com/eklitzke/bitcoin/blob/flamegraphs/doc/flamegraphs.md"
      },
      {
        "sha": "b96862297f52af4acfcca0eb7f9ce3470816fd04",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 17,
        "deletions": 12,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,4 +1,4 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.18.0**):\n+BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.19.0**):\n \n * [`BIP 9`](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/bitcoin/bitcoin/pull/7575))\n * [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n@@ -15,25 +15,30 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.18.0**):\n * [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)). As of **v0.13.0**, this is only available for `NODE_BLOOM` (BIP 111) peers.\n * [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial Merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)). Disabled by default since **v0.19.0**, can be enabled by the `-peerbloomfilters` option.\n * [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n-* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)). Starting **v0.17.0**, whether to send reject messages can be configured with the `-enablebip61` option, and support is deprecated as of **v0.18.0**.\n+* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)). Starting **v0.17.0**, whether to send reject messages can be configured with the `-enablebip61` option, and support is deprecated (disabled by default) as of **v0.18.0**. Support was removed in **v0.20.0** ([PR #15437](https://github.com/bitcoin/bitcoin/pull/15437)).\n * [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n-* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n-* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)). Support can be optionally disabled at build time since **v0.18.0** ([PR 14451](https://github.com/bitcoin/bitcoin/pull/14451)).\n+* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki):\n+  Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n+  Support can be optionally disabled at build time since **v0.18.0** ([PR 14451](https://github.com/bitcoin/bitcoin/pull/14451)),\n+  and it is disabled by default at build time since **v0.19.0** ([PR #15584](https://github.com/bitcoin/bitcoin/pull/15584)).\n+  It has been removed as of **v0.20.0** ([PR 17165](https://github.com/bitcoin/bitcoin/pull/17165)).\n * [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n-* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n-* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*.\n-* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)).\n+* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)). Enabled by default in the wallet GUI as of **v0.18.1** ([PR #11605](https://github.com/bitcoin/bitcoin/pull/11605))\n * [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n * [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n-* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)) and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n+* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 144`](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki): Segregated Witness as of **0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n * [`BIP 145`](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n-* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n+* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068)).\n-* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): The NODE_NETWORK_LIMITED service bit is signalled as of **v0.16.0** ([PR 11740](https://github.com/bitcoin/bitcoin/pull/11740)), and such nodes are connected to as of **v0.17.0** ([PR 10387](https://github.com/bitcoin/bitcoin/pull/10387)).\n-* [`BIP 173`](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki): Bech32 addresses for native Segregated Witness outputs are supported as of **v0.16.0** ([PR 11167](https://github.com/bitcoin/bitcoin/pull/11167)).\n+- [`BIP 158`](https://github.com/bitcoin/bips/blob/master/bip-0158.mediawiki): Compact Block Filters for Light Clients can be indexed as of **v0.19.0** ([PR #14121](https://github.com/bitcoin/bitcoin/pull/14121)).\n+* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): The `NODE_NETWORK_LIMITED` service bit is signalled as of **v0.16.0** ([PR 11740](https://github.com/bitcoin/bitcoin/pull/11740)), and such nodes are connected to as of **v0.17.0** ([PR 10387](https://github.com/bitcoin/bitcoin/pull/10387)).\n+* [`BIP 173`](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki): Bech32 addresses for native Segregated Witness outputs are supported as of **v0.16.0** ([PR 11167](https://github.com/bitcoin/bitcoin/pull/11167)). Bech32 addresses are generated by default as of **v0.20.0** ([PR 16884](https://github.com/bitcoin/bitcoin/pull/16884)).\n * [`BIP 174`](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki): RPCs to operate on Partially Signed Bitcoin Transactions (PSBT) are present as of **v0.17.0** ([PR 13557](https://github.com/bitcoin/bitcoin/pull/13557)).\n * [`BIP 176`](https://github.com/bitcoin/bips/blob/master/bip-0176.mediawiki): Bits Denomination [QT only] is supported as of **v0.16.0** ([PR 12035](https://github.com/bitcoin/bitcoin/pull/12035))."
      },
      {
        "sha": "f4a8edec75c5cf9a9bf04d010e5476698856d15c",
        "filename": "doc/bitcoin-conf.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -50,3 +50,13 @@ rpcport=4000\n The configuration file is not automatically created; you can create it using your favorite text editor. By default, the configuration file name is `bitcoin.conf` and it is located in the Bitcoin data directory, but both the Bitcoin data directory and the configuration file path may be changed using the `-datadir` and `-conf` command-line options.\n \n The `includeconf=<file>` option in the `bitcoin.conf` file can be used to include additional configuration files.\n+\n+### Default configuration file locations\n+\n+Operating System | Data Directory | Example Path\n+-- | -- | --\n+Windows | `%APPDATA%\\Bitcoin\\` | `C:\\Users\\username\\AppData\\Roaming\\Bitcoin\\bitcoin.conf`\n+Linux | `$HOME/.bitcoin/` | `/home/username/.bitcoin/bitcoin.conf`\n+macOS | `$HOME/Library/Application Support/Bitcoin/` | `/Users/username/Library/Application Support/Bitcoin/bitcoin.conf`\n+\n+You can find an example bitcoin.conf file in [share/examples/bitcoin.conf](../share/examples/bitcoin.conf)."
      },
      {
        "sha": "9942449bf61d5f3ed819b5e73b8c12a5020242f1",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -19,7 +19,7 @@ Then install [Homebrew](https://brew.sh).\n \n ## Dependencies\n ```shell\n-brew install automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf python qt libevent qrencode\n+brew install automake berkeley-db4 libtool boost miniupnpc openssl pkg-config python qt libevent qrencode\n ```\n \n See [dependencies.md](dependencies.md) for a complete overview."
      },
      {
        "sha": "d048bdeff567ee0dd91e7fd29f0b555b8cc00abd",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 19,
        "deletions": 8,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -44,7 +44,6 @@ Optional dependencies:\n  miniupnpc   | UPnP Support     | Firewall-jumping support\n  libdb4.8    | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n  qt          | GUI              | GUI toolkit (only needed when GUI enabled)\n- protobuf    | Payments in GUI  | Data interchange format used for payment protocol (only needed when GUI enabled)\n  libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n  univalue    | Utility          | JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)\n  libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n@@ -61,6 +60,14 @@ tuned to conserve memory with additional CXXFLAGS:\n \n     ./configure CXXFLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n \n+Alternatively, or in addition, debugging information can be skipped for compilation. The default compile flags are\n+`-g -O2`, and can be changed with:\n+\n+    ./configure CXXFLAGS=\"-O2\"\n+\n+Finally, clang (often less resource hungry) can be used instead of gcc, which is used by default:\n+\n+    ./configure CXX=clang++ CC=clang\n \n ## Linux Distribution Specific Instructions\n \n@@ -78,7 +85,7 @@ Now, you can either build from self-compiled [depends](/depends/README.md) or in\n \n BerkeleyDB is required for the wallet.\n \n-Ubuntu and Debian have their own libdb-dev and libdb++-dev packages, but these will install\n+Ubuntu and Debian have their own `libdb-dev` and `libdb++-dev` packages, but these will install\n BerkeleyDB 5.1 or later. This will break binary wallet compatibility with the distributed executables, which\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n@@ -88,7 +95,7 @@ Otherwise, you can build from self-compiled `depends` (see above).\n To build Bitcoin Core without wallet, see [*Disable-wallet mode*](/doc/build-unix.md#disable-wallet-mode)\n \n \n-Optional (see --with-miniupnpc and --enable-upnp-default):\n+Optional (see `--with-miniupnpc` and `--enable-upnp-default`):\n \n     sudo apt-get install libminiupnpc-dev\n \n@@ -104,7 +111,7 @@ To build without GUI pass `--without-gui`.\n \n To build with Qt 5 you need the following:\n \n-    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n+    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools\n \n libqrencode (optional) can be installed with:\n \n@@ -122,13 +129,17 @@ Build requirements:\n \n     sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n \n-Optional:\n+Optional (see `--with-miniupnpc` and `--enable-upnp-default`):\n \n     sudo dnf install miniupnpc-devel\n \n+ZMQ dependencies (provides ZMQ API):\n+\n+    sudo dnf install zeromq-devel\n+\n To build with Qt 5 you need the following:\n \n-    sudo dnf install qt5-qttools-devel qt5-qtbase-devel protobuf-devel\n+    sudo dnf install qt5-qttools-devel qt5-qtbase-devel\n \n libqrencode (optional) can be installed with:\n \n@@ -143,8 +154,8 @@ symbols, which reduces the executable size by about 90%.\n miniupnpc\n ---------\n \n-[miniupnpc](http://miniupnp.free.fr/) may be used for UPnP port mapping.  It can be downloaded from [here](\n-http://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n+[miniupnpc](https://miniupnp.tuxfamily.org) may be used for UPnP port mapping.  It can be downloaded from [here](\n+https://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n turned off by default.  See the configure options for upnp behavior desired:\n \n \t--without-miniupnpc      No UPnP support miniupnp not required"
      },
      {
        "sha": "bbff638b90ba25c7c5dfecf0e5c5de73b449f71d",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -8,18 +8,18 @@ The options known to work for building Bitcoin Core on Windows are:\n * On Linux, using the [Mingw-w64](https://mingw-w64.org/doku.php) cross compiler tool chain. Ubuntu Bionic 18.04 is required\n and is the platform used to build the Bitcoin Core Windows release binaries.\n * On Windows, using [Windows\n-Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about) and the Mingw-w64 cross compiler tool chain.\n+Subsystem for Linux (WSL)](https://docs.microsoft.com/windows/wsl/about) and the Mingw-w64 cross compiler tool chain.\n+* On Windows, using a native compiler tool chain such as [Visual Studio](https://www.visualstudio.com).\n \n Other options which may work, but which have not been extensively tested are (please contribute instructions):\n \n-* On Windows, using a POSIX compatibility layer application such as [cygwin](http://www.cygwin.com/) or [msys2](http://www.msys2.org/).\n-* On Windows, using a native compiler tool chain such as [Visual Studio](https://www.visualstudio.com).\n+* On Windows, using a POSIX compatibility layer application such as [cygwin](https://www.cygwin.com/) or [msys2](https://www.msys2.org/).\n \n Installing Windows Subsystem for Linux\n ---------------------------------------\n \n With Windows 10, Microsoft has released a new feature named the [Windows\n-Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about). This\n+Subsystem for Linux (WSL)](https://docs.microsoft.com/windows/wsl/about). This\n feature allows you to run a bash shell directly on Windows in an Ubuntu-based\n environment. Within this environment you can cross compile for Windows without\n the need for a separate Linux VM or server. Note that while WSL can be installed with\n@@ -28,7 +28,7 @@ tested with Ubuntu.\n \n This feature is not supported in versions of Windows prior to Windows 10 or on\n Windows Server SKUs. In addition, it is available [only for 64-bit versions of\n-Windows](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide).\n+Windows](https://docs.microsoft.com/windows/wsl/install-win10).\n \n Full instructions to install WSL are available on the above link.\n To install WSL on Windows 10 with Fall Creators Update installed (version >= 16215.0) do the following:\n@@ -62,8 +62,7 @@ First, install the general dependencies:\n     sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git\n \n A host toolchain (`build-essential`) is necessary because some dependency\n-packages (such as `protobuf`) need to build host utilities that are used in the\n-build process.\n+packages need to build host utilities that are used in the build process.\n \n See [dependencies.md](dependencies.md) for a complete overview.\n "
      },
      {
        "sha": "dc8862676192ceabcf77fa9e7764611c76b3c026",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -19,7 +19,6 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | MiniUPnPc | [2.0.20180203](http://miniupnp.free.fr/files) |  | No |  |  |\n | OpenSSL | [1.0.1k](https://www.openssl.org/source) |  | Yes |  |  |\n | PCRE |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n-| protobuf | [2.6.1](https://github.com/google/protobuf/releases) |  | No |  |  |\n | Python (tests) |  | [3.5](https://www.python.org/downloads) |  |  |  |\n | qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |\n | Qt | [5.9.7](https://download.qt.io/official_releases/qt/) | [5.5.1](https://github.com/bitcoin/bitcoin/issues/13478) | No |  |  |\n@@ -35,7 +34,6 @@ Some dependencies are not needed in all configurations. The following are some f\n #### Options passed to `./configure`\n * MiniUPnPc is not needed with  `--with-miniupnpc=no`.\n * Berkeley DB is not needed with `--disable-wallet`.\n-* protobuf is not needed with `--disable-bip70`.\n * Qt is not needed with `--without-gui`.\n * If the qrencode dependency is absent, QR support won't be added. To force an error when that happens, pass `--with-qrencode`.\n * ZeroMQ is needed only with the `--with-zmq` option."
      },
      {
        "sha": "a98f43737e2740e1e37dd8b18d0eaa0f48e9b024",
        "filename": "doc/descriptors.md",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -23,6 +23,7 @@ Output descriptors currently support:\n - Pay-to-script-hash scripts (P2SH), through the `sh` function.\n - Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n - Multisig scripts, through the `multi` function.\n+- Multisig scripts where the public keys are sorted lexicographically, through the `sortedmulti` function.\n - Any type of supported address through the `addr` function.\n - Raw hex scripts through the `raw` function.\n - Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation paths.\n@@ -37,12 +38,14 @@ Output descriptors currently support:\n - `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` describes an (overly complicated) P2SH-P2WSH-P2PKH output with the specified public key.\n - `multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)` describes a bare *1-of-2* multisig output with keys in the specified order.\n - `sh(multi(2,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe))` describes a P2SH *2-of-2* multisig output with keys in the specified order.\n+- `sh(sortedmulti(2,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01))` describes a P2SH *2-of-2* multisig output with keys sorted lexicographically in the resulting redeemScript.\n - `wsh(multi(2,03a0434d9e47f3c86235477c7b1ae6ae5d3442d49b1943c2b752a68e2a47e247c7,03774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb,03d01115d548e7561b15c38f004d734633687cf4419620095bc5b0f47070afe85a))` describes a P2WSH *2-of-3* multisig output with keys in the specified order.\n - `sh(wsh(multi(1,03f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8,03499fdf9e895e719cfd64e67f07d38e3226aa7b63678949e6e49b241a60e823e4,02d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e)))` describes a P2SH-P2WSH *1-of-3* multisig output with keys in the specified order.\n - `pk(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8)` describes a P2PK output with the public key of the specified xpub.\n - `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2)` describes a P2PKH output with child key *1'/2* of the specified xpub.\n - `pkh([d34db33f/44'/0'/0']xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)` describes a set of P2PKH outputs, but additionally specifies that the specified xpub is a child of a master with fingerprint `d34db33f`, and derived using path `44'/0'/0'`.\n - `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where the first multisig key is the *1/0/`i`* child of the first specified xpub and the second multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default).\n+- `wsh(sortedmulti(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where one multisig key is the *1/0/`i`* child of the first specified xpub and the other multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default). The order of public keys in the resulting witnessScripts is determined by the lexicographic order of the public keys at that index.\n \n ## Reference\n \n@@ -56,6 +59,7 @@ Descriptors consist of several types of expressions. The top level expression is\n - `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n - `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)` and `pkh(KEY)`. If the key is compressed, it also includes `wpkh(KEY)` and `sh(wpkh(KEY))`.\n - `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `sortedmulti(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script with keys sorted lexicographically in the resulting script.\n - `addr(ADDR)` (top level only): the script which ADDR expands to.\n - `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n \n@@ -101,11 +105,12 @@ not contain \"p2\" for brevity.\n \n Several pieces of software use multi-signature (multisig) scripts based\n on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the\n-`multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n*\n+`multi(k,key_1,key_2,...,key_n)` and `sortedmulti(k,key_1,key_2,...,key_n)`\n+functions. They represent a *k-of-n*\n multisig policy, where any *k* out of the *n* provided `KEY` expressions must\n sign.\n \n-Key order is significant. A `multi()` expression describes a multisig script\n+Key order is significant for `multi()`. A `multi()` expression describes a multisig script\n with keys in the specified order, and in a search for TXOs, it will not match\n outputs with multisig scriptPubKeys that have the same keys in a different\n order. Also, to prevent a combinatorial explosion of the search space, if more\n@@ -114,6 +119,10 @@ or `*'`, the `multi()` expression only matches multisig scripts with the `i`th\n child key from each wildcard path in lockstep, rather than scripts with any\n combination of child keys from each wildcard path.\n \n+Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the same way\n+as `multi()` does but the keys are reordered in the resulting script such that they\n+are lexicographically ordered as described in BIP67.\n+\n ### BIP32 derived keys and chains\n \n Most modern wallet software and hardware uses keys that are derived using"
      },
      {
        "sha": "e7fd8102a42788edc543f88be8de7242b33fde1d",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 130,
        "deletions": 98,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -27,7 +27,7 @@ Developer Notes\n     - [General C++](#general-c)\n     - [C++ data structures](#c-data-structures)\n     - [Strings and formatting](#strings-and-formatting)\n-    - [Variable names](#variable-names)\n+    - [Shadowing](#shadowing)\n     - [Threads and synchronization](#threads-and-synchronization)\n     - [Scripts](#scripts)\n         - [Shebang](#shebang)\n@@ -62,7 +62,7 @@ tool to clean up patches automatically before submission.\n   - Braces on the same line for everything else.\n   - 4 space indentation (no tabs) for every block except namespaces.\n   - No indentation for `public`/`protected`/`private` or for `namespace`.\n-  - No extra spaces inside parenthesis; don't do ( this )\n+  - No extra spaces inside parenthesis; don't do ( this ).\n   - No space after function names; one space after `if`, `for` and `while`.\n   - If an `if` only has a single-statement `then`-clause, it can appear\n     on the same line as the `if`, without braces. In every other case,\n@@ -72,12 +72,12 @@ tool to clean up patches automatically before submission.\n - **Symbol naming conventions**. These are preferred in new code, but are not\n required when doing so would need changes to significant pieces of existing\n code.\n-  - Variable (including function arguments) and namespace names are all lowercase, and may use `_` to\n+  - Variable (including function arguments) and namespace names are all lowercase and may use `_` to\n     separate words (snake_case).\n     - Class member variables have a `m_` prefix.\n     - Global variables have a `g_` prefix.\n   - Constant names are all uppercase, and use `_` to separate words.\n-  - Class names, function names and method names are UpperCamelCase\n+  - Class names, function names, and method names are UpperCamelCase\n     (PascalCase). Do not prefix class names with `C`.\n   - Test suite naming convention: The Boost test suite in file\n     `src/test/foo_tests.cpp` should be named `foo_tests`. Test suite names\n@@ -87,7 +87,6 @@ code.\n   - `++i` is preferred over `i++`.\n   - `nullptr` is preferred over `NULL` or `(void*)0`.\n   - `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\n-  - `enum class` is preferred over `enum` where possible. Scoped enumerations avoid two potential pitfalls/problems with traditional C++ enumerations: implicit conversions to int, and name clashes due to enumerators being exported to the surrounding scope.\n \n Block style example:\n ```c++\n@@ -134,6 +133,7 @@ Bitcoin Core uses [Doxygen](http://www.doxygen.nl/) to generate its official doc\n Use Doxygen-compatible comment blocks for functions, methods, and fields.\n \n For example, to describe a function use:\n+\n ```c++\n /**\n  * ... text ...\n@@ -143,11 +143,12 @@ For example, to describe a function use:\n  */\n bool function(int arg1, const char *arg2)\n ```\n+\n A complete list of `@xxx` commands can be found at http://www.doxygen.nl/manual/commands.html.\n As Doxygen recognizes the comments by the delimiters (`/**` and `*/` in this case), you don't\n *need* to provide any commands for a comment to be valid; just a description text is fine.\n \n-To describe a class use the same construct above the class definition:\n+To describe a class, use the same construct above the class definition:\n ```c++\n /**\n  * Alerts are for notifying old versions if they become too obsolete and\n@@ -189,9 +190,9 @@ but the above styles are favored.\n \n Documentation can be generated with `make docs` and cleaned up with `make clean-docs`. The resulting files are located in `doc/doxygen/html`; open `index.html` to view the homepage.\n \n-Before running `make docs`, you will need to install dependencies `doxygen` and `dot`. For example, on MacOS via Homebrew:\n+Before running `make docs`, you will need to install dependencies `doxygen` and `dot`. For example, on macOS via Homebrew:\n ```\n-brew install doxygen --with-graphviz\n+brew install graphviz doxygen\n ```\n \n Development tips and tricks\n@@ -231,7 +232,7 @@ that run in `-regtest` mode.\n Bitcoin Core is a multi-threaded application, and deadlocks or other\n multi-threading bugs can be very difficult to track down. The `--enable-debug`\n configure option adds `-DDEBUG_LOCKORDER` to the compiler flags. This inserts\n-run-time checks to keep track of which locks are held, and adds warnings to the\n+run-time checks to keep track of which locks are held and adds warnings to the\n debug.log file if inconsistencies are detected.\n \n ### Valgrind suppressions file\n@@ -299,7 +300,7 @@ $ perf record \\\n     -p `pgrep bitcoind` -- sleep 60\n ```\n \n-You could then analyze the results by running\n+You could then analyze the results by running:\n \n ```sh\n perf report --stdio | c++filt | less\n@@ -364,7 +365,7 @@ Additional resources:\n Locking/mutex usage notes\n -------------------------\n \n-The code is multi-threaded, and uses mutexes and the\n+The code is multi-threaded and uses mutexes and the\n `LOCK` and `TRY_LOCK` macros to protect data structures.\n \n Deadlocks due to inconsistent lock ordering (thread 1 locks `cs_main` and then\n@@ -383,13 +384,13 @@ Threads\n \n - ThreadScriptCheck : Verifies block scripts.\n \n-- ThreadImport : Loads blocks from blk*.dat files or bootstrap.dat.\n+- ThreadImport : Loads blocks from `blk*.dat` files or `-loadblock=<file>`.\n \n - StartNode : Starts other threads.\n \n - ThreadDNSAddressSeed : Loads addresses of peers from the DNS.\n \n-- ThreadMapPort : Universal plug-and-play startup/shutdown\n+- ThreadMapPort : Universal plug-and-play startup/shutdown.\n \n - ThreadSocketHandler : Sends/Receives data from peers on port 8333.\n \n@@ -408,7 +409,7 @@ Threads\n Ignoring IDE/editor files\n --------------------------\n \n-In closed-source environments in which everyone uses the same IDE it is common\n+In closed-source environments in which everyone uses the same IDE, it is common\n to add temporary files it produces to the project-wide `.gitignore` file.\n \n However, in open source software such as Bitcoin Core, where everyone uses\n@@ -446,33 +447,33 @@ pay attention to for reviewers of Bitcoin Core code.\n General Bitcoin Core\n ----------------------\n \n-- New features should be exposed on RPC first, then can be made available in the GUI\n+- New features should be exposed on RPC first, then can be made available in the GUI.\n \n   - *Rationale*: RPC allows for better automatic testing. The test suite for\n-    the GUI is very limited\n+    the GUI is very limited.\n \n-- Make sure pull requests pass Travis CI before merging\n+- Make sure pull requests pass Travis CI before merging.\n \n   - *Rationale*: Makes sure that they pass thorough testing, and that the tester will keep passing\n-     on the master branch. Otherwise all new pull requests will start failing the tests, resulting in\n-     confusion and mayhem\n+     on the master branch. Otherwise, all new pull requests will start failing the tests, resulting in\n+     confusion and mayhem.\n \n   - *Explanation*: If the test suite is to be updated for a change, this has to\n-    be done first\n+    be done first.\n \n Wallet\n -------\n \n - Make sure that no crashes happen with run-time option `-disablewallet`.\n \n   - *Rationale*: In RPC code that conditionally uses the wallet (such as\n-    `validateaddress`) it is easy to forget that global pointer `pwalletMain`\n+    `validateaddress`), it is easy to forget that global pointer `pwalletMain`\n     can be nullptr. See `test/functional/disablewallet.py` for functional tests\n-    exercising the API with `-disablewallet`\n+    exercising the API with `-disablewallet`.\n \n-- Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set\n+- Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set.\n \n-  - *Rationale*: Otherwise compilation of the disable-wallet build will fail in environments without BerkeleyDB\n+  - *Rationale*: Otherwise compilation of the disable-wallet build will fail in environments without BerkeleyDB.\n \n General C++\n -------------\n@@ -483,54 +484,54 @@ Guidelines](https://isocpp.github.io/CppCoreGuidelines/).\n Common misconceptions are clarified in those sections:\n \n - Passing (non-)fundamental types in the [C++ Core\n-  Guideline](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-conventional)\n+  Guideline](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-conventional).\n \n-- Assertions should not have side-effects\n+- Assertions should not have side-effects.\n \n   - *Rationale*: Even though the source code is set to refuse to compile\n     with assertions disabled, having side-effects in assertions is unexpected and\n-    makes the code harder to understand\n+    makes the code harder to understand.\n \n-- If you use the `.h`, you must link the `.cpp`\n+- If you use the `.h`, you must link the `.cpp`.\n \n   - *Rationale*: Include files define the interface for the code in implementation files. Including one but\n       not linking the other is confusing. Please avoid that. Moving functions from\n-      the `.h` to the `.cpp` should not result in build errors\n+      the `.h` to the `.cpp` should not result in build errors.\n \n-- Use the RAII (Resource Acquisition Is Initialization) paradigm where possible. For example by using\n+- Use the RAII (Resource Acquisition Is Initialization) paradigm where possible. For example, by using\n   `unique_ptr` for allocations in a function.\n \n-  - *Rationale*: This avoids memory and resource leaks, and ensures exception safety\n+  - *Rationale*: This avoids memory and resource leaks, and ensures exception safety.\n \n-- Use `MakeUnique()` to construct objects owned by `unique_ptr`s\n+- Use `MakeUnique()` to construct objects owned by `unique_ptr`s.\n \n   - *Rationale*: `MakeUnique` is concise and ensures exception safety in complex expressions.\n     `MakeUnique` is a temporary project local implementation of `std::make_unique` (C++14).\n \n C++ data structures\n --------------------\n \n-- Never use the `std::map []` syntax when reading from a map, but instead use `.find()`\n+- Never use the `std::map []` syntax when reading from a map, but instead use `.find()`.\n \n   - *Rationale*: `[]` does an insert (of the default element) if the item doesn't\n     exist in the map yet. This has resulted in memory leaks in the past, as well as\n-    race conditions (expecting read-read behavior). Using `[]` is fine for *writing* to a map\n+    race conditions (expecting read-read behavior). Using `[]` is fine for *writing* to a map.\n \n - Do not compare an iterator from one data structure with an iterator of\n-  another data structure (even if of the same type)\n+  another data structure (even if of the same type).\n \n   - *Rationale*: Behavior is undefined. In C++ parlor this means \"may reformat\n-    the universe\", in practice this has resulted in at least one hard-to-debug crash bug\n+    the universe\", in practice this has resulted in at least one hard-to-debug crash bug.\n \n - Watch out for out-of-bounds vector access. `&vch[vch.size()]` is illegal,\n   including `&vch[0]` for an empty vector. Use `vch.data()` and `vch.data() +\n   vch.size()` instead.\n \n-- Vector bounds checking is only enabled in debug mode. Do not rely on it\n+- Vector bounds checking is only enabled in debug mode. Do not rely on it.\n \n - Initialize all non-static class members where they are defined.\n   If this is skipped for a good reason (i.e., optimization on the critical\n-  path), add an explicit comment about this\n+  path), add an explicit comment about this.\n \n   - *Rationale*: Ensure determinism by avoiding accidental use of uninitialized\n     values. Also, static analyzers balk about this.\n@@ -554,30 +555,58 @@ class A\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API.\n   This type can be signed or unsigned depending on the architecture, which can\n   lead to interoperability problems or dangerous conditions such as\n-  out-of-bounds array accesses\n+  out-of-bounds array accesses.\n \n-- Prefer explicit constructions over implicit ones that rely on 'magical' C++ behavior\n+- Prefer explicit constructions over implicit ones that rely on 'magical' C++ behavior.\n \n   - *Rationale*: Easier to understand what is happening, thus easier to spot mistakes, even for those\n-  that are not language lawyers\n+  that are not language lawyers.\n+\n+- Prefer `enum class` (scoped enumerations) over `enum` (traditional enumerations) where possible.\n+\n+  - *Rationale*: Scoped enumerations avoid two potential pitfalls/problems with traditional C++ enumerations: implicit conversions to `int`, and name clashes due to enumerators being exported to the surrounding scope.\n+\n+- `switch` statement on an enumeration example:\n+\n+```cpp\n+enum class Tabs {\n+    INFO,\n+    CONSOLE,\n+    GRAPH,\n+    PEERS\n+};\n+\n+int GetInt(Tabs tab)\n+{\n+    switch (tab) {\n+    case Tabs::INFO: return 0;\n+    case Tabs::CONSOLE: return 1;\n+    case Tabs::GRAPH: return 2;\n+    case Tabs::PEERS: return 3;\n+    } // no default case, so the compiler can warn about missing cases\n+    assert(false);\n+}\n+```\n+\n+*Rationale*: The comment documents skipping `default:` label, and it complies with `clang-format` rules. The assertion prevents firing of `-Wreturn-type` warning on some compilers.\n \n Strings and formatting\n ------------------------\n \n - Be careful of `LogPrint` versus `LogPrintf`. `LogPrint` takes a `category` argument, `LogPrintf` does not.\n \n   - *Rationale*: Confusion of these can result in runtime exceptions due to\n-    formatting mismatch, and it is easy to get wrong because of subtly similar naming\n+    formatting mismatch, and it is easy to get wrong because of subtly similar naming.\n \n-- Use `std::string`, avoid C string manipulation functions\n+- Use `std::string`, avoid C string manipulation functions.\n \n   - *Rationale*: C++ string handling is marginally safer, less scope for\n-    buffer overflows and surprises with `\\0` characters. Also some C string manipulations\n-    tend to act differently depending on platform, or even the user locale\n+    buffer overflows, and surprises with `\\0` characters. Also, some C string manipulations\n+    tend to act differently depending on platform, or even the user locale.\n \n-- Use `ParseInt32`, `ParseInt64`, `ParseUInt32`, `ParseUInt64`, `ParseDouble` from `utilstrencodings.h` for number parsing\n+- Use `ParseInt32`, `ParseInt64`, `ParseUInt32`, `ParseUInt64`, `ParseDouble` from `utilstrencodings.h` for number parsing.\n \n-  - *Rationale*: These functions do overflow checking, and avoid pesky locale issues.\n+  - *Rationale*: These functions do overflow checking and avoid pesky locale issues.\n \n - Avoid using locale dependent functions if possible. You can use the provided\n   [`lint-locale-dependence.sh`](/test/lint/lint-locale-dependence.sh)\n@@ -607,48 +636,54 @@ Strings and formatting\n     `wcstoll`, `wcstombs`, `wcstoul`, `wcstoull`, `wcstoumax`, `wcswidth`,\n     `wcsxfrm`, `wctob`, `wctomb`, `wctrans`, `wctype`, `wcwidth`, `wprintf`\n \n-- For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n+- For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers.\n \n-  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion.\n \n-Variable names\n---------------\n+- Use `.c_str()` sparingly. Its only valid use is to pass C++ strings to C functions that take NULL-terminated\n+  strings.\n \n-Although the shadowing warning (`-Wshadow`) is not enabled by default (it prevents issues rising\n-from using a different variable with the same name),\n-please name variables so that their names do not shadow variables defined in the source code.\n+  - Do not use it when passing a sized array (so along with `.size()`). Use `.data()` instead to get a pointer\n+    to the raw data.\n \n-E.g. in member initializers, prepend `_` to the argument name shadowing the\n-member name:\n+    - *Rationale*: Although this is guaranteed to be safe starting with C++11, `.data()` communicates the intent better.\n \n-```c++\n-class AddressBookPage\n-{\n-    Mode m_mode;\n-}\n+  - Do not use it when passing strings to `tfm::format`, `strprintf`, `LogPrint[f]`.\n \n-AddressBookPage::AddressBookPage(Mode _mode)\n-    : m_mode(_mode)\n-...\n-```\n+    - *Rationale*: This is redundant. Tinyformat handles strings.\n \n-When using nested cycles, do not name the inner cycle variable the same as in\n-upper cycle etc.\n+  - Do not use it to convert to `QString`. Use `QString::fromStdString()`.\n+\n+    - *Rationale*: Qt has built-in functionality for converting their string\n+      type from/to C++. No need to roll your own.\n+\n+  - In cases where do you call `.c_str()`, you might want to additionally check that the string does not contain embedded '\\0' characters, because\n+    it will (necessarily) truncate the string. This might be used to hide parts of the string from logging or to circumvent\n+    checks. If a use of strings is sensitive to this, take care to check the string for embedded NULL characters first\n+    and reject it if there are any (see `ParsePrechecks` in `strencodings.cpp` for an example).\n+\n+Shadowing\n+--------------\n \n+Although the shadowing warning (`-Wshadow`) is not enabled by default (it prevents issues arising\n+from using a different variable with the same name),\n+please name variables so that their names do not shadow variables defined in the source code.\n+\n+When using nested cycles, do not name the inner cycle variable the same as in\n+the upper cycle, etc.\n \n Threads and synchronization\n ----------------------------\n \n - Build and run tests with `-DDEBUG_LOCKORDER` to verify that no potential\n   deadlocks are introduced. As of 0.12, this is defined by default when\n-  configuring with `--enable-debug`\n+  configuring with `--enable-debug`.\n \n - When using `LOCK`/`TRY_LOCK` be aware that the lock exists in the context of\n   the current scope, so surround the statement and the code that needs the lock\n-  with braces\n+  with braces.\n \n   OK:\n-\n ```c++\n {\n     TRY_LOCK(cs_vNodes, lockNodes);\n@@ -657,7 +692,6 @@ Threads and synchronization\n ```\n \n   Wrong:\n-\n ```c++\n TRY_LOCK(cs_vNodes, lockNodes);\n {\n@@ -679,13 +713,11 @@ Scripts\n     `#!/usr/bin/env bash` searches the user's PATH to find the bash binary.\n \n   OK:\n-\n ```bash\n #!/usr/bin/env bash\n ```\n \n   Wrong:\n-\n ```bash\n #!/bin/bash\n ```\n@@ -694,9 +726,9 @@ Source code organization\n --------------------------\n \n - Implementation code should go into the `.cpp` file and not the `.h`, unless necessary due to template usage or\n-  when performance due to inlining is critical\n+  when performance due to inlining is critical.\n \n-  - *Rationale*: Shorter and simpler header files are easier to read, and reduce compile time\n+  - *Rationale*: Shorter and simpler header files are easier to read and reduce compile time.\n \n - Use only the lowercase alphanumerics (`a-z0-9`), underscore (`_`) and hyphen (`-`) in source code filenames.\n \n@@ -714,7 +746,7 @@ Source code organization\n - Don't import anything into the global namespace (`using namespace ...`). Use\n   fully specified types such as `std::string`.\n \n-  - *Rationale*: Avoids symbol conflicts\n+  - *Rationale*: Avoids symbol conflicts.\n \n - Terminate namespaces with a comment (`// namespace mynamespace`). The comment\n   should be placed on the same line as the brace closing the namespace, e.g.\n@@ -729,7 +761,7 @@ namespace {\n } // namespace\n ```\n \n-  - *Rationale*: Avoids confusion about the namespace context\n+  - *Rationale*: Avoids confusion about the namespace context.\n \n - Use `#include <primitives/transaction.h>` bracket syntax instead of\n   `#include \"primitives/transactions.h\"` quote syntax.\n@@ -752,13 +784,13 @@ namespace {\n GUI\n -----\n \n-- Do not display or manipulate dialogs in model code (classes `*Model`)\n+- Do not display or manipulate dialogs in model code (classes `*Model`).\n \n   - *Rationale*: Model classes pass through events and data from the core, they\n     should not interact with the user. That's where View classes come in. The converse also\n     holds: try to not directly access core data structures from Views.\n \n-- Avoid adding slow or blocking code in the GUI thread. In particular do not\n+- Avoid adding slow or blocking code in the GUI thread. In particular, do not\n   add new `interfaces::Node` and `interfaces::Wallet` method calls, even if they\n   may be fast now, in case they are changed to lock or communicate across\n   processes in the future.\n@@ -777,12 +809,12 @@ Subtrees\n Several parts of the repository are subtrees of software maintained elsewhere.\n \n Some of these are maintained by active developers of Bitcoin Core, in which case changes should probably go\n-directly upstream without being PRed directly against the project.  They will be merged back in the next\n+directly upstream without being PRed directly against the project. They will be merged back in the next\n subtree merge.\n \n-Others are external projects without a tight relationship with our project.  Changes to these should also\n-be sent upstream but bugfixes may also be prudent to PR against Bitcoin Core so that they can be integrated\n-quickly.  Cosmetic changes should be purely taken upstream.\n+Others are external projects without a tight relationship with our project. Changes to these should also\n+be sent upstream, but bugfixes may also be prudent to PR against Bitcoin Core so that they can be integrated\n+quickly. Cosmetic changes should be purely taken upstream.\n \n There is a tool in `test/lint/git-subtree-check.sh` to check a subtree directory for consistency with\n its upstream repository.\n@@ -812,11 +844,11 @@ you must be aware of.\n \n ### File Descriptor Counts\n \n-In most configurations we use the default LevelDB value for `max_open_files`,\n+In most configurations, we use the default LevelDB value for `max_open_files`,\n which is 1000 at the time of this writing. If LevelDB actually uses this many\n-file descriptors it will cause problems with Bitcoin's `select()` loop, because\n+file descriptors, it will cause problems with Bitcoin's `select()` loop, because\n it may cause new sockets to be created where the fd value is >= 1024. For this\n-reason, on 64-bit Unix systems we rely on an internal LevelDB optimization that\n+reason, on 64-bit Unix systems, we rely on an internal LevelDB optimization that\n uses `mmap()` + `close()` to open table files without actually retaining\n references to the table file descriptors. If you are upgrading LevelDB, you must\n sanity check the changes to make sure that this assumption remains valid.\n@@ -841,14 +873,14 @@ details.\n \n It is possible for LevelDB changes to inadvertently change consensus\n compatibility between nodes. This happened in Bitcoin 0.8 (when LevelDB was\n-first introduced). When upgrading LevelDB you should review the upstream changes\n+first introduced). When upgrading LevelDB, you should review the upstream changes\n to check for issues affecting consensus compatibility.\n \n For example, if LevelDB had a bug that accidentally prevented a key from being\n returned in an edge case, and that bug was fixed upstream, the bug \"fix\" would\n-be an incompatible consensus change. In this situation the correct behavior\n+be an incompatible consensus change. In this situation, the correct behavior\n would be to revert the upstream fix before applying the updates to Bitcoin's\n-copy of LevelDB. In general you should be wary of any upstream changes affecting\n+copy of LevelDB. In general, you should be wary of any upstream changes affecting\n what data is returned from LevelDB queries.\n \n Scripted diffs\n@@ -867,7 +899,7 @@ To create a scripted-diff:\n     - `-BEGIN VERIFY SCRIPT-`\n     - `-END VERIFY SCRIPT-`\n \n-The scripted-diff is verified by the tool `test/lint/commit-script-check.sh`. The tool's default behavior when supplied\n+The scripted-diff is verified by the tool `test/lint/commit-script-check.sh`. The tool's default behavior, when supplied\n with a commit is to verify all scripted-diffs from the beginning of time up to said commit. Internally, the tool passes\n the first supplied argument to `git rev-list --reverse` to determine which commits to verify script-diffs for, ignoring\n commits that don't conform to the commit message format described above.\n@@ -900,23 +932,23 @@ RPC interface guidelines\n \n A few guidelines for introducing and reviewing new RPC interfaces:\n \n-- Method naming: use consecutive lower-case names such as `getrawtransaction` and `submitblock`\n+- Method naming: use consecutive lower-case names such as `getrawtransaction` and `submitblock`.\n \n-  - *Rationale*: Consistency with existing interface.\n+  - *Rationale*: Consistency with the existing interface.\n \n - Argument naming: use snake case `fee_delta` (and not, e.g. camel case `feeDelta`)\n \n-  - *Rationale*: Consistency with existing interface.\n+  - *Rationale*: Consistency with the existing interface.\n \n - Use the JSON parser for parsing, don't manually parse integers or strings from\n   arguments unless absolutely necessary.\n \n   - *Rationale*: Introduces hand-rolled string manipulation code at both the caller and callee sites,\n-    which is error prone, and it is easy to get things such as escaping wrong.\n+    which is error-prone, and it is easy to get things such as escaping wrong.\n     JSON already supports nested data structures, no need to re-invent the wheel.\n \n   - *Exception*: AmountFromValue can parse amounts as string. This was introduced because many JSON\n-    parsers and formatters hard-code handling decimal numbers as floating point\n+    parsers and formatters hard-code handling decimal numbers as floating-point\n     values, resulting in potential loss of precision. This is unacceptable for\n     monetary values. **Always** use `AmountFromValue` and `ValueFromAmount` when\n     inputting or outputting monetary values. The only exceptions to this are\n@@ -925,7 +957,7 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n \n - Missing arguments and 'null' should be treated the same: as default values. If there is no\n   default value, both cases should fail in the same way. The easiest way to follow this\n-  guideline is detect unspecified arguments with `params[x].isNull()` instead of\n+  guideline is to detect unspecified arguments with `params[x].isNull()` instead of\n   `params.size() <= x`. The former returns true if the argument is either null or missing,\n   while the latter returns true if is missing, and false if it is null.\n \n@@ -959,15 +991,15 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n     from there.\n \n - A RPC method must either be a wallet method or a non-wallet method. Do not\n-  introduce new methods that differ in behavior based on presence of a wallet.\n+  introduce new methods that differ in behavior based on the presence of a wallet.\n \n   - *Rationale*: as well as complicating the implementation and interfering\n     with the introduction of multi-wallet, wallet and non-wallet code should be\n     separated to avoid introducing circular dependencies between code units.\n \n - Try to make the RPC response a JSON object.\n \n-  - *Rationale*: If a RPC response is not a JSON object then it is harder to avoid API breakage if\n+  - *Rationale*: If a RPC response is not a JSON object, then it is harder to avoid API breakage if\n     new data in the response is needed.\n \n - Wallet RPCs call BlockUntilSyncedToCurrentChain to maintain consistency with"
      },
      {
        "sha": "c2296b45fa36e2e20411f81c730f772789dbf99d",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 102,
        "deletions": 37,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,37 +1,102 @@\n-Filename            | Description\n---------------------|----------------------------------------------------------------------------------------------------------------------------\n-banlist.dat         | stores the IPs/Subnets of banned nodes\n-bitcoin.conf        | contains configuration settings for bitcoind or bitcoin-qt\n-bitcoind.pid        | stores the process id of bitcoind while running\n-blocks/blk000??.dat | block data (custom, 128 MiB per file); since 0.8.0\n-blocks/rev000??.dat | block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n-blocks/index/*      | block index (LevelDB); since 0.8.0\n-chainstate/*        | blockchain state database (LevelDB); since 0.8.0\n-database/*          | BDB database environment; only used for wallet since 0.8.0; moved to wallets/ directory on new installs since 0.16.0\n-db.log              | wallet database log file; moved to wallets/ directory on new installs since 0.16.0\n-debug.log           | contains debug information and general logging generated by bitcoind or bitcoin-qt\n-fee_estimates.dat   | stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n-indexes/txindex/*   | optional transaction index database (LevelDB); since 0.17.0\n-mempool.dat         | dump of the mempool's transactions; since 0.14.0\n-peers.dat           | peer IP address database (custom format); since 0.7.0\n-wallet.dat          | personal wallet (BDB) with keys and transactions; moved to wallets/ directory on new installs since 0.16.0\n-wallets/database/*  | BDB database environment; used for wallets since 0.16.0\n-wallets/db.log      | wallet database log file; since 0.16.0\n-wallets/wallet.dat  | personal wallet (BDB) with keys and transactions; since 0.16.0\n-.cookie             | session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n-onion_private_key   | cached Tor hidden service private key for `-listenonion`: since 0.12.0\n-guisettings.ini.bak | backup of former GUI settings after `-resetguisettings` is used\n-\n-Only used in pre-0.8.0\n----------------------\n-* blktree/*; block chain index (LevelDB); since pre-0.8, replaced by blocks/index/* in 0.8.0\n-* coins/*; unspent transaction output database (LevelDB); since pre-0.8, replaced by chainstate/* in 0.8.0\n-\n-Only used before 0.8.0\n----------------------\n-* blkindex.dat: block chain index database (BDB); replaced by {chainstate/*,blocks/index/*,blocks/rev000??.dat} in 0.8.0\n-* blk000?.dat: block data (custom, 2 GiB per file); replaced by blocks/blk000??.dat in 0.8.0\n-\n-Only used before 0.7.0\n----------------------\n-* addr.dat: peer IP address database (BDB); replaced by peers.dat in 0.7.0\n+# Bitcoin Core file system\n+\n+**Contents**\n+\n+- [Data directory location](#data-directory-location)\n+\n+- [Data directory layout](#data-directory-layout)\n+\n+- [Multi-wallet environment](#multi-wallet-environment)\n+\n+- [GUI settings](#gui-settings)\n+\n+- [Legacy subdirectories and files](#legacy-subdirectories-and-files)\n+\n+- [Notes](#notes)\n+\n+## Data directory location\n+\n+The data directory is the default location where the Bitcoin Core files are stored.\n+\n+1. The default data directory paths for supported platforms are:\n+\n+Platform | Data directory path\n+---------|--------------------\n+Linux    | `$HOME/.bitcoin/`\n+macOS    | `$HOME/Library/Application Support/Bitcoin/`\n+Windows  | `%APPDATA%\\Bitcoin\\` <sup>[\\[1\\]](#note1)</sup>\n+\n+2. The non-default data directory path can be specified by `-datadir` option.\n+\n+3. All content of the data directory, except for `bitcoin.conf` file, is chain-specific. This means the actual data directory paths for non-mainnet cases differ:\n+\n+Chain option        | Data directory path\n+--------------------|--------------------\n+no option (mainnet) | *path_to_datadir*`/`\n+`-testnet`          | *path_to_datadir*`/testnet3/`\n+`-regtest`          | *path_to_datadir*`/regtest/`\n+\n+## Data directory layout\n+\n+Subdirectory       | File(s)               | Description\n+-------------------|-----------------------|------------\n+`blocks/`          |                       | Blocks directory; can be specified by `-blocksdir` option (except for `blocks/index/`)\n+`blocks/index/`    | LevelDB database      | Block index; `-blocksdir` option does not affect this path\n+`blocks/`          | `blkNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Actual Bitcoin blocks (in network format, dumped in raw on disk, 128 MiB per file)\n+`blocks/`          | `revNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Block undo data (custom format)\n+`chainstate/`      | LevelDB database      | Blockchain state (a compact representation of all currently unspent transaction outputs and some metadata about the transactions they are from)\n+`indexes/txindex/` | LevelDB database      | Transaction index; *optional*, used if `-txindex=1`\n+`indexes/blockfilter/basic/db/` | LevelDB database      | Blockfilter index LevelDB database for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n+`indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n+`wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, a wallet resides in the data directory\n+`./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n+`./`               | `bitcoin.conf`        | Contains [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`; can be specified by `-conf` option\n+`./`               | `bitcoind.pid`        | Stores the process ID (PID) of `bitcoind` or `bitcoin-qt` while running; created at start and deleted on shutdown; can be specified by `-pid` option\n+`./`               | `debug.log`           | Contains debug information and general logging generated by `bitcoind` or `bitcoin-qt`; can be specified by `-debuglogfile` option\n+`./`               | `fee_estimates.dat`   | Stores statistics used to estimate minimum transaction fees and priorities required for confirmation\n+`./`               | `guisettings.ini.bak` | Backup of former [GUI settings](#gui-settings) after `-resetguisettings` option is used\n+`./`               | `mempool.dat`         | Dump of the mempool's transactions\n+`./`               | `onion_private_key`   | Cached Tor hidden service private key for `-listenonion` option\n+`./`               | `peers.dat`           | Peer IP address database (custom format)\n+`./`               | `.cookie`             | Session RPC authentication cookie; if used, created at start and deleted on shutdown; can be specified by `-rpccookiefile` option\n+`./`               | `.lock`               | Data directory lock file\n+\n+## Multi-wallet environment\n+\n+Wallets are Berkeley DB (BDB) databases:\n+\n+Subdirectory | File(s)           | Description\n+-------------|-------------------|------------\n+`database/`  | BDB logging files | Part of BDB environment; created at start and deleted on shutdown; a user *must keep it as safe* as personal wallet `wallet.dat`\n+`./`         | `db.log`          | BDB error file\n+`./`         | `wallet.dat`      | Personal wallet (BDB) with keys and transactions\n+`./`         | `.walletlock`     | Wallet lock file\n+\n+1. Each user-defined wallet named \"wallet_name\" resides in `wallets/wallet_name/` subdirectory.\n+\n+2. The default (unnamed) wallet resides in `wallets/` subdirectory; if the latter does not exist, the wallet resides in the data directory.\n+\n+3. A wallet database path can be specified by `-wallet` option.\n+\n+## GUI settings\n+\n+`bitcoin-qt` uses [`QSettings`](https://doc.qt.io/qt-5/qsettings.html) class; this implies platform-specific [locations where application settings are stored](https://doc.qt.io/qt-5/qsettings.html#locations-where-application-settings-are-stored).\n+\n+## Legacy subdirectories and files\n+\n+These subdirectories and files are no longer used by the Bitcoin Core:\n+\n+Path           | Description | Repository notes\n+---------------|-------------|-----------------\n+`blktree/`     | Blockchain index; replaced by `blocks/index/` in [0.8.0](https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.8.0.md#improvements) | [PR #2231](https://github.com/bitcoin/bitcoin/pull/2231), [`8fdc94cc`](https://github.com/bitcoin/bitcoin/commit/8fdc94cc8f0341e96b1edb3a5b56811c0b20bd15)\n+`coins/`       | Unspent transaction output database; replaced by `chainstate/` in 0.8.0 | [PR #2231](https://github.com/bitcoin/bitcoin/pull/2231), [`8fdc94cc`](https://github.com/bitcoin/bitcoin/commit/8fdc94cc8f0341e96b1edb3a5b56811c0b20bd15)\n+`blkindex.dat` | Blockchain index BDB database; replaced by {`chainstate/`, `blocks/index/`, `blocks/revNNNNN.dat`<sup>[\\[2\\]](#note2)</sup>} in 0.8.0 | [PR #1677](https://github.com/bitcoin/bitcoin/pull/1677)\n+`blk000?.dat`  | Block data (custom format, 2 GiB per file); replaced by `blocks/blkNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> in 0.8.0 | [PR #1677](https://github.com/bitcoin/bitcoin/pull/1677)\n+`addr.dat`     | Peer IP address BDB database; replaced by `peers.dat` in [0.7.0](https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.7.0.md) | [PR #1198](https://github.com/bitcoin/bitcoin/pull/1198), [`928d3a01`](https://github.com/bitcoin/bitcoin/commit/928d3a011cc66c7f907c4d053f674ea77dc611cc)\n+\n+## Notes\n+\n+<a name=\"note1\">1</a>. The `/` (slash, U+002F) is used as the platform-independent path component separator in this paper.\n+\n+<a name=\"note2\">2</a>. `NNNNN` matches `[0-9]{5}` regex.\n+"
      },
      {
        "sha": "50e9251b8d4aca7a9f269bc3dfc2babf9829c70e",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -77,13 +77,13 @@ will print an error and suggestion if so.\n \n ## libFuzzer\n \n-A recent version of `clang`, the address sanitizer and libFuzzer is needed (all\n+A recent version of `clang`, the address/undefined sanitizers (ASan/UBSan) and libFuzzer is needed (all\n found in the `compiler-rt` runtime libraries package).\n \n To build all fuzz targets with libFuzzer, run\n \n ```\n-./configure --disable-ccache --enable-fuzz --with-sanitizers=fuzzer,address CC=clang CXX=clang++\n+./configure --disable-ccache --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++\n make\n ```\n "
      },
      {
        "sha": "0b327aab581a5a8fc6f018c722cc4758793b1180",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -53,17 +53,17 @@ Paths\n \n All three configurations assume several paths that might need to be adjusted.\n \n-Binary:              `/usr/bin/bitcoind`  \n-Configuration file:  `/etc/bitcoin/bitcoin.conf`  \n-Data directory:      `/var/lib/bitcoind`  \n+Binary:              `/usr/bin/bitcoind`\n+Configuration file:  `/etc/bitcoin/bitcoin.conf`\n+Data directory:      `/var/lib/bitcoind`\n PID file:            `/var/run/bitcoind/bitcoind.pid` (OpenRC and Upstart) or `/run/bitcoind/bitcoind.pid` (systemd)\n-Lock file:           `/var/lock/subsys/bitcoind` (CentOS)  \n+Lock file:           `/var/lock/subsys/bitcoind` (CentOS)\n \n-The configuration file, PID directory (if applicable) and data directory\n-should all be owned by the bitcoin user and group.  It is advised for security\n-reasons to make the configuration file and data directory only readable by the\n-bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n-can then be controlled by group membership.\n+The PID directory (if applicable) and data directory should both be owned by the\n+bitcoin user and group. It is advised for security reasons to make the\n+configuration file and data directory only readable by the bitcoin user and\n+group. Access to bitcoin-cli and other bitcoind rpc clients can then be\n+controlled by group membership.\n \n NOTE: When using the systemd .service file, the creation of the aforementioned\n directories and the setting of their permissions is automatically handled by\n@@ -83,10 +83,10 @@ OpenRC).\n \n ### macOS\n \n-Binary:              `/usr/local/bin/bitcoind`  \n-Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n-Data directory:      `~/Library/Application Support/Bitcoin`  \n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`  \n+Binary:              `/usr/local/bin/bitcoind`\n+Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`\n+Data directory:      `~/Library/Application Support/Bitcoin`\n+Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n \n Installing Service Configuration\n -----------------------------------"
      },
      {
        "sha": "1957fb736e5a9ed58669dc27a9d908b950f088ec",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -179,10 +179,6 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n unless \\fB\\-connect\\fR used)\n .HP\n-\\fB\\-enablebip61\\fR\n-.IP\n-Send reject messages per BIP61 (default: 0)\n-.HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n Specify your own public address"
      },
      {
        "sha": "b0aff99ca2a6b7d6d4c3ee6b8c2488b59ec5ac99",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -179,10 +179,6 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n unless \\fB\\-connect\\fR used)\n .HP\n-\\fB\\-enablebip61\\fR\n-.IP\n-Send reject messages per BIP61 (default: 0)\n-.HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n Specify your own public address"
      },
      {
        "sha": "397a907f17c00f64c9404f9a2d4d1810077b05e6",
        "filename": "doc/rapidcheck.md",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/rapidcheck.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/rapidcheck.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/rapidcheck.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,84 @@\n+# RapidCheck property-based testing for Bitcoin Core\n+\n+## Concept\n+\n+Property-based testing is experimentally being added to Bitcoin Core with\n+[RapidCheck](https://github.com/emil-e/rapidcheck), a C++ framework for\n+property-based testing inspired by the Haskell library\n+[QuickCheck](https://hackage.haskell.org/package/QuickCheck).\n+\n+RapidCheck performs random testing of program properties. A specification of the\n+program is given in the form of properties which functions should satisfy, and\n+RapidCheck tests that the properties hold in a large number of randomly\n+generated cases.\n+\n+If an exception is found, RapidCheck tries to find the smallest case, for some\n+definition of smallest, for which the property is still false and displays it as\n+a counter-example. For example, if the input is an integer, RapidCheck tries to\n+find the smallest integer for which the property is false.\n+\n+## Running\n+\n+If RapidCheck is installed, Bitcoin Core will automatically run the\n+property-based tests with the unit tests during `make check`, unless the\n+`--without-rapidcheck` flag is passed when configuring.\n+\n+For more information, run `./configure --help` and see `--with-rapidcheck` under\n+Optional Packages.\n+\n+## Setup\n+\n+The following instructions have been tested with Linux Debian and macOS.\n+\n+1. Clone the RapidCheck source code and cd into the repository.\n+\n+    ```shell\n+    git clone https://github.com/emil-e/rapidcheck.git\n+    cd rapidcheck\n+    ```\n+\n+2. Build RapidCheck (requires CMake to be installed).\n+\n+    ```shell\n+    cmake -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DRC_ENABLE_BOOST_TEST=ON $(pwd)\n+    make && make install\n+    ```\n+\n+3. Configure Bitcoin Core with RapidCheck.\n+\n+    `cd` to the directory of your local bitcoin repository and run\n+    `./configure`. In the output you should see:\n+\n+    ```shell\n+    checking rapidcheck.h usability... yes\n+    checking rapidcheck.h presence... yes\n+    checking for rapidcheck.h... yes\n+    [...]\n+    Options used to compile and link:\n+    [...]\n+      with test     = yes\n+        with prop   = yes\n+    ```\n+\n+4. Build Bitcoin Core with RapidCheck.\n+\n+    Now you can run `make` and should see the property-based tests compiled with\n+    the unit tests:\n+\n+    ```shell\n+    Making all in src\n+    [...]\n+    CXX      test/gen/test_bitcoin-crypto_gen.o\n+    CXX      test/test_bitcoin-key_properties.o\n+    ```\n+\n+5. Run the unit tests with `make check`. The property-based tests will be run\n+   with the unit tests.\n+\n+    ```shell\n+    Running tests: crypto_tests from test/crypto_tests.cpp\n+    [...]\n+    Running tests: key_properties from test/key_properties.cpp\n+    ```\n+\n+That's it! You are now running property-based tests in Bitcoin Core."
      },
      {
        "sha": "21867b7fb2f5245abe3c9748c0619358082cf7c8",
        "filename": "doc/release-notes-0.18.1-16257.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-0.18.1-16257.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-0.18.1-16257.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-0.18.1-16257.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,6 +0,0 @@\n-Wallet changes\n---------------\n-When creating a transaction with a fee above `-maxtxfee` (default 0.1 BTC),\n-the RPC commands `walletcreatefundedpsbt` and  `fundrawtransaction` will now fail\n-instead of rounding down the fee. Beware that the `feeRate` argument is specified\n-in BTC per kilobyte, not satoshi per byte."
      },
      {
        "sha": "a500aceb0f081715daab62021c0f145b838aefcf",
        "filename": "doc/release-notes-13756.md",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-13756.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-13756.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-13756.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,41 +0,0 @@\n-Coin selection\n---------------\n-\n-### Reuse Avoidance\n-\n-A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n-a wallet will distinguish between used and unused addresses, and default to not\n-use the former in coin selection.\n-\n-Rescanning the blockchain is required, to correctly mark previously\n-used destinations.\n-\n-Together with \"avoid partial spends\" (present as of Bitcoin v0.17), this\n-addresses a serious privacy issue where a malicious user can track spends by\n-peppering a previously paid to address with near-dust outputs, which would then\n-be inadvertently included in future payments.\n-\n-New RPCs\n---------\n-\n-- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n-\n-\n-Updated RPCs\n-------------\n-\n-Several RPCs have been updated to include an \"avoid_reuse\" flag, used to control\n-whether already used addresses should be left out or included in the operation.\n-These include:\n-\n-- createwallet\n-- getbalance\n-- getbalances\n-- sendtoaddress\n-\n-In addition, `sendtoaddress` has been changed to avoid partial spends when `avoid_reuse`\n-is enabled (if not already enabled via the  `-avoidpartialspends` command line flag),\n-as it would otherwise risk using up the \"wrong\" UTXO for an address reuse case.\n-\n-The listunspent RPC has also been updated to now include a \"reused\" bool, for nodes\n-with \"avoid_reuse\" enabled."
      },
      {
        "sha": "d8cad369c5d9a85aea0c3f25048a8570405f1fbb",
        "filename": "doc/release-notes-14054.md",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-14054.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-14054.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14054.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,7 +0,0 @@\n-P2P changes\n------------\n-\n-BIP 61 reject messages were deprecated in v0.18. They are now disabled by\n-default, but can be enabled by setting the `-enablebip61` command line option.\n-BIP 61 reject messages will be removed entirely in a future version of\n-Bitcoin Core."
      },
      {
        "sha": "1fcc38866a3842c835bcc5edc1a9ac5abd15136e",
        "filename": "doc/release-notes-14802.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-14802.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-14802.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14802.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,3 +0,0 @@\n-RPC changes\n------------\n-The `getblockstats` RPC is faster for fee calculation by using BlockUndo data. Also, `-txindex` is no longer required and `getblockstats` works for all non-pruned blocks."
      },
      {
        "sha": "4bb0fcca7409c794e527e0768be037bb14f2ce90",
        "filename": "doc/release-notes-14954.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-14954.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-14954.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14954.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,3 +0,0 @@\n-Build system changes\n---------------------\n-Python >=3.5 is now required by all aspects of the project. This includes the build systems, test framework and linters. The previously supported minimum (3.4), was EOL in March 2019. See #14954 for more details.\n\\ No newline at end of file"
      },
      {
        "sha": "76ed3247a63d465d5966bc91db86f95d6aeb1c08",
        "filename": "doc/release-notes-15006.md",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15006.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15006.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15006.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,4 +0,0 @@\n-Miscellaneous RPC changes\n-------------\n-\n-- `createwallet` can now create encrypted wallets if a non-empty passphrase is specified."
      },
      {
        "sha": "25edfd440281c876417ee0528b1c584d2c19e695",
        "filename": "doc/release-notes-15427.md",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15427.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15427.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15427.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,9 +0,0 @@\n-Updated RPCs\n-------------\n-\n-The `utxoupdatepsbt` RPC method has been updated to take a `descriptors`\n-argument. When provided, input and output scripts and keys will be filled in\n-when known, and P2SH-witness inputs will be filled in from the UTXO set when a\n-descriptor is provided that shows they're spending segwit outputs.\n-\n-See the RPC help text for full details."
      },
      {
        "sha": "661420775756332bec75077abb550ec81fd3875e",
        "filename": "doc/release-notes-15437.md",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes-15437.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes-15437.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15437.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,53 @@\n+P2P and network changes\n+-----------------------\n+\n+#### Removal of reject network messages from Bitcoin Core (BIP61)\n+\n+The command line option to enable BIP61 (`-enablebip61`) has been removed.\n+\n+This feature has been disabled by default since Bitcoin Core version 0.18.0.\n+Nodes on the network can not generally be trusted to send valid (\"reject\")\n+messages, so this should only ever be used when connected to a trusted node.\n+Please use the recommended alternatives if you rely on this deprecated feature:\n+\n+* Testing or debugging of implementations of the Bitcoin P2P network protocol\n+  should be done by inspecting the log messages that are produced by a recent\n+  version of Bitcoin Core. Bitcoin Core logs debug messages\n+  (`-debug=<category>`) to a stream (`-printtoconsole`) or to a file\n+  (`-debuglogfile=<debug.log>`).\n+\n+* Testing the validity of a block can be achieved by specific RPCs:\n+  - `submitblock`\n+  - `getblocktemplate` with `'mode'` set to `'proposal'` for blocks with\n+    potentially invalid POW\n+\n+* Testing the validity of a transaction can be achieved by specific RPCs:\n+  - `sendrawtransaction`\n+  - `testmempoolaccept`\n+\n+* Wallets should not use the absence of \"reject\" messages to indicate a\n+  transaction has propagated the network, nor should wallets use \"reject\"\n+  messages to set transaction fees. Wallets should rather use fee estimation\n+  to determine transaction fees and set replace-by-fee if desired. Thus, they\n+  could wait until the transaction has confirmed (taking into account the fee\n+  target they set (compare the RPC `estimatesmartfee`)) or listen for the\n+  transaction announcement by other network peers to check for propagation.\n+\n+The removal of BIP61 REJECT message support also has the following minor RPC\n+and logging implications:\n+\n+* `testmempoolaccept` and `sendrawtransaction` no longer return the P2P REJECT\n+  code when a transaction is not accepted to the mempool. They still return the\n+  verbal reject reason.\n+\n+* Log messages that previously reported the REJECT code when a transaction was\n+  not accepted to the mempool now no longer report the REJECT code. The reason\n+  for rejection is still reported.\n+\n+Updated RPCs\n+------------\n+\n+- `testmempoolaccept` and `sendrawtransaction` no longer return the P2P REJECT\n+  code when a transaction is not accepted to the mempool. See the Section\n+  _Removal of reject network messages from Bitcoin Core (BIP61)_ for details on\n+  the removal of BIP61 REJECT message support."
      },
      {
        "sha": "49964d755059dafc7a67b45fa8d57ae9f8472ca7",
        "filename": "doc/release-notes-15566.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15566.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15566.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15566.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,3 +0,0 @@\n-Miscellaneous CLI Changes\n--------------------------\n-- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to `chain` and now returns the current network name as defined in BIP70 (main, test, regtest).\n\\ No newline at end of file"
      },
      {
        "sha": "bf89a70a4eb81ca393237112467675d3b78feab7",
        "filename": "doc/release-notes-15620.md",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15620.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15620.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15620.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,13 +0,0 @@\n-Updated RPCs\n-------------\n-\n-* The -maxtxfee setting no longer has any effect on non-wallet RPCs.\n-\n-  The `sendrawtransaction` and `testmempoolaccept` RPC methods previously\n-  accepted an `allowhighfees` parameter to fail the mempool acceptance in case\n-  the transaction's fee would exceed the value of the command line argument\n-  `-maxtxfee`. To uncouple the RPCs from the global option, they now have a\n-  hardcoded default for the maximum transaction fee, that can be changed for\n-  both RPCs on a per-call basis with the `maxfeerate` parameter. The\n-  `allowhighfees` boolean option has been removed and replaced by the\n-  `maxfeerate` numeric option."
      },
      {
        "sha": "048d5e72185214d79585543eff1b3131f9d3588e",
        "filename": "doc/release-notes-15637.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15637.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15637.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15637.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,3 +0,0 @@\n-RPC changes\n------------\n-In getmempoolancestors, getmempooldescendants, getmempoolentry and getrawmempool RPCs, to be consistent with the returned value and other RPCs such as getrawtransaction, vsize has been added and size is now deprecated. size will only be returned if bitcoind is started with `-deprecatedrpc=size`.\n\\ No newline at end of file"
      },
      {
        "sha": "7a4a60b1ee7c8f0d27c17d98c6ae277900eadc93",
        "filename": "doc/release-notes-15730.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15730.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15730.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15730.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,5 +0,0 @@\n-RPC changes\n------------\n-The RPC `getwalletinfo` response now includes the `scanning` key with an object\n-if there is a scanning in progress or `false` otherwise. Currently the object\n-has the scanning duration and progress."
      },
      {
        "sha": "a1df31f2502a0609334eb6204714707ddc626b80",
        "filename": "doc/release-notes-15849.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15849.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15849.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15849.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,6 +0,0 @@\n-Thread names in logs\n---------------------\n-\n-On platforms supporting `thread_local`, log lines can be prefixed with the name\n-of the thread that caused the log. To enable this behavior, use\n-`-logthreadnames=1`."
      },
      {
        "sha": "f4d2c5688cf56bedec05ef695d68613dcd011b47",
        "filename": "doc/release-notes-15954.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes-15954.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes-15954.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15954.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,4 @@\n+Configuration option changes\n+-----------------------------\n+\n+Importing blocks upon startup via the `bootstrap.dat` file no longer occurs by default. The file must now be specified with `-loadblock=<file>`."
      },
      {
        "sha": "493c7126ee9d6c7fb9d6a6af2dd63d668a6ff0c2",
        "filename": "doc/release-notes-15993.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15993.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-15993.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15993.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,3 +0,0 @@\n-Build system changes\n---------------------\n-The minimum supported miniUPnPc API version is set to 10. This keeps compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev` packages. Please note, on Debian this package is still vulnerable to [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798) (in jessie only) and [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494) (both in jessie and in stretch)."
      },
      {
        "sha": "f09cba4b6d55fea1b551aba2a3820d93f9291acd",
        "filename": "doc/release-notes-16394.md",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes-16394.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes-16394.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16394.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,4 +0,0 @@\n-RPC changes\n------------\n-`createwallet` now returns a warning if an empty string is used as an encryption password, and does not encrypt the wallet, instead of raising an error.\n-This makes it easier to disable encryption but also specify other options when using the `bitcoin-cli` tool."
      },
      {
        "sha": "23d5a8c8cdae64d4d625fcd9aad9d9b0dc9c3bae",
        "filename": "doc/release-notes-17056.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes-17056.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes-17056.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-17056.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,4 @@\n+Low-level RPC Changes\n+===\n+\n+- A new descriptor type `sortedmulti(...)` has been added to support multisig scripts where the public keys are sorted lexicographically in the resulting script."
      },
      {
        "sha": "08ed353889e1b4c7615cf1ad52f447a40e0f79d4",
        "filename": "doc/release-notes-17410.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes-17410.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes-17410.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-17410.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,5 @@\n+Command-line options\n+--------------------\n+\n+-  The `-debug=db` logging category has been renamed to `-debug=walletdb`, to distinguish it from `coindb`.\n+   `-debug=db` has been deprecated and will be removed in the next major release."
      },
      {
        "sha": "a47c8802b0cd4856eb58cd19049999e476e90856",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 22,
        "deletions": 65,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -39,7 +39,7 @@ installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n or `bitcoind`/`bitcoin-qt` (on Linux).\n \n Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n-possible, but might take some time if the datadir needs to be migrated.  Old\n+possible, but it might take some time if the datadir needs to be migrated. Old\n wallet versions of Bitcoin Core are generally supported.\n \n Compatibility\n@@ -52,99 +52,56 @@ to use Bitcoin Core on unsupported systems.\n Bitcoin Core should also work on most other Unix-like systems but is not\n as frequently tested on them.\n \n-From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n-built using Qt 5.9.x, which doesn't support versions of macOS older than\n-10.10. Additionally, Bitcoin Core does not yet change appearance when\n+From Bitcoin Core 0.17.0 onwards, macOS versions earlier than 10.10 are no\n+longer supported, as Bitcoin Core is now built using Qt 5.9.x which requires\n+macOS 10.10+. Additionally, Bitcoin Core does not yet change appearance when\n macOS \"dark mode\" is activated.\n \n-In addition to previously-supported CPU platforms, this release's\n-pre-compiled distribution also provides binaries for the RISC-V\n-platform.\n+In addition to previously supported CPU platforms, this release's pre-compiled\n+distribution provides binaries for the RISC-V platform.\n \n Notable changes\n ===============\n \n New RPCs\n --------\n \n-- `getbalances` returns an object with all balances (`mine`,\n-  `untrusted_pending` and `immature`). Please refer to the RPC help of\n-  `getbalances` for details. The new RPC is intended to replace\n-  `getunconfirmedbalance` and the balance fields in `getwalletinfo`, as well as\n-  `getbalance`. The old calls may be removed in a future version.\n+New settings\n+------------\n+\n+Updated settings\n+----------------\n \n Updated RPCs\n ------------\n \n Note: some low-level RPC changes mainly useful for testing are described in the\n Low-level Changes section below.\n \n-- The `sendmany` RPC had an argument `minconf` that was not well specified and\n-  would lead to RPC errors even when the wallet's coin selection would succeed.\n-  The `sendtoaddress` RPC never had this check, so to normalize the behavior,\n-  `minconf` is now ignored in `sendmany`. If the coin selection does not\n-  succeed due to missing coins, it will still throw an RPC error. Be reminded\n-  that coin selection is influenced by the `-spendzeroconfchange`,\n-  `-limitancestorcount`, `-limitdescendantcount` and `-walletrejectlongchains`\n-  command line arguments.\n+GUI changes\n+-----------\n \n-Deprecated or removed RPCs\n---------------------------\n+Wallet\n+------\n \n-- The `totalFee` option of the `bumpfee` RPC has been deprecated and will be\n-  removed in 0.20.  To continue using this option start with\n-  `-deprecatedrpc=totalFee`.  See the `bumpfee` RPC help text for more details.\n+- The wallet now by default uses bech32 addresses when using RPC, and creates native segwit change outputs.\n+- The way that output trust was computed has been fixed in #16766, which impacts confirmed/unconfirmed balance status and coin selection.\n \n Low-level changes\n =================\n \n-RPC\n----\n-\n-\n Tests\n -----\n \n-- The regression test chain, that can be enabled by the `-regtest` command line\n-  flag, now requires transactions to not violate standard policy by default.\n-  Making the default the same as for mainnet, makes it easier to test mainnet\n-  behavior on regtest. Be reminded that the testnet still allows non-standard\n-  txs by default and that the policy can be locally adjusted with the\n-  `-acceptnonstdtxn` command line flag for both test chains.\n-\n-Configuration\n-------------\n-\n-- An error is issued where previously a warning was issued when a setting in\n-  the config file was specified in the default section, but not overridden for\n-  the selected network. This change takes only effect if the selected network\n-  is not mainnet.\n-\n-Network\n--------\n-\n-- When fetching a transaction announced by multiple peers, previous versions of\n-  Bitcoin Core would sequentially attempt to download the transaction from each\n-  announcing peer until the transaction is received, in the order that those\n-  peers' announcements were received.  In this release, the download logic has\n-  changed to randomize the fetch order across peers and to prefer sending\n-  download requests to outbound peers over inbound peers. This fixes an issue\n-  where inbound peers can prevent a node from getting a transaction.\n-\n-Wallet\n-------\n-\n-- When in pruned mode, a rescan that was triggered by an `importwallet`,\n-  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail when\n-  blocks have been pruned. Previously it would fail when `-prune` has been set.\n-  This change allows to set `-prune` to a high value (e.g. the disk size) and\n-  the calls to any of the import RPCs would fail when the first block is\n-  pruned.\n+- `-fallbackfee` was 0 (disabled) by default for the main chain, but 0.0002 by default for the test chains. Now it is 0\n+  by default for all chains. Testnet and regtest users will have to add `fallbackfee=0.0002` to their configuration if\n+  they weren't setting it and they want it to keep working like before. (#16524)\n \n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/).\n+As well as to everyone that helped with translations on\n+[Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      },
      {
        "sha": "483cc5075e71ad20ab5fee41d8198cffe5e3b2c5",
        "filename": "doc/release-notes/release-notes-0.18.1.md",
        "status": "added",
        "additions": 136,
        "deletions": 0,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes/release-notes-0.18.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes/release-notes-0.18.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.18.1.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,136 @@\n+Bitcoin Core version 0.18.1 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.18.1/>\n+\n+This is a new minor version release, including new features, various bug\n+fixes and performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has\n+completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+`/Applications/Bitcoin-Qt` (on Mac) or `bitcoind`/`bitcoin-qt` (on\n+Linux).\n+\n+The first time you run version 0.15.0 or newer, your chainstate database\n+will be converted to a new format, which will take anywhere from a few\n+minutes to half an hour, depending on the speed of your machine.\n+\n+Note that the block database format also changed in version 0.8.0 and\n+there is no automatic upgrade code from before version 0.8 to version\n+0.15.0 or later. Upgrading directly from 0.7.x and earlier without\n+redownloading the blockchain is not supported.  However, as usual, old\n+wallet versions are still supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not\n+recommended to use Bitcoin Core on unsupported systems.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+as frequently tested on them.\n+\n+From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n+built using Qt 5.9.x, which doesn't support versions of macOS older than\n+10.10. Additionally, Bitcoin Core does not yet change appearance when\n+macOS \"dark mode\" is activated.\n+\n+Known issues\n+============\n+\n+Wallet GUI\n+----------\n+\n+For advanced users who have both (1) enabled coin control features, and\n+(2) are using multiple wallets loaded at the same time: The coin control\n+input selection dialog can erroneously retain wrong-wallet state when\n+switching wallets using the dropdown menu. For now, it is recommended\n+not to use coin control features with multiple wallets loaded.\n+\n+0.18.1 change log\n+=================\n+\n+### P2P protocol and network code\n+- #15990 Add tests and documentation for blocksonly (MarcoFalke)\n+- #16021 Avoid logging transaction decode errors to stderr (MarcoFalke)\n+- #16405 fix: tor: Call `event_base_loopbreak` from the event's callback (promag)\n+- #16412 Make poll in InterruptibleRecv only filter for POLLIN events (tecnovert)\n+\n+### Wallet\n+- #15913 Add -ignorepartialspends to list of ignored wallet options (luke-jr)\n+\n+### RPC and other APIs\n+- #15991 Bugfix: fix pruneblockchain returned prune height (jonasschnelli)\n+- #15899 Document iswitness flag and fix bug in converttopsbt (MarcoFalke)\n+- #16026 Ensure that uncompressed public keys in a multisig always returns a legacy address (achow101)\n+- #14039 Disallow extended encoding for non-witness transactions (sipa)\n+- #16210 add 2nd arg to signrawtransactionwithkey examples (dooglus)\n+- #16250 signrawtransactionwithkey: report error when missing redeemScript/witnessScript (ajtowns)\n+\n+### GUI\n+- #16044 fix the bug of OPEN CONFIGURATION FILE on Mac (shannon1916)\n+- #15957 Show \"No wallets available\" in open menu instead of nothing (meshcollider)\n+- #16118 Enable open wallet menu on setWalletController (promag)\n+- #16135 Set progressDialog to nullptr (promag)\n+- #16231 Fix open wallet menu initialization order (promag) \n+- #16254 Set `AA_EnableHighDpiScaling` attribute early (hebasto) \n+- #16122 Enable console line edit on setClientModel (promag) \n+- #16348 Assert QMetaObject::invokeMethod result (promag)\n+\n+### Build system\n+- #15985 Add test for GCC bug 90348 (sipa)\n+- #15947 Install bitcoin-wallet manpage (domob1812)\n+- #15983 build with -fstack-reuse=none (MarcoFalke)\n+\n+### Tests and QA\n+- #15826 Pure python EC (sipa)\n+- #15893 Add test for superfluous witness record in deserialization (instagibbs)\n+- #14818 Bugfix: test/functional/rpc_psbt: Remove check for specific error message that depends on uncertain assumptions (luke-jr)\n+- #15831 Add test that addmultisigaddress fails for watchonly addresses (MarcoFalke)\n+\n+### Documentation\n+- #15890 Remove text about txes always relayed from -whitelist (harding)\n+\n+### Miscellaneous\n+- #16095 Catch by reference not value in wallettool (kristapsk)\n+- #16205 Replace fprintf with tfm::format (MarcoFalke)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Andrew Chow\n+- Anthony Towns\n+- Chris Moore\n+- Daniel Kraft\n+- David A. Harding\n+- fanquake\n+- Gregory Sanders\n+- Hennadii Stepanov\n+- John Newbery\n+- Jonas Schnelli\n+- Jo\u00e3o Barbosa\n+- Kristaps Kaupe\n+- Luke Dashjr\n+- MarcoFalke\n+- Michele Federici\n+- Pieter Wuille\n+- Samuel Dobson\n+- shannon1916\n+- tecnovert\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "153da68a6e9d31d3d0d2e8f78807ab6880e42aa8",
        "filename": "doc/release-notes/release-notes-0.19.0.md",
        "status": "added",
        "additions": 1086,
        "deletions": 0,
        "changes": 1086,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes/release-notes-0.19.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/release-notes/release-notes-0.19.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.19.0.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,1086 @@\n+Bitcoin Core version 0.19.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.19.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but might take some time if the datadir needs to be migrated.  Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems using\n+the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n+to use Bitcoin Core on unsupported systems.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+as frequently tested on them.\n+\n+From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n+built using Qt 5.9.x, which doesn't support versions of macOS older than\n+10.10. Additionally, Bitcoin Core does not yet change appearance when\n+macOS \"dark mode\" is activated.\n+\n+Users running macOS Catalina may need to \"right-click\" and then choose \"Open\"\n+to open the Bitcoin Core .dmg. This is due to new signing requirements\n+imposed by Apple, which the Bitcoin Core project does not yet adhere too.\n+\n+Notable changes\n+===============\n+\n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweaks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n+New RPCs\n+--------\n+\n+- `getbalances` returns an object with all balances (`mine`,\n+  `untrusted_pending` and `immature`). Please refer to the RPC help of\n+  `getbalances` for details. The new RPC is intended to replace\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n+  `getwalletinfo`.  These old calls and fields may be removed in a\n+  future version. (#15930, #16239)\n+\n+- `setwalletflag` sets and unsets wallet flags that enable or disable\n+  features specific to that existing wallet, such as the new\n+  `avoid_reuse` feature documented elsewhere in these release notes.\n+  (#13756)\n+\n+- `getblockfilter` gets the BIP158 filter for the specified block.  This\n+  RPC is only enabled if block filters have been created using the\n+  `-blockfilterindex` configuration option. (#14121)\n+\n+New settings\n+------------\n+\n+- `-blockfilterindex` enables the creation of BIP158 block filters for\n+  the entire blockchain.  Filters will be created in the background and\n+  currently use about 4 GiB of space.  Note: this version of Bitcoin\n+  Core does not serve block filters over the P2P network, although the\n+  local user may obtain block filters using the `getblockfilter` RPC.\n+  (#14121)\n+\n+Updated settings\n+----------------\n+\n+- `whitebind` and `whitelist` now accept a list of permissions to\n+  provide peers connecting using the indicated interfaces or IP\n+  addresses.  If no permissions are specified with an address or CIDR\n+  network, the implicit default permissions are the same as previous\n+  releases.  See the `bitcoind -help` output for these two options for\n+  details about the available permissions. (#16248)\n+\n+- Users setting custom `dbcache` values can increase their setting slightly\n+  without using any more real memory.  Recent changes reduced the memory use\n+  by about 9% and made chainstate accounting more accurate (it was underestimating\n+  the use of memory before).  For example, if you set a value of \"450\" before, you\n+  may now set a value of \"500\" to use about the same real amount of memory. (#16957)\n+\n+\n+Updated RPCs\n+------------\n+\n+Note: some low-level RPC changes mainly useful for testing are described in the\n+Low-level Changes section below.\n+\n+- `sendmany` no longer has a `minconf` argument.  This argument was not\n+  well-specified and would lead to RPC errors even when the wallet's\n+  coin selection succeeded.  Users who want to influence coin selection\n+  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n+  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n+  arguments. (#15596)\n+\n+- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n+  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n+  whether already used addresses should be included in the operation.\n+  Additionally, `sendtoaddress` will avoid partial spends when\n+  `avoid_reuse` is enabled even if this feature is not already enabled\n+  via the `-avoidpartialspends` command line flag because not doing so\n+  would risk using up the \"wrong\" UTXO for an address reuse case.\n+  (#13756)\n+\n+- RPCs which have an `include_watchonly` argument or `includeWatching` option now default to `true` for watch-only\n+  wallets. Affected RPCs are: `getbalance`, `listreceivedbyaddress`, `listreceivedbylabel`, `listtransactions`,\n+  `listsinceblock`, `gettransaction`, `walletcreatefundedpsbt`, and `fundrawtransaction`. (#16383)\n+\n+- `listunspent` now returns a \"reused\" bool for each output if the\n+  wallet flag \"avoid_reuse\" is enabled. (#13756)\n+\n+- `getblockstats` now uses BlockUndo data instead of the transaction\n+  index, making it much faster, no longer dependent on the `-txindex`\n+  configuration option, and functional for all non-pruned blocks.\n+  (#14802)\n+\n+- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n+  out input and output scripts and keys when known. P2SH-witness inputs\n+  will be filled in from the UTXO set when a descriptor is provided that\n+  shows they're spending segwit outputs.  See the RPC help text for full\n+  details. (#15427)\n+\n+- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n+  `allowhighfees` parameter to fail mempool acceptance if the\n+  transaction fee exceeds the value of the configuration option\n+  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n+  can be changed when calling either RPC using a `maxfeerate` parameter.\n+  (#15620)\n+\n+- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n+  `getrawmempool` no longer return a `size` field unless the\n+  configuration option `-deprecatedrpc=size` is used.  Instead a new\n+  `vsize` field is returned with the transaction's virtual size\n+  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n+\n+- `getwalletinfo` now includes a `scanning` field that is either `false`\n+  (no scanning) or an object with information about the duration and\n+  progress of the wallet's scanning historical blocks for transactions\n+  affecting its balances. (#15730)\n+\n+- `gettransaction` now accepts a third (boolean) argument `verbose`. If\n+  set to `true`, a new `decoded` field will be added to the response containing\n+  the decoded transaction. This field is equivalent to RPC `decoderawtransaction`,\n+  or RPC `getrawtransaction` when `verbose` is passed. (#16185, #16866, #16873)\n+\n+- `createwallet` accepts a new `passphrase` parameter.  If set, this\n+  will create the new wallet encrypted with the given passphrase.  If\n+  unset (the default) or set to an empty string, no encryption will be\n+  used. (#16394)\n+\n+- `getchaintxstats` RPC now returns the additional key of\n+  `window_final_block_height`. (#16695)\n+\n+- `getmempoolentry` now provides a `weight` field containing the\n+  transaction weight as defined in BIP141. (#16647)\n+\n+- The `getnetworkinfo` and `getpeerinfo` commands now contain a new field with decoded network service flags. (#16786)\n+\n+- `getdescriptorinfo` now returns an additional `checksum` field\n+  containing the checksum for the unmodified descriptor provided by the\n+  user (that is, before the descriptor is normalized for the\n+  `descriptor` field). (#15986)\n+\n+- `joinpsbts` now shuffles the order of the inputs and outputs of the resulting\n+  joined PSBT. Previously, inputs and outputs were added in the order PSBTs were\n+  provided. This made it easy to correlate inputs to outputs, representing a\n+  privacy leak. (#16512)\n+\n+- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n+  `-walletrbf` configuration option is set to true. (#15911)\n+\n+GUI changes\n+-----------\n+\n+- The GUI wallet now provides bech32 addresses by default.  The user may change the address type\n+  during invoice generation using a GUI toggle, or the default address\n+  type may be changed with the `-addresstype` configuration option.\n+  (#15711, #16497)\n+\n+- In 0.18.0, a `./configure` flag was introduced to allow disabling BIP70 support in the GUI (support was enabled by default). In 0.19.0, this flag is now __disabled__ by default. If you want to compile Bitcoin Core with BIP70 support in the GUI, you can pass `--enable-bip70` to `./configure`. (#15584)\n+\n+Deprecated or removed configuration options\n+-------------------------------------------\n+\n+- `-mempoolreplacement` is removed, although default node behavior\n+  remains the same.  This option previously allowed the user to prevent\n+  the node from accepting or relaying BIP125 transaction replacements.\n+  This is different from the remaining configuration option\n+  `-walletrbf`. (#16171)\n+\n+Deprecated or removed RPCs\n+--------------------------\n+\n+- `bumpfee` no longer accepts a `totalFee` option unless the\n+  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n+  parameter will be fully removed in a subsequent release. (#15996)\n+\n+- `bumpfee` has a new `fee_rate` option as a replacement for the deprecated `totalFee`. (#16727)\n+\n+- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n+  Use the `generatetoaddress` RPC instead. (#15492)\n+\n+P2P changes\n+-----------\n+\n+- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n+  by default, but can be enabled by setting the `-enablebip61` command\n+  line option.  BIP 61 reject messages will be removed entirely in a\n+  future version of Bitcoin Core. (#14054)\n+\n+- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n+  especially for nodes with spinning disks, the default value for the\n+  `-peerbloomfilters` configuration option has been changed to false.\n+  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n+  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n+  transactions matching a bloom filter.  Users who still want to provide\n+  bloom filter support may either set the configuration option to true\n+  to re-enable both BIP111 and BIP37 support or enable just BIP37\n+  support for specific peers using the updated `-whitelist` and\n+  `-whitebind` configuration options described elsewhere in these\n+  release notes.  For the near future, lightweight clients using public\n+  BIP111/BIP37 nodes should still be able to connect to older versions\n+  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n+  but developers of such software should consider migrating to either\n+  using specific BIP37 nodes or an alternative transaction filtering\n+  system. (#16152)\n+\n+- By default, Bitcoin Core will now make two additional outbound connections that are exclusively used for block-relay.  No transactions or addr messages will be processed on these connections. These connections are designed to add little additional memory or bandwidth resource requirements but should make some partitioning attacks more difficult to carry out. (#15759)\n+\n+Miscellaneous CLI Changes\n+-------------------------\n+\n+- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n+  `chain` and now returns the current network name as defined in BIP70\n+  (main, test, regtest). (#15566)\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n+  Instead, information has been moved into the `softforks` object and\n+  an additional `type` field describes how Bitcoin Core determines\n+  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n+  help for details. (#16060)\n+\n+- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n+  and `segwit` (the BIP9 deployments that are currently in active\n+  state). (#16060)\n+\n+- `getrpcinfo` now returns a `logpath` field with the path to\n+  `debug.log`. (#15483)\n+\n+Tests\n+-----\n+\n+- The regression test chain enabled by the `-regtest` command line flag\n+  now requires transactions to not violate standard policy by default.\n+  This is the same default used for mainnet and makes it easier to test\n+  mainnet behavior on regtest. Note that the testnet still allows\n+  non-standard txs by default and that the policy can be locally\n+  adjusted with the `-acceptnonstdtxn` command line flag for both test\n+  chains. (#15891)\n+\n+Configuration\n+------------\n+\n+- A setting specified in the default section but not also specified in a\n+  network-specific section (e.g. testnet) will now produce an error\n+  preventing startup instead of just a warning unless the network is\n+  mainnet.  This prevents settings intended for mainnet from being\n+  applied to testnet or regtest. (#15629)\n+\n+- On platforms supporting `thread_local`, log lines can be prefixed with\n+  the name of the thread that caused the log. To enable this behavior,\n+  use `-logthreadnames=1`. (#15849)\n+\n+Network\n+-------\n+\n+- When fetching a transaction announced by multiple peers, previous versions of\n+  Bitcoin Core would sequentially attempt to download the transaction from each\n+  announcing peer until the transaction is received, in the order that those\n+  peers' announcements were received.  In this release, the download logic has\n+  changed to randomize the fetch order across peers and to prefer sending\n+  download requests to outbound peers over inbound peers. This fixes an issue\n+  where inbound peers could prevent a node from getting a transaction.\n+  (#14897, #15834)\n+\n+- If a Tor hidden service is being used, Bitcoin Core will be bound to\n+  the standard port 8333 even if a different port is configured for\n+  clearnet connections.  This prevents leaking node identity through use\n+  of identical non-default port numbers. (#15651)\n+\n+Mempool and transaction relay\n+-----------------------------\n+\n+- Allows one extra single-ancestor transaction per package.  Previously,\n+  if a transaction in the mempool had 25 descendants, or it and all of\n+  its descendants were over 101,000 vbytes, any newly-received\n+  transaction that was also a descendant would be ignored.  Now, one\n+  extra descendant will be allowed provided it is an immediate\n+  descendant (child) and the child's size is 10,000 vbytes or less.\n+  This makes it possible for two-party contract protocols such as\n+  Lightning Network to give each participant an output they can spend\n+  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n+  allowing one malicious participant to fill the entire package and thus\n+  prevent the other participant from spending their output. (#15681)\n+\n+- Transactions with outputs paying v1 to v16 witness versions (future\n+  segwit versions) are now accepted into the mempool, relayed, and\n+  mined.  Attempting to spend those outputs remains forbidden by policy\n+  (\"non-standard\").  When this change has been widely deployed, wallets\n+  and services can accept any valid bech32 Bitcoin address without\n+  concern that transactions paying future segwit versions will become\n+  stuck in an unconfirmed state. (#15846)\n+\n+- Legacy transactions (transactions with no segwit inputs) must now be\n+  sent using the legacy encoding format, enforcing the rule specified in\n+  BIP144.  (#14039)\n+\n+Wallet\n+------\n+\n+- When in pruned mode, a rescan that was triggered by an `importwallet`,\n+  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n+  when blocks have been pruned. Previously it would fail when `-prune`\n+  has been set.  This change allows setting `-prune` to a high value\n+  (e.g. the disk size) without the calls to any of the import RPCs\n+  failing until the first block is pruned. (#15870)\n+\n+- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n+  BTC), the RPC commands `walletcreatefundedpsbt` and\n+  `fundrawtransaction` will now fail instead of rounding down the fee.\n+  Be aware that the `feeRate` argument is specified in BTC per 1,000\n+  vbytes, not satoshi per vbyte. (#16257)\n+\n+- A new wallet flag `avoid_reuse` has been added (default off). When\n+  enabled, a wallet will distinguish between used and unused addresses,\n+  and default to not use the former in coin selection.  When setting\n+  this flag on an existing wallet, rescanning the blockchain is required\n+  to correctly mark previously used destinations.  Together with \"avoid\n+  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n+  serious privacy issue where a malicious user can track spends by\n+  sending small payments to a previously-paid address that would then\n+  be included with unrelated inputs in future payments. (#13756)\n+\n+Build system changes\n+--------------------\n+\n+- Python >=3.5 is now required by all aspects of the project. This\n+  includes the build systems, test framework and linters. The previously\n+  supported minimum (3.4), was EOL in March 2019. (#14954)\n+\n+- The minimum supported miniUPnPc API version is set to 10. This keeps\n+  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n+  packages. Please note, on Debian this package is still vulnerable to\n+  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n+  (in jessie only) and\n+  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n+  (both in jessie and in stretch). (#15993)\n+\n+0.19.0 change log\n+=================\n+\n+### Consensus\n+- #16128 Delete error-prone CScript constructor only used with FindAndDelete (instagibbs)\n+- #16060 Bury bip9 deployments (jnewbery)\n+\n+### Policy\n+- #15557 Enhance `bumpfee` to include inputs when targeting a feerate (instagibbs)\n+- #15846 Make sending to future native witness outputs standard (sipa)\n+\n+### Block and transaction handling\n+- #15632 Remove ResendWalletTransactions from the Validation Interface (jnewbery)\n+- #14121 Index for BIP 157 block filters (jimpo)\n+- #15141 Rewrite DoS interface between validation and net_processing (sdaftuar)\n+- #15880 utils and libraries: Replace deprecated Boost Filesystem functions (hebasto)\n+- #15971 validation: Add compile-time checking for negative locking requirement in LimitValidationInterfaceQueue (practicalswift)\n+- #15999 init: Remove dead code in LoadChainTip (MarcoFalke)\n+- #16015 validation: Hold cs_main when reading chainActive in RewindBlockIndex (practicalswift)\n+- #16056 remove unused magic number from consistency check (instagibbs)\n+- #16171 Remove -mempoolreplacement to prevent needless block prop slowness (TheBlueMatt)\n+- #15894 Remove duplicated \"Error: \" prefix in logs (hebasto)\n+- #14193 validation: Add missing mempool locks (MarcoFalke)\n+- #15681 Allow one extra single-ancestor transaction per package (TheBlueMatt)\n+- #15305 [validation] Crash if disconnecting a block fails (sdaftuar)\n+- #16471 log correct messages when CPFP fails (jnewbery)\n+- #16433 txmempool: Remove unused default value MemPoolRemovalReason::UNKNOWN (MarcoFalke)\n+- #13868 Remove unused fScriptChecks parameter from CheckInputs (Empact)\n+- #16421 Conservatively accept RBF bumps bumping one tx at the package limits (TheBlueMatt)\n+- #16854 Prevent UpdateTip log message from being broken up (stevenroose)\n+- #16956 validation: Make GetWitnessCommitmentIndex public (MarcoFalke)\n+- #16713 Ignore old versionbit activations to avoid 'unknown softforks' warning (jnewbery)\n+- #17002 chainparams: Bump assumed chain params (MarcoFalke)\n+- #16849 Fix block index inconsistency in InvalidateBlock() (sdaftuar)\n+\n+### P2P protocol and network code\n+- #15597 Generate log entry when blocks messages are received unexpectedly (pstratem)\n+- #15654 Remove unused unsanitized user agent string CNode::strSubVer (MarcoFalke)\n+- #15689 netaddress: Update CNetAddr for ORCHIDv2 (dongcarl)\n+- #15834 Fix transaction relay bugs introduced in #14897 and expire transactions from peer in-flight map (sdaftuar)\n+- #15651 torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently (luke-jr)\n+- #16188 Document what happens to getdata of unknown type (MarcoFalke)\n+- #15649 Add ChaCha20Poly1305@Bitcoin AEAD (jonasschnelli)\n+- #16152 Disable bloom filtering by default (TheBlueMatt)\n+- #15993 Drop support of the insecure miniUPnPc versions (hebasto)\n+- #16197 Use mockable time for tx download (MarcoFalke)\n+- #16248 Make whitebind/whitelist permissions more flexible (NicolasDorier)\n+- #16618 [Fix] Allow connection of a noban banned peer (NicolasDorier)\n+- #16631 Restore default whitelistrelay to true (NicolasDorier)\n+- #15759 Add 2 outbound block-relay-only connections (sdaftuar)\n+- #15558 Don't query all DNS seeds at once (sipa)\n+- #16999 0.19 seeds update (laanwj)\n+\n+### Wallet\n+- #15288 Remove wallet -> node global function calls (ryanofsky)\n+- #15491 Improve log output for errors during load (gwillen)\n+- #13541 wallet/rpc: sendrawtransaction maxfeerate (kallewoof)\n+- #15680 Remove resendwallettransactions RPC method (jnewbery)\n+- #15508 Refactor analyzepsbt for use outside RPC code (gwillen)\n+- #15747 Remove plethora of Get*Balance (MarcoFalke)\n+- #15728 Refactor relay transactions (jnewbery)\n+- #15639 bitcoin-wallet tool: Drop libbitcoin_server.a dependency (ryanofsky)\n+- #15853 Remove unused import checkpoints.h (MarcoFalke)\n+- #15780 add cachable amounts for caching credit/debit values (kallewoof)\n+- #15778 Move maxtxfee from node to wallet (jnewbery)\n+- #15901 log on rescan completion (andrewtoth)\n+- #15917 Avoid logging no_such_file_or_directory error (promag)\n+- #15452 Replace CScriptID and CKeyID in CTxDestination with dedicated types (instagibbs)\n+- #15870 Only fail rescan when blocks have actually been pruned (MarcoFalke)\n+- #15006 Add option to create an encrypted wallet (achow101)\n+- #16001 Give WalletModel::UnlockContext move semantics (sipa)\n+- #15741 Batch write imported stuff in importmulti (achow101)\n+- #16144 do not encrypt wallets with disabled private keys (mrwhythat)\n+- #15024 Allow specific private keys to be derived from descriptor (meshcollider)\n+- #13756 \"avoid_reuse\" wallet flag for improved privacy (kallewoof)\n+- #16226 Move ismine to the wallet module (achow101)\n+- #16239 wallet/rpc: follow-up clean-up/fixes to avoid_reuse (kallewoof)\n+- #16286 refactoring: wallet: Fix GCC 7.4.0 warning (hebasto)\n+- #16257 abort when attempting to fund a transaction above -maxtxfee (Sjors)\n+- #16237 Have the wallet give out destinations instead of keys (achow101)\n+- #16322 Fix -maxtxfee check by moving it to CWallet::CreateTransaction (promag)\n+- #16361 Remove redundant pre-TopUpKeypool check (instagibbs)\n+- #16244 Move wallet creation out of the createwallet rpc into its own function (achow101)\n+- #16227 Refactor CWallet's inheritance chain (achow101)\n+- #16208 Consume ReserveDestination on successful CreateTransaction (instagibbs)\n+- #16301 Use CWallet::Import* functions in all import* RPCs (achow101)\n+- #16402 Remove wallet settings from chainparams (MarcoFalke)\n+- #16415 Get rid of PendingWalletTx class (ryanofsky)\n+- #15588 Log the actual wallet file version and no longer publicly expose the \"version\" record (achow101)\n+- #16399 Improve wallet creation (fjahr)\n+- #16475 Enumerate walletdb keys (MarcoFalke)\n+- #15709 Do not add \"setting\" key as unknown (Bushstar)\n+- #16451 Remove CMerkleTx (jnewbery)\n+- #15906 Move min_depth and max_depth to coin control (amitiuttarwar)\n+- #16502 Drop unused OldKey (promag)\n+- #16394 Allow createwallet to take empty passwords to make unencrypted wallets (achow101)\n+- #15911 Use wallet RBF default for walletcreatefundedpsbt (Sjors)\n+- #16503 Remove p2pEnabled from Chain interface (ariard)\n+- #16557 restore coinbase and confirmed/conflicted checks in SubmitMemoryPoolAndRelay() (jnewbery)\n+- #14934 Descriptor expansion cache clarifications (Sjors)\n+- #16383 rpcwallet: default include_watchonly to true for watchonly wallets (jb55)\n+- #16542 Return more specific errors about invalid descriptors (achow101)\n+- #16572 Fix Char as Bool in Wallet (JeremyRubin)\n+- #16753 extract PubKey from P2PK script with Solver (theStack)\n+- #16716 Use wallet name instead of pointer on unload/release (promag)\n+- #16185 gettransaction: add an argument to decode the transaction (darosior)\n+- #16745 Translate all initErrors in CreateWalletFromFile (MarcoFalke)\n+- #16792 Assert that the HRP is lowercase in Bech32::Encode (meshcollider)\n+- #16624 encapsulate transactions state (ariard)\n+- #16830 Cleanup walletinitinterface.h (hebasto)\n+- #16796 Fix segfault in CreateWalletFromFile (MarcoFalke)\n+- #16866 Rename 'decode' argument in gettransaction method to 'verbose' (jnewbery)\n+- #16727 Explicit feerate for bumpfee (instagibbs)\n+- #16609 descriptor: fix missed m_script_arg arg renaming in #14934 (fanquake)\n+\n+### RPC and other APIs\n+- #15492 remove deprecated generate method (Sjors)\n+- #15566 cli: Replace testnet with chain and return network name as per bip70 (fanquake)\n+- #15564 cli: Remove duplicate wallet fields from -getinfo (fanquake)\n+- #15642 Remove deprecated rpc warnings (jnewbery)\n+- #15637 Rename size to vsize in mempool related calls (fanquake)\n+- #15620 Uncouple non-wallet rpcs from maxTxFee global (MarcoFalke)\n+- #15616 Clarify decodescript RPCResult doc (MarcoFalke)\n+- #15669 Fix help text for signtransactionwithXXX (torkelrogstad)\n+- #15596 Ignore sendmany::minconf as dummy value (MarcoFalke)\n+- #15755 remove unused var in rawtransaction.cpp (Bushstar)\n+- #15746 RPCHelpMan: Always name dictionary keys (MarcoFalke)\n+- #15748 remove dead mining code (jnewbery)\n+- #15751 Speed up deriveaddresses for large ranges (sipa)\n+- #15770 Validate maxfeerate with AmountFromValue (promag)\n+- #15474 rest/rpc: Make mempoolinfo atomic (promag)\n+- #15463 Speedup getaddressesbylabel (promag)\n+- #15784 Remove dependency on interfaces::Chain in SignTransaction (ariard)\n+- #15323 Expose g_is_mempool_loaded via getmempoolinfo (Empact)\n+- #15932 Serialize in getblock without cs_main (MarcoFalke)\n+- #15930 Add balances RPC (MarcoFalke)\n+- #15730 Show scanning details in getwalletinfo (promag)\n+- #14802 faster getblockstats using BlockUndo data (FelixWeis)\n+- #14984 Speedup getrawmempool when verbose=true (promag)\n+- #16071 Hint for importmulti in help output of importpubkey and importaddress (kristapsk)\n+- #16063 Mention getwalletinfo where a rescan is triggered (promag)\n+- #16024 deriveaddresses: Correction of descriptor checksum in RPC example (ccapo)\n+- #16217 getrawtransaction: inform about blockhash argument when lookup fails (darosior)\n+- #15427 Add support for descriptors to utxoupdatepsbt (sipa)\n+- #16262 Allow shutdown while in generateblocks (pstratem)\n+- #15483 Adding a 'logpath' entry to getrpcinfo (darosior)\n+- #16325 Clarify that block count means height excl genesis (MarcoFalke)\n+- #16326 add new utxoupdatepsbt arguments to the CRPCCommand and CPRCCvertParam tables (jnewbery)\n+- #16332 Add logpath description for getrpcinfo (instagibbs)\n+- #16240 JSONRPCRequest-aware RPCHelpMan (kallewoof)\n+- #15996 Deprecate totalfee argument in `bumpfee` (instagibbs)\n+- #16467 sendrawtransaction help privacy note (jonatack)\n+- #16596 Fix getblocktemplate CLI example (emilengler)\n+- #15986 Add checksum to getdescriptorinfo (sipa)\n+- #16647 add weight to getmempoolentry output (fanquake)\n+- #16695 Add window final block height to getchaintxstats (leto)\n+- #16798 Refactor rawtransaction_util's SignTransaction to separate prevtx parsing (achow101)\n+- #16285 Improve scantxoutset response and help message (promag)\n+- #16725 Don't show addresses or P2PK in decoderawtransaction (NicolasDorier)\n+- #16787 Human readable network services (darosior)\n+- #16251 Improve signrawtransaction error reporting (ajtowns)\n+- #16873 fix regression in gettransaction (jonatack)\n+- #16512 Shuffle inputs and outputs after joining psbts (achow101)\n+- #16521 Use the default maxfeerate value as BTC/kB (Remagpie)\n+- #16817 Fix casing in getblockchaininfo to be inline with other fields (dangershony)\n+- #17131 fix -rpcclienttimeout 0 option (fjahr)\n+- #17249 Add missing deque include to fix build (jbeich)\n+\n+### GUI\n+- #15464 Drop unused return values in WalletFrame (promag)\n+- #15614 Defer removeAndDeleteWallet when no modal widget is active (promag)\n+- #15711 Generate bech32 addresses by default (MarcoFalke)\n+- #15829 update request payment button text and tab description (fanquake)\n+- #15874 Resolve the qt/guiutil <-> qt/optionsmodel CD (251Labs)\n+- #15371 Uppercase bech32 addresses in qr codes (benthecarman)\n+- #15928 Move QRImageWidget to its own file-pair (luke-jr)\n+- #16113 move coin control \"OK\" to the right hand side of the dialog (fanquake)\n+- #16090 Add vertical spacer to peer detail widget (JosuGZ)\n+- #15886 qt, wallet: Revamp SendConfirmationDialog (hebasto)\n+- #16263 Use qInfo() if no error occurs (hebasto)\n+- #16153 Add antialiasing to traffic graph widget (JosuGZ)\n+- #16350 Remove unused guard (hebasto)\n+- #16106 Sort wallets in open wallet menu (promag)\n+- #16291 Stop translating PACKAGE_NAME (MarcoFalke)\n+- #16380 Remove unused bits from the service flags enum (MarcoFalke)\n+- #16379 Fix autostart filenames on Linux for testnet/regtest (hebasto)\n+- #16366 init: Use InitError for all errors in bitcoind/qt (MarcoFalke)\n+- #16436 Do not create payment server if -disablewallet option provided (hebasto)\n+- #16514 Remove unused RPCConsole::tabFocus (promag)\n+- #16497 Generate bech32 addresses by default (take 2, fixup) (MarcoFalke)\n+- #16349 Remove redundant WalletController::addWallet slot (hebasto)\n+- #16578 Do not pass in command line arguments to QApplication (achow101)\n+- #16612 Remove menu icons (laanwj)\n+- #16677 remove unused PlatformStyle::TextColorIcon (fanquake)\n+- #16694 Ensure transaction send error is always visible (fanquake)\n+- #14879 Add warning messages to the debug window (hebasto)\n+- #16708 Replace obsolete functions of QSslSocket (hebasto)\n+- #16701 Replace functions deprecated in Qt 5.13 (hebasto)\n+- #16706 Replace deprecated QSignalMapper by lambda expressions (hebasto)\n+- #16707 Remove obsolete QModelIndex::child() (hebasto)\n+- #16758 Replace QFontMetrics::width() with TextWidth() (hebasto)\n+- #16760 Change uninstall icon on Windows (GChuf)\n+- #16720 Replace objc_msgSend() function calls with the native Objective-C syntax (hebasto)\n+- #16788 Update transifex slug for 0.19 (laanwj)\n+- #15450 Create wallet menu option (achow101)\n+- #16735 Remove unused menu items for Windows and Linux (GChuf)\n+- #16826 Do additional character escaping for wallet names and address labels (achow101)\n+- #15529 Add Qt programs to msvc build (updated, no code changes) (sipsorcery)\n+- #16714 add prune to intro screen with smart default (Sjors)\n+- #16858 advise users not to switch wallets when opening a BIP70 URI (jameshilliard)\n+- #16822 Create wallet menu option follow-ups (jonatack)\n+- #16882 Re-generate translations before 0.19.0 (MarcoFalke)\n+- #16928 Rename address checkbox back to bech32 (MarcoFalke)\n+- #16837 Fix {C{,XX},LD}FLAGS pickup (dongcarl)\n+- #16971 Change default size of intro frame (emilengler)\n+- #16988 Periodic translations update (laanwj)\n+- #16852 When BIP70 is disabled, get PaymentRequest merchant using string search (achow101)\n+- #16952 make sure to update the UI when deleting a transaction (jonasschnelli)\n+- #17031 Prevent processing duplicate payment requests (promag)\n+- #17135 Make polling in ClientModel asynchronous (promag)\n+- #17120 Fix start timer from non QThread (promag)\n+- #17257 disable font antialiasing for QR image address (fanquake)\n+\n+### Build system\n+- #14954 Require python 3.5 (MarcoFalke)\n+- #15580 native_protobuf: avoid system zlib (dongcarl)\n+- #15601 Switch to python3 (take 3) (MarcoFalke)\n+- #15581 Make less assumptions about build env (dongcarl)\n+- #14853 latest RapidCheck (fanquake)\n+- #15446 Improve depends debuggability (dongcarl)\n+- #13788 Fix --disable-asm for newer assembly checks/code (luke-jr)\n+- #12051 add missing debian contrib file to tarball (puchu)\n+- #15919 Remove unused OpenSSL includes to make it more clear where OpenSSL is used (practicalswift)\n+- #15978 .gitignore: Don't ignore depends patches (dongcarl)\n+- #15939 gitian: Remove windows 32 bit build (MarcoFalke)\n+- #15239 scripts and tools: Move non-linux build source tarballs to \"bitcoin-binaries/version\" directory (hebasto)\n+- #14047 Add HKDF_HMAC256_L32 and method to negate a private key (jonasschnelli)\n+- #16051 add patch to common dependencies (fanquake)\n+- #16049 switch to secure download of all dependencies (Kemu)\n+- #16059 configure: Fix thread_local detection (dongcarl)\n+- #16089 add ability to skip building zeromq (fanquake)\n+- #15844 Purge libtool archives (dongcarl)\n+- #15461 update to Boost 1.70 (Sjors)\n+- #16141 remove GZIP export from gitian descriptors (fanquake)\n+- #16235 Cleaned up and consolidated msbuild files (no code changes) (sipsorcery)\n+- #16246 MSVC: Fix error in debug mode (Fix #16245) (NicolasDorier)\n+- #16183 xtrans: Configure flags cleanup (dongcarl)\n+- #16258 [MSVC]: Create the config.ini as part of bitcoind build (NicolasDorier)\n+- #16271 remove -Wall from rapidcheck build flags (fanquake)\n+- #16309 [MSVC] allow user level project customization (NicolasDorier)\n+- #16308 [MSVC] Copy build output to src/ automatically after build (NicolasDorier)\n+- #15457 Check std::system for -[alert|block|wallet]notify (Sjors)\n+- #16344 use #if HAVE_SYSTEM instead of defined(HAVE_SYSTEM) (Sjors)\n+- #16352 prune dbus from depends (fanquake)\n+- #16270 expat 2.2.7 (fanquake)\n+- #16408 Prune X packages (dongcarl)\n+- #16386 disable unused Qt features (fanquake)\n+- #16424 Treat -Wswitch as error when --enable-werror (MarcoFalke)\n+- #16441 remove qt libjpeg check from bitcoin_qt.m4 (fanquake)\n+- #16434 Specify AM_CPPFLAGS for ZMQ (domob1812)\n+- #16534 add Qt Creator Makefile.am.user to .gitignore (Bushstar)\n+- #16573 disable building libsecp256k1 benchmarks (fanquake)\n+- #16533 disable libxcb extensions (fanquake)\n+- #16589 Remove unused src/obj-test folder (MarcoFalke)\n+- #16435 autoconf: Sane `--enable-debug` defaults (dongcarl)\n+- #16622 echo property tests status during build (jonatack)\n+- #16611 Remove src/obj directory from repository (laanwj)\n+- #16371 ignore macOS make deploy artefacts & add them to clean-local (fanquake)\n+- #16654 build: update RapidCheck Makefile (jonatack)\n+- #16370 cleanup package configure flags (fanquake)\n+- #16746 msbuild: Ignore linker warning (sipsorcery)\n+- #16750 msbuild: adds bench_bitcoin to auto generated project files (sipsorcery)\n+- #16810 guix: Remove ssp spec file hack (dongcarl)\n+- #16477 skip deploying plugins we dont use in macdeployqtplus (fanquake)\n+- #16413 Bump QT to LTS release 5.9.8 (THETCR)\n+- #15584 disable BIP70 support by default (fanquake)\n+- #16871 make building protobuf optional in depends (fanquake)\n+- #16879 remove redundant sed patching (fanquake)\n+- #16809 zlib: Move toolchain options to configure (dongcarl)\n+- #15146 Solve SmartOS FD_ZERO build issue (Empact)\n+- #16870 update boost macros to latest upstream for improved error reporting (fanquake)\n+- #16982 Factor out qt translations from build system (laanwj)\n+- #16926 Add OpenSSL termios fix for musl libc (nmarley)\n+- #16927 Refresh ZeroMQ 4.3.1 patch (nmarley)\n+- #17005 Qt version appears only if GUI is being built (ch4ot1c)\n+- #16468 Exclude depends/Makefile in .gitignore (promag)\n+\n+### Tests and QA\n+- #15296 Add script checking for deterministic line coverage in unit tests (practicalswift)\n+- #15338 ci: Build and run tests once on freebsd (MarcoFalke)\n+- #15479 Add .style.yapf (MarcoFalke)\n+- #15534 lint-format-strings: open files sequentially (fix for OS X) (gwillen)\n+- #15504 fuzz: Link BasicTestingSetup (shared with unit tests) (MarcoFalke)\n+- #15473 bench: Benchmark mempooltojson (MarcoFalke)\n+- #15466 Print remaining jobs in test_runner.py (stevenroose)\n+- #15631 mininode: Clearer error message on invalid magic bytes (MarcoFalke)\n+- #15255 Remove travis_wait from lint script (gkrizek)\n+- #15686 make pruning test faster (jnewbery)\n+- #15533 .style.yapf: Set column_limit=160 (MarcoFalke)\n+- #15660 Overhaul p2p_compactblocks.py (sdaftuar)\n+- #15495 Add regtests for HTTP status codes (domob1812)\n+- #15772 Properly log named args in authproxy (MarcoFalke)\n+- #15771 Prevent concurrency issues reading .cookie file (promag)\n+- #15693 travis: Switch to ubuntu keyserver to avoid timeouts (MarcoFalke)\n+- #15629 init: Throw error when network specific config is ignored (MarcoFalke)\n+- #15773 Add BitcoinTestFramework::sync_* methods (MarcoFalke)\n+- #15797 travis: Bump second timeout to 33 minutes, add rationale (MarcoFalke)\n+- #15788 Unify testing setups for fuzz, bench, and unit tests (MarcoFalke)\n+- #15352 Reduce noise level in test_bitcoin output (practicalswift)\n+- #15779 Add wallet_balance benchmark (MarcoFalke)\n+- #15843 fix outdated include in blockfilter_index_tests (jamesob)\n+- #15866 Add missing syncwithvalidationinterfacequeue to wallet_import_rescan (MarcoFalke)\n+- #15697 Make swap_magic_bytes in p2p_invalid_messages atomic (MarcoFalke)\n+- #15895 Avoid re-reading config.ini unnecessarily (luke-jr)\n+- #15896 feature_filelock, interface_bitcoin_cli: Use PACKAGE_NAME in messages rather than hardcoding Bitcoin Core (luke-jr)\n+- #15897 QA/mininode: Send all headers upfront in send_blocks_and_test to avoid sending an unconnected one (luke-jr)\n+- #15696 test_runner: Move feature_pruning to base tests (MarcoFalke)\n+- #15869 Add settings merge test to prevent regresssions (ryanofsky)\n+- #15758 Add further tests to wallet_balance (MarcoFalke)\n+- #15841 combine_logs: append node stderr and stdout if it exists (MarcoFalke)\n+- #15949 test_runner: Move pruning back to extended (MarcoFalke)\n+- #15927 log thread names by default in functional tests (jnewbery)\n+- #15664 change default Python block serialization to witness (instagibbs)\n+- #15988 Add test for ArgsManager::GetChainName (ryanofsky)\n+- #15963 Make random seed logged and settable (jnewbery)\n+- #15943 Fail if RPC has been added without tests (MarcoFalke)\n+- #16036 travis: Run all lint scripts even if one fails (scravy)\n+- #13555 parameterize adjustment period in versionbits_computeblockversion (JBaczuk)\n+- #16079 wallet_balance.py: Prevent edge cases (stevenroose)\n+- #16078 replace tx hash with txid in rawtransaction test (LongShao007)\n+- #16042 Bump MAX_NODES to 12 (MarcoFalke)\n+- #16124 Limit Python linting to files in the repo (practicalswift)\n+- #16143 Mark unit test blockfilter_index_initial_sync as non-deterministic (practicalswift)\n+- #16214 travis: Fix caching issues (MarcoFalke)\n+- #15982 Make msg_block a witness block (MarcoFalke)\n+- #16225 Make coins_tests/updatecoins_simulation_test deterministic (practicalswift)\n+- #16236 fuzz: Log output even if fuzzer failed (MarcoFalke)\n+- #15520 cirrus: Run extended test feature_pruning (MarcoFalke)\n+- #16234 Add test for unknown args (MarcoFalke)\n+- #16207 stop generating lcov coverage when functional tests fail (asood123)\n+- #16252 Log to debug.log in all unit tests (MarcoFalke)\n+- #16289 Add missing ECC_Stop() in GUI rpcnestedtests.cpp (jonasschnelli)\n+- #16278 Remove unused includes (practicalswift)\n+- #16302 Add missing syncwithvalidationinterfacequeue to wallet_balance test (MarcoFalke)\n+- #15538 wallet_bumpfee.py: Make sure coin selection produces change (instagibbs)\n+- #16294 Create at most one testing setup (MarcoFalke)\n+- #16299 bench: Move generated data to a dedicated translation unit (promag)\n+- #16329 Add tests for getblockchaininfo.softforks (MarcoFalke)\n+- #15687 tool wallet test coverage for unexpected writes to wallet (jonatack)\n+- #16267 bench: Benchmark blocktojson (fanatid)\n+- #14505 Add linter to make sure single parameter constructors are marked explicit (practicalswift)\n+- #16338 Disable other targets when enable-fuzz is set (qmma70)\n+- #16334 rpc_users: Also test rpcauth.py with password (dongcarl)\n+- #15282 Replace hard-coded hex tx with class in test framework (stevenroose)\n+- #16390 Add --filter option to test_runner.py (promag)\n+- #15891 Require standard txs in regtest by default (MarcoFalke)\n+- #16374 Enable passing wildcard test names to test runner from root (jonatack)\n+- #16420 Fix race condition in wallet_encryption test (jonasschnelli)\n+- #16422 remove redundant setup in addrman_tests (zenosage)\n+- #16438 travis: Print memory and number of cpus (MarcoFalke)\n+- #16445 Skip flaky p2p_invalid_messages test on macOS (fjahr)\n+- #16459 Fix race condition in example_test.py (sdaftuar)\n+- #16464 Ensure we don't generate a too-big block in p2sh sigops test (sdaftuar)\n+- #16491 fix deprecated log.warn in feature_dbcrash test (jonatack)\n+- #15134 Switch one of the Travis jobs to an unsigned char environment (-funsigned-char) (practicalswift)\n+- #16505 Changes verbosity of msbuild from quiet to normal in the appveyor script (sipsorcery)\n+- #16293 Make test cases separate functions (MarcoFalke)\n+- #16470 Fail early on disconnect in mininode.wait_for_* (MarcoFalke)\n+- #16277 Suppress output in test_bitcoin for expected errors (gertjaap)\n+- #16493 Fix test failures (MarcoFalke)\n+- #16538 Add missing sync_blocks to feature_pruning (MarcoFalke)\n+- #16509 Adapt test framework for chains other than \"regtest\" (MarcoFalke)\n+- #16363 Add test for BIP30 duplicate tx (MarcoFalke)\n+- #16535 Explain why -whitelist is used in feature_fee_estimation (MarcoFalke)\n+- #16554 only include and use OpenSSL where it's actually needed (BIP70) (fanquake)\n+- #16598 Remove confusing hash256 function in util (elichai)\n+- #16595 travis: Use extended 90 minute timeout when available (MarcoFalke)\n+- #16563 Add unit test for AddTimeData (mzumsande)\n+- #16561 Use colors and dots in test_runner.py output only if standard output is a terminal (practicalswift)\n+- #16465 Test p2sh-witness and bech32 in wallet_import_rescan (MarcoFalke)\n+- #16582 Rework ci (Use travis only as fallback env) (MarcoFalke)\n+- #16633 travis: Fix test_runner.py timeouts (MarcoFalke)\n+- #16646 Run tests with UPnP disabled (fanquake)\n+- #16623 ci: Add environment files for all settings (MarcoFalke)\n+- #16656 fix rpc_setban.py race (jonasschnelli)\n+- #16570 Make descriptor tests deterministic (davereikher)\n+- #16404 Test ZMQ notification after chain reorg (promag)\n+- #16726 Avoid common Python default parameter gotcha when mutable dict/list:s are used as default parameter values (practicalswift)\n+- #16739 ci: Pass down $makejobs to test_runner.py, other improvements (MarcoFalke)\n+- #16767 Check for codespell in lint-spelling.sh (kristapsk)\n+- #16768 Make lint-includes.sh work from any directory (kristapsk)\n+- #15257 Scripts and tools: Bump flake8 to 3.7.8 (Empact)\n+- #16804 Remove unused try-block in assert_debug_log (MarcoFalke)\n+- #16850 `servicesnames` field in `getpeerinfo` and `getnetworkinfo` (darosior)\n+- #16551 Test that low difficulty chain fork is rejected (MarcoFalke)\n+- #16737 Establish only one connection between nodes in rpc_invalidateblock (MarcoFalke)\n+- #16845 Add notes on how to generate data/wallets/high_minversion (MarcoFalke)\n+- #16888 Bump timeouts in slow running tests (MarcoFalke)\n+- #16864 Add python bech32 impl round-trip test (instagibbs)\n+- #16865 add some unit tests for merkle.cpp (soroosh-sdi)\n+- #14696 Add explicit references to related CVE's in p2p_invalid_block test (lucash-dev)\n+- #16907 lint: Add DisabledOpcodeTemplates to whitelist (MarcoFalke)\n+- #16898 Remove connect_nodes_bi (MarcoFalke)\n+- #16917 Move common function assert_approx() into util.py (fridokus)\n+- #16921 Add information on how to add Vulture suppressions (practicalswift)\n+- #16920 Fix extra_args in wallet_import_rescan.py (MarcoFalke)\n+- #16918 Make PORT_MIN in test runner configurable (MarcoFalke)\n+- #16941 travis: Disable feature_block in tsan run due to oom (MarcoFalke)\n+- #16929 follow-up to rpc: default maxfeerate value as BTC/kB (jonatack)\n+- #16959 ci: Set $host before setting fallback values (MarcoFalke)\n+- #16961 Remove python dead code linter (laanwj)\n+- #16931 add unittests for CheckProofOfWork (soroosh-sdi)\n+- #16991 Fix service flag comparison check in rpc_net test (luke-jr) (laanwj)\n+- #16987 Correct docstring param name (jbampton)\n+- #17015 Explain QT_QPA_PLATFORM for gui tests (MarcoFalke)\n+- #17006 Enable UBSan for Travis fuzzing job (practicalswift)\n+- #17086 Fix fs_tests for unknown locales (carnhofdaki)\n+- #15903 appveyor: Write @PACKAGE_NAME@ to config (MarcoFalke)\n+- #16742 test: add executable flag for wallet_watchonly.py (theStack)\n+- #16740 qa: Relax so that the subscriber is ready before publishing zmq messages (#16740)\n+\n+### Miscellaneous\n+- #15335 Fix lack of warning of unrecognized section names (AkioNak)\n+- #15528 contrib: Bump gitian descriptors for 0.19 (MarcoFalke)\n+- #15609 scripts and tools: Set 'distro' explicitly (hebasto)\n+- #15519 Add Poly1305 implementation (jonasschnelli)\n+- #15643 contrib: Gh-merge: include acks in merge commit (MarcoFalke)\n+- #15838 scripts and tools: Fetch missing review comments in github-merge.py (nkostoulas)\n+- #15920 lint: Check that all wallet args are hidden (MarcoFalke)\n+- #15849 Thread names in logs and deadlock debug tools (jamesob)\n+- #15650 Handle the result of posix_fallocate system call (lucayepa)\n+- #15766 scripts and tools: Upgrade gitian image before signing (hebasto)\n+- #15512 Add ChaCha20 encryption option (XOR) (jonasschnelli)\n+- #15968 Fix portability issue with pthreads (grim-trigger)\n+- #15970 Utils and libraries: fix static_assert for macro HAVE_THREAD_LOCAL (orientye)\n+- #15863 scripts and tools: Ensure repos are up-to-date in gitian-build.py (hebasto)\n+- #15224 Add RNG strengthening (10ms once every minute) (sipa)\n+- #15840 Contrib scripts: Filter IPv6 by ASN (abitfan)\n+- #13998 Scripts and tools: gitian-build.py improvements and corrections (hebasto)\n+- #15236 scripts and tools: Make --setup command independent (hebasto)\n+- #16114 contrib: Add curl as a required program in gitian-build.py (fanquake)\n+- #16046 util: Add type safe gettime (MarcoFalke)\n+- #15703 Update secp256k1 subtree to latest upstream (sipa)\n+- #16086 contrib: Use newer config.guess & config.sub in install_db4.sh (fanquake)\n+- #16130 Don't GPG sign intermediate commits with github-merge tool (stevenroose)\n+- #16162 scripts: Add key for michael ford (fanquake) to trusted keys list (fanquake)\n+- #16201 devtools: Always use unabbreviated commit IDs in github-merge.py (laanwj)\n+- #16112 util: Log early messages (MarcoFalke)\n+- #16223 devtools: Fetch and display ACKs at sign-off time in github-merge (laanwj)\n+- #16300 util: Explain why the path is cached (MarcoFalke)\n+- #16314 scripts and tools: Update copyright_header.py script (hebasto)\n+- #16158 Fix logic of memory_cleanse() on MSVC and clean up docs (real-or-random)\n+- #14734 fix an undefined behavior in uint::SetHex (kazcw)\n+- #16327 scripts and tools: Update ShellCheck linter (hebasto)\n+- #15277 contrib: Enable building in guix containers (dongcarl)\n+- #16362 Add bilingual_str type (hebasto)\n+- #16481 logs: add missing space (harding)\n+- #16581 sipsorcery gitian key (sipsorcery)\n+- #16566 util: Refactor upper/lowercase functions (kallewoof)\n+- #16620 util: Move resolveerrmsg to util/error (MarcoFalke)\n+- #16625 scripts: Remove github-merge.py (fanquake)\n+- #15864 Fix datadir handling (hebasto)\n+- #16670 util: Add join helper to join a list of strings (MarcoFalke)\n+- #16665 scripts: Move update-translations.py to maintainer-tools repo (fanquake)\n+- #16730 Support serialization of `std::vector<bool>` (sipa)\n+- #16556 Fix systemd service file configuration directory setup (setpill)\n+- #15615 Add log output during initial header sync (jonasschnelli)\n+- #16774 Avoid unnecessary \"Synchronizing blockheaders\" log messages (jonasschnelli)\n+- #16489 log: harmonize bitcoind logging (jonatack)\n+- #16577 util: Cbufferedfile fixes and unit test (LarryRuane)\n+- #16984 util: Make thread names shorter (hebasto)\n+- #17038 Don't rename main thread at process level (laanwj)\n+- #17184 util: Filter out macos process serial number (hebasto)\n+- #17095 util: Filter control characters out of log messages (laanwj)\n+- #17085 init: Change fallback locale to C.UTF-8 (laanwj)\n+- #16957 9% less memory: make SaltedOutpointHasher noexcept (martinus)\n+\n+### Documentation\n+- #15514 Update Transifex links (fanquake)\n+- #15513 add \"sections\" info to example bitcoin.conf (fanquake)\n+- #15530 Move wallet lock annotations to header (MarcoFalke)\n+- #15562 remove duplicate clone step in build-windows.md (fanquake)\n+- #15565 remove release note fragments (fanquake)\n+- #15444 Additional productivity tips (Sjors)\n+- #15577 Enable TLS in link to chris.beams.io (JeremyRand)\n+- #15604 release note for disabling reject messages by default (jnewbery)\n+- #15611 Add Gitian key for droark (droark)\n+- #15626 Update ACK description in CONTRIBUTING.md (jonatack)\n+- #15603 Add more tips to productivity.md (gwillen)\n+- #15683 Comment for seemingly duplicate LIBBITCOIN_SERVER (Bushstar)\n+- #15685 rpc-mining: Clarify error messages (MarcoFalke)\n+- #15760 Clarify sendrawtransaction::maxfeerate==0 help (MarcoFalke)\n+- #15659 fix findFork comment (r8921039)\n+- #15718 Improve netaddress comments (dongcarl)\n+- #15833 remove out-of-date comment on pay-to-witness support (r8921039)\n+- #15821 Remove upgrade note in release notes from EOL versions (MarcoFalke)\n+- #15267 explain AcceptToMemoryPoolWorker's coins_to_uncache (jamesob)\n+- #15887 Align code example style with clang-format (hebasto)\n+- #15877 Fix -dustrelayfee= argument docs grammar (keepkeyjon)\n+- #15908 Align MSVC build options with Linux build ones (hebasto)\n+- #15941 Add historical release notes for 0.18.0 (laanwj)\n+- #15794 Clarify PR guidelines w/re documentation (dongcarl)\n+- #15607 Release process updates (jonatack)\n+- #14364 Clarify -blocksdir usage (sangaman)\n+- #15777 Add doxygen comments for keypool classes (jnewbery)\n+- #15820 Add productivity notes for dummy rebases (dongcarl)\n+- #15922 Explain how to pass in non-fundamental types into functions (MarcoFalke)\n+- #16080 build/doc: update bitcoin_config.h packages, release process (jonatack)\n+- #16047 analyzepsbt description in doc/psbt.md (jonatack)\n+- #16039 add release note for 14954 (fanquake)\n+- #16139 Add riscv64 to outputs list in release-process.md (JeremyRand)\n+- #16140 create security policy (narula)\n+- #16164 update release process for SECURITY.md (jonatack)\n+- #16213 Remove explicit mention of versions from SECURITY.md (MarcoFalke)\n+- #16186 doc/lint: Fix spelling errors identified by codespell 1.15.0 (Empact)\n+- #16149 Rework section on ACK in CONTRIBUTING.md (MarcoFalke)\n+- #16196 Add release notes for 14897 & 15834 (MarcoFalke)\n+- #16241 add rapidcheck to vcpkg install list (fanquake)\n+- #16243 Remove travis badge from readme (MarcoFalke)\n+- #16256 remove orphaned header in developer notes (jonatack)\n+- #15964 Improve build-osx document formatting (giulio92)\n+- #16313 Fix broken link in doc/build-osx.md (jonatack)\n+- #16330 Use placeholder instead of key expiration date (hebasto)\n+- #16339 add reduce-memory.md (fanquake)\n+- #16347 Include static members in Doxygen (dongcarl)\n+- #15824 Improve netbase comments (dongcarl)\n+- #16430 Update bips 35, 37 and 111 status (MarcoFalke)\n+- #16455 Remove downgrading warning in release notes, per 0.18 branch (MarcoFalke)\n+- #16484 update labels in CONTRIBUTING.md (MarcoFalke)\n+- #16483 update Python command in msvc readme (sipsorcery)\n+- #16504 Add release note for the deprecated totalFee option of bumpfee (promag)\n+- #16448 add note on precedence of options in bitcoin.conf (fanquake)\n+- #16536 Update and extend benchmarking.md (ariard)\n+- #16530 Fix grammar and punctuation in developer notes (Tech1k)\n+- #16574 Add historical release notes for 0.18.1 (laanwj)\n+- #16585 Update Markdown syntax for bdb packages (emilengler)\n+- #16586 Mention other ways to conserve memory on compilation (MarcoFalke)\n+- #16605 Add missing contributor to 0.18.1 release notes (meshcollider)\n+- #16615 Fix typos in COPYRIGHT (gapeman)\n+- #16626 Fix spelling error chache -> cache (nilswloewen)\n+- #16587 Improve versionbits.h documentation (ariard)\n+- #16643 Add ZMQ dependencies to the Fedora build instructions (hebasto)\n+- #16634 Refer in rpcbind doc to the manpage (MarcoFalke)\n+- #16555 mention whitelist is inbound, and applies to blocksonly (Sjors)\n+- #16645 initial RapidCheck property-based testing documentation (jonatack)\n+- #16691 improve depends prefix documentation (fanquake)\n+- #16629 Add documentation for the new whitelist permissions (NicolasDorier)\n+- #16723 Update labels in CONTRIBUTING.md (hebasto)\n+- #16461 Tidy up shadowing section (promag)\n+- #16621 add default bitcoin.conf locations (GChuf)\n+- #16752 Delete stale URL in test README (michaelfolkson)\n+- #14862 Declare BLOCK_VALID_HEADER reserved (MarcoFalke)\n+- #16806 Add issue templates for bug and feature request (MarcoFalke)\n+- #16857 Elaborate need to re-login on Debian-based after usermod for Tor group (clashicly)\n+- #16863 Add a missing closing parenthesis in the bitcoin-wallet's help (darosior)\n+- #16757 CChainState return values (MarcoFalke)\n+- #16847 add comments clarifying how local services are advertised (jamesob)\n+- #16812 Fix whitespace errs in .md files, bitcoin.conf, and Info.plist.in (ch4ot1c)\n+- #16885 Update tx-size-small comment with relevant CVE disclosure (instagibbs)\n+- #16900 Fix doxygen comment for SignTransaction in rpc/rawtransaction_util (MarcoFalke)\n+- #16914 Update homebrew instruction for doxygen (Sjors)\n+- #16912 Remove Doxygen intro from src/bitcoind.cpp (ch4ot1c)\n+- #16960 replace outdated OpenSSL comment in test README (fanquake)\n+- #16968 Remove MSVC update step from translation process (laanwj)\n+- #16953 Improve test READMEs (fjahr)\n+- #16962 Put PR template in comments (laanwj)\n+- #16397 Clarify includeWatching for fundrawtransaction (stevenroose)\n+- #15459 add how to calculate blockchain and chainstate size variables to release process (marcoagner)\n+- #16997 Update bips.md for 0.19 (laanwj)\n+- #17001 Remove mention of renamed mapBlocksUnlinked (MarcoFalke)\n+- #17014 Consolidate release notes before 0.19.0 (move-only) (MarcoFalke)\n+- #17111 update bips.md with buried BIP9 deployments (MarcoFalke)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 251\n+- Aaron Clauson\n+- Akio Nakamura\n+- Alistair Mann\n+- Amiti Uttarwar\n+- Andrew Chow\n+- andrewtoth\n+- Anthony Towns\n+- Antoine Riard\n+- Aseem Sood\n+- Ben Carman\n+- Ben Woosley\n+- bpay\n+- Carl Dong\n+- Carnhof Daki\n+- Chris Capobianco\n+- Chris Moore\n+- Chuf\n+- clashic\n+- clashicly\n+- Cory Fields\n+- Daki Carnhof\n+- Dan Gershony\n+- Daniel Edgecumbe\n+- Daniel Kraft\n+- Daniel McNally\n+- darosior\n+- David A. Harding\n+- David Reikher\n+- Douglas Roark\n+- Elichai Turkel\n+- Emil\n+- Emil Engler\n+- ezegom\n+- Fabian Jahr\n+- fanquake\n+- Felix Weis\n+- Ferdinando M. Ametrano\n+- fridokus\n+- gapeman\n+- GChuf\n+- Gert-Jaap Glasbergen\n+- Giulio Lombardo\n+- Glenn Willen\n+- Graham Krizek\n+- Gregory Sanders\n+- grim-trigger\n+- gwillen\n+- Hennadii Stepanov\n+- Jack Mallers\n+- James Hilliard\n+- James O'Beirne\n+- Jan Beich\n+- Jeremy Rubin\n+- JeremyRand\n+- Jim Posen\n+- John Bampton\n+- John Newbery\n+- Jon Atack\n+- Jon Layton\n+- Jonas Schnelli\n+- Jonathan \"Duke\" Leto\n+- Jo\u00e3o Barbosa\n+- Joonmo Yang\n+- Jordan Baczuk\n+- Jorge Tim\u00f3n\n+- Josu Go\u00f1i\n+- Julian Fleischer\n+- Karl-Johan Alm\n+- Kaz Wesley\n+- keepkeyjon\n+- Kirill Fomichev\n+- Kristaps Kaupe\n+- Kristian Kramer\n+- Larry Ruane\n+- Lenny Maiorani\n+- LongShao007\n+- Luca Venturini\n+- lucash-dev\n+- Luke Dashjr\n+- marcoagner\n+- MarcoFalke\n+- marcuswin\n+- Martin Ankerl\n+- Martin Zumsande\n+- Matt Corallo\n+- MeshCollider\n+- Michael Folkson\n+- Miguel Herranz\n+- Nathan Marley\n+- Neha Narula\n+- nicolas.dorier\n+- Nils Loewen\n+- nkostoulas\n+- orient\n+- Patrick Strateman\n+- Peter Bushnell\n+- Peter Wagner\n+- Pieter Wuille\n+- practicalswift\n+- qmma\n+- r8921039\n+- RJ Rybarczyk\n+- Russell Yanofsky\n+- Samuel Dobson\n+- Sebastian Falbesoner\n+- setpill\n+- shannon1916\n+- Sjors Provoost\n+- soroosh-sdi\n+- Steven Roose\n+- Suhas Daftuar\n+- tecnovert\n+- THETCR\n+- Tim Ruffing\n+- Tobias Kaderle\n+- Torkel Rogstad\n+- Ulrich Kempken\n+- whythat\n+- William Casarin\n+- Wladimir J. van der Laan\n+- zenosage\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      },
      {
        "sha": "9c77cb9ae5e5a88f9917bdb33cfc9bed030f4fbb",
        "filename": "doc/release-notes/release-notes-16152.md",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/doc/release-notes/release-notes-16152.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/doc/release-notes/release-notes-16152.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-16152.md?ref=485b429c40f8005002006087153304eef80fc057",
        "patch": "@@ -1,7 +0,0 @@\n-P2P Changes\n------------\n-- The default value for the -peerbloomfilters configuration option (and, thus, NODE_BLOOM support) has been changed to false.\n-  This resolves well-known DoS vectors in Bitcoin Core, especially for nodes with spinning disks. It is not anticipated that\n-  this will result in a significant lack of availability of NODE_BLOOM-enabled nodes in the coming years, however, clients\n-  which rely on the availability of NODE_BLOOM-supporting nodes on the P2P network should consider the process of migrating\n-  to a more modern (and less trustful and privacy-violating) alternative over the coming years."
      },
      {
        "sha": "2c3c4e3869a6f66953255e415bb222cbe83f890d",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 31,
        "deletions": 11,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -11,22 +11,12 @@ Release Process\n \n ### Before every major and minor release\n \n-* Update [bips.md](bips.md) to account for changes since the last release.\n+* Update [bips.md](bips.md) to account for changes since the last release (don't forget to bump the version number on the first line).\n * Update version in `configure.ac` (don't forget to set `CLIENT_VERSION_RC` to `0`).\n * Write release notes (see \"Write the release notes\" below).\n-* Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n-* Update `src/chainparams.cpp` defaultAssumeValid with information from the getblockhash rpc.\n-  - The selected value must not be orphaned so it may be useful to set the value two blocks back from the tip.\n-  - Testnet should be set some tens of thousands back from the tip due to reorgs there.\n-  - This update should be reviewed with a reindex-chainstate with assumevalid=0 to catch any defect\n-     that causes rejection of blocks in the past history.\n \n ### Before every major release\n \n-* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/bitcoin/bitcoin/pull/7415) for an example.\n-* Update [`src/chainparams.cpp`](/src/chainparams.cpp) m_assumed_blockchain_size and m_assumed_chain_state_size with the current size plus some overhead.\n-* Update `src/chainparams.cpp` chainTxData with statistics about the transaction count and rate. Use the output of the RPC `getchaintxstats`, see\n-  [this pull request](https://github.com/bitcoin/bitcoin/pull/12270) for an example. Reviewers can verify the results by running `getchaintxstats <window_block_count> <window_last_block_hash>` with the `window_block_count` and `window_last_block_hash` from your output.\n * On both the master branch and the new release branch:\n   - update `CLIENT_VERSION_MINOR` in [`configure.ac`](../configure.ac)\n   - update `CLIENT_VERSION_MINOR`, `PACKAGE_VERSION`, and `PACKAGE_STRING` in [`build_msvc/bitcoin_config.h`](/build_msvc/bitcoin_config.h)\n@@ -36,6 +26,16 @@ Release Process\n \n #### Before branch-off\n \n+* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/bitcoin/bitcoin/pull/7415) for an example.\n+* Update [`src/chainparams.cpp`](/src/chainparams.cpp) m_assumed_blockchain_size and m_assumed_chain_state_size with the current size plus some overhead (see [this](#how-to-calculate-m_assumed_blockchain_size-and-m_assumed_chain_state_size) for information on how to calculate them).\n+* Update `src/chainparams.cpp` chainTxData with statistics about the transaction count and rate. Use the output of the RPC `getchaintxstats`, see\n+  [this pull request](https://github.com/bitcoin/bitcoin/pull/17002) for an example. Reviewers can verify the results by running `getchaintxstats <window_block_count> <window_last_block_hash>` with the `window_block_count` and `window_last_block_hash` from your output.\n+* Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n+* Update `src/chainparams.cpp` defaultAssumeValid with information from the getblockhash rpc.\n+  - The selected value must not be orphaned so it may be useful to set the value two blocks back from the tip.\n+  - Testnet should be set some tens of thousands back from the tip due to reorgs there.\n+  - This update should be reviewed with a reindex-chainstate with assumevalid=0 to catch any defect\n+     that causes rejection of blocks in the past history.\n - Clear the release notes and move them to the wiki (see \"Write the release notes\" below).\n \n #### After branch-off (on master)\n@@ -369,3 +369,23 @@ bitcoin.org (see below for bitcoin.org update instructions).\n   - Optionally twitter, reddit /r/Bitcoin, ... but this will usually sort out itself\n \n   - Celebrate\n+\n+### Additional information\n+\n+#### How to calculate `m_assumed_blockchain_size` and `m_assumed_chain_state_size`\n+\n+Both variables are used as a guideline for how much space the user needs on their drive in total, not just strictly for the blockchain.\n+Note that all values should be taken from a **fully synced** node and have an overhead of 5-10% added on top of its base value.\n+\n+To calculate `m_assumed_blockchain_size`:\n+- For `mainnet` -> Take the size of the data directory, excluding `/regtest` and `/testnet3` directories.\n+- For `testnet` -> Take the size of the `/testnet3` directory.\n+\n+\n+To calculate `m_assumed_chain_state_size`:\n+- For `mainnet` -> Take the size of the `/chainstate` directory.\n+- For `testnet` -> Take the size of the `/testnet3/chainstate` directory.\n+\n+Notes:\n+- When taking the size for `m_assumed_blockchain_size`, there's no need to exclude the `/chainstate` directory since it's a guideline value and an overhead will be added anyway.\n+- The expected overhead for growth may change over time, so it may not be the same value as last release; pay attention to that when changing the variables."
      },
      {
        "sha": "2c54e32f8455a57928e20278abe5bdece76b7773",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -114,7 +114,10 @@ preconfigured and the creation of a hidden service is automatic. If permission p\n are seen with `-debug=tor` they can be resolved by adding both the user running Tor and\n the user running bitcoind to the same group and setting permissions appropriately. On\n Debian-based systems the user running bitcoind can be added to the debian-tor group,\n-which has the appropriate permissions.\n+which has the appropriate permissions. Before starting bitcoind you will need to re-login\n+to allow debian-tor group to be applied. Otherwise you will see the following notice: \"tor:\n+Authentication cookie /run/tor/control.authcookie could not be opened (check permissions)\"\n+on debug.log.\n \n An alternative authentication method is the use\n of the `-torpassword=password` option. The `password` is the clear text form that"
      },
      {
        "sha": "39f878cea3bc761da11c969d7874b04a2bf95b98",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -65,24 +65,18 @@ username = USERNAME\n The Transifex Bitcoin project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn\u2019t need to change anything.\n \n ### Synchronising translations\n-To assist in updating translations, we have created a script to help.\n+To assist in updating translations, a helper script is available in the [maintainer-tools repo](https://github.com/bitcoin-core/bitcoin-maintainer-tools).\n \n-1. `python contrib/devtools/update-translations.py`\n+1. `python3 ../bitcoin-maintainer-tools/update-translations.py`\n 2. `git add` new translations from `src/qt/locale/`\n 3. Update `src/qt/bitcoin_locale.qrc` manually or via\n ```bash\n-git ls-files src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'\n+git ls-files src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/        <file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'\n ```\n-4. Update `src/Makefile.qt.include` manually or via\n+4. Update `src/Makefile.qt_locale.include` manually or via\n ```bash\n git ls-files src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'\n ```\n-5. Update `build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj` or via\n-```bash\n-git ls-files src/qt/locale/*ts|xargs -n1 basename |\n-  sed 's/@/%40/' |\n-  sed 's/\\(bitcoin_\\(.*\\)\\).ts/    <None Include=\"..\\\\..\\\\src\\\\qt\\\\locale\\\\\\1.ts\">\\n      <DeploymentContent>true<\\/DeploymentContent>\\n    <\\/None>/'\n-```\n \n **Do not directly download translations** one by one from the Transifex website, as we do a few post-processing steps before committing the translations.\n "
      },
      {
        "sha": "a309abd0cc53ad7dbfb4626e9a15405658d417a4",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -111,7 +111,9 @@ using other means such as firewalling.\n \n Note that when the block chain tip changes, a reorganisation may occur\n and just the tip will be notified. It is up to the subscriber to\n-retrieve the chain from the last known block to the new tip.\n+retrieve the chain from the last known block to the new tip. Also note\n+that no notification occurs if the tip was in the active chain - this\n+is the case after calling invalidateblock RPC.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type you are"
      },
      {
        "sha": "96fb6658a01bb84ba743270c7d0886109c80bf38",
        "filename": "share/examples/bitcoin.conf",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/share/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/share/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/examples/bitcoin.conf?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,7 +1,7 @@\n ##\n ## bitcoin.conf configuration file. Lines beginning with # are comments.\n ##\n- \n+\n # Network-related settings:\n \n # Note that if you use testnet or regtest, particularly with the options\n@@ -70,8 +70,8 @@\n # server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n #server=0\n \n-# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n-# This option can be specified multiple times (default: bind to all interfaces)\n+# Bind to given address to listen for JSON-RPC connections.\n+# Refer to the manpage or bitcoind -help for further details.\n #rpcbind=<addr>\n \n # If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n@@ -97,7 +97,7 @@\n # rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n \n # How many seconds bitcoin will wait for a complete RPC HTTP request.\n-# after the HTTP connection is established. \n+# after the HTTP connection is established.\n #rpcclienttimeout=30\n \n # By default, only RPC connections from localhost are allowed.\n@@ -108,7 +108,7 @@\n # because the rpcpassword is transmitted over the network unencrypted.\n \n # server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n+# it is also read by bitcoind to determine if RPC should be enabled\n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24\n #rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n@@ -139,11 +139,11 @@\n # both prior transactions and several dozen future transactions.\n #keypool=100\n \n-# Enable pruning to reduce storage requirements by deleting old blocks. \n+# Enable pruning to reduce storage requirements by deleting old blocks.\n # This mode is incompatible with -txindex and -rescan.\n # 0 = default (no pruning).\n # 1 = allows manual pruning via RPC.\n-# >=550 = target to stay under in MiB. \n+# >=550 = target to stay under in MiB.\n #prune=550\n \n # User interface options"
      },
      {
        "sha": "ffa001bb7f22f20d00aa1a51bf1740a38e4c1dd8",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 2,
        "deletions": 39,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -30,7 +30,7 @@\n \n   <key>CFBundleExecutable</key>\n   <string>Bitcoin-Qt</string>\n-  \n+\n   <key>CFBundleName</key>\n   <string>Bitcoin-Qt</string>\n \n@@ -54,43 +54,6 @@\n     </dict>\n   </array>\n \n-  <key>UTExportedTypeDeclarations</key>\n-  <array>\n-    <dict>\n-      <key>UTTypeIdentifier</key>\n-      <string>org.bitcoin.paymentrequest</string>\n-      <key>UTTypeDescription</key>\n-      <string>Bitcoin payment request</string>\n-      <key>UTTypeConformsTo</key>\n-      <array>\n-        <string>public.data</string>\n-      </array>\n-      <key>UTTypeTagSpecification</key>\n-      <dict>\n-        <key>public.mime-type</key>\n-        <string>application/x-bitcoin-payment-request</string>\n-        <key>public.filename-extension</key>\n-        <array>\n-          <string>bitcoinpaymentrequest</string>\n-        </array>\n-      </dict>\n-    </dict>\n-  </array>\n-\n-  <key>CFBundleDocumentTypes</key>\n-  <array>\n-    <dict>\n-      <key>CFBundleTypeRole</key>\n-      <string>Editor</string>\n-      <key>LSItemContentTypes</key>\n-      <array>\n-        <string>org.bitcoin.paymentrequest</string>\n-      </array>\n-      <key>LSHandlerRank</key>\n-      <string>Owner</string>\n-    </dict>\n-  </array>\n-\n   <key>NSPrincipalClass</key>\n     <string>NSApplication</string>\n \n@@ -99,7 +62,7 @@\n \n   <key>NSRequiresAquaSystemAppearance</key>\n     <string>True</string>\n-  \n+\n   <key>LSApplicationCategoryType</key>\n     <string>public.app-category.finance</string>\n </dict>"
      },
      {
        "sha": "649483c7329b5537ee2368e3643123b6c7bb8abe",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -48,7 +48,7 @@ Var StartMenuGroup\n !insertmacro MUI_LANGUAGE English\n \n # Installer attributes\n-OutFile @abs_top_srcdir@/@PACKAGE_TARNAME@-@PACKAGE_VERSION@-win@WINDOWS_BITS@-setup.exe\n+OutFile @abs_top_srcdir@/@PACKAGE_TARNAME@-@PACKAGE_VERSION@-win@WINDOWS_BITS@-setup-unsigned.exe\n !if \"@WINDOWS_BITS@\" == \"64\"\n InstallDir $PROGRAMFILES64\\Bitcoin\n !else\n@@ -101,7 +101,7 @@ Section -post SEC0001\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayVersion \"@PACKAGE_VERSION@\"\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" Publisher \"${COMPANY}\"\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" URLInfoAbout \"${URL}\"\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayIcon $INSTDIR\\uninstall.exe\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayIcon $INSTDIR\\bitcoin-qt.exe\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" UninstallString $INSTDIR\\uninstall.exe\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1"
      },
      {
        "sha": "aae039dd77f335b5f52da066e3ddee27a9b81ddb",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,6 +5,7 @@ AlignEscapedNewlinesLeft: true\n AlignTrailingComments: true\n AllowAllParametersOfDeclarationOnNextLine: false\n AllowShortBlocksOnASingleLine: false\n+AllowShortCaseLabelsOnASingleLine: true\n AllowShortFunctionsOnASingleLine: All\n AllowShortIfStatementsOnASingleLine: true\n AllowShortLoopsOnASingleLine: false"
      },
      {
        "sha": "a14e44d2c00a03ba1c3a988e97d6fec3dfc78a08",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 24,
        "deletions": 8,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -19,7 +19,7 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n+BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n@@ -146,17 +146,23 @@ BITCOIN_CORE_H = \\\n   dbwrapper.h \\\n   limitedmap.h \\\n   logging.h \\\n+  logging/timer.h \\\n   memusage.h \\\n   merkleblock.h \\\n   miner.h \\\n   net.h \\\n+  net_permissions.h \\\n   net_processing.h \\\n+  net_types.h \\\n   netaddress.h \\\n   netbase.h \\\n   netmessagemaker.h \\\n   node/coin.h \\\n+  node/coinstats.h \\\n+  node/context.h \\\n   node/psbt.h \\\n   node/transaction.h \\\n+  node/utxo_snapshot.h \\\n   noui.h \\\n   optional.h \\\n   outputtype.h \\\n@@ -204,17 +210,23 @@ BITCOIN_CORE_H = \\\n   undo.h \\\n   util/bip32.h \\\n   util/bytevectorhash.h \\\n+  util/check.h \\\n   util/error.h \\\n   util/fees.h \\\n+  util/spanparsing.h \\\n   util/system.h \\\n+  util/macros.h \\\n   util/memory.h \\\n   util/moneystr.h \\\n   util/rbf.h \\\n+  util/settings.h \\\n+  util/string.h \\\n   util/threadnames.h \\\n   util/time.h \\\n   util/translation.h \\\n   util/url.h \\\n   util/validation.h \\\n+  util/vector.h \\\n   validation.h \\\n   validationinterface.h \\\n   versionbits.h \\\n@@ -229,6 +241,7 @@ BITCOIN_CORE_H = \\\n   wallet/load.h \\\n   wallet/psbtwallet.h \\\n   wallet/rpcwallet.h \\\n+  wallet/scriptpubkeyman.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n   wallet/wallettool.h \\\n@@ -276,6 +289,8 @@ libbitcoin_server_a_SOURCES = \\\n   net.cpp \\\n   net_processing.cpp \\\n   node/coin.cpp \\\n+  node/coinstats.cpp \\\n+  node/context.cpp \\\n   node/psbt.cpp \\\n   node/transaction.cpp \\\n   noui.cpp \\\n@@ -331,11 +346,11 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/db.cpp \\\n   wallet/feebumper.cpp \\\n   wallet/fees.cpp \\\n-  wallet/ismine.cpp \\\n   wallet/load.cpp \\\n   wallet/psbtwallet.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n+  wallet/scriptpubkeyman.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n   wallet/walletutil.cpp \\\n@@ -454,6 +469,7 @@ libbitcoin_common_a_SOURCES = \\\n   merkleblock.cpp \\\n   netaddress.cpp \\\n   netbase.cpp \\\n+  net_permissions.cpp \\\n   outputtype.cpp \\\n   policy/feerate.cpp \\\n   policy/policy.cpp \\\n@@ -479,6 +495,7 @@ libbitcoin_util_a_SOURCES = \\\n   support/lockedpool.cpp \\\n   chainparamsbase.cpp \\\n   clientversion.cpp \\\n+  compat/glibc_sanity_fdelt.cpp \\\n   compat/glibc_sanity.cpp \\\n   compat/glibcxx_sanity.cpp \\\n   compat/strnlen.cpp \\\n@@ -497,8 +514,11 @@ libbitcoin_util_a_SOURCES = \\\n   util/system.cpp \\\n   util/moneystr.cpp \\\n   util/rbf.cpp \\\n+  util/settings.cpp \\\n   util/threadnames.cpp \\\n+  util/spanparsing.cpp \\\n   util/strencodings.cpp \\\n+  util/string.cpp \\\n   util/time.cpp \\\n   util/url.cpp \\\n   util/validation.cpp \\\n@@ -513,6 +533,8 @@ endif\n libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_cli_a_SOURCES = \\\n+  compat/stdin.h \\\n+  compat/stdin.cpp \\\n   rpc/client.cpp \\\n   $(BITCOIN_CORE_H)\n \n@@ -688,12 +710,6 @@ if HARDEN\n \t$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) $(PYTHON) $(top_srcdir)/contrib/devtools/security-check.py < $(bin_PROGRAMS)\n endif\n \n-if ENABLE_BIP70\n-%.pb.cc %.pb.h: %.proto\n-\t@test -f $(PROTOC)\n-\t$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(<D) $<\n-endif\n-\n if EMBEDDED_LEVELDB\n include Makefile.leveldb.include\n endif"
      },
      {
        "sha": "c9e4fcc4bcd80ca0fd388173365dca4b2a6115be",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -30,6 +30,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/gcs_filter.cpp \\\n   bench/merkle_root.cpp \\\n   bench/mempool_eviction.cpp \\\n+  bench/mempool_stress.cpp \\\n   bench/rpc_blockchain.cpp \\\n   bench/rpc_mempool.cpp \\\n   bench/util_time.cpp \\\n@@ -39,8 +40,10 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/lockedpool.cpp \\\n   bench/poly1305.cpp \\\n   bench/prevector.cpp \\\n-  test/setup_common.h \\\n-  test/setup_common.cpp \\\n+  test/util/transaction_utils.h \\\n+  test/util/transaction_utils.cpp \\\n+  test/util/setup_common.h \\\n+  test/util/setup_common.cpp \\\n   test/util.h \\\n   test/util.cpp\n "
      },
      {
        "sha": "13b1470b58ea46db23dc2b8336c10c3ff97aeb0d",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 14,
        "deletions": 136,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,98 +6,13 @@ bin_PROGRAMS += qt/bitcoin-qt\n EXTRA_LIBRARIES += qt/libbitcoinqt.a\n \n # bitcoin qt core #\n-QT_TS = \\\n-  qt/locale/bitcoin_af.ts \\\n-  qt/locale/bitcoin_af_ZA.ts \\\n-  qt/locale/bitcoin_ar.ts \\\n-  qt/locale/bitcoin_be_BY.ts \\\n-  qt/locale/bitcoin_bg_BG.ts \\\n-  qt/locale/bitcoin_bg.ts \\\n-  qt/locale/bitcoin_ca_ES.ts \\\n-  qt/locale/bitcoin_ca.ts \\\n-  qt/locale/bitcoin_ca@valencia.ts \\\n-  qt/locale/bitcoin_cs.ts \\\n-  qt/locale/bitcoin_cy.ts \\\n-  qt/locale/bitcoin_da.ts \\\n-  qt/locale/bitcoin_de.ts \\\n-  qt/locale/bitcoin_el_GR.ts \\\n-  qt/locale/bitcoin_el.ts \\\n-  qt/locale/bitcoin_en_GB.ts \\\n-  qt/locale/bitcoin_en.ts \\\n-  qt/locale/bitcoin_eo.ts \\\n-  qt/locale/bitcoin_es_AR.ts \\\n-  qt/locale/bitcoin_es_CL.ts \\\n-  qt/locale/bitcoin_es_CO.ts \\\n-  qt/locale/bitcoin_es_DO.ts \\\n-  qt/locale/bitcoin_es_ES.ts \\\n-  qt/locale/bitcoin_es_MX.ts \\\n-  qt/locale/bitcoin_es.ts \\\n-  qt/locale/bitcoin_es_UY.ts \\\n-  qt/locale/bitcoin_es_VE.ts \\\n-  qt/locale/bitcoin_et_EE.ts \\\n-  qt/locale/bitcoin_et.ts \\\n-  qt/locale/bitcoin_eu_ES.ts \\\n-  qt/locale/bitcoin_fa_IR.ts \\\n-  qt/locale/bitcoin_fa.ts \\\n-  qt/locale/bitcoin_fi.ts \\\n-  qt/locale/bitcoin_fr_CA.ts \\\n-  qt/locale/bitcoin_fr_FR.ts \\\n-  qt/locale/bitcoin_fr.ts \\\n-  qt/locale/bitcoin_gl.ts \\\n-  qt/locale/bitcoin_he.ts \\\n-  qt/locale/bitcoin_hi_IN.ts \\\n-  qt/locale/bitcoin_hr.ts \\\n-  qt/locale/bitcoin_hu.ts \\\n-  qt/locale/bitcoin_id_ID.ts \\\n-  qt/locale/bitcoin_it_IT.ts \\\n-  qt/locale/bitcoin_it.ts \\\n-  qt/locale/bitcoin_ja.ts \\\n-  qt/locale/bitcoin_ka.ts \\\n-  qt/locale/bitcoin_kk_KZ.ts \\\n-  qt/locale/bitcoin_ko_KR.ts \\\n-  qt/locale/bitcoin_ku_IQ.ts \\\n-  qt/locale/bitcoin_ky.ts \\\n-  qt/locale/bitcoin_la.ts \\\n-  qt/locale/bitcoin_lt.ts \\\n-  qt/locale/bitcoin_lv_LV.ts \\\n-  qt/locale/bitcoin_mk_MK.ts \\\n-  qt/locale/bitcoin_mn.ts \\\n-  qt/locale/bitcoin_ms_MY.ts \\\n-  qt/locale/bitcoin_nb.ts \\\n-  qt/locale/bitcoin_ne.ts \\\n-  qt/locale/bitcoin_nl.ts \\\n-  qt/locale/bitcoin_pam.ts \\\n-  qt/locale/bitcoin_pl.ts \\\n-  qt/locale/bitcoin_pt_BR.ts \\\n-  qt/locale/bitcoin_pt_PT.ts \\\n-  qt/locale/bitcoin_ro_RO.ts \\\n-  qt/locale/bitcoin_ro.ts \\\n-  qt/locale/bitcoin_ru_RU.ts \\\n-  qt/locale/bitcoin_ru.ts \\\n-  qt/locale/bitcoin_sk.ts \\\n-  qt/locale/bitcoin_sl_SI.ts \\\n-  qt/locale/bitcoin_sq.ts \\\n-  qt/locale/bitcoin_sr@latin.ts \\\n-  qt/locale/bitcoin_sr.ts \\\n-  qt/locale/bitcoin_sv.ts \\\n-  qt/locale/bitcoin_ta.ts \\\n-  qt/locale/bitcoin_th_TH.ts \\\n-  qt/locale/bitcoin_tr_TR.ts \\\n-  qt/locale/bitcoin_tr.ts \\\n-  qt/locale/bitcoin_uk.ts \\\n-  qt/locale/bitcoin_ur_PK.ts \\\n-  qt/locale/bitcoin_uz@Cyrl.ts \\\n-  qt/locale/bitcoin_vi.ts \\\n-  qt/locale/bitcoin_vi_VN.ts \\\n-  qt/locale/bitcoin_zh_CN.ts \\\n-  qt/locale/bitcoin_zh_HK.ts \\\n-  qt/locale/bitcoin_zh.ts \\\n-  qt/locale/bitcoin_zh_TW.ts\n+include Makefile.qt_locale.include\n \n QT_FORMS_UI = \\\n   qt/forms/addressbookpage.ui \\\n   qt/forms/askpassphrasedialog.ui \\\n   qt/forms/coincontroldialog.ui \\\n+  qt/forms/createwalletdialog.ui \\\n   qt/forms/editaddressdialog.ui \\\n   qt/forms/helpmessagedialog.ui \\\n   qt/forms/intro.ui \\\n@@ -117,6 +32,7 @@ QT_MOC_CPP = \\\n   qt/moc_addressbookpage.cpp \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n+  qt/moc_createwalletdialog.cpp \\\n   qt/moc_bantablemodel.cpp \\\n   qt/moc_bitcoinaddressvalidator.cpp \\\n   qt/moc_bitcoinamountfield.cpp \\\n@@ -179,16 +95,6 @@ QT_QRC = qt/bitcoin.qrc\n QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp\n QT_QRC_LOCALE = qt/bitcoin_locale.qrc\n \n-if ENABLE_BIP70\n-PROTOBUF_CC = qt/paymentrequest.pb.cc\n-PROTOBUF_H = qt/paymentrequest.pb.h\n-PROTOBUF_PROTO = qt/paymentrequest.proto\n-else\n-PROTOBUF_CC =\n-PROTOBUF_H =\n-PROTOBUF_PROTO =\n-endif\n-\n BITCOIN_QT_H = \\\n   qt/addressbookpage.h \\\n   qt/addresstablemodel.h \\\n@@ -202,6 +108,7 @@ BITCOIN_QT_H = \\\n   qt/clientmodel.h \\\n   qt/coincontroldialog.h \\\n   qt/coincontroltreewidget.h \\\n+  qt/createwalletdialog.h \\\n   qt/csvmodelwriter.h \\\n   qt/editaddressdialog.h \\\n   qt/guiconstants.h \\\n@@ -217,7 +124,6 @@ BITCOIN_QT_H = \\\n   qt/optionsdialog.h \\\n   qt/optionsmodel.h \\\n   qt/overviewpage.h \\\n-  qt/paymentrequestplus.h \\\n   qt/paymentserver.h \\\n   qt/peertablemodel.h \\\n   qt/platformstyle.h \\\n@@ -250,8 +156,6 @@ BITCOIN_QT_H = \\\n RES_ICONS = \\\n   qt/res/icons/add.png \\\n   qt/res/icons/address-book.png \\\n-  qt/res/icons/about.png \\\n-  qt/res/icons/about_qt.png \\\n   qt/res/icons/bitcoin.ico \\\n   qt/res/icons/bitcoin_testnet.ico \\\n   qt/res/icons/bitcoin.png \\\n@@ -261,35 +165,28 @@ RES_ICONS = \\\n   qt/res/icons/clock3.png \\\n   qt/res/icons/clock4.png \\\n   qt/res/icons/clock5.png \\\n-  qt/res/icons/configure.png \\\n   qt/res/icons/connect0.png \\\n   qt/res/icons/connect1.png \\\n   qt/res/icons/connect2.png \\\n   qt/res/icons/connect3.png \\\n   qt/res/icons/connect4.png \\\n-  qt/res/icons/debugwindow.png \\\n   qt/res/icons/edit.png \\\n   qt/res/icons/editcopy.png \\\n   qt/res/icons/editpaste.png \\\n   qt/res/icons/export.png \\\n   qt/res/icons/eye.png \\\n   qt/res/icons/eye_minus.png \\\n   qt/res/icons/eye_plus.png \\\n-  qt/res/icons/filesave.png \\\n   qt/res/icons/fontbigger.png \\\n   qt/res/icons/fontsmaller.png \\\n   qt/res/icons/hd_disabled.png \\\n   qt/res/icons/hd_enabled.png \\\n   qt/res/icons/history.png \\\n-  qt/res/icons/info.png \\\n-  qt/res/icons/key.png \\\n   qt/res/icons/lock_closed.png \\\n   qt/res/icons/lock_open.png \\\n   qt/res/icons/network_disabled.png \\\n-  qt/res/icons/open.png \\\n   qt/res/icons/overview.png \\\n   qt/res/icons/proxy.png \\\n-  qt/res/icons/quit.png \\\n   qt/res/icons/receive.png \\\n   qt/res/icons/remove.png \\\n   qt/res/icons/send.png \\\n@@ -302,8 +199,7 @@ RES_ICONS = \\\n   qt/res/icons/tx_input.png \\\n   qt/res/icons/tx_output.png \\\n   qt/res/icons/tx_mined.png \\\n-  qt/res/icons/warning.png \\\n-  qt/res/icons/verify.png\n+  qt/res/icons/warning.png\n \n BITCOIN_QT_BASE_CPP = \\\n   qt/bantablemodel.cpp \\\n@@ -338,6 +234,7 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/askpassphrasedialog.cpp \\\n   qt/coincontroldialog.cpp \\\n   qt/coincontroltreewidget.cpp \\\n+  qt/createwalletdialog.cpp \\\n   qt/editaddressdialog.cpp \\\n   qt/openuridialog.cpp \\\n   qt/overviewpage.cpp \\\n@@ -361,18 +258,12 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/walletmodeltransaction.cpp \\\n   qt/walletview.cpp\n \n-BITCOIN_QT_WALLET_BIP70_CPP = \\\n-  qt/paymentrequestplus.cpp\n-\n BITCOIN_QT_CPP = $(BITCOIN_QT_BASE_CPP)\n if TARGET_WINDOWS\n BITCOIN_QT_CPP += $(BITCOIN_QT_WINDOWS_CPP)\n endif\n if ENABLE_WALLET\n BITCOIN_QT_CPP += $(BITCOIN_QT_WALLET_CPP)\n-if ENABLE_BIP70\n-BITCOIN_QT_CPP += $(BITCOIN_QT_WALLET_BIP70_CPP)\n-endif # ENABLE_BIP70\n endif # ENABLE_WALLET\n \n RES_IMAGES =\n@@ -384,18 +275,17 @@ BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n BITCOIN_QT_INCLUDES = -DQT_NO_KEYWORDS\n \n qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n-  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS)\n qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n qt_libbitcoinqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n-  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n+  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n if TARGET_DARWIN\n   qt_libbitcoinqt_a_SOURCES += $(BITCOIN_MM)\n endif\n \n-nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n-  $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n+nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n \n # forms/foo.h -> forms/ui_foo.h\n QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))\n@@ -405,14 +295,9 @@ QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:\n $(QT_MOC): $(QT_FORMS_H)\n $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n \n-#Generating these with a half-written protobuf header leads to wacky results.\n-#This makes sure it's done.\n-$(QT_MOC): $(PROTOBUF_H)\n-$(QT_MOC_CPP): $(PROTOBUF_H)\n-\n # bitcoin-qt binary #\n qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n-  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+  $(QT_INCLUDES) $(QR_CFLAGS)\n qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_bitcoin_qt_SOURCES = qt/main.cpp\n@@ -427,15 +312,8 @@ if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-if ENABLE_BIP70\n-qt_bitcoin_qt_LDADD += $(SSL_LIBS)\n-else\n-if TARGET_WINDOWS\n-qt_bitcoin_qt_LDADD += $(SSL_LIBS)\n-endif\n-endif\n qt_bitcoin_qt_LDADD += $(CRYPTO_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX\n@@ -445,9 +323,9 @@ QT_QM=$(QT_TS:.ts=.qm)\n \n SECONDARY: $(QT_QM)\n \n-$(srcdir)/qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)\n+$(srcdir)/qt/bitcoinstrings.cpp: FORCE\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" $(PYTHON) ../share/qt/extract_strings_qt.py $^\n+\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" $(PYTHON) ../share/qt/extract_strings_qt.py $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)\n \n translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_BASE_CPP) qt/bitcoin.cpp $(BITCOIN_QT_WINDOWS_CPP) $(BITCOIN_QT_WALLET_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n@@ -460,7 +338,7 @@ $(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \t@rm $(@D)/temp_$(<F)\n \n-$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n+$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n \t@test -f $(RCC)\n \t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@"
      },
      {
        "sha": "fad4873545b0b36436d7f92f7c0224be9b38c38d",
        "filename": "src/Makefile.qt_locale.include",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.qt_locale.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.qt_locale.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt_locale.include?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,99 @@\n+QT_TS = \\\n+  qt/locale/bitcoin_ar.ts \\\n+  qt/locale/bitcoin_be_BY.ts \\\n+  qt/locale/bitcoin_ca.ts \\\n+  qt/locale/bitcoin_cs.ts \\\n+  qt/locale/bitcoin_cs_CZ.ts \\\n+  qt/locale/bitcoin_cy.ts \\\n+  qt/locale/bitcoin_da.ts \\\n+  qt/locale/bitcoin_de.ts \\\n+  qt/locale/bitcoin_de_DE.ts \\\n+  qt/locale/bitcoin_el.ts \\\n+  qt/locale/bitcoin_el_GR.ts \\\n+  qt/locale/bitcoin_en_AU.ts \\\n+  qt/locale/bitcoin_en_GB.ts \\\n+  qt/locale/bitcoin_eo.ts \\\n+  qt/locale/bitcoin_es.ts \\\n+  qt/locale/bitcoin_es_CL.ts \\\n+  qt/locale/bitcoin_es_CO.ts \\\n+  qt/locale/bitcoin_es_DO.ts \\\n+  qt/locale/bitcoin_es_ES.ts \\\n+  qt/locale/bitcoin_es_MX.ts \\\n+  qt/locale/bitcoin_es_VE.ts \\\n+  qt/locale/bitcoin_et.ts \\\n+  qt/locale/bitcoin_et_EE.ts \\\n+  qt/locale/bitcoin_eu.ts \\\n+  qt/locale/bitcoin_fa.ts \\\n+  qt/locale/bitcoin_fi.ts \\\n+  qt/locale/bitcoin_fil.ts \\\n+  qt/locale/bitcoin_fr.ts \\\n+  qt/locale/bitcoin_fr_CA.ts \\\n+  qt/locale/bitcoin_fr_FR.ts \\\n+  qt/locale/bitcoin_gl.ts \\\n+  qt/locale/bitcoin_he.ts \\\n+  qt/locale/bitcoin_he_IL.ts \\\n+  qt/locale/bitcoin_hi.ts \\\n+  qt/locale/bitcoin_hr.ts \\\n+  qt/locale/bitcoin_hu.ts \\\n+  qt/locale/bitcoin_hu_HU.ts \\\n+  qt/locale/bitcoin_id.ts \\\n+  qt/locale/bitcoin_id_ID.ts \\\n+  qt/locale/bitcoin_is.ts \\\n+  qt/locale/bitcoin_it.ts \\\n+  qt/locale/bitcoin_it_IT.ts \\\n+  qt/locale/bitcoin_ja.ts \\\n+  qt/locale/bitcoin_ka.ts \\\n+  qt/locale/bitcoin_kk.ts \\\n+  qt/locale/bitcoin_km.ts \\\n+  qt/locale/bitcoin_ko.ts \\\n+  qt/locale/bitcoin_ku_IQ.ts \\\n+  qt/locale/bitcoin_ky.ts \\\n+  qt/locale/bitcoin_la.ts \\\n+  qt/locale/bitcoin_lt.ts \\\n+  qt/locale/bitcoin_lv.ts \\\n+  qt/locale/bitcoin_lv_LV.ts \\\n+  qt/locale/bitcoin_mk.ts \\\n+  qt/locale/bitcoin_ml.ts \\\n+  qt/locale/bitcoin_mn.ts \\\n+  qt/locale/bitcoin_mr_IN.ts \\\n+  qt/locale/bitcoin_ms.ts \\\n+  qt/locale/bitcoin_ms_MY.ts \\\n+  qt/locale/bitcoin_nb.ts \\\n+  qt/locale/bitcoin_ne.ts \\\n+  qt/locale/bitcoin_nl.ts \\\n+  qt/locale/bitcoin_nl_NL.ts \\\n+  qt/locale/bitcoin_pam.ts \\\n+  qt/locale/bitcoin_pl.ts \\\n+  qt/locale/bitcoin_pt.ts \\\n+  qt/locale/bitcoin_pt_BR.ts \\\n+  qt/locale/bitcoin_pt_PT.ts \\\n+  qt/locale/bitcoin_ro.ts \\\n+  qt/locale/bitcoin_ro_RO.ts \\\n+  qt/locale/bitcoin_ru.ts \\\n+  qt/locale/bitcoin_ru_RU.ts \\\n+  qt/locale/bitcoin_si.ts \\\n+  qt/locale/bitcoin_sk.ts \\\n+  qt/locale/bitcoin_sk_SK.ts \\\n+  qt/locale/bitcoin_sl.ts \\\n+  qt/locale/bitcoin_sl_SI.ts \\\n+  qt/locale/bitcoin_sn.ts \\\n+  qt/locale/bitcoin_sr.ts \\\n+  qt/locale/bitcoin_sr@latin.ts \\\n+  qt/locale/bitcoin_sv.ts \\\n+  qt/locale/bitcoin_szl.ts \\\n+  qt/locale/bitcoin_ta.ts \\\n+  qt/locale/bitcoin_te.ts \\\n+  qt/locale/bitcoin_th.ts \\\n+  qt/locale/bitcoin_tr.ts \\\n+  qt/locale/bitcoin_tr_TR.ts \\\n+  qt/locale/bitcoin_uk.ts \\\n+  qt/locale/bitcoin_uk_UA.ts \\\n+  qt/locale/bitcoin_ur.ts \\\n+  qt/locale/bitcoin_uz@Cyrl.ts \\\n+  qt/locale/bitcoin_vi.ts \\\n+  qt/locale/bitcoin_vi_VN.ts \\\n+  qt/locale/bitcoin_yo.ts \\\n+  qt/locale/bitcoin_zh-Hans.ts \\\n+  qt/locale/bitcoin_zh_CN.ts \\\n+  qt/locale/bitcoin_zh_HK.ts \\\n+  qt/locale/bitcoin_zh_TW.ts"
      },
      {
        "sha": "562b393b229dfd2fe85948c7904f8cb8e890008e",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -15,10 +15,6 @@ if ENABLE_WALLET\n TEST_QT_MOC_CPP += \\\n   qt/test/moc_addressbooktests.cpp \\\n   qt/test/moc_wallettests.cpp\n-if ENABLE_BIP70\n-TEST_QT_MOC_CPP += \\\n-  qt/test/moc_paymentservertests.cpp\n-endif # ENABLE_BIP70\n endif # ENABLE_WALLET\n \n TEST_QT_H = \\\n@@ -28,18 +24,16 @@ TEST_QT_H = \\\n   qt/test/rpcnestedtests.h \\\n   qt/test/uritests.h \\\n   qt/test/util.h \\\n-  qt/test/paymentrequestdata.h \\\n-  qt/test/paymentservertests.h \\\n   qt/test/wallettests.h\n \n TEST_BITCOIN_CPP = \\\n-  test/setup_common.cpp\n+  test/util/setup_common.cpp\n \n TEST_BITCOIN_H = \\\n-  test/setup_common.h\n+  test/util/setup_common.h\n \n qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n-  $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n+  $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n \n qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/apptests.cpp \\\n@@ -56,10 +50,6 @@ qt_test_test_bitcoin_qt_SOURCES += \\\n   qt/test/addressbooktests.cpp \\\n   qt/test/wallettests.cpp \\\n   wallet/test/wallet_test_fixture.cpp\n-if ENABLE_BIP70\n-qt_test_test_bitcoin_qt_SOURCES += \\\n-  qt/test/paymentservertests.cpp\n-endif # ENABLE_BIP70\n endif # ENABLE_WALLET\n \n nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n@@ -73,7 +63,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(QR_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)"
      },
      {
        "sha": "dd1ade54964c089f46036fa247e58f7461f1df11",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 68,
        "deletions": 12,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -7,6 +7,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/address_deserialize \\\n   test/fuzz/addrman_deserialize \\\n   test/fuzz/banentry_deserialize \\\n+  test/fuzz/bech32 \\\n   test/fuzz/block_deserialize \\\n   test/fuzz/blockheader_deserialize \\\n   test/fuzz/blocklocator_deserialize \\\n@@ -16,13 +17,18 @@ FUZZ_TARGETS = \\\n   test/fuzz/blockundo_deserialize \\\n   test/fuzz/bloomfilter_deserialize \\\n   test/fuzz/coins_deserialize \\\n+  test/fuzz/descriptor_parse \\\n   test/fuzz/diskblockindex_deserialize \\\n+  test/fuzz/eval_script \\\n   test/fuzz/inv_deserialize \\\n   test/fuzz/messageheader_deserialize \\\n   test/fuzz/netaddr_deserialize \\\n+  test/fuzz/parse_iso8601 \\\n+  test/fuzz/script \\\n   test/fuzz/script_flags \\\n   test/fuzz/service_deserialize \\\n-  test/fuzz/transaction_deserialize \\\n+  test/fuzz/spanparsing \\\n+  test/fuzz/transaction \\\n   test/fuzz/txoutcompressor_deserialize \\\n   test/fuzz/txundo_deserialize\n \n@@ -51,15 +57,26 @@ RAW_TEST_FILES =\n GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n \n BITCOIN_TEST_SUITE = \\\n+  test/util/blockfilter.cpp \\\n+  test/util/blockfilter.h \\\n+  test/util/logging.cpp \\\n+  test/util/logging.h \\\n+  test/util/transaction_utils.cpp \\\n+  test/util/transaction_utils.h \\\n   test/main.cpp \\\n-  test/setup_common.h \\\n-  test/setup_common.cpp\n+  test/util/setup_common.h \\\n+  test/util/setup_common.cpp \\\n+  test/util/str.h \\\n+  test/util/str.cpp\n \n FUZZ_SUITE = \\\n-  test/setup_common.h \\\n-  test/setup_common.cpp \\\n   test/fuzz/fuzz.cpp \\\n-  test/fuzz/fuzz.h\n+  test/fuzz/fuzz.h \\\n+  test/fuzz/FuzzedDataProvider.h \\\n+  test/util/setup_common.cpp \\\n+  test/util/setup_common.h \\\n+  test/util/str.cpp \\\n+  test/util/str.h\n \n FUZZ_SUITE_LD_COMMON = \\\n  $(LIBBITCOIN_SERVER) \\\n@@ -110,6 +127,7 @@ BITCOIN_TESTS =\\\n   test/key_io_tests.cpp \\\n   test/key_tests.cpp \\\n   test/limitedmap_tests.cpp \\\n+  test/logging_tests.cpp \\\n   test/dbwrapper_tests.cpp \\\n   test/validation_tests.cpp \\\n   test/mempool_tests.cpp \\\n@@ -134,6 +152,7 @@ BITCOIN_TESTS =\\\n   test/script_standard_tests.cpp \\\n   test/scriptnum_tests.cpp \\\n   test/serialize_tests.cpp \\\n+  test/settings_tests.cpp \\\n   test/sighash_tests.cpp \\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n@@ -202,12 +221,6 @@ test_fuzz_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n-test_fuzz_transaction_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n-test_fuzz_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTRANSACTION_DESERIALIZE=1\n-test_fuzz_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_fuzz_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-test_fuzz_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-\n test_fuzz_blocklocator_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n test_fuzz_blocklocator_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKLOCATOR_DESERIALIZE=1\n test_fuzz_blocklocator_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -238,6 +251,12 @@ test_fuzz_banentry_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_banentry_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_banentry_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_bech32_SOURCES = $(FUZZ_SUITE) test/fuzz/bech32.cpp\n+test_fuzz_bech32_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_bech32_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_bech32_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_bech32_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_txundo_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n test_fuzz_txundo_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTXUNDO_DESERIALIZE=1\n test_fuzz_txundo_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -256,12 +275,30 @@ test_fuzz_coins_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_coins_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_coins_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_descriptor_parse_SOURCES = $(FUZZ_SUITE) test/fuzz/descriptor_parse.cpp\n+test_fuzz_descriptor_parse_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_descriptor_parse_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_descriptor_parse_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_descriptor_parse_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_netaddr_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n test_fuzz_netaddr_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DNETADDR_DESERIALIZE=1\n test_fuzz_netaddr_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_netaddr_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_netaddr_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_parse_iso8601_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_iso8601.cpp\n+test_fuzz_parse_iso8601_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_parse_iso8601_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_parse_iso8601_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_iso8601_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_script_SOURCES = $(FUZZ_SUITE) test/fuzz/script.cpp\n+test_fuzz_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_script_flags_SOURCES = $(FUZZ_SUITE) test/fuzz/script_flags.cpp\n test_fuzz_script_flags_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_flags_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -274,6 +311,12 @@ test_fuzz_service_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_service_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_service_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_spanparsing_SOURCES = $(FUZZ_SUITE) test/fuzz/spanparsing.cpp\n+test_fuzz_spanparsing_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_spanparsing_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_spanparsing_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_spanparsing_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_messageheader_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n test_fuzz_messageheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGEHEADER_DESERIALIZE=1\n test_fuzz_messageheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -304,6 +347,12 @@ test_fuzz_diskblockindex_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_diskblockindex_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_diskblockindex_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_eval_script_SOURCES = $(FUZZ_SUITE) test/fuzz/eval_script.cpp\n+test_fuzz_eval_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_eval_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_eval_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_eval_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_txoutcompressor_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n test_fuzz_txoutcompressor_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTXOUTCOMPRESSOR_DESERIALIZE=1\n test_fuzz_txoutcompressor_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -321,6 +370,13 @@ test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCO\n test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blocktransactionsrequest_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_blocktransactionsrequest_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_transaction_SOURCES = $(FUZZ_SUITE) test/fuzz/transaction.cpp\n+test_fuzz_transaction_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_transaction_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n endif # ENABLE_FUZZ\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "ad85224d1fc3d86184ac389244eb8fbdb9ab370c",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_ADDRDB_H\n \n #include <fs.h>\n+#include <net_types.h> // For banmap_t\n #include <serialize.h>\n \n #include <string>\n@@ -79,8 +80,6 @@ class CBanEntry\n     }\n };\n \n-typedef std::map<CSubNet, CBanEntry> banmap_t;\n-\n /** Access to the (IP) address database (peers.dat) */\n class CAddrDB\n {"
      },
      {
        "sha": "1111f27771ce5d2798664d4c3368b8ece06f28f8",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -8,8 +8,6 @@\n #include <uint256.h>\n #include <crypto/common.h>\n \n-#include <stdio.h>\n-#include <string.h>\n \n template <unsigned int BITS>\n base_uint<BITS>::base_uint(const std::string& str)"
      },
      {
        "sha": "171135b01f7e9f34498fbe7458a75e3e099d7098",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,13 +6,11 @@\n #ifndef BITCOIN_ARITH_UINT256_H\n #define BITCOIN_ARITH_UINT256_H\n \n-#include <assert.h>\n #include <cstring>\n #include <limits>\n #include <stdexcept>\n #include <stdint.h>\n #include <string>\n-#include <vector>\n \n class uint256;\n "
      },
      {
        "sha": "7943f666e864a7f7039189d1c0e18de87b138930",
        "filename": "src/banman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/banman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/banman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -10,6 +10,7 @@\n \n #include <addrdb.h>\n #include <fs.h>\n+#include <net_types.h> // For banmap_t\n #include <sync.h>\n \n // NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n@@ -66,5 +67,4 @@ class BanMan\n     const int64_t m_default_ban_time;\n };\n \n-extern std::unique_ptr<BanMan> g_banman;\n #endif"
      },
      {
        "sha": "1e0471f11018ba7223893e68e63f1be0b79a680d",
        "filename": "src/bech32.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -3,6 +3,9 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <bech32.h>\n+#include <util/vector.h>\n+\n+#include <assert.h>\n \n namespace\n {\n@@ -24,13 +27,6 @@ const int8_t CHARSET_REV[128] = {\n      1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1\n };\n \n-/** Concatenate two byte arrays. */\n-data Cat(data x, const data& y)\n-{\n-    x.insert(x.end(), y.begin(), y.end());\n-    return x;\n-}\n-\n /** This function will compute what 6 5-bit values to XOR into the last 6 input values, in order to\n  *  make the checksum 0. These 6 values are packed together in a single 30-bit integer. The higher\n  *  bits correspond to earlier values. */\n@@ -58,7 +54,7 @@ uint32_t PolyMod(const data& v)\n \n     // During the course of the loop below, `c` contains the bitpacked coefficients of the\n     // polynomial constructed from just the values of v that were processed so far, mod g(x). In\n-    // the above example, `c` initially corresponds to 1 mod (x), and after processing 2 inputs of\n+    // the above example, `c` initially corresponds to 1 mod g(x), and after processing 2 inputs of\n     // v, it corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the starting value\n     // for `c`.\n     uint32_t c = 1;\n@@ -145,6 +141,10 @@ namespace bech32\n \n /** Encode a Bech32 string. */\n std::string Encode(const std::string& hrp, const data& values) {\n+    // First ensure that the HRP is all lowercase. BIP-173 requires an encoder\n+    // to return a lowercase Bech32 string, but if given an uppercase HRP, the\n+    // result will always be invalid.\n+    for (const char& c : hrp) assert(c < 'A' || c > 'Z');\n     data checksum = CreateChecksum(hrp, values);\n     data combined = Cat(values, checksum);\n     std::string ret = hrp + '1';"
      },
      {
        "sha": "fb39cd352b405549a0ccb9744a8283e484768d58",
        "filename": "src/bech32.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bech32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bech32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -19,7 +19,7 @@\n namespace bech32\n {\n \n-/** Encode a Bech32 string. Returns the empty string in case of failure. */\n+/** Encode a Bech32 string. If hrp contains uppercase characters, this will cause an assertion error. */\n std::string Encode(const std::string& hrp, const std::vector<uint8_t>& values);\n \n /** Decode a Bech32 string. Returns (hrp, data). Empty hrp means failure. */"
      },
      {
        "sha": "40a7b5e320799171756604a69a6e8f6ec895f603",
        "filename": "src/bench/base58.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/base58.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -8,7 +8,6 @@\n \n #include <array>\n #include <vector>\n-#include <string>\n \n \n static void Base58Encode(benchmark::State& state)"
      },
      {
        "sha": "cc159eb191f9c8b6967fa64e329bdceac29cc35b",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,7 +5,7 @@\n #include <bench/bench.h>\n \n #include <chainparams.h>\n-#include <test/setup_common.h>\n+#include <test/util/setup_common.h>\n #include <validation.h>\n \n #include <algorithm>\n@@ -112,7 +112,7 @@ void benchmark::BenchRunner::RunAll(Printer& printer, uint64_t num_evals, double\n     printer.header();\n \n     for (const auto& p : benchmarks()) {\n-        TestingSetup test{CBaseChainParams::REGTEST};\n+        RegTestingSetup test{};\n         {\n             LOCK(cs_main);\n             assert(::ChainActive().Height() == 0);"
      },
      {
        "sha": "3a8c487b9a2f9f30e4d1712040ef7ee7471796c1",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,6 @@\n #define BITCOIN_BENCH_BENCH_H\n \n #include <functional>\n-#include <limits>\n #include <map>\n #include <string>\n #include <vector>"
      },
      {
        "sha": "9235d5fe6aa760b99b9a6994951a5d138fc32ff0",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -36,7 +36,7 @@ int main(int argc, char** argv)\n     SetupBenchArgs();\n     std::string error;\n     if (!gArgs.ParseParameters(argc, argv, error)) {\n-        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n \n@@ -51,9 +51,16 @@ int main(int argc, char** argv)\n     std::string scaling_str = gArgs.GetArg(\"-scaling\", DEFAULT_BENCH_SCALING);\n     bool is_list_only = gArgs.GetBoolArg(\"-list\", false);\n \n+    if (evaluations == 0) {\n+        return EXIT_SUCCESS;\n+    } else if (evaluations < 0) {\n+        tfm::format(std::cerr, \"Error parsing evaluations argument: %d\\n\", evaluations);\n+        return EXIT_FAILURE;\n+    }\n+\n     double scaling_factor;\n     if (!ParseDouble(scaling_str, &scaling_factor)) {\n-        tfm::format(std::cerr, \"Error parsing scaling factor as double: %s\\n\", scaling_str.c_str());\n+        tfm::format(std::cerr, \"Error parsing scaling factor as double: %s\\n\", scaling_str);\n         return EXIT_FAILURE;\n     }\n "
      },
      {
        "sha": "2f47398d99d1647eb9b18637ff8c655fcd5321b4",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -10,7 +10,6 @@\n #include <validation.h>\n \n \n-#include <list>\n #include <vector>\n \n static void AssembleBlock(benchmark::State& state)\n@@ -39,8 +38,8 @@ static void AssembleBlock(benchmark::State& state)\n         LOCK(::cs_main); // Required for ::AcceptToMemoryPool.\n \n         for (const auto& txr : txs) {\n-            CValidationState state;\n-            bool ret{::AcceptToMemoryPool(::mempool, state, txr, nullptr /* pfMissingInputs */, nullptr /* plTxnReplaced */, false /* bypass_limits */, /* nAbsurdFee */ 0)};\n+            TxValidationState state;\n+            bool ret{::AcceptToMemoryPool(::mempool, state, txr, nullptr /* plTxnReplaced */, false /* bypass_limits */, /* nAbsurdFee */ 0)};\n             assert(ret);\n         }\n     }"
      },
      {
        "sha": "f1b0a9a98992512652b5e77eb7df1fa7cc481434",
        "filename": "src/bench/chacha20.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/chacha20.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,7 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <iostream>\n \n #include <bench/bench.h>\n #include <crypto/chacha20.h>"
      },
      {
        "sha": "a02a5315a470cfea0e00dcc970a7d42500aa0ee9",
        "filename": "src/bench/chacha_poly_aead.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/chacha_poly_aead.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/chacha_poly_aead.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/chacha_poly_aead.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,7 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <iostream>\n \n #include <bench/bench.h>\n #include <crypto/chacha_poly_aead.h>"
      },
      {
        "sha": "edf43bd4dc022adfccceaa065b60578695c3fa60",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -42,7 +42,7 @@ static void DeserializeAndCheckBlockTest(benchmark::State& state)\n         bool rewound = stream.Rewind(benchmark::data::block413567.size());\n         assert(rewound);\n \n-        CValidationState validationState;\n+        BlockValidationState validationState;\n         bool checked = CheckBlock(block, validationState, chainParams->GetConsensus());\n         assert(checked);\n     }"
      },
      {
        "sha": "29a145bfe67ba9e4b63b8e9973eeebca76b4c240",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <bench/bench.h>\n #include <interfaces/chain.h>\n+#include <node/context.h>\n #include <wallet/coinselection.h>\n #include <wallet/wallet.h>\n \n@@ -28,7 +29,8 @@ static void addCoin(const CAmount& nValue, const CWallet& wallet, std::vector<st\n // (https://github.com/bitcoin/bitcoin/issues/7883#issuecomment-224807484)\n static void CoinSelection(benchmark::State& state)\n {\n-    auto chain = interfaces::MakeChain();\n+    NodeContext node;\n+    auto chain = interfaces::MakeChain(node);\n     const CWallet wallet(chain.get(), WalletLocation(), WalletDatabase::CreateDummy());\n     std::vector<std::unique_ptr<CWalletTx>> wtxs;\n     LOCK(wallet.cs_wallet);\n@@ -60,7 +62,8 @@ static void CoinSelection(benchmark::State& state)\n }\n \n typedef std::set<CInputCoin> CoinSet;\n-static auto testChain = interfaces::MakeChain();\n+static NodeContext testNode;\n+static auto testChain = interfaces::MakeChain(testNode);\n static const CWallet testWallet(testChain.get(), WalletLocation(), WalletDatabase::CreateDummy());\n std::vector<std::unique_ptr<CWalletTx>> wtxn;\n "
      },
      {
        "sha": "674753c191233e1f8f19974a9f8f27d74d3f3bcd",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,7 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <iostream>\n \n #include <bench/bench.h>\n #include <hash.h>"
      },
      {
        "sha": "a783370b4ea1bf4870c2d5e79ffbcfa6ac885c45",
        "filename": "src/bench/duplicate_inputs.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/duplicate_inputs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/duplicate_inputs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/duplicate_inputs.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -4,15 +4,12 @@\n \n #include <bench/bench.h>\n #include <chainparams.h>\n-#include <coins.h>\n #include <consensus/merkle.h>\n #include <consensus/validation.h>\n #include <pow.h>\n #include <txmempool.h>\n #include <validation.h>\n \n-#include <list>\n-#include <vector>\n \n \n static void DuplicateInputs(benchmark::State& state)\n@@ -57,7 +54,7 @@ static void DuplicateInputs(benchmark::State& state)\n     block.hashMerkleRoot = BlockMerkleRoot(block);\n \n     while (state.KeepRunning()) {\n-        CValidationState cvstate{};\n+        BlockValidationState cvstate{};\n         assert(!CheckBlock(block, cvstate, chainparams.GetConsensus(), false, false));\n         assert(cvstate.GetRejectReason() == \"bad-txns-inputs-duplicate\");\n     }"
      },
      {
        "sha": "0d9b1234009bd6c7c1674139c819eed464645bf0",
        "filename": "src/bench/lockedpool.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/lockedpool.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,6 @@\n \n #include <support/lockedpool.h>\n \n-#include <iostream>\n #include <vector>\n \n #define ASIZE 2048"
      },
      {
        "sha": "a2a21c673ba4a0aeb25f2488b8efb635a1a77d6d",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,8 +6,6 @@\n #include <policy/policy.h>\n #include <txmempool.h>\n \n-#include <list>\n-#include <vector>\n \n static void AddTx(const CTransactionRef& tx, const CAmount& nFee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n {"
      },
      {
        "sha": "389e2c096f2b9275da52718645636e77f7e492ab",
        "filename": "src/bench/mempool_stress.cpp",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/mempool_stress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/mempool_stress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_stress.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <policy/policy.h>\n+#include <txmempool.h>\n+\n+#include <vector>\n+\n+static void AddTx(const CTransactionRef& tx, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    int64_t nTime = 0;\n+    unsigned int nHeight = 1;\n+    bool spendsCoinbase = false;\n+    unsigned int sigOpCost = 4;\n+    LockPoints lp;\n+    pool.addUnchecked(CTxMemPoolEntry(tx, 1000, nTime, nHeight, spendsCoinbase, sigOpCost, lp));\n+}\n+\n+struct Available {\n+    CTransactionRef ref;\n+    size_t vin_left{0};\n+    size_t tx_count;\n+    Available(CTransactionRef& ref, size_t tx_count) : ref(ref), tx_count(tx_count){}\n+};\n+\n+static void ComplexMemPool(benchmark::State& state)\n+{\n+    FastRandomContext det_rand{true};\n+    std::vector<Available> available_coins;\n+    std::vector<CTransactionRef> ordered_coins;\n+    // Create some base transactions\n+    size_t tx_counter = 1;\n+    for (auto x = 0; x < 100; ++x) {\n+        CMutableTransaction tx = CMutableTransaction();\n+        tx.vin.resize(1);\n+        tx.vin[0].scriptSig = CScript() << CScriptNum(tx_counter);\n+        tx.vin[0].scriptWitness.stack.push_back(CScriptNum(x).getvch());\n+        tx.vout.resize(det_rand.randrange(10)+2);\n+        for (auto& out : tx.vout) {\n+            out.scriptPubKey = CScript() << CScriptNum(tx_counter) << OP_EQUAL;\n+            out.nValue = 10 * COIN;\n+        }\n+        ordered_coins.emplace_back(MakeTransactionRef(tx));\n+        available_coins.emplace_back(ordered_coins.back(), tx_counter++);\n+    }\n+    for (auto x = 0; x < 800 && !available_coins.empty(); ++x) {\n+        CMutableTransaction tx = CMutableTransaction();\n+        size_t n_ancestors = det_rand.randrange(10)+1;\n+        for (size_t ancestor = 0; ancestor < n_ancestors && !available_coins.empty(); ++ancestor){\n+            size_t idx = det_rand.randrange(available_coins.size());\n+            Available coin = available_coins[idx];\n+            uint256 hash = coin.ref->GetHash();\n+            // biased towards taking just one ancestor, but maybe more\n+            size_t n_to_take = det_rand.randrange(2) == 0 ? 1 : 1+det_rand.randrange(coin.ref->vout.size() - coin.vin_left);\n+            for (size_t i = 0; i < n_to_take; ++i) {\n+                tx.vin.emplace_back();\n+                tx.vin.back().prevout = COutPoint(hash, coin.vin_left++);\n+                tx.vin.back().scriptSig = CScript() << coin.tx_count;\n+                tx.vin.back().scriptWitness.stack.push_back(CScriptNum(coin.tx_count).getvch());\n+            }\n+            if (coin.vin_left == coin.ref->vin.size()) {\n+                coin = available_coins.back();\n+                available_coins.pop_back();\n+            }\n+            tx.vout.resize(det_rand.randrange(10)+2);\n+            for (auto& out : tx.vout) {\n+                out.scriptPubKey = CScript() << CScriptNum(tx_counter) << OP_EQUAL;\n+                out.nValue = 10 * COIN;\n+            }\n+        }\n+        ordered_coins.emplace_back(MakeTransactionRef(tx));\n+        available_coins.emplace_back(ordered_coins.back(), tx_counter++);\n+    }\n+    CTxMemPool pool;\n+    LOCK2(cs_main, pool.cs);\n+    while (state.KeepRunning()) {\n+        for (auto& tx : ordered_coins) {\n+            AddTx(tx, pool);\n+        }\n+        pool.TrimToSize(pool.DynamicMemoryUsage() * 3 / 4);\n+        pool.TrimToSize(GetVirtualTransactionSize(*ordered_coins.front()));\n+    }\n+}\n+\n+BENCHMARK(ComplexMemPool, 1);"
      },
      {
        "sha": "02e5fecc0def4a225c50506dccbc1428be7b6a71",
        "filename": "src/bench/poly1305.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/poly1305.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/poly1305.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/poly1305.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,7 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <iostream>\n \n #include <bench/bench.h>\n #include <crypto/poly1305.h>"
      },
      {
        "sha": "cffdb388f8735d010d980f5604cd95b7ce0fe8c7",
        "filename": "src/bench/rollingbloom.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/rollingbloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/rollingbloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rollingbloom.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,7 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <iostream>\n \n #include <bench/bench.h>\n #include <bloom.h>"
      },
      {
        "sha": "2fc6f116a43ac75f78dd10a2ed687ec1b409b118",
        "filename": "src/bench/rpc_blockchain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/rpc_blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/rpc_blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rpc_blockchain.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -7,7 +7,6 @@\n \n #include <validation.h>\n #include <streams.h>\n-#include <consensus/validation.h>\n #include <rpc/blockchain.h>\n \n #include <univalue.h>"
      },
      {
        "sha": "bf63cccf096d412bd1cc1969fccdda4bb6814e94",
        "filename": "src/bench/rpc_mempool.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/rpc_mempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/rpc_mempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rpc_mempool.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -8,8 +8,6 @@\n \n #include <univalue.h>\n \n-#include <list>\n-#include <vector>\n \n static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n {"
      },
      {
        "sha": "1c025e29d3e1c71ae0f119a0207fef4e74d314ca",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 37,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -10,44 +10,10 @@\n #include <script/script.h>\n #include <script/standard.h>\n #include <streams.h>\n+#include <test/util/transaction_utils.h>\n \n #include <array>\n \n-// FIXME: Dedup with BuildCreditingTransaction in test/script_tests.cpp.\n-static CMutableTransaction BuildCreditingTransaction(const CScript& scriptPubKey)\n-{\n-    CMutableTransaction txCredit;\n-    txCredit.nVersion = 1;\n-    txCredit.nLockTime = 0;\n-    txCredit.vin.resize(1);\n-    txCredit.vout.resize(1);\n-    txCredit.vin[0].prevout.SetNull();\n-    txCredit.vin[0].scriptSig = CScript() << CScriptNum(0) << CScriptNum(0);\n-    txCredit.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n-    txCredit.vout[0].scriptPubKey = scriptPubKey;\n-    txCredit.vout[0].nValue = 1;\n-\n-    return txCredit;\n-}\n-\n-// FIXME: Dedup with BuildSpendingTransaction in test/script_tests.cpp.\n-static CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CMutableTransaction& txCredit)\n-{\n-    CMutableTransaction txSpend;\n-    txSpend.nVersion = 1;\n-    txSpend.nLockTime = 0;\n-    txSpend.vin.resize(1);\n-    txSpend.vout.resize(1);\n-    txSpend.vin[0].prevout.hash = txCredit.GetHash();\n-    txSpend.vin[0].prevout.n = 0;\n-    txSpend.vin[0].scriptSig = scriptSig;\n-    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n-    txSpend.vout[0].scriptPubKey = CScript();\n-    txSpend.vout[0].nValue = txCredit.vout[0].nValue;\n-\n-    return txSpend;\n-}\n-\n // Microbenchmark for verification of a basic P2WPKH script. Can be easily\n // modified to measure performance of other types of scripts.\n static void VerifyScriptBench(benchmark::State& state)\n@@ -71,8 +37,8 @@ static void VerifyScriptBench(benchmark::State& state)\n     CScript scriptPubKey = CScript() << witnessversion << ToByteVector(pubkeyHash);\n     CScript scriptSig;\n     CScript witScriptPubkey = CScript() << OP_DUP << OP_HASH160 << ToByteVector(pubkeyHash) << OP_EQUALVERIFY << OP_CHECKSIG;\n-    const CMutableTransaction& txCredit = BuildCreditingTransaction(scriptPubKey);\n-    CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, txCredit);\n+    const CMutableTransaction& txCredit = BuildCreditingTransaction(scriptPubKey, 1);\n+    CMutableTransaction txSpend = BuildSpendingTransaction(scriptSig, CScriptWitness(), CTransaction(txCredit));\n     CScriptWitness& witness = txSpend.vin[0].scriptWitness;\n     witness.stack.emplace_back();\n     key.Sign(SignatureHash(witScriptPubkey, txSpend, 0, SIGHASH_ALL, txCredit.vout[0].nValue, SigVersion::WITNESS_V0), witness.stack.back());"
      },
      {
        "sha": "0e660d6bcd651c71bfb7d64080e0921dd0fc2d90",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <bench/bench.h>\n #include <interfaces/chain.h>\n+#include <node/context.h>\n #include <optional.h>\n #include <test/util.h>\n #include <validationinterface.h>\n@@ -13,7 +14,8 @@ static void WalletBalance(benchmark::State& state, const bool set_dirty, const b\n {\n     const auto& ADDRESS_WATCHONLY = ADDRESS_BCRT1_UNSPENDABLE;\n \n-    std::unique_ptr<interfaces::Chain> chain = interfaces::MakeChain();\n+    NodeContext node;\n+    std::unique_ptr<interfaces::Chain> chain = interfaces::MakeChain(node);\n     CWallet wallet{chain.get(), WalletLocation(), WalletDatabase::CreateMock()};\n     {\n         bool first_run;"
      },
      {
        "sha": "592fcbe8ddc7164bfe3d22ade7e5053ddfd18af6",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 58,
        "deletions": 13,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -9,7 +9,6 @@\n \n #include <chainparamsbase.h>\n #include <clientversion.h>\n-#include <fs.h>\n #include <rpc/client.h>\n #include <rpc/protocol.h>\n #include <rpc/request.h>\n@@ -27,6 +26,7 @@\n #include <support/events.h>\n \n #include <univalue.h>\n+#include <compat/stdin.h>\n \n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n \n@@ -58,7 +58,8 @@ static void SetupCliArgs()\n     gArgs.AddArg(\"-rpcwait\", \"Wait for RPC server to start\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind). This changes the RPC endpoint used, e.g. http://127.0.0.1:8332/wallet/<walletname>\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-stdin\", \"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases). When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password. When combined with -stdinwalletpassphrase, -stdinrpcpass consumes the first line, and -stdinwalletpassphrase consumes the second.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-stdinwalletpassphrase\", \"Read wallet passphrase from standard input as a single line. When combined with -stdin, the first line from standard input is used for the wallet passphrase.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n }\n \n /** libevent event log callback */\n@@ -104,7 +105,7 @@ static int AppInitRPC(int argc, char* argv[])\n     SetupCliArgs();\n     std::string error;\n     if (!gArgs.ParseParameters(argc, argv, error)) {\n-        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n     if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n@@ -118,22 +119,22 @@ static int AppInitRPC(int argc, char* argv[])\n             strUsage += \"\\n\" + gArgs.GetHelpMessage();\n         }\n \n-        tfm::format(std::cout, \"%s\", strUsage.c_str());\n+        tfm::format(std::cout, \"%s\", strUsage);\n         if (argc < 2) {\n             tfm::format(std::cerr, \"Error: too few parameters\\n\");\n             return EXIT_FAILURE;\n         }\n         return EXIT_SUCCESS;\n     }\n-    if (!fs::is_directory(GetDataDir(false))) {\n-        tfm::format(std::cerr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n+    if (!CheckDataDirOption()) {\n+        tfm::format(std::cerr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\"));\n         return EXIT_FAILURE;\n     }\n     if (!gArgs.ReadConfigFiles(error, true)) {\n-        tfm::format(std::cerr, \"Error reading configuration file: %s\\n\", error.c_str());\n+        tfm::format(std::cerr, \"Error reading configuration file: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n-    // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n+    // Check for -chain, -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n     try {\n         SelectBaseParams(gArgs.GetChainName());\n     } catch (const std::exception& e) {\n@@ -257,12 +258,14 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.pushKV(\"version\", batch[ID_NETWORKINFO][\"result\"][\"version\"]);\n         result.pushKV(\"protocolversion\", batch[ID_NETWORKINFO][\"result\"][\"protocolversion\"]);\n         result.pushKV(\"blocks\", batch[ID_BLOCKCHAININFO][\"result\"][\"blocks\"]);\n+        result.pushKV(\"headers\", batch[ID_BLOCKCHAININFO][\"result\"][\"headers\"]);\n+        result.pushKV(\"verificationprogress\", batch[ID_BLOCKCHAININFO][\"result\"][\"verificationprogress\"]);\n         result.pushKV(\"timeoffset\", batch[ID_NETWORKINFO][\"result\"][\"timeoffset\"]);\n         result.pushKV(\"connections\", batch[ID_NETWORKINFO][\"result\"][\"connections\"]);\n         result.pushKV(\"proxy\", batch[ID_NETWORKINFO][\"result\"][\"networks\"][0][\"proxy\"]);\n         result.pushKV(\"difficulty\", batch[ID_BLOCKCHAININFO][\"result\"][\"difficulty\"]);\n         result.pushKV(\"chain\", UniValue(batch[ID_BLOCKCHAININFO][\"result\"][\"chain\"]));\n-        if (!batch[ID_WALLETINFO].isNull()) {\n+        if (!batch[ID_WALLETINFO][\"result\"].isNull()) {\n             result.pushKV(\"walletversion\", batch[ID_WALLETINFO][\"result\"][\"walletversion\"]);\n             result.pushKV(\"balance\", batch[ID_WALLETINFO][\"result\"][\"balance\"]);\n             result.pushKV(\"keypoololdest\", batch[ID_WALLETINFO][\"result\"][\"keypoololdest\"]);\n@@ -314,7 +317,20 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n \n     // Synchronously look up hostname\n     raii_evhttp_connection evcon = obtain_evhttp_connection_base(base.get(), host, port);\n-    evhttp_connection_set_timeout(evcon.get(), gArgs.GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT));\n+\n+    // Set connection timeout\n+    {\n+        const int timeout = gArgs.GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT);\n+        if (timeout > 0) {\n+            evhttp_connection_set_timeout(evcon.get(), timeout);\n+        } else {\n+            // Indefinite request timeouts are not possible in libevent-http, so we\n+            // set the timeout to a very long time period instead.\n+\n+            constexpr int YEAR_IN_SECONDS = 31556952; // Average length of year in Gregorian calendar\n+            evhttp_connection_set_timeout(evcon.get(), 5 * YEAR_IN_SECONDS);\n+        }\n+    }\n \n     HTTPReply response;\n     raii_evhttp_request req = obtain_evhttp_request(http_request_done, (void*)&response);\n@@ -352,7 +368,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n     std::string endpoint = \"/\";\n     if (!gArgs.GetArgs(\"-rpcwallet\").empty()) {\n         std::string walletName = gArgs.GetArg(\"-rpcwallet\", \"\");\n-        char *encodedURI = evhttp_uriencode(walletName.c_str(), walletName.size(), false);\n+        char *encodedURI = evhttp_uriencode(walletName.data(), walletName.size(), false);\n         if (encodedURI) {\n             endpoint = \"/wallet/\"+ std::string(encodedURI);\n             free(encodedURI);\n@@ -379,7 +395,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n         if (failedToGetAuthCookie) {\n             throw std::runtime_error(strprintf(\n                 \"Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (%s)\",\n-                GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string().c_str()));\n+                GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string()));\n         } else {\n             throw std::runtime_error(\"Authorization failed: Incorrect rpcuser or rpcpassword\");\n         }\n@@ -411,18 +427,47 @@ static int CommandLineRPC(int argc, char *argv[])\n         }\n         std::string rpcPass;\n         if (gArgs.GetBoolArg(\"-stdinrpcpass\", false)) {\n+            NO_STDIN_ECHO();\n+            if (!StdinReady()) {\n+                fputs(\"RPC password> \", stderr);\n+                fflush(stderr);\n+            }\n             if (!std::getline(std::cin, rpcPass)) {\n                 throw std::runtime_error(\"-stdinrpcpass specified but failed to read from standard input\");\n             }\n+            if (StdinTerminal()) {\n+                fputc('\\n', stdout);\n+            }\n             gArgs.ForceSetArg(\"-rpcpassword\", rpcPass);\n         }\n         std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);\n+        if (gArgs.GetBoolArg(\"-stdinwalletpassphrase\", false)) {\n+            NO_STDIN_ECHO();\n+            std::string walletPass;\n+            if (args.size() < 1 || args[0].substr(0, 16) != \"walletpassphrase\") {\n+                throw std::runtime_error(\"-stdinwalletpassphrase is only applicable for walletpassphrase(change)\");\n+            }\n+            if (!StdinReady()) {\n+                fputs(\"Wallet passphrase> \", stderr);\n+                fflush(stderr);\n+            }\n+            if (!std::getline(std::cin, walletPass)) {\n+                throw std::runtime_error(\"-stdinwalletpassphrase specified but failed to read from standard input\");\n+            }\n+            if (StdinTerminal()) {\n+                fputc('\\n', stdout);\n+            }\n+            args.insert(args.begin() + 1, walletPass);\n+        }\n         if (gArgs.GetBoolArg(\"-stdin\", false)) {\n             // Read one arg per line from stdin and append\n             std::string line;\n             while (std::getline(std::cin, line)) {\n                 args.push_back(line);\n             }\n+            if (StdinTerminal()) {\n+                fputc('\\n', stdout);\n+            }\n         }\n         std::unique_ptr<BaseRequestHandler> rh;\n         std::string method;\n@@ -498,7 +543,7 @@ static int CommandLineRPC(int argc, char *argv[])\n     }\n \n     if (strPrint != \"\") {\n-        tfm::format(nRet == 0 ? std::cout : std::cerr, \"%s\\n\", strPrint.c_str());\n+        tfm::format(nRet == 0 ? std::cout : std::cerr, \"%s\\n\", strPrint);\n     }\n     return nRet;\n }"
      },
      {
        "sha": "c7af7e0fc86d208dee03287e8925d39eab41b8e3",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -11,7 +11,6 @@\n #include <consensus/consensus.h>\n #include <core_io.h>\n #include <key_io.h>\n-#include <policy/policy.h>\n #include <policy/rbf.h>\n #include <primitives/transaction.h>\n #include <script/script.h>\n@@ -84,11 +83,11 @@ static int AppInitRawTx(int argc, char* argv[])\n     SetupBitcoinTxArgs();\n     std::string error;\n     if (!gArgs.ParseParameters(argc, argv, error)) {\n-        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n \n-    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n         SelectParams(gArgs.GetChainName());\n     } catch (const std::exception& e) {\n@@ -106,7 +105,7 @@ static int AppInitRawTx(int argc, char* argv[])\n             \"\\n\";\n         strUsage += gArgs.GetHelpMessage();\n \n-        tfm::format(std::cout, \"%s\", strUsage.c_str());\n+        tfm::format(std::cout, \"%s\", strUsage);\n \n         if (argc < 2) {\n             tfm::format(std::cerr, \"Error: too few parameters\\n\");\n@@ -725,21 +724,21 @@ static void OutputTxJSON(const CTransaction& tx)\n     TxToUniv(tx, uint256(), entry);\n \n     std::string jsonOutput = entry.write(4);\n-    tfm::format(std::cout, \"%s\\n\", jsonOutput.c_str());\n+    tfm::format(std::cout, \"%s\\n\", jsonOutput);\n }\n \n static void OutputTxHash(const CTransaction& tx)\n {\n     std::string strHexHash = tx.GetHash().GetHex(); // the hex-encoded transaction hash (aka the transaction id)\n \n-    tfm::format(std::cout, \"%s\\n\", strHexHash.c_str());\n+    tfm::format(std::cout, \"%s\\n\", strHexHash);\n }\n \n static void OutputTxHex(const CTransaction& tx)\n {\n     std::string strHex = EncodeHexTx(tx);\n \n-    tfm::format(std::cout, \"%s\\n\", strHex.c_str());\n+    tfm::format(std::cout, \"%s\\n\", strHex);\n }\n \n static void OutputTx(const CTransaction& tx)\n@@ -830,7 +829,7 @@ static int CommandLineRawTx(int argc, char* argv[])\n     }\n \n     if (strPrint != \"\") {\n-        tfm::format(nRet == 0 ? std::cout : std::cerr, \"%s\\n\", strPrint.c_str());\n+        tfm::format(nRet == 0 ? std::cout : std::cerr, \"%s\\n\", strPrint);\n     }\n     return nRet;\n }"
      },
      {
        "sha": "917ecd71c53438b418019ff38902fc4911e4078c",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -9,13 +9,11 @@\n #include <chainparams.h>\n #include <chainparamsbase.h>\n #include <logging.h>\n-#include <util/strencodings.h>\n #include <util/system.h>\n #include <util/translation.h>\n #include <wallet/wallettool.h>\n \n #include <functional>\n-#include <stdio.h>\n \n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n \n@@ -27,7 +25,7 @@ static void SetupWalletToolArgs()\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: 0).\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -debug is true, 0 otherwise.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -debug is true, 0 otherwise).\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n \n     gArgs.AddArg(\"info\", \"Get wallet info\", ArgsManager::ALLOW_ANY, OptionsCategory::COMMANDS);\n     gArgs.AddArg(\"create\", \"Create new wallet file\", ArgsManager::ALLOW_ANY, OptionsCategory::COMMANDS);\n@@ -38,7 +36,7 @@ static bool WalletAppInit(int argc, char* argv[])\n     SetupWalletToolArgs();\n     std::string error_message;\n     if (!gArgs.ParseParameters(argc, argv, error_message)) {\n-        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error_message.c_str());\n+        tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error_message);\n         return false;\n     }\n     if (argc < 2 || HelpRequested(gArgs)) {\n@@ -50,15 +48,15 @@ static bool WalletAppInit(int argc, char* argv[])\n                                      \"  bitcoin-wallet [options] <command>\\n\\n\" +\n                                      gArgs.GetHelpMessage();\n \n-        tfm::format(std::cout, \"%s\", usage.c_str());\n+        tfm::format(std::cout, \"%s\", usage);\n         return false;\n     }\n \n     // check for printtoconsole, allow -debug\n     LogInstance().m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n \n-    if (!fs::is_directory(GetDataDir(false))) {\n-        tfm::format(std::cerr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n+    if (!CheckDataDirOption()) {\n+        tfm::format(std::cerr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\"));\n         return false;\n     }\n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n@@ -89,7 +87,7 @@ int main(int argc, char* argv[])\n     for(int i = 1; i < argc; ++i) {\n         if (!IsSwitchChar(argv[i][0])) {\n             if (!method.empty()) {\n-                tfm::format(std::cerr, \"Error: two methods provided (%s and %s). Only one method should be provided.\\n\", method.c_str(), argv[i]);\n+                tfm::format(std::cerr, \"Error: two methods provided (%s and %s). Only one method should be provided.\\n\", method, argv[i]);\n                 return EXIT_FAILURE;\n             }\n             method = argv[i];"
      },
      {
        "sha": "4b5cea4849247aa7f98b5066f86cad0ea11e1929",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 36,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,9 +10,9 @@\n #include <chainparams.h>\n #include <clientversion.h>\n #include <compat.h>\n-#include <fs.h>\n #include <init.h>\n #include <interfaces/chain.h>\n+#include <node/context.h>\n #include <noui.h>\n #include <shutdown.h>\n #include <ui_interface.h>\n@@ -25,31 +25,13 @@\n \n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n \n-/* Introduction text for doxygen: */\n-\n-/*! \\mainpage Developer documentation\n- *\n- * \\section intro_sec Introduction\n- *\n- * This is the developer documentation of the reference client for an experimental new digital currency called Bitcoin,\n- * which enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n- * with no central authority: managing transactions and issuing money are carried out collectively by the network.\n- *\n- * The software is a community-driven open source project, released under the MIT license.\n- *\n- * See https://github.com/bitcoin/bitcoin and https://bitcoincore.org/ for further information about the project.\n- *\n- * \\section Navigation\n- * Use the buttons <code>Namespaces</code>, <code>Classes</code> or <code>Files</code> at the top of the page to start navigating the code.\n- */\n-\n-static void WaitForShutdown()\n+static void WaitForShutdown(NodeContext& node)\n {\n     while (!ShutdownRequested())\n     {\n         MilliSleep(200);\n     }\n-    Interrupt();\n+    Interrupt(node);\n }\n \n //////////////////////////////////////////////////////////////////////////////\n@@ -58,12 +40,12 @@ static void WaitForShutdown()\n //\n static bool AppInit(int argc, char* argv[])\n {\n-    InitInterfaces interfaces;\n-    interfaces.chain = interfaces::MakeChain();\n+    NodeContext node;\n+    node.chain = interfaces::MakeChain(node);\n \n     bool fRet = false;\n \n-    util::ThreadRename(\"init\");\n+    util::ThreadSetInternalName(\"init\");\n \n     //\n     // Parameters\n@@ -77,32 +59,31 @@ static bool AppInit(int argc, char* argv[])\n \n     // Process help and version before taking care about datadir\n     if (HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n-        std::string strUsage = PACKAGE_NAME \" Daemon version \" + FormatFullVersion() + \"\\n\";\n+        std::string strUsage = PACKAGE_NAME \" version \" + FormatFullVersion() + \"\\n\";\n \n         if (gArgs.IsArgSet(\"-version\"))\n         {\n             strUsage += FormatParagraph(LicenseInfo()) + \"\\n\";\n         }\n         else\n         {\n-            strUsage += \"\\nUsage:  bitcoind [options]                     Start \" PACKAGE_NAME \" Daemon\\n\";\n+            strUsage += \"\\nUsage:  bitcoind [options]                     Start \" PACKAGE_NAME \"\\n\";\n             strUsage += \"\\n\" + gArgs.GetHelpMessage();\n         }\n \n-        tfm::format(std::cout, \"%s\", strUsage.c_str());\n+        tfm::format(std::cout, \"%s\", strUsage);\n         return true;\n     }\n \n     try\n     {\n-        if (!fs::is_directory(GetDataDir(false)))\n-        {\n+        if (!CheckDataDirOption()) {\n             return InitError(strprintf(\"Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\")));\n         }\n         if (!gArgs.ReadConfigFiles(error, true)) {\n             return InitError(strprintf(\"Error reading configuration file: %s\\n\", error));\n         }\n-        // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+        // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n         try {\n             SelectParams(gArgs.GetChainName());\n         } catch (const std::exception& e) {\n@@ -143,7 +124,7 @@ static bool AppInit(int argc, char* argv[])\n #pragma GCC diagnostic push\n #pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n #endif\n-            tfm::format(std::cout, PACKAGE_NAME \" daemon starting\\n\");\n+            tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n             if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n@@ -162,7 +143,7 @@ static bool AppInit(int argc, char* argv[])\n             // If locking the data directory failed, exit immediately\n             return false;\n         }\n-        fRet = AppInitMain(interfaces);\n+        fRet = AppInitMain(node);\n     }\n     catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInit()\");\n@@ -172,11 +153,11 @@ static bool AppInit(int argc, char* argv[])\n \n     if (!fRet)\n     {\n-        Interrupt();\n+        Interrupt(node);\n     } else {\n-        WaitForShutdown();\n+        WaitForShutdown(node);\n     }\n-    Shutdown(interfaces);\n+    Shutdown(node);\n \n     return fRet;\n }"
      },
      {
        "sha": "bf1329758232c901ac6f826f8fd4b1d18d3727bf",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -197,13 +197,13 @@ ReadStatus PartiallyDownloadedBlock::FillBlock(CBlock& block, const std::vector<\n     if (vtx_missing.size() != tx_missing_offset)\n         return READ_STATUS_INVALID;\n \n-    CValidationState state;\n+    BlockValidationState state;\n     if (!CheckBlock(block, state, Params().GetConsensus())) {\n         // TODO: We really want to just check merkle tree manually here,\n         // but that is expensive, and CheckBlock caches a block's\n         // \"checked-status\" (in the CBlock?). CBlock should be able to\n         // check its own merkle root and cache that check.\n-        if (state.GetReason() == ValidationInvalidReason::BLOCK_MUTATED)\n+        if (state.GetResult() == BlockValidationResult::BLOCK_MUTATED)\n             return READ_STATUS_FAILED; // Possible Short ID collision\n         return READ_STATUS_CHECKBLOCK_FAILED;\n     }"
      },
      {
        "sha": "18a6e35f31d1f0213d7e3f248a1e0fe4f3100597",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -7,7 +7,6 @@\n \n #include <primitives/block.h>\n \n-#include <memory>\n \n class CTxMemPool;\n "
      },
      {
        "sha": "c3f64ba4bc4f8870389af7cf95748490640fb59b",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -115,9 +115,6 @@ class CBloomFilter\n class CRollingBloomFilter\n {\n public:\n-    // A random bloom filter calls GetRand() at creation time.\n-    // Don't create global CRollingBloomFilter objects, as they may be\n-    // constructed before the randomizer is properly initialized.\n     CRollingBloomFilter(const unsigned int nElements, const double nFPRate);\n \n     void insert(const std::vector<unsigned char>& vKey);"
      },
      {
        "sha": "321bc95dbccb8ca7cc4048127f044e4845058624",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 26,
        "deletions": 52,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -95,8 +95,8 @@ enum BlockStatus: uint32_t {\n     //! Unused.\n     BLOCK_VALID_UNKNOWN      =    0,\n \n-    //! Parsed, version ok, hash satisfies claimed PoW, 1 <= vtx count <= max, timestamp not in future\n-    BLOCK_VALID_HEADER       =    1,\n+    //! Reserved (was BLOCK_VALID_HEADER).\n+    BLOCK_VALID_RESERVED     =    1,\n \n     //! All parent headers found, difficulty matches, timestamp >= median previous, checkpoint. Implies all parents\n     //! are also at least TREE.\n@@ -117,7 +117,7 @@ enum BlockStatus: uint32_t {\n     BLOCK_VALID_SCRIPTS      =    5,\n \n     //! All validity bits.\n-    BLOCK_VALID_MASK         =   BLOCK_VALID_HEADER | BLOCK_VALID_TREE | BLOCK_VALID_TRANSACTIONS |\n+    BLOCK_VALID_MASK         =   BLOCK_VALID_RESERVED | BLOCK_VALID_TREE | BLOCK_VALID_TRANSACTIONS |\n                                  BLOCK_VALID_CHAIN | BLOCK_VALID_SCRIPTS,\n \n     BLOCK_HAVE_DATA          =    8, //!< full block available in blk*.dat\n@@ -140,91 +140,65 @@ class CBlockIndex\n {\n public:\n     //! pointer to the hash of the block, if any. Memory is owned by this CBlockIndex\n-    const uint256* phashBlock;\n+    const uint256* phashBlock{nullptr};\n \n     //! pointer to the index of the predecessor of this block\n-    CBlockIndex* pprev;\n+    CBlockIndex* pprev{nullptr};\n \n     //! pointer to the index of some further predecessor of this block\n-    CBlockIndex* pskip;\n+    CBlockIndex* pskip{nullptr};\n \n     //! height of the entry in the chain. The genesis block has height 0\n-    int nHeight;\n+    int nHeight{0};\n \n     //! Which # file this block is stored in (blk?????.dat)\n-    int nFile;\n+    int nFile{0};\n \n     //! Byte offset within blk?????.dat where this block's data is stored\n-    unsigned int nDataPos;\n+    unsigned int nDataPos{0};\n \n     //! Byte offset within rev?????.dat where this block's undo data is stored\n-    unsigned int nUndoPos;\n+    unsigned int nUndoPos{0};\n \n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n-    arith_uint256 nChainWork;\n+    arith_uint256 nChainWork{};\n \n     //! Number of transactions in this block.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n-    unsigned int nTx;\n+    unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n     //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n     //! Change to 64-bit type when necessary; won't happen before 2030\n-    unsigned int nChainTx;\n+    unsigned int nChainTx{0};\n \n     //! Verification status of this block. See enum BlockStatus\n-    uint32_t nStatus;\n+    uint32_t nStatus{0};\n \n     //! block header\n-    int32_t nVersion;\n-    uint256 hashMerkleRoot;\n-    uint32_t nTime;\n-    uint32_t nBits;\n-    uint32_t nNonce;\n+    int32_t nVersion{0};\n+    uint256 hashMerkleRoot{};\n+    uint32_t nTime{0};\n+    uint32_t nBits{0};\n+    uint32_t nNonce{0};\n \n     //! (memory only) Sequential id assigned to distinguish order in which blocks are received.\n-    int32_t nSequenceId;\n+    int32_t nSequenceId{0};\n \n     //! (memory only) Maximum nTime in the chain up to and including this block.\n-    unsigned int nTimeMax;\n-\n-    void SetNull()\n-    {\n-        phashBlock = nullptr;\n-        pprev = nullptr;\n-        pskip = nullptr;\n-        nHeight = 0;\n-        nFile = 0;\n-        nDataPos = 0;\n-        nUndoPos = 0;\n-        nChainWork = arith_uint256();\n-        nTx = 0;\n-        nChainTx = 0;\n-        nStatus = 0;\n-        nSequenceId = 0;\n-        nTimeMax = 0;\n-\n-        nVersion       = 0;\n-        hashMerkleRoot = uint256();\n-        nTime          = 0;\n-        nBits          = 0;\n-        nNonce         = 0;\n-    }\n+    unsigned int nTimeMax{0};\n \n     CBlockIndex()\n     {\n-        SetNull();\n     }\n \n     explicit CBlockIndex(const CBlockHeader& block)\n+        : nVersion{block.nVersion},\n+          hashMerkleRoot{block.hashMerkleRoot},\n+          nTime{block.nTime},\n+          nBits{block.nBits},\n+          nNonce{block.nNonce}\n     {\n-        SetNull();\n-\n-        nVersion       = block.nVersion;\n-        hashMerkleRoot = block.hashMerkleRoot;\n-        nTime          = block.nTime;\n-        nBits          = block.nBits;\n-        nNonce         = block.nNonce;\n     }\n \n     FlatFilePos GetBlockPos() const {"
      },
      {
        "sha": "dd4d3e97ac312a66d2c83525ee572e06b415354d",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 46,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -62,13 +62,16 @@ static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits\n class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n-        strNetworkID = \"main\";\n+        strNetworkID = CBaseChainParams::MAIN;\n         consensus.nSubsidyHalvingInterval = 210000;\n         consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\n         consensus.BIP34Height = 227931;\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n         consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n         consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n+        consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n+        consensus.MinBIP9WarningHeight = consensus.SegwitHeight + consensus.nMinerConfirmationWindow;\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -80,21 +83,11 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n-        // Deployment of BIP68, BIP112, and BIP113.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1462060800; // May 1st, 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1493596800; // May 1st, 2017\n-\n-        // Deployment of SegWit (BIP141, BIP143, and BIP147)\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 1479168000; // November 15th, 2016.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1510704000; // November 15th, 2017.\n-\n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000051dc8b82f450202ecb3d471\");\n+        consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000008ea3cf107ae0dec57f03fe8\");\n \n         // By default assume that the signatures in ancestors of this block are valid.\n-        consensus.defaultAssumeValid = uint256S(\"0x0000000000000000000f1c54590ee18d15ec70e68c8cd4cfbadb1b4f11697eee\"); //563378\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000005f8920febd3925f8272a6a71237563d78c2edfdd09ddf\"); // 597379\n \n         /**\n          * The message start string is designed to be unlikely to occur in normal data.\n@@ -107,8 +100,8 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd9;\n         nDefaultPort = 8333;\n         nPruneAfterHeight = 100000;\n-        m_assumed_blockchain_size = 240;\n-        m_assumed_chain_state_size = 3;\n+        m_assumed_blockchain_size = 280;\n+        m_assumed_chain_state_size = 4;\n \n         genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n@@ -162,10 +155,10 @@ class CMainParams : public CChainParams {\n         };\n \n         chainTxData = ChainTxData{\n-            // Data from rpc: getchaintxstats 4096 0000000000000000000f1c54590ee18d15ec70e68c8cd4cfbadb1b4f11697eee\n-            /* nTime    */ 1550374134,\n-            /* nTxCount */ 383732546,\n-            /* dTxRate  */ 3.685496590998308\n+            // Data from RPC: getchaintxstats 4096 00000000000000000005f8920febd3925f8272a6a71237563d78c2edfdd09ddf\n+            /* nTime    */ 1569926786,\n+            /* nTxCount */ 460596047,\n+            /* dTxRate  */ 3.77848885073875,\n         };\n     }\n };\n@@ -176,13 +169,16 @@ class CMainParams : public CChainParams {\n class CTestNetParams : public CChainParams {\n public:\n     CTestNetParams() {\n-        strNetworkID = \"test\";\n+        strNetworkID = CBaseChainParams::TESTNET;\n         consensus.nSubsidyHalvingInterval = 210000;\n         consensus.BIP16Exception = uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\");\n         consensus.BIP34Height = 21111;\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n         consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n         consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n+        consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n+        consensus.MinBIP9WarningHeight = consensus.SegwitHeight + consensus.nMinerConfirmationWindow;\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -194,21 +190,11 @@ class CTestNetParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n-        // Deployment of BIP68, BIP112, and BIP113.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1456790400; // March 1st, 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1493596800; // May 1st, 2017\n-\n-        // Deployment of SegWit (BIP141, BIP143, and BIP147)\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 1462060800; // May 1st 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1493596800; // May 1st 2017\n-\n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000007dbe94253893cbd463\");\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000012b2a3a62424f21c918\");\n \n         // By default assume that the signatures in ancestors of this block are valid.\n-        consensus.defaultAssumeValid = uint256S(\"0x0000000000000037a8cd3e06cd5edbfe9dd1dbcc5dacab279376ef7cfc2b4c75\"); //1354312\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000000b7ab6ce61eb6d571003fbe5fe892da4c9b740c49a07542462d\"); // 1580000\n \n         pchMessageStart[0] = 0x0b;\n         pchMessageStart[1] = 0x11;\n@@ -254,10 +240,10 @@ class CTestNetParams : public CChainParams {\n         };\n \n         chainTxData = ChainTxData{\n-            // Data from rpc: getchaintxstats 4096 0000000000000037a8cd3e06cd5edbfe9dd1dbcc5dacab279376ef7cfc2b4c75\n-            /* nTime    */ 1531929919,\n-            /* nTxCount */ 19438708,\n-            /* dTxRate  */ 0.626\n+            // Data from RPC: getchaintxstats 4096 00000000000000b7ab6ce61eb6d571003fbe5fe892da4c9b740c49a07542462d\n+            /* nTime    */ 1569741320,\n+            /* nTxCount */ 52318009,\n+            /* dTxRate  */ 0.1517002392872353,\n         };\n     }\n };\n@@ -268,13 +254,16 @@ class CTestNetParams : public CChainParams {\n class CRegTestParams : public CChainParams {\n public:\n     explicit CRegTestParams(const ArgsManager& args) {\n-        strNetworkID = \"regtest\";\n+        strNetworkID =  CBaseChainParams::REGTEST;\n         consensus.nSubsidyHalvingInterval = 150;\n         consensus.BIP16Exception = uint256();\n         consensus.BIP34Height = 500; // BIP34 activated on regtest (Used in functional tests)\n         consensus.BIP34Hash = uint256();\n         consensus.BIP65Height = 1351; // BIP65 activated on regtest (Used in functional tests)\n         consensus.BIP66Height = 1251; // BIP66 activated on regtest (Used in functional tests)\n+        consensus.CSVHeight = 432; // CSV activated on regtest (Used in rpc activation tests)\n+        consensus.SegwitHeight = 0; // SEGWIT is always activated on regtest unless overridden\n+        consensus.MinBIP9WarningHeight = 0;\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -285,12 +274,6 @@ class CRegTestParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 0;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = Consensus::BIP9Deployment::ALWAYS_ACTIVE;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x00\");\n@@ -307,7 +290,7 @@ class CRegTestParams : public CChainParams {\n         m_assumed_blockchain_size = 0;\n         m_assumed_chain_state_size = 0;\n \n-        UpdateVersionBitsParametersFromArgs(args);\n+        UpdateActivationParametersFromArgs(args);\n \n         genesis = CreateGenesisBlock(1296688602, 2, 0x207fffff, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n@@ -350,11 +333,22 @@ class CRegTestParams : public CChainParams {\n         consensus.vDeployments[d].nStartTime = nStartTime;\n         consensus.vDeployments[d].nTimeout = nTimeout;\n     }\n-    void UpdateVersionBitsParametersFromArgs(const ArgsManager& args);\n+    void UpdateActivationParametersFromArgs(const ArgsManager& args);\n };\n \n-void CRegTestParams::UpdateVersionBitsParametersFromArgs(const ArgsManager& args)\n+void CRegTestParams::UpdateActivationParametersFromArgs(const ArgsManager& args)\n {\n+    if (gArgs.IsArgSet(\"-segwitheight\")) {\n+        int64_t height = gArgs.GetArg(\"-segwitheight\", consensus.SegwitHeight);\n+        if (height < -1 || height >= std::numeric_limits<int>::max()) {\n+            throw std::runtime_error(strprintf(\"Activation height %ld for segwit is out of valid range. Use -1 to disable segwit.\", height));\n+        } else if (height == -1) {\n+            LogPrintf(\"Segwit disabled for testing\\n\");\n+            height = std::numeric_limits<int>::max();\n+        }\n+        consensus.SegwitHeight = static_cast<int>(height);\n+    }\n+\n     if (!args.IsArgSet(\"-vbparams\")) return;\n \n     for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {"
      },
      {
        "sha": "6be066806bcfa44d1b34338975d7435a1d5a3592",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -75,7 +75,7 @@ class CChainParams\n     uint64_t AssumedChainStateSize() const { return m_assumed_chain_state_size; }\n     /** Whether it is possible to mine blocks on demand (no retargeting) */\n     bool MineBlocksOnDemand() const { return consensus.fPowNoRetargeting; }\n-    /** Return the BIP70 network string (main, test or regtest) */\n+    /** Return the network string */\n     std::string NetworkIDString() const { return strNetworkID; }\n     /** Return the list of hostnames to look up for DNS seeds */\n     const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n@@ -120,7 +120,7 @@ std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain);\n const CChainParams &Params();\n \n /**\n- * Sets the params returned by Params() to those for the given BIP70 chain name.\n+ * Sets the params returned by Params() to those for the given chain name.\n  * @throws std::runtime_error when the chain is not supported.\n  */\n void SelectParams(const std::string& chain);"
      },
      {
        "sha": "4bb66c8d8b51251507eac51d6213297f78d7e54c",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -17,9 +17,11 @@ const std::string CBaseChainParams::REGTEST = \"regtest\";\n \n void SetupChainParamsBaseOptions()\n {\n+    gArgs.AddArg(\"-chain=<chain>\", \"Use the chain <chain> (default: main). Allowed values: main, test, regtest\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n-                                   \"This is intended for regression testing tools and app development.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n-    gArgs.AddArg(\"-testnet\", \"Use the test chain\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+                 \"This is intended for regression testing tools and app development. Equivalent to -chain=regtest.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n }\n "
      },
      {
        "sha": "69fe2438f3afc22f561cb15538befc224a2f4c69",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -15,10 +15,12 @@\n class CBaseChainParams\n {\n public:\n-    /** BIP70 chain name strings (main, test or regtest) */\n+    ///@{\n+    /** Chain name strings */\n     static const std::string MAIN;\n     static const std::string TESTNET;\n     static const std::string REGTEST;\n+    ///@}\n \n     const std::string& DataDir() const { return strDataDir; }\n     int RPCPort() const { return nRPCPort; }"
      },
      {
        "sha": "3adac373c6ddba9765c6a55d5949f72aab9c4d26",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 717,
        "deletions": 1233,
        "changes": 1950,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "d8135e0d9a77e1eb8fe95bb250dbda6302d94746",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -95,8 +95,16 @@ class SaltedOutpointHasher\n      * This *must* return size_t. With Boost 1.46 on 32-bit systems the\n      * unordered_map will behave unpredictably if the custom hasher returns a\n      * uint64_t, resulting in failures when syncing the chain (#4634).\n+     *\n+     * Having the hash noexcept allows libstdc++'s unordered_map to recalculate\n+     * the hash during rehash, so it does not have to cache the value. This\n+     * reduces node's memory by sizeof(size_t). The required recalculation has\n+     * a slight performance penalty (around 1.6%), but this is compensated by\n+     * memory savings of about 9% which allow for a larger dbcache setting.\n+     *\n+     * @see https://gcc.gnu.org/onlinedocs/gcc-9.2.0/libstdc++/manual/manual/unordered_associative.html\n      */\n-    size_t operator()(const COutPoint& id) const {\n+    size_t operator()(const COutPoint& id) const noexcept {\n         return SipHashUint256Extra(k0, k1, id.hash, id.n);\n     }\n };"
      },
      {
        "sha": "c254fe7cbf3b8f4ced893a5575d3485802a56513",
        "filename": "src/compat/byteswap.h",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/compat/byteswap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/compat/byteswap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/byteswap.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -17,20 +17,13 @@\n \n #if defined(MAC_OSX)\n \n-#if !defined(bswap_16)\n-\n-// Mac OS X / Darwin features; we include a check for bswap_16 because if it is already defined, protobuf has\n-// defined these macros for us already; if it isn't, we do it ourselves. In either case, we get the exact same\n-// result regardless which path was taken\n #include <libkern/OSByteOrder.h>\n #define bswap_16(x) OSSwapInt16(x)\n #define bswap_32(x) OSSwapInt32(x)\n #define bswap_64(x) OSSwapInt64(x)\n \n-#endif // !defined(bswap_16)\n-\n #else\n-// Non-Mac OS X / non-Darwin\n+// Non-MacOS / non-Darwin\n \n #if HAVE_DECL_BSWAP_16 == 0\n inline uint16_t bswap_16(uint16_t x)"
      },
      {
        "sha": "cc74f28899e914e592ff409b96b62873e8b5807f",
        "filename": "src/compat/glibc_sanity.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 17,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/compat/glibc_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/compat/glibc_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,7 +9,7 @@\n #include <cstddef>\n \n #if defined(HAVE_SYS_SELECT_H)\n-#include <sys/select.h>\n+bool sanity_test_fdelt();\n #endif\n \n extern \"C\" void* memcpy(void* a, const void* b, size_t c);\n@@ -41,21 +41,6 @@ bool sanity_test_memcpy()\n     }\n     return true;\n }\n-\n-#if defined(HAVE_SYS_SELECT_H)\n-// trigger: Call FD_SET to trigger __fdelt_chk. FORTIFY_SOURCE must be defined\n-//   as >0 and optimizations must be set to at least -O2.\n-// test: Add a file descriptor to an empty fd_set. Verify that it has been\n-//   correctly added.\n-bool sanity_test_fdelt()\n-{\n-    fd_set fds;\n-    FD_ZERO(&fds);\n-    FD_SET(0, &fds);\n-    return FD_ISSET(0, &fds);\n-}\n-#endif\n-\n } // namespace\n \n bool glibc_sanity_test()"
      },
      {
        "sha": "87140d0c714dc5c261d678a48ba329d2f68b8643",
        "filename": "src/compat/glibc_sanity_fdelt.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/compat/glibc_sanity_fdelt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/compat/glibc_sanity_fdelt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity_fdelt.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#if defined(HAVE_SYS_SELECT_H)\n+#ifdef HAVE_CSTRING_DEPENDENT_FD_ZERO\n+#include <cstring>\n+#endif\n+#include <sys/select.h>\n+\n+// trigger: Call FD_SET to trigger __fdelt_chk. FORTIFY_SOURCE must be defined\n+//   as >0 and optimizations must be set to at least -O2.\n+// test: Add a file descriptor to an empty fd_set. Verify that it has been\n+//   correctly added.\n+bool sanity_test_fdelt()\n+{\n+    fd_set fds;\n+    FD_ZERO(&fds);\n+    FD_SET(0, &fds);\n+    return FD_ISSET(0, &fds);\n+}\n+#endif"
      },
      {
        "sha": "98d406cca89e5cb4dfff92b96226475d7dc1a550",
        "filename": "src/compat/stdin.cpp",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/compat/stdin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/compat/stdin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/stdin.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <cstdio>       // for fileno(), stdin\n+\n+#ifdef WIN32\n+#include <windows.h>    // for SetStdinEcho()\n+#include <io.h>         // for isatty()\n+#else\n+#include <termios.h>    // for SetStdinEcho()\n+#include <unistd.h>     // for SetStdinEcho(), isatty()\n+#include <poll.h>       // for StdinReady()\n+#endif\n+\n+#include <compat/stdin.h>\n+\n+// https://stackoverflow.com/questions/1413445/reading-a-password-from-stdcin\n+void SetStdinEcho(bool enable)\n+{\n+#ifdef WIN32\n+    HANDLE hStdin = GetStdHandle(STD_INPUT_HANDLE);\n+    DWORD mode;\n+    GetConsoleMode(hStdin, &mode);\n+    if (!enable) {\n+        mode &= ~ENABLE_ECHO_INPUT;\n+    } else {\n+        mode |= ENABLE_ECHO_INPUT;\n+    }\n+    SetConsoleMode(hStdin, mode);\n+#else\n+    struct termios tty;\n+    tcgetattr(STDIN_FILENO, &tty);\n+    if (!enable) {\n+        tty.c_lflag &= ~ECHO;\n+    } else {\n+        tty.c_lflag |= ECHO;\n+    }\n+    (void)tcsetattr(STDIN_FILENO, TCSANOW, &tty);\n+#endif\n+}\n+\n+bool StdinTerminal()\n+{\n+#ifdef WIN32\n+    return _isatty(_fileno(stdin));\n+#else\n+    return isatty(fileno(stdin));\n+#endif\n+}\n+\n+bool StdinReady()\n+{\n+    if (!StdinTerminal()) {\n+        return true;\n+    }\n+#ifdef WIN32\n+    return false;\n+#else\n+    struct pollfd fds;\n+    fds.fd = 0; /* this is STDIN */\n+    fds.events = POLLIN;\n+    return poll(&fds, 1, 0) == 1;\n+#endif\n+}\n+\n+NoechoInst::NoechoInst() { SetStdinEcho(false); }\n+NoechoInst::~NoechoInst() { SetStdinEcho(true); }"
      },
      {
        "sha": "468fe4d6a6e0d18ccd3e177574cb917da76f75e9",
        "filename": "src/compat/stdin.h",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/compat/stdin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/compat/stdin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/stdin.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,18 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMPAT_STDIN_H\n+#define BITCOIN_COMPAT_STDIN_H\n+\n+struct NoechoInst {\n+    NoechoInst();\n+    ~NoechoInst();\n+};\n+\n+#define NO_STDIN_ECHO() NoechoInst _no_echo\n+\n+bool StdinTerminal();\n+bool StdinReady();\n+\n+#endif // BITCOIN_COMPAT_STDIN_H"
      },
      {
        "sha": "a7f45b5c1ef8599cef2db158ebe206042679e516",
        "filename": "src/compressor.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/compressor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/compressor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,7 +5,6 @@\n \n #include <compressor.h>\n \n-#include <hash.h>\n #include <pubkey.h>\n #include <script/standard.h>\n "
      },
      {
        "sha": "f28f76bd349099a098b3f5c7146a133e2a89ee59",
        "filename": "src/consensus/merkle.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/merkle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/merkle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,10 +5,8 @@\n #ifndef BITCOIN_CONSENSUS_MERKLE_H\n #define BITCOIN_CONSENSUS_MERKLE_H\n \n-#include <stdint.h>\n #include <vector>\n \n-#include <primitives/transaction.h>\n #include <primitives/block.h>\n #include <uint256.h>\n "
      },
      {
        "sha": "e191fd6d26bd2809c640a162aacdce14b48bb5b1",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -8,16 +8,12 @@\n \n #include <uint256.h>\n #include <limits>\n-#include <map>\n-#include <string>\n \n namespace Consensus {\n \n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n-    DEPLOYMENT_CSV, // Deployment of BIP68, BIP112, and BIP113.\n-    DEPLOYMENT_SEGWIT, // Deployment of BIP141, BIP143, and BIP147.\n     // NOTE: Also add new deployments to VersionBitsDeploymentInfo in versionbits.cpp\n     MAX_VERSION_BITS_DEPLOYMENTS\n };\n@@ -58,6 +54,15 @@ struct Params {\n     int BIP65Height;\n     /** Block height at which BIP66 becomes active */\n     int BIP66Height;\n+    /** Block height at which CSV (BIP68, BIP112 and BIP113) becomes active */\n+    int CSVHeight;\n+    /** Block height at which Segwit (BIP141, BIP143 and BIP147) becomes active.\n+     * Note that segwit v0 script rules are enforced on all blocks except the\n+     * BIP 16 exception blocks. */\n+    int SegwitHeight;\n+    /** Don't warn about unknown BIP 9 activations below this height.\n+     * This prevents us from warning about the CSV and segwit activations. */\n+    int MinBIP9WarningHeight;\n     /**\n      * Minimum blocks including miner confirmation of the total of 2016 blocks in a retargeting period,\n      * (nPowTargetTimespan / nPowTargetSpacing) which is also used for BIP9 deployments."
      },
      {
        "sha": "88bb12c713dc1d40c5cb591542f285aae0dda953",
        "filename": "src/consensus/tx_check.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/tx_check.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/tx_check.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_check.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -7,50 +7,51 @@\n #include <primitives/transaction.h>\n #include <consensus/validation.h>\n \n-bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fCheckDuplicateInputs)\n+bool CheckTransaction(const CTransaction& tx, TxValidationState& state)\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n+        return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-vin-empty\");\n     if (tx.vout.empty())\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-vout-empty\");\n+        return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-vout-empty\");\n     // Size limits (this doesn't take the witness into account, as that hasn't been checked for malleability)\n     if (::GetSerializeSize(tx, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-oversize\");\n+        return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-oversize\");\n \n-    // Check for negative or overflow output values\n+    // Check for negative or overflow output values (see CVE-2010-5139)\n     CAmount nValueOut = 0;\n     for (const auto& txout : tx.vout)\n     {\n         if (txout.nValue < 0)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-vout-negative\");\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-vout-negative\");\n         if (txout.nValue > MAX_MONEY)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-vout-toolarge\");\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-vout-toolarge\");\n         nValueOut += txout.nValue;\n         if (!MoneyRange(nValueOut))\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-txouttotal-toolarge\");\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-txouttotal-toolarge\");\n     }\n \n-    // Check for duplicate inputs - note that this check is slow so we skip it in CheckBlock\n-    if (fCheckDuplicateInputs) {\n-        std::set<COutPoint> vInOutPoints;\n-        for (const auto& txin : tx.vin)\n-        {\n-            if (!vInOutPoints.insert(txin.prevout).second)\n-                return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-inputs-duplicate\");\n-        }\n+    // Check for duplicate inputs (see CVE-2018-17144)\n+    // While Consensus::CheckTxInputs does check if all inputs of a tx are available, and UpdateCoins marks all inputs\n+    // of a tx as spent, it does not check if the tx has duplicate inputs.\n+    // Failure to run this check will result in either a crash or an inflation bug, depending on the implementation of\n+    // the underlying coins database.\n+    std::set<COutPoint> vInOutPoints;\n+    for (const auto& txin : tx.vin) {\n+        if (!vInOutPoints.insert(txin.prevout).second)\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-inputs-duplicate\");\n     }\n \n     if (tx.IsCoinBase())\n     {\n         if (tx.vin[0].scriptSig.size() < 2 || tx.vin[0].scriptSig.size() > 100)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-length\");\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-cb-length\");\n     }\n     else\n     {\n         for (const auto& txin : tx.vin)\n             if (txin.prevout.IsNull())\n-                return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-prevout-null\");\n+                return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-prevout-null\");\n     }\n \n     return true;"
      },
      {
        "sha": "b818a284f1c183b12e60c9d0bd33b18d63161a3b",
        "filename": "src/consensus/tx_check.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/tx_check.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/tx_check.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_check.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -13,8 +13,8 @@\n  */\n \n class CTransaction;\n-class CValidationState;\n+class TxValidationState;\n \n-bool CheckTransaction(const CTransaction& tx, CValidationState& state, bool fCheckDuplicateInputs=true);\n+bool CheckTransaction(const CTransaction& tx, TxValidationState& state);\n \n #endif // BITCOIN_CONSENSUS_TX_CHECK_H"
      },
      {
        "sha": "31bdabea28103dfb19f3f1e0bcd69ebfde7f726c",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -156,11 +156,11 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n     // are the actual inputs available?\n     if (!inputs.HaveInputs(tx)) {\n-        return state.Invalid(ValidationInvalidReason::TX_MISSING_INPUTS, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\",\n+        return state.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\",\n                          strprintf(\"%s: inputs missing/spent\", __func__));\n     }\n \n@@ -172,27 +172,27 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n \n         // If prev is coinbase, check that it's matured\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(ValidationInvalidReason::TX_PREMATURE_SPEND, false, REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+            return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"bad-txns-premature-spend-of-coinbase\",\n                 strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n         }\n \n         // Check for negative or overflow input values\n         nValueIn += coin.out.nValue;\n         if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn)) {\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+            return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-inputvalues-outofrange\");\n         }\n     }\n \n     const CAmount value_out = tx.GetValueOut();\n     if (nValueIn < value_out) {\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-in-belowout\",\n+        return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-in-belowout\",\n             strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n     }\n \n     // Tally transaction fees\n     const CAmount txfee_aux = nValueIn - value_out;\n     if (!MoneyRange(txfee_aux)) {\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-fee-outofrange\");\n+        return state.Invalid(TxValidationResult::TX_CONSENSUS, \"bad-txns-fee-outofrange\");\n     }\n \n     txfee = txfee_aux;"
      },
      {
        "sha": "b6599f287800ad6d3e29a8c63087f6e28b86f86c",
        "filename": "src/consensus/tx_verify.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/tx_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/tx_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -13,7 +13,7 @@\n class CBlockIndex;\n class CCoinsViewCache;\n class CTransaction;\n-class CValidationState;\n+class TxValidationState;\n \n /** Transaction validation functions */\n \n@@ -24,7 +24,7 @@ namespace Consensus {\n  * @param[out] txfee Set to the transaction fee if successful.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee);\n+bool CheckTxInputs(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee);\n } // namespace Consensus\n \n /** Auxiliary functions for transaction validation (ideally should not be exposed) */"
      },
      {
        "sha": "e602b9d5f35a8f85a6aaed8e5af78dfd258cbded",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 91,
        "deletions": 91,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -12,44 +12,22 @@\n #include <primitives/transaction.h>\n #include <primitives/block.h>\n \n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n-static const unsigned char REJECT_INVALID = 0x10;\n-static const unsigned char REJECT_OBSOLETE = 0x11;\n-static const unsigned char REJECT_DUPLICATE = 0x12;\n-static const unsigned char REJECT_NONSTANDARD = 0x40;\n-// static const unsigned char REJECT_DUST = 0x41; // part of BIP 61\n-static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n-static const unsigned char REJECT_CHECKPOINT = 0x43;\n-\n-/** A \"reason\" why something was invalid, suitable for determining whether the\n-  * provider of the object should be banned/ignored/disconnected/etc.\n-  * These are much more granular than the rejection codes, which may be more\n-  * useful for some other use-cases.\n+/** A \"reason\" why a transaction was invalid, suitable for determining whether the\n+  * provider of the transaction should be banned/ignored/disconnected/etc.\n   */\n-enum class ValidationInvalidReason {\n-    // txn and blocks:\n-    NONE,                    //!< not actually invalid\n-    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+enum class TxValidationResult {\n+    TX_RESULT_UNSET,         //!< initial value. Tx has not yet been rejected\n+    TX_CONSENSUS,            //!< invalid by consensus rules\n     /**\n      * Invalid by a change to consensus rules more recent than SegWit.\n      * Currently unused as there are no such consensus rule changes, and any download\n      * sources realistically need to support SegWit in order to provide useful data,\n      * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n      * is uninteresting.\n      */\n-    RECENT_CONSENSUS_CHANGE,\n-    // Only blocks (or headers):\n-    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n-    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n-    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n-    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n-    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n-    BLOCK_TIME_FUTURE,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n-    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n-    // Only loose txn:\n+    TX_RECENT_CONSENSUS_CHANGE,\n     TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n-    TX_MISSING_INPUTS,        //!< a transaction was missing some of its inputs\n+    TX_MISSING_INPUTS,        //!< transaction was missing some of its inputs\n     TX_PREMATURE_SPEND,       //!< transaction spends a coinbase too early, or violates locktime/sequence locks\n     /**\n      * Transaction might be missing a witness, have a witness prior to SegWit\n@@ -60,85 +38,107 @@ enum class ValidationInvalidReason {\n     /**\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n-     * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n+     * Currently this is only used if the transaction already exists in the mempool or on chain.\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class BlockValidationResult {\n+    BLOCK_RESULT_UNSET,      //!< initial value. Block has not yet been rejected\n+    BLOCK_CONSENSUS,         //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    BLOCK_RECENT_CONSENSUS_CHANGE,\n+    BLOCK_CACHED_INVALID,    //!< this block was cached as being invalid and we didn't store the reason why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_TIME_FUTURE,       //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+};\n \n-inline bool IsBlockReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::CACHED_INVALID ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_HEADER ||\n-           r == ValidationInvalidReason::BLOCK_MUTATED ||\n-           r == ValidationInvalidReason::BLOCK_MISSING_PREV ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_PREV ||\n-           r == ValidationInvalidReason::BLOCK_TIME_FUTURE ||\n-           r == ValidationInvalidReason::BLOCK_CHECKPOINT;\n-}\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n+\n+/** Base class for capturing information about block/transaction validation. This is subclassed\n+ *  by TxValidationState and BlockValidationState for validation information on transactions\n+ *  and blocks respectively. */\n+class ValidationState {\n private:\n     enum mode_state {\n         MODE_VALID,   //!< everything ok\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n-    } mode;\n-    ValidationInvalidReason m_reason;\n-    std::string strRejectReason;\n-    unsigned int chRejectCode;\n-    std::string strDebugMessage;\n-public:\n-    CValidationState() : mode(MODE_VALID), m_reason(ValidationInvalidReason::NONE), chRejectCode(0) {}\n-    bool Invalid(ValidationInvalidReason reasonIn, bool ret = false,\n-            unsigned int chRejectCodeIn=0, const std::string &strRejectReasonIn=\"\",\n-            const std::string &strDebugMessageIn=\"\") {\n-        m_reason = reasonIn;\n-        chRejectCode = chRejectCodeIn;\n-        strRejectReason = strRejectReasonIn;\n-        strDebugMessage = strDebugMessageIn;\n-        if (mode == MODE_ERROR)\n-            return ret;\n-        mode = MODE_INVALID;\n-        return ret;\n+    } m_mode;\n+    std::string m_reject_reason;\n+    std::string m_debug_message;\n+protected:\n+    void Invalid(const std::string &reject_reason=\"\",\n+                 const std::string &debug_message=\"\")\n+    {\n+        m_reject_reason = reject_reason;\n+        m_debug_message = debug_message;\n+        if (m_mode != MODE_ERROR) m_mode = MODE_INVALID;\n     }\n-    bool Error(const std::string& strRejectReasonIn) {\n-        if (mode == MODE_VALID)\n-            strRejectReason = strRejectReasonIn;\n-        mode = MODE_ERROR;\n+public:\n+    // ValidationState is abstract. Have a pure virtual destructor.\n+    virtual ~ValidationState() = 0;\n+\n+    ValidationState() : m_mode(MODE_VALID) {}\n+    bool Error(const std::string& reject_reason)\n+    {\n+        if (m_mode == MODE_VALID)\n+            m_reject_reason = reject_reason;\n+        m_mode = MODE_ERROR;\n         return false;\n     }\n-    bool IsValid() const {\n-        return mode == MODE_VALID;\n-    }\n-    bool IsInvalid() const {\n-        return mode == MODE_INVALID;\n+    bool IsValid() const { return m_mode == MODE_VALID; }\n+    bool IsInvalid() const { return m_mode == MODE_INVALID; }\n+    bool IsError() const { return m_mode == MODE_ERROR; }\n+    std::string GetRejectReason() const { return m_reject_reason; }\n+    std::string GetDebugMessage() const { return m_debug_message; }\n+};\n+\n+inline ValidationState::~ValidationState() {};\n+\n+class TxValidationState : public ValidationState {\n+private:\n+    TxValidationResult m_result;\n+public:\n+    bool Invalid(TxValidationResult result,\n+                 const std::string &reject_reason=\"\",\n+                 const std::string &debug_message=\"\")\n+    {\n+        m_result = result;\n+        ValidationState::Invalid(reject_reason, debug_message);\n+        return false;\n     }\n-    bool IsError() const {\n-        return mode == MODE_ERROR;\n+    TxValidationResult GetResult() const { return m_result; }\n+};\n+\n+class BlockValidationState : public ValidationState {\n+private:\n+    BlockValidationResult m_result;\n+public:\n+    bool Invalid(BlockValidationResult result,\n+                 const std::string &reject_reason=\"\",\n+                 const std::string &debug_message=\"\") {\n+        m_result = result;\n+        ValidationState::Invalid(reject_reason, debug_message);\n+        return false;\n     }\n-    ValidationInvalidReason GetReason() const { return m_reason; }\n-    unsigned int GetRejectCode() const { return chRejectCode; }\n-    std::string GetRejectReason() const { return strRejectReason; }\n-    std::string GetDebugMessage() const { return strDebugMessage; }\n+    BlockValidationResult GetResult() const { return m_result; }\n };\n \n // These implement the weight = (stripped_size * 4) + witness_size formula,"
      },
      {
        "sha": "7ce2a4983647d3da98fdfa7b2fff5388adfdb4bf",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -144,7 +144,7 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_address)\n     out.pushKV(\"type\", GetTxnOutputType(type));\n \n     CTxDestination address;\n-    if (include_address && ExtractDestination(script, address)) {\n+    if (include_address && ExtractDestination(script, address) && type != TX_PUBKEY) {\n         out.pushKV(\"address\", EncodeDestination(address));\n     }\n }\n@@ -160,7 +160,7 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n     if (fIncludeHex)\n         out.pushKV(\"hex\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n \n-    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired)) {\n+    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired) || type == TX_PUBKEY) {\n         out.pushKV(\"type\", GetTxnOutputType(type));\n         return;\n     }"
      },
      {
        "sha": "6ed90884342445eed042e70eaab5d0824ff39f34",
        "filename": "src/crypto/aes.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/aes.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/aes.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/aes.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -4,7 +4,6 @@\n \n #include <crypto/aes.h>\n \n-#include <assert.h>\n #include <string.h>\n \n extern \"C\" {"
      },
      {
        "sha": "0582a60c4f8c69d3fe97e6d71984d69c2799b6e0",
        "filename": "src/crypto/chacha_poly_aead.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/chacha_poly_aead.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/chacha_poly_aead.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha_poly_aead.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -4,7 +4,6 @@\n \n #include <crypto/chacha_poly_aead.h>\n \n-#include <crypto/common.h>\n #include <crypto/poly1305.h>\n #include <support/cleanse.h>\n "
      },
      {
        "sha": "e684eced375a4941b2a87b276aba0c03dce28571",
        "filename": "src/crypto/hkdf_sha256_32.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/hkdf_sha256_32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/hkdf_sha256_32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hkdf_sha256_32.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -9,7 +9,7 @@\n \n CHKDF_HMAC_SHA256_L32::CHKDF_HMAC_SHA256_L32(const unsigned char* ikm, size_t ikmlen, const std::string& salt)\n {\n-    CHMAC_SHA256((const unsigned char*)salt.c_str(), salt.size()).Write(ikm, ikmlen).Finalize(m_prk);\n+    CHMAC_SHA256((const unsigned char*)salt.data(), salt.size()).Write(ikm, ikmlen).Finalize(m_prk);\n }\n \n void CHKDF_HMAC_SHA256_L32::Expand32(const std::string& info, unsigned char hash[OUTPUT_SIZE])"
      },
      {
        "sha": "3257ee7f97e87622f7c1274ec65a137dd870c8c1",
        "filename": "src/crypto/sha256.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -7,7 +7,6 @@\n \n #include <assert.h>\n #include <string.h>\n-#include <atomic>\n \n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n #if defined(USE_ASM)"
      },
      {
        "sha": "7ea0c3479697c7b4c6f1483dddd9ba94f80bb7d1",
        "filename": "src/crypto/sha256_shani.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/sha256_shani.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/crypto/sha256_shani.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256_shani.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -11,7 +11,6 @@\n #include <stdint.h>\n #include <immintrin.h>\n \n-#include <crypto/common.h>\n \n \n namespace {"
      },
      {
        "sha": "674f47b956188e1f395e39e95740c87fc7a65f0f",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 50,
        "deletions": 49,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -14,42 +14,40 @@\n #include <vector>\n \n \n-/** namespace CuckooCache provides high performance cache primitives\n+/** High-performance cache primitives.\n  *\n  * Summary:\n  *\n- * 1) bit_packed_atomic_flags is bit-packed atomic flags for garbage collection\n+ * 1. @ref bit_packed_atomic_flags is bit-packed atomic flags for garbage collection\n  *\n- * 2) cache is a cache which is performant in memory usage and lookup speed. It\n- * is lockfree for erase operations. Elements are lazily erased on the next\n- * insert.\n+ * 2. @ref cache is a cache which is performant in memory usage and lookup speed. It\n+ * is lockfree for erase operations. Elements are lazily erased on the next insert.\n  */\n namespace CuckooCache\n {\n-/** bit_packed_atomic_flags implements a container for garbage collection flags\n+/** @ref bit_packed_atomic_flags implements a container for garbage collection flags\n  * that is only thread unsafe on calls to setup. This class bit-packs collection\n  * flags for memory efficiency.\n  *\n- * All operations are std::memory_order_relaxed so external mechanisms must\n+ * All operations are `std::memory_order_relaxed` so external mechanisms must\n  * ensure that writes and reads are properly synchronized.\n  *\n- * On setup(n), all bits up to n are marked as collected.\n+ * On setup(n), all bits up to `n` are marked as collected.\n  *\n  * Under the hood, because it is an 8-bit type, it makes sense to use a multiple\n  * of 8 for setup, but it will be safe if that is not the case as well.\n- *\n  */\n class bit_packed_atomic_flags\n {\n     std::unique_ptr<std::atomic<uint8_t>[]> mem;\n \n public:\n-    /** No default constructor as there must be some size */\n+    /** No default constructor, as there must be some size. */\n     bit_packed_atomic_flags() = delete;\n \n     /**\n      * bit_packed_atomic_flags constructor creates memory to sufficiently\n-     * keep track of garbage collection information for size entries.\n+     * keep track of garbage collection information for `size` entries.\n      *\n      * @param size the number of elements to allocate space for\n      *\n@@ -68,7 +66,7 @@ class bit_packed_atomic_flags\n     };\n \n     /** setup marks all entries and ensures that bit_packed_atomic_flags can store\n-     * at least size entries\n+     * at least `b` entries.\n      *\n      * @param b the number of elements to allocate space for\n      * @post bit_set, bit_unset, and bit_is_set function properly forall x. x <\n@@ -84,19 +82,18 @@ class bit_packed_atomic_flags\n \n     /** bit_set sets an entry as discardable.\n      *\n-     * @param s the index of the entry to bit_set.\n+     * @param s the index of the entry to bit_set\n      * @post immediately subsequent call (assuming proper external memory\n      * ordering) to bit_is_set(s) == true.\n-     *\n      */\n     inline void bit_set(uint32_t s)\n     {\n         mem[s >> 3].fetch_or(1 << (s & 7), std::memory_order_relaxed);\n     }\n \n-    /**  bit_unset marks an entry as something that should not be overwritten\n+    /** bit_unset marks an entry as something that should not be overwritten.\n      *\n-     * @param s the index of the entry to bit_unset.\n+     * @param s the index of the entry to bit_unset\n      * @post immediately subsequent call (assuming proper external memory\n      * ordering) to bit_is_set(s) == false.\n      */\n@@ -105,26 +102,26 @@ class bit_packed_atomic_flags\n         mem[s >> 3].fetch_and(~(1 << (s & 7)), std::memory_order_relaxed);\n     }\n \n-    /** bit_is_set queries the table for discardability at s\n+    /** bit_is_set queries the table for discardability at `s`.\n      *\n-     * @param s the index of the entry to read.\n-     * @returns if the bit at index s was set.\n+     * @param s the index of the entry to read\n+     * @returns true if the bit at index `s` was set, false otherwise\n      * */\n     inline bool bit_is_set(uint32_t s) const\n     {\n         return (1 << (s & 7)) & mem[s >> 3].load(std::memory_order_relaxed);\n     }\n };\n \n-/** cache implements a cache with properties similar to a cuckoo-set\n+/** @ref cache implements a cache with properties similar to a cuckoo-set.\n  *\n- *  The cache is able to hold up to (~(uint32_t)0) - 1 elements.\n+ *  The cache is able to hold up to `(~(uint32_t)0) - 1` elements.\n  *\n  *  Read Operations:\n- *      - contains(*, false)\n+ *      - contains() for `erase=false`\n  *\n  *  Read+Erase Operations:\n- *      - contains(*, true)\n+ *      - contains() for `erase=true`\n  *\n  *  Erase Operations:\n  *      - allow_erase()\n@@ -141,10 +138,10 @@ class bit_packed_atomic_flags\n  *\n  * User Must Guarantee:\n  *\n- * 1) Write Requires synchronized access (e.g., a lock)\n- * 2) Read Requires no concurrent Write, synchronized with the last insert.\n- * 3) Erase requires no concurrent Write, synchronized with last insert.\n- * 4) An Erase caller must release all memory before allowing a new Writer.\n+ * 1. Write requires synchronized access (e.g. a lock)\n+ * 2. Read requires no concurrent Write, synchronized with last insert.\n+ * 3. Erase requires no concurrent Write, synchronized with last insert.\n+ * 4. An Erase caller must release all memory before allowing a new Writer.\n  *\n  *\n  * Note on function names:\n@@ -177,7 +174,7 @@ class cache\n     mutable std::vector<bool> epoch_flags;\n \n     /** epoch_heuristic_counter is used to determine when an epoch might be aged\n-     * & an expensive scan should be done.  epoch_heuristic_counter is\n+     * & an expensive scan should be done. epoch_heuristic_counter is\n      * decremented on insert and reset to the new number of inserts which would\n      * cause the epoch to reach epoch_size when it reaches zero.\n      */\n@@ -194,24 +191,25 @@ class cache\n     uint32_t epoch_size;\n \n     /** depth_limit determines how many elements insert should try to replace.\n-     * Should be set to log2(n)*/\n+     * Should be set to log2(n).\n+     */\n     uint8_t depth_limit;\n \n     /** hash_function is a const instance of the hash function. It cannot be\n      * static or initialized at call time as it may have internal state (such as\n      * a nonce).\n-     * */\n+     */\n     const Hash hash_function;\n \n     /** compute_hashes is convenience for not having to write out this\n      * expression everywhere we use the hash values of an Element.\n      *\n      * We need to map the 32-bit input hash onto a hash bucket in a range [0, size) in a\n-     *  manner which preserves as much of the hash's uniformity as possible.  Ideally\n+     *  manner which preserves as much of the hash's uniformity as possible. Ideally\n      *  this would be done by bitmasking but the size is usually not a power of two.\n      *\n      * The naive approach would be to use a mod -- which isn't perfectly uniform but so\n-     *  long as the hash is much larger than size it is not that bad.  Unfortunately,\n+     *  long as the hash is much larger than size it is not that bad. Unfortunately,\n      *  mod/division is fairly slow on ordinary microprocessors (e.g. 90-ish cycles on\n      *  haswell, ARM doesn't even have an instruction for it.); when the divisor is a\n      *  constant the compiler will do clever tricks to turn it into a multiply+add+shift,\n@@ -223,10 +221,10 @@ class cache\n      *  somewhat complicated and the result is still slower than other options:\n      *\n      * Instead we treat the 32-bit random number as a Q32 fixed-point number in the range\n-     *  [0,1) and simply multiply it by the size.  Then we just shift the result down by\n-     *  32-bits to get our bucket number.  The result has non-uniformity the same as a\n+     *  [0, 1) and simply multiply it by the size. Then we just shift the result down by\n+     *  32-bits to get our bucket number. The result has non-uniformity the same as a\n      *  mod, but it is much faster to compute. More about this technique can be found at\n-     *  http://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+     *  http://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/ .\n      *\n      * The resulting non-uniformity is also more equally distributed which would be\n      *  advantageous for something like linear probing, though it shouldn't matter\n@@ -237,8 +235,8 @@ class cache\n      *  32*32->64 multiply, which means the operation is reasonably fast even on a\n      *  typical 32-bit processor.\n      *\n-     * @param e the element whose hashes will be returned\n-     * @returns std::array<uint32_t, 8> of deterministic hashes derived from e\n+     * @param e The element whose hashes will be returned\n+     * @returns Deterministic hashes derived from `e` uniformly mapped onto the range [0, size)\n      */\n     inline std::array<uint32_t, 8> compute_hashes(const Element& e) const\n     {\n@@ -252,14 +250,14 @@ class cache\n                  (uint32_t)(((uint64_t)hash_function.template operator()<7>(e) * (uint64_t)size) >> 32)}};\n     }\n \n-    /* end\n-     * @returns a constexpr index that can never be inserted to */\n+    /** invalid returns a special index that can never be inserted to\n+     * @returns the special constexpr index that can never be inserted to */\n     constexpr uint32_t invalid() const\n     {\n         return ~(uint32_t)0;\n     }\n \n-    /** allow_erase marks the element at index n as discardable. Threadsafe\n+    /** allow_erase marks the element at index `n` as discardable. Threadsafe\n      * without any concurrent insert.\n      * @param n the index to allow erasure of\n      */\n@@ -268,7 +266,7 @@ class cache\n         collection_flags.bit_set(n);\n     }\n \n-    /** please_keep marks the element at index n as an entry that should be kept.\n+    /** please_keep marks the element at index `n` as an entry that should be kept.\n      * Threadsafe without any concurrent insert.\n      * @param n the index to prioritize keeping\n      */\n@@ -336,7 +334,7 @@ class cache\n      *\n      * @param new_size the desired number of elements to store\n      * @returns the maximum number of elements storable\n-     **/\n+     */\n     uint32_t setup(uint32_t new_size)\n     {\n         // depth_limit must be at least one otherwise errors can occur.\n@@ -360,7 +358,7 @@ class cache\n      * negligible compared to the size of the elements.\n      *\n      * @param bytes the approximate number of bytes to use for this data\n-     * structure.\n+     * structure\n      * @returns the maximum number of elements storable (see setup()\n      * documentation for more detail)\n      */\n@@ -376,18 +374,19 @@ class cache\n      * It drops the last tried element if it runs out of depth before\n      * encountering an open slot.\n      *\n-     * Thus\n+     * Thus:\n      *\n+     * ```\n      * insert(x);\n      * return contains(x, false);\n+     * ```\n      *\n      * is not guaranteed to return true.\n      *\n      * @param e the element to insert\n      * @post one of the following: All previously inserted elements and e are\n      * now in the table, one previously inserted element is evicted from the\n      * table, the entry attempted to be inserted is evicted.\n-     *\n      */\n     inline void insert(Element e)\n     {\n@@ -416,9 +415,9 @@ class cache\n             /** Swap with the element at the location that was\n             * not the last one looked at. Example:\n             *\n-            * 1) On first iteration, last_loc == invalid(), find returns last, so\n+            * 1. On first iteration, last_loc == invalid(), find returns last, so\n             *    last_loc defaults to locs[0].\n-            * 2) On further iterations, where last_loc == locs[k], last_loc will\n+            * 2. On further iterations, where last_loc == locs[k], last_loc will\n             *    go to locs[k+1 % 8], i.e., next of the 8 indices wrapping around\n             *    to 0 if needed.\n             *\n@@ -439,17 +438,19 @@ class cache\n         }\n     }\n \n-    /* contains iterates through the hash locations for a given element\n+    /** contains iterates through the hash locations for a given element\n      * and checks to see if it is present.\n      *\n      * contains does not check garbage collected state (in other words,\n      * garbage is only collected when the space is needed), so:\n      *\n+     * ```\n      * insert(x);\n      * if (contains(x, true))\n      *     return contains(x, false);\n      * else\n      *     return true;\n+     * ```\n      *\n      * executed on a single thread will always return true!\n      *\n@@ -458,7 +459,7 @@ class cache\n      * contains returns a bool set true if the element was found.\n      *\n      * @param e the element to check\n-     * @param erase\n+     * @param erase whether to attempt setting the garbage collect flag\n      *\n      * @post if erase is true and the element is found, then the garbage collect\n      * flag is set"
      },
      {
        "sha": "061c9b6bca6bcdcf9c55feeeef7b57bf8a9bca93",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -11,7 +11,6 @@\n #include <streams.h>\n #include <util/system.h>\n #include <util/strencodings.h>\n-#include <version.h>\n \n #include <leveldb/db.h>\n #include <leveldb/write_batch.h>"
      },
      {
        "sha": "38b5b0efc4ca197a849b18fdbb1aa735d53f9d0e",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -2,11 +2,12 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <stdio.h>\n #include <util/system.h>\n #include <walletinitinterface.h>\n+#include <support/allocators/secure.h>\n \n class CWallet;\n+enum class WalletCreationStatus;\n \n namespace interfaces {\n class Chain;\n@@ -18,7 +19,7 @@ class DummyWalletInit : public WalletInitInterface {\n     bool HasWalletSupport() const override {return false;}\n     void AddWalletOptions() const override;\n     bool ParameterInteraction() const override {return true;}\n-    void Construct(InitInterfaces& interfaces) const override {LogPrintf(\"No wallet support compiled in!\\n\");}\n+    void Construct(NodeContext& node) const override {LogPrintf(\"No wallet support compiled in!\\n\");}\n };\n \n void DummyWalletInit::AddWalletOptions() const\n@@ -69,7 +70,12 @@ std::vector<std::shared_ptr<CWallet>> GetWallets()\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }\n \n-std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning)\n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::vector<std::string>& warnings)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n+WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::shared_ptr<CWallet>& result)\n {\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }"
      },
      {
        "sha": "73fb3b606ec4ac160a9fe378b05469a6d5f5b3ab",
        "filename": "src/fs.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/fs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/fs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -107,10 +107,10 @@ std::string get_filesystem_error_message(const fs::filesystem_error& e)\n #else\n     // Convert from Multi Byte to utf-16\n     std::string mb_string(e.what());\n-    int size = MultiByteToWideChar(CP_ACP, 0, mb_string.c_str(), mb_string.size(), nullptr, 0);\n+    int size = MultiByteToWideChar(CP_ACP, 0, mb_string.data(), mb_string.size(), nullptr, 0);\n \n     std::wstring utf16_string(size, L'\\0');\n-    MultiByteToWideChar(CP_ACP, 0, mb_string.c_str(), mb_string.size(), &*utf16_string.begin(), size);\n+    MultiByteToWideChar(CP_ACP, 0, mb_string.data(), mb_string.size(), &*utf16_string.begin(), size);\n     // Convert from utf-16 to utf-8\n     return std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>, wchar_t>().to_bytes(utf16_string);\n #endif"
      },
      {
        "sha": "0437f0c7de86537d6da47359eaa9c86613cfb241",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -7,10 +7,8 @@\n #include <chainparams.h>\n #include <crypto/hmac_sha256.h>\n #include <httpserver.h>\n-#include <key_io.h>\n #include <rpc/protocol.h>\n #include <rpc/server.h>\n-#include <sync.h>\n #include <ui_interface.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n@@ -114,7 +112,7 @@ static bool multiUserAuthorized(std::string strUserPass)\n         static const unsigned int KEY_SIZE = 32;\n         unsigned char out[KEY_SIZE];\n \n-        CHMAC_SHA256(reinterpret_cast<const unsigned char*>(strSalt.c_str()), strSalt.size()).Write(reinterpret_cast<const unsigned char*>(strPass.c_str()), strPass.size()).Finalize(out);\n+        CHMAC_SHA256(reinterpret_cast<const unsigned char*>(strSalt.data()), strSalt.size()).Write(reinterpret_cast<const unsigned char*>(strPass.data()), strPass.size()).Finalize(out);\n         std::vector<unsigned char> hexvec(out, out+KEY_SIZE);\n         std::string strHashFromPass = HexStr(hexvec);\n "
      },
      {
        "sha": "91c2ec0c9d7ee3fdb93559bde8523a184e1f4987",
        "filename": "src/httprpc.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/httprpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/httprpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,8 +5,6 @@\n #ifndef BITCOIN_HTTPRPC_H\n #define BITCOIN_HTTPRPC_H\n \n-#include <string>\n-#include <map>\n \n /** Start HTTP RPC subsystem.\n  * Precondition; HTTP and RPC has been started."
      },
      {
        "sha": "d9c71133235818b1f870cd4d71eed10a8949ed0c",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -15,14 +15,14 @@\n #include <sync.h>\n #include <ui_interface.h>\n \n+#include <deque>\n #include <memory>\n #include <stdio.h>\n #include <stdlib.h>\n #include <string>\n \n #include <sys/types.h>\n #include <sys/stat.h>\n-#include <signal.h>\n \n #include <event2/thread.h>\n #include <event2/buffer.h>"
      },
      {
        "sha": "bc72fc8512d4681b3dbd89e0868f95af8eda0d0c",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,6 @@\n #define BITCOIN_HTTPSERVER_H\n \n #include <string>\n-#include <stdint.h>\n #include <functional>\n \n static const int DEFAULT_HTTP_THREADS=4;"
      },
      {
        "sha": "f95eeb8197bc49b4ca36f6adfe1a39964703677c",
        "filename": "src/index/base.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/index/base.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/index/base.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -9,7 +9,6 @@\n #include <primitives/block.h>\n #include <primitives/transaction.h>\n #include <threadinterrupt.h>\n-#include <uint256.h>\n #include <validationinterface.h>\n \n class CBlockIndex;"
      },
      {
        "sha": "74a7f2d882d622fb639367ceae1cf5f4d2cc5680",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 117,
        "deletions": 123,
        "changes": 240,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -15,7 +15,6 @@\n #include <blockfilter.h>\n #include <chain.h>\n #include <chainparams.h>\n-#include <coins.h>\n #include <compat/sanity.h>\n #include <consensus/validation.h>\n #include <fs.h>\n@@ -27,8 +26,10 @@\n #include <key.h>\n #include <miner.h>\n #include <net.h>\n+#include <net_permissions.h>\n #include <net_processing.h>\n #include <netbase.h>\n+#include <node/context.h>\n #include <policy/feerate.h>\n #include <policy/fees.h>\n #include <policy/policy.h>\n@@ -84,9 +85,6 @@ static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n // Dump addresses to banlist.dat every 15 minutes (900s)\n static constexpr int DUMP_BANS_INTERVAL = 60 * 15;\n \n-std::unique_ptr<CConnman> g_connman;\n-std::unique_ptr<PeerLogicValidation> peerLogic;\n-std::unique_ptr<BanMan> g_banman;\n \n #ifdef WIN32\n // Win32 LevelDB doesn't use filedescriptors, and the ones used for\n@@ -149,29 +147,28 @@ NODISCARD static bool CreatePidFile()\n // shutdown thing.\n //\n \n-static std::unique_ptr<CCoinsViewErrorCatcher> pcoinscatcher;\n static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n \n static boost::thread_group threadGroup;\n static CScheduler scheduler;\n \n-void Interrupt()\n+void Interrupt(NodeContext& node)\n {\n     InterruptHTTPServer();\n     InterruptHTTPRPC();\n     InterruptRPC();\n     InterruptREST();\n     InterruptTorControl();\n     InterruptMapPort();\n-    if (g_connman)\n-        g_connman->Interrupt();\n+    if (node.connman)\n+        node.connman->Interrupt();\n     if (g_txindex) {\n         g_txindex->Interrupt();\n     }\n     ForEachBlockFilterIndex([](BlockFilterIndex& index) { index.Interrupt(); });\n }\n \n-void Shutdown(InitInterfaces& interfaces)\n+void Shutdown(NodeContext& node)\n {\n     LogPrintf(\"%s: In progress...\\n\", __func__);\n     static CCriticalSection cs_Shutdown;\n@@ -190,15 +187,15 @@ void Shutdown(InitInterfaces& interfaces)\n     StopREST();\n     StopRPC();\n     StopHTTPServer();\n-    for (const auto& client : interfaces.chain_clients) {\n+    for (const auto& client : node.chain_clients) {\n         client->flush();\n     }\n     StopMapPort();\n \n     // Because these depend on each-other, we make sure that neither can be\n     // using the other before destroying them.\n-    if (peerLogic) UnregisterValidationInterface(peerLogic.get());\n-    if (g_connman) g_connman->Stop();\n+    if (node.peer_logic) UnregisterValidationInterface(node.peer_logic.get());\n+    if (node.connman) node.connman->Stop();\n     if (g_txindex) g_txindex->Stop();\n     ForEachBlockFilterIndex([](BlockFilterIndex& index) { index.Stop(); });\n \n@@ -211,9 +208,9 @@ void Shutdown(InitInterfaces& interfaces)\n \n     // After the threads that potentially access these pointers have been stopped,\n     // destruct and reset all to nullptr.\n-    peerLogic.reset();\n-    g_connman.reset();\n-    g_banman.reset();\n+    node.peer_logic.reset();\n+    node.connman.reset();\n+    node.banman.reset();\n     g_txindex.reset();\n     DestroyAllBlockFilterIndexes();\n \n@@ -234,8 +231,14 @@ void Shutdown(InitInterfaces& interfaces)\n     }\n \n     // FlushStateToDisk generates a ChainStateFlushed callback, which we should avoid missing\n-    if (pcoinsTip != nullptr) {\n-        ::ChainstateActive().ForceFlushStateToDisk();\n+    //\n+    // g_chainstate is referenced here directly (instead of ::ChainstateActive()) because it\n+    // may not have been initialized yet.\n+    {\n+        LOCK(cs_main);\n+        if (g_chainstate && g_chainstate->CanFlushToDisk()) {\n+            g_chainstate->ForceFlushStateToDisk();\n+        }\n     }\n \n     // After there are no more peers/RPC left to give us new data which may generate\n@@ -250,15 +253,13 @@ void Shutdown(InitInterfaces& interfaces)\n \n     {\n         LOCK(cs_main);\n-        if (pcoinsTip != nullptr) {\n-            ::ChainstateActive().ForceFlushStateToDisk();\n+        if (g_chainstate && g_chainstate->CanFlushToDisk()) {\n+            g_chainstate->ForceFlushStateToDisk();\n+            g_chainstate->ResetCoinsViews();\n         }\n-        pcoinsTip.reset();\n-        pcoinscatcher.reset();\n-        pcoinsdbview.reset();\n         pblocktree.reset();\n     }\n-    for (const auto& client : interfaces.chain_clients) {\n+    for (const auto& client : node.chain_clients) {\n         client->stop();\n     }\n \n@@ -277,7 +278,7 @@ void Shutdown(InitInterfaces& interfaces)\n     } catch (const fs::filesystem_error& e) {\n         LogPrintf(\"%s: Unable to remove PID file: %s\\n\", __func__, fsbridge::get_filesystem_error_message(e));\n     }\n-    interfaces.chain_clients.clear();\n+    node.chain_clients.clear();\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n     GetMainSignals().UnregisterWithMempoolSignals(mempool);\n@@ -351,7 +352,7 @@ void SetupServerArgs()\n     std::vector<std::string> hidden_args = {\n         \"-dbcrashratio\", \"-forcecompactdb\",\n         // GUI args. These will be overwritten by SetupUIArgs for the GUI\n-        \"-allowselfsignedrootcertificates\", \"-choosedatadir\", \"-lang=<lang>\", \"-min\", \"-resetguisettings\", \"-rootcertificates=<file>\", \"-splash\", \"-uiplatform\"};\n+        \"-choosedatadir\", \"-lang=<lang>\", \"-min\", \"-resetguisettings\", \"-splash\", \"-uiplatform\"};\n \n     gArgs.AddArg(\"-version\", \"Print version and exit\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #if HAVE_SYSTEM\n@@ -363,15 +364,15 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-blocknotify=<cmd>\", \"Execute command when the best block changes (%s in cmd is replaced by block hash)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif\n     gArgs.AddArg(\"-blockreconstructionextratxn=<n>\", strprintf(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Transactions from the wallet or RPC are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Transactions from the wallet, RPC and relay whitelisted inbound peers are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-dbcache=<n>\", strprintf(\"Maximum database cache size <n> MiB (%d to %d, default: %d). In addition, unused mempool memory is shared for this cache (see -maxmempool).\", nMinDbCache, nMaxDbCache, nDefaultDbCache), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (-nodebuglogfile to disable; default: %s)\", DEFAULT_DEBUGLOGFILE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-includeconf=<file>\", \"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-loadblock=<file>\", \"Imports blocks from external blk000??.dat file on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-loadblock=<file>\", \"Imports blocks from external file on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-maxmempool=<n>\", strprintf(\"Keep the transaction memory pool below <n> megabytes (default: %u)\", DEFAULT_MAX_MEMPOOL_SIZE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-maxorphantx=<n>\", strprintf(\"Keep at most <n> unconnectable transactions in memory (default: %u)\", DEFAULT_MAX_ORPHAN_TRANSACTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-mempoolexpiry=<n>\", strprintf(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\", DEFAULT_MEMPOOL_EXPIRY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -404,7 +405,6 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-discover\", \"Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-dns\", strprintf(\"Allow DNS lookups for -addnode, -seednode and -connect (default: %u)\", DEFAULT_NAME_LOOKUP), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-dnsseed\", \"Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect used)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-enablebip61\", strprintf(\"Send reject messages per BIP61 (default: %u)\", DEFAULT_ENABLE_BIP61), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-externalip=<ip>\", \"Specify your own public address\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-forcednsseed\", strprintf(\"Always query for peer addresses via DNS lookup (default: %u)\", DEFAULT_FORCEDNSSEED), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-listen\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n@@ -435,9 +435,17 @@ void SetupServerArgs()\n #else\n     hidden_args.emplace_back(\"-upnp\");\n #endif\n-    gArgs.AddArg(\"-whitebind=<addr>\", \"Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-whitelist=<IP address or network>\", \"Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.\"\n-        \" Whitelisted peers cannot be DoS banned\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-whitebind=<[permissions@]addr>\", \"Bind to given address and whitelist peers connecting to it. \"\n+        \"Use [host]:port notation for IPv6. Allowed permissions are bloomfilter (allow requesting BIP37 filtered blocks and transactions), \"\n+        \"noban (do not ban for misbehavior), \"\n+        \"forcerelay (relay even non-standard transactions), \"\n+        \"relay (relay even in -blocksonly mode), \"\n+        \"and mempool (allow requesting BIP35 mempool contents). \"\n+        \"Specify multiple permissions separated by commas (default: noban,mempool,relay). Can be specified multiple times.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+\n+    gArgs.AddArg(\"-whitelist=<[permissions@]IP address or network>\", \"Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or \"\n+        \"CIDR notated network(e.g. 1.2.3.0/24). Uses same permissions as \"\n+        \"-whitebind. Can be specified multiple times.\" , ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n \n     g_wallet_init_interface.AddWalletOptions();\n \n@@ -470,9 +478,9 @@ void SetupServerArgs()\n         \"and level 4 tries to reconnect the blocks, \"\n         \"each level includes the checks of the previous levels \"\n         \"(0-4, default: %u)\", DEFAULT_CHECKLEVEL), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-checkblockindex\", strprintf(\"Do a full consistency check for the block tree, setBlockIndexCandidates, ::ChainActive() and mapBlocksUnlinked occasionally. (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-checkblockindex\", strprintf(\"Do a consistency check for the block tree, chainstate, and other validation data structures occasionally. (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-checkpoints\", strprintf(\"Enable rejection of any forks from the known historical chain until block 295000 (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-deprecatedrpc=<method>\", \"Allows deprecated RPC method(s) to be used\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n@@ -507,8 +515,8 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-datacarriersize\", strprintf(\"Maximum size of data in data carrier transactions we relay and mine (default: %u)\", MAX_OP_RETURN_RELAY), ArgsManager::ALLOW_ANY, OptionsCategory::NODE_RELAY);\n     gArgs.AddArg(\"-minrelaytxfee=<amt>\", strprintf(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\",\n         CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)), ArgsManager::ALLOW_ANY, OptionsCategory::NODE_RELAY);\n-    gArgs.AddArg(\"-whitelistforcerelay\", strprintf(\"Force relay of transactions from whitelisted peers even if the transactions were already in the mempool or violate local relay policy (default: %d)\", DEFAULT_WHITELISTFORCERELAY), ArgsManager::ALLOW_ANY, OptionsCategory::NODE_RELAY);\n-    gArgs.AddArg(\"-whitelistrelay\", strprintf(\"Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: %d)\", DEFAULT_WHITELISTRELAY), ArgsManager::ALLOW_ANY, OptionsCategory::NODE_RELAY);\n+    gArgs.AddArg(\"-whitelistforcerelay\", strprintf(\"Add 'forcerelay' permission to whitelisted inbound peers with default permissions. This will relay transactions even if the transactions were already in the mempool or violate local relay policy. (default: %d)\", DEFAULT_WHITELISTFORCERELAY), ArgsManager::ALLOW_ANY, OptionsCategory::NODE_RELAY);\n+    gArgs.AddArg(\"-whitelistrelay\", strprintf(\"Add 'relay' permission to whitelisted inbound peers with default permissions. The will accept relayed transactions even when not relaying transactions (default: %d)\", DEFAULT_WHITELISTRELAY), ArgsManager::ALLOW_ANY, OptionsCategory::NODE_RELAY);\n \n \n     gArgs.AddArg(\"-blockmaxweight=<n>\", strprintf(\"Set maximum BIP141 block weight (default: %d)\", DEFAULT_BLOCK_MAX_WEIGHT), ArgsManager::ALLOW_ANY, OptionsCategory::BLOCK_CREATION);\n@@ -676,20 +684,6 @@ static void ThreadImport(std::vector<fs::path> vImportFiles)\n         LoadGenesisBlock(chainparams);\n     }\n \n-    // hardcoded $DATADIR/bootstrap.dat\n-    fs::path pathBootstrap = GetDataDir() / \"bootstrap.dat\";\n-    if (fs::exists(pathBootstrap)) {\n-        FILE *file = fsbridge::fopen(pathBootstrap, \"rb\");\n-        if (file) {\n-            fs::path pathBootstrapOld = GetDataDir() / \"bootstrap.dat.old\";\n-            LogPrintf(\"Importing bootstrap.dat...\\n\");\n-            LoadExternalBlockFile(chainparams, file);\n-            RenameOver(pathBootstrap, pathBootstrapOld);\n-        } else {\n-            LogPrintf(\"Warning: Could not open bootstrap file %s\\n\", pathBootstrap.string());\n-        }\n-    }\n-\n     // -loadblock=\n     for (const fs::path& path : vImportFiles) {\n         FILE *file = fsbridge::fopen(path, \"rb\");\n@@ -702,7 +696,7 @@ static void ThreadImport(std::vector<fs::path> vImportFiles)\n     }\n \n     // scan for better chains in the block chain database, that are not yet connected in the active best chain\n-    CValidationState state;\n+    BlockValidationState state;\n     if (!ActivateBestChain(state, chainparams)) {\n         LogPrintf(\"Failed to connect best block (%s)\\n\", FormatStateMessage(state));\n         StartShutdown();\n@@ -821,11 +815,6 @@ void InitParameterInteraction()\n     }\n }\n \n-static std::string ResolveErrMsg(const char * const optname, const std::string& strBind)\n-{\n-    return strprintf(_(\"Cannot resolve -%s address: '%s'\").translated, optname, strBind);\n-}\n-\n /**\n  * Initialize global loggers.\n  *\n@@ -938,7 +927,7 @@ bool AppInitParameterInteraction()\n     }\n \n     if (!fs::is_directory(GetBlocksDir())) {\n-        return InitError(strprintf(_(\"Specified blocks directory \\\"%s\\\" does not exist.\").translated, gArgs.GetArg(\"-blocksdir\", \"\").c_str()));\n+        return InitError(strprintf(_(\"Specified blocks directory \\\"%s\\\" does not exist.\").translated, gArgs.GetArg(\"-blocksdir\", \"\")));\n     }\n \n     // parse and validate enabled filter types\n@@ -1054,19 +1043,10 @@ bool AppInitParameterInteraction()\n     {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-incrementalrelayfee\", \"\"), n))\n-            return InitError(AmountErrMsg(\"incrementalrelayfee\", gArgs.GetArg(\"-incrementalrelayfee\", \"\")));\n+            return InitError(AmountErrMsg(\"incrementalrelayfee\", gArgs.GetArg(\"-incrementalrelayfee\", \"\")).translated);\n         incrementalRelayFee = CFeeRate(n);\n     }\n \n-    // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n-    nScriptCheckThreads = gArgs.GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n-    if (nScriptCheckThreads <= 0)\n-        nScriptCheckThreads += GetNumCores();\n-    if (nScriptCheckThreads <= 1)\n-        nScriptCheckThreads = 0;\n-    else if (nScriptCheckThreads > MAX_SCRIPTCHECK_THREADS)\n-        nScriptCheckThreads = MAX_SCRIPTCHECK_THREADS;\n-\n     // block pruning; get the amount of disk space (in MiB) to allot for block & undo files\n     int64_t nPruneArg = gArgs.GetArg(\"-prune\", 0);\n     if (nPruneArg < 0) {\n@@ -1098,9 +1078,9 @@ bool AppInitParameterInteraction()\n     if (gArgs.IsArgSet(\"-minrelaytxfee\")) {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-minrelaytxfee\", \"\"), n)) {\n-            return InitError(AmountErrMsg(\"minrelaytxfee\", gArgs.GetArg(\"-minrelaytxfee\", \"\")));\n+            return InitError(AmountErrMsg(\"minrelaytxfee\", gArgs.GetArg(\"-minrelaytxfee\", \"\")).translated);\n         }\n-        // High fee check is done afterward in WalletParameterInteraction()\n+        // High fee check is done afterward in CWallet::CreateWalletFromFile()\n         ::minRelayTxFee = CFeeRate(n);\n     } else if (incrementalRelayFee > ::minRelayTxFee) {\n         // Allow only setting incrementalRelayFee to control both\n@@ -1114,7 +1094,7 @@ bool AppInitParameterInteraction()\n     {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-blockmintxfee\", \"\"), n))\n-            return InitError(AmountErrMsg(\"blockmintxfee\", gArgs.GetArg(\"-blockmintxfee\", \"\")));\n+            return InitError(AmountErrMsg(\"blockmintxfee\", gArgs.GetArg(\"-blockmintxfee\", \"\")).translated);\n     }\n \n     // Feerate used to define dust.  Shouldn't be changed lightly as old\n@@ -1123,7 +1103,7 @@ bool AppInitParameterInteraction()\n     {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-dustrelayfee\", \"\"), n))\n-            return InitError(AmountErrMsg(\"dustrelayfee\", gArgs.GetArg(\"-dustrelayfee\", \"\")));\n+            return InitError(AmountErrMsg(\"dustrelayfee\", gArgs.GetArg(\"-dustrelayfee\", \"\")).translated);\n         dustRelayFee = CFeeRate(n);\n     }\n \n@@ -1202,7 +1182,7 @@ bool AppInitLockDataDirectory()\n     return true;\n }\n \n-bool AppInitMain(InitInterfaces& interfaces)\n+bool AppInitMain(NodeContext& node)\n {\n     const CChainParams& chainparams = Params();\n     // ********************************************************* Step 4a: application initialization\n@@ -1253,10 +1233,25 @@ bool AppInitMain(InitInterfaces& interfaces)\n     InitSignatureCache();\n     InitScriptExecutionCache();\n \n-    LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n-    if (nScriptCheckThreads) {\n-        for (int i=0; i<nScriptCheckThreads-1; i++)\n+    int script_threads = gArgs.GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n+    if (script_threads <= 0) {\n+        // -par=0 means autodetect (number of cores - 1 script threads)\n+        // -par=-n means \"leave n cores free\" (number of cores - n - 1 script threads)\n+        script_threads += GetNumCores();\n+    }\n+\n+    // Subtract 1 because the main thread counts towards the par threads\n+    script_threads = std::max(script_threads - 1, 0);\n+\n+    // Number of script-checking threads <= MAX_SCRIPTCHECK_THREADS\n+    script_threads = std::min(script_threads, MAX_SCRIPTCHECK_THREADS);\n+\n+    LogPrintf(\"Script verification uses %d additional threads\\n\", script_threads);\n+    if (script_threads >= 1) {\n+        g_parallel_script_checks = true;\n+        for (int i = 0; i < script_threads; ++i) {\n             threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n+        }\n     }\n \n     // Start the lightweight task scheduler thread\n@@ -1270,16 +1265,16 @@ bool AppInitMain(InitInterfaces& interfaces)\n     // according to -wallet and -disablewallet options. This only constructs\n     // the interfaces, it doesn't load wallet data. Wallets actually get loaded\n     // when load() and start() interface methods are called below.\n-    g_wallet_init_interface.Construct(interfaces);\n+    g_wallet_init_interface.Construct(node);\n \n     /* Register RPC commands regardless of -server setting so they will be\n      * available in the GUI RPC console even if external calls are disabled.\n      */\n     RegisterAllCoreRPCCommands(tableRPC);\n-    for (const auto& client : interfaces.chain_clients) {\n+    for (const auto& client : node.chain_clients) {\n         client->registerRpcs();\n     }\n-    g_rpc_interfaces = &interfaces;\n+    g_rpc_node = &node;\n #if ENABLE_ZMQ\n     RegisterZMQRPCCommands(tableRPC);\n #endif\n@@ -1297,7 +1292,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n     }\n \n     // ********************************************************* Step 5: verify wallet database integrity\n-    for (const auto& client : interfaces.chain_clients) {\n+    for (const auto& client : node.chain_clients) {\n         if (!client->verify()) {\n             return false;\n         }\n@@ -1309,13 +1304,13 @@ bool AppInitMain(InitInterfaces& interfaces)\n     // is not yet setup and may end up being set up twice if we\n     // need to reindex later.\n \n-    assert(!g_banman);\n-    g_banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", &uiInterface, gArgs.GetArg(\"-bantime\", DEFAULT_MISBEHAVING_BANTIME));\n-    assert(!g_connman);\n-    g_connman = std::unique_ptr<CConnman>(new CConnman(GetRand(std::numeric_limits<uint64_t>::max()), GetRand(std::numeric_limits<uint64_t>::max())));\n+    assert(!node.banman);\n+    node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", &uiInterface, gArgs.GetArg(\"-bantime\", DEFAULT_MISBEHAVING_BANTIME));\n+    assert(!node.connman);\n+    node.connman = std::unique_ptr<CConnman>(new CConnman(GetRand(std::numeric_limits<uint64_t>::max()), GetRand(std::numeric_limits<uint64_t>::max())));\n \n-    peerLogic.reset(new PeerLogicValidation(g_connman.get(), g_banman.get(), scheduler, gArgs.GetBoolArg(\"-enablebip61\", DEFAULT_ENABLE_BIP61)));\n-    RegisterValidationInterface(peerLogic.get());\n+    node.peer_logic.reset(new PeerLogicValidation(node.connman.get(), node.banman.get(), scheduler));\n+    RegisterValidationInterface(node.peer_logic.get());\n \n     // sanitize comments per BIP-0014, format user agent and check total size\n     std::vector<std::string> uacomments;\n@@ -1466,10 +1461,10 @@ bool AppInitMain(InitInterfaces& interfaces)\n             bool is_coinsview_empty;\n             try {\n                 LOCK(cs_main);\n+                // This statement makes ::ChainstateActive() usable.\n+                g_chainstate = MakeUnique<CChainState>();\n                 UnloadBlockIndex();\n-                pcoinsTip.reset();\n-                pcoinsdbview.reset();\n-                pcoinscatcher.reset();\n+\n                 // new CBlockTreeDB tries to delete the existing file, which\n                 // fails if it's still open from the previous loop. Close it first:\n                 pblocktree.reset();\n@@ -1520,34 +1515,39 @@ bool AppInitMain(InitInterfaces& interfaces)\n                 // At this point we're either in reindex or we've loaded a useful\n                 // block tree into BlockIndex()!\n \n-                pcoinsdbview.reset(new CCoinsViewDB(nCoinDBCache, false, fReset || fReindexChainState));\n-                pcoinscatcher.reset(new CCoinsViewErrorCatcher(pcoinsdbview.get()));\n-                pcoinscatcher->AddReadErrCallback([]() {\n+                ::ChainstateActive().InitCoinsDB(\n+                    /* cache_size_bytes */ nCoinDBCache,\n+                    /* in_memory */ false,\n+                    /* should_wipe */ fReset || fReindexChainState);\n+\n+                ::ChainstateActive().CoinsErrorCatcher().AddReadErrCallback([]() {\n                     uiInterface.ThreadSafeMessageBox(\n                         _(\"Error reading from database, shutting down.\").translated,\n                         \"\", CClientUIInterface::MSG_ERROR);\n                 });\n \n                 // If necessary, upgrade from older database format.\n                 // This is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n-                if (!pcoinsdbview->Upgrade()) {\n+                if (!::ChainstateActive().CoinsDB().Upgrade()) {\n                     strLoadError = _(\"Error upgrading chainstate database\").translated;\n                     break;\n                 }\n \n                 // ReplayBlocks is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n-                if (!ReplayBlocks(chainparams, pcoinsdbview.get())) {\n+                if (!::ChainstateActive().ReplayBlocks(chainparams)) {\n                     strLoadError = _(\"Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.\").translated;\n                     break;\n                 }\n \n                 // The on-disk coinsdb is now in a good state, create the cache\n-                pcoinsTip.reset(new CCoinsViewCache(pcoinscatcher.get()));\n+                ::ChainstateActive().InitCoinsCache();\n+                assert(::ChainstateActive().CanFlushToDisk());\n \n-                is_coinsview_empty = fReset || fReindexChainState || pcoinsTip->GetBestBlock().IsNull();\n+                is_coinsview_empty = fReset || fReindexChainState ||\n+                    ::ChainstateActive().CoinsTip().GetBestBlock().IsNull();\n                 if (!is_coinsview_empty) {\n-                    // LoadChainTip sets ::ChainActive() based on pcoinsTip's best block\n-                    if (!LoadChainTip(chainparams)) {\n+                    // LoadChainTip initializes the chain based on CoinsTip()'s best block\n+                    if (!::ChainstateActive().LoadChainTip(chainparams)) {\n                         strLoadError = _(\"Error initializing block database\").translated;\n                         break;\n                     }\n@@ -1588,7 +1588,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n                         break;\n                     }\n \n-                    if (!CVerifyDB().VerifyDB(chainparams, pcoinsdbview.get(), gArgs.GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n+                    if (!CVerifyDB().VerifyDB(chainparams, &::ChainstateActive().CoinsDB(), gArgs.GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n                                   gArgs.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n                         strLoadError = _(\"Corrupted block database detected\").translated;\n                         break;\n@@ -1651,7 +1651,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n     }\n \n     // ********************************************************* Step 9: load wallet\n-    for (const auto& client : interfaces.chain_clients) {\n+    for (const auto& client : node.chain_clients) {\n         if (!client->load()) {\n             return false;\n         }\n@@ -1670,12 +1670,9 @@ bool AppInitMain(InitInterfaces& interfaces)\n         }\n     }\n \n-    if (chainparams.GetConsensus().vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout != 0) {\n-        // Only advertise witness capabilities if they have a reasonable start time.\n-        // This allows us to have the code merged without a defined softfork, by setting its\n-        // end time to 0.\n-        // Note that setting NODE_WITNESS is never required: the only downside from not\n-        // doing so is that after activation, no upgraded nodes will fetch from you.\n+    if (chainparams.GetConsensus().SegwitHeight != std::numeric_limits<int>::max()) {\n+        // Advertise witness capabilities.\n+        // The option to not set NODE_WITNESS is only used in the tests and should be removed.\n         nLocalServices = ServiceFlags(nLocalServices | NODE_WITNESS);\n     }\n \n@@ -1752,13 +1749,14 @@ bool AppInitMain(InitInterfaces& interfaces)\n     CConnman::Options connOptions;\n     connOptions.nLocalServices = nLocalServices;\n     connOptions.nMaxConnections = nMaxConnections;\n-    connOptions.nMaxOutbound = std::min(MAX_OUTBOUND_CONNECTIONS, connOptions.nMaxConnections);\n+    connOptions.m_max_outbound_full_relay = std::min(MAX_OUTBOUND_FULL_RELAY_CONNECTIONS, connOptions.nMaxConnections);\n+    connOptions.m_max_outbound_block_relay = std::min(MAX_BLOCKS_ONLY_CONNECTIONS, connOptions.nMaxConnections-connOptions.m_max_outbound_full_relay);\n     connOptions.nMaxAddnode = MAX_ADDNODE_CONNECTIONS;\n     connOptions.nMaxFeeler = 1;\n     connOptions.nBestHeight = chain_active_height;\n     connOptions.uiInterface = &uiInterface;\n-    connOptions.m_banman = g_banman.get();\n-    connOptions.m_msgproc = peerLogic.get();\n+    connOptions.m_banman = node.banman.get();\n+    connOptions.m_msgproc = node.peer_logic.get();\n     connOptions.nSendBufferMaxSize = 1000*gArgs.GetArg(\"-maxsendbuffer\", DEFAULT_MAXSENDBUFFER);\n     connOptions.nReceiveFloodSize = 1000*gArgs.GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER);\n     connOptions.m_added_nodes = gArgs.GetArgs(\"-addnode\");\n@@ -1777,21 +1775,16 @@ bool AppInitMain(InitInterfaces& interfaces)\n         connOptions.vBinds.push_back(addrBind);\n     }\n     for (const std::string& strBind : gArgs.GetArgs(\"-whitebind\")) {\n-        CService addrBind;\n-        if (!Lookup(strBind.c_str(), addrBind, 0, false)) {\n-            return InitError(ResolveErrMsg(\"whitebind\", strBind));\n-        }\n-        if (addrBind.GetPort() == 0) {\n-            return InitError(strprintf(_(\"Need to specify a port with -whitebind: '%s'\").translated, strBind));\n-        }\n-        connOptions.vWhiteBinds.push_back(addrBind);\n+        NetWhitebindPermissions whitebind;\n+        std::string error;\n+        if (!NetWhitebindPermissions::TryParse(strBind, whitebind, error)) return InitError(error);\n+        connOptions.vWhiteBinds.push_back(whitebind);\n     }\n \n     for (const auto& net : gArgs.GetArgs(\"-whitelist\")) {\n-        CSubNet subnet;\n-        LookupSubNet(net.c_str(), subnet);\n-        if (!subnet.IsValid())\n-            return InitError(strprintf(_(\"Invalid netmask specified in -whitelist: '%s'\").translated, net));\n+        NetWhitelistPermissions subnet;\n+        std::string error;\n+        if (!NetWhitelistPermissions::TryParse(net, subnet, error)) return InitError(error);\n         connOptions.vWhitelistedRange.push_back(subnet);\n     }\n \n@@ -1805,7 +1798,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n             connOptions.m_specified_outgoing = connect;\n         }\n     }\n-    if (!g_connman->Start(scheduler, connOptions)) {\n+    if (!node.connman->Start(scheduler, connOptions)) {\n         return false;\n     }\n \n@@ -1814,12 +1807,13 @@ bool AppInitMain(InitInterfaces& interfaces)\n     SetRPCWarmupFinished();\n     uiInterface.InitMessage(_(\"Done loading\").translated);\n \n-    for (const auto& client : interfaces.chain_clients) {\n+    for (const auto& client : node.chain_clients) {\n         client->start(scheduler);\n     }\n \n-    scheduler.scheduleEvery([]{\n-        g_banman->DumpBanlist();\n+    BanMan* banman = node.banman.get();\n+    scheduler.scheduleEvery([banman]{\n+        banman->DumpBanlist();\n     }, DUMP_BANS_INTERVAL * 1000);\n \n     return true;"
      },
      {
        "sha": "ca52dadf08a83e6a8df714b98a698728e4664ce0",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 5,
        "deletions": 17,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -10,26 +10,14 @@\n #include <string>\n #include <util/system.h>\n \n-namespace interfaces {\n-class Chain;\n-class ChainClient;\n-} // namespace interfaces\n-\n-//! Pointers to interfaces used during init and destroyed on shutdown.\n-struct InitInterfaces\n-{\n-    std::unique_ptr<interfaces::Chain> chain;\n-    std::vector<std::unique_ptr<interfaces::ChainClient>> chain_clients;\n-};\n-\n-namespace boost\n-{\n+struct NodeContext;\n+namespace boost {\n class thread_group;\n } // namespace boost\n \n /** Interrupt threads */\n-void Interrupt();\n-void Shutdown(InitInterfaces& interfaces);\n+void Interrupt(NodeContext& node);\n+void Shutdown(NodeContext& node);\n //!Initialize the logging infrastructure\n void InitLogging();\n //!Parameter interaction: change current parameters depending on various rules\n@@ -63,7 +51,7 @@ bool AppInitLockDataDirectory();\n  * @note This should only be done after daemonization. Call Shutdown() if this function fails.\n  * @pre Parameters should be parsed and config file should be read, AppInitLockDataDirectory should have been called.\n  */\n-bool AppInitMain(InitInterfaces& interfaces);\n+bool AppInitMain(NodeContext& node);\n \n /**\n  * Setup the arguments for gArgs"
      },
      {
        "sha": "26856a00d37828e7f3e8b1d310b45b322c5b7d0a",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 17,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -11,19 +11,18 @@\n #include <net.h>\n #include <net_processing.h>\n #include <node/coin.h>\n+#include <node/context.h>\n #include <node/transaction.h>\n #include <policy/fees.h>\n #include <policy/policy.h>\n #include <policy/rbf.h>\n #include <policy/settings.h>\n #include <primitives/block.h>\n #include <primitives/transaction.h>\n-#include <protocol.h>\n #include <rpc/protocol.h>\n #include <rpc/server.h>\n #include <shutdown.h>\n #include <sync.h>\n-#include <threadsafety.h>\n #include <timedata.h>\n #include <txmempool.h>\n #include <ui_interface.h>\n@@ -59,12 +58,6 @@ class LockImpl : public Chain::Lock, public UniqueLock<CCriticalSection>\n         }\n         return nullopt;\n     }\n-    int getBlockDepth(const uint256& hash) override\n-    {\n-        const Optional<int> tip_height = getHeight();\n-        const Optional<int> height = getBlockHeight(hash);\n-        return tip_height && height ? *tip_height - *height + 1 : 0;\n-    }\n     uint256 getBlockHash(int height) override\n     {\n         LockAssertion lock(::cs_main);\n@@ -183,11 +176,11 @@ class NotificationsHandlerImpl : public Handler, CValidationInterface\n         const CBlockIndex* index,\n         const std::vector<CTransactionRef>& tx_conflicted) override\n     {\n-        m_notifications->BlockConnected(*block, tx_conflicted);\n+        m_notifications->BlockConnected(*block, tx_conflicted, index->nHeight);\n     }\n-    void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* index) override\n     {\n-        m_notifications->BlockDisconnected(*block);\n+        m_notifications->BlockDisconnected(*block, index->nHeight);\n     }\n     void UpdatedBlockTip(const CBlockIndex* index, const CBlockIndex* fork_index, bool is_ibd) override\n     {\n@@ -240,6 +233,7 @@ class RpcHandlerImpl : public Handler\n class ChainImpl : public Chain\n {\n public:\n+    explicit ChainImpl(NodeContext& node) : m_node(node) {}\n     std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n     {\n         auto result = MakeUnique<LockImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n@@ -288,7 +282,7 @@ class ChainImpl : public Chain\n     }\n     bool broadcastTransaction(const CTransactionRef& tx, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n     {\n-        const TransactionError err = BroadcastTransaction(tx, err_string, max_tx_fee, relay, /*wait_callback*/ false);\n+        const TransactionError err = BroadcastTransaction(m_node, tx, err_string, max_tx_fee, relay, /*wait_callback*/ false);\n         // Chain clients only care about failures to accept the tx to the mempool. Disregard non-mempool related failures.\n         // Note: this will need to be updated if BroadcastTransactions() is updated to return other non-mempool failures\n         // that Chain clients do not need to know about.\n@@ -298,6 +292,11 @@ class ChainImpl : public Chain\n     {\n         ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n     }\n+    void getPackageLimits(unsigned int& limit_ancestor_count, unsigned int& limit_descendant_count) override\n+    {\n+        limit_ancestor_count = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        limit_descendant_count = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+    }\n     bool checkChainLimits(const CTransactionRef& tx) override\n     {\n         LockPoints lp;\n@@ -332,7 +331,6 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return ::fHavePruned;\n     }\n-    bool p2pEnabled() override { return g_connman != nullptr; }\n     bool isReadyToBroadcast() override { return !::fImporting && !::fReindex && !isInitialBlockDownload(); }\n     bool isInitialBlockDownload() override { return ::ChainstateActive().IsInitialBlockDownload(); }\n     bool shutdownRequested() override { return ShutdownRequested(); }\n@@ -349,13 +347,11 @@ class ChainImpl : public Chain\n     {\n         return MakeUnique<NotificationsHandlerImpl>(*this, notifications);\n     }\n-    void waitForNotificationsIfNewBlocksConnected(const uint256& old_tip) override\n+    void waitForNotificationsIfTipChanged(const uint256& old_tip) override\n     {\n         if (!old_tip.IsNull()) {\n             LOCK(::cs_main);\n             if (old_tip == ::ChainActive().Tip()->GetBlockHash()) return;\n-            CBlockIndex* block = LookupBlockIndex(old_tip);\n-            if (block && block->GetAncestor(::ChainActive().Height()) == ::ChainActive().Tip()) return;\n         }\n         SyncWithValidationInterfaceQueue();\n     }\n@@ -376,9 +372,10 @@ class ChainImpl : public Chain\n             notifications.TransactionAddedToMempool(entry.GetSharedTx());\n         }\n     }\n+    NodeContext& m_node;\n };\n } // namespace\n \n-std::unique_ptr<Chain> MakeChain() { return MakeUnique<ChainImpl>(); }\n+std::unique_ptr<Chain> MakeChain(NodeContext& node) { return MakeUnique<ChainImpl>(node); }\n \n } // namespace interfaces"
      },
      {
        "sha": "349af152d5c660997434824d85ec4d3c0e767f64",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 11,
        "deletions": 14,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -18,12 +18,12 @@ class CBlock;\n class CFeeRate;\n class CRPCCommand;\n class CScheduler;\n-class CValidationState;\n class Coin;\n class uint256;\n enum class RBFTransactionState;\n struct CBlockLocator;\n struct FeeCalculation;\n+struct NodeContext;\n \n namespace interfaces {\n \n@@ -76,10 +76,6 @@ class Chain\n         //! included in the current chain.\n         virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n \n-        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n-        //! so on. Returns 0 for a block not included in the current chain.\n-        virtual int getBlockDepth(const uint256& hash) = 0;\n-\n         //! Get block hash. Height must be valid or this function will abort.\n         virtual uint256 getBlockHash(int height) = 0;\n \n@@ -163,6 +159,11 @@ class Chain\n     //! Calculate mempool ancestor and descendant counts for the given transaction.\n     virtual void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) = 0;\n \n+    //! Get the node's package limits.\n+    //! Currently only returns the ancestor and descendant count limits, but could be enhanced to\n+    //! return more policy settings.\n+    virtual void getPackageLimits(unsigned int& limit_ancestor_count, unsigned int& limit_descendant_count) = 0;\n+\n     //! Check if transaction will pass the mempool's chain limits.\n     virtual bool checkChainLimits(const CTransactionRef& tx) = 0;\n \n@@ -187,9 +188,6 @@ class Chain\n     //! Check if any block has been pruned.\n     virtual bool havePruned() = 0;\n \n-    //! Check if p2p enabled.\n-    virtual bool p2pEnabled() = 0;\n-\n     //! Check if the node is ready to broadcast transactions.\n     virtual bool isReadyToBroadcast() = 0;\n \n@@ -224,8 +222,8 @@ class Chain\n         virtual ~Notifications() {}\n         virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n         virtual void TransactionRemovedFromMempool(const CTransactionRef& ptx) {}\n-        virtual void BlockConnected(const CBlock& block, const std::vector<CTransactionRef>& tx_conflicted) {}\n-        virtual void BlockDisconnected(const CBlock& block) {}\n+        virtual void BlockConnected(const CBlock& block, const std::vector<CTransactionRef>& tx_conflicted, int height) {}\n+        virtual void BlockDisconnected(const CBlock& block, int height) {}\n         virtual void UpdatedBlockTip() {}\n         virtual void ChainStateFlushed(const CBlockLocator& locator) {}\n     };\n@@ -234,9 +232,8 @@ class Chain\n     virtual std::unique_ptr<Handler> handleNotifications(Notifications& notifications) = 0;\n \n     //! Wait for pending notifications to be processed unless block hash points to the current\n-    //! chain tip, or to a possible descendant of the current chain tip that isn't currently\n-    //! connected.\n-    virtual void waitForNotificationsIfNewBlocksConnected(const uint256& old_tip) = 0;\n+    //! chain tip.\n+    virtual void waitForNotificationsIfTipChanged(const uint256& old_tip) = 0;\n \n     //! Register handler for RPC. Command is not copied, so reference\n     //! needs to remain valid until Handler is disconnected.\n@@ -289,7 +286,7 @@ class ChainClient\n };\n \n //! Return implementation of Chain interface.\n-std::unique_ptr<Chain> MakeChain();\n+std::unique_ptr<Chain> MakeChain(NodeContext& node);\n \n //! Return implementation of ChainClient interface for a wallet client. This\n //! function will be undefined in builds where ENABLE_WALLET is false."
      },
      {
        "sha": "1877c92178e770a5610eda8bc2f64b9b3bd815c2",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 31,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,7 +5,6 @@\n #include <interfaces/node.h>\n \n #include <addrdb.h>\n-#include <amount.h>\n #include <banman.h>\n #include <chain.h>\n #include <chainparams.h>\n@@ -17,13 +16,14 @@\n #include <net_processing.h>\n #include <netaddress.h>\n #include <netbase.h>\n+#include <node/context.h>\n #include <policy/feerate.h>\n #include <policy/fees.h>\n-#include <policy/policy.h>\n #include <policy/settings.h>\n #include <primitives/block.h>\n #include <rpc/server.h>\n #include <shutdown.h>\n+#include <support/allocators/secure.h>\n #include <sync.h>\n #include <txmempool.h>\n #include <ui_interface.h>\n@@ -35,14 +35,14 @@\n #include <config/bitcoin-config.h>\n #endif\n \n-#include <atomic>\n #include <univalue.h>\n \n class CWallet;\n fs::path GetWalletDir();\n std::vector<fs::path> ListWalletDir();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n-std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning);\n+std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::vector<std::string>& warnings);\n+WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::shared_ptr<CWallet>& result);\n \n namespace interfaces {\n \n@@ -53,13 +53,13 @@ namespace {\n class NodeImpl : public Node\n {\n public:\n-    NodeImpl() { m_interfaces.chain = MakeChain(); }\n     void initError(const std::string& message) override { InitError(message); }\n     bool parseParameters(int argc, const char* const argv[], std::string& error) override\n     {\n         return gArgs.ParseParameters(argc, argv, error);\n     }\n     bool readConfigFiles(std::string& error) override { return gArgs.ReadConfigFiles(error, true); }\n+    void forceSetArg(const std::string& arg, const std::string& value) override { gArgs.ForceSetArg(arg, value); }\n     bool softSetArg(const std::string& arg, const std::string& value) override { return gArgs.SoftSetArg(arg, value); }\n     bool softSetBoolArg(const std::string& arg, bool value) override { return gArgs.SoftSetBoolArg(arg, value); }\n     void selectParams(const std::string& network) override { SelectParams(network); }\n@@ -75,11 +75,15 @@ class NodeImpl : public Node\n         return AppInitBasicSetup() && AppInitParameterInteraction() && AppInitSanityChecks() &&\n                AppInitLockDataDirectory();\n     }\n-    bool appInitMain() override { return AppInitMain(m_interfaces); }\n+    bool appInitMain() override\n+    {\n+        m_context.chain = MakeChain(m_context);\n+        return AppInitMain(m_context);\n+    }\n     void appShutdown() override\n     {\n-        Interrupt();\n-        Shutdown(m_interfaces);\n+        Interrupt(m_context);\n+        Shutdown(m_context);\n     }\n     void startShutdown() override { StartShutdown(); }\n     bool shutdownRequested() override { return ShutdownRequested(); }\n@@ -96,15 +100,15 @@ class NodeImpl : public Node\n     bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n     size_t getNodeCount(CConnman::NumConnections flags) override\n     {\n-        return g_connman ? g_connman->GetNodeCount(flags) : 0;\n+        return m_context.connman ? m_context.connman->GetNodeCount(flags) : 0;\n     }\n     bool getNodesStats(NodesStats& stats) override\n     {\n         stats.clear();\n \n-        if (g_connman) {\n+        if (m_context.connman) {\n             std::vector<CNodeStats> stats_temp;\n-            g_connman->GetNodeStats(stats_temp);\n+            m_context.connman->GetNodeStats(stats_temp);\n \n             stats.reserve(stats_temp.size());\n             for (auto& node_stats_temp : stats_temp) {\n@@ -125,44 +129,44 @@ class NodeImpl : public Node\n     }\n     bool getBanned(banmap_t& banmap) override\n     {\n-        if (g_banman) {\n-            g_banman->GetBanned(banmap);\n+        if (m_context.banman) {\n+            m_context.banman->GetBanned(banmap);\n             return true;\n         }\n         return false;\n     }\n     bool ban(const CNetAddr& net_addr, BanReason reason, int64_t ban_time_offset) override\n     {\n-        if (g_banman) {\n-            g_banman->Ban(net_addr, reason, ban_time_offset);\n+        if (m_context.banman) {\n+            m_context.banman->Ban(net_addr, reason, ban_time_offset);\n             return true;\n         }\n         return false;\n     }\n     bool unban(const CSubNet& ip) override\n     {\n-        if (g_banman) {\n-            g_banman->Unban(ip);\n+        if (m_context.banman) {\n+            m_context.banman->Unban(ip);\n             return true;\n         }\n         return false;\n     }\n     bool disconnect(const CNetAddr& net_addr) override\n     {\n-        if (g_connman) {\n-            return g_connman->DisconnectNode(net_addr);\n+        if (m_context.connman) {\n+            return m_context.connman->DisconnectNode(net_addr);\n         }\n         return false;\n     }\n     bool disconnect(NodeId id) override\n     {\n-        if (g_connman) {\n-            return g_connman->DisconnectNode(id);\n+        if (m_context.connman) {\n+            return m_context.connman->DisconnectNode(id);\n         }\n         return false;\n     }\n-    int64_t getTotalBytesRecv() override { return g_connman ? g_connman->GetTotalBytesRecv() : 0; }\n-    int64_t getTotalBytesSent() override { return g_connman ? g_connman->GetTotalBytesSent() : 0; }\n+    int64_t getTotalBytesRecv() override { return m_context.connman ? m_context.connman->GetTotalBytesRecv() : 0; }\n+    int64_t getTotalBytesSent() override { return m_context.connman ? m_context.connman->GetTotalBytesSent() : 0; }\n     size_t getMempoolSize() override { return ::mempool.size(); }\n     size_t getMempoolDynamicUsage() override { return ::mempool.DynamicMemoryUsage(); }\n     bool getHeaderTip(int& height, int64_t& block_time) override\n@@ -202,11 +206,11 @@ class NodeImpl : public Node\n     bool getImporting() override { return ::fImporting; }\n     void setNetworkActive(bool active) override\n     {\n-        if (g_connman) {\n-            g_connman->SetNetworkActive(active);\n+        if (m_context.connman) {\n+            m_context.connman->SetNetworkActive(active);\n         }\n     }\n-    bool getNetworkActive() override { return g_connman && g_connman->GetNetworkActive(); }\n+    bool getNetworkActive() override { return m_context.connman && m_context.connman->GetNetworkActive(); }\n     CFeeRate estimateSmartFee(int num_blocks, bool conservative, int* returned_target = nullptr) override\n     {\n         FeeCalculation fee_calc;\n@@ -231,7 +235,7 @@ class NodeImpl : public Node\n     bool getUnspentOutput(const COutPoint& output, Coin& coin) override\n     {\n         LOCK(::cs_main);\n-        return ::pcoinsTip->GetCoin(output, coin);\n+        return ::ChainstateActive().CoinsTip().GetCoin(output, coin);\n     }\n     std::string getWalletDir() override\n     {\n@@ -253,9 +257,16 @@ class NodeImpl : public Node\n         }\n         return wallets;\n     }\n-    std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) override\n+    std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::vector<std::string>& warnings) override\n+    {\n+        return MakeWallet(LoadWallet(*m_context.chain, name, error, warnings));\n+    }\n+    WalletCreationStatus createWallet(const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::unique_ptr<Wallet>& result) override\n     {\n-        return MakeWallet(LoadWallet(*m_interfaces.chain, name, error, warning));\n+        std::shared_ptr<CWallet> wallet;\n+        WalletCreationStatus status = CreateWallet(*m_context.chain, passphrase, wallet_creation_flags, name, error, warnings, wallet);\n+        result = MakeWallet(wallet);\n+        return status;\n     }\n     std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) override\n     {\n@@ -305,10 +316,11 @@ class NodeImpl : public Node\n         return MakeHandler(\n             ::uiInterface.NotifyHeaderTip_connect([fn](bool initial_download, const CBlockIndex* block) {\n                 fn(initial_download, block->nHeight, block->GetBlockTime(),\n-                    GuessVerificationProgress(Params().TxData(), block));\n+                    /* verification progress is unused when a header was received */ 0);\n             }));\n     }\n-    InitInterfaces m_interfaces;\n+    NodeContext* context() override { return &m_context; }\n+    NodeContext m_context;\n };\n \n } // namespace"
      },
      {
        "sha": "adf3de7b07d91878bbd6e425be11e4f85f2fe020",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,10 +5,11 @@\n #ifndef BITCOIN_INTERFACES_NODE_H\n #define BITCOIN_INTERFACES_NODE_H\n \n-#include <addrdb.h>     // For banmap_t\n #include <amount.h>     // For CAmount\n #include <net.h>        // For CConnman::NumConnections\n+#include <net_types.h>  // For banmap_t\n #include <netaddress.h> // For Network\n+#include <support/allocators/secure.h> // For SecureString\n \n #include <functional>\n #include <memory>\n@@ -27,6 +28,8 @@ class RPCTimerInterface;\n class UniValue;\n class proxyType;\n struct CNodeStateStats;\n+struct NodeContext;\n+enum class WalletCreationStatus;\n \n namespace interfaces {\n class Handler;\n@@ -44,6 +47,9 @@ class Node\n     //! Set command line arguments.\n     virtual bool parseParameters(int argc, const char* const argv[], std::string& error) = 0;\n \n+    //! Set a command line argument\n+    virtual void forceSetArg(const std::string& arg, const std::string& value) = 0;\n+\n     //! Set a command line argument if it doesn't already have a value\n     virtual bool softSetArg(const std::string& arg, const std::string& value) = 0;\n \n@@ -195,7 +201,10 @@ class Node\n     //! Attempts to load a wallet from file or directory.\n     //! The loaded wallet is also notified to handlers previously registered\n     //! with handleLoadWallet.\n-    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::string& warning) = 0;\n+    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::vector<std::string>& warnings) = 0;\n+\n+    //! Create a wallet from file\n+    virtual WalletCreationStatus createWallet(const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::unique_ptr<Wallet>& result) = 0;\n \n     //! Register handler for init messages.\n     using InitMessageFn = std::function<void(const std::string& message)>;\n@@ -246,6 +255,9 @@ class Node\n     using NotifyHeaderTipFn =\n         std::function<void(bool initial_download, int height, int64_t block_time, double verification_progress)>;\n     virtual std::unique_ptr<Handler> handleNotifyHeaderTip(NotifyHeaderTipFn fn) = 0;\n+\n+    //! Return pointer to internal chain interface, useful for testing.\n+    virtual NodeContext* context() { return nullptr; }\n };\n \n //! Return implementation of Node interface."
      },
      {
        "sha": "701a748e55eb1200192c6b3953c8d8f266d4cb4d",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 44,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -5,10 +5,8 @@\n #include <interfaces/wallet.h>\n \n #include <amount.h>\n-#include <consensus/validation.h>\n #include <interfaces/chain.h>\n #include <interfaces/handler.h>\n-#include <policy/feerate.h>\n #include <policy/fees.h>\n #include <primitives/transaction.h>\n #include <script/standard.h>\n@@ -23,7 +21,6 @@\n #include <wallet/rpcwallet.h>\n #include <wallet/load.h>\n #include <wallet/wallet.h>\n-#include <wallet/walletutil.h>\n \n #include <memory>\n #include <string>\n@@ -34,7 +31,7 @@ namespace interfaces {\n namespace {\n \n //! Construct wallet tx struct.\n-WalletTx MakeWalletTx(interfaces::Chain::Lock& locked_chain, CWallet& wallet, const CWalletTx& wtx)\n+WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTx result;\n     result.tx = wtx.tx;\n@@ -49,10 +46,10 @@ WalletTx MakeWalletTx(interfaces::Chain::Lock& locked_chain, CWallet& wallet, co\n         result.txout_is_mine.emplace_back(wallet.IsMine(txout));\n         result.txout_address.emplace_back();\n         result.txout_address_is_mine.emplace_back(ExtractDestination(txout.scriptPubKey, result.txout_address.back()) ?\n-                                                      IsMine(wallet, result.txout_address.back()) :\n+                                                      wallet.IsMine(result.txout_address.back()) :\n                                                       ISMINE_NO);\n     }\n-    result.credit = wtx.GetCredit(locked_chain, ISMINE_ALL);\n+    result.credit = wtx.GetCredit(ISMINE_ALL);\n     result.debit = wtx.GetDebit(ISMINE_ALL);\n     result.change = wtx.GetChange();\n     result.time = wtx.GetTxTime();\n@@ -65,22 +62,21 @@ WalletTx MakeWalletTx(interfaces::Chain::Lock& locked_chain, CWallet& wallet, co\n WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n-    result.block_height = locked_chain.getBlockHeight(wtx.hashBlock).get_value_or(std::numeric_limits<int>::max());\n-    result.blocks_to_maturity = wtx.GetBlocksToMaturity(locked_chain);\n-    result.depth_in_main_chain = wtx.GetDepthInMainChain(locked_chain);\n+    result.block_height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock).get_value_or(std::numeric_limits<int>::max());\n+    result.blocks_to_maturity = wtx.GetBlocksToMaturity();\n+    result.depth_in_main_chain = wtx.GetDepthInMainChain();\n     result.time_received = wtx.nTimeReceived;\n     result.lock_time = wtx.tx->nLockTime;\n     result.is_final = locked_chain.checkFinalTx(*wtx.tx);\n     result.is_trusted = wtx.IsTrusted(locked_chain);\n     result.is_abandoned = wtx.isAbandoned();\n     result.is_coinbase = wtx.IsCoinBase();\n-    result.is_in_main_chain = wtx.IsInMainChain(locked_chain);\n+    result.is_in_main_chain = wtx.IsInMainChain();\n     return result;\n }\n \n //! Construct wallet TxOut struct.\n-WalletTxOut MakeWalletTxOut(interfaces::Chain::Lock& locked_chain,\n-    CWallet& wallet,\n+WalletTxOut MakeWalletTxOut(CWallet& wallet,\n     const CWalletTx& wtx,\n     int n,\n     int depth) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n@@ -89,7 +85,7 @@ WalletTxOut MakeWalletTxOut(interfaces::Chain::Lock& locked_chain,\n     result.txout = wtx.tx->vout[n];\n     result.time = wtx.GetTxTime();\n     result.depth_in_main_chain = depth;\n-    result.is_spent = wallet.IsSpent(locked_chain, wtx.GetHash(), n);\n+    result.is_spent = wallet.IsSpent(wtx.GetHash(), n);\n     return result;\n }\n \n@@ -120,10 +116,17 @@ class WalletImpl : public Wallet\n         std::string error;\n         return m_wallet->GetNewDestination(type, label, dest, error);\n     }\n-    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet->GetPubKey(address, pub_key); }\n-    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet->GetKey(address, key); }\n-    bool isSpendable(const CTxDestination& dest) override { return IsMine(*m_wallet, dest) & ISMINE_SPENDABLE; }\n-    bool haveWatchOnly() override { return m_wallet->HaveWatchOnly(); };\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet->GetLegacyScriptPubKeyMan()->GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet->GetLegacyScriptPubKeyMan()->GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return m_wallet->IsMine(dest) & ISMINE_SPENDABLE; }\n+    bool haveWatchOnly() override\n+    {\n+        auto spk_man = m_wallet->GetLegacyScriptPubKeyMan();\n+        if (spk_man) {\n+            return spk_man->HaveWatchOnly();\n+        }\n+        return false;\n+    };\n     bool setAddressBook(const CTxDestination& dest, const std::string& name, const std::string& purpose) override\n     {\n         return m_wallet->SetAddressBook(dest, name, purpose);\n@@ -146,7 +149,7 @@ class WalletImpl : public Wallet\n             *name = it->second.name;\n         }\n         if (is_mine) {\n-            *is_mine = IsMine(*m_wallet, dest);\n+            *is_mine = m_wallet->IsMine(dest);\n         }\n         if (purpose) {\n             *purpose = it->second.purpose;\n@@ -158,20 +161,22 @@ class WalletImpl : public Wallet\n         LOCK(m_wallet->cs_wallet);\n         std::vector<WalletAddress> result;\n         for (const auto& item : m_wallet->mapAddressBook) {\n-            result.emplace_back(item.first, IsMine(*m_wallet, item.first), item.second.name, item.second.purpose);\n+            result.emplace_back(item.first, m_wallet->IsMine(item.first), item.second.name, item.second.purpose);\n         }\n         return result;\n     }\n-    void learnRelatedScripts(const CPubKey& key, OutputType type) override { m_wallet->LearnRelatedScripts(key, type); }\n+    void learnRelatedScripts(const CPubKey& key, OutputType type) override { m_wallet->GetLegacyScriptPubKeyMan()->LearnRelatedScripts(key, type); }\n     bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) override\n     {\n         LOCK(m_wallet->cs_wallet);\n-        return m_wallet->AddDestData(dest, key, value);\n+        WalletBatch batch{m_wallet->GetDatabase()};\n+        return m_wallet->AddDestData(batch, dest, key, value);\n     }\n     bool eraseDestData(const CTxDestination& dest, const std::string& key) override\n     {\n         LOCK(m_wallet->cs_wallet);\n-        return m_wallet->EraseDestData(dest, key);\n+        WalletBatch batch{m_wallet->GetDatabase()};\n+        return m_wallet->EraseDestData(batch, dest, key);\n     }\n     std::vector<std::string> getDestValues(const std::string& prefix) override\n     {\n@@ -218,30 +223,24 @@ class WalletImpl : public Wallet\n         }\n         return tx;\n     }\n-    bool commitTransaction(CTransactionRef tx,\n+    void commitTransaction(CTransactionRef tx,\n         WalletValueMap value_map,\n-        WalletOrderForm order_form,\n-        std::string& reject_reason) override\n+        WalletOrderForm order_form) override\n     {\n         auto locked_chain = m_wallet->chain().lock();\n         LOCK(m_wallet->cs_wallet);\n-        CValidationState state;\n-        if (!m_wallet->CommitTransaction(std::move(tx), std::move(value_map), std::move(order_form), state)) {\n-            reject_reason = state.GetRejectReason();\n-            return false;\n-        }\n-        return true;\n+        m_wallet->CommitTransaction(std::move(tx), std::move(value_map), std::move(order_form));\n     }\n     bool transactionCanBeAbandoned(const uint256& txid) override { return m_wallet->TransactionCanBeAbandoned(txid); }\n     bool abandonTransaction(const uint256& txid) override\n     {\n         auto locked_chain = m_wallet->chain().lock();\n         LOCK(m_wallet->cs_wallet);\n-        return m_wallet->AbandonTransaction(*locked_chain, txid);\n+        return m_wallet->AbandonTransaction(txid);\n     }\n     bool transactionCanBeBumped(const uint256& txid) override\n     {\n-        return feebumper::TransactionCanBeBumped(m_wallet.get(), txid);\n+        return feebumper::TransactionCanBeBumped(*m_wallet.get(), txid);\n     }\n     bool createBumpTransaction(const uint256& txid,\n         const CCoinControl& coin_control,\n@@ -255,17 +254,17 @@ class WalletImpl : public Wallet\n             return feebumper::CreateTotalBumpTransaction(m_wallet.get(), txid, coin_control, total_fee, errors, old_fee, new_fee, mtx) ==\n                 feebumper::Result::OK;\n         } else {\n-            return feebumper::CreateRateBumpTransaction(m_wallet.get(), txid, coin_control, errors, old_fee, new_fee, mtx) ==\n+            return feebumper::CreateRateBumpTransaction(*m_wallet.get(), txid, coin_control, errors, old_fee, new_fee, mtx) ==\n                 feebumper::Result::OK;\n         }\n     }\n-    bool signBumpTransaction(CMutableTransaction& mtx) override { return feebumper::SignTransaction(m_wallet.get(), mtx); }\n+    bool signBumpTransaction(CMutableTransaction& mtx) override { return feebumper::SignTransaction(*m_wallet.get(), mtx); }\n     bool commitBumpTransaction(const uint256& txid,\n         CMutableTransaction&& mtx,\n         std::vector<std::string>& errors,\n         uint256& bumped_txid) override\n     {\n-        return feebumper::CommitTransaction(m_wallet.get(), txid, std::move(mtx), errors, bumped_txid) ==\n+        return feebumper::CommitTransaction(*m_wallet.get(), txid, std::move(mtx), errors, bumped_txid) ==\n                feebumper::Result::OK;\n     }\n     CTransactionRef getTx(const uint256& txid) override\n@@ -284,7 +283,7 @@ class WalletImpl : public Wallet\n         LOCK(m_wallet->cs_wallet);\n         auto mi = m_wallet->mapWallet.find(txid);\n         if (mi != m_wallet->mapWallet.end()) {\n-            return MakeWalletTx(*locked_chain, *m_wallet, mi->second);\n+            return MakeWalletTx(*m_wallet, mi->second);\n         }\n         return {};\n     }\n@@ -295,7 +294,7 @@ class WalletImpl : public Wallet\n         std::vector<WalletTx> result;\n         result.reserve(m_wallet->mapWallet.size());\n         for (const auto& entry : m_wallet->mapWallet) {\n-            result.emplace_back(MakeWalletTx(*locked_chain, *m_wallet, entry.second));\n+            result.emplace_back(MakeWalletTx(*m_wallet, entry.second));\n         }\n         return result;\n     }\n@@ -340,7 +339,7 @@ class WalletImpl : public Wallet\n             in_mempool = mi->second.InMempool();\n             order_form = mi->second.vOrderForm;\n             tx_status = MakeWalletTxStatus(*locked_chain, mi->second);\n-            return MakeWalletTx(*locked_chain, *m_wallet, mi->second);\n+            return MakeWalletTx(*m_wallet, mi->second);\n         }\n         return {};\n     }\n@@ -351,7 +350,7 @@ class WalletImpl : public Wallet\n         result.balance = bal.m_mine_trusted;\n         result.unconfirmed_balance = bal.m_mine_untrusted_pending;\n         result.immature_balance = bal.m_mine_immature;\n-        result.have_watch_only = m_wallet->HaveWatchOnly();\n+        result.have_watch_only = haveWatchOnly();\n         if (result.have_watch_only) {\n             result.watch_only_balance = bal.m_watchonly_trusted;\n             result.unconfirmed_watch_only_balance = bal.m_watchonly_untrusted_pending;\n@@ -409,7 +408,7 @@ class WalletImpl : public Wallet\n             auto& group = result[entry.first];\n             for (const auto& coin : entry.second) {\n                 group.emplace_back(COutPoint(coin.tx->GetHash(), coin.i),\n-                    MakeWalletTxOut(*locked_chain, *m_wallet, *coin.tx, coin.i, coin.nDepth));\n+                    MakeWalletTxOut(*m_wallet, *coin.tx, coin.i, coin.nDepth));\n             }\n         }\n         return result;\n@@ -424,9 +423,9 @@ class WalletImpl : public Wallet\n             result.emplace_back();\n             auto it = m_wallet->mapWallet.find(output.hash);\n             if (it != m_wallet->mapWallet.end()) {\n-                int depth = it->second.GetDepthInMainChain(*locked_chain);\n+                int depth = it->second.GetDepthInMainChain();\n                 if (depth >= 0) {\n-                    result.back() = MakeWalletTxOut(*locked_chain, *m_wallet, it->second, output.n, depth);\n+                    result.back() = MakeWalletTxOut(*m_wallet, it->second, output.n, depth);\n                 }\n             }\n         }\n@@ -498,7 +497,11 @@ class WalletClientImpl : public ChainClient\n         : m_chain(chain), m_wallet_filenames(std::move(wallet_filenames))\n     {\n     }\n-    void registerRpcs() override { return RegisterWalletRPCCommands(m_chain, m_rpc_handlers); }\n+    void registerRpcs() override\n+    {\n+        g_rpc_chain = &m_chain;\n+        return RegisterWalletRPCCommands(m_chain, m_rpc_handlers);\n+    }\n     bool verify() override { return VerifyWallets(m_chain, m_wallet_filenames); }\n     bool load() override { return LoadWallets(m_chain, m_wallet_filenames); }\n     void start(CScheduler& scheduler) override { return StartWallets(scheduler); }"
      },
      {
        "sha": "a96b93b4c3d75def89053ea4805e3071ea484827",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -141,10 +141,9 @@ class Wallet\n         std::string& fail_reason) = 0;\n \n     //! Commit transaction.\n-    virtual bool commitTransaction(CTransactionRef tx,\n+    virtual void commitTransaction(CTransactionRef tx,\n         WalletValueMap value_map,\n-        WalletOrderForm order_form,\n-        std::string& reject_reason) = 0;\n+        WalletOrderForm order_form) = 0;\n \n     //! Return whether transaction can be abandoned.\n     virtual bool transactionCanBeAbandoned(const uint256& txid) = 0;"
      },
      {
        "sha": "6a86b0411df44e9c9c8854bf21343e85d38efa6d",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -162,25 +162,6 @@ struct CExtKey {\n     bool Derive(CExtKey& out, unsigned int nChild) const;\n     CExtPubKey Neuter() const;\n     void SetSeed(const unsigned char* seed, unsigned int nSeedLen);\n-    template <typename Stream>\n-    void Serialize(Stream& s) const\n-    {\n-        unsigned int len = BIP32_EXTKEY_SIZE;\n-        ::WriteCompactSize(s, len);\n-        unsigned char code[BIP32_EXTKEY_SIZE];\n-        Encode(code);\n-        s.write((const char *)&code[0], len);\n-    }\n-    template <typename Stream>\n-    void Unserialize(Stream& s)\n-    {\n-        unsigned int len = ::ReadCompactSize(s);\n-        unsigned char code[BIP32_EXTKEY_SIZE];\n-        if (len != BIP32_EXTKEY_SIZE)\n-            throw std::runtime_error(\"Invalid extended key size\\n\");\n-        s.read((char *)&code[0], len);\n-        Decode(code);\n-    }\n };\n \n /** Initialize the elliptic curve support. May not be called twice without calling ECC_Stop first. */"
      },
      {
        "sha": "363055d6b3813547a759b8d4767fa4bb3d749b71",
        "filename": "src/key_io.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/key_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/key_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -6,7 +6,6 @@\n \n #include <base58.h>\n #include <bech32.h>\n-#include <script/script.h>\n #include <util/strencodings.h>\n \n #include <boost/variant/apply_visitor.hpp>"
      },
      {
        "sha": "9f6b5ede12ec791340a166784bb42f41ba45b1a1",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 3,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -67,6 +67,9 @@ bool BCLog::Logger::StartLogging()\n \n         if (m_print_to_file) FileWriteStr(s, m_fileout);\n         if (m_print_to_console) fwrite(s.data(), 1, s.size(), stdout);\n+        for (const auto& cb : m_print_callbacks) {\n+            cb(s);\n+        }\n \n         m_msgs_before_open.pop_front();\n     }\n@@ -81,6 +84,7 @@ void BCLog::Logger::DisconnectTestLogger()\n     m_buffering = true;\n     if (m_fileout != nullptr) fclose(m_fileout);\n     m_fileout = nullptr;\n+    m_print_callbacks.clear();\n }\n \n void BCLog::Logger::EnableCategory(BCLog::LogFlags flag)\n@@ -91,7 +95,15 @@ void BCLog::Logger::EnableCategory(BCLog::LogFlags flag)\n bool BCLog::Logger::EnableCategory(const std::string& str)\n {\n     BCLog::LogFlags flag;\n-    if (!GetLogCategory(flag, str)) return false;\n+    if (!GetLogCategory(flag, str)) {\n+        if (str == \"db\") {\n+            // DEPRECATION: Added in 0.20, should start returning an error in 0.21\n+            LogPrintf(\"Warning: logging category 'db' is deprecated, use 'walletdb' instead\\n\");\n+            EnableCategory(BCLog::WALLETDB);\n+            return true;\n+        }\n+        return false;\n+    }\n     EnableCategory(flag);\n     return true;\n }\n@@ -135,7 +147,7 @@ const CLogCategoryDesc LogCategories[] =\n     {BCLog::HTTP, \"http\"},\n     {BCLog::BENCH, \"bench\"},\n     {BCLog::ZMQ, \"zmq\"},\n-    {BCLog::DB, \"db\"},\n+    {BCLog::WALLETDB, \"walletdb\"},\n     {BCLog::RPC, \"rpc\"},\n     {BCLog::ESTIMATEFEE, \"estimatefee\"},\n     {BCLog::ADDRMAN, \"addrman\"},\n@@ -224,10 +236,32 @@ std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n     return strStamped;\n }\n \n+namespace BCLog {\n+    /** Belts and suspenders: make sure outgoing log messages don't contain\n+     * potentially suspicious characters, such as terminal control codes.\n+     *\n+     * This escapes control characters except newline ('\\n') in C syntax.\n+     * It escapes instead of removes them to still allow for troubleshooting\n+     * issues where they accidentally end up in strings.\n+     */\n+    std::string LogEscapeMessage(const std::string& str) {\n+        std::string ret;\n+        for (char ch_in : str) {\n+            uint8_t ch = (uint8_t)ch_in;\n+            if ((ch >= 32 || ch == '\\n') && ch != '\\x7f') {\n+                ret += ch_in;\n+            } else {\n+                ret += strprintf(\"\\\\x%02x\", ch);\n+            }\n+        }\n+        return ret;\n+    }\n+}\n+\n void BCLog::Logger::LogPrintStr(const std::string& str)\n {\n     std::lock_guard<std::mutex> scoped_lock(m_cs);\n-    std::string str_prefixed = str;\n+    std::string str_prefixed = LogEscapeMessage(str);\n \n     if (m_log_threadnames && m_started_new_line) {\n         str_prefixed.insert(0, \"[\" + util::ThreadGetInternalName() + \"] \");\n@@ -248,6 +282,9 @@ void BCLog::Logger::LogPrintStr(const std::string& str)\n         fwrite(str_prefixed.data(), 1, str_prefixed.size(), stdout);\n         fflush(stdout);\n     }\n+    for (const auto& cb : m_print_callbacks) {\n+        cb(str_prefixed);\n+    }\n     if (m_print_to_file) {\n         assert(m_fileout != nullptr);\n "
      },
      {
        "sha": "a2caef51a862d1c5130cfb6dfd9b4c6e8e2e8a22",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 28,
        "deletions": 9,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -39,7 +39,7 @@ namespace BCLog {\n         HTTP        = (1 <<  3),\n         BENCH       = (1 <<  4),\n         ZMQ         = (1 <<  5),\n-        DB          = (1 <<  6),\n+        WALLETDB    = (1 <<  6),\n         RPC         = (1 <<  7),\n         ESTIMATEFEE = (1 <<  8),\n         ADDRMAN     = (1 <<  9),\n@@ -77,6 +77,9 @@ namespace BCLog {\n \n         std::string LogTimestampStr(const std::string& str);\n \n+        /** Slots that connect to the print signal */\n+        std::list<std::function<void(const std::string&)>> m_print_callbacks /* GUARDED_BY(m_cs) */ {};\n+\n     public:\n         bool m_print_to_console = false;\n         bool m_print_to_file = false;\n@@ -95,7 +98,22 @@ namespace BCLog {\n         bool Enabled() const\n         {\n             std::lock_guard<std::mutex> scoped_lock(m_cs);\n-            return m_buffering || m_print_to_console || m_print_to_file;\n+            return m_buffering || m_print_to_console || m_print_to_file || !m_print_callbacks.empty();\n+        }\n+\n+        /** Connect a slot to the print signal and return the connection */\n+        std::list<std::function<void(const std::string&)>>::iterator PushBackCallback(std::function<void(const std::string&)> fun)\n+        {\n+            std::lock_guard<std::mutex> scoped_lock(m_cs);\n+            m_print_callbacks.push_back(std::move(fun));\n+            return --m_print_callbacks.end();\n+        }\n+\n+        /** Delete a connection */\n+        void DeleteCallback(std::list<std::function<void(const std::string&)>>::iterator it)\n+        {\n+            std::lock_guard<std::mutex> scoped_lock(m_cs);\n+            m_print_callbacks.erase(it);\n         }\n \n         /** Start logging (and flush all buffered messages) */\n@@ -155,12 +173,13 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n     }\n }\n \n-template <typename... Args>\n-static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n-{\n-    if (LogAcceptCategory((category))) {\n-        LogPrintf(args...);\n-    }\n-}\n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging for the category is not enabled.\n+#define LogPrint(category, ...)              \\\n+    do {                                     \\\n+        if (LogAcceptCategory((category))) { \\\n+            LogPrintf(__VA_ARGS__);          \\\n+        }                                    \\\n+    } while (0)\n \n #endif // BITCOIN_LOGGING_H"
      },
      {
        "sha": "34dbb942c5a03b9fb5cad1f96ba22ba89672f06c",
        "filename": "src/logging/timer.h",
        "status": "added",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/logging/timer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/logging/timer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging/timer.h?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -0,0 +1,104 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_LOGGING_TIMER_H\n+#define BITCOIN_LOGGING_TIMER_H\n+\n+#include <logging.h>\n+#include <util/macros.h>\n+#include <util/time.h>\n+\n+#include <chrono>\n+#include <string>\n+\n+\n+namespace BCLog {\n+\n+//! RAII-style object that outputs timing information to logs.\n+template <typename TimeType>\n+class Timer\n+{\n+public:\n+    //! If log_category is left as the default, end_msg will log unconditionally\n+    //! (instead of being filtered by category).\n+    Timer(\n+        std::string prefix,\n+        std::string end_msg,\n+        BCLog::LogFlags log_category = BCLog::LogFlags::ALL) :\n+            m_prefix(std::move(prefix)),\n+            m_title(std::move(end_msg)),\n+            m_log_category(log_category)\n+    {\n+        this->Log(strprintf(\"%s started\", m_title));\n+        m_start_t = GetTime<std::chrono::microseconds>();\n+    }\n+\n+    ~Timer()\n+    {\n+        this->Log(strprintf(\"%s completed\", m_title));\n+    }\n+\n+    void Log(const std::string& msg)\n+    {\n+        const std::string full_msg = this->LogMsg(msg);\n+\n+        if (m_log_category == BCLog::LogFlags::ALL) {\n+            LogPrintf(\"%s\\n\", full_msg);\n+        } else {\n+            LogPrint(m_log_category, \"%s\\n\", full_msg);\n+        }\n+    }\n+\n+    std::string LogMsg(const std::string& msg)\n+    {\n+        const auto end_time = GetTime<std::chrono::microseconds>() - m_start_t;\n+        if (m_start_t.count() <= 0) {\n+            return strprintf(\"%s: %s\", m_prefix, msg);\n+        }\n+\n+        std::string units = \"\";\n+        float divisor = 1;\n+\n+        if (std::is_same<TimeType, std::chrono::microseconds>::value) {\n+            units = \"\u03bcs\";\n+        } else if (std::is_same<TimeType, std::chrono::milliseconds>::value) {\n+            units = \"ms\";\n+            divisor = 1000.;\n+        } else if (std::is_same<TimeType, std::chrono::seconds>::value) {\n+            units = \"s\";\n+            divisor = 1000. * 1000.;\n+        }\n+\n+        const float time_ms = end_time.count() / divisor;\n+        return strprintf(\"%s: %s (%.2f%s)\", m_prefix, msg, time_ms, units);\n+    }\n+\n+private:\n+    std::chrono::microseconds m_start_t{};\n+\n+    //! Log prefix; usually the name of the function this was created in.\n+    const std::string m_prefix{};\n+\n+    //! A descriptive message of what is being timed.\n+    const std::string m_title{};\n+\n+    //! Forwarded on to LogPrint if specified - has the effect of only\n+    //! outputing the timing log when a particular debug= category is specified.\n+    const BCLog::LogFlags m_log_category{};\n+\n+};\n+\n+} // namespace BCLog\n+\n+\n+#define LOG_TIME_MICROS(end_msg, ...) \\\n+    BCLog::Timer<std::chrono::microseconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\n+#define LOG_TIME_MILLIS(end_msg, ...) \\\n+    BCLog::Timer<std::chrono::milliseconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\n+#define LOG_TIME_SECONDS(end_msg, ...) \\\n+    BCLog::Timer<std::chrono::seconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\n+\n+\n+#endif // BITCOIN_LOGGING_TIMER_H"
      },
      {
        "sha": "1c9174ee0725b01eb63c6b5eb3741ca8821c6e09",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -17,14 +17,12 @@\n #include <policy/policy.h>\n #include <pow.h>\n #include <primitives/transaction.h>\n-#include <script/standard.h>\n #include <timedata.h>\n #include <util/moneystr.h>\n #include <util/system.h>\n #include <util/validation.h>\n \n #include <algorithm>\n-#include <queue>\n #include <utility>\n \n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n@@ -164,7 +162,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     pblock->nNonce         = 0;\n     pblocktemplate->vTxSigOpsCost[0] = WITNESS_SCALE_FACTOR * GetLegacySigOpCount(*pblock->vtx[0]);\n \n-    CValidationState state;\n+    BlockValidationState state;\n     if (!TestBlockValidity(state, chainparams, *pblock, pindexPrev, false, false)) {\n         throw std::runtime_error(strprintf(\"%s: TestBlockValidity failed: %s\", __func__, FormatStateMessage(state)));\n     }"
      },
      {
        "sha": "cd23fdb47443ba574d7a2b23f2ea54150bccf549",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 187,
        "deletions": 117,
        "changes": 304,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1",
        "patch": "@@ -13,10 +13,9 @@\n #include <chainparams.h>\n #include <clientversion.h>\n #include <consensus/consensus.h>\n-#include <crypto/common.h>\n #include <crypto/sha256.h>\n #include <netbase.h>\n-#include <primitives/transaction.h>\n+#include <net_permissions.h>\n #include <scheduler.h>\n #include <ui_interface.h>\n #include <util/strencodings.h>\n@@ -34,7 +33,6 @@\n \n #ifdef USE_UPNP\n #include <miniupnpc/miniupnpc.h>\n-#include <miniupnpc/miniwget.h>\n #include <miniupnpc/upnpcommands.h>\n #include <miniupnpc/upnperrors.h>\n // The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n@@ -49,6 +47,9 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n // Dump addresses to peers.dat every 15 minutes (900s)\n static constexpr int DUMP_PEERS_INTERVAL = 15 * 60;\n \n+/** Number of DNS seeds to query when the number of connections is low. */\n+static constexpr int DNSSEEDS_TO_QUERY_AT_ONCE = 3;\n+\n // We add a random period time (0 to 1 seconds) to feeler connections to prevent synchronization.\n #define FEELER_SLEEP_WINDOW 1\n \n@@ -67,7 +68,6 @@ enum BindFlags {\n     BF_NONE         = 0,\n     BF_EXPLICIT     = (1U << 0),\n     BF_REPORT_ERROR = (1U << 1),\n-    BF_WHITELIST    = (1U << 2),\n };\n \n // The set of sockets cannot be modified while waiting\n@@ -348,7 +348,7 @@ static CAddress GetBindAddress(SOCKET sock)\n     return addr_bind;\n }\n \n-CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool manual_connection)\n+CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool manual_connection, bool block_relay_only)\n {\n     if (pszDest == nullptr) {\n         if (IsLocal(addrConnect))\n@@ -438,7 +438,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n     NodeId id = GetNewNodeId();\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n     CAddress addr_bind = GetBindAddress(hSocket);\n-    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", false);\n+    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", false, block_relay_only);\n     pnode->AddRef();\n \n     return pnode;\n@@ -455,12 +455,10 @@ void CNode::CloseSocketDisconnect()\n     }\n }\n \n-bool CConnman::IsWhitelistedRange(const CNetAddr &addr) {\n-    for (const CSubNet& subnet : vWhitelistedRange) {\n-        if (subnet.Match(addr))\n-            return true;\n+void CConnman::AddWhitelistPermissionFlags(NetPermissionFlags& flags, const CNetAddr &addr) const {\n+    for (const auto& subnet : vWhitelistedRange) {\n+        if (subnet.m_subnet.Match(addr)) NetPermissions::AddFlag(flags, subnet.m_flags);\n     }\n-    return false;\n }\n \n std::string CNode::GetAddrName() const {\n@@ -497,9 +495,11 @@ void CNode::copyStats(CNodeStats &stats)\n     X(nServices);\n     X(addr);\n     X(addrBind);\n-    {\n-        LOCK(cs_filter);\n-        X(fRelayTxes);\n+    if (m_tx_relay != nullptr) {\n+        LOCK(m_tx_relay->cs_filter);\n+        stats.fRelayTxes = m_tx_relay->fRelayTxes;\n+    } else {\n+        stats.fRelayTxes = false;\n     }\n     X(nLastSend);\n     X(nLastRecv);\n@@ -524,10 +524,13 @@ void CNode::copyStats(CNodeStats &stats)\n         X(mapRecvBytesPerMsgCmd);\n         X(nRecvBytes);\n     }\n-    X(fWhitelisted);\n-    {\n-        LOCK(cs_feeFilter);\n-        X(minFeeFilter);\n+    X(m_legacyWhitelisted);\n+    X(m_permissionFlags);\n+    if (m_tx_relay != nullptr) {\n+        LOCK(m_tx_relay->cs_feeFilter);\n+        stats.minFeeFilter = m_tx_relay->minFeeFilter;\n+    } else {\n+        stats.minFeeFilter = 0;\n     }\n \n     // It is common for nodes with good ping times to suddenly become lagged,\n@@ -560,42 +563,28 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n     while (nBytes > 0) {\n-\n-        // get current incomplete message, or create a new one\n-        if (vRecvMsg.empty() ||\n-            vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n-\n-        CNetMessage& msg = vRecvMsg.back();\n-\n         // absorb network data\n-        int handled;\n-        if (!msg.in_data)\n-            handled = msg.readHeader(pch, nBytes);\n-        else\n-            handled = msg.readData(pch, nBytes);\n-\n-        if (handled < 0)\n-            return false;\n-\n-        if (msg.in_data && msg.hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n-            LogPrint(BCLog::NET, \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n-            return false;\n-        }\n+        int handled = m_deserializer->Read(pch, nBytes);\n+        if (handled < 0) return false;\n \n         pch += handled;\n         nBytes -= handled;\n \n-        if (msg.complete()) {\n+        if (m_deserializer->Complete()) {\n+            // decompose a transport agnostic CNetMessage from the deserializer\n+            CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), nTimeMicros);\n+\n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.hdr.pchCommand);\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.m_command);\n             if (i == mapRecvBytesPerMsgCmd.end())\n                 i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n             assert(i != mapRecvBytesPerMsgCmd.end());\n-            i->second += msg.hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+            i->second += msg.m_raw_message_size;\n+\n+            // push the message to the process queue,\n+            vRecvMsg.push_back(std::move(msg));\n \n-            msg.nTime = nTimeMicros;\n             complete = true;\n         }\n     }\n@@ -629,8 +618,7 @@ int CNode::GetSendVersion() const\n     return nSendVersion;\n }\n \n-\n-int CNetMessage::readHeader(const char *pch, unsigned int nBytes)\n+int V1TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n {\n     // copy data to temporary parsing buffer\n     unsigned int nRemaining = 24 - nHdrPos;\n@@ -651,17 +639,18 @@ int CNetMessage::readHeader(const char *pch, unsigned int nBytes)\n         return -1;\n     }\n \n-    // reject messages larger than MAX_SIZE\n-    if (hdr.nMessageSize > MAX_SIZE)\n+    // reject messages larger than MAX_SIZE or MAX_PROTOCOL_MESSAGE_LENGTH\n+    if (hdr.nMessageSize > MAX_SIZE || hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n         return -1;\n+    }\n \n     // switch state to reading message data\n     in_data = true;\n \n     return nCopy;\n }\n \n-int CNetMessage::readData(const char *pch, unsigned int nBytes)\n+int V1TransportDeserializer::readData(const char *pch, unsigned int nBytes)\n {\n     unsigned int nRemaining = hdr.nMessageSize - nDataPos;\n     unsigned int nCopy = std::min(nRemaining, nBytes);\n@@ -678,14 +667,44 @@ int CNetMessage::readData(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-const uint256& CNetMessage::GetMessageHash() const\n+const uint256& V1TransportDeserializer::GetMessageHash() const\n {\n-    assert(complete());\n+    assert(Complete());\n     if (data_hash.IsNull())\n         hasher.Finalize(data_hash.begin());\n     return data_hash;\n }\n \n+CNetMessage V1TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    CNetMessage msg(std::move(vRecv));\n+\n+    // store state about valid header, netmagic and checksum\n+    msg.m_valid_header = hdr.IsValid(message_start);\n+    msg.m_valid_netmagic = (memcmp(hdr.pchMessageStart, message_start, CMessageHeader::MESSAGE_START_SIZE) == 0);\n+    uint256 hash = GetMessageHash();\n+\n+    // store command string, payload size\n+    msg.m_command = hdr.GetCommand();\n+    msg.m_message_size = hdr.nMessageSize;\n+    msg.m_raw_message_size = hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+\n+    msg.m_valid_checksum = (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) == 0);\n+    if (!msg.m_valid_checksum) {\n+        LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s\\n\",\n+                 SanitizeString(msg.m_command), msg.m_message_size,\n+                 HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n+                 HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n+    }\n+\n+    // store receive time\n+    msg.m_time = time;\n+\n+    // reset the network deserializer (prepare for the next message)\n+    Reset();\n+    return msg;\n+}\n+\n size_t CConnman::SocketSendData(CNode *pnode) const EXCLUSIVE_LOCKS_REQUIRED(pnode->cs_vSend)\n {\n     auto it = pnode->vSendMsg.begin();\n@@ -809,17 +828,23 @@ bool CConnman::AttemptToEvictConnection()\n         LOCK(cs_vNodes);\n \n         for (const CNode* node : vNodes) {\n-            if (node->fWhitelisted)\n+            if (node->HasPermission(PF_NOBAN))\n                 continue;\n             if (!node->fInbound)\n                 continue;\n             if (node->fDisconnect)\n                 continue;\n-            LOCK(node->cs_filter);\n+            bool peer_relay_txes = false;\n+            bool peer_filter_not_null = false;\n+            if (node->m_tx_relay != nullptr) {\n+                LOCK(node->m_tx_relay->cs_filter);\n+                peer_relay_txes = node->m_tx_relay->fRelayTxes;\n+                peer_filter_not_null = node->m_tx_relay->pfilter != nullptr;\n+            }\n             NodeEvictionCandidate candidate = {node->GetId(), node->nTimeConnected, node->nMinPingUsecTime,\n                                                node->nLastBlockTime, node->nLastTXTime,\n                                                HasAllDesirableServiceFlags(node->nServices),\n-                                               node->fRelayTxes, node->pfilter != nullptr, node->addr, node->nKeyedNetGroup,\n+                                               peer_relay_txes, peer_filter_not_null, node->addr, node->nKeyedNetGroup,\n                                                node->m_prefer_evict};\n             vEvictionCandidates.push_back(candidate);\n         }\n@@ -892,15 +917,27 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n     CAddress addr;\n     int nInbound = 0;\n-    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler);\n+    int nMaxInbound = nMaxConnections - m_max_outbound;\n \n     if (hSocket != INVALID_SOCKET) {\n         if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr)) {\n             LogPrintf(\"Warning: Unknown socket family\\n\");\n         }\n     }\n \n-    bool whitelisted = hListenSocket.whitelisted || IsWhitelistedRange(addr);\n+    NetPermissionFlags permissionFlags = NetPermissionFlags::PF_NONE;\n+    hListenSocket.AddSocketPermissionFlags(permissionFlags);\n+    AddWhitelistPermissionFlags(permissionFlags, addr);\n+    bool legacyWhitelisted = false;\n+    if (NetPermissions::HasFlag(permissionFlags, NetPermissionFlags::PF_ISIMPLICIT)) {\n+        NetPermissions::ClearFlag(permissionFlags, PF_ISIMPLICIT);\n+        if (gArgs.GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) NetPermissions::AddFlag(permissionFlags, PF_FORCERELAY);\n+        if (gArgs.GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY)) NetPermissions::AddFlag(permissionFlags, PF_RELAY);\n+        NetPermissions::AddFlag(permissionFlags, PF_MEMPOOL);\n+        NetPermissions::AddFlag(permissionFlags, PF_NOBAN);\n+        legacyWhitelisted = true;\n+    }\n+\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n@@ -937,7 +974,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n \n     // Don't accept connections from banned peers, but if our inbound slots aren't almost full, accept\n     // if the only banning reason was an automatic misbehavior ban.\n-    if (!whitelisted && bannedlevel > ((nInbound + 1 < nMaxInbound) ? 1 : 0))\n+    if (!NetPermissions::HasFlag(permissionFlags, NetPermissionFlags::PF_NOBAN) && bannedlevel > ((nInbound + 1 < nMaxInbound) ? 1 : 0))\n     {\n         LogPrint(BCLog::NET, \"connection from %s dropped (banned)\\n\", addr.ToString());\n         CloseSocket(hSocket);\n@@ -958,9 +995,15 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n     CAddress addr_bind = GetBindAddress(hSocket);\n \n-    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addr, CalculateKeyedNetGroup(addr), nonce, addr_bind, \"\", true);\n+    ServiceFlags nodeServices = nLocalServices;\n+    if (NetPermissions::HasFlag(permissionFlags, PF_BLOOMFILTER)) {\n+        nodeServices = static_cast<ServiceFlags>(nodeServices | NODE_BLOOM);\n+    }\n+    CNode* pnode = new CNode(id, nodeServices, GetBestHeight(), hSocket, addr, CalculateKeyedNetGroup(addr), nonce, addr_bind, \"\", true);\n     pnode->AddRef();\n-    pnode->fWhitelisted = whitelisted;\n+    pnode->m_permissionFlags = permissionFlags;\n+    // If this flag is present, the user probably expect that RPC and QT report it as whitelisted (backward compatibility)\n+    pnode->m_legacyWhitelisted = legacyWhitelisted;\n     pnode->m_prefer_evict = bannedlevel > 0;\n     m_msgproc->InitializeNode(pnode);\n \n@@ -1313,9 +1356,9 @@ void CConnman::SocketHandler()\n                     size_t nSizeAdded = 0;\n                     auto it(pnode->vRecvMsg.begin());\n                     for (; it != pnode->vRecvMsg.end(); ++it) {\n-                        if (!it->complete())\n-                            break;\n-                        nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n+                        // vRecvMsg contains only completed CNetMessage\n+                        // the single possible partially deserialized message are held by TransportDeserializer\n+                        nSizeAdded += it->m_raw_message_size;\n                     }\n                     {\n                         LOCK(pnode->cs_vProcessMsg);\n@@ -1330,7 +1373,7 @@ void CConnman::SocketHandler()\n             {\n                 // socket closed gracefully\n                 if (!pnode->fDisconnect) {\n-                    LogPrint(BCLog::NET, \"socket closed\\n\");\n+                    LogPrint(BCLog::NET, \"socket closed for peer=%d\\n\", pnode->GetId());\n                 }\n                 pnode->CloseSocketDisconnect();\n             }\n@@ -1340,8 +1383,9 @@ void CConnman::SocketHandler()\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                 {\n-                    if (!pnode->fDisconnect)\n-                        LogPrintf(\"socket recv error %s\\n\", NetworkErrorString(nErr));\n+                    if (!pnode->fDisconnect) {\n+                        LogPrint(BCLog::NET, \"socket recv error for peer=%d: %s\\n\", pnode->GetId(), NetworkErrorString(nErr));\n+                    }\n                     pnode->CloseSocketDisconnect();\n                 }\n             }\n@@ -1428,8 +1472,13 @@ static void ThreadMapPort()\n                 if (externalIPAddress[0]) {\n                     CNetAddr resolved;\n                     if (LookupHost(externalIPAddress, resolved, false)) {\n+<<<<<<< HEAD\n                         LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString().c_str());\n                         AddLocal(resolved, f_discover, LOCAL_UPNP);\n+=======\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_UPNP);\n+>>>>>>> 80fdb6fad132166b10fbeb8615e3c5c591209e0b\n                     }\n                 } else {\n                     LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n@@ -1506,35 +1555,41 @@ void StopMapPort()\n \n void CConnman::ThreadDNSAddressSeed()\n {\n-    // goal: only query DNS seeds if address need is acute\n-    // Avoiding DNS seeds when we don't need them improves user privacy by\n-    //  creating fewer identifying DNS requests, reduces trust by giving seeds\n-    //  less influence on the network topology, and reduces traffic to the seeds.\n-    if ((addrman.size() > 0) &&\n-        (!gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED))) {\n-        if (!interruptNet.sleep_for(std::chrono::seconds(11)))\n-            return;\n+    FastRandomContext rng;\n+    std::vector<std::string> seeds = Params().DNSSeeds();\n+    Shuffle(seeds.begin(), seeds.end(), rng);\n+    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n+    int found = 0;\n \n-        LOCK(cs_vNodes);\n-        int nRelevant = 0;\n-        for (const CNode* pnode : vNodes) {\n-            nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-        }\n-        if (nRelevant >= 2) {\n-            LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-            return;\n-        }\n+    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n+        // When -forcednsseed is provided, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n-    const std::vector<std::string> &vSeeds = Params().DNSSeeds();\n-    int found = 0;\n+    for (const std::string& seed : seeds) {\n+        // goal: only query DNS seed if address need is acute\n+        // Avoiding DNS seeds when we don't need them improves user privacy by\n+        // creating fewer identifying DNS requests, reduces trust by giving seeds\n+        // less influence on the network topology, and reduces traffic to the seeds.\n+        if (addrman.size() > 0 && seeds_right_now == 0) {\n+            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n \n-    LogPrintf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n+            LOCK(cs_vNodes);\n+            int nRelevant = 0;\n+            for (const CNode* pnode : vNodes) {\n+                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n+            }\n+            if (nRelevant >= 2) {\n+                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                return;\n+            }\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n+        }\n \n-    for (const std::string &seed : vSeeds) {\n         if (interruptNet) {\n             return;\n         }\n+        LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n         if (HaveNameProxy()) {\n             AddOneShot(seed);\n         } else {\n@@ -1547,13 +1602,11 @@ void CConnman::ThreadDNSAddressSeed()\n                 continue;\n             }\n             unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n-            if (LookupHost(host.c_str(), vIPs, nMaxIPs, true))\n-            {\n-                for (const CNetAddr& ip : vIPs)\n-                {\n+            if (LookupHost(host.c_str(), vIPs, nMaxIPs, true)) {\n+                for (const CNetAddr& ip : vIPs) {\n                     int nOneDay = 24*3600;\n                     CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - GetRand(4*nOneDay); // use a random age between 3 and 7 days old\n+                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n                     vAdd.push_back(addr);\n                     found++;\n                 }\n@@ -1564,8 +1617,8 @@ void CConnman::ThreadDNSAddressSeed()\n                 AddOneShot(seed);\n             }\n         }\n+        --seeds_right_now;\n     }\n-\n     LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n }\n \n@@ -1636,7 +1689,7 @@ int CConnman::GetExtraOutboundCount()\n             }\n         }\n     }\n-    return std::max(nOutbound - nMaxOutbound, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n }\n \n void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n@@ -1696,7 +1749,8 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         CAddress addrConnect;\n \n         // Only connect out to one peer per network group (/16 for IPv4).\n-        int nOutbound = 0;\n+        int nOutboundFullRelay = 0;\n+        int nOutboundBlockRelay = 0;\n         std::set<std::vector<unsigned char> > setConnected;\n         {\n             LOCK(cs_vNodes);\n@@ -1708,7 +1762,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                     // also have the added issue that they're attacker controlled and could be used\n                     // to prevent us from connecting to particular hosts if we used them here.\n                     setConnected.insert(pnode->addr.GetGroup());\n-                    nOutbound++;\n+                    if (pnode->m_tx_relay == nullptr) {\n+                        nOutboundBlockRelay++;\n+                    } else if (!pnode->fFeeler) {\n+                        nOutboundFullRelay++;\n+                    }\n                 }\n             }\n         }\n@@ -1727,7 +1785,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //\n         bool fFeeler = false;\n \n-        if (nOutbound >= nMaxOutbound && !GetTryNewOutboundPeer()) {\n+        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n             int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n             if (nTime > nNextFeeler) {\n                 nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n@@ -1801,7 +1859,14 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 LogPrint(BCLog::NET, \"Making feeler connection to %s\\n\", addrConnect.ToString());\n             }\n \n-            OpenNetworkConnection(addrConnect, (int)setConnected.size() >= std::min(nMaxConnections - 1, 2), &grant, nullptr, false, fFeeler);\n+            // Open this connection as block-relay-only if we're already at our\n+            // full-relay capacity, but not yet at our block-relay peer limit.\n+            // (It should not be possible for fFeeler to be set if we're not\n+            // also at our block-relay peer limit, but check against that as\n+            // well for sanity.)\n+            bool block_relay_only = nOutboundBlockRelay < m_max_outbound_block_relay && !fFeeler && nOutboundFullRelay >= m_max_outbound_full_relay;\n+\n+            OpenNetworkConnection(addrConnect, (int)setConnected.size() >= std::min(nMaxConnections - 1, 2), &grant, nullptr, false, fFeeler, false, block_relay_only);\n         }\n     }\n }\n@@ -1888,7 +1953,7 @@ void CConnman::ThreadOpenAddedConnections()\n }\n \n // if successful, this moves the passed grant to the constructed node\n-void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound, const char *pszDest, bool fOneShot, bool fFeeler, bool manual_connection)\n+void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound, const char *pszDest, bool fOneShot, bool fFeeler, bool manual_connection, bool block_relay_only)\n {\n     //\n     // Initiate outbound network connection\n@@ -1907,7 +1972,7 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n     } else if (FindNode(std::string(pszDest)))\n         return;\n \n-    CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure, manual_connection);\n+    CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure, manual_connection, block_relay_only);\n \n     if (!pnode)\n         return;\n@@ -1981,7 +2046,7 @@ void CConnman::ThreadMessageHandler()\n \n \n \n-bool CConnman::BindListenPort(const CService &addrBind, std::string& strError, bool fWhitelisted)\n+bool CConnman::BindListenPort(const CService& addrBind, std::string& strError, NetPermissionFlags permissions)\n {\n     strError = \"\";\n     int nOne = 1;\n@@ -2042,11 +2107,10 @@ bool CConnman::BindListenPort(const CService &addrBind, std::string& strError, b\n         return false;\n     }\n \n-    vhListenSocket.push_back(ListenSocket(hListenSocket, fWhitelisted));\n+    vhListenSocket.push_back(ListenSocket(hListenSocket, permissions));\n \n-    if (addrBind.IsRoutable() && m_f_discover && !fWhitelisted)\n+    if (addrBind.IsRoutable() && m_f_discover && (permissions & PF_NOBAN) == 0)\n         AddLocal(addrBind, m_f_discover, LOCAL_BIND);\n-\n     return true;\n }\n \n@@ -2130,11 +2194,11 @@ NodeId CConnman::GetNewNodeId()\n }\n \n \n-bool CConnman::Bind(const CService &addr, unsigned int flags) {\n+bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags permissions) {\n     if (!(flags & BF_EXPLICIT) && !IsReachable(addr))\n         return false;\n     std::string strError;\n-    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n+    if (!BindListenPort(addr, strError, permissions)) {\n         if ((flags & BF_REPORT_ERROR) && clientInterface) {\n             clientInterface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n         }\n@@ -2143,20 +2207,21 @@ bool CConnman::Bind(const CService &addr, unsigned int flags) {\n     return true;\n }\n \n-bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<CService>& whiteBinds) {\n+bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<NetWhitebindPermissions>& whiteBinds)\n+{\n     bool fBound = false;\n     for (const auto& addrBind : binds) {\n-        fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR));\n+        fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR), NetPermissionFlags::PF_NONE);\n     }\n     for (const auto& addrBind : whiteBinds) {\n-        fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR | BF_WHITELIST));\n+        fBound |= Bind(addrBind.m_service, (BF_EXPLICIT | BF_REPORT_ERROR), addrBind.m_flags);\n     }\n     if (binds.empty() && whiteBinds.empty()) {\n         struct in_addr inaddr_any;\n         inaddr_any.s_addr = INADDR_ANY;\n         struct in6_addr inaddr6_any = IN6ADDR_ANY_INIT;\n-        fBound |= Bind(CService(inaddr6_any, GetListenPort()), BF_NONE);\n-        fBound |= Bind(CService(inaddr_any, GetListenPort()), !fBound ? BF_REPORT_ERROR : BF_NONE);\n+        fBound |= Bind(CService(inaddr6_any, GetListenPort()), BF_NONE, NetPermissionFlags::PF_NONE);\n+        fBound |= Bind(CService(inaddr_any, GetListenPort()), !fBound ? BF_REPORT_ERROR : BF_NONE, NetPermissionFlags::PF_NONE);\n     }\n     return fBound;\n }\n@@ -2211,7 +2276,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n \n     if (semOutbound == nullptr) {\n         // initialize semaphore\n-        semOutbound = MakeUnique<CSemaphore>(std::min((nMaxOutbound + nMaxFeeler), nMaxConnections));\n+        semOutbound = MakeUnique<CSemaphore>(std::min(m_max_outbound, nMaxConnections));\n     }\n     if (semAddnode == nullptr) {\n         // initialize semaphore\n@@ -2289,7 +2354,7 @@ void CConnman::Interrupt()\n     InterruptSocks5(true);\n \n     if (semOutbound) {\n-        for (int i=0; i<(nMaxOutbound + nMaxFeeler); i++) {\n+        for (int i=0; i<m_max_outbound; i++) {\n             semOutbound->post();\n         }\n     }\n@@ -2599,14 +2664,16 @@ int CConnman::GetBestHeight() const\n \n unsigned int CConnman::GetReceiveFloodSize() const { return nReceiveFloodSize; }\n \n-CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, bool fInboundIn)\n+CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, bool fInboundIn, bool block_relay_only)\n     : nTimeConnected(GetSystemTimeInSeconds()),\n     addr(addrIn),\n     addrBind(addrBindIn),\n     fInbound(fInboundIn),\n     nKeyedNetGroup(nKeyedNetGroupIn),\n-    addrKnown(5000, 0.001),\n-    filterInventoryKnown(50000, 0.000001),\n+    // Don't relay addr messages to peers that we connect to as block-relay-only\n+    // peers (to prevent adversaries from inferring these links from addr\n+    // traffic).\n+    m_addr_known{block_relay_only ? nullptr : MakeUnique<CRollingBloomFilter>(5000, 0.001)},\n     id(idIn),\n     nLocalHostNonce(nLocalHostNonceIn),\n     nLocalServices(nLocalServicesIn),\n@@ -2615,8 +2682,9 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     hSocket = hSocketIn;\n     addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;\n     hashContinue = uint256();\n-    filterInventoryKnown.reset();\n-    pfilter = MakeUnique<CBloomFilter>();\n+    if (!block_relay_only) {\n+        m_tx_relay = MakeUnique<TxRelay>();\n+    }\n \n     for (const std::string &msg : getAllNetMessageTypes())\n         mapRecvBytesPerMsgCmd[msg] = 0;\n@@ -2627,6 +2695,8 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     } else {\n         LogPrint(BCLog::NET, \"Added connection peer=%d\\n\", id);\n     }\n+\n+    m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n }\n \n CNode::~CNode()\n@@ -2643,7 +2713,7 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     size_t nMessageSize = msg.data.size();\n     size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n-    LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n+    LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command), nMessageSize, pnode->GetId());\n \n     std::vector<unsigned char> serializedHeader;\n     serializedHeader.reserve(CMessageHeader::HEADER_SIZE);"
      },
      {
        "sha": "fa5885ee9eeba883d10e9d2a241eee837e4825dd",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "ef6c40ce207ad6140e3233214fcd831b38f49e77",
        "filename": "src/net_permissions.cpp",
        "status": "added",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/net_permissions.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/net_permissions.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "b3987de65f75c22ea11d29aadd04522a066d8769",
        "filename": "src/net_permissions.h",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/net_permissions.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/net_permissions.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "8fbd5276782fc945aa785ed2b074ec4ea8b48fcb",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 371,
        "deletions": 355,
        "changes": 726,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "4adb7d3a2151a33257d8660d27671a14b11941a7",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "d55a8cde6c07117e2da85309c3c9daccb59fe4ce",
        "filename": "src/net_types.h",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/net_types.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/net_types.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_types.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "fbb155333842315656f8a480ce8a65e82f89d2e2",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "d1cde8c40ff09aca4c59fafb12fc003f00a30f8b",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "313a575687edab611b332b73fc265cec8ad8448c",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "ad8d1d3af44d61729d2b6af568de80b7ea628a14",
        "filename": "src/node/coin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/node/coin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/node/coin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coin.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "a818f06d51bfeaa6543fb352ada059e850919711",
        "filename": "src/node/coinstats.cpp",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "a19af0fd1b2f625b72eeb8a5a2d9877903debd01",
        "filename": "src/node/coinstats.h",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/node/coinstats.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/node/coinstats.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "26a01420c86adbccea2dfaa67aa50d8711aefda1",
        "filename": "src/node/context.cpp",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/node/context.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/node/context.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "2b124af4db6d24b912c95a97e50b7653afc55aa6",
        "filename": "src/node/context.h",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/node/context.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/node/context.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "3c0df2b26edbf80a1119885d6025c01289edf44d",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 14,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "35873d83765a6e52aef357482793f21ffb26e2ce",
        "filename": "src/node/transaction.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/node/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/node/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "702a0cbe5364649a4a9f11b39b24d94b490438ee",
        "filename": "src/node/utxo_snapshot.h",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/node/utxo_snapshot.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/node/utxo_snapshot.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/utxo_snapshot.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "a5b7a2d591a32111af75ca74fa5f24a1c5817152",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "621e9c2798245b0f028c0f80b6ae2fb5c60eb800",
        "filename": "src/noui.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/noui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/noui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "d6b7ef32c8478a48c3994dcadc86837f4371184d",
        "filename": "src/obj-test/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/src/obj-test/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/src/obj-test/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/obj-test/.gitignore?ref=485b429c40f8005002006087153304eef80fc057"
      },
      {
        "sha": "d6b7ef32c8478a48c3994dcadc86837f4371184d",
        "filename": "src/obj/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485b429c40f8005002006087153304eef80fc057/src/obj/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485b429c40f8005002006087153304eef80fc057/src/obj/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/obj/.gitignore?ref=485b429c40f8005002006087153304eef80fc057"
      },
      {
        "sha": "5cc43898a71c3cb278eb1b22e941bbae5e1cf960",
        "filename": "src/outputtype.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/outputtype.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/outputtype.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/outputtype.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "d081f2ce8ee76a3b78ce149bd1153f6b63031342",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "a66e4464db387a349b950da1d9ce7a69283e5826",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "d307495fbe5f1c2731de90999e83bcb622242636",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "0c84ed6da22eee77493224a189ba83d140ea2c0b",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "e49e5523aca0019dc07dd6e942f688945f7e0169",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "3032310fa15a5e308cf141c9b1d459afb966ee15",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "c306079b1e23d012b7ea5dc49eb03fb016f6f006",
        "filename": "src/psbt.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.cpp?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "6a5c468058ace0311a8a15d41fd03346443b1588",
        "filename": "src/psbt.h",
        "status": "modified",
        "additions": 20,
        "deletions": 12,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/psbt.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/psbt.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      },
      {
        "sha": "fd815a871b5077839d59fa81619cd0088df9a278",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ad22d081d113103c31584a275d832f827615cb1/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ad22d081d113103c31584a275d832f827615cb1/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=6ad22d081d113103c31584a275d832f827615cb1"
      }
    ]
  },
  {
    "sha": "3cd4afa7a3c668b8d8ae6ad38a1f13bfdafbd0d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2Q0YWZhN2EzYzY2OGI4ZDhhZTZhZDM4YTFmMTNiZmRhZmJkMGQy",
    "commit": {
      "author": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2019-11-13T00:23:01Z"
      },
      "committer": {
        "name": "mmachicao",
        "email": "mmachicao@m19r.de",
        "date": "2019-11-13T00:23:01Z"
      },
      "message": "resolved PR #16548 merge conflicts",
      "tree": {
        "sha": "8d13b4ef4b88f7a4546bfbfd3a715cca935d0955",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d13b4ef4b88f7a4546bfbfd3a715cca935d0955"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cd4afa7a3c668b8d8ae6ad38a1f13bfdafbd0d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cd4afa7a3c668b8d8ae6ad38a1f13bfdafbd0d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3cd4afa7a3c668b8d8ae6ad38a1f13bfdafbd0d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cd4afa7a3c668b8d8ae6ad38a1f13bfdafbd0d2/comments",
    "author": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ad22d081d113103c31584a275d832f827615cb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ad22d081d113103c31584a275d832f827615cb1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ad22d081d113103c31584a275d832f827615cb1"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 1,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e49d290d9328d9292800588d7000e6a87b1c7e4a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd4afa7a3c668b8d8ae6ad38a1f13bfdafbd0d2/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd4afa7a3c668b8d8ae6ad38a1f13bfdafbd0d2/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=3cd4afa7a3c668b8d8ae6ad38a1f13bfdafbd0d2",
        "patch": "@@ -1472,13 +1472,8 @@ static void ThreadMapPort()\n                 if (externalIPAddress[0]) {\n                     CNetAddr resolved;\n                     if (LookupHost(externalIPAddress, resolved, false)) {\n-<<<<<<< HEAD\n-                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString().c_str());\n-                        AddLocal(resolved, f_discover, LOCAL_UPNP);\n-=======\n                         LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n-                        AddLocal(resolved, LOCAL_UPNP);\n->>>>>>> 80fdb6fad132166b10fbeb8615e3c5c591209e0b\n+                        AddLocal(resolved, f_discover, LOCAL_UPNP);\n                     }\n                 } else {\n                     LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");"
      }
    ]
  }
]