[
  {
    "sha": "e5b3874e9c755d64eb93074b72f18955e5cc43ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWIzODc0ZTljNzU1ZDY0ZWI5MzA3NGI3MmYxODk1NWU1Y2M0M2Vm",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-07-30T20:57:54Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-07-31T14:39:45Z"
      },
      "message": "GetFee should round up to avoid undershooting feerate",
      "tree": {
        "sha": "bdbbcd8b6de432a127caa392522735008daf81a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdbbcd8b6de432a127caa392522735008daf81a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5b3874e9c755d64eb93074b72f18955e5cc43ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5b3874e9c755d64eb93074b72f18955e5cc43ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5b3874e9c755d64eb93074b72f18955e5cc43ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5b3874e9c755d64eb93074b72f18955e5cc43ef/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fcc4025c1255bec81eb724c6af289fec25ac03a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcc4025c1255bec81eb724c6af289fec25ac03a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fcc4025c1255bec81eb724c6af289fec25ac03a2"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "2dbb07ba7a6698badfbd77f9ef71a9636dbffb37",
        "filename": "src/policy/feerate.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5b3874e9c755d64eb93074b72f18955e5cc43ef/src/policy/feerate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5b3874e9c755d64eb93074b72f18955e5cc43ef/src/policy/feerate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.cpp?ref=e5b3874e9c755d64eb93074b72f18955e5cc43ef",
        "patch": "@@ -25,7 +25,9 @@ CAmount CFeeRate::GetFee(size_t nBytes_) const\n     assert(nBytes_ <= uint64_t(std::numeric_limits<int64_t>::max()));\n     int64_t nSize = int64_t(nBytes_);\n \n-    CAmount nFee = nSatoshisPerK * nSize / 1000;\n+    // Round up to make sure we hit required feerate\n+    const int nSatoshisPerK_sign = nSatoshisPerK < 0 ? -1 : 1;\n+    CAmount nFee = nSatoshisPerK_sign * (nSatoshisPerK * nSatoshisPerK_sign * nSize + 999) / 1000;\n \n     if (nFee == 0 && nSize != 0) {\n         if (nSatoshisPerK > 0)"
      },
      {
        "sha": "a81f5728a598bc6203d39c41518c5d266548eab6",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5b3874e9c755d64eb93074b72f18955e5cc43ef/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5b3874e9c755d64eb93074b72f18955e5cc43ef/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=e5b3874e9c755d64eb93074b72f18955e5cc43ef",
        "patch": "@@ -50,18 +50,18 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     // Truncates the result, if not integer\n     BOOST_CHECK_EQUAL(feeRate.GetFee(0), CAmount(0));\n     BOOST_CHECK_EQUAL(feeRate.GetFee(8), CAmount(1)); // Special case: returns 1 instead of 0\n-    BOOST_CHECK_EQUAL(feeRate.GetFee(9), CAmount(1));\n-    BOOST_CHECK_EQUAL(feeRate.GetFee(121), CAmount(14));\n-    BOOST_CHECK_EQUAL(feeRate.GetFee(122), CAmount(15));\n-    BOOST_CHECK_EQUAL(feeRate.GetFee(999), CAmount(122));\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(9), CAmount(2));\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(121), CAmount(15));\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(122), CAmount(16));\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(999), CAmount(123));\n     BOOST_CHECK_EQUAL(feeRate.GetFee(1e3), CAmount(123));\n     BOOST_CHECK_EQUAL(feeRate.GetFee(9e3), CAmount(1107));\n \n     feeRate = CFeeRate(-123);\n     // Truncates the result, if not integer\n     BOOST_CHECK_EQUAL(feeRate.GetFee(0), CAmount(0));\n     BOOST_CHECK_EQUAL(feeRate.GetFee(8), CAmount(-1)); // Special case: returns -1 instead of 0\n-    BOOST_CHECK_EQUAL(feeRate.GetFee(9), CAmount(-1));\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(9), CAmount(-2));\n \n     // check alternate constructor\n     feeRate = CFeeRate(1000);"
      }
    ]
  }
]