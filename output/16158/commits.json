[
  {
    "sha": "cac30a436cab3641bba3b774d3d3ddbc426e7908",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWMzMGE0MzZjYWIzNjQxYmJhM2I3NzRkM2QzZGRiYzQyNmU3OTA4",
    "commit": {
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2019-06-05T20:43:28Z"
      },
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2019-06-06T09:49:11Z"
      },
      "message": "Clean up logic in memory_cleanse() for MSVC\n\nCommit fbf327b13868861c2877c5754caf5a9816f2603c (\"Minimal code\nchanges to allow msvc compilation.\") was indeed minimal in terms\nof lines touched. But as a result of that minimalism it changed the\nlogic in memory_cleanse() to first call std::memset() and then\nadditionally the MSVC-specific SecureZeroMemory() function, and it\nalso moved a comment to the wrong location.\n\nThis commit removes the superfluous call to std::memset() on MSVC\nand ensures that the comment is in the right position again.",
      "tree": {
        "sha": "9aaee7a038f9753f347f8ad843efcf96d355f85b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9aaee7a038f9753f347f8ad843efcf96d355f85b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cac30a436cab3641bba3b774d3d3ddbc426e7908",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cac30a436cab3641bba3b774d3d3ddbc426e7908",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cac30a436cab3641bba3b774d3d3ddbc426e7908",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cac30a436cab3641bba3b774d3d3ddbc426e7908/comments",
    "author": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following{/other_user}",
      "gists_url": "https://api.github.com/users/real-or-random/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events{/privacy}",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following{/other_user}",
      "gists_url": "https://api.github.com/users/real-or-random/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events{/privacy}",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "52ec4c64e89f478cd2134dbf25f5987d39e9b8bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52ec4c64e89f478cd2134dbf25f5987d39e9b8bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/52ec4c64e89f478cd2134dbf25f5987d39e9b8bc"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f895e96568c849bfe9222b79d77773b857095dd0",
        "filename": "src/support/cleanse.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cac30a436cab3641bba3b774d3d3ddbc426e7908/src/support/cleanse.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cac30a436cab3641bba3b774d3d3ddbc426e7908/src/support/cleanse.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/cleanse.cpp?ref=cac30a436cab3641bba3b774d3d3ddbc426e7908",
        "patch": "@@ -30,14 +30,14 @@\n  */\n void memory_cleanse(void *ptr, size_t len)\n {\n+#if defined(_MSC_VER)\n+    SecureZeroMemory(ptr, len);\n+#else\n     std::memset(ptr, 0, len);\n \n     /* As best as we can tell, this is sufficient to break any optimisations that\n        might try to eliminate \"superfluous\" memsets. If there's an easy way to\n        detect memset_s, it would be better to use that. */\n-#if defined(_MSC_VER)\n-    SecureZeroMemory(ptr, len);\n-#else\n     __asm__ __volatile__(\"\" : : \"r\"(ptr) : \"memory\");\n #endif\n }"
      }
    ]
  },
  {
    "sha": "f53a70ce95231d34bb14cd6c58503927e8d7ff59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTNhNzBjZTk1MjMxZDM0YmIxNGNkNmM1ODUwMzkyN2U4ZDdmZjU5",
    "commit": {
      "author": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2019-06-05T20:44:04Z"
      },
      "committer": {
        "name": "Tim Ruffing",
        "email": "crypto@timruffing.de",
        "date": "2019-07-01T10:59:44Z"
      },
      "message": "Improve documentation of memory_cleanse()\n\nSo far, the documentation of memory_cleanse() is a verbatim copy of\nthe commit message in BoringSSL, where this code was originally\nwritten. However, our code evolved since then, and the commit message\nis not particularly helpful in the code but is rather of historical\ninterested in BoringSSL only.\n\nThis commit improves improves the comments around memory_cleanse()\nand gives a better rationale for the method that we use. This commit\ntouches only comments.",
      "tree": {
        "sha": "af5c68ab680b2d94c3468bc49c55b7b99dc2eb86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af5c68ab680b2d94c3468bc49c55b7b99dc2eb86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f53a70ce95231d34bb14cd6c58503927e8d7ff59",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQR/BPrrnsbSRxvha9Tqz/dys4s0eQUCXRnnoAAKCRDqz/dys4s0\neTdcAP0cAc/dWgpVY54zaYc4mqxA7leVsjH2B5KCJD0c4GuhsAD/SjIdbL6+6bfD\nZHLbGtK41uhp/jruP/8paZIaSkQFOww=\n=dfoo\n-----END PGP SIGNATURE-----",
        "payload": "tree af5c68ab680b2d94c3468bc49c55b7b99dc2eb86\nparent cac30a436cab3641bba3b774d3d3ddbc426e7908\nauthor Tim Ruffing <crypto@timruffing.de> 1559767444 +0200\ncommitter Tim Ruffing <crypto@timruffing.de> 1561978784 +0200\n\nImprove documentation of memory_cleanse()\n\nSo far, the documentation of memory_cleanse() is a verbatim copy of\nthe commit message in BoringSSL, where this code was originally\nwritten. However, our code evolved since then, and the commit message\nis not particularly helpful in the code but is rather of historical\ninterested in BoringSSL only.\n\nThis commit improves improves the comments around memory_cleanse()\nand gives a better rationale for the method that we use. This commit\ntouches only comments.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f53a70ce95231d34bb14cd6c58503927e8d7ff59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f53a70ce95231d34bb14cd6c58503927e8d7ff59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f53a70ce95231d34bb14cd6c58503927e8d7ff59/comments",
    "author": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following{/other_user}",
      "gists_url": "https://api.github.com/users/real-or-random/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events{/privacy}",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "real-or-random",
      "id": 1071625,
      "node_id": "MDQ6VXNlcjEwNzE2MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/real-or-random",
      "html_url": "https://github.com/real-or-random",
      "followers_url": "https://api.github.com/users/real-or-random/followers",
      "following_url": "https://api.github.com/users/real-or-random/following{/other_user}",
      "gists_url": "https://api.github.com/users/real-or-random/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
      "organizations_url": "https://api.github.com/users/real-or-random/orgs",
      "repos_url": "https://api.github.com/users/real-or-random/repos",
      "events_url": "https://api.github.com/users/real-or-random/events{/privacy}",
      "received_events_url": "https://api.github.com/users/real-or-random/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cac30a436cab3641bba3b774d3d3ddbc426e7908",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cac30a436cab3641bba3b774d3d3ddbc426e7908",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cac30a436cab3641bba3b774d3d3ddbc426e7908"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 14,
      "deletions": 21
    },
    "files": [
      {
        "sha": "ecb00510f78a7fc4324872a1532001bac51a40fc",
        "filename": "src/support/cleanse.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 20,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f53a70ce95231d34bb14cd6c58503927e8d7ff59/src/support/cleanse.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f53a70ce95231d34bb14cd6c58503927e8d7ff59/src/support/cleanse.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/cleanse.cpp?ref=f53a70ce95231d34bb14cd6c58503927e8d7ff59",
        "patch": "@@ -11,33 +11,25 @@\n #include <Windows.h> // For SecureZeroMemory.\n #endif\n \n-/* Compilers have a bad habit of removing \"superfluous\" memset calls that\n- * are trying to zero memory. For example, when memset()ing a buffer and\n- * then free()ing it, the compiler might decide that the memset is\n- * unobservable and thus can be removed.\n- *\n- * Previously we used OpenSSL which tried to stop this by a) implementing\n- * memset in assembly on x86 and b) putting the function in its own file\n- * for other platforms.\n- *\n- * This change removes those tricks in favour of using asm directives to\n- * scare the compiler away. As best as our compiler folks can tell, this is\n- * sufficient and will continue to be so.\n- *\n- * Adam Langley <agl@google.com>\n- * Commit: ad1907fe73334d6c696c8539646c21b11178f20f\n- * BoringSSL (LICENSE: ISC)\n- */\n void memory_cleanse(void *ptr, size_t len)\n {\n #if defined(_MSC_VER)\n+    /* SecureZeroMemory is guaranteed not to be optimized out by MSVC. */\n     SecureZeroMemory(ptr, len);\n #else\n     std::memset(ptr, 0, len);\n \n-    /* As best as we can tell, this is sufficient to break any optimisations that\n-       might try to eliminate \"superfluous\" memsets. If there's an easy way to\n-       detect memset_s, it would be better to use that. */\n+    /* Memory barrier that scares the compiler away from optimizing out the memset.\n+     *\n+     * Quoting Adam Langley <agl@google.com> in commit ad1907fe73334d6c696c8539646c21b11178f20f\n+     * in BoringSSL (ISC License):\n+     *    As best as we can tell, this is sufficient to break any optimisations that\n+     *    might try to eliminate \"superfluous\" memsets.\n+     * This method is used in memzero_explicit() the Linux kernel, too. Its advantage is that it\n+     * is pretty efficient because the compiler can still implement the memset() efficiently,\n+     * just not remove it entirely. See \"Dead Store Elimination (Still) Considered Harmful\" by\n+     * Yang et al. (USENIX Security 2017) for more background.\n+     */\n     __asm__ __volatile__(\"\" : : \"r\"(ptr) : \"memory\");\n #endif\n }"
      },
      {
        "sha": "b03520315d3878d8c73d9abc8f295ed1ccf3830b",
        "filename": "src/support/cleanse.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f53a70ce95231d34bb14cd6c58503927e8d7ff59/src/support/cleanse.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f53a70ce95231d34bb14cd6c58503927e8d7ff59/src/support/cleanse.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/cleanse.h?ref=f53a70ce95231d34bb14cd6c58503927e8d7ff59",
        "patch": "@@ -8,7 +8,8 @@\n \n #include <stdlib.h>\n \n-// Attempt to overwrite data in the specified memory span.\n+/** Secure overwrite a buffer (possibly containing secret data) with zero-bytes. The write\n+ * operation will not be optimized out by the compiler. */\n void memory_cleanse(void *ptr, size_t len);\n \n #endif // BITCOIN_SUPPORT_CLEANSE_H"
      }
    ]
  }
]