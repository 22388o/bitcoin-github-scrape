[
  {
    "sha": "70266e98292bf9c8f019ca4b11d681b575f71448",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDI2NmU5ODI5MmJmOWM4ZjAxOWNhNGIxMWQ2ODFiNTc1ZjcxNDQ4",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-11-15T21:12:17Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-11-15T21:12:17Z"
      },
      "message": "build: fix qt5.7 build under macOS\n\nOBJCXX's std flags don't get defined by our cxx macro. Rather than hard-coding\nto c++11, just force OBJCXX to be the same as CXX unless the user specified\notherwise.",
      "tree": {
        "sha": "3a100fbd47f4848f86983f0c147aee0dd57c6117",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a100fbd47f4848f86983f0c147aee0dd57c6117"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70266e98292bf9c8f019ca4b11d681b575f71448",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70266e98292bf9c8f019ca4b11d681b575f71448",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70266e98292bf9c8f019ca4b11d681b575f71448",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70266e98292bf9c8f019ca4b11d681b575f71448/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6eeac6e30d65f9a972067c1ea8c49978c8e631ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6eeac6e30d65f9a972067c1ea8c49978c8e631ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6eeac6e30d65f9a972067c1ea8c49978c8e631ac"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7347277a564607641d463ba01d9017096ee84a3c",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70266e98292bf9c8f019ca4b11d681b575f71448/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70266e98292bf9c8f019ca4b11d681b575f71448/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=70266e98292bf9c8f019ca4b11d681b575f71448",
        "patch": "@@ -45,7 +45,6 @@ else\n   CXXFLAGS_overridden=no\n fi\n AC_PROG_CXX\n-m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n \n dnl By default, libtool for mingw refuses to link static libs into a dll for\n dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n@@ -60,6 +59,15 @@ AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n dnl Check if -latomic is required for <std::atomic>\n CHECK_ATOMIC\n \n+dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n+dnl that we get the same -std flags for both.\n+m4_ifdef([AC_PROG_OBJCXX],[\n+if test \"x${OBJCXX+set}\" = \"x\"; then\n+  OBJCXX=\"${CXX}\"\n+fi\n+AC_PROG_OBJCXX\n+])\n+\n dnl Libtool init checks.\n LT_INIT([pic-only])\n "
      }
    ]
  }
]