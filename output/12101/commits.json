[
  {
    "sha": "0b63e3c7b20ea54930de3ec3955406e4d4737e3c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjYzZTNjN2IyMGVhNTQ5MzBkZTNlYzM5NTU0MDZlNGQ0NzM3ZTNj",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-01-06T07:07:38Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-01-12T04:57:38Z"
      },
      "message": "Clamp walletpassphrase timeout to 2^(30) seconds and check its bounds\n\nClamps the timeout of walletpassphrase to 2^(30) seconds, which is\n~34 years. Any number greater than that will be forced to be\n2^(30). This avoids the sign flipping problem with large values which\ncan result in a negative time used.\n\nAlso perform bounds checks to ensure that the timeout is positive\nto avoid immediate relocking of the wallet.",
      "tree": {
        "sha": "9e8230a22f7c659868d07cc7346c9f0ff6724bf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e8230a22f7c659868d07cc7346c9f0ff6724bf3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b63e3c7b20ea54930de3ec3955406e4d4737e3c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b63e3c7b20ea54930de3ec3955406e4d4737e3c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b63e3c7b20ea54930de3ec3955406e4d4737e3c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b63e3c7b20ea54930de3ec3955406e4d4737e3c/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "56910285fa4a7a0f3b931e7613b9691cee9c13ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56910285fa4a7a0f3b931e7613b9691cee9c13ff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56910285fa4a7a0f3b931e7613b9691cee9c13ff"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 13,
      "deletions": 2
    },
    "files": [
      {
        "sha": "47b31e8f13ced9304a262024c1f87bae83b81395",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b63e3c7b20ea54930de3ec3955406e4d4737e3c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b63e3c7b20ea54930de3ec3955406e4d4737e3c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0b63e3c7b20ea54930de3ec3955406e4d4737e3c",
        "patch": "@@ -2269,7 +2269,8 @@ UniValue walletpassphrase(const JSONRPCRequest& request)\n             \"This is needed prior to performing transactions related to private keys such as sending bitcoins\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"passphrase\\\"     (string, required) The wallet passphrase\\n\"\n-            \"2. timeout            (numeric, required) The time to keep the decryption key in seconds.\\n\"\n+            \"2. timeout            (numeric, required) The time to keep the decryption key in seconds. Limited to at most 1073741824 (2^30) seconds.\\n\"\n+            \"                                          Any value greater than 1073741824 seconds will be set to 1073741824 seconds.\\n\"\n             \"\\nNote:\\n\"\n             \"Issuing the walletpassphrase command while the wallet is already unlocked will set a new unlock\\n\"\n             \"time that overrides the old one.\\n\"\n@@ -2298,6 +2299,17 @@ UniValue walletpassphrase(const JSONRPCRequest& request)\n     // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n     strWalletPass = request.params[0].get_str().c_str();\n \n+    // Get the timeout\n+    int64_t nSleepTime = request.params[1].get_int64();\n+    // Timeout cannot be negative, otherwise it will relock immediately\n+    if (nSleepTime < 0) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+    }\n+    // Clamp timeout to 2^30 seconds\n+    if (nSleepTime > (int64_t)1 << 30) {\n+        nSleepTime = (int64_t)1 << 30;\n+    }\n+\n     if (strWalletPass.length() > 0)\n     {\n         if (!pwallet->Unlock(strWalletPass)) {\n@@ -2311,7 +2323,6 @@ UniValue walletpassphrase(const JSONRPCRequest& request)\n \n     pwallet->TopUpKeyPool();\n \n-    int64_t nSleepTime = request.params[1].get_int64();\n     pwallet->nRelockTime = GetTime() + nSleepTime;\n     RPCRunLater(strprintf(\"lockwallet(%s)\", pwallet->GetName()), boost::bind(LockWallet, pwallet), nSleepTime);\n "
      }
    ]
  },
  {
    "sha": "134cdc7cee3da7c554e40ad947a9cdcbb3069f13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzRjZGM3Y2VlM2RhN2M1NTRlNDBhZDk0N2E5Y2RjYmIzMDY5ZjEz",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-01-06T07:08:57Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-01-12T04:58:54Z"
      },
      "message": "Test walletpassphrase timeout bounds and clamping",
      "tree": {
        "sha": "18551e0451cc729cb0b5a05f518ebbba99c45316",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18551e0451cc729cb0b5a05f518ebbba99c45316"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/134cdc7cee3da7c554e40ad947a9cdcbb3069f13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/134cdc7cee3da7c554e40ad947a9cdcbb3069f13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/134cdc7cee3da7c554e40ad947a9cdcbb3069f13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/134cdc7cee3da7c554e40ad947a9cdcbb3069f13/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b63e3c7b20ea54930de3ec3955406e4d4737e3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b63e3c7b20ea54930de3ec3955406e4d4737e3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b63e3c7b20ea54930de3ec3955406e4d4737e3c"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3c927ee4845cbffab4dcb94f12421c1d484d5ba2",
        "filename": "test/functional/wallet-encryption.py",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/134cdc7cee3da7c554e40ad947a9cdcbb3069f13/test/functional/wallet-encryption.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/134cdc7cee3da7c554e40ad947a9cdcbb3069f13/test/functional/wallet-encryption.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-encryption.py?ref=134cdc7cee3da7c554e40ad947a9cdcbb3069f13",
        "patch": "@@ -10,6 +10,8 @@\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n+    assert_greater_than,\n+    assert_greater_than_or_equal,\n )\n \n class WalletEncryptionTest(BitcoinTestFramework):\n@@ -56,6 +58,23 @@ def run_test(self):\n         assert_raises_rpc_error(-14, \"wallet passphrase entered was incorrect\", self.nodes[0].walletpassphrase, passphrase, 10)\n         self.nodes[0].walletpassphrase(passphrase2, 10)\n         assert_equal(privkey, self.nodes[0].dumpprivkey(address))\n+        self.nodes[0].walletlock()\n+\n+        # Test timeout bounds\n+        assert_raises_rpc_error(-8, \"Timeout cannot be negative.\", self.nodes[0].walletpassphrase, passphrase2, -10)\n+        # Check the timeout\n+        # Check a time less than the limit\n+        expected_time = int(time.time()) + (1 << 30) - 600\n+        self.nodes[0].walletpassphrase(passphrase2, (1 << 30) - 600)\n+        actual_time = self.nodes[0].getwalletinfo()['unlocked_until']\n+        assert_greater_than_or_equal(actual_time, expected_time)\n+        assert_greater_than(expected_time + 5, actual_time) # 5 second buffer\n+        # Check a time greater than the limit\n+        expected_time = int(time.time()) + (1 << 30) - 1\n+        self.nodes[0].walletpassphrase(passphrase2, (1 << 33))\n+        actual_time = self.nodes[0].getwalletinfo()['unlocked_until']\n+        assert_greater_than_or_equal(actual_time, expected_time)\n+        assert_greater_than(expected_time + 5, actual_time) # 5 second buffer\n \n if __name__ == '__main__':\n     WalletEncryptionTest().main()"
      }
    ]
  }
]