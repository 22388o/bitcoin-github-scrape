[
  {
    "sha": "ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTMwZDdhZTljNTI3MjJiZDdkNzMzY2ZhYTRhYjU1Y2FjZTgyMTNm",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-12-24T12:57:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-24T12:59:26Z"
      },
      "message": "Move IsInitialBlockDownload from main to checkpoints\n\nRebased-By: Wladimir J. van der Laan <laanwj@gmail.com>",
      "tree": {
        "sha": "55a5ca1bc655cf806bbea8eab381c2f795140ac2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55a5ca1bc655cf806bbea8eab381c2f795140ac2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 32,
      "deletions": 27
    },
    "files": [
      {
        "sha": "46a57cb3ddfea3b1f368e4f85e3ea4e7d45379f4",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
        "patch": "@@ -159,4 +159,20 @@ namespace Checkpoints\n         }\n         return NULL;\n     }\n+\n+    bool IsInitialBlockDownload()\n+    {\n+        if (fImporting || fReindex || chainActive.Height() < GetTotalBlocksEstimate())\n+            return true;\n+        static int64_t nLastUpdate;\n+        static CBlockIndex* pindexLastBest;\n+        if (chainActive.Tip() != pindexLastBest)\n+        {\n+            pindexLastBest = chainActive.Tip();\n+            nLastUpdate = GetTime();\n+        }\n+        return (GetTime() - nLastUpdate < 10 &&\n+                chainActive.Tip()->GetBlockTime() < GetTime() - 24 * 60 * 60);\n+    }\n+\n }"
      },
      {
        "sha": "3fc1c1211a9933280558c42858b4182a96352389",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
        "patch": "@@ -27,6 +27,10 @@ namespace Checkpoints\n     double GuessVerificationProgress(CBlockIndex *pindex);\n \n     extern bool fEnabled;\n+\n+    /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n+    bool IsInitialBlockDownload();\n }\n \n+\n #endif"
      },
      {
        "sha": "4f279609d8f63ffa04d93677c6b70fd33d534218",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 21,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
        "patch": "@@ -946,7 +946,7 @@ bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n \n     // Flush stdio buffers and commit to disk before returning\n     fflush(fileout);\n-    if (!IsInitialBlockDownload())\n+    if (!Checkpoints::IsInitialBlockDownload())\n         FileCommit(fileout);\n \n     return true;\n@@ -1117,21 +1117,6 @@ int GetNumBlocksOfPeers()\n     return std::max(cPeerBlockCounts.median(), Checkpoints::GetTotalBlocksEstimate());\n }\n \n-bool IsInitialBlockDownload()\n-{\n-    if (fImporting || fReindex || chainActive.Height() < Checkpoints::GetTotalBlocksEstimate())\n-        return true;\n-    static int64_t nLastUpdate;\n-    static CBlockIndex* pindexLastBest;\n-    if (chainActive.Tip() != pindexLastBest)\n-    {\n-        pindexLastBest = chainActive.Tip();\n-        nLastUpdate = GetTime();\n-    }\n-    return (GetTime() - nLastUpdate < 10 &&\n-            chainActive.Tip()->GetBlockTime() < GetTime() - 24 * 60 * 60);\n-}\n-\n bool fLargeWorkForkFound = false;\n bool fLargeWorkInvalidChainFound = false;\n CBlockIndex *pindexBestForkTip = NULL, *pindexBestForkBase = NULL;\n@@ -1140,7 +1125,7 @@ void CheckForkWarningConditions()\n {\n     // Before we get past initial download, we cannot reliably alert about forks\n     // (we assume we don't get stuck on a fork before the last checkpoint)\n-    if (IsInitialBlockDownload())\n+    if (Checkpoints::IsInitialBlockDownload())\n         return;\n \n     // If our best fork is no longer within 72 blocks (+/- 12 hours if no one mines it)\n@@ -1811,7 +1796,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n         LogPrintf(\"- Flush %i transactions: %.2fms (%.4fms/tx)\\n\", nModified, 0.001 * nTime, 0.001 * nTime / nModified);\n \n     // Make sure it's successfully written to disk before changing memory structure\n-    bool fIsInitialDownload = IsInitialBlockDownload();\n+    bool fIsInitialDownload = Checkpoints::IsInitialBlockDownload();\n     if (!fIsInitialDownload || pcoinsTip->GetCacheSize() > nCoinCacheSize) {\n         // Typical CCoins structures on disk are around 100 bytes in size.\n         // Pushing a new one to the database can cause it to be written\n@@ -3175,7 +3160,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (!pfrom->fInbound)\n         {\n             // Advertise our address\n-            if (!fNoListen && !IsInitialBlockDownload())\n+            if (!fNoListen && !Checkpoints::IsInitialBlockDownload())\n             {\n                 CAddress addr = GetLocalAddress(&pfrom->addr);\n                 if (addr.IsRoutable())\n@@ -3949,7 +3934,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n \n         // Address refresh broadcast\n         static int64_t nLastRebroadcast;\n-        if (!IsInitialBlockDownload() && (GetTime() - nLastRebroadcast > 24 * 60 * 60))\n+        if (!Checkpoints::IsInitialBlockDownload() && (GetTime() - nLastRebroadcast > 24 * 60 * 60))\n         {\n             {\n                 LOCK(cs_vNodes);\n@@ -4020,7 +4005,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // Resend wallet transactions that haven't gotten in a block yet\n         // Except during reindex, importing and IBD, when old wallet\n         // transactions become unconfirmed and spams other nodes.\n-        if (!fReindex && !fImporting && !IsInitialBlockDownload())\n+        if (!fReindex && !fImporting && !Checkpoints::IsInitialBlockDownload())\n         {\n             g_signals.Broadcast();\n         }"
      },
      {
        "sha": "2339d446d7d1d8d1c924da75fcbaa479ac2d4cd5",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
        "patch": "@@ -12,6 +12,7 @@\n \n #include \"bignum.h\"\n #include \"chainparams.h\"\n+#include \"checkpoints.h\"\n #include \"coins.h\"\n #include \"core.h\"\n #include \"net.h\"\n@@ -159,8 +160,6 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime);\n /** Get the number of active peers */\n int GetNumBlocksOfPeers();\n-/** Check whether we are doing an initial block download (synchronizing from disk or network) */\n-bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */\n std::string GetWarnings(std::string strFor);\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */\n@@ -357,7 +356,7 @@ class CBlockUndo\n \n         // Flush stdio buffers and commit to disk before returning\n         fflush(fileout);\n-        if (!IsInitialBlockDownload())\n+        if (!Checkpoints::IsInitialBlockDownload())\n             FileCommit(fileout);\n \n         return true;"
      },
      {
        "sha": "ea7861e2717d3058f04c5ef2f18e57dbee55f3ad",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
        "patch": "@@ -133,7 +133,7 @@ QString ClientModel::getNetworkName() const\n \n bool ClientModel::inInitialBlockDownload() const\n {\n-    return IsInitialBlockDownload();\n+    return Checkpoints::IsInitialBlockDownload();\n }\n \n enum BlockSource ClientModel::getBlockSource() const"
      },
      {
        "sha": "73831b97856b1a2eb0a4ed25c4423d3b785615f2",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea30d7ae9c52722bd7d733cfaa4ab55cace8213f/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=ea30d7ae9c52722bd7d733cfaa4ab55cace8213f",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"rpcserver.h\"\n #include \"chainparams.h\"\n+#include \"checkpoints.h\"\n #include \"init.h\"\n #include \"net.h\"\n #include \"main.h\"\n@@ -297,7 +298,7 @@ Value getwork(const Array& params, bool fHelp)\n     if (vNodes.empty())\n         throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Bitcoin is not connected!\");\n \n-    if (IsInitialBlockDownload())\n+    if (Checkpoints::IsInitialBlockDownload())\n         throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Bitcoin is downloading blocks...\");\n \n     typedef map<uint256, pair<CBlock*, CScript> > mapNewBlock_t;\n@@ -479,7 +480,7 @@ Value getblocktemplate(const Array& params, bool fHelp)\n     if (vNodes.empty())\n         throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Bitcoin is not connected!\");\n \n-    if (IsInitialBlockDownload())\n+    if (Checkpoints::IsInitialBlockDownload())\n         throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Bitcoin is downloading blocks...\");\n \n     // Update block"
      }
    ]
  }
]