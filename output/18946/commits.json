[
  {
    "sha": "fa182a8794cbf9be1aa91d1d75e65bc7800156bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE4MmE4Nzk0Y2JmOWJlMWFhOTFkMWQ3NWU2NWJjNzgwMDE1NmJj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-11T13:59:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-11T13:53:49Z"
      },
      "message": "rpcwallet: Replace boost::optional<T>::emplace with simple assignment of T{}\n\nOptional::emplace() was only added in boost 1.56, see\nhttps://github.com/boostorg/optional/commit/2e583aaf30964afd66c1284aa71d0d8b42fa440d\n\nTo simply work around https://github.com/bitcoin/bitcoin/issues/18943,\nreplace it with assignment of T{}",
      "tree": {
        "sha": "8515a7e25084c508d014397baa62413dd582db79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8515a7e25084c508d014397baa62413dd582db79"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa182a8794cbf9be1aa91d1d75e65bc7800156bc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhHUQv9E2CJbs5q0wTU1YXUV9oEgvB7yfQCKvas2WblYKpWXEsBxUAgvZOauX6Q\nzwWPmjD1bo7WpKwG92wYvdk3ROhQI5wSfc2Cc+GEM9xvzQTiYRUVlLssPdvcBmMB\nsxT92cYIdjLGJZCsiG5fRBR/x+9SHavjjEY9JItO1w+rAbXQnaJzGFay1/P1cLBg\nZEH/0tStRX4deUdatA0VN1Ou6E3rDg1sKyYVRmV3VAcIQgrfo79RICyJQeSLWvPa\nkUlRP4wslHA3tbakBcxbNNg3NcPwgW60cU76uyrga9yZovycAjV7AYMUkvsfC0Y3\nbCbIYYx0avltjQFm8MnBRYngiCR2GbaflrTSm1gvYR1BD56hOph2ZOmcef3gmyrO\njMkyWHmgo23eKCE30w6kSQI2VyAtNQYXyt23u5o5ivvjJS6pJoE6x4b2VCE105Ss\nV00kNQF5eD8Bs2gjaWQXMLB7JbIhSKAD6QPtJi6PZQ2CPPXA5XflCbnifhAqhGgx\nI+lRwWN7\n=ZsJv\n-----END PGP SIGNATURE-----",
        "payload": "tree 8515a7e25084c508d014397baa62413dd582db79\nparent 88d8b4e182bfc75e8496f7046af7aab93307b9d0\nauthor MarcoFalke <falke.marco@gmail.com> 1589205572 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1589205229 -0400\n\nrpcwallet: Replace boost::optional<T>::emplace with simple assignment of T{}\n\nOptional::emplace() was only added in boost 1.56, see\nhttps://github.com/boostorg/optional/commit/2e583aaf30964afd66c1284aa71d0d8b42fa440d\n\nTo simply work around https://github.com/bitcoin/bitcoin/issues/18943,\nreplace it with assignment of T{}\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa182a8794cbf9be1aa91d1d75e65bc7800156bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa182a8794cbf9be1aa91d1d75e65bc7800156bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa182a8794cbf9be1aa91d1d75e65bc7800156bc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88d8b4e182bfc75e8496f7046af7aab93307b9d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d8b4e182bfc75e8496f7046af7aab93307b9d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88d8b4e182bfc75e8496f7046af7aab93307b9d0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fcf78bd4b4f6f97d5876c2fd9fa75af3d28d7062",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa182a8794cbf9be1aa91d1d75e65bc7800156bc/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa182a8794cbf9be1aa91d1d75e65bc7800156bc/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fa182a8794cbf9be1aa91d1d75e65bc7800156bc",
        "patch": "@@ -1557,8 +1557,8 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     uint256 blockId;\n     if (!request.params[0].isNull() && !request.params[0].get_str().empty()) {\n         blockId = ParseHashV(request.params[0], \"blockhash\");\n-        height.emplace();\n-        altheight.emplace();\n+        height = int{};\n+        altheight = int{};\n         if (!pwallet->chain().findCommonAncestor(blockId, pwallet->GetLastBlockHash(), /* ancestor out */ FoundBlock().height(*height), /* blockId out */ FoundBlock().height(*altheight))) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n         }"
      }
    ]
  },
  {
    "sha": "fa1f840596554ed264d11ee3b3643bf99eb57eb5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFmODQwNTk2NTU0ZWQyNjRkMTFlZTNiMzY0M2JmOTllYjU3ZWI1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-11T14:05:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-11T13:59:00Z"
      },
      "message": "rpcwallet: Replace pwallet-> with wallet.\n\npwallet is never null everywhere where it is dereferenced, so simply\nreplace it with a reference, which can not be null by definition.",
      "tree": {
        "sha": "1df7c45bfb70d76950a9912157d67f7b2f119aa7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1df7c45bfb70d76950a9912157d67f7b2f119aa7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1f840596554ed264d11ee3b3643bf99eb57eb5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiWVAwAiCL3GRqLI7fFjYgQ0U6Ny5HwFjuR3hDFnW26839HTjhi98W54KsII0Op\nLxfSzKiXdGcoyaqYw/XvOcdvKj4CdsoUakR75tA9hBswIAFKo4nqwiciG9VS8HrG\nEEqE1JeOlrQW91IkS5aAU6xeh3lGIeCd7yrW10r8uGPKIrsrMCOtMr9/sY4/QgVH\nUx3huMbOeNGFbACSbdhZpV5LhJ+GYWauMJQgMkvDC5y8sTrf8THzD8mRXm0I2+w/\nxi0UJkKN5rgcWIZpN5JJlGwDhRRT01o9mxp2EK0MTYUNhCfyz6ySVjTtWOfML11A\noUgFGaTv0yU8h47UxKw0768OfuCLje17q2SZ99Ue/iRvQ0c2HmkHkuEnHLvkWMFa\niTSxNgPOxVItiPCHvgIfLTHhPtrmZST+L+mr6gC4uKZiJL6aND96+ecoftMixexI\nyhyBwidkKLjQfS//EFDeV+NG6gLSNXkHk3mBRCHq1z4ZmPQdnuW74/eNkBqgq/XU\n5al4b+Y4\n=QvXd\n-----END PGP SIGNATURE-----",
        "payload": "tree 1df7c45bfb70d76950a9912157d67f7b2f119aa7\nparent fa182a8794cbf9be1aa91d1d75e65bc7800156bc\nauthor MarcoFalke <falke.marco@gmail.com> 1589205950 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1589205540 -0400\n\nrpcwallet: Replace pwallet-> with wallet.\n\npwallet is never null everywhere where it is dereferenced, so simply\nreplace it with a reference, which can not be null by definition.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1f840596554ed264d11ee3b3643bf99eb57eb5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1f840596554ed264d11ee3b3643bf99eb57eb5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1f840596554ed264d11ee3b3643bf99eb57eb5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa182a8794cbf9be1aa91d1d75e65bc7800156bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa182a8794cbf9be1aa91d1d75e65bc7800156bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa182a8794cbf9be1aa91d1d75e65bc7800156bc"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "935105775b3c78378db04c49bb84fb9f3c1d5342",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1f840596554ed264d11ee3b3643bf99eb57eb5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1f840596554ed264d11ee3b3643bf99eb57eb5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fa1f840596554ed264d11ee3b3643bf99eb57eb5",
        "patch": "@@ -1482,10 +1482,9 @@ UniValue listtransactions(const JSONRPCRequest& request)\n \n static UniValue listsinceblock(const JSONRPCRequest& request)\n {\n-    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    const CWallet* const pwallet = wallet.get();\n+    std::shared_ptr<CWallet> const pwallet = GetWalletForJSONRPCRequest(request);\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet.get(), request.fHelp)) {\n         return NullUniValue;\n     }\n \n@@ -1542,11 +1541,12 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n+    const CWallet& wallet = *pwallet;\n     // Make sure the results are valid at least up to the most recent block\n     // the user could have gotten from another RPC command prior to now\n-    pwallet->BlockUntilSyncedToCurrentChain();\n+    wallet.BlockUntilSyncedToCurrentChain();\n \n-    LOCK(pwallet->cs_wallet);\n+    LOCK(wallet.cs_wallet);\n \n     // The way the 'height' is initialized is just a workaround for the gcc bug #47679 since version 4.6.0.\n     Optional<int> height = MakeOptional(false, int()); // Height of the specified block or the common ancestor, if the block provided was in a deactivated chain.\n@@ -1559,7 +1559,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         blockId = ParseHashV(request.params[0], \"blockhash\");\n         height = int{};\n         altheight = int{};\n-        if (!pwallet->chain().findCommonAncestor(blockId, pwallet->GetLastBlockHash(), /* ancestor out */ FoundBlock().height(*height), /* blockId out */ FoundBlock().height(*altheight))) {\n+        if (!wallet.chain().findCommonAncestor(blockId, wallet.GetLastBlockHash(), /* ancestor out */ FoundBlock().height(*height), /* blockId out */ FoundBlock().height(*altheight))) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n         }\n     }\n@@ -1572,21 +1572,21 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         }\n     }\n \n-    if (ParseIncludeWatchonly(request.params[2], *pwallet)) {\n+    if (ParseIncludeWatchonly(request.params[2], wallet)) {\n         filter |= ISMINE_WATCH_ONLY;\n     }\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    int depth = height ? pwallet->GetLastBlockHeight() + 1 - *height : -1;\n+    int depth = height ? wallet.GetLastBlockHeight() + 1 - *height : -1;\n \n     UniValue transactions(UniValue::VARR);\n \n-    for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n+    for (const std::pair<const uint256, CWalletTx>& pairWtx : wallet.mapWallet) {\n         const CWalletTx& tx = pairWtx.second;\n \n         if (depth == -1 || abs(tx.GetDepthInMainChain()) < depth) {\n-            ListTransactions(pwallet, tx, 0, true, transactions, filter, nullptr /* filter_label */);\n+            ListTransactions(&wallet, tx, 0, true, transactions, filter, nullptr /* filter_label */);\n         }\n     }\n \n@@ -1595,23 +1595,23 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     UniValue removed(UniValue::VARR);\n     while (include_removed && altheight && *altheight > *height) {\n         CBlock block;\n-        if (!pwallet->chain().findBlock(blockId, FoundBlock().data(block)) || block.IsNull()) {\n+        if (!wallet.chain().findBlock(blockId, FoundBlock().data(block)) || block.IsNull()) {\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n         }\n         for (const CTransactionRef& tx : block.vtx) {\n-            auto it = pwallet->mapWallet.find(tx->GetHash());\n-            if (it != pwallet->mapWallet.end()) {\n+            auto it = wallet.mapWallet.find(tx->GetHash());\n+            if (it != wallet.mapWallet.end()) {\n                 // We want all transactions regardless of confirmation count to appear here,\n                 // even negative confirmation ones, hence the big negative.\n-                ListTransactions(pwallet, it->second, -100000000, true, removed, filter, nullptr /* filter_label */);\n+                ListTransactions(&wallet, it->second, -100000000, true, removed, filter, nullptr /* filter_label */);\n             }\n         }\n         blockId = block.hashPrevBlock;\n         --*altheight;\n     }\n \n     uint256 lastblock;\n-    CHECK_NONFATAL(pwallet->chain().findAncestorByHeight(pwallet->GetLastBlockHash(), pwallet->GetLastBlockHeight() + 1 - target_confirms, FoundBlock().hash(lastblock)));\n+    CHECK_NONFATAL(wallet.chain().findAncestorByHeight(wallet.GetLastBlockHash(), wallet.GetLastBlockHeight() + 1 - target_confirms, FoundBlock().hash(lastblock)));\n \n     UniValue ret(UniValue::VOBJ);\n     ret.pushKV(\"transactions\", transactions);"
      }
    ]
  }
]