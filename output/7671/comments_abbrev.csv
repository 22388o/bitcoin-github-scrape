jonasschnelli,2016-03-12T18:50:28Z,Nice!\nutACK.\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-195785052,195785052,
sipa,2016-03-12T18:56:54Z,"I like the concept, but perhaps we can separate that out to a different RPC (which then can function without wallet support)?\n\nAlso, the change in arguments to `generate` conflicts with #7663.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-195788233,195788233,
achow101,2016-03-12T19:02:12Z,"@sipa How about moving it to a new rpc `generatetoaddress`?\n\nDone, but there is code duplication since most of it is copied from the `generate` rpc. I left it duplicated so that it doesn't conflict with #7663.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-195791211,195791211,
luke-jr,2016-03-12T20:22:51Z,This seems unnecessary. Why not just move GBT->block code from getblocktemplate_proposals.py to blocktools?\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-195804725,195804725,
achow101,2016-03-12T20:32:08Z,> This seems unnecessary.\n\nWhy?\n\n> Why not just move GBT->block code from getblocktemplate_proposals.py to blocktools?\n\nNot sure what you mean by this.\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-195805171,195805171,
laanwj,2016-03-14T11:12:55Z,"Concept ACK\nNeeds rebase after #7507,#7663\n\n> I like the concept, but perhaps we can separate that out to a different RPC (which then can function without wallet support)?\n\nSounds like a good idea to me. Mining without wallet support would be awesome for some tests.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196262686,196262686,
achow101,2016-03-14T19:43:20Z,Rebased\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196492018,196492018,
MarcoFalke,2016-03-14T19:58:10Z,I'd prefer to have rpc tests as part of this pull.\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196497400,196497400,
achow101,2016-03-14T20:14:10Z,@MarcoFalke Where would be the best place to put such tests?\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196501866,196501866,
MarcoFalke,2016-03-14T20:28:25Z,@achow101 You can either start from scratch (c.f. https://github.com/bitcoin/bitcoin/blob/48f39058315c908c360acb596923cbc090119480/qa/rpc-tests/disablewallet.py) or extend an existing python script in this folder.\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196508270,196508270,
sipa,2016-03-14T20:30:23Z,"One of the primary use cases for this, I think, would be to have RPC tests where you get an address from one node, and let another node mine directly to it, without the need to generate 100 blocks in between before you can transfer.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196508773,196508773,
achow101,2016-03-14T21:57:37Z,"I added rpc tests, both with and without wallets.\n\n> The wallet RPC Test mines Bitcoin to another node's address and checks that that node has received the Bitcoin.\n> \n> The RPC test without the wallet mines Bitcoin to an arbitrary address and checks that it works. It then mines to an arbitrary invalid address and checks that that fails.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196538971,196538971,
achow101,2016-03-14T22:39:45Z,addressed nits\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196551729,196551729,
laanwj,2016-03-15T08:24:32Z,"Random Q: Should this also be able to take an arbitrary scriptPubKey?\n\n> One of the primary use cases for this, I think, would be to have RPC tests where you get an address from one node, and let another node mine directly to it,\n\nAlso eventually we want to have at least part of the RPC tests usable without wallet.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-196713460,196713460,
achow101,2016-03-15T20:24:22Z,> Random Q: Should this also be able to take an arbitrary scriptPubKey?\n\nDo you think that it should?\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-197005847,197005847,
laanwj,2016-03-16T09:18:59Z,"> Do you think that it should?\n\nI don't deeply care myself. Just a question that came up with me, usually the discussion of custom scripts comes up immediately after allowing arbitrary addresses, as addresses map to a only a subset of the possible output scripts.\n\nSo to be clear, I'm ok with just leaving it like this.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-197223449,197223449,
achow101,2016-03-17T12:36:05Z,"OK, I'll just leave it as is.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-197857925,197857925,
sipa,2016-03-17T12:40:28Z,"If we want to support that, perhaps we should just define an address format\nthat supports arbitrary scriptPubKeys. That way, it would be available\neverywhere.\n",https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-197860318,197860318,
laanwj,2016-03-21T13:14:19Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-199268637,199268637,
achow101,2016-03-21T14:01:57Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-199297581,199297581,
laanwj,2016-03-23T12:25:18Z,ACK fe00ca7\n,https://github.com/bitcoin/bitcoin/pull/7671#issuecomment-200327212,200327212,
jonasschnelli,2016-03-12T18:49:19Z,"Maybe use ""address"" instead of ""base58 encoded address"" (it would even be wrong because it's a base58 check encoded ripemd hash"". \n",https://github.com/bitcoin/bitcoin/pull/7671#discussion_r55925790,55925790,src/rpc/mining.cpp
MarcoFalke,2016-03-14T22:15:14Z,"Nit:\n\n``` python\nassert(""Invalid or non-wallet transaction id"" not in errorString)\n```\n",https://github.com/bitcoin/bitcoin/pull/7671#discussion_r56085750,56085750,qa/rpc-tests/wallet.py
MarcoFalke,2016-03-14T22:15:38Z,"Actually, you can remove the whole `except` block?\n",https://github.com/bitcoin/bitcoin/pull/7671#discussion_r56085797,56085797,qa/rpc-tests/wallet.py
achow101,2016-03-14T22:17:36Z,"> Actually, you can remove the whole except block?\n\nWhy?\n",https://github.com/bitcoin/bitcoin/pull/7671#discussion_r56086034,56086034,qa/rpc-tests/wallet.py
MarcoFalke,2016-03-14T22:20:58Z,"Nit: Move it up one line and make it\n\n``` python\n            raise AssertionError(""Must not mine to invalid address!"")\n        except JSONRPCException,e:\n            assert(""Invalid address"" in e.error['message'])\n```\n",https://github.com/bitcoin/bitcoin/pull/7671#discussion_r56086517,56086517,qa/rpc-tests/disablewallet.py
MarcoFalke,2016-03-14T22:21:58Z,"The error string is always empty, so it's dead code? (Correct me if I am wrong)\n",https://github.com/bitcoin/bitcoin/pull/7671#discussion_r56086626,56086626,qa/rpc-tests/wallet.py
achow101,2016-03-14T22:35:23Z,"Uh, I don't think so. There is an error from gettransaction and the error string was defined earlier.\n\nAnyways, this should work, right?\n\n```\nexcept JSONRPCException,e:\n            assert(""Invalid or non-wallet transaction id"" not in e.error['message'])\n```\n",https://github.com/bitcoin/bitcoin/pull/7671#discussion_r56088210,56088210,qa/rpc-tests/wallet.py
MarcoFalke,2016-03-21T14:06:51Z,Please remove this line. The variable is unused and I'd prefer not to use it ever again: see https://github.com/bitcoin/bitcoin/commit/3b4324b1edd7b52bbc0e1f350ab04bc41f343f2e#diff-dafb9035fa41af011fcf87041198a05aL309\n,https://github.com/bitcoin/bitcoin/pull/7671#discussion_r56826580,56826580,qa/rpc-tests/disablewallet.py
achow101,2016-03-21T14:23:11Z,fixed\n,https://github.com/bitcoin/bitcoin/pull/7671#discussion_r56829216,56829216,qa/rpc-tests/disablewallet.py
