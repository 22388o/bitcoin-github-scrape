[
  {
    "sha": "570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzBhZDIwYWQ2ZjRhOTYzMWEzYTVhMjljOTljY2MwY2RjYWVlYWVi",
    "commit": {
      "author": {
        "name": "Huangyi5458",
        "email": "43028595+Huangyi5458@users.noreply.github.com",
        "date": "2020-05-06T13:42:01Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-05-06T13:42:01Z"
      },
      "message": "Merge pull request #1 from bitcoin/master\n\nmerge master into current",
      "tree": {
        "sha": "9e669b92516612f3bee6056ce305259c569a870c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e669b92516612f3bee6056ce305259c569a870c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesr6pCRBK7hj4Ov3rIwAAdHIIAJD+jl5zRvdvBv4v0YKMmGAb\ny2rIZd06doI2cl6azJ6oMXEFwPpxI0Gc6ED1gjDcUJt5KJ4FcJcM8AUT1WAux1CM\nBFMN1ndjERPXvMUjNo2CCgn3K99GkLKV8hjT0QKcHje3FJi2ExFE5FUIwyvEzhzf\nKFKMBHWsyRIfA6aQ3qhw4cWz0AIp1OpW1UB33fJMNpb++b76Iu4oMOgRcrEDVIDm\nNDOvRmc9i3wXLpXTZSIpzk5Xb3XlxqOVbOlmOzColyvsQQhcQ7d+Jjz8CODQyMqj\n3yD6yy77tWPg+wB6kH2xak3ntlsI1YvFKm9uqtBGZbdDbibu1X1EByccVKrAbTs=\n=B9t5\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 9e669b92516612f3bee6056ce305259c569a870c\nparent db67101c748c208cced8e9b76a66d57cd48fbf6e\nparent 7bcc42b4035b878719d13201286e322989b415c5\nauthor Huangyi5458 <43028595+Huangyi5458@users.noreply.github.com> 1588772521 +0800\ncommitter GitHub <noreply@github.com> 1588772521 +0800\n\nMerge pull request #1 from bitcoin/master\n\nmerge master into current"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/comments",
    "author": {
      "login": "Huangyi5458",
      "id": 43028595,
      "node_id": "MDQ6VXNlcjQzMDI4NTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/43028595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Huangyi5458",
      "html_url": "https://github.com/Huangyi5458",
      "followers_url": "https://api.github.com/users/Huangyi5458/followers",
      "following_url": "https://api.github.com/users/Huangyi5458/following{/other_user}",
      "gists_url": "https://api.github.com/users/Huangyi5458/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Huangyi5458/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Huangyi5458/subscriptions",
      "organizations_url": "https://api.github.com/users/Huangyi5458/orgs",
      "repos_url": "https://api.github.com/users/Huangyi5458/repos",
      "events_url": "https://api.github.com/users/Huangyi5458/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Huangyi5458/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db67101c748c208cced8e9b76a66d57cd48fbf6e"
      },
      {
        "sha": "7bcc42b4035b878719d13201286e322989b415c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bcc42b4035b878719d13201286e322989b415c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7bcc42b4035b878719d13201286e322989b415c5"
      }
    ],
    "stats": {
      "total": 190497,
      "additions": 108595,
      "deletions": 81902
    },
    "files": [
      {
        "sha": "eeb2d6590b630d5e1854169ff795785d2928a29f",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 65,
        "deletions": 23,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,46 +1,88 @@\n version: '{branch}.{build}'\n skip_tags: true\n-image: Visual Studio 2017\n+image: Visual Studio 2019\n configuration: Release\n platform: x64\n clone_depth: 5\n environment:\n   APPVEYOR_SAVE_CACHE_ON_ERROR: true\n   CLCACHE_SERVER: 1\n-  PACKAGES: berkeleydb boost-filesystem boost-signals2 boost-test libevent openssl rapidcheck zeromq\n   PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n   PYTHONUTF8: 1\n+  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n+  QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+  QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n+  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n+  VCPKG_COMMIT_ID: 'ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74'\n cache:\n-- C:\\tools\\vcpkg\\installed -> .appveyor.yml\n-- C:\\Users\\appveyor\\clcache -> .appveyor.yml, build_msvc\\**, **\\Makefile.am, **\\*.vcxproj.in\n+- C:\\tools\\vcpkg\\installed -> build_msvc\\vcpkg-packages.txt\n+- C:\\Qt5.9.8_x64_static_vs2019\n install:\n-- cmd: pip install --quiet git+https://github.com/frerich/clcache.git@v4.2.0\n # Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n # - cmd: pip install zmq\n-- cmd: echo set(VCPKG_BUILD_TYPE release) >> C:\\tools\\vcpkg\\triplets\\%PLATFORM%-windows-static.cmake\n-- cmd: vcpkg remove --outdated --recurse\n-- cmd: vcpkg install --triplet %PLATFORM%-windows-static %PACKAGES% > NUL\n+# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n+# 1. Check whether the vcpkg install directory exists (note that updating the vcpkg-packages.txt file\n+#    will cause the appveyor cache rules to invalidate the directory)\n+# 2. If the directory is missing:\n+#    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n+#    b. Install the missing packages.\n+- ps: |\n+      $env:PACKAGES = Get-Content -Path build_msvc\\vcpkg-packages.txt\n+      Write-Host \"vcpkg list: $env:PACKAGES\"\n+      if(!(Test-Path -Path ($env:VCPKG_INSTALL_PATH))) {\n+          cd c:\\tools\\vcpkg\n+          $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n+          git pull origin master\n+          git checkout $env:VCPKG_COMMIT_ID\n+          .\\bootstrap-vcpkg.bat\n+          Add-Content \"C:\\tools\\vcpkg\\triplets\\$env:PLATFORM-windows-static.cmake\" \"set(VCPKG_BUILD_TYPE release)\"\n+          .\\vcpkg install --triplet $env:PLATFORM-windows-static $env:PACKAGES.split() > $null\n+          cd \"$env:APPVEYOR_BUILD_FOLDER\"\n+      }\n+      else {\n+        Write-Host \"required vcpkg packages already installed.\"\n+      }\n+      c:\\tools\\vcpkg\\vcpkg integrate install\n before_build:\n-- ps:  clcache -M 536870912\n+# Powershell block below is to download and extract the Qt static libraries. The pseudo code is:\n+# 1. If the Qt destination directory exists assume it is correct and do nothing. To\n+#    force a fresh install of the packages delete the job's appveyor cache.\n+# 2. Otherwise:\n+#    a. Download the zip file with the prebuilt Qt static libraries.\n+#    b. Check that the downloaded file matches the expected hash.\n+#    c. Extract the zip file to the specific destination path expected by the msbuild projects.\n+- ps: |\n+      if(!(Test-Path -Path ($env:QT_LOCAL_PATH))) {\n+        Write-Host \"Downloading Qt binaries.\";\n+        Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;\n+        Write-Host \"Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...\";\n+        if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {\n+          Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;\n+          Write-Host \"Qt binary download matched the expected hash.\";\n+        }\n+        else {\n+          Write-Host \"ERROR: Qt binary download did not match the expected hash.\";\n+          Exit-AppveyorBuild;\n+        }\n+      }\n+      else {\n+         Write-Host \"Qt binaries already present.\";\n+      }\n - cmd: python build_msvc\\msvc-autogen.py\n-- ps:  $files = (Get-ChildItem -Recurse | where {$_.extension -eq \".vcxproj\"}).FullName\n-- ps:  for (${i} = 0; ${i} -lt ${files}.length; ${i}++) {\n-           ${content} = (Get-Content ${files}[${i}]);\n-           ${content} = ${content}.Replace(\"</RuntimeLibrary>\", \"</RuntimeLibrary><DebugInformationFormat>None</DebugInformationFormat>\");\n-           ${content} = ${content}.Replace(\"<WholeProgramOptimization>true\", \"<WholeProgramOptimization>false\");\n-           Set-Content ${files}[${i}] ${content};\n-       }\n-- ps:  Start-Process clcache-server\n-- ps:  fsutil behavior set disablelastaccess 0 # Enable Access time feature on Windows (for clcache)\n build_script:\n-- cmd: msbuild /p:TrackFileAccess=false /p:CLToolExe=clcache.exe build_msvc\\bitcoin.sln /m /v:n /nologo\n+- cmd: msbuild /p:TrackFileAccess=false build_msvc\\bitcoin.sln /m /v:q /nologo\n after_build:\n-- ps:  fsutil behavior set disablelastaccess 1 # Disable Access time feature on Windows (better performance)\n-- ps:  clcache -z\n+#- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n test_script:\n-- cmd: src\\test_bitcoin.exe -k stdout -e stdout 2> NUL\n+- cmd: src\\test_bitcoin.exe -l test_suite\n - cmd: src\\bench_bitcoin.exe -evals=1 -scaling=0 > NUL\n - ps:  python test\\util\\bitcoin-util-test.py\n - cmd: python test\\util\\rpcauth-test.py\n-- cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast\n+# Fee estimation test failing on appveyor with: WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted.\n+# functional tests disabled for now. See\n+# https://github.com/bitcoin/bitcoin/pull/18626#issuecomment-613396202\n+# https://github.com/bitcoin/bitcoin/issues/18623\n+# - cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast --exclude feature_fee_estimation\n+artifacts:\n+#- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n deploy: off"
      },
      {
        "sha": "b839bfa5fb33fd866e933b162e8e4df573caf5c4",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,21 +1,22 @@\n task:\n-  name: \"FreeBsd 12.0 amd64  [GOAL: install]  [no depends, only system libs]\"\n+  name: \"FreeBsd 12.1 amd64  [GOAL: install]  [no depends, only system libs]\"\n   freebsd_instance:\n-    image: freebsd-12-0-release-amd64\n+    image_family: freebsd-12-1  # https://cirrus-ci.org/guide/FreeBSD/\n     cpu: 8\n     memory: 8G\n   timeout_in: 60m\n   env:\n     MAKEJOBS: \"-j9\"\n     CONFIGURE_OPTS: \"--disable-dependency-tracking\"\n     GOAL: \"install\"\n+    TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n     CCACHE_SIZE: \"200M\"\n     CCACHE_COMPRESS: 1\n     CCACHE_DIR: \"/tmp/ccache_dir\"\n   ccache_cache:\n     folder: \"/tmp/ccache_dir\"\n   install_script:\n-    - pkg install -y autoconf automake boost-libs git gmake libevent libtool openssl pkgconf python3 ccache\n+    - pkg install -y autoconf automake boost-libs git gmake libevent libtool pkgconf python3 ccache\n     - ./contrib/install_db4.sh $(pwd)\n     - ccache --max-size=${CCACHE_SIZE}\n   configure_script:\n@@ -27,6 +28,21 @@ task:\n     - gmake check ${MAKEJOBS} VERBOSE=1\n   functional_test_script:\n     - ./test/functional/test_runner.py --jobs 9 --ci --extended --exclude feature_dbcrash --combinedlogslen=1000 --quiet --failfast\n+#task:\n+#  name: \"Windows\"\n+#  windows_container:\n+#    image: cirrusci/windowsservercore:2019\n+#  env:\n+#    CIRRUS_SHELL: powershell\n+#    PATH: 'C:\\Python37;C:\\Python37\\Scripts;%PATH%'\n+#    PYTHONUTF8: 1\n+#    QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n+#    QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+#    QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n+#    VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n+#    VCPKG_COMMIT_ID: 'ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74'\n+#  install_script:\n+#    - choco install python --version=3.7.7 -y\n task:\n   name: \"x86_64 Linux  [GOAL: install]  [bionic]  [Using ./ci/ system]\"\n   container:\n@@ -36,15 +52,14 @@ task:\n   timeout_in: 60m\n   env:\n     MAKEJOBS: \"-j9\"\n-    RUN_CI_ON_HOST: \"1\"\n+    DANGER_RUN_CI_ON_HOST: \"1\"\n+    TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n     CCACHE_SIZE: \"200M\"\n     CCACHE_DIR: \"/tmp/ccache_dir\"\n   ccache_cache:\n     folder: \"/tmp/ccache_dir\"\n   depends_built_cache:\n     folder: \"/tmp/cirrus-ci-build/depends/built\"\n-  depends_sdk_cache:\n-    folder: \"/tmp/cirrus-ci-build/depends/sdk-sources\"\n   install_script:\n     - apt-get update\n     - apt-get -y install git bash ccache"
      },
      {
        "sha": "35b42424adb3fec05b52b44da20382f0b3abd5dc",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -17,7 +17,7 @@ If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, p\n \n <!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n \n-<!-- For the GUI-related issue on Linux provide names and versions of a distro, a desktop environment and a graphical shell (if relevant). -->\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n \n <!-- Any extra information that might be useful in the debugging process. -->\n <!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,41 @@\n+---\n+name: Bug report\n+about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n+title: ''\n+labels: Bug\n+assignees: ''\n+\n+---\n+\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n+\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n+\n+<!-- Describe the issue -->\n+\n+**Expected behavior**\n+\n+<!--- What behavior did you expect? -->\n+\n+**Actual behavior**\n+\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+\n+**To reproduce**\n+\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+\n+**System information**\n+\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n+\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "2d5685185ea3621cb9c7d83e62a628468cb9f786",
        "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/ISSUE_TEMPLATE/feature_request.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/ISSUE_TEMPLATE/feature_request.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Feature request\n+about: Suggest an idea for this project\n+title: ''\n+labels: Feature\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n+\n+**Describe the solution you'd like**\n+<!-- A clear and concise description of what you want to happen. -->\n+\n+**Describe alternatives you've considered**\n+<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n+\n+**Additional context**\n+<!-- Add any other context or screenshots about the feature request here. -->"
      },
      {
        "sha": "c441f7a307a97fb5be00e67267f60f63b51c6a90",
        "filename": ".github/ISSUE_TEMPLATE/good_first_issue.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/good_first_issue.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,21 @@\n+---\n+name: Good first issue\n+about: '(Regular devs only): Suggest a new good first issue'\n+title: ''\n+labels: good first issue\n+assignees: ''\n+\n+---\n+\n+\n+#### Useful skills:\n+\n+<!-- (For example, \u201cC++11 std::thread\u201d, \u201cQt5 GUI and async GUI design\u201d or \u201cbasic understanding of Bitcoin mining and the Bitcoin Core RPC interface\u201d.) -->\n+\n+#### Want to work on this issue?\n+\n+The purpose of the `good first issue` label is to highlight which issues are suitable for a new contributor without a deep understanding of the codebase.\n+\n+You do not need to request permission to start working on this. You are encouraged to comment on the issue if you are planning to work on it. This will help other contributors monitor which issues are actively being addressed and is also an effective way to request assistance if and when you need it.\n+\n+For guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request."
      },
      {
        "sha": "d2c3b233751f8f0c189e143ba2c379cd0c35a631",
        "filename": ".github/PULL_REQUEST_TEMPLATE.md",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/PULL_REQUEST_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.github/PULL_REQUEST_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,9 +1,14 @@\n+<!--\n+*** Please remove the following help text before submitting: ***\n+\n Pull requests without a rationale and clear improvement may be closed\n immediately.\n+-->\n \n+<!--\n Please provide clear motivation for your patch and explain how it improves\n Bitcoin Core user experience or Bitcoin Core developer experience\n-significantly.\n+significantly:\n \n * Any test improvements or new tests that improve coverage are always welcome.\n * All other changes should have accompanying unit tests (see `src/test/`) or\n@@ -24,8 +29,11 @@ significantly.\n   is often a subjective matter. Unless they are explicitly mentioned to be\n   preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n   changes are usually rejected.\n+-->\n \n+<!--\n Bitcoin Core has a thorough review process and even the most trivial change\n needs to pass a lot of eyes and requires non-zero or even substantial time\n effort to review. There is a huge lack of active reviewers on the project, so\n patches often sit for a long time.\n+-->"
      },
      {
        "sha": "1c487f43a7e3bd15f2de6c7a826596bfab0bd96f",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -7,8 +7,9 @@ src/bitcoind\n src/bitcoin-cli\n src/bitcoin-tx\n src/bitcoin-wallet\n+src/test/fuzz\n+!src/test/fuzz/*.*\n src/test/test_bitcoin\n-src/test/test_bitcoin_fuzzy\n src/qt/test/test_bitcoin-qt\n \n # autoreconf\n@@ -28,6 +29,7 @@ build-aux/m4/ltversion.m4\n build-aux/missing\n build-aux/compile\n build-aux/test-driver\n+config.cache\n config.log\n config.status\n configure\n@@ -88,7 +90,7 @@ src/qt/bitcoin-qt.includes\n *.qm\n Makefile\n !depends/Makefile\n-bitcoin-qt\n+src/qt/bitcoin-qt\n Bitcoin-Qt.app\n background.tiff*\n \n@@ -106,6 +108,9 @@ qrc_*.cpp\n .DS_Store\n build\n \n+# Previous releases\n+releases\n+\n #lcov\n *.gcno\n *.gcda"
      },
      {
        "sha": "63e502cc3e43612da6b9e2e0bf9020f0cc0c5fcb",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 92,
        "deletions": 32,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -25,23 +25,29 @@\n # [1] https://docs.travis-ci.com/user/caching/#build-phases\n # [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts\n \n+version: ~> 1.0\n+\n dist: xenial\n os: linux\n language: minimal\n+arch: amd64\n cache:\n   ccache: true\n   directories:\n     - $TRAVIS_BUILD_DIR/depends/built\n     - $TRAVIS_BUILD_DIR/depends/sdk-sources\n-    - $HOME/.ccache\n+    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n+    - $TRAVIS_BUILD_DIR/releases/$HOST\n+before_cache:\n+  - if [ \"${TRAVIS_OS_NAME}\" = \"osx\" ]; then brew cleanup; fi\n stages:\n   - lint\n   - test\n-  - extended-lint\n env:\n   global:\n     - CI_RETRY_EXE=\"travis_retry\"\n-    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved.\"\n+    - CI_WAIT=\"while sleep 500; do echo .; done\"\n+    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved.\"\n before_install:\n   - set -o errexit; source ./ci/test/00_setup_env.sh\n   - set -o errexit; source ./ci/test/03_before_install.sh\n@@ -65,7 +71,7 @@ jobs:\n     - stage: lint\n       name: 'lint'\n       env:\n-      cache: false\n+      cache: pip\n       language: python\n       python: '3.5' # Oldest supported version according to doc/dependencies.md\n       install:\n@@ -75,65 +81,119 @@ jobs:\n       script:\n         - set -o errexit; source ./ci/lint/06_script.sh\n \n-    - stage: extended-lint\n-      name: 'extended lint [runtime >= 60 seconds]'\n-      env:\n-      cache: false\n-      language: python\n-      python: '3.5'\n-      install:\n-        - set -o errexit; source ./ci/extended_lint/04_install.sh\n-      before_script:\n-        - set -o errexit; source ./ci/lint/05_before_script.sh\n-      script:\n-        - set -o errexit; source ./ci/extended_lint/06_script.sh\n-\n     - stage: test\n-      name: 'ARM  [GOAL: install]  [no unit or functional tests]'\n+      name: 'ARM  [GOAL: install]  [buster]  [unit tests, functional tests]'\n+      arch: arm64  # Can disable QEMU_USER_CMD and run the tests natively without qemu\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n+        QEMU_USER_CMD=\"\"\n \n     - stage: test\n-      name: 'Win64  [GOAL: deploy]  [no gui or functional tests]'\n+      name: 's390x native BE [GOAL: install] [bionic] [no depends, no GUI]'\n+      arch: s390x\n+      dist: bionic\n+      addons:\n+        apt:\n+          packages:\n+            - bsdmainutils\n+            - libboost-filesystem-dev\n+            - libboost-system-dev\n+            - libboost-test-dev\n+            - libboost-thread-dev\n+            - libdb++-dev\n+            - libdb-dev\n+            - libevent-dev\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n+        DANGER_RUN_CI_ON_HOST=true\n+        CI_USE_APT_INSTALL=no\n+        FILE_ENV=\"./ci/test/00_setup_env_s390x_host.sh\"\n+\n+# s390 build was disabled temporarily because of disk space issues on the Travis VM\n+#\n+#    - stage: test\n+#      name: 'S390x  [GOAL: install]  [buster]  [unit tests, functional tests]'\n+#      arch: s390x  # Can disable QEMU_USER_CMD and run the tests natively without qemu\n+#      env: >-\n+#        FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\"\n+#        QEMU_USER_CMD=\"\"\n \n     - stage: test\n-      name: '32-bit + dash  [GOAL: install]  [GUI: no BIP70]'\n+      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no functional tests]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_i686.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n \n     - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'\n+      name: '32-bit + dash  [GOAL: install]  [CentOS 7]  [gui]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_amd64_qt5.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_i686_centos.sh\"\n \n     - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no functional tests, no depends, only system libs]'\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [C++17, previous releases, uses qt5 dev package and some depends packages] [unsigned char]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_amd64_trusty.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_qt5.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_amd64_tsan.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_tsan.sh\"\n+        TEST_RUNNER_EXTRA=\"--exclude feature_block\"  # Not enough memory on travis machines\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_amd64_asan.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_asan.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, valgrind]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_valgrind.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, sanitizers: fuzzer,address,undefined]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_fuzz.sh\"\n \n     - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: fuzzer,address]'\n+      name: 'x86_64 Linux  [GOAL: install]  [focal]  [no depends, only system libs, fuzzers under valgrind]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_amd64_fuzz.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_fuzz_with_valgrind.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no wallet]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_amd64_nowallet.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n \n     - stage: test\n-      name: 'macOS 10.10  [GOAL: deploy] [no functional tests]'\n+      name: 'macOS 10.12  [GOAL: deploy] [no functional tests]'\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_mac.sh\"\n+\n+    - stage: test\n+      name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n+      os: osx\n+      # Use the most recent version:\n+      # Xcode 11.3.1, macOS 10.14, SDK 10.15\n+      # https://docs.travis-ci.com/user/reference/osx/#macos-version\n+      osx_image: xcode11.3\n+      cache:\n+        directories:\n+          - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n+          - $TRAVIS_BUILD_DIR/releases/$HOST\n+          - $HOME/Library/Caches/Homebrew\n+          - /usr/local/Homebrew\n+      addons:\n+        homebrew:\n+          packages:\n+          - libtool\n+          - berkeley-db4\n+          - boost\n+          - miniupnpc\n+          - qt\n+          - qrencode\n+          - python3\n+          - ccache\n+          - zeromq\n+      env: >-\n+        DANGER_RUN_CI_ON_HOST=true\n+        CI_USE_APT_INSTALL=no\n+        FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "cd9e237158bc91391db65221aa794d0bab450c04",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-018x]\n+[bitcoin.qt-translation-020x]\n file_filter = src/qt/locale/bitcoin_<lang>.ts\n source_file = src/qt/locale/bitcoin_en.ts\n source_lang = en"
      },
      {
        "sha": "7216db0500124f02f2477aab6e1b307ce0685fc2",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 73,
        "deletions": 33,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -16,7 +16,7 @@ release cycle, overall merging, moderation and appointment of maintainers.\n \n If you're looking for somewhere to start contributing, check out the\n [good first issue](https://github.com/bitcoin/bitcoin/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n-list.\n+list or participate in a weekly [Bitcoin Core PR Review Club](https://bitcoincore.reviews/) meeting.\n \n Communication Channels\n ----------------------\n@@ -46,15 +46,15 @@ facilitates social contribution, easy testing and peer review.\n \n To contribute a patch, the workflow is as follows:\n \n-  1. Fork repository\n+  1. Fork repository ([only for the first time](https://help.github.com/en/articles/fork-a-repo))\n   1. Create topic branch\n   1. Commit patches\n \n The project coding conventions in the [developer notes](doc/developer-notes.md)\n-must be adhered to.\n+must be followed.\n \n-In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n-and diffs should be easy to read. For this reason do not mix any formatting\n+In general, [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n+and diffs should be easy to read. For this reason, do not mix any formatting\n fixes or code moves with actual code changes.\n \n Commit messages should be verbose by default consisting of a short subject line\n@@ -79,27 +79,28 @@ about Git.\n The title of the pull request should be prefixed by the component or area that\n the pull request affects. Valid areas as:\n \n-  - *Consensus* for changes to consensus critical code\n-  - *Doc* for changes to the documentation\n-  - *Qt* for changes to bitcoin-qt\n-  - *Log* Changes to log messages\n-  - *Mining* for changes to the mining code\n-  - *Net* or *P2P* for changes to the peer-to-peer network code\n-  - *Refactor* for structural changes that do not change behavior\n-  - *RPC/REST/ZMQ* for changes to the RPC, REST or ZMQ APIs\n-  - *Scripts and tools* for changes to the scripts and tools\n-  - *Test* for changes to the bitcoin unit tests or QA tests\n-  - *Utils and libraries* for changes to the utils and libraries\n-  - *Wallet* for changes to the wallet code\n+  - `consensus` for changes to consensus critical code\n+  - `doc` for changes to the documentation\n+  - `qt` or `gui` for changes to bitcoin-qt\n+  - `log` for changes to log messages\n+  - `mining` for changes to the mining code\n+  - `net` or `p2p` for changes to the peer-to-peer network code\n+  - `refactor` for structural changes that do not change behavior\n+  - `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n+  - `script` for changes to the scripts and tools\n+  - `test`, `qa` or `ci` for changes to the unit tests, QA tests or CI code\n+  - `util` or `lib` for changes to the utils or libraries\n+  - `wallet` for changes to the wallet code\n+  - `build` for changes to the GNU Autotools or reproducible builds\n \n Examples:\n \n-    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n-    Net: Automatically create hidden service, listen on Tor\n-    Qt: Add feed bump button\n-    Log: Fix typo in log message\n+    consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    net: Automatically create hidden service, listen on Tor\n+    qt: Add feed bump button\n+    log: Fix typo in log message\n \n-Note that translations should not be submitted as pull requests, please see\n+Note that translations should not be submitted as pull requests. Please see\n [Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md)\n for more information on helping with translations.\n \n@@ -112,16 +113,16 @@ patch does together with any justification/reasoning. You should include\n references to any discussions (for example other tickets or mailing list\n discussions).\n \n-At this stage one should expect comments and review from other contributors. You\n+At this stage, one should expect comments and review from other contributors. You\n can add more commits to your pull request by committing them locally and pushing\n to your fork until you have satisfied all feedback.\n \n-Note: Code review is a burdensome but important part of the development process, and as such, certain types of pull requests are rejected. In general, if the **improvements** do not warrant the **review effort** required, the PR has a high chance of being rejected. It is up to the PR author to convince the reviewers that the changes warrant the review effort, and if reviewers are \"Concept NAK'ing\" the PR, the author may need to present arguments and/or do research backing their suggested changes.\n+Note: Code review is a burdensome but important part of the development process, and as such, certain types of pull requests are rejected. In general, if the **improvements** do not warrant the **review effort** required, the PR has a high chance of being rejected. It is up to the PR author to convince the reviewers that the changes warrant the review effort, and if reviewers are \"Concept NACK'ing\" the PR, the author may need to present arguments and/or do research backing their suggested changes.\n \n-Squashing Commits\n----------------------------\n-If your pull request is accepted for merging, you may be asked by a maintainer\n-to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits\n+### Squashing Commits\n+\n+If your pull request contains fixup commits (commits that change the same line of code repeatedly) or too fine-grained\n+commits, you may be asked to [squash](https://git-scm.com/docs/git-rebase#_interactive_mode) your commits\n before it will be merged. The basic squashing workflow is shown below.\n \n     git checkout your_branch_name\n@@ -132,8 +133,8 @@ before it will be merged. The basic squashing workflow is shown below.\n     # Save and quit.\n     git push -f # (force push to GitHub)\n \n-Please update the resulting commit message if needed, it should read as a\n-coherent message. In most cases this means that you should not just list the\n+Please update the resulting commit message if needed. It should read as a\n+coherent message. In most cases, this means that you should not just list the\n interim commits.\n \n If you have problems with squashing (or other workflows with `git`), you can\n@@ -148,6 +149,20 @@ the respective change set.\n The length of time required for peer review is unpredictable and will vary from\n pull request to pull request.\n \n+### Rebasing Changes\n+\n+When a pull request conflicts with the target branch, you may be asked to rebase it on top of the current target branch.\n+The `git rebase` command will take care of rebuilding your commits on top of the new base.\n+\n+This project aims to have a clean git history, where code changes are only made in non-merge commits. This simplifies\n+auditability because merge commits can be assumed to not contain arbitrary code changes. Merge commits should be signed,\n+and the resulting git tree hash must be deterministic and reproducible. The script in\n+[/contrib/verify-commits](/contrib/verify-commits) checks that.\n+\n+After a rebase, reviewers are encouraged to sign off on the force push. This should be relatively straightforward with\n+the `git range-diff` tool explained in the [productivity\n+notes](/doc/productivity.md#diff-the-diffs-with-git-range-diff). To avoid needless review churn, maintainers will\n+generally merge pull requests that received the most review attention first.\n \n Pull Request Philosophy\n -----------------------\n@@ -172,9 +187,9 @@ in the future, they may be removed by the Repository Maintainer.\n Refactoring is a necessary part of any software project's evolution. The\n following guidelines cover refactoring pull requests for the project.\n \n-There are three categories of refactoring, code only moves, code style fixes,\n-code refactoring. In general refactoring pull requests should not mix these\n-three kinds of activity in order to make refactoring pull requests easy to\n+There are three categories of refactoring: code-only moves, code style fixes, and\n+code refactoring. In general, refactoring pull requests should not mix these\n+three kinds of activities in order to make refactoring pull requests easy to\n review and uncontroversial. In all cases, refactoring PRs must not change the\n behaviour of code within the pull request (bugs must be preserved as is).\n \n@@ -308,6 +323,31 @@ about:\n     when someone else is asking for feedback on their code, and universe balances out.\n \n \n+Backporting\n+-----------\n+\n+Security and bug fixes can be backported from `master` to release\n+branches.\n+If the backport is non-trivial, it may be appropriate to open an\n+additional PR, to backport the change, only after the original PR\n+has been merged.\n+Otherwise, backports will be done in batches and\n+the maintainers will use the proper `Needs backport (...)` labels\n+when needed (the original author does not need to worry).\n+\n+A backport should contain the following metadata in the commit body:\n+\n+```\n+Github-Pull: #<PR number>\n+Rebased-From: <commit hash of the original commit>\n+```\n+\n+Have a look at [an example backport PR](\n+https://github.com/bitcoin/bitcoin/pull/16189).\n+\n+Also see the [backport.py script](\n+https://github.com/bitcoin-core/bitcoin-maintainer-tools#backport).\n+\n Release Policy\n --------------\n "
      },
      {
        "sha": "461bc7310041c45132d6354aa2d87f23ac7a2faf",
        "filename": "COPYING",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,7 +1,7 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2019 The Bitcoin Core developers\n-Copyright (c) 2009-2019 Bitcoin Developers\n+Copyright (c) 2009-2020 The Bitcoin Core developers\n+Copyright (c) 2009-2020 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "43790f1c23c54da8de954e28846b1aeb4243856f",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 46,
        "deletions": 16,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,7 +1,11 @@\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+# Pattern rule to print variables, e.g. make print-top_srcdir\n+print-%:\n+\t@echo $* = $($*)\n+\n ACLOCAL_AMFLAGS = -I build-aux/m4\n SUBDIRS = src\n if ENABLE_MAN\n@@ -21,7 +25,7 @@ BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n BITCOIN_TX_BIN=$(top_builddir)/src/$(BITCOIN_TX_NAME)$(EXEEXT)\n BITCOIN_WALLET_BIN=$(top_builddir)/src/$(BITCOIN_WALLET_TOOL_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win64-setup$(EXEEXT)\n \n empty :=\n space := $(empty) $(empty)\n@@ -39,13 +43,10 @@ OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n-DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n-DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n-\t       $(top_srcdir)/contrib/debian/copyright \\\n-\t       $(top_srcdir)/contrib/init \\\n-\t       $(top_srcdir)/contrib/install_db4.sh\n+DIST_CONTRIB = \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n+\n DIST_SHARE = \\\n   $(top_srcdir)/share/genbuild.sh \\\n   $(top_srcdir)/share/rpcauth\n@@ -67,7 +68,7 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n COVERAGE_INFO = baseline.info \\\n   test_bitcoin_filtered.info total_coverage.info \\\n   baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  test_bitcoin_coverage.info test_bitcoin.info\n+  test_bitcoin_coverage.info test_bitcoin.info fuzz.info fuzz_coverage.info\n \n dist-hook:\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n@@ -79,7 +80,7 @@ $(BITCOIN_WIN_INSTALLER): all-recursive\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_TX_BIN) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_WALLET_BIN) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n+\t@test -f $(MAKENSIS) && echo 'OutFile \"$@\"' | cat $(top_builddir)/share/setup.nsi - | $(MAKENSIS) -V2 - || \\\n \t  echo error: could not build $@\n \t@echo built $@\n \n@@ -89,7 +90,7 @@ $(OSX_APP)/Contents/PkgInfo:\n \n $(OSX_APP)/Contents/Resources/empty.lproj:\n \t$(MKDIR_P) $(@D)\n-\t@touch $@ \n+\t@touch $@\n \n $(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n \t$(MKDIR_P) $(@D)\n@@ -179,7 +180,17 @@ $(BITCOIN_WALLET_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n if USE_LCOV\n-LCOV_FILTER_PATTERN=-p \"/usr/include/\" -p \"/usr/lib/\" -p \"src/leveldb/\" -p \"src/bench/\" -p \"src/univalue\" -p \"src/crypto/ctaes\" -p \"src/secp256k1\"\n+LCOV_FILTER_PATTERN = \\\n+\t-p \"/usr/include/\" \\\n+\t-p \"/usr/lib/\" \\\n+\t-p \"/usr/lib64/\" \\\n+\t-p \"src/leveldb/\" \\\n+\t-p \"src/crc32c/\" \\\n+\t-p \"src/bench/\" \\\n+\t-p \"src/univalue\" \\\n+\t-p \"src/crypto/ctaes\" \\\n+\t-p \"src/secp256k1\" \\\n+\t-p \"depends\"\n \n baseline.info:\n \t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n@@ -188,6 +199,15 @@ baseline_filtered.info: baseline.info\n \t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n \t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n+fuzz.info: baseline_filtered.info\n+\t@TIMEOUT=15 test/fuzz/test_runner.py qa-assets/fuzz_seed_corpus -l DEBUG\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t fuzz-tests -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n+\n+fuzz_filtered.info: fuzz.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n+\n test_bitcoin.info: baseline_filtered.info\n \t$(MAKE) -C src/ check\n \t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n@@ -206,12 +226,19 @@ functional_test_filtered.info: functional_test.info\n \t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n \t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n+fuzz_coverage.info: fuzz_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a fuzz_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n \t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n \t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n+fuzz.coverage/.dirstamp: fuzz_coverage.info\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n+\t@touch $@\n+\n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n \t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n@@ -220,13 +247,15 @@ total.coverage/.dirstamp: total_coverage.info\n \t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n+cov_fuzz: fuzz.coverage/.dirstamp\n+\n cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n \n endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(DIST_SHARE) $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+EXTRA_DIST = $(DIST_SHARE) $(DIST_CONTRIB) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n \n EXTRA_DIST += \\\n     test/functional \\\n@@ -281,6 +310,8 @@ EXTRA_DIST += \\\n     test/util/data/txcreatescript3.json \\\n     test/util/data/txcreatescript4.hex \\\n     test/util/data/txcreatescript4.json \\\n+    test/util/data/txcreatescript5.hex \\\n+    test/util/data/txcreatescript6.hex \\\n     test/util/data/txcreatesignv1.hex \\\n     test/util/data/txcreatesignv1.json \\\n     test/util/data/txcreatesignv2.hex \\\n@@ -308,7 +339,6 @@ clean-docs:\n \trm -rf doc/doxygen\n \n clean-local: clean-docs\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ fuzz.coverage/ test/tmp/ cache/ $(OSX_APP)\n \trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n \trm -rf osx_volname dist/ dpi36.background.tiff dpi72.background.tiff\n-"
      },
      {
        "sha": "9213471c414417f64e1503581e5d521b62b7098d",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -12,7 +12,7 @@ with no central authority: managing transactions and issuing money are carried\n out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n-For more information, as well as an immediately useable, binary version of\n+For more information, as well as an immediately usable, binary version of\n the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n@@ -25,7 +25,7 @@ information or see https://opensource.org/licenses/MIT.\n Development Process\n -------------------\n \n-The `master` branch is regularly built and tested, but is not guaranteed to be\n+The `master` branch is regularly built (see doc/build-*.md for instructions) and tested, but is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n regularly to indicate new official, stable release versions of Bitcoin Core.\n "
      },
      {
        "sha": "de16260b563279aea0ae038ecd4250964e8bd540",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,13 +1,13 @@\n #!/bin/sh\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C\n set -e\n-srcdir=\"$(dirname $0)\"\n+srcdir=\"$(dirname \"$0\")\"\n cd \"$srcdir\"\n-if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n+if [ -z \"${LIBTOOLIZE}\" ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n   LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n   export LIBTOOLIZE\n fi"
      },
      {
        "sha": "2ae33f71402aaf6a4c70212f3493354ecfb01ec8",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -33,7 +33,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 45\n+#serial 48\n \n # example boost program (need to pass version)\n m4_define([_AX_BOOST_BASE_PROGRAM],\n@@ -113,6 +113,7 @@ AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n     dnl are found, e.g. when only header-only libraries are installed!\n     AS_CASE([${host_cpu}],\n       [x86_64],[libsubdirs=\"lib64 libx32 lib lib64\"],\n+      [mips*64*],[libsubdirs=\"lib64 lib32 lib lib64\"],\n       [ppc64|powerpc64|s390x|sparc64|aarch64|ppc64le|powerpc64le|riscv64],[libsubdirs=\"lib64 lib lib64\"],\n       [libsubdirs=\"lib\"]\n     )\n@@ -122,6 +123,7 @@ AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n     dnl are almost assuredly the ones desired.\n     AS_CASE([${host_cpu}],\n       [i?86],[multiarch_libsubdir=\"lib/i386-${host_os}\"],\n+      [armv7l],[multiarch_libsubdir=\"lib/arm-${host_os}\"],\n       [multiarch_libsubdir=\"lib/${host_cpu}-${host_os}\"]\n     )\n "
      },
      {
        "sha": "6ea77b9b3eff0290afa7de7dbb18670dfede735c",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 118,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,118 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_CHRONO\n-#\n-# DESCRIPTION\n-#\n-#   Test for Chrono library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CHRONO_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_CHRONO\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 4\n-\n-AC_DEFUN([AX_BOOST_CHRONO],\n-[\n-\tAC_ARG_WITH([boost-chrono],\n-\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n-                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_chrono_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_chrono_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n-\t\t\t\t\t   ax_cv_boost_chrono,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n-                                   [[boost::chrono::system_clock::time_point* time = new boost::chrono::system_clock::time_point; delete time;]])],\n-                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n-                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_chrono\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                   [link_chrono=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n-            fi\n-\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 26\n+#serial 28\n \n AC_DEFUN([AX_BOOST_FILESYSTEM],\n [\n@@ -80,7 +80,6 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n \t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            ax_lib=\n             if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n                      ax_lib=${libextension}\n@@ -105,7 +104,7 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n             fi\n \t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 19\n+#serial 20\n \n AC_DEFUN([AX_BOOST_SYSTEM],\n [\n@@ -108,7 +108,7 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n             fi\n \t\t\tif test \"x$link_system\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "e9dea4353556e1a4135122bac13561ed88a95743",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "modified",
        "additions": 83,
        "deletions": 70,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -30,121 +30,134 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 27\n+#serial 32\n \n AC_DEFUN([AX_BOOST_THREAD],\n [\n-\tAC_ARG_WITH([boost-thread],\n-\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+    AC_ARG_WITH([boost-thread],\n+    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost -\n+                    it is possible to specify a certain library for the linker\n+                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n         [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n+        if test \"$withval\" = \"yes\"; then\n             want_boost=\"yes\"\n             ax_boost_user_thread_lib=\"\"\n         else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_thread_lib=\"$withval\"\n-\t\tfi\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"$withval\"\n+        fi\n         ],\n         [want_boost=\"yes\"]\n-\t)\n+    )\n \n-\tif test \"x$want_boost\" = \"xyes\"; then\n+    if test \"x$want_boost\" = \"xyes\"; then\n         AC_REQUIRE([AC_PROG_CC])\n         AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n+        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n \n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n+        LDFLAGS_SAVED=\"$LDFLAGS\"\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n \n         AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-\t\t\t\t\t   ax_cv_boost_thread,\n+                       ax_cv_boost_thread,\n         [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+             CXXFLAGS_SAVE=$CXXFLAGS\n \n-\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-\t\t\t else\n-\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n-\t\t\t fi\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n-                                   [[boost::thread_group thrds;\n-                                   return 0;]])],\n-                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             if test \"x$host_os\" = \"xsolaris\" ; then\n+                 CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+             elif test \"x$host_os\" = \"xmingw32\" ; then\n+                 CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+             else\n+                CXXFLAGS=\"-pthread $CXXFLAGS\"\n+             fi\n+             AC_COMPILE_IFELSE([\n+                 AC_LANG_PROGRAM(\n+                     [[@%:@include <boost/thread/thread.hpp>]],\n+                     [[boost::thread_group thrds;\n+                       return 0;]])],\n+                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+             CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+        ])\n+        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n            if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-\t\t   else\n-\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-\t\t   fi\n+              BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+           elif test \"x$host_os\" = \"xmingw32\" ; then\n+              BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+           else\n+              BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+           fi\n \n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+            AC_SUBST(BOOST_CPPFLAGS)\n \n-\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            AC_DEFINE(HAVE_BOOST_THREAD,,\n+                      [define if the Boost::Thread library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n \n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            LDFLAGS_SAVE=$LDFLAGS\n                         case \"x$host_os\" in\n                           *bsd* )\n                                LDFLAGS=\"-pthread $LDFLAGS\"\n                           break;\n                           ;;\n                         esac\n             if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n                                  [link_thread=\"no\"])\n-\t\t\t\tdone\n+                done\n                 if test \"x$link_thread\" != \"xyes\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n                                  [link_thread=\"no\"])\n-\t\t\t\tdone\n+                done\n                 fi\n \n             else\n                for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                      AC_CHECK_LIB($ax_lib, exit,\n+                                   [link_thread=\"yes\"; break],\n                                    [link_thread=\"no\"])\n                   done\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n             fi\n-\t\t\tif test \"x$link_thread\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-                        else\n-                           case \"x$host_os\" in\n-                              *bsd* )\n-\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                              break;\n-                              ;;\n-                           esac\n-\n-\t\t\tfi\n-\t\tfi\n+            if test \"x$link_thread\" = \"xno\"; then\n+                AC_MSG_ERROR(Could not link against $ax_lib !)\n+            else\n+                BOOST_THREAD_LIB=\"-l$ax_lib\"\n+                case \"x$host_os\" in\n+                    *bsd* )\n+                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        break;\n+                        ;;\n+                    xsolaris )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                    xmingw32 )\n+                        break;\n+                        ;;\n+                    * )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                esac\n+                AC_SUBST(BOOST_THREAD_LIB)\n+            fi\n+        fi\n \n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+    fi\n ])"
      },
      {
        "sha": "4cca32fcfd6539b53e0a55c02544342d1d03ae75",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 21\n+#serial 22\n \n AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n [\n@@ -124,7 +124,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n                done\n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Unit_Test_Framework library!)\n             fi\n \t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "43087b2e6889ec6f8ebd2f8ba77f4a9a716f8ac2",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "modified",
        "additions": 419,
        "deletions": 36,
        "changes": 455,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n+#  https://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -33,21 +33,23 @@\n #   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n #   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n #   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n+#   Copyright (c) 2016, 2018 Krzesimir Nowak <qdlacz@gmail.com>\n+#   Copyright (c) 2019 Enji Cooper <yaneurabeya@gmail.com>\n #\n #   Copying and distribution of this file, with or without modification, are\n #   permitted in any medium without royalty provided the copyright notice\n #   and this notice are preserved.  This file is offered as-is, without any\n #   warranty.\n \n-#serial 4\n+#serial 11\n \n dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n dnl  (serial version number 13).\n \n AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n-  m4_if([$1], [11], [],\n-        [$1], [14], [],\n-        [$1], [17], [m4_fatal([support for C++17 not yet implemented in AX_CXX_COMPILE_STDCXX])],\n+  m4_if([$1], [11], [ax_cxx_compile_alternatives=\"11 0x\"],\n+        [$1], [14], [ax_cxx_compile_alternatives=\"14 1y\"],\n+        [$1], [17], [ax_cxx_compile_alternatives=\"17 1z\"],\n         [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n   m4_if([$2], [], [],\n         [$2], [ext], [],\n@@ -57,26 +59,13 @@ AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n         [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n         [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n         [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n-  m4_if([$4], [], [ax_cxx_compile_cxx$1_try_default=true],\n-        [$4], [default], [ax_cxx_compile_cxx$1_try_default=true],\n-        [$4], [nodefault], [ax_cxx_compile_cxx$1_try_default=false],\n-        [m4_fatal([invalid fourth argument `$4' to AX_CXX_COMPILE_STDCXX])])\n   AC_LANG_PUSH([C++])dnl\n   ac_success=no\n \n-  m4_if([$4], [nodefault], [], [dnl\n-  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,\n-  ax_cv_cxx_compile_cxx$1,\n-  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-    [ax_cv_cxx_compile_cxx$1=yes],\n-    [ax_cv_cxx_compile_cxx$1=no])])\n-  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then\n-    ac_success=yes\n-  fi])\n-\n   m4_if([$2], [noext], [], [dnl\n   if test x$ac_success = xno; then\n-    for switch in -std=gnu++$1 -std=gnu++0x; do\n+    for alternative in ${ax_cxx_compile_alternatives}; do\n+      switch=\"-std=gnu++${alternative}\"\n       cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n       AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n                      $cachevar,\n@@ -102,22 +91,27 @@ AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n     dnl HP's aCC needs +std=c++11 according to:\n     dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n     dnl Cray's crayCC needs \"-h std=c++11\"\n-    for switch in -std=c++$1 -std=c++0x +std=c++$1 \"-h std=c++$1\"; do\n-      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n-      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n-                     $cachevar,\n-        [ac_save_CXX=\"$CXX\"\n-         CXX=\"$CXX $switch\"\n-         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n-          [eval $cachevar=yes],\n-          [eval $cachevar=no])\n-         CXX=\"$ac_save_CXX\"])\n-      if eval test x\\$$cachevar = xyes; then\n-        CXX=\"$CXX $switch\"\n-        if test -n \"$CXXCPP\" ; then\n-          CXXCPP=\"$CXXCPP $switch\"\n+    for alternative in ${ax_cxx_compile_alternatives}; do\n+      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\"; do\n+        cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                       $cachevar,\n+          [ac_save_CXX=\"$CXX\"\n+           CXX=\"$CXX $switch\"\n+           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+            [eval $cachevar=yes],\n+            [eval $cachevar=no])\n+           CXX=\"$ac_save_CXX\"])\n+        if eval test x\\$$cachevar = xyes; then\n+          CXX=\"$CXX $switch\"\n+          if test -n \"$CXXCPP\" ; then\n+            CXXCPP=\"$CXXCPP $switch\"\n+          fi\n+          ac_success=yes\n+          break\n         fi\n-        ac_success=yes\n+      done\n+      if test x$ac_success = xyes; then\n         break\n       fi\n     done\n@@ -154,6 +148,11 @@ m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n   _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n )\n \n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_17],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_17\n+)\n \n dnl  Tests for new features in C++11\n \n@@ -191,11 +190,13 @@ namespace cxx11\n \n     struct Base\n     {\n+      virtual ~Base() {}\n       virtual void f() {}\n     };\n \n     struct Derived : public Base\n     {\n+      virtual ~Derived() override {}\n       virtual void f() override {}\n     };\n \n@@ -524,7 +525,7 @@ namespace cxx14\n \n   }\n \n-  namespace test_digit_seperators\n+  namespace test_digit_separators\n   {\n \n     constexpr auto ten_million = 100'000'000;\n@@ -566,3 +567,385 @@ namespace cxx14\n #endif  // __cplusplus >= 201402L\n \n ]])\n+\n+\n+dnl  Tests for new features in C++17\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_17], [[\n+\n+// If the compiler admits that it is not ready for C++17, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201703L\n+\n+#error \"This is not a C++17 compiler\"\n+\n+#else\n+\n+#include <initializer_list>\n+#include <utility>\n+#include <type_traits>\n+\n+namespace cxx17\n+{\n+\n+  namespace test_constexpr_lambdas\n+  {\n+\n+    constexpr int foo = [](){return 42;}();\n+\n+  }\n+\n+  namespace test::nested_namespace::definitions\n+  {\n+\n+  }\n+\n+  namespace test_fold_expression\n+  {\n+\n+    template<typename... Args>\n+    int multiply(Args... args)\n+    {\n+      return (args * ... * 1);\n+    }\n+\n+    template<typename... Args>\n+    bool all(Args... args)\n+    {\n+      return (args && ...);\n+    }\n+\n+  }\n+\n+  namespace test_extended_static_assert\n+  {\n+\n+    static_assert (true);\n+\n+  }\n+\n+  namespace test_auto_brace_init_list\n+  {\n+\n+    auto foo = {5};\n+    auto bar {5};\n+\n+    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n+    static_assert(std::is_same<int, decltype(bar)>::value);\n+  }\n+\n+  namespace test_typename_in_template_template_parameter\n+  {\n+\n+    template<template<typename> typename X> struct D;\n+\n+  }\n+\n+  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n+  {\n+\n+    int f1()\n+    {\n+      return 42;\n+    }\n+\n+    [[nodiscard]] int f2()\n+    {\n+      [[maybe_unused]] auto unused = f1();\n+\n+      switch (f1())\n+      {\n+      case 17:\n+        f1();\n+        [[fallthrough]];\n+      case 42:\n+        f1();\n+      }\n+      return f1();\n+    }\n+\n+  }\n+\n+  namespace test_extended_aggregate_initialization\n+  {\n+\n+    struct base1\n+    {\n+      int b1, b2 = 42;\n+    };\n+\n+    struct base2\n+    {\n+      base2() {\n+        b3 = 42;\n+      }\n+      int b3;\n+    };\n+\n+    struct derived : base1, base2\n+    {\n+        int d;\n+    };\n+\n+    derived d1 {{1, 2}, {}, 4};  // full initialization\n+    derived d2 {{}, {}, 4};      // value-initialized bases\n+\n+  }\n+\n+  namespace test_general_range_based_for_loop\n+  {\n+\n+    struct iter\n+    {\n+      int i;\n+\n+      int& operator* ()\n+      {\n+        return i;\n+      }\n+\n+      const int& operator* () const\n+      {\n+        return i;\n+      }\n+\n+      iter& operator++()\n+      {\n+        ++i;\n+        return *this;\n+      }\n+    };\n+\n+    struct sentinel\n+    {\n+      int i;\n+    };\n+\n+    bool operator== (const iter& i, const sentinel& s)\n+    {\n+      return i.i == s.i;\n+    }\n+\n+    bool operator!= (const iter& i, const sentinel& s)\n+    {\n+      return !(i == s);\n+    }\n+\n+    struct range\n+    {\n+      iter begin() const\n+      {\n+        return {0};\n+      }\n+\n+      sentinel end() const\n+      {\n+        return {5};\n+      }\n+    };\n+\n+    void f()\n+    {\n+      range r {};\n+\n+      for (auto i : r)\n+      {\n+        [[maybe_unused]] auto v = i;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_lambda_capture_asterisk_this_by_value\n+  {\n+\n+    struct t\n+    {\n+      int i;\n+      int foo()\n+      {\n+        return [*this]()\n+        {\n+          return i;\n+        }();\n+      }\n+    };\n+\n+  }\n+\n+  namespace test_enum_class_construction\n+  {\n+\n+    enum class byte : unsigned char\n+    {};\n+\n+    byte foo {42};\n+\n+  }\n+\n+  namespace test_constexpr_if\n+  {\n+\n+    template <bool cond>\n+    int f ()\n+    {\n+      if constexpr(cond)\n+      {\n+        return 13;\n+      }\n+      else\n+      {\n+        return 42;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_selection_statement_with_initializer\n+  {\n+\n+    int f()\n+    {\n+      return 13;\n+    }\n+\n+    int f2()\n+    {\n+      if (auto i = f(); i > 0)\n+      {\n+        return 3;\n+      }\n+\n+      switch (auto i = f(); i + 4)\n+      {\n+      case 17:\n+        return 2;\n+\n+      default:\n+        return 1;\n+      }\n+    }\n+\n+  }\n+\n+  namespace test_template_argument_deduction_for_class_templates\n+  {\n+\n+    template <typename T1, typename T2>\n+    struct pair\n+    {\n+      pair (T1 p1, T2 p2)\n+        : m1 {p1},\n+          m2 {p2}\n+      {}\n+\n+      T1 m1;\n+      T2 m2;\n+    };\n+\n+    void f()\n+    {\n+      [[maybe_unused]] auto p = pair{13, 42u};\n+    }\n+\n+  }\n+\n+  namespace test_non_type_auto_template_parameters\n+  {\n+\n+    template <auto n>\n+    struct B\n+    {};\n+\n+    B<5> b1;\n+    B<'a'> b2;\n+\n+  }\n+\n+  namespace test_structured_bindings\n+  {\n+\n+    int arr[2] = { 1, 2 };\n+    std::pair<int, int> pr = { 1, 2 };\n+\n+    auto f1() -> int(&)[2]\n+    {\n+      return arr;\n+    }\n+\n+    auto f2() -> std::pair<int, int>&\n+    {\n+      return pr;\n+    }\n+\n+    struct S\n+    {\n+      int x1 : 2;\n+      volatile double y1;\n+    };\n+\n+    S f3()\n+    {\n+      return {};\n+    }\n+\n+    auto [ x1, y1 ] = f1();\n+    auto& [ xr1, yr1 ] = f1();\n+    auto [ x2, y2 ] = f2();\n+    auto& [ xr2, yr2 ] = f2();\n+    const auto [ x3, y3 ] = f3();\n+\n+  }\n+\n+  namespace test_exception_spec_type_system\n+  {\n+\n+    struct Good {};\n+    struct Bad {};\n+\n+    void g1() noexcept;\n+    void g2();\n+\n+    template<typename T>\n+    Bad\n+    f(T*, T*);\n+\n+    template<typename T1, typename T2>\n+    Good\n+    f(T1*, T2*);\n+\n+    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n+\n+  }\n+\n+  namespace test_inline_variables\n+  {\n+\n+    template<class T> void f(T)\n+    {}\n+\n+    template<class T> inline T g(T)\n+    {\n+      return T{};\n+    }\n+\n+    template<> inline void f<>(int)\n+    {}\n+\n+    template<> int g<>(int)\n+    {\n+      return 5;\n+    }\n+\n+  }\n+\n+}  // namespace cxx17\n+\n+#endif  // __cplusplus < 201703L\n+\n+]])"
      },
      {
        "sha": "aa0111e5a20f0c2bfd7c8de310dd0102ee1a2c6d",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -61,7 +61,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     BDB_CPPFLAGS=${BDB_CFLAGS}\n   fi\n   AC_SUBST(BDB_CPPFLAGS)\n-  \n+\n   if test \"x$BDB_LIBS\" = \"x\"; then\n     # TODO: Ideally this could find the library version and make sure it matches the headers being used\n     for searchlib in db_cxx-4.8 db_cxx db4_cxx; do"
      },
      {
        "sha": "83d054af5ff2ebdd5f4fefd05bc265a09411ea24",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -116,8 +116,10 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   if test \"x$bitcoin_cv_static_qt\" = xyes; then\n     _BITCOIN_QT_FIND_STATIC_PLUGINS\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-    _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n-    AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n+    if test \"x$TARGET_OS\" != xandroid; then\n+       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+       AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n+    fi\n     if test \"x$TARGET_OS\" = xwindows; then\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n       AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n@@ -128,6 +130,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n       AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+    elif test \"x$TARGET_OS\" = xandroid; then\n+      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype -lQt5EglSupport $QT_LIBS\"\n+      AC_DEFINE(QT_QPA_PLATFORM_ANDROID, 1, [Define this symbol if the qt platform is android])\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n@@ -228,7 +233,11 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ],[\n     bitcoin_enable_qt=no\n   ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt5)])\n+  if test x$bitcoin_enable_qt = xyes; then\n+    AC_MSG_RESULT([$bitcoin_enable_qt ($QT_LIB_PREFIX)])\n+  else\n+    AC_MSG_RESULT([$bitcoin_enable_qt])\n+  fi\n \n   AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n@@ -341,6 +350,9 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n       if test -d \"$qt_plugin_path/accessible\"; then\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n       fi\n+      if test -d \"$qt_plugin_path/platforms/android\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n+      fi\n      if test \"x$use_pkgconfig\" = xyes; then\n      : dnl\n      m4_ifdef([PKG_CHECK_MODULES],["
      },
      {
        "sha": "3e71c7b8d3f89d36e17b4a287362199d6bb883bc",
        "filename": "build_msvc/.gitignore",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -8,5 +8,19 @@ packages/*\n */Release\n */x64\n *.vcxproj.user\n-*.vcxproj\n+\n+# .vcxproj files that are auto-generated by the msvc-autogen.py script.\n+libbitcoin_cli/libbitcoin_cli.vcxproj\n+libbitcoin_common/libbitcoin_common.vcxproj\n+libbitcoin_crypto/libbitcoin_crypto.vcxproj\n+libbitcoin_server/libbitcoin_server.vcxproj\n+libbitcoin_util/libbitcoin_util.vcxproj\n+libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj\n+libbitcoin_wallet/libbitcoin_wallet.vcxproj\n+libbitcoin_zmq/libbitcoin_zmq.vcxproj\n+bench_bitcoin/bench_bitcoin.vcxproj\n+libtest_util/libtest_util.vcxproj\n+\n */Win32\n+libbitcoin_qt/QtGeneratedFiles/*\n+test_bitcoin-qt/QtGeneratedFiles/*"
      },
      {
        "sha": "a489fb36b29459a86909f2c407fcc524427af404",
        "filename": "build_msvc/README.md",
        "status": "modified",
        "additions": 57,
        "deletions": 14,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -3,48 +3,91 @@ Building Bitcoin Core with Visual Studio\n \n Introduction\n ---------------------\n-Solution and project files to build the Bitcoin Core applications (except Qt dependent ones) with Visual Studio 2017 can be found in the build_msvc directory.\n+Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the build_msvc directory. The build has been tested with Visual Studio 2017 and 2019.\n \n Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n \n+Quick Start\n+---------------------\n+The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n+\n+```\n+vcpkg install --triplet x64-windows-static berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent[thread] zeromq double-conversion\n+vcpkg integrate install\n+py -3 build_msvc\\msvc-autogen.py\n+msbuild /m build_msvc\\bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n Dependencies\n ---------------------\n-A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin.\n+A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin Core.\n \n Options for installing the dependencies in a Visual Studio compatible manner are:\n \n - Use Microsoft's [vcpkg](https://docs.microsoft.com/en-us/cpp/vcpkg) to download the source packages and build locally. This is the recommended approach.\n - Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n - Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n \n-The external dependencies required for the Visual Studio build are (see [dependencies.md](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) for more info):\n+The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are:\n \n - Berkeley DB\n-- OpenSSL\n - Boost\n+- DoubleConversion\n - libevent\n+- Qt5\n - ZeroMQ\n-- RapidCheck\n \n-Additional dependencies required from the [bitcoin-core](https://github.com/bitcoin-core) GitHub repository are:\n-- libsecp256k1\n-- LevelDB\n+Qt\n+---------------------\n+In order to build the Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v141, v142) and platform type (x86 or x64) must also match.\n+\n+Some prebuilt x64 versions of Qt can be downloaded from [here](https://github.com/sipsorcery/qt_win_binary/releases). Please be aware these downloads are NOT officially sanctioned by Bitcoin Core and are provided for developer convenience only. They should NOT be used for builds that will be used in a production environment or with real funds.\n+\n+To determine which Qt prebuilt version to download open the `.appveyor.yml` file and note the `QT_DOWNLOAD_URL`. When extracting the zip file the destination path must be set to `C:\\`. This is due to the way that Qt includes, libraries and tools use internal paths.\n+\n+To build Bitcoin Core without Qt unload or disable the `bitcoin-qt`, `libbitcoin_qt` and `test_bitcoin-qt` projects.\n \n Building\n ---------------------\n The instructions below use `vcpkg` to install the dependencies.\n \n-- Clone `vcpkg` from the [github repository](https://github.com/Microsoft/vcpkg) and install as per the instructions in the main README.md.\n-- Install the required packages (replace x64 with x86 as required):\n+- Install [`vcpkg`](https://github.com/Microsoft/vcpkg).\n+- Install the required packages (replace x64 with x86 as required). The list of required packages can be found in the `build_msvc\\vcpkg-packages.txt` file. The PowerShell command below will work if run from the repository root directory and `vcpkg` is in the path. Alternatively the contents of the packages text file can be pasted in place of the `Get-Content` cmdlet.\n+\n+```\n+PS >.\\vcpkg install --triplet x64-windows-static $(Get-Content -Path build_msvc\\vcpkg-packages.txt).split()\n+PS >.\\vcpkg integrate install\n+```\n+\n+- Use Python to generate `*.vcxproj` from Makefile\n+\n+```\n+PS >py -3 msvc-autogen.py\n+```\n+\n+- An optional step is to adjust the settings in the build_msvc directory and the common.init.vcxproj file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n+\n+- To build from the command line with the Visual Studio 2017 toolchain use:\n \n ```\n-    PS >.\\vcpkg install --triplet x64-windows-static boost-filesystem boost-signals2 boost-test libevent openssl zeromq berkeleydb secp256k1 leveldb rapidcheck\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset=v141 /t:build\n ```\n \n-- Use Python to generate *.vcxproj from Makefile\n+- To build from the command line with the Visual Studio 2019 toolchain use:\n \n ```\n-    PS >py -3 msvc-autogen.py\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n ```\n \n-- Build in Visual Studio.\n+- Alternatively open the `build_msvc\\bitcoin.sln` file in Visual Studio.\n+\n+AppVeyor\n+---------------------\n+The .appveyor.yml in the root directory is suitable to perform builds on [AppVeyor](https://www.appveyor.com/) Continuous Integration servers. The simplest way to perform an AppVeyor build is to fork Bitcoin Core and then configure a new AppVeyor Project pointing to the forked repository.\n+\n+For safety reasons the Bitcoin Core .appveyor.yml file has the artifact options disabled. The build will be performed but no executable files will be available. To enable artifacts on a forked repository uncomment the lines shown below:\n+\n+```\n+    #- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n+    #- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n+```"
      },
      {
        "sha": "128c1bd8e7b6bd0622eefee3b5be73c47907b1e8",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "renamed",
        "additions": 4,
        "deletions": 21,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -9,27 +9,7 @@\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n   </PropertyGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\test\\util.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\setup_common.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\base58.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\bech32.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\bench.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\bench_bitcoin.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\ccoins_caching.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\checkblock.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\checkqueue.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\coin_selection.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\crypto_hash.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\data.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\examples.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\lockedpool.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\mempool_eviction.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\rpc_blockchain.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\rpc_mempool.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\merkle_root.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\rollingbloom.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\wallet_balance.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bench\\verify_script.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <ItemGroup>\n     <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n@@ -62,6 +42,9 @@\n     <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n       <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n     </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n   </ItemGroup>\n   <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>",
        "previous_filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj"
      },
      {
        "sha": "17cd31a52ef27db296d34fd810a98d7dc515ad61",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,83 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}</ProjectGuid>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\qt\\main.cpp\" />\n+    <ResourceCompile Include=\"..\\..\\src\\qt\\res\\bitcoin-qt-res.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+</Project>"
      },
      {
        "sha": "5e9715451f5a9309ae2d4989cfed2e5ec337e929",
        "filename": "build_msvc/bitcoin.sln",
        "status": "modified",
        "additions": 43,
        "deletions": 1,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -40,6 +40,14 @@ Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libsecp256k1\", \"libsecp256k\n EndProject\n Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libleveldb\", \"libleveldb\\libleveldb.vcxproj\", \"{18430FEF-6B61-4C53-B396-718E02850F1B}\"\n EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin_qt\\libbitcoin_qt.vcxproj\", \"{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtest_util\", \"libtest_util\\libtest_util.vcxproj\", \"{868474FD-35F6-4400-8EED-30A33E7521D4}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin-qt\", \"test_bitcoin-qt\\test_bitcoin-qt.vcxproj\", \"{51201D5E-D939-4854-AE9D-008F03FF518E}\"\n+EndProject\n Global\n     GlobalSection(SolutionConfigurationPlatforms) = preSolution\n         Debug|x64 = Debug|x64\n@@ -200,11 +208,45 @@ Global\n         {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.Build.0 = Release|x64\n         {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.ActiveCfg = Release|Win32\n         {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.Build.0 = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.Build.0 = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.Build.0 = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.ActiveCfg = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.Build.0 = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.ActiveCfg = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.Build.0 = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.ActiveCfg = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.Build.0 = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.Build.0 = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.ActiveCfg = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.ActiveCfg = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.Build.0 = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.Build.0 = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.ActiveCfg = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.Build.0 = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.ActiveCfg = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.Build.0 = Release|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.ActiveCfg = Debug|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.Build.0 = Debug|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.ActiveCfg = Debug|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.Build.0 = Debug|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.ActiveCfg = Release|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.Build.0 = Release|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.ActiveCfg = Release|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.Build.0 = Release|Win32\n     EndGlobalSection\n     GlobalSection(SolutionProperties) = preSolution\n         HideSolutionNode = FALSE\n     EndGlobalSection\n     GlobalSection(ExtensibilityGlobals) = postSolution\n-        SolutionGuid = {DA7D16A6-E5F0-45B3-B194-C3FE64F1BFCD}\n+                        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n+                SolutionGuid = {8607C0F4-F33D-41B8-8D51-18E366A0F8DF}\n+        SolutionGuid = {58AAB032-7274-49BD-845E-5EF4DBB69B70}\n     EndGlobalSection\n EndGlobal"
      },
      {
        "sha": "c8b2fb1658af50bb442e30236154f753603485a4",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 7,
        "deletions": 91,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,3 +1,7 @@\n+// Copyright (c) 2018-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #ifndef BITCOIN_BITCOIN_CONFIG_H\n #define BITCOIN_BITCOIN_CONFIG_H\n \n@@ -14,7 +18,7 @@\n #define CLIENT_VERSION_MAJOR 0\n \n /* Minor version */\n-#define CLIENT_VERSION_MINOR 18\n+#define CLIENT_VERSION_MINOR 20\n \n /* Build revision */\n #define CLIENT_VERSION_REVISION 99\n@@ -43,15 +47,9 @@\n /* define if the Boost library is available */\n #define HAVE_BOOST /**/\n \n-/* define if the Boost::Chrono library is available */\n-#define HAVE_BOOST_CHRONO /**/\n-\n /* define if the Boost::Filesystem library is available */\n #define HAVE_BOOST_FILESYSTEM /**/\n \n-/* define if the Boost::PROGRAM_OPTIONS library is available */\n-#define HAVE_BOOST_PROGRAM_OPTIONS /**/\n-\n /* define if the Boost::System library is available */\n #define HAVE_BOOST_SYSTEM /**/\n \n@@ -98,10 +96,6 @@\n    */\n #define HAVE_DECL_DAEMON 0\n \n-/* Define to 1 if you have the declaration of `EVP_MD_CTX_new', and to 0 if\n-   you don't. */\n-//#define HAVE_DECL_EVP_MD_CTX_NEW 1\n-\n /* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n    don't. */\n #define HAVE_DECL_HTOBE16 0\n@@ -183,75 +177,6 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #define HAVE_INTTYPES_H 1\n \n-/* Define to 1 if you have the `advapi32' library (-ladvapi32). */\n-#define HAVE_LIBADVAPI32 1\n-\n-/* Define to 1 if you have the `comctl32' library (-lcomctl32). */\n-#define HAVE_LIBCOMCTL32 1\n-\n-/* Define to 1 if you have the `comdlg32' library (-lcomdlg32). */\n-#define HAVE_LIBCOMDLG32 1\n-\n-/* Define to 1 if you have the `crypt32' library (-lcrypt32). */\n-#define HAVE_LIBCRYPT32 1\n-\n-/* Define to 1 if you have the `gdi32' library (-lgdi32). */\n-#define HAVE_LIBGDI32 1\n-\n-/* Define to 1 if you have the `imm32' library (-limm32). */\n-#define HAVE_LIBIMM32 1\n-\n-/* Define to 1 if you have the `iphlpapi' library (-liphlpapi). */\n-#define HAVE_LIBIPHLPAPI 1\n-\n-/* Define to 1 if you have the `kernel32' library (-lkernel32). */\n-#define HAVE_LIBKERNEL32 1\n-\n-/* Define to 1 if you have the `mingwthrd' library (-lmingwthrd). */\n-#define HAVE_LIBMINGWTHRD 1\n-\n-/* Define to 1 if you have the `mswsock' library (-lmswsock). */\n-#define HAVE_LIBMSWSOCK 1\n-\n-/* Define to 1 if you have the `ole32' library (-lole32). */\n-#define HAVE_LIBOLE32 1\n-\n-/* Define to 1 if you have the `oleaut32' library (-loleaut32). */\n-#define HAVE_LIBOLEAUT32 1\n-\n-/* Define to 1 if you have the `rpcrt4' library (-lrpcrt4). */\n-#define HAVE_LIBRPCRT4 1\n-\n-/* Define to 1 if you have the `rt' library (-lrt). */\n-/* #undef HAVE_LIBRT */\n-\n-/* Define to 1 if you have the `shell32' library (-lshell32). */\n-#define HAVE_LIBSHELL32 1\n-\n-/* Define to 1 if you have the `shlwapi' library (-lshlwapi). */\n-#define HAVE_LIBSHLWAPI 1\n-\n-/* Define to 1 if you have the `ssp' library (-lssp). */\n-#define HAVE_LIBSSP 1\n-\n-/* Define to 1 if you have the `user32' library (-luser32). */\n-#define HAVE_LIBUSER32 1\n-\n-/* Define to 1 if you have the `uuid' library (-luuid). */\n-#define HAVE_LIBUUID 1\n-\n-/* Define to 1 if you have the `winmm' library (-lwinmm). */\n-#define HAVE_LIBWINMM 1\n-\n-/* Define to 1 if you have the `winspool' library (-lwinspool). */\n-#define HAVE_LIBWINSPOOL 1\n-\n-/* Define to 1 if you have the `ws2_32' library (-lws2_32). */\n-#define HAVE_LIBWS2_32 1\n-\n-/* Define to 1 if you have the `z ' library (-lz ). */\n-#define HAVE_LIBZ_ 1\n-\n /* Define this symbol if you have malloc_info */\n /* #undef HAVE_MALLOC_INFO */\n \n@@ -330,12 +255,6 @@\n /* Define if the visibility attribute is supported. */\n #define HAVE_VISIBILITY_ATTRIBUTE 1\n \n-/* Define this symbol if boost sleep works */\n-/* #undef HAVE_WORKING_BOOST_SLEEP */\n-\n-/* Define this symbol if boost sleep_for works */\n-#define HAVE_WORKING_BOOST_SLEEP_FOR 1\n-\n /* Define to the sub-directory where libtool stores uninstalled libraries. */\n #define LT_OBJDIR \".libs/\"\n \n@@ -346,7 +265,7 @@\n #define PACKAGE_NAME \"Bitcoin Core\"\n \n /* Define to the full name and version of this package. */\n-#define PACKAGE_STRING \"Bitcoin Core 0.18.99\"\n+#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n \n /* Define to the one symbol short name of this package. */\n #define PACKAGE_TARNAME \"bitcoin\"\n@@ -355,7 +274,7 @@\n #define PACKAGE_URL \"https://bitcoincore.org/\"\n \n /* Define to the version of this package. */\n-#define PACKAGE_VERSION \"0.18.99\"\n+#define PACKAGE_VERSION \"0.19.99\"\n \n /* Define to necessary symbol if this constant uses a non-standard name on\n    your system. */\n@@ -385,9 +304,6 @@\n /* Define this symbol to build in assembly routines */\n //#define USE_ASM 1\n \n-/* Define this symbol if coverage is enabled */\n-/* #undef USE_COVERAGE */\n-\n /* Define if dbus support should be compiled in */\n /* #undef USE_DBUS */\n "
      },
      {
        "sha": "c09997d39d6ab97e0db1be8859b2c69339c6c9af",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,7 +6,9 @@\n     <VCProjectVersion>16.0</VCProjectVersion>\n     <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n     <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n-</PropertyGroup>\n+    <UseNativeEnvironment>true</UseNativeEnvironment>\n+   </PropertyGroup>\n+\n   <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n      <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n      <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n@@ -20,7 +22,7 @@\n       <Configuration>Release</Configuration>\n       <Platform>x64</Platform>\n     </ProjectConfiguration>\n-        <ProjectConfiguration Include=\"Debug|x64\">\n+    <ProjectConfiguration Include=\"Debug|x64\">\n       <Configuration>Debug</Configuration>\n       <Platform>x64</Platform>\n     </ProjectConfiguration>\n@@ -38,7 +40,7 @@\n     <LinkIncremental>true</LinkIncremental>\n     <WholeProgramOptimization>false</WholeProgramOptimization>\n     <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n+    <PlatformToolset>v142</PlatformToolset>\n     <CharacterSet>Unicode</CharacterSet>\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n     <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n@@ -47,7 +49,7 @@\n     <LinkIncremental>false</LinkIncremental>\n     <WholeProgramOptimization>true</WholeProgramOptimization>\n     <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n+    <PlatformToolset>v142</PlatformToolset>\n     <CharacterSet>Unicode</CharacterSet>\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n     <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n@@ -66,6 +68,7 @@\n       <OptimizeReferences>true</OptimizeReferences>\n     </Link>\n   </ItemDefinitionGroup>\n+\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n     <ClCompile>\n       <Optimization>Disabled</Optimization>\n@@ -75,6 +78,7 @@\n       <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n     </ClCompile>\n   </ItemDefinitionGroup>\n+\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n     <ClCompile>\n       <Optimization>MaxSpeed</Optimization>\n@@ -88,6 +92,7 @@\n       <OptimizeReferences>true</OptimizeReferences>\n     </Link>\n   </ItemDefinitionGroup>\n+\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n     <ClCompile>\n       <Optimization>Disabled</Optimization>\n@@ -103,16 +108,19 @@\n       <WarningLevel>Level3</WarningLevel>\n       <PrecompiledHeader>NotUsing</PrecompiledHeader>\n       <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n-      <DisableSpecificWarnings>4018;4221;4244;4267;4715;4805;</DisableSpecificWarnings>\n+      <DisableSpecificWarnings>4018;4221;4244;4267;4334;4715;4805;4834</DisableSpecificWarnings>\n       <TreatWarningAsError>true</TreatWarningAsError>\n       <PreprocessorDefinitions>ZMQ_STATIC;NOMINMAX;WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_CONSOLE;_WIN32_WINNT=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\secp256k1\\include;..\\..\\src\\leveldb\\include;..\\..\\src\\leveldb\\helpers\\memenv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n       <SubSystem>Console</SubSystem>\n       <GenerateDebugInformation>true</GenerateDebugInformation>\n-      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n     </Link>\n+    <Lib>\n+      <AdditionalOptions>/ignore:4221</AdditionalOptions>\n+    </Lib>\n   </ItemDefinitionGroup>\n   <Import Project=\"common.init.vcxproj.user\" Condition=\"Exists('common.init.vcxproj.user')\" />\n </Project>"
      },
      {
        "sha": "42150a23103773a96de2f25f86de7ccb589e821e",
        "filename": "build_msvc/common.qt.init.vcxproj",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/common.qt.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/common.qt.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.qt.init.vcxproj?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+\n+  <PropertyGroup Label=\"QtGlobals\">\n+    <QtBaseDir>C:\\Qt5.9.8_x64_static_vs2019</QtBaseDir>\n+    <QtPluginsLibraryDir>$(QtBaseDir)\\plugins</QtPluginsLibraryDir>\n+    <QtLibraryDir>$(QtBaseDir)\\lib</QtLibraryDir>\n+    <QtIncludeDir>$(QtBaseDir)\\include</QtIncludeDir>\n+    <QtIncludes>$(QtIncludeDir);$(QtIncludeDir)\\QtNetwork;$(QtIncludeDir)\\QtCore;$(QtIncludeDir)\\QtWidgets;$(QtIncludeDir)\\QtGui;</QtIncludes>\n+    <GeneratedFilesOutDir>.\\QtGeneratedFiles\\qt</GeneratedFilesOutDir>\n+    <QtToolsDir>$(QtBaseDir)\\bin</QtToolsDir>\n+    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n+    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtLibraryDir)\\*d.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n+  </PropertyGroup>\n+\n+</Project>"
      },
      {
        "sha": "992f64ec2e01dce5b2844dfe48b70757ced6a0ae",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "modified",
        "additions": 201,
        "deletions": 917,
        "changes": 1118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,946 +1,230 @@\n \ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n-  <ItemGroup Label=\"ProjectConfigurations\">\n-    <ProjectConfiguration Include=\"Debug|Win32\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|Win32\">\n-      <Configuration>Release</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Debug|x64\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|x64\">\n-      <Configuration>Release</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-  </ItemGroup>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n   <PropertyGroup Label=\"Globals\">\n-    <VCProjectVersion>15.0</VCProjectVersion>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n-    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n     <ProjectGuid>{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}</ProjectGuid>\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n   </PropertyGroup>\n   <ItemGroup>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin.qrc\">\n-      <Command>\"$(QTDIR)\\bincc.exe\" -name bitcoin \"%(Fullpath)\" -o .\\GeneratedFiles\\qrc_bitcoin.cpp</Command>\n-      <Message>Qt rcc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\qrc_bitcoin.cpp</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bincc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin_locale.qrc\">\n-      <Command>\"$(QTDIR)\\bincc.exe\" -name bitcoin_locale \"%(Fullpath)\" -o .\\GeneratedFiles\\qrc_bitcoin_locale.cpp</Command>\n-      <Message>Qt rcc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\qrc_bitcoin_locale.cpp</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bincc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <None Include=\"..\\..\\src\\qt\\forms\\addressbookpage.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\askpassphrasedialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\coincontroldialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\debugwindow.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\editaddressdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\helpmessagedialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\intro.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\modaloverlay.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\openuridialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\optionsdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\overviewpage.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\formseceivecoinsdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\formseceiverequestdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\sendcoinsdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\sendcoinsentry.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\signverifymessagedialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\forms\\transactiondescdialog.ui\" />\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_af.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_af_ZA.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_am.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ar.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_be_BY.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_bg.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_bg_BG.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca%40valencia.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca_ES.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_cs.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_cy.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_da.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_de.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_el.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_el_GR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_en.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_en_GB.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_eo.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_AR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_CL.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_CO.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_DO.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_ES.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_MX.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_UY.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_VE.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_et.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_et_EE.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_eu_ES.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fa.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fa_IR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fi.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr_CA.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr_FR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_gl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_he.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hi_IN.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hr.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hu.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_id.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_id_ID.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_is.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_it.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_it_IT.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ja.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ka.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_kk_KZ.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ko.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ko_KR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ku_IQ.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ky.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_la.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_lt.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_lv_LV.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_mk_MK.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ml.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_mn.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ms_MY.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_nb.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ne.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_nl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pam.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pt_BR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pt_PT.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ro.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ro_RO.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ru.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ru_RU.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sk.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sl_SI.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sn.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sq.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sr.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sr%40latin.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sv.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_szl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ta.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_th_TH.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_tr.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_tr_TR.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_uk.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ur_PK.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_uz%40Cyrl.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_vi.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_vi_VN.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_CN.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_HK.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_TW.ts\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\paymentrequest.proto\">\n-      <FileType>Document</FileType>\n-      <Command>F:\\Dependencies\\protobuf-cpp-3.4.1\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe --proto_path=%(RootDir)%(Directory) %(Fullpath) --cpp_out=.\\GeneratedFiles</Command>\n-      <Message>ProtoBuf source generation %(RootDir)%(Directory) %(Filename)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).pb.h;.\\GeneratedFiles\\(%Filename).pb.cc</Outputs>\n-      <AdditionalInputs>F:\\Dependencies\\protobuf-cpp-3.4.1\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe</AdditionalInputs>\n-      <LinkObjects>false</LinkObjects>\n-      <Command Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">F:\\deps\\protobuf\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe --proto_path=%(RootDir)%(Directory) %(Fullpath) --cpp_out=.\\GeneratedFiles</Command>\n-      <AdditionalInputs Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">F:\\deps\\protobuf\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <None Include=\"..\\..\\src\\qt\\macdockiconhandler.mm\" />\n-    <None Include=\"..\\..\\src\\qt\\macnotificationhandler.mm\" />\n-    <None Include=\"..\\..\\src\\qtes\\icons\\bitcoin.icns\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\bitcoin.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_0.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_1.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_2.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_3.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\clock_4.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-0.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-1.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-2.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-3.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\connect-4.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\hd_disabled.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\hd_enabled.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\mine.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\network_disabled.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\qt.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\transaction0.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\tx_in.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"..\\..\\src\\qtes\\src\\tx_inout.svg\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </None>\n-    <None Include=\"GeneratedFiles\\bitcoin.moc\" />\n-    <None Include=\"GeneratedFiles\\bitcoinamountfield.moc\" />\n-    <None Include=\"GeneratedFiles\\intro.moc\" />\n-    <None Include=\"GeneratedFiles\\overviewpage.moc\" />\n-    <None Include=\"GeneratedFilespcconsole.moc\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\add.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\address-book.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin.ico\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin_testnet.ico\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\chevron.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock1.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock2.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock3.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock4.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\clock5.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect0.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect1.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect2.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect3.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\connect4.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\edit.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\editcopy.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\editpaste.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\export.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\eye.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\eye_minus.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\eye_plus.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\fontbigger.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\fontsmaller.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\hd_disabled.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\hd_enabled.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\history.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\info.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\lock_closed.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\lock_open.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\network_disabled.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\overview.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\iconseceive.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\iconsemove.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\send.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\synced.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction0.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction2.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction_abandoned.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction_conflicted.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_inout.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_input.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_mined.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_output.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\icons\\warning.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-000.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-001.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-002.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-003.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-004.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-005.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-006.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-007.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-008.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-009.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-010.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-011.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-012.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-013.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-014.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-015.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-016.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-017.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-018.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-019.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-020.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-021.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-022.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-023.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-024.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-025.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-026.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-027.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-028.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-029.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-030.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-031.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-032.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-033.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-034.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-035.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-    <Image Include=\"..\\..\\src\\qtes\\src\\spinner.png\">\n-      <DeploymentContent>true</DeploymentContent>\n-    </Image>\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"GeneratedFiles\\qrc_bitcoin.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\qrc_bitcoin_locale.cpp\" />\n-    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\intro.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qt\\overviewpage.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <CustomBuild Include=\"..\\..\\src\\qtpcconsole.cpp\">\n-      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n-      <Message>Qt moc generation for %(Identity)</Message>\n-      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n-      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n-    </CustomBuild>\n-    <ClCompile Include=\"GeneratedFiles\\moc_addressbookpage.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_addresstablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_askpassphrasedialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bantablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinaddressvalidator.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinamountfield.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bitcoingui.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinunits.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_callback.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_clientmodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_coincontroldialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_coincontroltreewidget.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_csvmodelwriter.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_editaddressdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_guiconstants.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_guiutil.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_intro.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_macdockiconhandler.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_macnotificationhandler.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_modaloverlay.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_networkstyle.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_notificator.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_openuridialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_optionsdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_optionsmodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_overviewpage.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_paymentrequestplus.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_paymentserver.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_peertablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_platformstyle.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_qvalidatedlineedit.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_qvaluecombobox.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_receivecoinsdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_receiverequestdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_recentrequeststablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_rpcconsole.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_sendcoinsdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_sendcoinsentry.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_signverifymessagedialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_splashscreen.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_trafficgraphwidget.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactiondesc.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactiondescdialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactionfilterproxy.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactionrecord.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactiontablemodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_transactionview.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_utilitydialog.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_walletframe.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_walletmodel.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_walletmodeltransaction.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_walletview.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\moc_winshutdownmonitor.cpp\" />\n-    <ClCompile Include=\"GeneratedFiles\\paymentrequest.pb.cc\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ClInclude Include=\"GeneratedFiles\\paymentrequest.pb.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_addressbookpage.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_askpassphrasedialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_coincontroldialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_debugwindow.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_editaddressdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_helpmessagedialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_intro.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_modaloverlay.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_openuridialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_optionsdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_overviewpage.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_receivecoinsdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_receiverequestdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_sendcoinsdialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_sendcoinsentry.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_signverifymessagedialog.h\" />\n-    <ClInclude Include=\"GeneratedFiles\\ui_transactiondescdialog.h\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\addressbookpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\addresstablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bantablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoin.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoingui.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinstrings.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinunits.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\clientmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroldialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\createwalletdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\editaddressdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\guiutil.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\modaloverlay.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\networkstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\notificator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\openuridialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\splashscreen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondesc.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionrecord.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\utilitydialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletcontroller.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletframe.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbookpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addresstablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bantablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoingui.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinunits.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_clientmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroldialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_createwalletdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_editaddressdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_guiutil.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_intro.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_modaloverlay.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_networkstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_notificator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_openuridialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_overviewpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcconsole.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_splashscreen.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondesc.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionrecord.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_utilitydialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletcontroller.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletframe.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin_locale.cpp\" />\n   </ItemGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n-    <ConfigurationType>StaticLibrary</ConfigurationType>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n+\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <ImportGroup Label=\"ExtensionSettings\">\n-  </ImportGroup>\n-  <ImportGroup Label=\"Shared\">\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <PropertyGroup Label=\"UserMacros\" />\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <LinkIncremental>false</LinkIncremental>\n-    <Linkage-protobuf>static</Linkage-protobuf>\n-    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <LinkIncremental>true</LinkIncremental>\n-    <Linkage-protobuf>static</Linkage-protobuf>\n-    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <LinkIncremental>true</LinkIncremental>\n-    <Linkage-protobuf>static</Linkage-protobuf>\n-    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <LinkIncremental>false</LinkIncremental>\n-    <Linkage-protobuf>static</Linkage-protobuf>\n-    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n-  </PropertyGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>false</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_X86_;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_X86_;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n   </ItemDefinitionGroup>\n-  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n-  <Target Name=\"QtHeadersMocCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+\n+  <ItemGroup>\n+    <QT_MOC Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <MocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n+    <ResourceTemplates Include=\"..\\..\\src\\qt\\*.qrc\" />\n+    <UiFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n+    <TranslationFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n+  </ItemGroup>\n+\n+  <Target Name=\"moccode\" Inputs=\"@(QT_MOC)\" Outputs=\"@(QT_MOC->'$(GeneratedFilesOutDir)\\%(Filename).moc')\">\n     <PropertyGroup>\n-      <ErrorText>There was an error executing the Qt headers moc code generation tasks.</ErrorText>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc code include generation task.</ErrorText>\n     </PropertyGroup>\n-    <ItemGroup>\n-      <QtMocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n-    </ItemGroup>\n-    <Exec Command=\"$(QTDIR)\\bin\\moc.exe &quot;%(QtMocHeaderFiles.Identity)&quot; -o .\\GeneratedFiles\\moc_%(Filename).cpp $(MOC_DEF)\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt moc code include generation task, output path $(GeneratedFilesOutDir).\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc.\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc\" />\n   </Target>\n-  <Target Name=\"QtFormsCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+\n+  <Target Name=\"mocheader\" Inputs=\"@(MocHeaderFiles)\" Outputs=\"@(MocHeaderFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n     <PropertyGroup>\n-      <ErrorText>There was an error executing the Qt forms code generation tasks.</ErrorText>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc header generation task.</ErrorText>\n     </PropertyGroup>\n-    <ItemGroup>\n-      <QtFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n-    </ItemGroup>\n-    <Exec Command=\"$(QTDIR)\\bin\\uic.exe &quot;%(QtFormFiles.Identity)&quot; -o .\\GeneratedFiles\\ui_%(Filename).h\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt moc header generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n   </Target>\n-  <Target Name=\"QtLocaleCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+\n+  <Target Name=\"forms\" Inputs=\"@(UiFormFiles)\" Outputs=\"@(UiFormFiles->'$(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h')\">\n     <PropertyGroup>\n-      <ErrorText>There was an error executing the Qt local code generation tasks.</ErrorText>\n+      <ErrorText>There was an error executing the libbitcoin_qt forms header generation task.</ErrorText>\n     </PropertyGroup>\n-    <ItemGroup>\n-      <QtLocaleFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n-    </ItemGroup>\n-    <Exec Command=\"$(QTDIR)\\bin\\lrelease.exe &quot;%(QtLocaleFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt forms header generation task, output path $(GeneratedFilesOutDir)\\forms.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\forms\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\uic.exe &quot;%(UiFormFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h\" />\n   </Target>\n-  <ImportGroup Label=\"ExtensionTargets\">\n-    <!--<Import Label=\"berkleyDbTarget\" Project=\"f:\\deps\\db-4.8.30\\db.targets\" />\n-    <Import Label=\"opensslTarget\" Project=\"f:\\deps\\openssl\\1.0.2\\openssl.targets\" />\n-    <Import Label=\"qtTarget\" Project=\"F:\\deps\\qt\\5.9.2-git-ssl\\vc141-x86elease\\qt.targets\" />\n-    <Import Label=\"protobufTarget\" Project=\"f:\\deps\\protobuf\\protobuf.targets\" />-->\n-  </ImportGroup>\n-  <ProjectExtensions>\n-    <VisualStudio>\n-      <UserProperties MocDir=\".\\GeneratedFiles\" UicDir=\".\\GeneratedFiles\" RccDir=\".\\GeneratedFiles\" lupdateOptions=\"\" lupdateOnBuild=\"0\" lreleaseOptions=\"\" Qt5Version_x0020_Win32=\"5.9.1_vs140_x86\" Qt5Version_x0020_x64=\"5.9.1_vs140_x86\" MocOptions=\"DUNICODE -DWIN32 -DQT_DLL -DQT_CORE_LIB -DQT_GUI_LIB -DQT_WIDGETS_LIB &quot;-I.\\GeneratedFiles&quot; &quot;-I.&quot; &quot;-I$(QTDIR)\\include&quot; &quot;-I$(QTDIR)\\include\\QtCore&quot; &quot;-I$(QTDIR)\\include\\QtGui&quot; &quot;-I$(QTDIR)\\include\\QtWidgets&quot;\" />\n-    </VisualStudio>\n-  </ProjectExtensions>\n+\n+  <Target Name=\"translation\" Inputs=\"@(TranslationFiles)\" Outputs=\"@(TranslationFiles->'..\\..\\src\\qt\\locale\\%(Filename).qm')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt translation file generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt translation file generation task.\" />\n+    <Exec Command=\"$(QtToolsDir)\\lrelease.exe &quot;%(TranslationFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n+  </Target>\n+\n+  <Target Name=\"resource\" Inputs=\"@(ResourceTemplates)\" Outputs=\"@(ResourceTemplates->'$(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp')\" DependsOnTargets=\"translation\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt resource code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt resource code generation task, output path $(GeneratedFilesOutDir)\\rcc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\rcc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\rcc.exe --verbose --name %(Filename) &quot;%(ResourceTemplates.Identity)&quot; -o $(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp\" />\n+  </Target>\n+\n+  <Target Name=\"qtclean\">\n+    <Exec Command=\"echo Clean libbitcoin_qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\forms;$(GeneratedFilesOutDir)\\moc;$(GeneratedFilesOutDir)\\rcc;\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\" />\n+  </Target>\n+\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+        moccode;\n+        mocheader;\n+        forms;\n+        translation;\n+        resource;\n+        $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        qtclean;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+\n </Project>"
      },
      {
        "sha": "6ec40461c2adcd99965486308e490ed09ff8de03",
        "filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -8,6 +8,7 @@\n     <ConfigurationType>StaticLibrary</ConfigurationType>\n   </PropertyGroup>\n   <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\util\\url.cpp\" />\n @SOURCE_FILES@\n   </ItemGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />"
      },
      {
        "sha": "1610ae7d8661f421df97c103ae57bf80e9399371",
        "filename": "build_msvc/libleveldb/libleveldb.vcxproj",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/libleveldb/libleveldb.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/libleveldb/libleveldb.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libleveldb/libleveldb.vcxproj?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -24,8 +24,6 @@\n     <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_set.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\db\\write_batch.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\helpers\\memenv\\memenv.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\port\\port_posix_sse.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\port\\port_win.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block_builder.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\table\\filter_block.cc\" />\n@@ -42,7 +40,7 @@\n     <ClCompile Include=\"..\\..\\src\\leveldb\\util\\comparator.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\util\\crc32c.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env.cc\" />\n-    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env_win.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env_windows.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\util\\filter_policy.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\util\\hash.cc\" />\n     <ClCompile Include=\"..\\..\\src\\leveldb\\util\\histogram.cc\" />\n@@ -51,11 +49,11 @@\n     <ClCompile Include=\"..\\..\\src\\leveldb\\util\\status.cc\" />\n   </ItemGroup>\n   <ItemDefinitionGroup>\n-    <ClCompile>\n-\t <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;LEVELDB_PLATFORM_WINDOWS;LEVELDB_ATOMIC_PRESENT;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-\t <DisableSpecificWarnings>4244;4267;4312;</DisableSpecificWarnings>\n-\t <AdditionalIncludeDirectories>..\\..\\src\\leveldb;..\\..\\src\\leveldb\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n-\t</ClCompile>\n+     <ClCompile>\n+       <PreprocessorDefinitions>HAVE_CRC32C=0;HAVE_SNAPPY=0;__STDC_LIMIT_MACROS;LEVELDB_IS_BIG_ENDIAN=0;_UNICODE;UNICODE;_CRT_NONSTDC_NO_DEPRECATE;LEVELDB_PLATFORM_WINDOWS;LEVELDB_ATOMIC_PRESENT;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+       <DisableSpecificWarnings>4244;4267;4312;4722;</DisableSpecificWarnings>\n+       <AdditionalIncludeDirectories>..\\..\\src\\leveldb;..\\..\\src\\leveldb\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+     </ClCompile>\n   </ItemDefinitionGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />"
      },
      {
        "sha": "b5e844010e9197706dc0d75582fe2d3983bebfb5",
        "filename": "build_msvc/libtest_util/libtest_util.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libtest_util/libtest_util.vcxproj.in?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{868474FD-35F6-4400-8EED-30A33E7521D4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "d99b17d38127bec2623a42552f461979cee61531",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,4 +1,7 @@\n #!/usr/bin/env python3\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n import os\n import re\n@@ -17,6 +20,8 @@\n     'libbitcoin_wallet_tool',\n     'libbitcoin_wallet',\n     'libbitcoin_zmq',\n+    'bench_bitcoin',\n+    'libtest_util',\n ]\n \n ignore_list = ["
      },
      {
        "sha": "2095c0c3213513510eb6106852943fc991d8e2b1",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "modified",
        "additions": 105,
        "deletions": 129,
        "changes": 234,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,146 +1,122 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n-  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n-  <ItemGroup Label=\"ProjectConfigurations\">\n-    <ProjectConfiguration Include=\"Debug|Win32\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|Win32\">\n-      <Configuration>Release</Configuration>\n-      <Platform>Win32</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Debug|x64\">\n-      <Configuration>Debug</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-    <ProjectConfiguration Include=\"Release|x64\">\n-      <Configuration>Release</Configuration>\n-      <Platform>x64</Platform>\n-    </ProjectConfiguration>\n-  </ItemGroup>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n   <PropertyGroup Label=\"Globals\">\n-    <VCProjectVersion>15.0</VCProjectVersion>\n     <ProjectGuid>{51201D5E-D939-4854-AE9D-008F03FF518E}</ProjectGuid>\n-    <Keyword>Win32Proj</Keyword>\n-    <RootNamespace>test_bitcoinqt</RootNamespace>\n-  </PropertyGroup>\n-  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n-    <ConfigurationType>Application</ConfigurationType>\n-    <UseDebugLibraries>true</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <CharacterSet>Unicode</CharacterSet>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n     <ConfigurationType>Application</ConfigurationType>\n-    <UseDebugLibraries>false</UseDebugLibraries>\n-    <PlatformToolset>v141</PlatformToolset>\n-    <WholeProgramOptimization>true</WholeProgramOptimization>\n-    <CharacterSet>Unicode</CharacterSet>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n   </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\setup_common.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\addressbooktests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\apptests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\compattests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\test_main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\uritests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\util.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\wallettests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbooktests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_apptests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_compattests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_uritests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_wallettests.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n-  <ImportGroup Label=\"ExtensionSettings\">\n-  </ImportGroup>\n-  <ImportGroup Label=\"Shared\">\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n-  </ImportGroup>\n-  <PropertyGroup Label=\"UserMacros\" />\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <LinkIncremental>false</LinkIncremental>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <LinkIncremental>true</LinkIncremental>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <LinkIncremental>true</LinkIncremental>\n-  </PropertyGroup>\n-  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <LinkIncremental>false</LinkIncremental>\n-  </PropertyGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n-      <SubSystem>Console</SubSystem>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>$(QtLibraryDir)\\Qt5Test.lib;$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n     </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+\n+    <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n     <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n     </ClCompile>\n     <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n     </Link>\n   </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>Disabled</Optimization>\n-      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-    </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n-  </ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <ClCompile>\n-      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n-      <WarningLevel>Level3</WarningLevel>\n-      <Optimization>MaxSpeed</Optimization>\n-      <FunctionLevelLinking>true</FunctionLevelLinking>\n-      <IntrinsicFunctions>true</IntrinsicFunctions>\n-      <PreprocessorDefinitions>_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n-      <SDLCheck>true</SDLCheck>\n-    </ClCompile>\n-    <Link>\n-      <SubSystem>Console</SubSystem>\n-      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n-      <OptimizeReferences>true</OptimizeReferences>\n-      <GenerateDebugInformation>true</GenerateDebugInformation>\n-    </Link>\n-  </ItemDefinitionGroup>\n-  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+  <ItemGroup>\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\addressbooktests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\apptests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\compattests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\uritests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\wallettests.h\" />\n+  </ItemGroup>\n+  <Target Name=\"moccode\" Inputs=\"@(MocTestFiles)\" Outputs=\"@(MocTestFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the test_bitcoin-qt moc code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing test_bitcoin-qt moc generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocTestFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n+  </Target>\n+  <Target Name=\"QtTestCleanGeneratedFiles\">\n+    <Exec Command=\"echo Clean test_bitcoin-qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\\*\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\" />\n+  </Target>\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+       moccode;\n+       $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        QtTestCleanGeneratedFiles;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n </Project>"
      },
      {
        "sha": "5c4b777d5164bbc3354b26f262310e9a385a99cd",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -9,13 +9,13 @@\n     <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n   </PropertyGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\*_properties.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\gen\\*_gen.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\test\\setup_common.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\*.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n@@ -42,6 +42,9 @@\n     <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n       <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n     </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n     <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n       <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n     </ProjectReference>\n@@ -58,7 +61,9 @@\n     </PropertyGroup>\n     <ItemGroup>\n       <JsonTestFile Include=\"..\\..\\src\\test\\data\\*.json\" />\n+      <RawTestFile Include=\"..\\..\\src\\test\\data\\*.raw\" />\n     </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(RawTestFile.FullPath)\" HeaderFilePath=\"%(RawTestFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawTestFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n     <HeaderFromHexdump RawFilePath=\"%(JsonTestFile.FullPath)\" HeaderFilePath=\"%(JsonTestFile.FullPath).h\" SourceHeader=\"namespace json_tests{ static unsigned const char %(JsonTestFile.Filename)[] = {\" SourceFooter=\"};}\" />\n   </Target>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />"
      },
      {
        "sha": "5fdd97dc783e587ab68c49fd5ee06a53df2ec88f",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,3 +1,7 @@\n+// Copyright (c) 2018-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include <iostream>\n \n // bitcoin includes."
      },
      {
        "sha": "307f295f089cd225a70cc2c98ae60c0b4ce1de2f",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1 @@\n+berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent[thread] zeromq double-conversion\n\\ No newline at end of file"
      },
      {
        "sha": "d2ea255b4bad7e410eac0cc0512568fa70b04243",
        "filename": "ci/README.md",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -8,11 +8,21 @@ and numbered according to which stage and lifecycle step it belongs to.\n \n ### Running a stage locally\n \n+Be aware that the tests will be built and run in-place, so please run at your own risk.\n+If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first.\n+\n+The ci needs to perform various sysadmin tasks such as installing packages or writing to the user's home directory.\n+While most of the actions are done inside a docker container, this is not possible for all. Thus, cache directories,\n+such as the depends cache, previous release binaries, or ccache, are mounted as read-write into the docker container. While it should be fine to run\n+the ci system locally on you development box, the ci scripts can generally be assumed to have received less review and\n+testing compared to other parts of the codebase. If you want to keep the work tree clean, you might want to run the ci\n+system in a virtual machine with a Linux operating system of your choice.\n+\n To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n requires `docker` to be installed. To install all requirements on Ubuntu, run\n \n ```\n-sudo apt install docker.io ccache bash git\n+sudo apt install docker.io bash\n ```\n \n To run the default test stage,\n@@ -26,6 +36,3 @@ To run the test stage with a specific configuration,\n ```\n FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n ```\n-\n-Be aware that the tests will be build and run in-place, so please run at your own risk.\n-If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first."
      },
      {
        "sha": "123d874a84da4b8531edf5e51052b581688cef27",
        "filename": "ci/extended_lint/04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/extended_lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/extended_lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/04_install.sh?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,12 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-CPPCHECK_VERSION=1.86\n-curl -s https://codeload.github.com/danmar/cppcheck/tar.gz/${CPPCHECK_VERSION} | tar -zxf - --directory /tmp/\n-(cd /tmp/cppcheck-${CPPCHECK_VERSION}/ && make CFGDIR=/tmp/cppcheck-${CPPCHECK_VERSION}/cfg/ > /dev/null)\n-export PATH=\"$PATH:/tmp/cppcheck-${CPPCHECK_VERSION}/\""
      },
      {
        "sha": "e8228c9c4d912c81e16b772e79e85231a2b6c1b9",
        "filename": "ci/extended_lint/06_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/extended_lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/extended_lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/06_script.sh?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,9 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-test/lint/extended-lint-all.sh"
      },
      {
        "sha": "8b2d609504d5c0980b128ba28e4da4ee466e01f2",
        "filename": "ci/lint/04_install.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,14 +1,14 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C\n \n travis_retry pip3 install codespell==1.15.0\n-travis_retry pip3 install flake8==3.5.0\n-travis_retry pip3 install vulture==0.29\n+travis_retry pip3 install flake8==3.7.8\n+travis_retry pip3 install yq\n \n SHELLCHECK_VERSION=v0.6.0\n curl -s \"https://storage.googleapis.com/shellcheck/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/"
      },
      {
        "sha": "2987812c8e64bab1648a3dc04492b1d338cdf047",
        "filename": "ci/lint/05_before_script.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/lint/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/lint/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/05_before_script.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "003bdf3c29268ac3ce589aeacf2cb7f6e3277be5",
        "filename": "ci/lint/06_script.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -14,6 +14,7 @@ test/lint/git-subtree-check.sh src/crypto/ctaes\n test/lint/git-subtree-check.sh src/secp256k1\n test/lint/git-subtree-check.sh src/univalue\n test/lint/git-subtree-check.sh src/leveldb\n+test/lint/git-subtree-check.sh src/crc32c\n test/lint/check-doc.py\n test/lint/check-rpc-mappings.py .\n test/lint/lint-all.sh"
      },
      {
        "sha": "1b03c652dbbf5b51f8c05e85090ad6b3ce4a1a85",
        "filename": "ci/retry/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -32,8 +32,8 @@ Help:\n         -v, --verbose                    Verbose output\n         -t, --tries=#                    Set max retries: Default 10\n         -s, --sleep=secs                 Constant sleep amount (seconds)\n-        -m, --min=secs                   Exponenetial Backoff: minimum sleep amount (seconds): Default 0.3\n-        -x, --max=secs                   Exponenetial Backoff: maximum sleep amount (seconds): Default 60\n+        -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+        -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n         -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n \n ### Examples"
      },
      {
        "sha": "3c06519dbdfebececdfe030cc60cab72d62658a2",
        "filename": "ci/retry/retry",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -17,7 +17,7 @@ __log_out() {\n   echo \"$1\" 1>&2\n }\n \n-# Paramters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n+# Parameters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n retry()\n {\n   local max_tries=\"$1\"; shift\n@@ -83,8 +83,8 @@ Usage: $retry [options] -- execute command\n     -v, --verbose                    Verbose output\n     -t, --tries=#                    Set max retries: Default 10\n     -s, --sleep=secs                 Constant sleep amount (seconds)\n-    -m, --min=secs                   Exponenetial Backoff: minimum sleep amount (seconds): Default 0.3\n-    -x, --max=secs                   Exponenetial Backoff: maximum sleep amount (seconds): Default 60\n+    -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+    -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n     -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n EOF\n   }"
      },
      {
        "sha": "dae61c5e34b2f62619b529a590535cd45cf73c7c",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 42,
        "deletions": 20,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,40 +1,62 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019 The Bitcoin Core developers\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-echo \"Setting default values in env\"\n-\n+# The root dir.\n+# The ci system copies this folder.\n+# This is where the depends build is done.\n BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n export BASE_ROOT_DIR\n \n-export MAKEJOBS=${MAKEJOBS:--j3}\n-export HOST=${HOST:-x86_64-unknown-linux-gnu}\n+echo \"Setting specific values in env\"\n+if [ -n \"${FILE_ENV}\" ]; then\n+  set -o errexit;\n+  # shellcheck disable=SC1090\n+  source \"${FILE_ENV}\"\n+fi\n+\n+echo \"Fallback to default values in env (if not yet set)\"\n+# The number of parallel jobs to pass down to make and test_runner.py\n+export MAKEJOBS=${MAKEJOBS:--j4}\n+# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n+# This folder only exists on the ci host.\n+export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch}\n+# What host to compile for. See also ./depends/README.md\n+# Tests that need cross-compilation export the appropriate HOST.\n+# Tests that run natively guess the host\n+export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n+# Whether to prefer BusyBox over GNU utilities\n+export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n+export TEST_PREVIOUS_RELEASES=${TEST_PREVIOUS_RELEASES:-false}\n export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n+export CONTAINER_NAME=${CONTAINER_NAME:-ci_unnamed}\n export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n-export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1$TRAVIS_BUILD_ID}\n+# Randomize test order.\n+# See https://www.boost.org/doc/libs/1_71_0/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/random.html\n+export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n-export CCACHE_DIR=${CCACHE_DIR:-$HOME/.ccache}\n-export BASE_BUILD_DIR=${BASE_BUILD_DIR:-${TRAVIS_BUILD_DIR:-$BASE_ROOT_DIR}}\n-export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_BUILD_DIR/out/$HOST}\n+# The cache dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n+# The depends dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n+# Folder where the build result is put (bin and lib).\n+export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n+# Folder where the build is done (dist and out-of-tree build).\n+export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_SCRATCH_DIR/build}\n+export PREVIOUS_RELEASES_DIR=${PREVIOUS_RELEASES_DIR:-$BASE_ROOT_DIR/releases/$HOST}\n export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n-export WINEDEBUG=${WINEDEBUG:-fixme-all}\n-export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}\n export GOAL=${GOAL:-install}\n-export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_BUILD_DIR}/qa-assets}\n+export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n-export CI_RETRY_EXE=${CI_RETRY_EXE:retry}\n-\n-echo \"Setting specific values in env\"\n-if [ -n \"${FILE_ENV}\" ]; then\n-  set -o errexit;\n-  # shellcheck disable=SC1090\n-  source \"${FILE_ENV}\"\n-fi\n+export CI_RETRY_EXE=${CI_RETRY_EXE:-\"retry --\"}"
      },
      {
        "sha": "9d20b6a72b3b737b680875f54dd1cc2d6e39c434",
        "filename": "ci/test/00_setup_env_amd64_asan.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/test/00_setup_env_amd64_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/test/00_setup_env_amd64_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_amd64_asan.sh?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,13 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=x86_64-unknown-linux-gnu\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-export NO_DEPENDS=1\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\""
      },
      {
        "sha": "cc0f1196e78a1f9eaf9b1c6660e5abd7a3d792d9",
        "filename": "ci/test/00_setup_env_amd64_trusty.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/test/00_setup_env_amd64_trusty.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/test/00_setup_env_amd64_trusty.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_amd64_trusty.sh?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=x86_64-unknown-linux-gnu\n-export DOCKER_NAME_TAG=ubuntu:14.04\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-export NO_DEPENDS=1\n-export RUN_FUNCTIONAL_TESTS=false\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no\""
      },
      {
        "sha": "c127e284bdfead67496dd652d7feec6a369920e6",
        "filename": "ci/test/00_setup_env_amd64_tsan.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/test/00_setup_env_amd64_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/test/00_setup_env_amd64_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_amd64_tsan.sh?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=x86_64-unknown-linux-gnu\n-export DOCKER_NAME_TAG=ubuntu:16.04\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-export NO_DEPENDS=1\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\""
      },
      {
        "sha": "b70a581532c1021a3505f6411c021b123de697a0",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 17,
        "deletions": 5,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,16 +1,28 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019 The Bitcoin Core developers\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n export HOST=arm-linux-gnueabihf\n-export PACKAGES=\"python3 g++-arm-linux-gnueabihf\"\n-export RUN_UNIT_TESTS=false\n-export RUN_FUNCTIONAL_TESTS=false\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"; fi\n+export DPKG_ADD_ARCH=\"armhf\"\n+export PACKAGES=\"python3-zmq g++-arm-linux-gnueabihf busybox libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export PACKAGES=\"$PACKAGES qemu-user\"\n+fi\n+export CONTAINER_NAME=ci_arm_linux\n+# Use debian to avoid 404 apt errors when cross compiling\n+export DOCKER_NAME_TAG=\"debian:buster\"\n+export USE_BUSY_BOX=true\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\"\n # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n # This could be removed once the ABI change warning does not show up by default\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --enable-werror\""
      },
      {
        "sha": "768e2ac558dc8c641fe2fb775c1e8877bfa498d6",
        "filename": "ci/test/00_setup_env_i686.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/test/00_setup_env_i686.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/ci/test/00_setup_env_i686.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686.sh?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,13 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export HOST=i686-pc-linux-gnu\n-export PACKAGES=\"g++-multilib python3-zmq\"\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --disable-bip70 --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n-export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "5688799f9e57d023ed19c65acd50638b424a089d",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=i686-pc-linux-gnu\n+export CONTAINER_NAME=ci_i686_centos_7\n+export DOCKER_NAME_TAG=centos:7\n+export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python36-zmq which patch lbzip2 dash\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports\"\n+export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "a4dc54d1c12d3023d4198534df3bf230d70c48d9",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,14 +1,15 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019 The Bitcoin Core developers\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-export HOST=x86_64-apple-darwin14\n+export CONTAINER_NAME=ci_macos_cross\n+export HOST=x86_64-apple-darwin16\n export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n-export OSX_SDK=10.11\n+export OSX_SDK=10.14\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"deploy\""
      },
      {
        "sha": "982e38daee477ba36b996bb56c2c3457ea5dd860",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,16 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-apple-darwin16\n+export PIP_PACKAGES=\"zmq\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+export TEST_RUNNER_EXTRA=\"wallet_disable\"  # Only run wallet_disable as a smoke test, see https://github.com/bitcoin/bitcoin/pull/17240#issuecomment-546022121 why the other tests are disabled\n+# Run without depends\n+export NO_DEPENDS=1\n+export OSX_SDK=\"\""
      },
      {
        "sha": "28c63f1cf6f5710554499609408b9a369d9786e4",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_asan\n+export PACKAGES=\"clang-8 llvm-8 python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+# Use clang-8 instead of default clang (which is clang-6 on Bionic) to avoid spurious segfaults when running on ppc64le\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang-8 CXX=clang++-8\""
      },
      {
        "sha": "43ee219ef98e20408434e79c0b6012e18b81d9fe",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "renamed",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,16 +1,17 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019 The Bitcoin Core developers\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-export HOST=x86_64-unknown-linux-gnu\n-export PACKAGES=\"clang llvm python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+export CONTAINER_NAME=ci_native_fuzz\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export RUN_FUZZ_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++\"",
        "previous_filename": "ci/test/00_setup_env_amd64_fuzz.sh"
      },
      {
        "sha": "c27d52500346b66cbc259763e70c0888d21d4cc4",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n+export CONTAINER_NAME=ci_native_fuzz_valgrind\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev valgrind\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUZZ_TESTS=true\n+export FUZZ_TESTS_CONFIG=\"--valgrind\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer CC=clang CXX=clang++\""
      },
      {
        "sha": "9c2be4cfac8e82fa6711a0c23de2e11fe9ff7ff8",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,12 +1,12 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019 The Bitcoin Core developers\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-export HOST=x86_64-unknown-linux-gnu\n+export CONTAINER_NAME=ci_native_nowallet\n export PACKAGES=\"python3-zmq\"\n export DEP_OPTS=\"NO_WALLET=1\"\n export GOAL=\"install\"",
        "previous_filename": "ci/test/00_setup_env_amd64_nowallet.sh"
      },
      {
        "sha": "4dedea23bc9c18f8af14646ac4fe5e4cc14def96",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "renamed",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,14 +1,17 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019 The Bitcoin Core developers\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-export HOST=x86_64-unknown-linux-gnu\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n+export CONTAINER_NAME=ci_native_qt5\n+export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n export TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n+export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n+export RUN_UNIT_TESTS=\"false\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\"\n+export TEST_PREVIOUS_RELEASES=true\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-c++17 --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\"",
        "previous_filename": "ci/test/00_setup_env_amd64_qt5.sh"
      },
      {
        "sha": "73ab5eebb684c5e85753863d9838ec282fd22863",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_tsan\n+export DOCKER_NAME_TAG=ubuntu:16.04\n+export PACKAGES=\"clang-8 llvm-8 python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=thread --disable-hardening --disable-asm CC=clang-8 CXX=clang++-8\""
      },
      {
        "sha": "153a781b0a66230e646254af6933ec98716daa87",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export CONTAINER_NAME=ci_native_valgrind\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev\"\n+export USE_VALGRIND=1\n+export NO_DEPENDS=1\n+if [[ \"${TRAVIS}\" == \"true\" && \"${TRAVIS_REPO_SLUG}\" != \"bitcoin/bitcoin\" ]]; then\n+  export TEST_RUNNER_EXTRA=\"wallet_disable\"  # Only run wallet_disable as a smoke test to not hit the 50 min travis time limit\n+else\n+  export TEST_RUNNER_EXTRA=\"--exclude rpc_bind --factor=2\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547\n+fi\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no CC=clang CXX=clang++\"  # TODO enable GUI"
      },
      {
        "sha": "c180d023de5e8f142b57660fa96b455ee6fa091d",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=s390x-linux-gnu\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is s390x and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-s390x\"}\"; fi\n+export PACKAGES=\"python3-zmq\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export DPKG_ADD_ARCH=\"s390x\"\n+  export PACKAGES=\"$PACKAGES g++-s390x-linux-gnu qemu-user libc6:s390x libstdc++6:s390x libfontconfig1:s390x libxcb1:s390x\"\n+fi\n+# Use debian to avoid 404 apt errors\n+export CONTAINER_NAME=ci_s390x\n+export DOCKER_NAME_TAG=\"debian:buster\"\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb\""
      },
      {
        "sha": "3e31867f2f0762b14fe89799b3cf36d945e6dc61",
        "filename": "ci/test/00_setup_env_s390x_host.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_s390x_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_s390x_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x_host.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=s390x-linux-gnu\n+export NO_DEPENDS=1\n+export BITCOIN_CONFIG=\"--with-incompatible-bdb --enable-reduce-exports\"\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\""
      },
      {
        "sha": "8f0c62a1a6e707ec7036793b6472f6c142630d42",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,11 +1,12 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019 The Bitcoin Core developers\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n+export CONTAINER_NAME=ci_win64\n export HOST=x86_64-w64-mingw32\n export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n export RUN_FUNCTIONAL_TESTS=false"
      },
      {
        "sha": "e939b9eeeb2963f65223a4a47a1663c0d47b41fe",
        "filename": "ci/test/03_before_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5dbf1b82f1cf943279fbb4fa18145986fac63918",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 80,
        "deletions": 19,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,49 +1,110 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-ccache echo \"Creating ccache dir if it didn't already exist\"\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  export LC_ALL=en_US.utf8\n+fi\n+if [[ $QEMU_USER_CMD == qemu-s390* ]]; then\n+  export LC_ALL=C\n+fi\n \n-if [ ! -d ${DIR_QA_ASSETS} ]; then\n-  git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  export PATH=\"/usr/local/opt/ccache/libexec:$PATH\"\n+  ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n fi\n-export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n \n-mkdir -p \"${BASE_BUILD_DIR}/sanitizer-output/\"\n-export ASAN_OPTIONS=\"\"\n-export LSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_BUILD_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n-env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n+# Create folders that are mounted into the docker\n+mkdir -p \"${CCACHE_DIR}\"\n+mkdir -p \"${PREVIOUS_RELEASES_DIR}\"\n+\n+export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n+export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n+env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS|TEST_PREVIOUS_RELEASES|PREVIOUS_RELEASES_DIR)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n   DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n fi\n \n-if [ -z \"$RUN_CI_ON_HOST\" ]; then\n+export P_CI_DIR=\"$PWD\"\n+\n+if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n   echo \"Creating $DOCKER_NAME_TAG container to run in\"\n   ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n \n-  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$BASE_BUILD_DIR,dst=$BASE_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $BASE_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n+  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n+                  --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n+                  --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n+                  --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n+                  --mount type=bind,src=$PREVIOUS_RELEASES_DIR,dst=$PREVIOUS_RELEASES_DIR \\\n+                  -w $BASE_ROOT_DIR \\\n+                  --env-file /tmp/env \\\n+                  --name $CONTAINER_NAME \\\n+                  $DOCKER_NAME_TAG)\n \n   DOCKER_EXEC () {\n-    docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"\n+    docker exec $DOCKER_ID bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n   }\n else\n   echo \"Running on host system without docker wrapper\"\n   DOCKER_EXEC () {\n-    bash -c \"cd $PWD && $*\"\n+    bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n   }\n fi\n+export -f DOCKER_EXEC\n \n-DOCKER_EXEC free -m -h\n-DOCKER_EXEC echo \"Number of CPUs \\(nproc\\): $(nproc)\"\n+if [ -n \"$DPKG_ADD_ARCH\" ]; then\n+  DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n+fi\n \n-${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n-${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install epel-release\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install $DOCKER_PACKAGES $PACKAGES\n+elif [ \"$CI_USE_APT_INSTALL\" != \"no\" ]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n+fi\n \n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n+  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n+else\n+  DOCKER_EXEC free -m -h\n+  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n+  DOCKER_EXEC echo $(lscpu | grep Endian)\n+  DOCKER_EXEC echo \"Free disk space:\"\n+  DOCKER_EXEC df -h\n+fi\n+\n+if [ ! -d ${DIR_QA_ASSETS} ]; then\n+ if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n+  DOCKER_EXEC git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+ fi\n+fi\n+export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n+\n+DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n+\n+if [ -z \"$DANGER_RUN_CI_ON_HOST\" ]; then\n+  echo \"Create $BASE_ROOT_DIR\"\n+  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n+fi\n+\n+if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n+  echo \"Setup to use BusyBox utils\"\n+  DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/\n+  # tar excluded for now because it requires passing in the exact archive type in ./depends (fixed in later BusyBox version)\n+  # find excluded for now because it does not recognize the -delete option in ./depends (fixed in later BusyBox version)\n+  # ar excluded for now because it does not recognize the -q option in ./depends (unknown if fixed)\n+  # shellcheck disable=SC1010\n+  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) $BASE_SCRATCH_DIR/bins/\\$util\\; done\n+  # Print BusyBox version\n+  DOCKER_EXEC patch --help\n+fi"
      },
      {
        "sha": "ab9d673101a8ec3d5e67c7e0dde51fa6aafb702a",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 26,
        "deletions": 8,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,24 +1,42 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file\n+# Make sure default datadir does not exist and is never read by creating a dummy file\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  echo > $HOME/Library/Application\\ Support/Bitcoin\n+else\n+  DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n+fi\n \n-mkdir -p depends/SDKs depends/sdk-sources\n+DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n \n-if [ -n \"$OSX_SDK\" ] && [ ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+if [ -n \"$OSX_SDK\" ] && [ ! -f ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n-if [ -n \"$OSX_SDK\" ] && [ -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+if [ -n \"$OSX_SDK\" ] && [ -f ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  DOCKER_EXEC tar -C ${DEPENDS_DIR}/SDKs -xf ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n fi\n if [ -z \"$NO_DEPENDS\" ]; then\n-  DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+  if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+    # CentOS has problems building the depends if the config shell is not explicitly set\n+    # (i.e. for libevent a Makefile with an empty SHELL variable is generated, leading to\n+    #  an error as the first command is executed)\n+    SHELL_OPTS=\"CONFIG_SHELL=/bin/bash\"\n+  else\n+    SHELL_OPTS=\"CONFIG_SHELL=\"\n+  fi\n+  DOCKER_EXEC $SHELL_OPTS make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+fi\n+if [ \"$TEST_PREVIOUS_RELEASES\" = \"true\" ]; then\n+  BEGIN_FOLD previous-versions\n+  DOCKER_EXEC contrib/devtools/previous_release.sh -b -t \"$PREVIOUS_RELEASES_DIR\" v0.15.2 v0.16.3 v0.17.1 v0.18.1 v0.19.0.1\n+  END_FOLD\n fi"
      },
      {
        "sha": "b68cd9d3f81491b5a71f822418d596efd1a77ed7",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,15 +1,13 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$BASE_BUILD_DIR/depends/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n-if [ -z \"$NO_DEPENDS\" ]; then\n-  DOCKER_EXEC ccache --max-size=$CCACHE_SIZE\n-fi\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n+DOCKER_EXEC \"ccache --zero-stats --max-size=$CCACHE_SIZE\"\n \n BEGIN_FOLD autogen\n if [ -n \"$CONFIG_SHELL\" ]; then\n@@ -19,28 +17,32 @@ else\n fi\n END_FOLD\n \n-mkdir -p build\n-cd build || (echo \"could not enter build directory\"; exit 1)\n+DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}\"\n+export P_CI_DIR=\"${BASE_BUILD_DIR}\"\n \n BEGIN_FOLD configure\n-DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+DOCKER_EXEC \"${BASE_ROOT_DIR}/configure\" --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n END_FOLD\n \n BEGIN_FOLD distdir\n DOCKER_EXEC make distdir VERSION=$HOST\n END_FOLD\n \n-cd \"bitcoin-$HOST\" || (echo \"could not enter distdir bitcoin-$HOST\"; exit 1)\n+export P_CI_DIR=\"${BASE_BUILD_DIR}/bitcoin-$HOST\"\n \n BEGIN_FOLD configure\n-DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n END_FOLD\n \n set -o errtrace\n-trap 'DOCKER_EXEC \"cat ${BASE_BUILD_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n+trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n \n BEGIN_FOLD build\n DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n END_FOLD\n \n-cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)\n+BEGIN_FOLD cache_stats\n+DOCKER_EXEC \"ccache --version | head -n 1 && ccache --show-stats\"\n+DOCKER_EXEC du -sh \"${DEPENDS_DIR}\"/*/\n+DOCKER_EXEC du -sh \"${PREVIOUS_RELEASES_DIR}\"\n+END_FOLD"
      },
      {
        "sha": "c8542862f29d113ba7dc68439907c25e1cbeaaee",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 26,
        "deletions": 7,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,29 +1,48 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C.UTF-8\n \n-cd \"build/bitcoin-$HOST\" || (echo \"could not enter distdir build/bitcoin-$HOST\"; exit 1)\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  BEGIN_FOLD wrap-qemu\n+  # Generate all binaries, so that they can be wrapped\n+  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n+  DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-qemu.sh\"\n+  END_FOLD\n+fi\n+\n+if [ -n \"$USE_VALGRIND\" ]; then\n+  BEGIN_FOLD wrap-valgrind\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-valgrind.sh\"\n+  END_FOLD\n+fi\n+\n+bash -c \"${CI_WAIT}\" &  # Print dots in case the tests take a long time to run\n \n if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n   BEGIN_FOLD unit-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$BASE_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n+  BEGIN_FOLD unit-tests-seq\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n   END_FOLD\n fi\n \n if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n   BEGIN_FOLD functional-tests\n-  DOCKER_EXEC test/functional/test_runner.py --ci --ansi --combinedlogslen=4000 ${TEST_RUNNER_EXTRA} --quiet --failfast\n+  DOCKER_EXEC test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 ${TEST_RUNNER_EXTRA} --quiet --failfast\n   END_FOLD\n fi\n \n if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n   BEGIN_FOLD fuzz-tests\n-  DOCKER_EXEC test/fuzz/test_runner.py -l DEBUG ${DIR_FUZZ_IN}\n+  DOCKER_EXEC test/fuzz/test_runner.py ${FUZZ_TESTS_CONFIG} -l DEBUG ${DIR_FUZZ_IN}\n   END_FOLD\n fi\n-\n-cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)"
      },
      {
        "sha": "be7d7fcc1fe19e32e4cf54a14849fbddb14b29cf",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"$QEMU_USER_CMD \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "6b3e6eb7e7412f1f4d1fe5de4bdfb0eeb97a1fba",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"valgrind --gen-suppressions=all --quiet --error-exitcode=1 --suppressions=${BASE_ROOT_DIR}/contrib/valgrind.supp \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "fca2038062e26818909f0727bb3e917877514757",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 357,
        "deletions": 299,
        "changes": 656,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,12 +1,11 @@\n-dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n-AC_PREREQ([2.60])\n+AC_PREREQ([2.69])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 18)\n+define(_CLIENT_VERSION_MINOR, 20)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_RC, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2019)\n+define(_COPYRIGHT_YEAR, 2020)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n@@ -37,14 +36,14 @@ dnl faketime breaks configure and is only needed for make. Disable it here.\n unset FAKETIME\n \n dnl Automake init set-up and checks\n-AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n+AM_INIT_AUTOMAKE([1.13 no-define subdir-objects foreign])\n \n dnl faketime messes with timestamps and causes configure to be re-run.\n dnl --disable-maintainer-mode can be used to bypass this.\n AM_MAINTAINER_MODE([enable])\n \n dnl make the compilation flags quiet unless V=1 is used\n-m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+AM_SILENT_RULES([yes])\n \n dnl Compiler checks (here before libtool).\n if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n@@ -62,8 +61,20 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n-dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+\n+AC_ARG_ENABLE([c++17],\n+  [AS_HELP_STRING([--enable-c++17],\n+  [enable compilation in c++17 mode (disabled by default)])],\n+  [use_cxx17=$enableval],\n+  [use_cxx17=no])\n+\n+dnl Require C++11 or C++17 compiler (no GNU extensions)\n+if test \"x$use_cxx17\" = xyes; then\n+  AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\n+else\n+  AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n+fi\n+\n dnl Check if -latomic is required for <std::atomic>\n CHECK_ATOMIC\n \n@@ -76,6 +87,10 @@ fi\n AC_PROG_OBJCXX\n ])\n \n+dnl Since libtool 1.5.2 (released 2004-01-25), on Linux libtool no longer\n+dnl sets RPATH for any directories in the dynamic linker search path.\n+dnl See more: https://wiki.debian.org/RpathIssue\n+LT_PREREQ([1.5.2])\n dnl Libtool init checks.\n LT_INIT([pic-only])\n \n@@ -131,12 +146,6 @@ AC_ARG_ENABLE(gui-tests,\n     [use_gui_tests=$enableval],\n     [use_gui_tests=$use_tests])\n \n-AC_ARG_WITH([rapidcheck],\n-  [AS_HELP_STRING([--with-rapidcheck],\n-  [enable RapidCheck property-based tests (default is yes if librapidcheck is found)])],\n-  [use_rapidcheck=$withval],\n-  [use_rapidcheck=auto])\n-\n AC_ARG_ENABLE(bench,\n     AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n     [use_bench=$enableval],\n@@ -222,60 +231,92 @@ AC_ARG_ENABLE([zmq],\n   [disable ZMQ notifications])],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n+\n AC_ARG_ENABLE([bip70],\n-  [AS_HELP_STRING([--disable-bip70],\n-  [disable BIP70 (payment protocol) support in GUI (enabled by default)])],\n+  [AS_HELP_STRING([--enable-bip70],\n+  [BIP70 (payment protocol) support in the GUI (no longer supported)])],\n   [enable_bip70=$enableval],\n-  [enable_bip70=auto])\n+  [enable_bip70=no])\n \n-AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n+if test x$enable_bip70 != xno; then\n+  AC_MSG_ERROR([BIP70 is no longer supported!])\n+fi\n \n AC_ARG_ENABLE(man,\n     [AS_HELP_STRING([--disable-man],\n                     [do not install man pages (default is to install)])],,\n     enable_man=yes)\n AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n \n-# Enable debug\n+dnl Enable debug\n AC_ARG_ENABLE([debug],\n     [AS_HELP_STRING([--enable-debug],\n                     [use compiler flags and macros suited for debugging (default is no)])],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n-# Enable different -fsanitize options\n+dnl Enable different -fsanitize options\n AC_ARG_WITH([sanitizers],\n     [AS_HELP_STRING([--with-sanitizers],\n                     [comma separated list of extra sanitizers to build with (default is none enabled)])],\n     [use_sanitizers=$withval])\n \n-# Enable gprof profiling\n+dnl Enable gprof profiling\n AC_ARG_ENABLE([gprof],\n     [AS_HELP_STRING([--enable-gprof],\n                     [use gprof profiling compiler flags (default is no)])],\n     [enable_gprof=$enableval],\n     [enable_gprof=no])\n \n-# Turn warnings into errors\n+dnl Pass compiler & linker flags that make builds deterministic\n+AC_ARG_ENABLE([determinism],\n+    [AS_HELP_STRING([--enable-determinism],\n+                    [Enable compilation flags that make builds deterministic (default is no)])],\n+    [enable_determinism=$enableval],\n+    [enable_determinism=no])\n+\n+dnl Turn warnings into errors\n AC_ARG_ENABLE([werror],\n     [AS_HELP_STRING([--enable-werror],\n                     [Treat certain compiler warnings as errors (default is no)])],\n     [enable_werror=$enableval],\n     [enable_werror=no])\n \n AC_LANG_PUSH([C++])\n+\n+dnl Check for a flag to turn compiler warnings into errors. This is helpful for checks which may\n+dnl appear to succeed because by default they merely emit warnings when they fail.\n+dnl\n+dnl Note that this is not necessarily a check to see if -Werror is supported, but rather to see if\n+dnl a compile with -Werror can succeed. This is important because the compiler may already be\n+dnl warning about something unrelated, for example about some path issue. If that is the case,\n+dnl -Werror cannot be used because all of those warnings would be turned into errors.\n AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n \n+dnl Check for a flag to turn linker warnings into errors. When flags are passed to linkers via the\n+dnl compiler driver using a -Wl,-foo flag, linker warnings may be swallowed rather than bubbling up.\n+dnl See note above, the same applies here as well.\n+dnl\n+dnl LDFLAG_WERROR Should only be used when testing -Wl,*\n+case $host in\n+ *darwin*)\n+    AX_CHECK_LINK_FLAG([-Wl,-fatal_warnings],[LDFLAG_WERROR=\"-Wl,-fatal_warnings\"],[LDFLAG_WERROR=\"\"])\n+    ;;\n+  *)\n+    AX_CHECK_LINK_FLAG([-Wl,--fatal-warnings],[LDFLAG_WERROR=\"-Wl,--fatal-warnings\"],[LDFLAG_WERROR=\"\"])\n+    ;;\n+esac\n+\n if test \"x$enable_debug\" = xyes; then\n-  # Clear default -g -O2 flags\n+  dnl Clear default -g -O2 flags\n   if test \"x$CXXFLAGS_overridden\" = xno; then\n \tCXXFLAGS=\"\"\n   fi\n \n-  # Disable all optimizations\n+  dnl Disable all optimizations\n   AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\n \n-  # Prefer -g3, fall back to -g if that is unavailable.\n+  dnl Prefer -g3, fall back to -g if that is unavailable.\n   AX_CHECK_COMPILE_FLAG(\n     [-g3],\n     [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g3\"]],\n@@ -288,19 +329,19 @@ if test \"x$enable_debug\" = xyes; then\n fi\n \n if test x$use_sanitizers != x; then\n-  # First check if the compiler accepts flags. If an incompatible pair like\n-  # -fsanitize=address,thread is used here, this check will fail. This will also\n-  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  dnl First check if the compiler accepts flags. If an incompatible pair like\n+  dnl -fsanitize=address,thread is used here, this check will fail. This will also\n+  dnl fail if a bad argument is passed, e.g. -fsanitize=undfeined\n   AX_CHECK_COMPILE_FLAG(\n     [[-fsanitize=$use_sanitizers]],\n     [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n     [AC_MSG_ERROR([compiler did not accept requested flags])])\n \n-  # Some compilers (e.g. GCC) require additional libraries like libasan,\n-  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n-  # flag. This is a separate check so we can give a better error message when\n-  # the sanitize flags are supported by the compiler but the actual sanitizer\n-  # libs are missing.\n+  dnl Some compilers (e.g. GCC) require additional libraries like libasan,\n+  dnl libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  dnl flag. This is a separate check so we can give a better error message when\n+  dnl the sanitize flags are supported by the compiler but the actual sanitizer\n+  dnl libs are missing.\n   AX_CHECK_LINK_FLAG(\n     [[-fsanitize=$use_sanitizers]],\n     [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n@@ -322,47 +363,57 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=conditional-uninitialized],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=conditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wgnu],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wgnu\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wconditional-uninitialized],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wconditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\n \n-  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n-  ## unknown options if any other warning is produced. Test the -Wfoo case, and\n-  ## set the -Wno-foo case if it works.\n+  dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  dnl unknown options if any other warning is produced. Test the -Wfoo case, and\n+  dnl set the -Wno-foo case if it works.\n   AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n fi\n \n-enable_hwcrc32=no\n+enable_sse42=no\n enable_sse41=no\n enable_avx2=no\n enable_shani=no\n \n if test \"x$use_asm\" = \"xyes\"; then\n \n-# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n-# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n-# compatibility.\n+dnl Check for optional instruction set support. Enabling these does _not_ imply that all code will\n+dnl be compiled with them, rather that specific objects/libs may use them after checking for runtime\n+dnl compatibility.\n+\n+dnl x86\n AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\n AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\n AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n \n TEMP_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n-AC_MSG_CHECKING(for assembler crc32 support)\n+AC_MSG_CHECKING(for SSE4.2 intrinsics)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n     #include <stdint.h>\n     #if defined(_MSC_VER)\n@@ -377,7 +428,7 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n     l = _mm_crc32_u64(l, 0);\n     return l;\n   ]])],\n- [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n+ [ AC_MSG_RESULT(yes); enable_sse42=yes],\n  [ AC_MSG_RESULT(no)]\n )\n CXXFLAGS=\"$TEMP_CXXFLAGS\"\n@@ -429,6 +480,24 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n )\n CXXFLAGS=\"$TEMP_CXXFLAGS\"\n \n+# ARM\n+AX_CHECK_COMPILE_FLAG([-march=armv8-a+crc+crypto],[[ARM_CRC_CXXFLAGS=\"-march=armv8-a+crc+crypto\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $ARM_CRC_CXXFLAGS\"\n+AC_MSG_CHECKING(for ARM CRC32 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <arm_acle.h>\n+    #include <arm_neon.h>\n+  ]],[[\n+    __crc32cb(0, 0); __crc32ch(0, 0); __crc32cw(0, 0); __crc32cd(0, 0);\n+    vmull_p64(0, 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_arm_crc=yes; ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n fi\n \n CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n@@ -473,32 +542,27 @@ use_pkgconfig=yes\n case $host in\n   *mingw*)\n \n-     #pkgconfig does more harm than good with MinGW\n+     dnl pkgconfig does more harm than good with MinGW\n      use_pkgconfig=no\n \n      TARGET_OS=windows\n-     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(libmingwthrd missing))\n-     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(libkernel32 missing))\n-     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(libuser32 missing))\n-     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(libgdi32 missing))\n-     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(libcomdlg32 missing))\n-     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(libwinspool missing))\n-     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(libwinmm missing))\n-     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(libshell32 missing))\n-     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(libcomctl32 missing))\n-     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(libole32 missing))\n-     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(liboleaut32 missing))\n-     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(libuuid missing))\n-     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(librpcrt4 missing))\n-     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(libadvapi32 missing))\n-     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(libws2_32 missing))\n-     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(libmswsock missing))\n-     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(libshlwapi missing))\n-     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(libiphlpapi missing))\n-     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(libcrypt32 missing))\n-\n-     # -static is interpreted by libtool, where it has a different meaning.\n-     # In libtool-speak, it's -all-static.\n+     AC_CHECK_LIB([kernel32], [GetModuleFileNameA],, AC_MSG_ERROR(libkernel32 missing))\n+     AC_CHECK_LIB([user32],   [main],, AC_MSG_ERROR(libuser32 missing))\n+     AC_CHECK_LIB([gdi32],    [main],, AC_MSG_ERROR(libgdi32 missing))\n+     AC_CHECK_LIB([comdlg32], [main],, AC_MSG_ERROR(libcomdlg32 missing))\n+     AC_CHECK_LIB([winmm],    [main],, AC_MSG_ERROR(libwinmm missing))\n+     AC_CHECK_LIB([shell32],  [SHGetSpecialFolderPathW],, AC_MSG_ERROR(libshell32 missing))\n+     AC_CHECK_LIB([comctl32], [main],, AC_MSG_ERROR(libcomctl32 missing))\n+     AC_CHECK_LIB([ole32],    [CoCreateInstance],, AC_MSG_ERROR(libole32 missing))\n+     AC_CHECK_LIB([oleaut32], [main],, AC_MSG_ERROR(liboleaut32 missing))\n+     AC_CHECK_LIB([uuid],     [main],, AC_MSG_ERROR(libuuid missing))\n+     AC_CHECK_LIB([advapi32], [CryptAcquireContextW],, AC_MSG_ERROR(libadvapi32 missing))\n+     AC_CHECK_LIB([ws2_32],   [WSAStartup],, AC_MSG_ERROR(libws2_32 missing))\n+     AC_CHECK_LIB([shlwapi],  [PathRemoveFileSpecW],, AC_MSG_ERROR(libshlwapi missing))\n+     AC_CHECK_LIB([iphlpapi], [GetAdaptersAddresses],, AC_MSG_ERROR(libiphlpapi missing))\n+\n+     dnl -static is interpreted by libtool, where it has a different meaning.\n+     dnl In libtool-speak, it's -all-static.\n      AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n \n      AC_PATH_PROG([MAKENSIS], [makensis], none)\n@@ -512,16 +576,9 @@ case $host in\n      fi\n \n      CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601\"\n-     LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n      if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n        CXXFLAGS=\"$CXXFLAGS -w\"\n      fi\n-     case $host in\n-       i?86-*) WINDOWS_BITS=32 ;;\n-       x86_64-*) WINDOWS_BITS=64 ;;\n-       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n-     esac\n-     AC_SUBST(WINDOWS_BITS)\n \n      dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n      dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n@@ -534,7 +591,6 @@ case $host in\n      ;;\n   *darwin*)\n      TARGET_OS=darwin\n-     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n      if  test x$cross_compiling != xyes; then\n        BUILD_OS=darwin\n        AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n@@ -546,13 +602,8 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n-         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n-         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n-         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n-         if test x$openssl_prefix != x; then\n-           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n+         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n+         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n          if test x$bdb_prefix != x; then\n            CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n            LIBS=\"$LIBS -L$bdb_prefix/lib\"\n@@ -584,41 +635,16 @@ case $host in\n        esac\n      fi\n \n-     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"],, [[$LDFLAG_WERROR]])\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\"\n      OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n    *android*)\n      dnl make sure android stays above linux for hosts like *linux-android*\n-     LEVELDB_TARGET_FLAGS=\"-DOS_ANDROID\"\n+     TARGET_OS=android\n      ;;\n    *linux*)\n      TARGET_OS=linux\n-     LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n-     ;;\n-   *kfreebsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_KFREEBSD\"\n-     ;;\n-   *freebsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_FREEBSD\"\n-     ;;\n-   *openbsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_OPENBSD\"\n-     ;;\n-   *netbsd*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_NETBSD\"\n-     ;;\n-   *dragonfly*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_DRAGONFLYBSD\"\n-     ;;\n-   *solaris*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_SOLARIS\"\n-     ;;\n-   *hpux*)\n-     LEVELDB_TARGET_FLAGS=\"-DOS_HPUX\"\n-     ;;\n-   *)\n-     AC_MSG_ERROR(Cannot build leveldb for $host. Please file a bug report.)\n      ;;\n esac\n \n@@ -654,7 +680,6 @@ if test x$use_lcov = xyes; then\n     [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n   AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n     [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n-  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])\n   CXXFLAGS=\"$CXXFLAGS -Og\"\n fi\n \n@@ -668,11 +693,11 @@ AC_C_BIGENDIAN\n dnl Check for pthread compile/link requirements\n AX_PTHREAD\n \n-# The following macro will add the necessary defines to bitcoin-config.h, but\n-# they also need to be passed down to any subprojects. Pull the results out of\n-# the cache and add them to CPPFLAGS.\n+dnl The following macro will add the necessary defines to bitcoin-config.h, but\n+dnl they also need to be passed down to any subprojects. Pull the results out of\n+dnl the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n-# detect POSIX or GNU variant of strerror_r\n+dnl detect POSIX or GNU variant of strerror_r\n AC_FUNC_STRERROR_R\n \n if test x$ac_cv_sys_file_offset_bits != x &&\n@@ -687,20 +712,14 @@ if test x$ac_cv_sys_large_files != x &&\n   CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n fi\n \n-AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n-\n AX_GCC_FUNC_ATTRIBUTE([visibility])\n AX_GCC_FUNC_ATTRIBUTE([dllexport])\n AX_GCC_FUNC_ATTRIBUTE([dllimport])\n \n if test x$use_glibc_compat != xno; then\n \n-  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n-  #in anyway for back-compat.\n-  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(librt missing))\n-\n-  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n-  # See which one is present here.\n+  dnl __fdelt_chk's params and return type have changed from long unsigned int to long int.\n+  dnl See which one is present here.\n   AC_MSG_CHECKING(__fdelt_chk type)\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n                     #undef _FORTIFY_SOURCE\n@@ -712,8 +731,8 @@ if test x$use_glibc_compat != xno; then\n     [ fdelt_type=\"long int\"])\n   AC_MSG_RESULT($fdelt_type)\n   AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n-  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"],, [[$LDFLAG_WERROR]])\n else\n   AC_SEARCH_LIBS([clock_gettime],[rt])\n fi\n@@ -736,31 +755,36 @@ if test \"x$enable_gprof\" = xyes; then\n fi\n \n if test x$TARGET_OS != xwindows; then\n-  # All windows code is PIC, forcing it on just adds useless compile warnings\n+  dnl All windows code is PIC, forcing it on just adds useless compile warnings\n   AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n fi\n \n-# All versions of gcc that we commonly use for building are subject to bug\n-# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n-# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag)\n+dnl All versions of gcc that we commonly use for building are subject to bug\n+dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+dnl -fstack-reuse=none for all gcc builds. (Only gcc understands this flag)\n AX_CHECK_COMPILE_FLAG([-fstack-reuse=none],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-reuse=none\"])\n if test x$use_hardening != xno; then\n   use_hardening=yes\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+  dnl When enable_debug is yes, all optimizations are disabled.\n+  dnl However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n+  dnl Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n+  if test x$enable_debug != xyes; then\n+    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+      ])\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n     ])\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-  ])\n+  fi\n \n-  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"],, [[$LDFLAG_WERROR]])\n   AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n \n   case $host in\n@@ -770,20 +794,63 @@ if test x$use_hardening != xno; then\n   esac\n fi\n \n-dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n+dnl These flags are specific to ld64, and may cause issues with other linkers.\n+dnl For example: GNU ld will intepret -dead_strip as -de and then try and use\n+dnl \"ad_strip\" as the symbol for the entry point.\n if test x$TARGET_OS = xdarwin; then\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-bind_at_load]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-bind_at_load\"],, [[$LDFLAG_WERROR]])\n+fi\n+\n+if test x$enable_determinism = xyes; then\n+  if test x$TARGET_OS = xwindows; then\n+    AX_CHECK_LINK_FLAG([[-Wl,--no-insert-timestamp]], [LDFLAGS=\"$LDFLAGS -Wl,--no-insert-timestamp\"],, [[$LDFLAG_WERROR]])\n+  fi\n fi\n \n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n+\n+dnl FD_ZERO may be dependent on a declaration of memcpy, e.g. in SmartOS\n+dnl check that it fails to build without memcpy, then that it builds with\n+AC_MSG_CHECKING(FD_ZERO memcpy dependence)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <cstddef>\n+    #if HAVE_SYS_SELECT_H\n+    #include <sys/select.h>\n+    #endif\n+  ]],[[\n+    #if HAVE_SYS_SELECT_H\n+    fd_set fds;\n+    FD_ZERO(&fds);\n+    #endif\n+  ]])],\n+  [ AC_MSG_RESULT(no) ],\n+  [\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+          #include <cstring>\n+          #if HAVE_SYS_SELECT_H\n+          #include <sys/select.h>\n+          #endif\n+        ]], [[\n+          #if HAVE_SYS_SELECT_H\n+          fd_set fds;\n+          FD_ZERO(&fds);\n+          #endif\n+        ]])],\n+        [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_CSTRING_DEPENDENT_FD_ZERO, 1, [Define this symbol if FD_ZERO is dependent of a memcpy declaration being available]) ],\n+        [ AC_MSG_ERROR(failed with cstring include) ]\n+      )\n+  ]\n+)\n \n AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n     [#include <sys/types.h>\n     #include <ifaddrs.h>]\n )\n AC_CHECK_DECLS([strnlen])\n \n-# Check for daemon(3), unrelated to --with-daemon (although used by it)\n+dnl Check for daemon(3), unrelated to --with-daemon (although used by it)\n AC_CHECK_DECLS([daemon])\n \n AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n@@ -816,6 +883,22 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+dnl Check for posix_fallocate\n+AC_MSG_CHECKING(for posix_fallocate)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+                   // same as in src/util/system.cpp\n+                   #ifdef __linux__\n+                   #ifdef _POSIX_C_SOURCE\n+                   #undef _POSIX_C_SOURCE\n+                   #endif\n+                   #define _POSIX_C_SOURCE 200112L\n+                   #endif // __linux__\n+                   #include <fcntl.h>]],\n+                   [[ int f = posix_fallocate(0, 0, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_POSIX_FALLOCATE, 1,[Define this symbol if you have posix_fallocate]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING([for visibility attribute])\n AC_LINK_IFELSE([AC_LANG_SOURCE([\n   int foo_def( void ) __attribute__((visibility(\"default\")));\n@@ -833,6 +916,9 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n+dnl thread_local is currently disabled when building with glibc back compat.\n+dnl Our minimum supported glibc is 2.17, however support for thread_local\n+dnl did not arrive in glibc until 2.18.\n if test \"x$use_thread_local\" = xyes || { test \"x$use_thread_local\" = xauto && test \"x$use_glibc_compat\" = xno; }; then\n   TEMP_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n@@ -849,19 +935,14 @@ if test \"x$use_thread_local\" = xyes || { test \"x$use_thread_local\" = xauto && te\n     [\n      case $host in\n        *mingw*)\n-          # mingw32's implementation of thread_local has also been shown to behave\n-          # erroneously under concurrent usage; see:\n-          # https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n-          AC_MSG_RESULT(no)\n-          ;;\n-        *darwin*)\n-          # TODO enable thread_local on later versions of Darwin where it is\n-          # supported (per https://stackoverflow.com/a/29929949)\n+          dnl mingw32's implementation of thread_local has also been shown to behave\n+          dnl erroneously under concurrent usage; see:\n+          dnl https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n           AC_MSG_RESULT(no)\n           ;;\n         *freebsd*)\n-          # FreeBSD's implementation of thread_local is also buggy (per\n-          # https://groups.google.com/d/msg/bsdmailinglist/22ncTZAbDp4/Dii_pII5AwAJ)\n+          dnl FreeBSD's implementation of thread_local is also buggy (per\n+          dnl https://groups.google.com/d/msg/bsdmailinglist/22ncTZAbDp4/Dii_pII5AwAJ)\n           AC_MSG_RESULT(no)\n           ;;\n         *)\n@@ -877,7 +958,23 @@ if test \"x$use_thread_local\" = xyes || { test \"x$use_thread_local\" = xauto && te\n   LDFLAGS=\"$TEMP_LDFLAGS\"\n fi\n \n-# Check for different ways of gathering OS randomness\n+dnl check for gmtime_r(), fallback to gmtime_s() if that is unavailable\n+dnl fail if neither are available.\n+AC_MSG_CHECKING(for gmtime_r)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n+  [[ gmtime_r((const time_t *) nullptr, (struct tm *) nullptr); ]])],\n+  [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GMTIME_R, 1, [Define this symbol if gmtime_r is available]) ],\n+  [ AC_MSG_RESULT(no);\n+    AC_MSG_CHECKING(for gmtime_s);\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <ctime>]],\n+       [[ gmtime_s((struct tm *) nullptr, (const time_t *) nullptr); ]])],\n+       [ AC_MSG_RESULT(yes)],\n+       [ AC_MSG_RESULT(no); AC_MSG_ERROR(Both gmtime_r and gmtime_s are unavailable) ]\n+    )\n+  ]\n+)\n+\n+dnl Check for different ways of gathering OS randomness\n AC_MSG_CHECKING(for Linux getrandom syscall)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n   #include <sys/syscall.h>\n@@ -902,10 +999,24 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for sysctl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL, 1,[Define this symbol if the BSD sysctl() is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING(for sysctl KERN_ARND)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n   #include <sys/sysctl.h>]],\n- [[ static const int name[2] = {CTL_KERN, KERN_ARND};\n+ [[ #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n     sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n  [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n  [ AC_MSG_RESULT(no)]\n@@ -919,7 +1030,73 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>\n  [ AC_MSG_RESULT(no)]\n )\n \n-# Check for reduced exports\n+dnl LevelDB platform checks\n+AC_MSG_CHECKING(for fdatasync)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n+ [[ fdatasync(0); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_FDATASYNC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_FDATASYNC=0 ]\n+)\n+\n+AC_MSG_CHECKING(for F_FULLFSYNC)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n+ [[ fcntl(0, F_FULLFSYNC, 0); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_FULLFSYNC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_FULLFSYNC=0 ]\n+)\n+\n+AC_MSG_CHECKING(for O_CLOEXEC)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <fcntl.h>]],\n+ [[ open(\"\", O_CLOEXEC); ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_O_CLOEXEC=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_O_CLOEXEC=0 ]\n+)\n+\n+dnl crc32c platform checks\n+AC_MSG_CHECKING(for __builtin_prefetch)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+  char data = 0;\n+  const char* address = &data;\n+  __builtin_prefetch(address, 0, 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_BUILTIN_PREFETCH=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_BUILTIN_PREFETCH=0 ]\n+)\n+\n+AC_MSG_CHECKING(for _mm_prefetch)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <xmmintrin.h>]], [[\n+  char data = 0;\n+  const char* address = &data;\n+  _mm_prefetch(address, _MM_HINT_NTA);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_MM_PREFETCH=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_MM_PREFETCH=0 ]\n+)\n+\n+AC_MSG_CHECKING(for strong getauxval support in the system headers)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <arm_acle.h>\n+    #include <arm_neon.h>\n+    #include <sys/auxv.h>\n+  ]], [[\n+    getauxval(AT_HWCAP);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_STRONG_GETAUXVAL=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_STRONG_GETAUXVAL=0 ]\n+)\n+\n+AC_MSG_CHECKING(for weak getauxval support in the compiler)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    unsigned long getauxval(unsigned long type) __attribute__((weak));\n+    #define AT_HWCAP 16\n+  ]], [[\n+    getauxval(AT_HWCAP);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); HAVE_WEAK_GETAUXVAL=1 ],\n+ [ AC_MSG_RESULT(no); HAVE_WEAK_GETAUXVAL=0 ]\n+)\n+\n+dnl Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n   [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n@@ -931,7 +1108,7 @@ AC_LINK_IFELSE(\n         [[ #include <cstdlib> ]],\n         [[ int nErr = std::system(\"\"); ]]\n     )],\n-    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_STD__SYSTEM, 1, Define to 1 if you have the `std::system' function.)],\n+    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_STD__SYSTEM, 1, Define to 1 if std::system is available.)],\n     [ AC_MSG_RESULT(no) ]\n )\n \n@@ -941,11 +1118,10 @@ AC_LINK_IFELSE(\n         [[ ]],\n         [[ int nErr = ::_wsystem(\"\"); ]]\n     )],\n-    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_WSYSTEM, 1, Define to 1 if you have the `::wsystem' function.)],\n+    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_WSYSTEM, 1, Define to 1 if ::wsystem is available.)],\n     [ AC_MSG_RESULT(no) ]\n )\n \n-# Define to 1 if std::system or ::wsystem (Windows) is available\n AC_DEFINE([HAVE_SYSTEM], [HAVE_STD__SYSTEM || HAVE_WSYSTEM], [std::system or ::wsystem])\n \n LEVELDB_CPPFLAGS=\n@@ -1032,7 +1208,6 @@ fi\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_THREAD\n-AX_BOOST_CHRONO\n \n dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n@@ -1062,7 +1237,7 @@ fi\n \n if test x$use_reduce_exports = xyes; then\n     CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n+    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],, [[$LDFLAG_WERROR]])\n fi\n \n if test x$use_tests = xyes; then\n@@ -1099,7 +1274,7 @@ fi\n \n if test x$use_boost = xyes; then\n \n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB\"\n \n \n dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n@@ -1137,76 +1312,20 @@ AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n LIBS=\"$TEMP_LIBS\"\n CPPFLAGS=\"$TEMP_CPPFLAGS\"\n \n-dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n-dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n-dnl a working version is available, else fall back to sleep. sleep was removed\n-dnl after 1.56.\n-dnl If neither is available, abort.\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/thread/thread.hpp>\n-  #include <boost/version.hpp>\n-  ]],[[\n-  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n-      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes;\n-     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-if test x$boost_sleep != xyes; then\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/version.hpp>\n-  #include <boost/thread.hpp>\n-  #include <boost/date_time/posix_time/posix_time_types.hpp>\n-  ]],[[\n-  #if BOOST_VERSION <= 105600\n-      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-\n-if test x$boost_sleep != xyes; then\n-  AC_MSG_ERROR(No working boost sleep implementation found.)\n-fi\n-\n fi\n \n if test x$use_pkgconfig = xyes; then\n   : dnl\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl not found.)])\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n-      if test x$enable_bip70 != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [have_protobuf=no])])\n-      fi\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n-      if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n+      if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\n+        PKG_CHECK_MODULES([EVENT], [libevent >= 2.0.21], [use_libevent=yes], [AC_MSG_ERROR(libevent version 2.0.21 or greater not found.)])\n         if test x$TARGET_OS != xwindows; then\n-          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n+          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads >= 2.0.21],, [AC_MSG_ERROR(libevent_pthreads version 2.0.21 or greater not found.)])\n         fi\n       fi\n \n@@ -1222,14 +1341,9 @@ if test x$use_pkgconfig = xyes; then\n     ]\n   )\n else\n-  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n-  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n \n-  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n-  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n-\n-  if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n+  if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\n+    AC_CHECK_HEADER([event2/event.h], [use_libevent=yes], AC_MSG_ERROR(libevent headers missing),)\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n     if test x$TARGET_OS != xwindows; then\n       AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n@@ -1259,38 +1373,12 @@ else\n     esac\n   fi\n \n-  if test x$enable_bip70 != xno; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], [have_protobuf=no]))\n-  fi\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n     BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n-save_CXXFLAGS=\"${CXXFLAGS}\"\n-CXXFLAGS=\"${CXXFLAGS} ${CRYPTO_CFLAGS} ${SSL_CFLAGS}\"\n-AC_CHECK_DECLS([EVP_MD_CTX_new],,,[AC_INCLUDES_DEFAULT\n-#include <openssl/x509_vfy.h>\n-])\n-CXXFLAGS=\"${save_CXXFLAGS}\"\n-\n-dnl RapidCheck property-based testing\n-\n-enable_property_tests=no\n-if test \"x$use_rapidcheck\" = xauto; then\n-    AC_CHECK_HEADERS([rapidcheck.h], [enable_property_tests=yes])\n-elif test \"x$use_rapidcheck\" != xno; then\n-    enable_property_tests=yes\n-fi\n-\n-RAPIDCHECK_LIBS=\n-if test \"x$enable_property_tests\" = xyes; then\n-   RAPIDCHECK_LIBS=-lrapidcheck\n-fi\n-AC_SUBST(RAPIDCHECK_LIBS)\n-AM_CONDITIONAL([ENABLE_PROPERTY_TESTS], [test x$enable_property_tests = xyes])\n-\n dnl univalue check\n \n need_bundled_univalue=yes\n@@ -1339,12 +1427,6 @@ AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n AC_SUBST(UNIVALUE_CFLAGS)\n AC_SUBST(UNIVALUE_LIBS)\n \n-\n-if test x$have_protobuf != xno &&\n-   test x$enable_bip70 != xno; then\n-  BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n-fi\n-\n AC_MSG_CHECKING([whether to build bitcoind])\n AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n AC_MSG_RESULT($build_bitcoind)\n@@ -1442,18 +1524,16 @@ if test x$bitcoin_enable_qt != xno; then\n   AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n   if test x$have_qrencode = xno; then\n     if test x$use_qr = xyes; then\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n+      AC_MSG_ERROR([QR support requested but cannot be built. Use --without-qrencode])\n     fi\n-    AC_MSG_RESULT(no)\n+    use_qr=no\n   else\n     if test x$use_qr != xno; then\n-      AC_MSG_RESULT(yes)\n       AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n       use_qr=yes\n-    else\n-      AC_MSG_RESULT(no)\n     fi\n   fi\n+  AC_MSG_RESULT([$use_qr])\n \n   if test x$XGETTEXT = x; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n@@ -1466,23 +1546,6 @@ if test x$bitcoin_enable_qt != xno; then\n   else\n     AC_MSG_RESULT([no])\n   fi\n-\n-  AC_MSG_CHECKING([whether to build BIP70 support])\n-  if test x$have_protobuf = xno; then\n-    if test x$enable_bip70 = xyes; then\n-      AC_MSG_ERROR(protobuf missing)\n-    fi\n-    enable_bip70=no\n-    AC_MSG_RESULT(no)\n-  else\n-    if test x$enable_bip70 != xno; then\n-      AC_DEFINE([ENABLE_BIP70],[1],[Define if BIP70 support should be compiled in])\n-      enable_bip70=yes\n-      AC_MSG_RESULT([yes])\n-    else\n-      AC_MSG_RESULT([no])\n-    fi\n-  fi\n fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n@@ -1515,17 +1578,19 @@ AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n-AM_CONDITIONAL([ENABLE_BIP70],[test x$enable_bip70 = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n+AM_CONDITIONAL([USE_LIBEVENT],[test x$use_libevent = xyes])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n-AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n+AM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\n AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n+AM_CONDITIONAL([ENABLE_ARM_CRC],[test x$enable_arm_crc = xyes])\n AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n+AM_CONDITIONAL([WORDS_BIGENDIAN],[test x$ac_cv_c_bigendian = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1572,26 +1637,32 @@ AC_SUBST(SSE42_CXXFLAGS)\n AC_SUBST(SSE41_CXXFLAGS)\n AC_SUBST(AVX2_CXXFLAGS)\n AC_SUBST(SHANI_CXXFLAGS)\n+AC_SUBST(ARM_CRC_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n AC_SUBST(BOOST_LIBS)\n AC_SUBST(TESTDEFS)\n-AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n-AC_SUBST(CRYPTO_LIBS)\n-AC_SUBST(SSL_LIBS)\n AC_SUBST(EVENT_LIBS)\n AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)\n-AC_SUBST(PROTOBUF_LIBS)\n AC_SUBST(QR_LIBS)\n+AC_SUBST(HAVE_GMTIME_R)\n+AC_SUBST(HAVE_FDATASYNC)\n+AC_SUBST(HAVE_FULLFSYNC)\n+AC_SUBST(HAVE_O_CLOEXEC)\n+AC_SUBST(HAVE_BUILTIN_PREFETCH)\n+AC_SUBST(HAVE_MM_PREFETCH)\n+AC_SUBST(HAVE_STRONG_GETAUXVAL)\n+AC_SUBST(HAVE_WEAK_GETAUXVAL)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n+AC_CONFIG_LINKS([test/fuzz/test_runner.py:test/fuzz/test_runner.py])\n AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])\n \n@@ -1627,17 +1698,6 @@ AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n \n-dnl Taken from https://wiki.debian.org/RpathIssue\n-case $host in\n-   *-*-linux-gnu)\n-     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n-     sed < libtool > libtool-2 \\\n-     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n-     mv libtool-2 libtool\n-     chmod 755 libtool\n-   ;;\n-esac\n-\n dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n case ${OS} in\n    *Windows*)\n@@ -1651,13 +1711,11 @@ echo \"Options used to compile and link:\"\n echo \"  with wallet   = $enable_wallet\"\n echo \"  with gui / qt = $bitcoin_enable_qt\"\n if test x$bitcoin_enable_qt != xno; then\n-    echo \"    with bip70  = $enable_bip70\"\n     echo \"    with qr     = $use_qr\"\n fi\n echo \"  with zmq      = $use_zmq\"\n echo \"  with test     = $use_tests\"\n if test x$use_tests != xno; then\n-    echo \"    with prop   = $enable_property_tests\"\n     echo \"    with fuzz   = $enable_fuzz\"\n fi\n echo \"  with bench    = $use_bench\""
      },
      {
        "sha": "361975baa4915b26e4e65fecaf359d230a411450",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -33,12 +33,12 @@ Files used during the gitian build process. For more information about gitian, s\n PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n-Scripts and notes for Mac builds. \n+Scripts and notes for Mac builds.\n \n ### [Gitian-build](/contrib/gitian-build.py) ###\n Script for running full Gitian builds.\n \n-Test and Verify Tools \n+Test and Verify Tools\n ---------------------\n \n ### [TestGen](/contrib/testgen) ###"
      },
      {
        "sha": "ddea58a05cc1a9f0031b53b0d58f8c3801b32492",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "modified",
        "additions": 5,
        "deletions": 18,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n # bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -17,13 +17,6 @@ _bitcoin_rpc() {\n     $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n }\n \n-# Add wallet accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n _bitcoin_cli() {\n     local cur prev words=() cword\n     local bitcoin_cli\n@@ -60,10 +53,9 @@ _bitcoin_cli() {\n     if ((cword > 3)); then\n         case ${words[cword-3]} in\n             addmultisigaddress)\n-                _bitcoin_accounts\n                 return 0\n                 ;;\n-            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaddress|listsinceblock)\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n@@ -80,14 +72,10 @@ _bitcoin_cli() {\n                 COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n-            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n+            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listreceivedbyaddress|sendrawtransaction)\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n         esac\n     fi\n \n@@ -96,12 +84,11 @@ _bitcoin_cli() {\n             _filedir\n             return 0\n             ;;\n-        getaddednodeinfo|getrawmempool|lockunspent|setgenerate)\n+        getaddednodeinfo|getrawmempool|lockunspent)\n             COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n             return 0\n             ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n+        getbalance|getnewaddress|listtransactions|sendmany)\n             return 0\n             ;;\n     esac"
      },
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -16,6 +16,7 @@ FORMS += \\\n     ../src/qt/forms/sendcoinsentry.ui \\\n     ../src/qt/forms/signverifymessagedialog.ui \\\n     ../src/qt/forms/transactiondescdialog.ui \\\n+    ../src/qt/forms/createwalletdialog.ui\n \n RESOURCES += \\\n     ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "ec1d9512d4759e79ff284ceb09ae0ee16bbdb653",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n # bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -15,7 +15,7 @@ _bitcoind() {\n     _get_comp_words_by_ref -n = cur prev words cword\n \n     case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-rootcertificates=*|-rpccookiefile=*|-wallet=*)\n+        -conf=*|-pid=*|-loadblock=*|-rpccookiefile=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0"
      },
      {
        "sha": "581fe712e96c2cab4839c6bdc49a1b5cdc7bb6e7",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -5,7 +5,7 @@ Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2019, Bitcoin Core Developers\n+Copyright: 2009-2020, Bitcoin Core Developers\n License: Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project."
      },
      {
        "sha": "bdff7a84b098bd430d9e3b3ec8c58106da7bb680",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -89,31 +89,29 @@ example:\n BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n ```\n \n-optimize-pngs.py\n-================\n-\n-A script to optimize png files in the bitcoin\n-repository (requires pngcrush).\n-\n security-check.py and test-security-check.py\n ============================================\n \n-Perform basic ELF security checks on a series of executables.\n+Perform basic security checks on a series of executables.\n \n symbol-check.py\n ===============\n \n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n+A script to check that the executables produced by gitian only contain\n+certain symbols and are only linked against allowed libraries.\n+\n+For Linux this means checking for allowed gcc, glibc and libstdc++ version symbols.\n+This makes sure they are still compatible with the minimum supported distribution versions.\n+\n+For macOS and Windows we check that the executables are only linked against libraries we allow.\n \n Example usage after a gitian build:\n \n     find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n \n-If only supported symbols are used the return value will be 0 and the output will be empty.\n+If no errors occur the return value will be 0 and the output will be empty.\n \n-If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n+If there are any errors the return value will be 1 and output like this will be printed:\n \n     .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n     .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15"
      },
      {
        "sha": "bc5f09a3e260f6f02d6ea72e90b21a53e003ff0e",
        "filename": "contrib/devtools/circular-dependencies.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/circular-dependencies.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/circular-dependencies.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/circular-dependencies.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,4 +1,7 @@\n #!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n import sys\n import re"
      },
      {
        "sha": "98eee67f4300853629cc61baaaed13008819038c",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -106,7 +106,7 @@ def main():\n   filename = None\n   lines_by_file = {}\n   for line in sys.stdin:\n-    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    match = re.search(r'^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n     if match:\n       filename = match.group(2)\n     if filename is None:\n@@ -119,7 +119,7 @@ def main():\n       if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n         continue\n \n-    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    match = re.search(r'^@@.*\\+(\\d+)(,(\\d+))?', line)\n     if match:\n       start_line = int(match.group(1))\n       line_count = 1"
      },
      {
        "sha": "084914f11a82a7fbc22504db55c9a511645ef2ba",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "modified",
        "additions": 31,
        "deletions": 25,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2018 The Bitcoin Core developers\n+# Copyright (c) 2016-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -19,6 +19,8 @@\n     'src/qt/bitcoinstrings.cpp',\n     'src/chainparamsseeds.h',\n     # other external copyrights:\n+    'src/reverse_iterator.h',\n+    'src/test/fuzz/FuzzedDataProvider.h',\n     'src/tinyformat.h',\n     'test/functional/test_framework/bignum.py',\n     # python init:\n@@ -32,9 +34,10 @@\n     \"src/leveldb/\",\n     \"src/secp256k1/\",\n     \"src/univalue/\",\n+    \"src/crc32c/\",\n ]\n \n-INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py']\n+INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py', '*.sh', '*.bash-completion']\n INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n \n def applies_to_file(filename):\n@@ -71,7 +74,7 @@ def get_filenames_to_examine(base_directory):\n ################################################################################\n \n \n-COPYRIGHT_WITH_C = 'Copyright \\(c\\)'\n+COPYRIGHT_WITH_C = r'Copyright \\(c\\)'\n COPYRIGHT_WITHOUT_C = 'Copyright'\n ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n \n@@ -85,21 +88,21 @@ def get_filenames_to_examine(base_directory):\n ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n \n def compile_copyright_regex(copyright_style, year_style, name):\n-    return re.compile('%s %s,? %s' % (copyright_style, year_style, name))\n+    return re.compile(r'%s %s,? %s( +\\*)?\\n' % (copyright_style, year_style, name))\n \n EXPECTED_HOLDER_NAMES = [\n-    \"Satoshi Nakamoto\\n\",\n-    \"The Bitcoin Core developers\\n\",\n-    \"BitPay Inc\\.\\n\",\n-    \"University of Illinois at Urbana-Champaign\\.\\n\",\n-    \"Pieter Wuille\\n\",\n-    \"Wladimir J. van der Laan\\n\",\n-    \"Jeff Garzik\\n\",\n-    \"Jan-Klaas Kollhof\\n\",\n-    \"ArtForz -- public domain half-a-node\\n\",\n-    \"Intel Corporation\",\n-    \"The Zcash developers\",\n-    \"Jeremy Rubin\",\n+    r\"Satoshi Nakamoto\",\n+    r\"The Bitcoin Core developers\",\n+    r\"BitPay Inc\\.\",\n+    r\"University of Illinois at Urbana-Champaign\\.\",\n+    r\"Pieter Wuille\",\n+    r\"Wladimir J\\. van der Laan\",\n+    r\"Jeff Garzik\",\n+    r\"Jan-Klaas Kollhof\",\n+    r\"ArtForz -- public domain half-a-node\",\n+    r\"Intel Corporation ?\",\n+    r\"The Zcash developers\",\n+    r\"Jeremy Rubin\",\n ]\n \n DOMINANT_STYLE_COMPILED = {}\n@@ -329,7 +332,7 @@ def write_file_lines(filename, file_lines):\n # update header years execution\n ################################################################################\n \n-COPYRIGHT = 'Copyright \\(c\\)'\n+COPYRIGHT = r'Copyright \\(c\\)'\n YEAR = \"20[0-9][0-9]\"\n YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n HOLDER = 'The Bitcoin Core developers'\n@@ -455,14 +458,14 @@ def get_header_lines(header, start_year, end_year):\n def get_cpp_header_lines_to_insert(start_year, end_year):\n     return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n \n-PYTHON_HEADER = '''\n+SCRIPT_HEADER = '''\n # Copyright (c) %s The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n \n-def get_python_header_lines_to_insert(start_year, end_year):\n-    return reversed(get_header_lines(PYTHON_HEADER, start_year, end_year))\n+def get_script_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(SCRIPT_HEADER, start_year, end_year))\n \n ################################################################################\n # query git for year of last change\n@@ -491,17 +494,18 @@ def file_has_hashbang(file_lines):\n         return False\n     return file_lines[0][:2] == '#!'\n \n-def insert_python_header(filename, file_lines, start_year, end_year):\n+def insert_script_header(filename, file_lines, start_year, end_year):\n     if file_has_hashbang(file_lines):\n         insert_idx = 1\n     else:\n         insert_idx = 0\n-    header_lines = get_python_header_lines_to_insert(start_year, end_year)\n+    header_lines = get_script_header_lines_to_insert(start_year, end_year)\n     for line in header_lines:\n         file_lines.insert(insert_idx, line)\n     write_file_lines(filename, file_lines)\n \n def insert_cpp_header(filename, file_lines, start_year, end_year):\n+    file_lines.insert(0, '\\n')\n     header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n     for line in header_lines:\n         file_lines.insert(0, line)\n@@ -513,8 +517,8 @@ def exec_insert_header(filename, style):\n         sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n                  % (filename))\n     start_year, end_year = get_git_change_year_range(filename)\n-    if style == 'python':\n-        insert_python_header(filename, file_lines, start_year, end_year)\n+    if style in ['python', 'shell']:\n+        insert_script_header(filename, file_lines, start_year, end_year)\n     else:\n         insert_cpp_header(filename, file_lines, start_year, end_year)\n \n@@ -555,11 +559,13 @@ def insert_cmd(argv):\n     if not os.path.isfile(filename):\n         sys.exit(\"*** bad filename: %s\" % filename)\n     _, extension = os.path.splitext(filename)\n-    if extension not in ['.h', '.cpp', '.cc', '.c', '.py']:\n+    if extension not in ['.h', '.cpp', '.cc', '.c', '.py', '.sh']:\n         sys.exit(\"*** cannot insert for file extension %s\" % extension)\n \n     if extension == '.py':\n         style = 'python'\n+    elif extension == '.sh':\n+        style = 'shell'\n     else:\n         style = 'cpp'\n     exec_insert_header(filename, style)"
      },
      {
        "sha": "aa65953d838585aff4f33081b30c1cdb984b2e15",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,4 +1,7 @@\n #!/usr/bin/env bash\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C\n TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}"
      },
      {
        "sha": "e9481dbbcf54159b08f8a27daf4905826b03804e",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "removed",
        "additions": 0,
        "deletions": 76,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,76 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n-#pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n-'''\n-import os\n-import sys\n-import subprocess\n-import hashlib\n-from PIL import Image  # pip3 install Pillow\n-\n-def file_hash(filename):\n-    '''Return hash of raw file contents'''\n-    with open(filename, 'rb') as f:\n-        return hashlib.sha256(f.read()).hexdigest()\n-\n-def content_hash(filename):\n-    '''Return hash of RGBA contents of image'''\n-    i = Image.open(filename)\n-    i = i.convert('RGBA')\n-    data = i.tobytes()\n-    return hashlib.sha256(data).hexdigest()\n-\n-pngcrush = 'pngcrush'\n-git = 'git'\n-folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n-basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel'], universal_newlines=True, encoding='utf8').rstrip('\\n')\n-totalSaveBytes = 0\n-noHashChange = True\n-\n-outputArray = []\n-for folder in folders:\n-    absFolder=os.path.join(basePath, folder)\n-    for file in os.listdir(absFolder):\n-        extension = os.path.splitext(file)[1]\n-        if extension.lower() == '.png':\n-            print(\"optimizing {}...\".format(file), end =' ')\n-            file_path = os.path.join(absFolder, file)\n-            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)}\n-            fileMetaMap['contentHashPre'] = content_hash(file_path)\n-\n-            try:\n-                subprocess.call([pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n-                                stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)\n-            except:\n-                print(\"pngcrush is not installed, aborting...\")\n-                sys.exit(0)\n-\n-            #verify\n-            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT, universal_newlines=True, encoding='utf8'):\n-                print(\"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\")\n-                sys.exit(1)\n-\n-            fileMetaMap['sha256New'] = file_hash(file_path)\n-            fileMetaMap['contentHashPost'] = content_hash(file_path)\n-\n-            if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n-                print(\"Image contents of PNG file {} before and after crushing don't match\".format(file))\n-                sys.exit(1)\n-\n-            fileMetaMap['psize'] = os.path.getsize(file_path)\n-            outputArray.append(fileMetaMap)\n-            print(\"done\")\n-\n-print(\"summary:\\n+++++++++++++++++\")\n-for fileDict in outputArray:\n-    oldHash = fileDict['sha256Old']\n-    newHash = fileDict['sha256New']\n-    totalSaveBytes += fileDict['osize'] - fileDict['psize']\n-    noHashChange = noHashChange and (oldHash == newHash)\n-    print(fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\")\n-\n-print(\"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\")"
      },
      {
        "sha": "b2ecc274fbb7b32cec528f5e00c14d174578e6cc",
        "filename": "contrib/devtools/previous_release.sh",
        "status": "added",
        "additions": 152,
        "deletions": 0,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/previous_release.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/previous_release.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/previous_release.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Build previous releases.\n+\n+export LC_ALL=C\n+\n+CONFIG_FLAGS=\"\"\n+FUNCTIONAL_TESTS=0\n+DELETE_EXISTING=0\n+USE_DEPENDS=0\n+DOWNLOAD_BINARY=0\n+CONFIG_FLAGS=\"\"\n+TARGET=\"releases\"\n+\n+while getopts \":hfrdbt:\" opt; do\n+  case $opt in\n+    h)\n+      echo \"Usage: .previous_release.sh [options] tag1 tag2\"\n+      echo \"  options:\"\n+      echo \"  -h   Print this message\"\n+      echo \"  -f   Configure for functional tests\"\n+      echo \"  -r   Remove existing directory\"\n+      echo \"  -d   Use depends\"\n+      echo \"  -b   Download release binary\"\n+      echo \"  -t   Target directory (default: releases)\"\n+      exit 0\n+      ;;\n+    f)\n+      FUNCTIONAL_TESTS=1\n+      CONFIG_FLAGS=\"$CONFIG_FLAGS --without-gui --disable-tests --disable-bench\"\n+      ;;\n+    r)\n+      DELETE_EXISTING=1\n+      ;;\n+    d)\n+      USE_DEPENDS=1\n+      ;;\n+    b)\n+      DOWNLOAD_BINARY=1\n+      ;;\n+    t)\n+      TARGET=$OPTARG\n+      ;;\n+    \\?)\n+      echo \"Invalid option: -$OPTARG\" >&2\n+      exit 1\n+      ;;\n+  esac\n+done\n+\n+shift $((OPTIND-1))\n+\n+if [ -z \"$1\" ]; then\n+  echo \"Specify release tag(s), e.g.: .previous_release v0.15.1\"\n+  exit 1\n+fi\n+\n+if [ ! -d \"$TARGET\" ]; then\n+  mkdir -p $TARGET\n+fi\n+\n+if [ \"$DOWNLOAD_BINARY\" -eq \"1\" ]; then\n+  HOST=\"${HOST:-$(./depends/config.guess)}\"\n+  case \"$HOST\" in\n+    x86_64-*-linux*)\n+      PLATFORM=x86_64-linux-gnu\n+      ;;\n+    x86_64-apple-darwin*)\n+      PLATFORM=osx64\n+      ;;\n+    *)\n+      echo \"Not sure which binary to download for $HOST.\"\n+      exit 1\n+      ;;\n+  esac\n+fi\n+\n+echo \"Releases directory: $TARGET\"\n+pushd \"$TARGET\" || exit 1\n+{\n+  for tag in \"$@\"\n+  do\n+    if [ \"$DELETE_EXISTING\" -eq \"1\" ]; then\n+      if [ -d \"$tag\" ]; then\n+        rm -r \"$tag\"\n+      fi\n+    fi\n+\n+    if [ \"$DOWNLOAD_BINARY\" -eq \"0\" ]; then\n+\n+      if [ ! -d \"$tag\" ]; then\n+        if [ -z $(git tag -l \"$tag\") ]; then\n+          echo \"Tag $tag not found\"\n+          exit 1\n+        fi\n+\n+        git clone https://github.com/bitcoin/bitcoin \"$tag\"\n+        pushd \"$tag\" || exit 1\n+        {\n+          git checkout \"$tag\"\n+          if [ \"$USE_DEPENDS\" -eq \"1\" ]; then\n+            pushd depends || exit 1\n+            {\n+              if [ \"$FUNCTIONAL_TESTS\" -eq \"1\" ]; then\n+                make NO_QT=1\n+              else\n+                make\n+              fi\n+              HOST=\"${HOST:-$(./config.guess)}\"\n+            }\n+            popd || exit 1\n+            CONFIG_FLAGS=\"--prefix=$PWD/depends/$HOST $CONFIG_FLAGS\"\n+          fi\n+          ./autogen.sh\n+          ./configure $CONFIG_FLAGS\n+          make\n+          # Move binaries, so they're in the same place as in the release download:\n+          mkdir bin\n+          mv src/bitcoind src/bitcoin-cli src/bitcoin-tx bin\n+          if [ \"$FUNCTIONAL_TESTS\" -eq \"0\" ]; then\n+            mv src/qt/bitcoin-qt bin\n+          fi\n+        }\n+        popd || exit 1\n+      fi\n+    else\n+      if [ -d \"$tag\" ]; then\n+        echo \"Using cached $tag\"\n+      else\n+        mkdir \"$tag\"\n+        if [[ \"$tag\" =~ v(.*)(rc[0-9]+)$ ]]; then\n+            BIN_PATH=\"bin/bitcoin-core-${BASH_REMATCH[1]}/test.${BASH_REMATCH[2]}\"\n+        else\n+            BIN_PATH=\"bin/bitcoin-core-${tag:1}\"\n+        fi\n+        URL=\"https://bitcoin.org/$BIN_PATH/bitcoin-${tag:1}-$PLATFORM.tar.gz\"\n+        echo \"Fetching: $URL\"\n+        if ! curl -O -f $URL; then\n+            echo \"Download failed.\"\n+            exit 1\n+        fi\n+        tar -zxf \"bitcoin-${tag:1}-$PLATFORM.tar.gz\" -C \"$tag\" --strip-components=1 \"bitcoin-${tag:1}\"\n+        rm \"bitcoin-${tag:1}-$PLATFORM.tar.gz\"\n+      fi\n+    fi\n+  done\n+}\n+popd || exit 1"
      },
      {
        "sha": "9444271bdce4e20aef4a2fa2e5309e117649e0ab",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 100,
        "deletions": 4,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,19 +1,20 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Copyright (c) 2015-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n-Perform basic ELF security checks on a series of executables.\n+Perform basic security checks on a series of executables.\n Exit status will be 0 if successful, and the program will be silent.\n Otherwise the exit status will be 1 and it will log which executables failed which checks.\n-Needs `readelf` (for ELF) and `objdump` (for PE).\n+Needs `readelf` (for ELF), `objdump` (for PE) and `otool` (for MACHO).\n '''\n import subprocess\n import sys\n import os\n \n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n NONFATAL = {} # checks which are non-fatal for now but only generate a warning\n \n def check_ELF_PIE(executable):\n@@ -157,11 +158,96 @@ def check_PE_HIGH_ENTROPY_VA(executable):\n         reqbits = 0\n     return (bits & reqbits) == reqbits\n \n+def check_PE_RELOC_SECTION(executable) -> bool:\n+    '''Check for a reloc section. This is required for functional ASLR.'''\n+    p = subprocess.Popen([OBJDUMP_CMD, '-h',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.splitlines():\n+        if '.reloc' in line:\n+            return True\n+    return False\n+\n def check_PE_NX(executable):\n     '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n     (arch,bits) = get_PE_dll_characteristics(executable)\n     return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n \n+def get_MACHO_executable_flags(executable):\n+    p = subprocess.Popen([OTOOL_CMD, '-vh', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+\n+    flags = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        # filter first two header lines\n+        if 'magic' in tokens or 'Mach' in tokens:\n+            continue\n+        # filter ncmds and sizeofcmds values\n+        flags += [t for t in tokens if not t.isdigit()]\n+    return flags\n+\n+def check_MACHO_PIE(executable) -> bool:\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'PIE' in flags:\n+        return True\n+    return False\n+\n+def check_MACHO_NOUNDEFS(executable) -> bool:\n+    '''\n+    Check for no undefined references.\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'NOUNDEFS' in flags:\n+        return True\n+    return False\n+\n+def check_MACHO_NX(executable) -> bool:\n+    '''\n+    Check for no stack execution\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'ALLOW_STACK_EXECUTION' in flags:\n+        return False\n+    return True\n+\n+def check_MACHO_LAZY_BINDINGS(executable) -> bool:\n+    '''\n+    Check for no lazy bindings.\n+    We don't use or check for MH_BINDATLOAD. See #18295.\n+    '''\n+    p = subprocess.Popen([OTOOL_CMD, '-l', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if 'lazy_bind_off' in tokens or 'lazy_bind_size' in tokens:\n+            if tokens[1] != '0':\n+                return False\n+    return True\n+\n+def check_MACHO_Canary(executable) -> bool:\n+    '''\n+    Check for use of stack canary\n+    '''\n+    p = subprocess.Popen([OTOOL_CMD, '-Iv', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    ok = False\n+    for line in stdout.splitlines():\n+        if '___stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n CHECKS = {\n 'ELF': [\n     ('PIE', check_ELF_PIE),\n@@ -172,7 +258,15 @@ def check_PE_NX(executable):\n 'PE': [\n     ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n     ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n-    ('NX', check_PE_NX)\n+    ('NX', check_PE_NX),\n+    ('RELOC_SECTION', check_PE_RELOC_SECTION)\n+],\n+'MACHO': [\n+    ('PIE', check_MACHO_PIE),\n+    ('NOUNDEFS', check_MACHO_NOUNDEFS),\n+    ('NX', check_MACHO_NX),\n+    ('LAZY_BINDINGS', check_MACHO_LAZY_BINDINGS),\n+    ('Canary', check_MACHO_Canary)\n ]\n }\n \n@@ -183,6 +277,8 @@ def identify_executable(executable):\n         return 'PE'\n     elif magic.startswith(b'\\x7fELF'):\n         return 'ELF'\n+    elif magic.startswith(b'\\xcf\\xfa'):\n+        return 'MACHO'\n     return None\n \n if __name__ == '__main__':"
      },
      {
        "sha": "6949cb7ced89eda0be2b24dc4de9123ae7403fb1",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 178,
        "deletions": 47,
        "changes": 225,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -3,9 +3,8 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n+A script to check that the executables produced by gitian only contain\n+certain symbols and are only linked against allowed libraries.\n \n Example usage:\n \n@@ -15,49 +14,53 @@\n import re\n import sys\n import os\n+from typing import List, Optional, Tuple\n \n-# Debian 6.0.9 (Squeeze) has:\n+# Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n #\n-# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n-# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n+# - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.19 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=libc6)\n #\n-# Ubuntu 10.04.4 (Lucid Lynx) has:\n+# Ubuntu 16.04 (Xenial) EOL: 2024. https://wiki.ubuntu.com/Releases\n #\n-# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n-# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n-# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n+# - g++ version 5.3.1 (https://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=xenial&section=all)\n+# - libc version 2.23.0 (https://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=xenial&section=all)\n+#\n+# CentOS 7 EOL: 2024. https://wiki.centos.org/FAQ/General\n+#\n+# - g++ version 4.8.5 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n+# - libc version 2.17 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n #\n # Taking the minimum of these as our target.\n #\n-# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.4.0: GCC_4.4.0\n-#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n-#   (glibc)    GLIBC_2_11\n+# According to GNU ABI document (https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.8.5: GCC_4.8.0\n+#   (glibc)    GLIBC_2_17\n #\n MAX_VERSIONS = {\n-'GCC':       (4,4,0),\n-'CXXABI':    (1,3,3),\n-'GLIBCXX':   (3,4,13),\n-'GLIBC':     (2,11),\n+'GCC':       (4,8,0),\n+'GLIBC':     (2,17),\n 'LIBATOMIC': (1,0)\n }\n # See here for a description of _IO_stdin_used:\n # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n \n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr'\n+'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n+'environ', '_environ', '__environ',\n }\n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n+\n # Allowed NEEDED libraries\n-ALLOWED_LIBRARIES = {\n+ELF_ALLOWED_LIBRARIES = {\n # bitcoind and bitcoin-qt\n 'libgcc_s.so.1', # GCC base support\n 'libc.so.6', # C library\n 'libpthread.so.0', # threading\n-'libanl.so.1', # DNS resolve\n 'libm.so.6', # math library\n 'librt.so.1', # real-time (clock)\n 'libatomic.so.1',\n@@ -79,6 +82,45 @@\n 'AArch64':(2,17),\n 'RISC-V': (2,27)\n }\n+\n+MACHO_ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+'libc++.1.dylib', # C++ Standard Library\n+'libSystem.B.dylib', # libc, libm, libpthread, libinfo\n+# bitcoin-qt only\n+'AppKit', # user interface\n+'ApplicationServices', # common application tasks.\n+'Carbon', # deprecated c back-compat API\n+'CoreFoundation', # low level func, data types\n+'CoreGraphics', # 2D rendering\n+'CoreServices', # operating system services\n+'CoreText', # interface for laying out text and handling fonts.\n+'Foundation', # base layer functionality for apps/frameworks\n+'ImageIO', # read and write image file formats.\n+'IOKit', # user-space access to hardware devices and drivers.\n+'libobjc.A.dylib', # Objective-C runtime library\n+}\n+\n+PE_ALLOWED_LIBRARIES = {\n+'ADVAPI32.dll', # security & registry\n+'IPHLPAPI.DLL', # IP helper API\n+'KERNEL32.dll', # win32 base APIs\n+'msvcrt.dll', # C standard library for MSVC\n+'SHELL32.dll', # shell API\n+'USER32.dll', # user interface\n+'WS2_32.dll', # sockets\n+# bitcoin-qt only\n+'dwmapi.dll', # desktop window manager\n+'GDI32.dll', # graphics device interface\n+'IMM32.dll', # input method editor\n+'ole32.dll', # component object model\n+'OLEAUT32.dll', # OLE Automation API\n+'SHLWAPI.dll', # light weight shell API\n+'UxTheme.dll',\n+'VERSION.dll', # version checking\n+'WINMM.dll', # WinMM audio API\n+}\n+\n class CPPFilt(object):\n     '''\n     Demangle C++ symbol names.\n@@ -98,15 +140,15 @@ def close(self):\n         self.proc.stdout.close()\n         self.proc.wait()\n \n-def read_symbols(executable, imports=True):\n+def read_symbols(executable, imports=True) -> List[Tuple[str, str, str]]:\n     '''\n-    Parse an ELF executable and return a list of (symbol,version) tuples\n+    Parse an ELF executable and return a list of (symbol,version, arch) tuples\n     for dynamic, imported symbols.\n     '''\n     p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', '-h', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n-        raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n+        raise IOError('Could not read symbols for {}: {}'.format(executable, stderr.strip()))\n     syms = []\n     for line in stdout.splitlines():\n         line = line.split()\n@@ -121,7 +163,7 @@ def read_symbols(executable, imports=True):\n                 syms.append((sym, version, arch))\n     return syms\n \n-def check_version(max_versions, version, arch):\n+def check_version(max_versions, version, arch) -> bool:\n     if '_' in version:\n         (lib, _, ver) = version.rpartition('_')\n     else:\n@@ -132,7 +174,7 @@ def check_version(max_versions, version, arch):\n         return False\n     return ver <= max_versions[lib] or lib == 'GLIBC' and ver <= ARCH_MIN_GLIBC_VER[arch]\n \n-def read_libraries(filename):\n+def elf_read_libraries(filename) -> List[str]:\n     p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n@@ -141,35 +183,124 @@ def read_libraries(filename):\n     for line in stdout.splitlines():\n         tokens = line.split()\n         if len(tokens)>2 and tokens[1] == '(NEEDED)':\n-            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n+            match = re.match(r'^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n             if match:\n                 libraries.append(match.group(1))\n             else:\n                 raise ValueError('Unparseable (NEEDED) specification')\n     return libraries\n \n-if __name__ == '__main__':\n+def check_imported_symbols(filename) -> bool:\n+    cppfilt = CPPFilt()\n+    ok = True\n+    for sym, version, arch in read_symbols(filename, True):\n+        if version and not check_version(MAX_VERSIONS, version, arch):\n+            print('{}: symbol {} from unsupported version {}'.format(filename, cppfilt(sym), version))\n+            ok = False\n+    return ok\n+\n+def check_exported_symbols(filename) -> bool:\n     cppfilt = CPPFilt()\n+    ok = True\n+    for sym,version,arch in read_symbols(filename, False):\n+        if arch == 'RISC-V' or sym in IGNORE_EXPORTS:\n+            continue\n+        print('{}: export of symbol {} not allowed'.format(filename, cppfilt(sym)))\n+        ok = False\n+    return ok\n+\n+def check_ELF_libraries(filename) -> bool:\n+    ok = True\n+    for library_name in elf_read_libraries(filename):\n+        if library_name not in ELF_ALLOWED_LIBRARIES:\n+            print('{}: NEEDED library {} is not allowed'.format(filename, library_name))\n+            ok = False\n+    return ok\n+\n+def macho_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([OTOOL_CMD, '-L', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens) == 1: # skip executable name\n+            continue\n+        libraries.append(tokens[0].split('/')[-1])\n+    return libraries\n+\n+def check_MACHO_libraries(filename) -> bool:\n+    ok = True\n+    for dylib in macho_read_libraries(filename):\n+        if dylib not in MACHO_ALLOWED_LIBRARIES:\n+            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+            ok = False\n+    return ok\n+\n+def pe_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        if 'DLL Name:' in line:\n+            tokens = line.split(': ')\n+            libraries.append(tokens[1])\n+    return libraries\n+\n+def check_PE_libraries(filename) -> bool:\n+    ok = True\n+    for dylib in pe_read_libraries(filename):\n+        if dylib not in PE_ALLOWED_LIBRARIES:\n+            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+            ok = False\n+    return ok\n+\n+CHECKS = {\n+'ELF': [\n+    ('IMPORTED_SYMBOLS', check_imported_symbols),\n+    ('EXPORTED_SYMBOLS', check_exported_symbols),\n+    ('LIBRARY_DEPENDENCIES', check_ELF_libraries)\n+],\n+'MACHO': [\n+    ('DYNAMIC_LIBRARIES', check_MACHO_libraries)\n+],\n+'PE' : [\n+    ('DYNAMIC_LIBRARIES', check_PE_libraries)\n+]\n+}\n+\n+def identify_executable(executable) -> Optional[str]:\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    elif magic.startswith(b'\\xcf\\xfa'):\n+        return 'MACHO'\n+    return None\n+\n+if __name__ == '__main__':\n     retval = 0\n     for filename in sys.argv[1:]:\n-        # Check imported symbols\n-        for sym,version,arch in read_symbols(filename, True):\n-            if version and not check_version(MAX_VERSIONS, version, arch):\n-                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n-                retval = 1\n-        # Check exported symbols\n-        if arch != 'RISC-V':\n-            for sym,version,arch in read_symbols(filename, False):\n-                if sym in IGNORE_EXPORTS:\n-                    continue\n-                print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n-                retval = 1\n-        # Check dependency libraries\n-        for library_name in read_libraries(filename):\n-            if library_name not in ALLOWED_LIBRARIES:\n-                print('%s: NEEDED library %s is not allowed' % (filename, library_name))\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('{}: unknown format'.format(filename))\n                 retval = 1\n+                continue\n \n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('{}: failed {}'.format(filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('{}: cannot open'.format(filename))\n+            retval = 1\n     sys.exit(retval)\n-\n-"
      },
      {
        "sha": "ea70b279418f1e5be2427ec8c2c0736747646f38",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 31,
        "deletions": 6,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Copyright (c) 2015-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -43,16 +43,41 @@ def test_ELF(self):\n         self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']),\n                 (0, ''))\n \n-    def test_64bit_PE(self):\n+    def test_PE(self):\n         source = 'test1.c'\n         executable = 'test1.exe'\n         cc = 'x86_64-w64-mingw32-gcc'\n         write_testcode(source)\n \n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed HIGH_ENTROPY_VA'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va']), (0, ''))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n+            (0, ''))\n+\n+    def test_MACHO(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'clang'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fno-stack-protector']),\n+            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-Wl,-allow_stack_execute','-fstack-protector-all']),\n+            (1, executable+': failed PIE NOUNDEFS NX LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-flat_namespace','-fstack-protector-all']),\n+            (1, executable+': failed PIE NOUNDEFS LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-fstack-protector-all']),\n+            (1, executable+': failed PIE LAZY_BINDINGS'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-no_pie','-Wl,-bind_at_load','-fstack-protector-all']),\n+            (1, executable+': failed PIE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-pie','-Wl,-bind_at_load','-fstack-protector-all']),\n+            (0, ''))\n \n if __name__ == '__main__':\n     unittest.main()"
      },
      {
        "sha": "95b155321588554f0fafadd8e30aabd694184df4",
        "filename": "contrib/devtools/test_deterministic_coverage.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/test_deterministic_coverage.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/test_deterministic_coverage.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test_deterministic_coverage.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019 The Bitcoin Core developers\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -21,8 +21,8 @@ NON_DETERMINISTIC_TESTS=(\n     \"miner_tests/CreateNewBlock_validity\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n     \"scheduler_tests/manythreads\"                             # scheduler.cpp: CScheduler::serviceQueue()\n     \"scheduler_tests/singlethreadedscheduler_ordered\"         # scheduler.cpp: CScheduler::serviceQueue()\n-    \"tx_validationcache_tests/checkinputs_test\"               # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n-    \"tx_validationcache_tests/tx_mempool_block_doublespend\"   # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txvalidationcache_tests/checkinputs_test\"                # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txvalidationcache_tests/tx_mempool_block_doublespend\"    # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n     \"txindex_tests/txindex_initial_sync\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n     \"txvalidation_tests/tx_mempool_reject_coinbase\"           # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n     \"validation_block_tests/processnewblock_signals_ordering\" # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)"
      },
      {
        "sha": "dee25ff67b61e3b798cf56f53657536e496cfef8",
        "filename": "contrib/devtools/utxo_snapshot.sh",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/utxo_snapshot.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/devtools/utxo_snapshot.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/utxo_snapshot.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,44 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+export LC_ALL=C\n+\n+set -ueo pipefail\n+\n+if (( $# < 3 )); then\n+  echo 'Usage: utxo_snapshot.sh <generate-at-height> <snapshot-out-path> <bitcoin-cli-call ...>'\n+  echo\n+  echo \"  if <snapshot-out-path> is '-', don't produce a snapshot file but instead print the \"\n+  echo \"  expected assumeutxo hash\"\n+  echo\n+  echo 'Examples:'\n+  echo\n+  echo \"  ./contrib/devtools/utxo_snapshot.sh 570000 utxo.dat ./src/bitcoin-cli -datadir=\\$(pwd)/testdata\"\n+  echo '  ./contrib/devtools/utxo_snapshot.sh 570000 - ./src/bitcoin-cli'\n+  exit 1\n+fi\n+\n+GENERATE_AT_HEIGHT=\"${1}\"; shift;\n+OUTPUT_PATH=\"${1}\"; shift;\n+# Most of the calls we make take a while to run, so pad with a lengthy timeout.\n+BITCOIN_CLI_CALL=\"${*} -rpcclienttimeout=9999999\"\n+\n+# Block we'll invalidate/reconsider to rewind/fast-forward the chain.\n+PIVOT_BLOCKHASH=$($BITCOIN_CLI_CALL getblockhash $(( GENERATE_AT_HEIGHT + 1 )) )\n+\n+(>&2 echo \"Rewinding chain back to height ${GENERATE_AT_HEIGHT} (by invalidating ${PIVOT_BLOCKHASH}); this may take a while\")\n+${BITCOIN_CLI_CALL} invalidateblock \"${PIVOT_BLOCKHASH}\"\n+\n+if [[ \"${OUTPUT_PATH}\" = \"-\" ]]; then\n+  (>&2 echo \"Generating txoutset info...\")\n+  ${BITCOIN_CLI_CALL} gettxoutsetinfo | grep hash_serialized_2 | sed 's/^.*: \"\\(.\\+\\)\\+\",/\\1/g'\n+else\n+  (>&2 echo \"Generating UTXO snapshot...\")\n+  ${BITCOIN_CLI_CALL} dumptxoutset \"${OUTPUT_PATH}\"\n+fi\n+\n+(>&2 echo \"Restoring chain to original height; this may take a while\")\n+${BITCOIN_CLI_CALL} reconsiderblock \"${PIVOT_BLOCKHASH}\""
      },
      {
        "sha": "e005cb96da62302ba6f099dcad1bcd13ee19e814",
        "filename": "contrib/filter-lcov.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,4 +1,7 @@\n #!/usr/bin/env python3\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n import argparse\n "
      },
      {
        "sha": "4a3df93cea3d273ee5fb42061a3a155b8b172b2a",
        "filename": "contrib/gitian-build.py",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,4 +1,7 @@\n #!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n import argparse\n import os\n@@ -51,10 +54,8 @@ def build():\n     os.chdir('gitian-builder')\n     os.makedirs('inputs', exist_ok=True)\n \n-    subprocess.check_call(['wget', '-N', '-P', 'inputs', 'https://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz'])\n-    subprocess.check_call(['wget', '-N', '-P', 'inputs', 'https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch'])\n-    subprocess.check_call([\"echo 'a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911 inputs/osslsigncode-Backports-to-1.7.1.patch' | sha256sum -c\"], shell=True)\n-    subprocess.check_call([\"echo 'f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9 inputs/osslsigncode-1.7.1.tar.gz' | sha256sum -c\"], shell=True)\n+    subprocess.check_call(['wget', '-O', 'inputs/osslsigncode-2.0.tar.gz', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n+    subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n     subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n \n     if args.linux:\n@@ -208,7 +209,7 @@ def main():\n     args.macos = 'm' in args.os\n \n     # Disable for MacOS if no SDK found\n-    if args.macos and not os.path.isfile('gitian-builder/inputs/MacOSX10.11.sdk.tar.gz'):\n+    if args.macos and not os.path.isfile('gitian-builder/inputs/MacOSX10.14.sdk.tar.gz'):\n         print('Cannot build for MacOS, SDK does not exist. Will build for other OSes')\n         args.macos = False\n "
      },
      {
        "sha": "a2ca768aaa70b285d1e7b8654c1094533e6c1190",
        "filename": "contrib/gitian-descriptors/assign_DISTNAME",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/assign_DISTNAME",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/assign_DISTNAME",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/assign_DISTNAME?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,12 @@\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# A helper script to be sourced into the gitian descriptors\n+\n+if RECENT_TAG=\"$(git describe --exact-match HEAD)\"; then\n+    VERSION=\"${RECENT_TAG#v}\"\n+else\n+    VERSION=\"$(git rev-parse --short=12 HEAD)\"\n+fi\n+DISTNAME=\"bitcoin-${VERSION}\""
      },
      {
        "sha": "0ed1e16f7ea90da54382c256f2edd21846b4cf1b",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 30,
        "deletions": 34,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-core-linux-0.19\"\n+name: \"bitcoin-core-linux-0.21\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:\n@@ -40,30 +40,31 @@ script: |\n   set -e -o pipefail\n \n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n+  HOSTS=\"x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n   CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n   FAKETIME_HOST_PROGS=\"gcc g++\"\n   FAKETIME_PROGS=\"date ar ranlib nm\"\n   HOST_CFLAGS=\"-O2 -g\"\n   HOST_CXXFLAGS=\"-O2 -g\"\n-  HOST_LDFLAGS=-static-libstdc++\n+  HOST_LDFLAGS_BASE=\"-static-libstdc++ -Wl,-O2\"\n \n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n     export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -77,7 +78,7 @@ script: |\n         then\n             echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n             echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n             echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n             echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n             chmod +x ${WRAP_DIR}/${i}-${prog}\n@@ -107,7 +108,7 @@ script: |\n   rm -f ${WRAP_DIR}/${prog}\n   cat << EOF > ${WRAP_DIR}/${prog}\n   #!/usr/bin/env bash\n-  REAL=\"`which -a ${prog}-8 | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n+  REAL=\"$(which -a ${prog}-8 | grep -v ${WRAP_DIR}/${prog} | head -1)\"\n   for var in \"\\$@\"\n   do\n     if [ \"\\$var\" = \"-m32\" ]; then\n@@ -122,7 +123,7 @@ script: |\n   done\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n     EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n@@ -139,37 +140,34 @@ script: |\n   create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar -xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  popd\n-\n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n+\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n \n   ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n+  # Extract the git archive into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    if [ \"${i}\" = \"riscv64-linux-gnu\" ]; then\n+      # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n+      # TODO: remove this when no longer needed\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n+    else\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE}\"\n+    fi\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n+    tar -xf $GIT_ARCHIVE\n \n+    ./autogen.sh\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n@@ -181,11 +179,9 @@ script: |\n     rm -rf ${DISTNAME}/lib/pkgconfig\n     find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n     find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n-    cp ../doc/README.md ${DISTNAME}/\n+    cp ../README.md ${DISTNAME}/\n     find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n     find ${DISTNAME} -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n     cd ../../\n     rm -rf distsrc-${i}\n   done\n-  mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src"
      },
      {
        "sha": "a4f3219c2291e8164c92d5ba1eedb7a346b1bdb4",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -17,14 +17,14 @@ script: |\n \n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n-  export PATH=`pwd`:$PATH\n+  export PATH=\"$PWD\":$PATH\n   FAKETIME_PROGS=\"dmg genisoimage\"\n \n   # Create global faketime wrappers\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}"
      },
      {
        "sha": "bbae7201e5b7852ddbdb884f69fe74b21e76619d",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 23,
        "deletions": 32,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-core-osx-0.19\"\n+name: \"bitcoin-core-osx-0.21\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:\n@@ -32,20 +32,20 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"MacOSX10.11.sdk.tar.gz\"\n+- \"MacOSX10.14.sdk.tar.gz\"\n script: |\n   set -e -o pipefail\n \n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin14\"\n+  HOSTS=\"x86_64-apple-darwin16\"\n   CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n \n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n@@ -55,11 +55,12 @@ script: |\n \n   export ZERO_AR_DATE=1\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -71,7 +72,7 @@ script: |\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n@@ -86,10 +87,10 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n \n   mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.14.sdk.tar.gz\n \n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -102,40 +103,31 @@ script: |\n   create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n \n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar -xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  popd\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n \n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n \n   ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n+  # Extract the git archive into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n+    tar -xf $GIT_ARCHIVE\n \n+    ./autogen.sh\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n     make install-strip DESTDIR=${INSTALLPATH}\n \n     make osx_volname\n@@ -163,6 +155,5 @@ script: |\n     find ${DISTNAME} | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n     cd ../../\n   done\n-  mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src\n+\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "6bcd126662f3a1e04aa38735f1bcd758d7001fbb",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,37 +6,37 @@ suites:\n architectures:\n - \"amd64\"\n packages:\n-# Once osslsigncode supports openssl 1.1, we can change this back to libssl-dev\n-- \"libssl1.0-dev\"\n+- \"libssl-dev\"\n - \"autoconf\"\n+- \"automake\"\n+- \"libtool\"\n+- \"pkg-config\"\n remotes:\n - \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n-- \"osslsigncode-1.7.1.tar.gz\"\n-- \"osslsigncode-Backports-to-1.7.1.patch\"\n+- \"osslsigncode-2.0.tar.gz\"\n - \"bitcoin-win-unsigned.tar.gz\"\n script: |\n   set -e -o pipefail\n \n-  BUILD_DIR=`pwd`\n+  BUILD_DIR=\"$PWD\"\n   SIGDIR=${BUILD_DIR}/signature/win\n   UNSIGNED_DIR=${BUILD_DIR}/unsigned\n \n-  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n-  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n+  echo \"5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f  osslsigncode-2.0.tar.gz\" | sha256sum -c\n \n   mkdir -p ${UNSIGNED_DIR}\n   tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n \n-  tar xf osslsigncode-1.7.1.tar.gz\n-  cd osslsigncode-1.7.1\n-  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n+  tar xf osslsigncode-2.0.tar.gz\n+  cd osslsigncode-2.0\n \n+  ./autogen.sh\n   ./configure --without-gsf --without-curl --disable-dependency-tracking\n   make\n   find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n-    INFILE=\"`basename \"${i}\"`\"\n-    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n+    INFILE=\"$(basename \"${i}\")\"\n+    OUTFILE=\"${INFILE/-unsigned}\"\n     ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n   done"
      },
      {
        "sha": "d05b6d426da5f00812e4e1d4392db0fc48c7ed25",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 33,
        "deletions": 57,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-core-win-0.19\"\n+name: \"bitcoin-core-win-0.21\"\n enable_cache: true\n distro: \"ubuntu\"\n suites:\n@@ -22,7 +22,6 @@ packages:\n - \"zip\"\n - \"ca-certificates\"\n - \"python3\"\n-- \"rename\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n@@ -35,25 +34,26 @@ script: |\n   CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n   FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n   FAKETIME_PROGS=\"date makensis zip\"\n-  HOST_CFLAGS=\"-O2 -g\"\n-  HOST_CXXFLAGS=\"-O2 -g\"\n+  HOST_CFLAGS=\"-O2 -g -fno-ident\"\n+  HOST_CXXFLAGS=\"-O2 -g -fno-ident\"\n \n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n     export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -65,32 +65,22 @@ script: |\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n   }\n \n-  function create_per-host_linker_wrapper {\n-  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  function create_per-host_compiler_wrapper {\n+  # -posix variant is required for c++11 threading.\n   for i in $HOSTS; do\n-    mkdir -p ${WRAP_DIR}/${i}\n-    for prog in collect2; do\n-        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}/${prog}\n-        REAL=$(${i}-gcc -print-prog-name=${prog})\n-        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n-        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n-        chmod +x ${WRAP_DIR}/${i}/${prog}\n-    done\n     for prog in gcc g++; do\n         echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n@@ -101,11 +91,11 @@ script: |\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n   create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n+  create_per-host_compiler_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n@@ -115,66 +105,52 @@ script: |\n   export PATH=${PATH_orig}\n   create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n   create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_linker_wrapper \"${REFERENCE_DATETIME}\"\n+  create_per-host_compiler_wrapper \"${REFERENCE_DATETIME}\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  # Define DISTNAME variable.\n+  # shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+  source contrib/gitian-descriptors/assign_DISTNAME\n \n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar -xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  mkdir -p $OUTDIR/src\n-  cp ../$SOURCEDIST $OUTDIR/src\n-  popd\n+  GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n \n-  # Workaround for tarball not building with the bare tag version (prep)\n-  make -C src obj/build.h\n+  # Create the source tarball\n+  mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+  git archive --output=\"$GIT_ARCHIVE\" HEAD\n \n   ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n+  # Extract the git archive into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    # Workaround for tarball not building with the bare tag version\n-    echo '#!/bin/true' >share/genbuild.sh\n-    mkdir src/obj\n-    cp ../src/obj/build.h src/obj/\n+    tar -xf $GIT_ARCHIVE\n \n+    ./autogen.sh\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n-    make deploy\n+    make ${MAKEOPTS} -C src check-symbols\n+    make deploy BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n     make install DESTDIR=${INSTALLPATH}\n-    rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n-    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n+    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    cp ../doc/README_windows.txt ${DISTNAME}/readme.txt\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}-debug.zip\n     cd ../../\n     rm -rf distsrc-${i}\n   done\n+\n   cp -rf contrib/windeploy $BUILD_DIR\n   cd $BUILD_DIR/windeploy\n   mkdir unsigned\n-  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n+  cp ${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe unsigned/\n   find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip"
      },
      {
        "sha": "0a2c1302c82f8e13cfe48ec36ff5bd0c9e07f3e6",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -13,6 +13,7 @@ D35176BE9264832E4ACA8986BF0792FBE95DC863 fivepiece\n 01CDF4627A3B88AAE4A571C87588242FBE38D3A8 Gavin Andresen\n D1DBF2C4B96F2DEBF4C16654410108112E7EA81F Hennadii Stepanov (hebasto)\n D3CC177286005BB8FF673294C5242A1AB3936517 jl2012\n+82921A4B88FD454B7EB8CE3C796C4109063D4EAF Jon Atack\n 32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC Jonas Schnelli\n 4B4E840451149DD7FB0D633477DFAB5C3108B9A8 Jorge Timon\n C42AFF7C61B3E44A1454CD3557AF762DB3353322 Karl-Johan Alm (kallewoof)\n@@ -27,7 +28,9 @@ D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n 37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n 133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n+A8FC55F3B04BA3146F3492E79303B33A305224CB Sebastian Kung (TheCharlatan)\n ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n+9EDAFF80E080659604F4A76B2EBB056FD847F8A7 Stephan Oeste (Emzy)\n AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n 79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko\n 71A3B16735405025D447E8F274810B012346C9A6 Wladimir J. van der Laan"
      },
      {
        "sha": "8ce8cb97a0d7ad899cddd0a56d9a30c43bd4ce79",
        "filename": "contrib/guix/README.md",
        "status": "modified",
        "additions": 9,
        "deletions": 13,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -13,7 +13,6 @@ We achieve bootstrappability by using Guix as a functional package manager.\n \n Conservatively, a x86_64 machine with:\n \n-- 2 or more logical cores\n - 4GB of free disk space on the partition that /gnu/store will reside in\n - 24GB of free disk space on the partition that the Bitcoin Core git repository\n   resides in\n@@ -62,15 +61,16 @@ Likewise, to perform a bootstrapped build (takes even longer):\n export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--bootstrap --no-substitutes'\n ```\n \n-### Using the right Guix\n+### Using a version of Guix with `guix time-machine` capabilities\n \n-Once Guix is installed, deploy our patched version into your current Guix\n-profile. The changes there are slowly being upstreamed.\n+> Note: This entire section can be skipped if you are already using a version of\n+> Guix that has [the `guix time-machine` command][guix/time-machine].\n+\n+Once Guix is installed, if it doesn't have the `guix time-machine` command, pull\n+the latest `guix`.\n \n ```sh\n-guix pull --url=https://github.com/dongcarl/guix.git \\\n-          --commit=82c77e52b8b46e0a3aad2cb12307c2e30547deec \\\n-          --max-jobs=4 # change accordingly\n+guix pull --max-jobs=4 # change number of jobs accordingly\n ```\n \n Make sure that you are using your current profile. (You are prompted to do this\n@@ -80,9 +80,6 @@ at the end of the `guix pull`)\n export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n ```\n \n-> Note: There is ongoing work to eliminate this entire section using Guix\n-> [inferiors][guix/inferiors] and [channels][guix/channels].\n-\n ## Usage\n \n ### As a Development Environment\n@@ -116,7 +113,7 @@ find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n * _**HOSTS**_\n \n   Override the space-separated list of platform triples for which to perform a\n-  bootstrappable build. _(defaults to \"i686-linux-gnu x86\\_64-linux-gnu\n+  bootstrappable build. _(defaults to \"x86\\_64-linux-gnu\n   arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\")_\n \n   > Windows and OS X platform triplet support are WIP.\n@@ -222,8 +219,7 @@ repository and will likely put one up soon.\n [guix/env-setup]: https://www.gnu.org/software/guix/manual/en/html_node/Build-Environment-Setup.html\n [guix/substitutes]: https://www.gnu.org/software/guix/manual/en/html_node/Substitutes.html\n [guix/substitute-server-auth]: https://www.gnu.org/software/guix/manual/en/html_node/Substitute-Server-Authorization.html\n-[guix/inferiors]: https://www.gnu.org/software/guix/manual/en/html_node/Inferiors.html\n-[guix/channels]: https://www.gnu.org/software/guix/manual/en/html_node/Channels.html\n+[guix/time-machine]: https://guix.gnu.org/manual/en/html_node/Invoking-guix-time_002dmachine.html\n \n [debian/guix-package]: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850644\n [fanquake/guix-docker]: https://github.com/fanquake/core-review/tree/master/guix"
      },
      {
        "sha": "11d2c8b86727eb2a757bc94e532a0d4cc83c45c6",
        "filename": "contrib/guix/guix-build.sh",
        "status": "modified",
        "additions": 100,
        "deletions": 20,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/guix/guix-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/guix/guix-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -13,27 +13,107 @@ make -C \"${PWD}/depends\" -j\"$MAX_JOBS\" download ${V:+V=1} ${SOURCES_PATH:+SOURCE\n # Determine the reference time used for determinism (overridable by environment)\n SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n \n-# Deterministically build Bitcoin Core for HOSTs (overriable by environment)\n-for host in ${HOSTS=i686-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu}; do\n+# Execute \"$@\" in a pinned, possibly older version of Guix, for reproducibility\n+# across time.\n+time-machine() {\n+    guix time-machine --url=https://github.com/dongcarl/guix.git \\\n+                      --commit=b066c25026f21fb57677aa34692a5034338e7ee3 \\\n+                      -- \"$@\"\n+}\n+\n+# Function to be called when building for host ${1} and the user interrupts the\n+# build\n+int_trap() {\n+cat << EOF\n+** INT received while building ${1}, you may want to clean up the relevant\n+   output, deploy, and distsrc-* directories before rebuilding\n+\n+Hint: To blow everything away, you may want to use:\n+\n+  $ git clean -xdff --exclude='/depends/SDKs/*'\n+\n+Specifically, this will remove all files without an entry in the index,\n+excluding the SDK directory. Practically speaking, this means that all ignored\n+and untracked files and directories will be wiped, allowing you to start anew.\n+EOF\n+}\n+\n+# Deterministically build Bitcoin Core for HOSTs (overridable by environment)\n+# shellcheck disable=SC2153\n+for host in ${HOSTS=x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu x86_64-w64-mingw32}; do\n \n     # Display proper warning when the user interrupts the build\n-    trap 'echo \"** INT received while building ${host}, you may want to clean up the relevant output and distsrc-* directories before rebuilding\"' INT\n-\n-    # Run the build script 'contrib/guix/libexec/build.sh' in the build\n-    # container specified by 'contrib/guix/manifest.scm'\n-    # shellcheck disable=SC2086\n-    guix environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n-                     --container \\\n-                     --pure \\\n-                     --no-cwd \\\n-                     --share=\"$PWD\"=/bitcoin \\\n-                     ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n-                     ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n-                     -- env HOST=\"$host\" \\\n-                            MAX_JOBS=\"$MAX_JOBS\" \\\n-                            SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n-                            ${V:+V=1} \\\n-                            ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n-                          bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n+    trap 'int_trap ${host}' INT\n+\n+    (\n+        # Required for 'contrib/guix/manifest.scm' to output the right manifest\n+        # for the particular $HOST we're building for\n+        export HOST=\"$host\"\n+\n+        # Run the build script 'contrib/guix/libexec/build.sh' in the build\n+        # container specified by 'contrib/guix/manifest.scm'.\n+        #\n+        # Explanation of `guix environment` flags:\n+        #\n+        #   --container        run command within an isolated container\n+        #\n+        #     Running in an isolated container minimizes build-time differences\n+        #     between machines and improves reproducibility\n+        #\n+        #   --pure             unset existing environment variables\n+        #\n+        #     Same rationale as --container\n+        #\n+        #   --no-cwd           do not share current working directory with an\n+        #                      isolated container\n+        #\n+        #     When --container is specified, the default behavior is to share\n+        #     the current working directory with the isolated container at the\n+        #     same exact path (e.g. mapping '/home/satoshi/bitcoin/' to\n+        #     '/home/satoshi/bitcoin/'). This means that the $PWD inside the\n+        #     container becomes a source of irreproducibility. --no-cwd disables\n+        #     this behaviour.\n+        #\n+        #   --share=SPEC       for containers, share writable host file system\n+        #                      according to SPEC\n+        #\n+        #   --share=\"$PWD\"=/bitcoin\n+        #\n+        #                     maps our current working directory to /bitcoin\n+        #                     inside the isolated container, which we later cd\n+        #                     into.\n+        #\n+        #     While we don't want to map our current working directory to the\n+        #     same exact path (as this introduces irreproducibility), we do want\n+        #     it to be at a _fixed_ path _somewhere_ inside the isolated\n+        #     container so that we have something to build. '/bitcoin' was\n+        #     chosen arbitrarily.\n+        #\n+        #   ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"}\n+        #\n+        #                     make the downloaded depends sources path available\n+        #                     inside the isolated container\n+        #\n+        #     The isolated container has no network access as it's in a\n+        #     different network namespace from the main machine, so we have to\n+        #     make the downloaded depends sources available to it. The sources\n+        #     should have been downloaded prior to this invocation.\n+        #\n+        # shellcheck disable=SC2086\n+        time-machine environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n+                                 --container \\\n+                                 --pure \\\n+                                 --no-cwd \\\n+                                 --share=\"$PWD\"=/bitcoin \\\n+                                 --expose=\"$(git rev-parse --git-common-dir)\" \\\n+                                 ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n+                                 ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n+                                 -- env HOST=\"$host\" \\\n+                                        MAX_JOBS=\"$MAX_JOBS\" \\\n+                                        SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n+                                        ${V:+V=1} \\\n+                                        ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                      bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n+    )\n \n done"
      },
      {
        "sha": "01f4518c737940b5fa53473973ab7e8771c18fd7",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "modified",
        "additions": 166,
        "deletions": 59,
        "changes": 225,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,6 +1,7 @@\n #!/usr/bin/env bash\n export LC_ALL=C\n set -e -o pipefail\n+export TZ=UTC\n \n # Check that environment variables assumed to be set by the environment are set\n echo \"Building for platform triple ${HOST:?not set} with reference timestamp ${SOURCE_DATE_EPOCH:?not set}...\"\n@@ -30,23 +31,56 @@ fi\n # Given a package name and an output name, return the path of that output in our\n # current guix environment\n store_path() {\n-    grep --extended-regexp \"/[^-]{32}-${1}-cross-${HOST}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n+    grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n         | head --lines=1 \\\n         | sed --expression='s|^[[:space:]]*\"||' \\\n               --expression='s|\"[[:space:]]*$||'\n }\n \n-# Determine output paths to use in CROSS_* environment variables\n-CROSS_GLIBC=\"$(store_path glibc)\"\n-CROSS_GLIBC_STATIC=\"$(store_path glibc static)\"\n-CROSS_KERNEL=\"$(store_path linux-libre-headers)\"\n-CROSS_GCC=\"$(store_path gcc)\"\n-\n # Set environment variables to point Guix's cross-toolchain to the right\n # includes/libs for $HOST\n-export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n-export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n-export CROSS_LIBRARY_PATH=\"${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib:${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_KERNEL}/lib\"\n+case \"$HOST\" in\n+    *mingw*)\n+        # Determine output paths to use in CROSS_* environment variables\n+        CROSS_GLIBC=\"$(store_path \"mingw-w64-x86_64-winpthreads\")\"\n+        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n+        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+        NATIVE_GCC=\"$(store_path gcc-glibc-2.27-toolchain)\"\n+        export LIBRARY_PATH=\"${NATIVE_GCC}/lib:${NATIVE_GCC}/lib64\"\n+        export CPATH=\"${NATIVE_GCC}/include\"\n+\n+        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GCC_LIB}/include-fixed:${CROSS_GLIBC}/include\"\n+        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib\"\n+        ;;\n+    *linux*)\n+        CROSS_GLIBC=\"$(store_path \"glibc-cross-${HOST}\")\"\n+        CROSS_GLIBC_STATIC=\"$(store_path \"glibc-cross-${HOST}\" static)\"\n+        CROSS_KERNEL=\"$(store_path \"linux-libre-headers-cross-${HOST}\")\"\n+        CROSS_GCC=\"$(store_path \"gcc-cross-${HOST}\")\"\n+        CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+        CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+        # NOTE: CROSS_C_INCLUDE_PATH is missing ${CROSS_GCC_LIB}/include-fixed, because\n+        # the limits.h in it is missing a '#include_next <limits.h>'\n+        export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n+        export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+        export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n+        ;;\n+    *)\n+        exit 1 ;;\n+esac\n+\n+# Sanity check CROSS_*_PATH directories\n+IFS=':' read -ra PATHS <<< \"${CROSS_C_INCLUDE_PATH}:${CROSS_CPLUS_INCLUDE_PATH}:${CROSS_LIBRARY_PATH}\"\n+for p in \"${PATHS[@]}\"; do\n+    if [ ! -d \"$p\" ]; then\n+        echo \"'$p' doesn't exist or isn't a directory... Aborting...\"\n+        exit 1\n+    fi\n+done\n \n # Disable Guix ld auto-rpath behavior\n export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n@@ -59,16 +93,20 @@ export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n [ -e /usr/bin/env ]  || ln -s --no-dereference \"$(command -v env)\"  /usr/bin/env\n \n # Determine the correct value for -Wl,--dynamic-linker for the current $HOST\n-glibc_dynamic_linker=$(\n-    case \"$HOST\" in\n-        i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n-        x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n-        arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n-        aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n-        riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n-        *)                   exit 1 ;;\n-    esac\n-)\n+case \"$HOST\" in\n+    *linux*)\n+        glibc_dynamic_linker=$(\n+            case \"$HOST\" in\n+                i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n+                x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n+                arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n+                aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n+                riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n+                *)                   exit 1 ;;\n+            esac\n+        )\n+        ;;\n+esac\n \n # Environment variables for determinism\n export QT_RCC_TEST=1\n@@ -103,44 +141,53 @@ make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n # Source Tarball Building #\n ###########################\n \n-# Create the source tarball and move it to \"${OUTDIR}/src\" if not already there\n-if [ -z \"$(find \"${OUTDIR}/src\" -name 'bitcoin-*.tar.gz')\" ]; then\n-    ./autogen.sh\n-    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" ./configure --prefix=/\n-    make dist GZIP_ENV='-9n' ${V:+V=1}\n-    mkdir -p \"${OUTDIR}/src\"\n-    mv \"$(find \"${PWD}\" -name 'bitcoin-*.tar.gz')\" \"${OUTDIR}/src/\"\n-fi\n+# Define DISTNAME variable.\n+# shellcheck source=contrib/gitian-descriptors/assign_DISTNAME\n+source contrib/gitian-descriptors/assign_DISTNAME\n \n-# Determine the full path to our source tarball\n-SOURCEDIST=\"$(find \"${OUTDIR}/src\" -name 'bitcoin-*.tar.gz')\"\n-# Determine our distribution name (e.g. bitcoin-0.18.0)\n-DISTNAME=\"$(basename \"$SOURCEDIST\" '.tar.gz')\"\n+GIT_ARCHIVE=\"${OUTDIR}/src/${DISTNAME}.tar.gz\"\n+\n+# Create the source tarball if not already there\n+if [ ! -e \"$GIT_ARCHIVE\" ]; then\n+    mkdir -p \"$(dirname \"$GIT_ARCHIVE\")\"\n+    git archive --output=\"$GIT_ARCHIVE\" HEAD\n+fi\n \n ###########################\n # Binary Tarball Building #\n ###########################\n \n-# Create a spec file to normalize ssp linking behaviour\n-spec_file=\"$(mktemp)\"\n-cat << EOF > \"$spec_file\"\n-*link_ssp:\n-%{fstack-protector|fstack-protector-all|fstack-protector-strong|fstack-protector-explicit:}\n-EOF\n+# CONFIGFLAGS\n+CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+case \"$HOST\" in\n+    *linux*) CONFIGFLAGS+=\" --enable-glibc-back-compat\" ;;\n+esac\n+\n+# CFLAGS\n+HOST_CFLAGS=\"-O2 -g\"\n+case \"$HOST\" in\n+    *linux*)  HOST_CFLAGS+=\" -ffile-prefix-map=${PWD}=.\" ;;\n+    *mingw*)  HOST_CFLAGS+=\" -fno-ident\" ;;\n+esac\n \n-# Similar flags to Gitian\n-CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n-HOST_CFLAGS=\"-O2 -g -specs=${spec_file} -ffile-prefix-map=${PWD}=.\"\n-HOST_CXXFLAGS=\"-O2 -g -specs=${spec_file} -ffile-prefix-map=${PWD}=.\"\n-HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++\"\n+# CXXFLAGS\n+HOST_CXXFLAGS=\"$HOST_CFLAGS\"\n+\n+# LDFLAGS\n+case \"$HOST\" in\n+    *linux*)  HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++ -Wl,-O2\" ;;\n+    *mingw*)  HOST_LDFLAGS=\"-Wl,--no-insert-timestamp\" ;;\n+esac\n \n # Make $HOST-specific native binaries from depends available in $PATH\n export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n (\n     cd \"$DISTSRC\"\n \n     # Extract the source tarball\n-    tar --strip-components=1 -xf \"${SOURCEDIST}\"\n+    tar -xf \"${GIT_ARCHIVE}\"\n+\n+    ./autogen.sh\n \n     # Configure this DISTSRC for $HOST\n     # shellcheck disable=SC2086\n@@ -152,7 +199,7 @@ export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n                     ${CONFIGFLAGS} \\\n                     CFLAGS=\"${HOST_CFLAGS}\" \\\n                     CXXFLAGS=\"${HOST_CXXFLAGS}\" \\\n-                    LDFLAGS=\"${HOST_LDFLAGS}\"\n+                    ${HOST_LDFLAGS:+LDFLAGS=\"${HOST_LDFLAGS}\"}\n \n     sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n \n@@ -161,9 +208,21 @@ export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n \n     # Perform basic ELF security checks on a series of executables.\n     make -C src --jobs=1 check-security ${V:+V=1}\n-    # Check that executables only contain allowed gcc, glibc and libstdc++\n-    # version symbols for Linux distro back-compatibility.\n-    make -C src --jobs=1 check-symbols  ${V:+V=1}\n+\n+    case \"$HOST\" in\n+        *linux*|*mingw*)\n+            # Check that executables only contain allowed gcc, glibc and libstdc++\n+            # version symbols for Linux distro back-compatibility.\n+            make -C src --jobs=1 check-symbols  ${V:+V=1}\n+            ;;\n+    esac\n+\n+    # Make the os-specific installers\n+    case \"$HOST\" in\n+        *mingw*)\n+            make deploy ${V:+V=1} BITCOIN_WIN_INSTALLER=\"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+            ;;\n+    esac\n \n     # Setup the directory where our Bitcoin Core build for HOST will be\n     # installed. This directory will also later serve as the input for our\n@@ -172,9 +231,16 @@ export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n     mkdir -p \"${INSTALLPATH}\"\n     # Install built Bitcoin Core to $INSTALLPATH\n     make install DESTDIR=\"${INSTALLPATH}\" ${V:+V=1}\n+\n     (\n         cd installed\n \n+        case \"$HOST\" in\n+            *mingw*)\n+                mv --target-directory=\"$DISTNAME\"/lib/ \"$DISTNAME\"/bin/*.dll\n+                ;;\n+        esac\n+\n         # Prune libtool and object archives\n         find . -name \"lib*.la\" -delete\n         find . -name \"lib*.a\" -delete\n@@ -188,19 +254,60 @@ export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n             find \"${DISTNAME}/lib\" -type f -print0\n         } | xargs -0 -n1 -P\"$MAX_JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n \n-        cp \"${DISTSRC}/doc/README.md\" \"${DISTNAME}/\"\n+        case \"$HOST\" in\n+            *mingw*)\n+                cp \"${DISTSRC}/doc/README_windows.txt\" \"${DISTNAME}/readme.txt\"\n+                ;;\n+            *linux*)\n+                cp \"${DISTSRC}/README.md\" \"${DISTNAME}/\"\n+                ;;\n+        esac\n \n         # Finally, deterministically produce {non-,}debug binary tarballs ready\n         # for release\n-        find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n-            | sort --zero-terminated \\\n-            | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-            | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" \\\n-            || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" && exit 1 )\n-        find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n-            | sort --zero-terminated \\\n-            | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n-            | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" \\\n-            || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" && exit 1 )\n+        case \"$HOST\" in\n+            *mingw*)\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n+                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" \\\n+                    | sort \\\n+                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}.zip\" && exit 1 )\n+                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n+                    | xargs -0r touch --no-dereference --date=\"@${SOURCE_DATE_EPOCH}\"\n+                find \"${DISTNAME}\" -name \"*.dbg\" \\\n+                    | sort \\\n+                    | zip -X@ \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST//x86_64-w64-mingw32/win64}-debug.zip\" && exit 1 )\n+                ;;\n+            *linux*)\n+                find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n+                    | sort --zero-terminated \\\n+                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" && exit 1 )\n+                find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n+                    | sort --zero-terminated \\\n+                    | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                    | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" \\\n+                    || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" && exit 1 )\n+                ;;\n+        esac\n     )\n )\n+\n+case \"$HOST\" in\n+    *mingw*)\n+        cp -rf --target-directory=. contrib/windeploy\n+        (\n+            cd ./windeploy\n+            mkdir unsigned\n+            cp --target-directory=unsigned/ \"${OUTDIR}/${DISTNAME}-win64-setup-unsigned.exe\"\n+            find . -print0 \\\n+                | sort --zero-terminated \\\n+                | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+                | gzip -9n > \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" \\\n+                || ( rm -f \"${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\" && exit 1 )\n+        )\n+        ;;\n+esac"
      },
      {
        "sha": "5e011ea1848982e5ce5e2073ff28443b15d4f39c",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 85,
        "deletions": 45,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -10,11 +10,15 @@\n              (gnu packages file)\n              (gnu packages gawk)\n              (gnu packages gcc)\n+             (gnu packages installers)\n              (gnu packages linux)\n+             (gnu packages mingw)\n              (gnu packages perl)\n              (gnu packages pkg-config)\n              (gnu packages python)\n              (gnu packages shells)\n+             (gnu packages version-control)\n+             (guix build-system gnu)\n              (guix build-system trivial)\n              (guix gexp)\n              (guix packages)\n@@ -23,7 +27,10 @@\n \n (define (make-ssp-fixed-gcc xgcc)\n   \"Given a XGCC package, return a modified package that uses the SSP function\n-from glibc instead of from libssp.so. Taken from:\n+from glibc instead of from libssp.so. Our `symbol-check' script will complain if\n+we link against libssp.so, and thus will ensure that this works properly.\n+\n+Taken from:\n http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n   (package\n    (inherit xgcc)\n@@ -104,55 +111,88 @@ chain for \" target \" development.\"))\n                                   (base-gcc-for-libc gcc-5)\n                                   (base-kernel-headers linux-libre-headers-4.19)\n                                   (base-libc glibc-2.27)\n-                                  (base-gcc (make-gcc-rpath-link\n-                                             (make-ssp-fixed-gcc gcc-9))))\n-  \"Convienience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n+                                  (base-gcc (make-gcc-rpath-link gcc-9)))\n+  \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n desirable for building Bitcoin Core release binaries.\"\n   (make-cross-toolchain target\n                    base-gcc-for-libc\n                    base-kernel-headers\n                    base-libc\n                    base-gcc))\n \n+(define (make-gcc-with-pthreads gcc)\n+  (package-with-extra-configure-variable gcc \"--enable-threads\" \"posix\"))\n+\n+(define (make-mingw-pthreads-cross-toolchain target)\n+  \"Create a cross-compilation toolchain package for TARGET\"\n+  (let* ((xbinutils (cross-binutils target))\n+         (pthreads-xlibc mingw-w64-x86_64-winpthreads)\n+         (pthreads-xgcc (make-gcc-with-pthreads\n+                         (cross-gcc target\n+                                    #:xgcc (make-ssp-fixed-gcc gcc-9)\n+                                    #:xbinutils xbinutils\n+                                    #:libc pthreads-xlibc))))\n+    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n+    ;; XGCC\n+    (package\n+      (name (string-append target \"-posix-toolchain\"))\n+      (version (package-version pthreads-xgcc))\n+      (source #f)\n+      (build-system trivial-build-system)\n+      (arguments '(#:builder (begin (mkdir %output) #t)))\n+      (propagated-inputs\n+       `((\"binutils\" ,xbinutils)\n+         (\"libc\" ,pthreads-xlibc)\n+         (\"gcc\" ,pthreads-xgcc)))\n+      (synopsis (string-append \"Complete GCC tool chain for \" target))\n+      (description (string-append \"This package provides a complete GCC tool\n+chain for \" target \" development.\"))\n+      (home-page (package-home-page pthreads-xgcc))\n+      (license (package-license pthreads-xgcc)))))\n+\n+\n (packages->manifest\n- (list ;; The Basics\n-       bash-minimal\n-       which\n-       coreutils\n-       util-linux\n-       ;; File(system) inspection\n-       file\n-       grep\n-       diffutils\n-       findutils\n-       ;; File transformation\n-       patch\n-       gawk\n-       sed\n-       ;; Compression and archiving\n-       tar\n-       bzip2\n-       gzip\n-       xz\n-       zlib\n-       ;; Build tools\n-       gnu-make\n-       libtool\n-       autoconf\n-       automake\n-       pkg-config\n-       ;; Scripting\n-       perl\n-       python-3.7\n-       ;; Native gcc 9 toolchain targeting glibc 2.27\n-       (make-gcc-toolchain gcc-9 glibc-2.27)\n-       ;; Cross gcc 9 toolchains targeting glibc 2.27\n-       (make-bitcoin-cross-toolchain \"i686-linux-gnu\")\n-       (make-bitcoin-cross-toolchain \"x86_64-linux-gnu\")\n-       (make-bitcoin-cross-toolchain \"aarch64-linux-gnu\")\n-       (make-bitcoin-cross-toolchain \"arm-linux-gnueabihf\")\n-       ;; The glibc 2.27 for riscv64 needs gcc 7 to successfully build (see:\n-       ;; https://www.gnu.org/software/gcc/gcc-7/changes.html#riscv). The final\n-       ;; toolchain is still a gcc 9 toolchain targeting glibc 2.27.\n-       (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n-                                     #:base-gcc-for-libc gcc-7)))\n+ (append\n+  (list ;; The Basics\n+        bash-minimal\n+        which\n+        coreutils\n+        util-linux\n+        ;; File(system) inspection\n+        file\n+        grep\n+        diffutils\n+        findutils\n+        ;; File transformation\n+        patch\n+        gawk\n+        sed\n+        ;; Compression and archiving\n+        tar\n+        bzip2\n+        gzip\n+        xz\n+        zlib\n+        ;; Build tools\n+        gnu-make\n+        libtool\n+        autoconf\n+        automake\n+        pkg-config\n+        ;; Scripting\n+        perl\n+        python-3.7\n+        ;; Git\n+        git\n+        ;; Native gcc 9 toolchain targeting glibc 2.27\n+        (make-gcc-toolchain gcc-9 glibc-2.27))\n+  (let ((target (getenv \"HOST\")))\n+    (cond ((string-suffix? \"-mingw32\" target)\n+           ;; Windows\n+           (list zip (make-mingw-pthreads-cross-toolchain \"x86_64-w64-mingw32\") nsis-x86_64))\n+          ((string-contains target \"riscv64-linux-\")\n+           (list (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n+                                               #:base-gcc-for-libc gcc-7)))\n+          ((string-contains target \"-linux-\")\n+           (list (make-bitcoin-cross-toolchain target)))\n+          (else '())))))"
      },
      {
        "sha": "dde1bd0c4d16b7eede11a741b72777a47e0962c7",
        "filename": "contrib/init/bitcoind.conf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -16,7 +16,7 @@ expect fork\n \n respawn\n respawn limit 5 120\n-kill timeout 60\n+kill timeout 600\n \n pre-start script\n     # this will catch non-existent config files"
      },
      {
        "sha": "19e1f76d094ce4a17f883fca9bd2b8d12d0f6e8c",
        "filename": "contrib/init/bitcoind.init",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -39,7 +39,7 @@ start() {\n \n stop() {\n     echo -n $\"Stopping $prog: \"\n-    killproc $prog\n+    killproc $prog -t600\n     RETVAL=$?\n     echo\n     [ $RETVAL -eq 0 ] && rm -f $lockfile"
      },
      {
        "sha": "c8a22a08d92419a16f251d1c2b357ca371f68fe5",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -30,4 +30,4 @@\n # Note that this will be mapped as argument to start-stop-daemon's\n # '--retry' option, which means you can specify a retry schedule\n # here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60\n+BITCOIND_SIGTERM_TIMEOUT=600"
      },
      {
        "sha": "8b308644b10611ae4e558e08aa003a3a2e1ad370",
        "filename": "contrib/init/bitcoind.service",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -5,8 +5,9 @@\n # See \"man systemd.service\" for details.\n \n # Note that almost all daemon options could be specified in\n-# /etc/bitcoin/bitcoin.conf, except for those explicitly specified as arguments\n-# in ExecStart=\n+# /etc/bitcoin/bitcoin.conf, but keep in mind those explicitly\n+# specified as arguments in ExecStart= will override those in the\n+# config file.\n \n [Unit]\n Description=Bitcoin daemon\n@@ -18,12 +19,17 @@ ExecStart=/usr/bin/bitcoind -daemon \\\n                             -conf=/etc/bitcoin/bitcoin.conf \\\n                             -datadir=/var/lib/bitcoind\n \n+# Make sure the config directory is readable by the service user\n+PermissionsStartOnly=true\n+ExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n+\n # Process management\n ####################\n \n Type=forking\n PIDFile=/run/bitcoind/bitcoind.pid\n Restart=on-failure\n+TimeoutStopSec=600\n \n # Directory creation and permissions\n ####################################\n@@ -53,6 +59,9 @@ PrivateTmp=true\n # Mount /usr, /boot/ and /etc read-only for the process.\n ProtectSystem=full\n \n+# Deny access to /home, /root and /run/user\n+ProtectHome=true\n+\n # Disallow the process and all of its children to gain\n # new privileges through execve().\n NoNewPrivileges=true"
      },
      {
        "sha": "e9130a21ded67cbb3a9811f2a27a6affe46d3634",
        "filename": "contrib/install_db4.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,4 +1,7 @@\n #!/bin/sh\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Install libdb4.8 (Berkeley DB).\n "
      },
      {
        "sha": "5990b9307ab47b45e316e2d2bb4962fc2fe29b90",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -28,6 +28,11 @@ input=/home/example/.bitcoin/blocks\n #genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n #input=/home/example/.bitcoin/testnet3/blocks\n \n+# regtest\n+#netmagic=fabfb5da\n+#genesis=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\n+#input=/home/example/.bitcoin/regtest/blocks\n+\n # \"output\" option causes blockchain files to be written to the given location,\n # with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n # output=/home/example/blockchain_directory"
      },
      {
        "sha": "73f54cd4885e0168a900cc3e4663d1790fe1021a",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 36,
        "deletions": 6,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2018 The Bitcoin Core developers\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -15,6 +15,7 @@\n import hashlib\n import datetime\n import time\n+import glob\n from collections import namedtuple\n from binascii import unhexlify\n \n@@ -92,6 +93,30 @@ def mkblockmap(blkindex):\n         blkmap[hash] = height\n     return blkmap\n \n+# This gets the first block file ID that exists from the input block\n+# file directory.\n+def getFirstBlockFileId(block_dir_path):\n+    # First, this sets up a pattern to search for block files, for\n+    # example 'blkNNNNN.dat'.\n+    blkFilePattern = os.path.join(block_dir_path, \"blk[0-9][0-9][0-9][0-9][0-9].dat\")\n+\n+    # This search is done with glob\n+    blkFnList = glob.glob(blkFilePattern)\n+\n+    if len(blkFnList) == 0:\n+        print(\"blocks not pruned - starting at 0\")\n+        return 0\n+    # We then get the lexicographic minimum, which should be the first\n+    # block file name.\n+    firstBlkFilePath = min(blkFnList)\n+    firstBlkFn = os.path.basename(firstBlkFilePath)\n+\n+    # now, the string should be ['b','l','k','N','N','N','N','N','.','d','a','t']\n+    # So get the ID by choosing:              3   4   5   6   7\n+    # The ID is not necessarily 0 if this is a pruned node.\n+    blkId = int(firstBlkFn[3:8])\n+    return blkId\n+\n # Block header and extent on disk\n BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n \n@@ -101,7 +126,9 @@ def __init__(self, settings, blkindex, blkmap):\n         self.blkindex = blkindex\n         self.blkmap = blkmap\n \n-        self.inFn = 0\n+        # Get first occurring block file id - for pruned nodes this\n+        # will not necessarily be 0\n+        self.inFn = getFirstBlockFileId(self.settings['input'])\n         self.inF = None\n         self.outFn = 0\n         self.outsz = 0\n@@ -213,8 +240,11 @@ def run(self):\n \n             inMagic = inhdr[:4]\n             if (inMagic != self.settings['netmagic']):\n-                print(\"Invalid magic: \" + inMagic.hex())\n-                return\n+                # Seek backwards 7 bytes (skipping the first byte in the previous search)\n+                # and continue searching from the new position if the magic bytes are not\n+                # found.\n+                self.inF.seek(-7, os.SEEK_CUR)\n+                continue\n             inLenLE = inhdr[4:]\n             su = struct.unpack(\"<I\", inLenLE)\n             inLen = su[0] - 80 # length without header\n@@ -263,12 +293,12 @@ def run(self):\n     f = open(sys.argv[1], encoding=\"utf8\")\n     for line in f:\n         # skip comment lines\n-        m = re.search('^\\s*#', line)\n+        m = re.search(r'^\\s*#', line)\n         if m:\n             continue\n \n         # parse key=value lines\n-        m = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n         if m is None:\n             continue\n         settings[m.group(1)] = m.group(2)"
      },
      {
        "sha": "fed6e665b8c934e26729f5cfe192f95f27870754",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2018 The Bitcoin Core developers\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -106,12 +106,12 @@ def get_rpc_cookie():\n     f = open(sys.argv[1], encoding=\"utf8\")\n     for line in f:\n         # skip comment lines\n-        m = re.search('^\\s*#', line)\n+        m = re.search(r'^\\s*#', line)\n         if m:\n             continue\n \n         # parse key=value lines\n-        m = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n         if m is None:\n             continue\n         settings[m.group(1)] = m.group(2)"
      },
      {
        "sha": "68ebb5def198bb79fe816c1c9f0895fdf34c75f4",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 133,
        "deletions": 9,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,15 +1,139 @@\n-### MacDeploy ###\n+# MacOS Deployment\n \n-For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n-\t\n-\tsudo easy_install argparse\n+The `macdeployqtplus` script should not be run manually. Instead, after building as usual:\n \n-This script should not be run manually, instead, after building as usual:\n+```bash\n+make deploy\n+```\n \n-\tmake deploy\n+During the deployment process, the disk image window will pop up briefly\n+when the fancy settings are applied. This is normal, please do not interfere,\n+the process will unmount the DMG and cleanup before finishing.\n \n-During the process, the disk image window will pop up briefly where the fancy\n-settings are applied. This is normal, please do not interfere.\n+When complete, it will have produced `Bitcoin-Qt.dmg`.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+## SDK Extraction\n \n+Our current macOS SDK (`macOSX10.14.sdk`) can be extracted from\n+[Xcode_10.2.1.xip](https://download.developer.apple.com/Developer_Tools/Xcode_10.2.1/Xcode_10.2.1.xip).\n+An Apple ID is needed to download this.\n+\n+`Xcode.app` is packaged in a `.xip` archive.\n+This makes the SDK less-trivial to extract on non-macOS machines.\n+One approach (tested on Debian Buster) is outlined below:\n+\n+```bash\n+\n+apt install clang cpio git liblzma-dev libxml2-dev libssl-dev make\n+\n+git clone https://github.com/tpoechtrager/xar\n+pushd xar/xar\n+./configure\n+make\n+make install\n+popd\n+\n+git clone https://github.com/NiklasRosenstein/pbzx\n+pushd pbzx\n+clang -llzma -lxar pbzx.c -o pbzx -Wl,-rpath=/usr/local/lib\n+popd\n+\n+xar -xf Xcode_10.2.1.xip -C .\n+\n+./pbzx/pbzx -n Content | cpio -i\n+\n+find Xcode.app -type d -name MacOSX.sdk -exec sh -c 'tar --transform=\"s/MacOSX.sdk/MacOSX10.14.sdk/\" -c -C$(dirname {}) MacOSX.sdk/ | gzip -9n > MacOSX10.14.sdk.tar.gz' \\;\n+```\n+\n+on macOS the process is more straightforward:\n+\n+```bash\n+xip -x Xcode_10.2.1.xip\n+tar -s \"/MacOSX.sdk/MacOSX10.14.sdk/\" -C Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.14.sdk.tar.gz MacOSX.sdk\n+```\n+\n+Our previously used macOS SDK (`MacOSX10.11.sdk`) can be extracted from\n+[Xcode 7.3.1 dmg](https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg).\n+The script [`extract-osx-sdk.sh`](./extract-osx-sdk.sh) automates this. First\n+ensure the DMG file is in the current directory, and then run the script. You\n+may wish to delete the `intermediate 5.hfs` file and `MacOSX10.11.sdk` (the\n+directory) when you've confirmed the extraction succeeded.\n+\n+```bash\n+apt-get install p7zip-full sleuthkit\n+contrib/macdeploy/extract-osx-sdk.sh\n+rm -rf 5.hfs MacOSX10.11.sdk\n+```\n+\n+## Deterministic macOS DMG Notes\n+Working macOS DMGs are created in Linux by combining a recent `clang`, the Apple\n+`binutils` (`ld`, `ar`, etc) and DMG authoring tools.\n+\n+Apple uses `clang` extensively for development and has upstreamed the necessary\n+functionality so that a vanilla clang can take advantage. It supports the use of `-F`,\n+`-target`, `-mmacosx-version-min`, and `--sysroot`, which are all necessary when\n+building for macOS.\n+\n+Apple's version of `binutils` (called `cctools`) contains lots of functionality missing in the\n+FSF's `binutils`. In addition to extra linker options for frameworks and sysroots, several\n+other tools are needed as well such as `install_name_tool`, `lipo`, and `nmedit`. These\n+do not build under Linux, so they have been patched to do so. The work here was used as\n+a starting point: [mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n+\n+In order to build a working toolchain, the following source packages are needed from\n+Apple: `cctools`, `dyld`, and `ld64`.\n+\n+These tools inject timestamps by default, which produce non-deterministic binaries. The\n+`ZERO_AR_DATE` environment variable is used to disable that.\n+\n+This version of `cctools` has been patched to use the current version of `clang`'s headers\n+and its `libLTO.so` rather than those from `llvmgcc`, as it was originally done in `toolchain4`.\n+\n+To complicate things further, all builds must target an Apple SDK. These SDKs are free to\n+download, but not redistributable. To obtain it, register for an Apple Developer Account,\n+then download [Xcode 10.2.1](https://download.developer.apple.com/Developer_Tools/Xcode_10.2.1/Xcode_10.2.1.xip).\n+\n+This file is many gigabytes in size, but most (but not all) of what we need is\n+contained only in a single directory:\n+\n+```bash\n+Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk\n+```\n+\n+See the SDK Extraction notes above for how to obtain it.\n+\n+The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries which are\n+created using these tools. The build process has been designed to avoid including the\n+SDK's files in Gitian's outputs. All interim tarballs are fully deterministic and may be freely\n+redistributed.\n+\n+`genisoimage` is used to create the initial DMG. It is not deterministic as-is, so it has been\n+patched. A system `genisoimage` will work fine, but it will not be deterministic because\n+the file-order will change between invocations. The patch can be seen here: [cdrkit-deterministic.patch](https://github.com/bitcoin/bitcoin/blob/master/depends/patches/native_cdrkit/cdrkit-deterministic.patch).\n+No effort was made to fix this cleanly, so it likely leaks memory badly, however it's only used for\n+a single invocation, so that's no real concern.\n+\n+`genisoimage` cannot compress DMGs, so afterwards, the DMG tool from the\n+`libdmg-hfsplus` project is used to compress it. There are several bugs in this tool and its\n+maintainer has seemingly abandoned the project.\n+\n+The DMG tool has the ability to create DMGs from scratch as well, but this functionality is\n+broken. Only the compression feature is currently used. Ideally, the creation could be fixed\n+and `genisoimage` would no longer be necessary.\n+\n+Background images and other features can be added to DMG files by inserting a\n+`.DS_Store` before creation. This is generated by the script `contrib/macdeploy/custom_dsstore.py`.\n+\n+As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a requirement in\n+order to satisfy the new Gatekeeper requirements. Because this private key cannot be\n+shared, we'll have to be a bit creative in order for the build process to remain somewhat\n+deterministic. Here's how it works:\n+\n+- Builders use Gitian to create an unsigned release. This outputs an unsigned DMG which\n+  users may choose to bless and run. It also outputs an unsigned app structure in the form\n+  of a tarball, which also contains all of the tools that have been previously (deterministically)\n+  built in order to create a final DMG.\n+- The Apple keyholder uses this unsigned app to create a detached signature, using the\n+  script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+- Builders feed the unsigned app + detached signature back into Gitian. It uses the\n+  pre-built tools to recombine the pieces into a deterministic DMG."
      },
      {
        "sha": "5c5a85d3fe1861a4e5d3300faa04480f17846975",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "31a97f0a24c7238a3c4c53d79e0fe34a783d2a6d",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "3c7bdf4217c5c9ae13aa9dd3cff55cdb9f0e4577",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env bash\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d8088aa1230441b59b7b8132d601671ca13c2a98",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 96,
        "deletions": 54,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -19,6 +19,7 @@\n import subprocess, sys, re, os, shutil, stat, os.path, time\n from string import Template\n from argparse import ArgumentParser\n+from typing import List, Optional\n \n # This is ported from the original macdeployqt with modifications\n \n@@ -48,18 +49,18 @@ class FrameworkInfo(object):\n             return False\n     \n     def __str__(self):\n-        return \"\"\" Framework name: %s\n- Framework directory: %s\n- Framework path: %s\n- Binary name: %s\n- Binary directory: %s\n- Binary path: %s\n- Version: %s\n- Install name: %s\n- Deployed install name: %s\n- Source file Path: %s\n- Deployed Directory (relative to bundle): %s\n-\"\"\" % (self.frameworkName,\n+        return \"\"\" Framework name: {}\n+ Framework directory: {}\n+ Framework path: {}\n+ Binary name: {}\n+ Binary directory: {}\n+ Binary path: {}\n+ Version: {}\n+ Install name: {}\n+ Deployed install name: {}\n+ Source file Path: {}\n+ Deployed Directory (relative to bundle): {}\n+\"\"\".format(self.frameworkName,\n        self.frameworkDirectory,\n        self.frameworkPath,\n        self.binaryName,\n@@ -85,7 +86,7 @@ class FrameworkInfo(object):\n     bundleBinaryDirectory = \"Contents/MacOS\"\n     \n     @classmethod\n-    def fromOtoolLibraryLine(cls, line):\n+    def fromOtoolLibraryLine(cls, line: str) -> Optional['FrameworkInfo']:\n         # Note: line must be trimmed\n         if line == \"\":\n             return None\n@@ -146,13 +147,12 @@ class FrameworkInfo(object):\n             info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n             info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n             info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n             info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n         \n         return info\n \n class ApplicationBundleInfo(object):\n-    def __init__(self, path):\n+    def __init__(self, path: str):\n         self.path = path\n         appName = \"Bitcoin-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n@@ -167,7 +167,7 @@ class DeploymentInfo(object):\n         self.pluginPath = None\n         self.deployedFrameworks = []\n     \n-    def detectQtPath(self, frameworkDirectory):\n+    def detectQtPath(self, frameworkDirectory: str):\n         parentDir = os.path.dirname(frameworkDirectory)\n         if os.path.exists(os.path.join(parentDir, \"translations\")):\n             # Classic layout, e.g. \"/usr/local/Trolltech/Qt-4.x.x\"\n@@ -180,9 +180,9 @@ class DeploymentInfo(object):\n             if os.path.exists(pluginPath):\n                 self.pluginPath = pluginPath\n     \n-    def usesFramework(self, name):\n-        nameDot = \"%s.\" % name\n-        libNameDot = \"lib%s.\" % name\n+    def usesFramework(self, name: str) -> bool:\n+        nameDot = \"{}.\".format(name)\n+        libNameDot = \"lib{}.\".format(name)\n         for framework in self.deployedFrameworks:\n             if framework.endswith(\".framework\"):\n                 if framework.startswith(nameDot):\n@@ -192,7 +192,7 @@ class DeploymentInfo(object):\n                     return True\n         return False\n \n-def getFrameworks(binaryPath, verbose):\n+def getFrameworks(binaryPath: str, verbose: int) -> List[FrameworkInfo]:\n     if verbose >= 3:\n         print(\"Inspecting with otool: \" + binaryPath)\n     otoolbin=os.getenv(\"OTOOL\", \"otool\")\n@@ -202,7 +202,7 @@ def getFrameworks(binaryPath, verbose):\n         if verbose >= 1:\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n-            raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n+            raise RuntimeError(\"otool failed with return code {}\".format(otool.returncode))\n \n     otoolLines = o_stdout.split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n@@ -221,33 +221,33 @@ def getFrameworks(binaryPath, verbose):\n     \n     return libraries\n \n-def runInstallNameTool(action, *args):\n+def runInstallNameTool(action: str, *args):\n     installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n     subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n \n-def changeInstallName(oldName, newName, binaryPath, verbose):\n+def changeInstallName(oldName: str, newName: str, binaryPath: str, verbose: int):\n     if verbose >= 3:\n         print(\"Using install_name_tool:\")\n         print(\" in\", binaryPath)\n         print(\" change reference\", oldName)\n         print(\" to\", newName)\n     runInstallNameTool(\"change\", oldName, newName, binaryPath)\n \n-def changeIdentification(id, binaryPath, verbose):\n+def changeIdentification(id: str, binaryPath: str, verbose: int):\n     if verbose >= 3:\n         print(\"Using install_name_tool:\")\n         print(\" change identification in\", binaryPath)\n         print(\" to\", id)\n     runInstallNameTool(\"id\", id, binaryPath)\n \n-def runStrip(binaryPath, verbose):\n+def runStrip(binaryPath: str, verbose: int):\n     stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n         print(\"Using strip:\")\n         print(\" stripped\", binaryPath)\n     subprocess.check_call([stripbin, \"-x\", binaryPath])\n \n-def copyFramework(framework, path, verbose):\n+def copyFramework(framework: FrameworkInfo, path: str, verbose: int) -> Optional[str]:\n     if framework.sourceFilePath.startswith(\"Qt\"):\n         #standard place for Nokia Qt installer's frameworks\n         fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n@@ -309,7 +309,7 @@ def copyFramework(framework, path, verbose):\n     \n     return toPath\n \n-def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploymentInfo=None):\n+def deployFrameworks(frameworks: List[FrameworkInfo], bundlePath: str, binaryPath: str, strip: bool, verbose: int, deploymentInfo: Optional[DeploymentInfo] = None) -> DeploymentInfo:\n     if deploymentInfo is None:\n         deploymentInfo = DeploymentInfo()\n     \n@@ -355,15 +355,15 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n     \n     return deploymentInfo\n \n-def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n+def deployFrameworksForAppBundle(applicationBundle: ApplicationBundleInfo, strip: bool, verbose: int) -> DeploymentInfo:\n     frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n     if len(frameworks) == 0 and verbose >= 1:\n-        print(\"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path))\n+        print(\"Warning: Could not find any external frameworks to deploy in {}.\".format(applicationBundle.path))\n         return DeploymentInfo()\n     else:\n         return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n \n-def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n+def deployPlugins(appBundleInfo: ApplicationBundleInfo, deploymentInfo: DeploymentInfo, strip: bool, verbose: int):\n     # Lookup available plugins, exclude unneeded\n     plugins = []\n     if deploymentInfo.pluginPath is None:\n@@ -373,10 +373,12 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n         if pluginDirectory == \"designer\":\n             # Skip designer plugins\n             continue\n-        elif pluginDirectory == \"phonon\" or pluginDirectory == \"phonon_backend\":\n-            # Deploy the phonon plugins only if phonon is in use\n-            if not deploymentInfo.usesFramework(\"phonon\"):\n-                continue\n+        elif pluginDirectory == \"printsupport\":\n+            # Skip printsupport plugins\n+            continue\n+        elif pluginDirectory == \"imageformats\":\n+            # Skip imageformats plugins\n+            continue\n         elif pluginDirectory == \"sqldrivers\":\n             # Deploy the sql plugins only if QtSql is in use\n             if not deploymentInfo.usesFramework(\"QtSql\"):\n@@ -409,6 +411,42 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n             # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n             if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n                 continue\n+        elif pluginDirectory == \"canbus\":\n+            # Deploy the canbus plugins only if QtSerialBus is in use\n+            if not deploymentInfo.usesFramework(\"QtSerialBus\"):\n+                continue\n+        elif pluginDirectory == \"webview\":\n+            # Deploy the webview plugins only if QtWebView is in use\n+            if not deploymentInfo.usesFramework(\"QtWebView\"):\n+                continue\n+        elif pluginDirectory == \"gamepads\":\n+            # Deploy the webview plugins only if QtGamepad is in use\n+            if not deploymentInfo.usesFramework(\"QtGamepad\"):\n+                continue\n+        elif pluginDirectory == \"geoservices\":\n+            # Deploy the webview plugins only if QtLocation is in use\n+            if not deploymentInfo.usesFramework(\"QtLocation\"):\n+                continue\n+        elif pluginDirectory == \"texttospeech\":\n+            # Deploy the texttospeech plugins only if QtTextToSpeech is in use\n+            if not deploymentInfo.usesFramework(\"QtTextToSpeech\"):\n+                continue\n+        elif pluginDirectory == \"virtualkeyboard\":\n+            # Deploy the virtualkeyboard plugins only if QtVirtualKeyboard is in use\n+            if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                continue\n+        elif pluginDirectory == \"sceneparsers\":\n+            # Deploy the virtualkeyboard plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"renderplugins\":\n+            # Deploy the renderplugins plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"geometryloaders\":\n+            # Deploy the geometryloaders plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n \n         for pluginName in filenames:\n             pluginPath = os.path.join(pluginDirectory, pluginName)\n@@ -431,6 +469,10 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 # Deploy the accessible qtquick plugin only if QtQuick is in use\n                 if not deploymentInfo.usesFramework(\"QtQuick\"):\n                     continue\n+            elif pluginPath == \"platforminputcontexts/libqtvirtualkeyboardplugin.dylib\":\n+                # Deploy the virtualkeyboardplugin plugin only if QtVirtualKeyboard is in use\n+                if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                    continue\n \n             plugins.append((pluginDirectory, pluginName))\n     \n@@ -499,7 +541,7 @@ app_bundle = config.app_bundle[0]\n \n if not os.path.exists(app_bundle):\n     if verbose >= 1:\n-        sys.stderr.write(\"Error: Could not find app bundle \\\"%s\\\"\\n\" % (app_bundle))\n+        sys.stderr.write(\"Error: Could not find app bundle \\\"{}\\\"\\n\".format(app_bundle))\n     sys.exit(1)\n \n app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n@@ -511,7 +553,7 @@ if config.translations_dir and config.translations_dir[0]:\n         translations_dir = config.translations_dir[0]\n     else:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n+            sys.stderr.write(\"Error: Could not find translation dir \\\"{}\\\"\\n\".format(translations_dir))\n         sys.exit(1)\n # ------------------------------------------------\n \n@@ -520,7 +562,7 @@ for p in config.add_resources:\n         print(\"Checking for \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find additional resource file \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not find additional resource file \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n \n # ------------------------------------------------\n@@ -537,17 +579,17 @@ if len(config.fancy) == 1:\n     \n     p = config.fancy[0]\n     if verbose >= 3:\n-        print(\"Fancy: Loading \\\"%s\\\"...\" % p)\n+        print(\"Fancy: Loading \\\"{}\\\"...\".format(p))\n     if not os.path.exists(p):\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     try:\n         fancy = plistlib.readPlist(p)\n     except:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     try:\n@@ -561,18 +603,18 @@ if len(config.fancy) == 1:\n                 assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n     except:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     if \"background_picture\" in fancy:\n         bp = fancy[\"background_picture\"]\n         if verbose >= 3:\n-            print(\"Fancy: Resolving background picture \\\"%s\\\"...\" % bp)\n+            print(\"Fancy: Resolving background picture \\\"{}\\\"...\".format(bp))\n         if not os.path.exists(bp):\n             bp = os.path.join(os.path.dirname(p), bp)\n             if not os.path.exists(bp):\n                 if verbose >= 1:\n-                    sys.stderr.write(\"Error: Could not find background picture at \\\"%s\\\" or \\\"%s\\\"\\n\" % (fancy[\"background_picture\"], bp))\n+                    sys.stderr.write(\"Error: Could not find background picture at \\\"{}\\\" or \\\"{}\\\"\\n\".format(fancy[\"background_picture\"], bp))\n                 sys.exit(1)\n             else:\n                 fancy[\"background_picture\"] = bp\n@@ -623,7 +665,7 @@ try:\n             config.plugins = False\n except RuntimeError as e:\n     if verbose >= 1:\n-        sys.stderr.write(\"Error: %s\\n\" % str(e))\n+        sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n     sys.exit(1)\n \n # ------------------------------------------------\n@@ -636,7 +678,7 @@ if config.plugins:\n         deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n     except RuntimeError as e:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: %s\\n\" % str(e))\n+            sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n         sys.exit(1)\n \n # ------------------------------------------------\n@@ -652,14 +694,14 @@ else:\n         else:\n             sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n             sys.exit(1)\n-    add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n+    add_qt_tr = [\"qt_{}.qm\".format(lng) for lng in config.add_qt_tr[0].split(\",\")]\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n         if verbose >= 3:\n-            print(\"Checking for \\\"%s\\\"...\" % p)\n+            print(\"Checking for \\\"{}\\\"...\".format(p))\n         if not os.path.exists(p):\n             if verbose >= 1:\n-                sys.stderr.write(\"Error: Could not find Qt translation file \\\"%s\\\"\\n\" % (lng_file))\n+                sys.stderr.write(\"Error: Could not find Qt translation file \\\"{}\\\"\\n\".format(lng_file))\n                 sys.exit(1)\n \n # ------------------------------------------------\n@@ -700,14 +742,14 @@ if config.sign and 'CODESIGNARGS' not in os.environ:\n     print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n elif config.sign:\n     if verbose >= 1:\n-        print(\"Code-signing app bundle %s\"%(target,))\n-    subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n+        print(\"Code-signing app bundle {}\".format(target))\n+    subprocess.check_call(\"codesign --force {} {}\".format(os.environ['CODESIGNARGS'], target), shell=True)\n \n # ------------------------------------------------\n \n if config.dmg is not None:\n \n-    def runHDIUtil(verb, image_basename, **kwargs):\n+    def runHDIUtil(verb: str, image_basename: str, **kwargs) -> int:\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n         if \"capture_stdout\" in kwargs:\n             del kwargs[\"capture_stdout\"]\n@@ -721,7 +763,7 @@ if config.dmg is not None:\n         \n         for key, value in kwargs.items():\n             hdiutil_args.append(\"-\" + key)\n-            if not value is True:\n+            if value is not True:\n                 hdiutil_args.append(str(value))\n         \n         return run(hdiutil_args, universal_newlines=True)\n@@ -765,8 +807,8 @@ if config.dmg is not None:\n             output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n-        \n-        m = re.search(\"/Volumes/(.+$)\", output)\n+\n+        m = re.search(r\"/Volumes/(.+$)\", output)\n         disk_root = m.group(0)\n         disk_name = m.group(1)\n         "
      },
      {
        "sha": "8408545a218e4faa4a3fb41951a3afab21ba199a",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2017 The Bitcoin Core developers\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "7630a7a4fa2550396e8e6ee5421a90f640b7be0a",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -74,7 +74,7 @@ def name_to_ipv6(addr):\n         raise ValueError('Could not parse address %s' % addr)\n \n def parse_spec(s, defaultport):\n-    match = re.match('\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n+    match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n     if match: # ipv6\n         host = match.group(1)\n         port = match.group(2)\n@@ -136,4 +136,3 @@ def main():\n \n if __name__ == '__main__':\n     main()\n-"
      },
      {
        "sha": "e8698994f1c9d27784f3544d95abe45267096d32",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 90,
        "deletions": 44,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2013-2018 The Bitcoin Core developers\n+# Copyright (c) 2013-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -19,18 +19,23 @@\n \n # These are hosts that have been observed to be behaving strangely (e.g.\n # aggressively connecting to every node).\n-SUSPICIOUS_HOSTS = {\n-    \"130.211.129.106\", \"178.63.107.226\",\n-    \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n-    \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n-    \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n-    \"54.94.195.96\", \"54.94.200.247\"\n-}\n+with open(\"suspicious_hosts.txt\", mode=\"r\", encoding=\"utf-8\") as f:\n+    SUSPICIOUS_HOSTS = {s.strip() for s in f if s.strip()}\n+\n \n PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.14.(0|1|2|99)/|/Satoshi:0.15.(0|1|2|99)|/Satoshi:0.16.(0|1|2|99)/)$\")\n+PATTERN_AGENT = re.compile(\n+    r\"^/Satoshi:(\"\n+    r\"0.14.(0|1|2|3|99)|\"\n+    r\"0.15.(0|1|2|99)|\"\n+    r\"0.16.(0|1|2|3|99)|\"\n+    r\"0.17.(0|0.1|1|2|99)|\"\n+    r\"0.18.(0|1|99)|\"\n+    r\"0.19.(0|1|99)|\"\n+    r\"0.20.99\"\n+    r\")\")\n \n def parseline(line):\n     sline = line.split()\n@@ -99,78 +104,119 @@ def parseline(line):\n         'sortkey': sortkey,\n     }\n \n+def dedup(ips):\n+    '''deduplicate by address,port'''\n+    d = {}\n+    for ip in ips:\n+        d[ip['ip'],ip['port']] = ip\n+    return list(d.values())\n+\n def filtermultiport(ips):\n     '''Filter out hosts with more nodes per IP'''\n     hist = collections.defaultdict(list)\n     for ip in ips:\n         hist[ip['sortkey']].append(ip)\n     return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n \n+def lookup_asn(net, ip):\n+    '''\n+    Look up the asn for an IP (4 or 6) address by querying cymru.com, or None\n+    if it could not be found.\n+    '''\n+    try:\n+        if net == 'ipv4':\n+            ipaddr = ip\n+            prefix = '.origin'\n+        else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n+            res = str()                         # 2001:4860:b002:23::68\n+            for nb in ip.split(':')[:4]:  # pick the first 4 nibbles\n+                for c in nb.zfill(4):           # right padded with '0'\n+                    res += c + '.'              # 2001 4860 b002 0023\n+            ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n+            prefix = '.origin6'\n+\n+        asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n+                   reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n+                   'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n+        return asn\n+    except Exception:\n+        sys.stderr.write('ERR: Could not resolve ASN for \"' + ip + '\"\\n')\n+        return None\n+\n # Based on Greg Maxwell's seed_filter.py\n-def filterbyasn(ips, max_per_asn, max_total):\n+def filterbyasn(ips, max_per_asn, max_per_net):\n     # Sift out ips by type\n     ips_ipv46 = [ip for ip in ips if ip['net'] in ['ipv4', 'ipv6']]\n     ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n \n-    # Filter IPv46 by ASN\n+    # Filter IPv46 by ASN, and limit to max_per_net per network\n     result = []\n-    asn_count = {}\n+    net_count = collections.defaultdict(int)\n+    asn_count = collections.defaultdict(int)\n     for ip in ips_ipv46:\n-        if len(result) == max_total:\n-            break\n-        try:\n-            if ip['net'] == 'ipv4':\n-                ipaddr = ip['ip']\n-                prefix = '.origin'\n-            else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n-                res = str()                         # 2001:4860:b002:23::68\n-                for nb in ip['ip'].split(':')[:4]:  # pick the first 4 nibbles\n-                    for c in nb.zfill(4):           # right padded with '0'\n-                        res += c + '.'              # 2001 4860 b002 0023\n-                ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n-                prefix = '.origin6'\n-\n-            asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n-                       reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n-                       'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n-            if asn not in asn_count:\n-                asn_count[asn] = 0\n-            if asn_count[asn] == max_per_asn:\n-                continue\n-            asn_count[asn] += 1\n-            result.append(ip)\n-        except:\n-            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n-\n-    # Add back Onions\n-    result.extend(ips_onion)\n+        if net_count[ip['net']] == max_per_net:\n+            continue\n+        asn = lookup_asn(ip['net'], ip['ip'])\n+        if asn is None or asn_count[asn] == max_per_asn:\n+            continue\n+        asn_count[asn] += 1\n+        net_count[ip['net']] += 1\n+        result.append(ip)\n+\n+    # Add back Onions (up to max_per_net)\n+    result.extend(ips_onion[0:max_per_net])\n     return result\n \n+def ip_stats(ips):\n+    hist = collections.defaultdict(int)\n+    for ip in ips:\n+        if ip is not None:\n+            hist[ip['net']] += 1\n+\n+    return '%6d %6d %6d' % (hist['ipv4'], hist['ipv6'], hist['onion'])\n+\n def main():\n     lines = sys.stdin.readlines()\n     ips = [parseline(line) for line in lines]\n \n-    # Skip entries with valid address.\n+    print('\\x1b[7m  IPv4   IPv6  Onion Pass                                               \\x1b[0m', file=sys.stderr)\n+    print('%s Initial' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip entries with invalid address.\n     ips = [ip for ip in ips if ip is not None]\n+    print('%s Skip entries with invalid address' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip duplicates (in case multiple seeds files were concatenated)\n+    ips = dedup(ips)\n+    print('%s After removing duplicates' % (ip_stats(ips)), file=sys.stderr)\n     # Skip entries from suspicious hosts.\n     ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n+    print('%s Skip entries from suspicious hosts' % (ip_stats(ips)), file=sys.stderr)\n     # Enforce minimal number of blocks.\n     ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n+    print('%s Enforce minimal number of blocks' % (ip_stats(ips)), file=sys.stderr)\n     # Require service bit 1.\n     ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n-    # Require at least 50% 30-day uptime.\n-    ips = [ip for ip in ips if ip['uptime'] > 50]\n+    print('%s Require service bit 1' % (ip_stats(ips)), file=sys.stderr)\n+    # Require at least 50% 30-day uptime for clearnet, 10% for onion.\n+    req_uptime = {\n+        'ipv4': 50,\n+        'ipv6': 50,\n+        'onion': 10,\n+    }\n+    ips = [ip for ip in ips if ip['uptime'] > req_uptime[ip['net']]]\n+    print('%s Require minimum uptime' % (ip_stats(ips)), file=sys.stderr)\n     # Require a known and recent user agent.\n     ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n+    print('%s Require a known and recent user agent' % (ip_stats(ips)), file=sys.stderr)\n     # Sort by availability (and use last success as tie breaker)\n     ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n     # Filter out hosts with multiple bitcoin ports, these are likely abusive\n     ips = filtermultiport(ips)\n+    print('%s Filter out hosts with multiple bitcoin ports' % (ip_stats(ips)), file=sys.stderr)\n     # Look up ASNs and limit results, both per ASN and globally.\n     ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n+    print('%s Look up ASNs and limit results per ASN and per net' % (ip_stats(ips)), file=sys.stderr)\n     # Sort the results by IP address (for deterministic output).\n     ips.sort(key=lambda x: (x['net'], x['sortkey']))\n-\n     for ip in ips:\n         if ip['net'] == 'ipv6':\n             print('[%s]:%i' % (ip['ip'], ip['port']))"
      },
      {
        "sha": "58f6ad10b5a8aaefe4a357cd21f1401c88a23600",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 710,
        "deletions": 1231,
        "changes": 1941,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,1268 +1,747 @@\n-2.132.100.47:8333\n-5.1.97.4:8333\n-5.39.174.116:8333\n-5.45.79.14:8333\n-5.53.16.133:8333\n-5.101.139.166:8333\n-5.178.78.139:8333\n-5.189.176.17:8333\n-5.228.64.71:8333\n-8.18.38.122:8333\n-13.115.96.63:8333\n-14.2.124.84:8333\n-14.3.170.1:8333\n-23.94.28.250:8333\n-23.111.172.106:8333\n-23.125.224.84:8333\n-23.152.0.108:8333\n-23.175.0.222:8333\n-23.229.16.234:8333\n-23.233.6.70:8333\n-24.142.34.253:8333\n-24.171.203.87:8333\n-24.188.200.170:8333\n-24.216.65.41:8333\n-24.227.69.146:8333\n-27.33.11.193:8333\n-31.24.11.139:8333\n-31.28.10.13:8333\n-31.165.17.164:8333\n-31.179.204.142:8333\n-31.186.96.186:8333\n-31.210.172.21:8333\n-31.211.102.129:62734\n-34.217.122.178:8333\n-35.230.64.29:8333\n-35.231.225.42:8333\n-36.3.172.13:8333\n-36.251.163.42:8333\n-37.136.97.246:8333\n-37.153.1.150:8333\n-37.153.1.157:8333\n-37.228.92.110:8333\n-37.252.14.22:8333\n-38.27.101.224:8333\n+2.39.173.126:8333\n+2.57.38.133:8333\n+2.92.39.39:15426\n+2.230.146.163:8333\n+5.2.74.175:8333\n+5.8.18.29:8333\n+5.39.222.39:8333\n+5.103.137.146:9333\n+5.128.87.126:8333\n+5.149.250.76:8333\n+5.182.39.200:8333\n+5.187.55.242:8333\n+5.188.62.24:8333\n+5.188.62.33:8333\n+5.188.187.130:8333\n+5.189.153.179:8333\n+5.198.20.227:8333\n+5.199.133.193:8333\n+5.254.82.130:8333\n+13.237.147.15:8333\n+18.27.79.17:8333\n+20.184.15.116:8433\n+23.17.160.159:8333\n+23.175.0.212:8333\n+23.245.24.154:8333\n+24.76.122.108:8333\n+24.96.73.156:8333\n+24.96.125.57:8333\n+24.155.196.27:8333\n+24.203.88.167:8333\n+24.233.245.188:8333\n+24.246.31.205:8333\n+31.6.98.94:8333\n+31.14.201.156:8333\n+31.25.241.224:8335\n+31.43.140.190:8333\n+31.134.121.223:8333\n+31.173.48.61:8333\n+34.203.169.172:8333\n+35.178.31.4:8333\n+35.185.172.62:8333\n+35.206.171.89:8333\n+35.208.87.203:8333\n+37.61.219.34:8333\n+37.143.210.19:8333\n+37.143.211.83:8333\n+37.235.128.11:8333\n+37.252.190.88:8333\n 38.102.134.85:8333\n-38.104.225.30:8333\n-43.229.76.38:8333\n-45.40.132.57:8333\n-45.45.34.122:8333\n-45.48.177.222:8333\n-46.19.34.236:8333\n-46.28.66.196:8333\n-46.28.204.21:8333\n-46.28.205.161:8333\n-46.30.42.144:8333\n-46.138.139.195:8333\n-46.165.245.221:8333\n-46.166.129.155:8333\n-46.166.160.52:8333\n-46.166.160.56:8333\n-46.188.44.82:8333\n-46.188.126.74:8333\n-46.229.165.145:8333\n-46.229.168.201:8333\n+39.109.0.150:8333\n+42.200.72.205:8333\n+43.229.132.102:8333\n+45.36.184.6:8333\n+45.58.49.35:8333\n+45.76.18.47:8333\n+45.115.239.108:8333\n+46.23.87.218:8333\n+46.28.132.34:8333\n+46.32.50.98:8333\n+46.36.97.10:8333\n+46.38.237.108:8333\n+46.39.129.82:8333\n+46.160.195.121:8333\n+46.166.162.45:20001\n+46.188.30.118:8333\n 46.229.238.187:8333\n-47.54.204.246:8333\n-47.74.128.138:8333\n-47.94.224.99:8333\n-47.97.96.198:8333\n-47.187.36.48:8333\n-47.218.16.81:8333\n-47.223.66.222:8333\n-47.254.128.15:8333\n-50.31.170.53:8333\n-50.35.67.146:8333\n-50.76.96.230:8333\n-50.82.177.142:8333\n-51.15.3.46:8333\n-51.175.141.243:8333\n-52.144.47.153:8333\n-52.232.38.122:8333\n-54.38.192.164:8333\n-54.85.65.6:8333\n-54.91.227.188:8333\n-58.180.36.14:8333\n-59.106.208.68:8333\n-60.70.73.26:8333\n-61.160.234.57:8333\n-62.43.198.56:8333\n-62.45.0.15:8333\n-62.107.200.30:8333\n-62.133.194.2:8333\n-62.138.3.224:8333\n-62.146.70.216:8333\n-64.78.163.10:8333\n-64.120.110.2:8333\n-64.131.160.31:8333\n-66.18.172.16:8333\n-66.85.74.242:8333\n-66.110.132.10:8333\n-66.114.33.90:8333\n-66.180.64.95:8333\n-66.222.164.188:8333\n-67.11.139.67:8333\n-67.43.191.118:8333\n-67.61.137.157:8333\n-67.193.184.12:8333\n+46.254.217.169:8333\n+47.52.114.198:8885\n+47.88.84.126:8333\n+47.108.29.152:8333\n+47.108.30.165:8333\n+47.222.103.234:8333\n+49.245.50.224:8333\n+50.53.250.162:8333\n+50.225.198.67:6000\n+51.154.60.34:8333\n+54.242.17.7:8333\n+58.146.222.198:8333\n+58.158.0.86:8333\n+59.149.205.197:8333\n+60.251.129.61:8336\n+61.155.5.4:8333\n+62.45.4.139:8333\n+62.97.244.242:8333\n+62.109.18.23:8333\n+62.133.194.156:8333\n+62.138.0.217:8333\n+62.152.58.16:9421\n+63.143.34.98:8333\n+63.211.111.122:8333\n+63.224.249.240:8333\n+64.182.119.36:8333\n+64.229.105.111:8333\n+65.27.104.112:8333\n+65.183.76.73:8333\n+66.151.242.154:8335\n+66.206.13.70:8333\n+66.240.237.155:8333\n+66.240.237.172:8333\n+67.205.140.145:8333\n 67.210.228.203:8333\n-67.215.12.43:8333\n-67.253.72.119:8333\n-68.201.228.6:8333\n+67.221.193.55:8333\n+67.222.131.151:8333\n+68.110.90.111:8333\n+68.142.33.36:8333\n+68.199.157.183:8333\n 68.202.128.19:8333\n-69.30.218.226:8333\n-69.61.35.175:8333\n-69.61.171.22:8333\n-69.125.194.25:8333\n-70.35.98.12:8333\n-70.103.171.66:8333\n-70.172.252.29:8333\n-71.34.96.135:8333\n-71.68.48.149:8333\n-71.93.161.162:8333\n-71.162.192.5:8333\n-72.11.174.71:8333\n-72.50.240.124:8333\n-72.70.32.215:8333\n-72.211.196.232:8333\n-72.234.112.22:8333\n-72.253.237.0:8333\n-73.241.192.40:8333\n-74.15.230.112:8333\n-74.83.79.52:8333\n-74.126.14.27:8333\n-75.76.137.164:8333\n-76.64.166.230:8333\n-76.191.79.98:8333\n-77.37.170.106:8333\n-77.70.107.83:8333\n-77.95.226.194:8333\n-77.111.172.134:8333\n+68.206.21.144:8333\n+69.30.215.42:8333\n+69.55.234.74:8333\n+69.59.18.22:8333\n+69.145.122.160:8333\n+69.175.49.230:8333\n+70.64.48.41:8333\n+71.33.232.126:8333\n+71.73.18.32:8333\n+71.146.114.111:8333\n+72.53.134.182:8333\n+73.126.97.99:8333\n+74.83.126.150:8333\n+74.84.128.158:9333\n+74.98.242.97:8333\n+74.118.137.119:8333\n+74.220.255.190:8333\n+75.45.51.41:8333\n+75.158.39.231:8333\n+76.11.17.187:8333\n+76.84.79.211:8333\n+76.167.179.75:8333\n+77.53.158.137:8333\n+77.119.229.106:8333\n+77.120.122.22:8433\n+77.120.122.114:8433\n 77.163.136.136:8333\n-77.203.13.57:8333\n-77.239.37.12:8333\n-77.240.168.19:8333\n-77.244.219.164:8333\n-78.31.67.156:8333\n-78.34.2.126:8333\n-78.108.187.246:8333\n-78.109.163.153:8333\n-79.28.205.145:8333\n-79.66.70.89:8333\n-79.132.230.144:8333\n-80.209.224.79:8333\n-80.211.252.104:8333\n+77.220.140.74:8333\n+77.247.178.130:8333\n+78.128.62.52:8333\n+78.128.79.22:8333\n+78.141.123.99:8333\n+78.143.214.223:8333\n+78.159.99.85:8333\n+79.77.33.131:8333\n+79.120.70.47:8333\n+79.142.129.218:8333\n+79.175.125.210:8333\n+80.47.156.43:8333\n+80.89.203.172:8001\n+80.93.213.246:8333\n+80.111.142.213:8333\n+80.147.82.165:8333\n+80.211.191.11:8333\n+80.211.245.151:8333\n 80.229.28.60:8333\n+80.229.168.1:8333\n+80.253.94.252:8333\n+81.4.102.69:8333\n 81.7.13.84:8333\n-81.7.16.182:8333\n-81.18.224.62:8333\n-81.171.27.138:8333\n-81.187.80.221:8333\n-81.217.112.225:8333\n-81.245.141.6:8333\n-82.43.171.91:8333\n-82.102.10.251:8333\n-82.118.234.178:8333\n-82.144.197.93:8333\n-82.161.109.190:8333\n-82.193.102.228:8333\n-82.193.109.199:8333\n+81.10.205.21:8333\n+81.117.225.245:8333\n+81.177.157.81:39993\n+81.235.185.150:8333\n+82.29.58.109:8333\n+82.117.166.77:8333\n+82.118.20.37:8333\n+82.146.50.143:8333\n+82.146.153.130:8333\n+82.149.97.25:17567\n+82.169.130.61:8333\n+82.181.179.230:8333\n+82.181.218.229:8333\n+82.194.153.233:8333\n+82.195.237.253:8333\n+82.197.218.97:8333\n 82.199.102.10:8333\n-82.212.130.94:8333\n-82.213.208.16:8333\n-82.217.67.17:8333\n-82.221.108.27:8333\n-82.221.133.174:8333\n-83.55.130.30:8333\n-83.77.39.46:8333\n-83.137.41.10:8333\n-83.149.70.48:8333\n-83.151.233.218:8333\n-83.162.43.154:8333\n-83.164.131.243:8333\n-83.221.11.7:8333\n-83.243.128.13:8333\n-84.16.38.218:8333\n+82.199.102.133:8333\n+82.202.197.224:8333\n+82.217.245.7:8333\n+82.221.111.136:8333\n+83.89.27.50:8333\n+83.89.250.69:8333\n+83.167.27.4:8333\n+83.208.254.182:8333\n+83.217.8.31:44420\n+83.221.211.116:8335\n+83.243.59.41:8333\n+83.251.241.0:8333\n 84.38.3.249:8333\n-84.75.26.172:8333\n-84.200.106.128:8333\n-84.212.250.219:8333\n-84.215.134.195:8333\n-84.245.27.209:8333\n-84.254.40.152:8333\n-84.255.193.28:8333\n-85.10.112.194:8333\n-85.93.2.76:54382\n-85.94.172.33:8333\n-85.129.0.126:8333\n-85.145.168.159:8333\n-85.170.238.26:8333\n-85.195.232.197:8333\n-85.214.68.122:8333\n-85.214.235.137:8333\n-85.218.48.146:8333\n-85.220.165.205:8333\n-85.229.134.98:8333\n-85.241.49.242:8333\n-86.25.32.77:8333\n-86.41.89.170:8333\n-86.50.143.43:8333\n-86.61.67.183:8333\n-86.137.26.210:8333\n-86.177.194.215:8333\n-87.157.177.58:8333\n-87.224.163.66:8333\n-87.236.196.169:8333\n+84.40.94.170:8333\n+84.192.16.234:8333\n+84.209.9.23:8333\n+84.234.96.115:8333\n+84.248.14.210:8333\n+85.119.83.25:8333\n+85.144.119.222:8333\n+85.145.238.93:8333\n+85.184.138.108:8333\n+85.190.0.5:8333\n+85.202.11.119:8333\n+85.204.96.207:8333\n+85.208.69.13:8333\n+85.214.90.161:8333\n+85.240.233.220:8333\n+85.241.106.203:8333\n+86.15.38.61:8333\n+86.76.7.132:8333\n+87.79.68.86:8333\n+87.79.94.221:8333\n+87.118.116.237:8333\n+87.120.8.5:20008\n+87.222.22.255:8333\n+87.233.181.146:8333\n 87.246.46.132:8333\n-88.99.64.76:8333\n-89.1.100.49:8333\n-89.10.155.88:8333\n-89.27.59.246:8333\n-89.163.132.73:8333\n-89.179.240.131:8333\n-89.205.81.5:8333\n+87.249.207.89:8333\n+88.86.116.140:8333\n+88.86.116.142:8333\n+88.88.13.249:8333\n+88.147.244.250:8333\n+88.150.230.95:8333\n+88.202.202.221:8333\n+88.208.3.195:8333\n+88.212.44.33:8333\n+89.25.80.42:8333\n+89.28.117.31:8333\n+89.106.199.38:8333\n+89.142.75.60:8333\n+89.190.19.162:8333\n+89.212.9.96:8333\n 89.212.75.6:8333\n-89.217.130.147:8333\n-89.230.96.42:8333\n-89.248.172.10:8333\n-90.46.57.17:8333\n-90.110.11.101:8333\n-90.240.37.163:8333\n-91.65.4.21:8333\n-91.65.192.159:8333\n-91.83.237.185:8333\n-91.110.125.26:8333\n-91.121.160.59:8333\n-91.135.0.187:8333\n-91.143.109.68:8333\n-91.195.42.134:8333\n-91.221.70.137:8333\n-92.35.132.5:8333\n-92.42.37.141:8333\n-92.54.16.144:8333\n-92.62.34.184:8333\n-92.186.231.240:8333\n-93.123.80.47:8333\n-93.170.13.15:8333\n-93.171.201.68:8333\n-93.179.197.152:8333\n-93.190.206.151:8333\n-93.191.131.177:8333\n-93.208.132.214:8333\n-94.104.97.247:8333\n-94.156.35.8:8333\n-94.199.173.113:8333\n+89.248.250.12:8333\n+90.94.83.26:8333\n+90.182.165.18:8333\n+91.185.198.234:8333\n+91.193.237.116:8333\n+91.204.99.178:8333\n+91.204.149.5:8333\n+91.210.24.30:8333\n+91.211.88.33:8333\n+91.216.149.28:8333\n+91.222.128.59:8333\n+92.18.180.225:8333\n+92.53.89.123:8333\n+92.240.69.195:8333\n+92.249.143.44:8333\n+92.255.176.109:8333\n+93.57.81.162:8333\n+93.90.193.195:8330\n+93.90.207.46:8333\n+93.115.26.186:20004\n+93.115.240.26:8333\n+93.123.180.164:8333\n+93.175.204.121:8333\n+93.180.178.213:8333\n+94.19.7.55:8333\n+94.52.112.227:8333\n+94.53.2.181:8333\n+94.72.143.26:8333\n+94.103.120.173:8333\n+94.237.64.138:8333\n+94.237.80.207:8333\n+94.242.255.31:8333\n+95.24.48.84:15426\n 95.42.2.113:8333\n-95.94.225.61:8333\n-95.154.237.24:8333\n-95.158.39.64:8333\n-95.163.71.126:8333\n-95.163.106.139:8333\n-95.208.163.214:8333\n-95.213.143.13:8333\n-95.226.77.108:8333\n-96.3.74.66:8333\n-96.23.128.65:8333\n-96.27.8.242:8333\n-96.27.129.94:8333\n-96.126.100.148:8333\n-97.74.6.105:8333\n-97.116.160.102:8333\n-98.7.64.249:8333\n-98.10.106.49:8333\n-98.25.197.125:8333\n-98.29.7.103:8333\n-98.127.130.17:8333\n-99.224.192.201:8333\n-101.190.172.209:8333\n-103.35.151.76:8334\n-103.74.193.127:8333\n-103.80.133.191:8333\n-103.80.168.57:8333\n-103.99.168.102:8333\n-103.194.42.10:8333\n-104.168.101.207:8333\n-104.200.67.162:8333\n-104.207.132.42:8333\n-104.237.4.202:8333\n-107.155.72.108:8333\n-107.183.37.162:8333\n-108.175.3.18:8333\n-108.220.192.57:8333\n-109.61.102.5:8333\n-109.206.177.21:8333\n-109.237.111.156:8333\n-115.68.47.82:8333\n-116.88.75.110:8333\n-118.67.201.40:8333\n-119.28.4.230:8333\n-119.28.130.210:8333\n-120.31.143.167:8333\n-120.220.14.92:8333\n-120.220.14.93:8333\n-124.18.133.220:8333\n-126.207.39.22:8333\n-128.77.37.214:8333\n-128.125.100.2:8333\n-129.158.74.237:8333\n-129.213.32.176:8333\n-131.113.41.119:8333\n-131.113.41.125:8333\n+95.69.249.63:8333\n+95.79.35.133:8333\n+95.87.226.56:8333\n+95.90.3.210:8333\n+95.110.234.93:8333\n+95.156.252.34:8333\n+95.211.189.3:8333\n+95.217.9.207:8333\n+96.9.80.109:8333\n+96.245.218.247:8333\n+97.104.206.3:8333\n+98.29.195.204:8333\n+99.231.196.126:8333\n+101.100.174.24:8333\n+101.100.174.240:8333\n+103.14.244.190:8333\n+103.37.205.47:8333\n+103.60.109.184:20008\n+103.84.84.250:8335\n+103.85.190.218:20000\n+103.99.168.100:8333\n+103.99.168.130:8333\n+103.214.146.86:8333\n+104.171.242.155:8333\n+104.199.184.15:8333\n+104.244.223.151:8333\n+105.29.76.194:8333\n+107.150.45.18:8333\n+107.180.77.21:8333\n+108.58.252.82:8333\n+108.183.77.12:8333\n+109.72.83.127:8333\n+109.99.63.159:8333\n+109.109.36.19:8333\n+109.110.81.90:8333\n+109.173.112.224:8333\n+109.202.107.125:8333\n+109.205.109.56:8333\n+109.236.84.141:8333\n+109.238.81.82:8333\n+109.248.206.13:8333\n+111.40.4.103:8333\n+111.90.140.217:8333\n+111.90.158.212:8333\n+112.213.103.98:8333\n+113.52.135.125:8333\n+115.47.141.250:8885\n+115.70.110.4:8333\n+116.87.15.244:8333\n+119.17.151.61:8333\n+119.171.134.87:8333\n+121.18.238.39:8333\n+121.78.223.186:8333\n+121.98.205.102:8333\n+122.112.148.153:8339\n+122.116.42.140:8333\n+124.160.119.93:8333\n+125.236.215.133:8333\n+129.13.189.212:8333\n+129.97.243.18:8333\n+130.185.77.105:8333\n 131.114.10.233:8333\n-131.188.40.191:8333\n-131.188.42.36:8333\n-134.0.112.92:8333\n-134.3.26.190:8333\n-135.23.196.24:8333\n-135.84.207.4:8333\n-136.59.129.125:8333\n-136.61.239.7:8333\n-137.117.164.18:8333\n-139.130.41.82:8333\n-141.134.71.188:8333\n-141.213.6.57:8333\n-141.223.82.139:8333\n-142.0.130.49:8333\n-142.0.130.53:8333\n-144.118.141.232:8333\n-148.66.58.146:8333\n-150.95.130.17:8333\n-150.187.36.233:8333\n-150.249.76.102:8333\n-153.125.129.187:8333\n-153.125.224.107:8333\n-154.48.236.250:8887\n-154.66.207.126:8333\n-155.143.140.186:8333\n-157.131.142.164:8333\n-158.64.79.182:8333\n-158.85.93.163:8333\n-158.140.128.239:8333\n-158.174.131.171:8333\n-159.8.4.19:8333\n-159.217.144.68:8333\n-159.217.144.252:8333\n-159.253.47.202:8333\n-162.155.64.226:8333\n-162.222.100.118:8333\n-162.255.168.27:8333\n-162.255.168.30:8333\n-163.158.228.125:8333\n-165.227.96.38:8333\n-169.229.238.17:8333\n-171.25.165.145:8333\n-171.33.177.9:8333\n-172.72.228.93:8333\n-172.96.161.244:8333\n-172.102.228.150:8333\n-172.118.136.98:8333\n-173.46.65.8:8333\n-173.212.193.35:8333\n-173.239.33.85:8333\n-173.243.64.48:8333\n-174.115.129.37:8333\n-176.12.6.59:8333\n-176.107.184.29:8333\n-176.123.10.192:8333\n-176.126.167.10:8333\n-176.185.235.163:8333\n-176.223.130.254:8333\n-178.0.71.136:8333\n-178.12.32.39:8333\n-178.85.64.212:8333\n-178.124.162.209:8333\n-178.128.192.21:8333\n-178.151.133.56:8333\n-178.193.96.201:8333\n-178.248.200.126:8333\n-178.254.7.88:8333\n-180.233.106.171:8333\n-181.166.168.210:8333\n-183.66.227.70:12060\n-183.111.108.56:8333\n-184.70.33.190:8333\n-184.105.70.100:8333\n-184.105.70.101:8333\n-185.12.7.38:8333\n-185.21.216.134:8333\n-185.25.48.184:8333\n-185.25.48.217:8333\n+131.188.40.34:8333\n+132.249.239.163:8333\n+134.19.186.195:8333\n+134.249.187.97:8333\n+136.144.215.219:8333\n+137.226.34.46:8333\n+139.9.249.234:8333\n+141.101.8.36:8333\n+143.89.121.207:8333\n+143.176.224.104:8333\n+144.34.161.65:18333\n+147.253.70.208:8333\n+148.66.50.82:8335\n+153.92.127.216:8333\n+153.120.115.15:8333\n+154.52.98.2:8444\n+155.4.116.169:8333\n+156.19.19.90:8333\n+156.34.178.138:8333\n+157.13.61.66:8333\n+157.13.61.67:8333\n+158.181.226.33:8333\n+159.100.242.254:8333\n+159.100.248.234:8333\n+159.253.98.209:8333\n+160.16.0.30:8333\n+160.20.145.62:8333\n+162.62.18.226:8333\n+162.62.26.218:8333\n+162.209.88.174:8333\n+162.244.80.208:8333\n+163.158.202.112:8333\n+163.172.181.191:8333\n+166.62.100.55:8333\n+167.114.35.12:8333\n+168.62.167.209:8200\n+168.235.74.110:8333\n+168.235.90.188:8333\n+170.249.37.243:8333\n+172.99.120.113:8333\n+173.21.218.95:8333\n+173.51.177.2:8333\n+173.95.72.234:8333\n+173.208.128.10:8333\n+173.209.44.34:8333\n+173.231.57.194:8333\n+173.255.204.124:8333\n+174.65.135.60:8333\n+174.94.155.224:8333\n+174.115.120.186:8333\n+176.53.160.170:8333\n+176.85.188.213:8333\n+176.99.2.207:8333\n+176.121.14.157:8333\n+176.122.157.173:8333\n+176.126.85.34:8333\n+176.198.120.197:8334\n+178.61.141.198:8333\n+178.119.183.34:8333\n+178.234.29.184:8333\n+178.255.42.126:8333\n+179.48.251.41:8333\n+180.150.73.100:8333\n+181.47.220.242:8333\n+181.170.139.47:8333\n+183.110.220.210:30301\n+183.230.93.139:8333\n+184.95.58.164:8663\n+184.164.147.82:41333\n+185.15.92.18:20993\n 185.25.60.199:8333\n-185.28.76.179:8333\n-185.35.139.54:8333\n-185.44.78.208:8333\n-185.47.132.55:8333\n-185.51.128.27:8333\n-185.59.100.107:8333\n-185.67.175.75:8333\n-185.67.204.76:8333\n-185.67.204.80:8333\n-185.70.105.74:8339\n-185.85.3.140:8333\n-185.86.15.23:8333\n-185.86.15.25:8333\n+185.52.3.185:8333\n+185.61.138.4:8333\n+185.64.116.15:8333\n+185.83.110.53:8333\n+185.83.214.123:8333\n+185.95.219.53:8333\n+185.96.94.24:8333\n 185.102.71.6:8333\n-185.117.74.21:8333\n-185.121.173.223:8333\n-185.128.40.122:8333\n-185.145.131.218:8333\n-185.147.237.169:8333\n-185.162.128.83:8333\n-185.165.76.220:8333\n-185.172.165.130:8333\n-185.177.5.4:8333\n-185.183.131.75:8333\n-185.186.208.208:8333\n+185.138.35.183:8333\n+185.140.252.253:8333\n+185.143.145.113:8333\n+185.148.3.227:8333\n+185.157.160.220:8333\n+185.163.44.44:8333\n+185.176.221.32:8333\n+185.186.208.162:8333\n+185.198.58.47:8333\n+185.198.59.183:8333\n 185.215.224.22:8333\n-185.224.80.108:8333\n-185.225.16.4:8333\n-185.243.112.214:8333\n-185.244.193.18:8333\n-185.248.160.66:8333\n-186.19.136.144:8333\n-188.68.38.243:8333\n-188.68.240.89:8333\n-188.134.6.84:8333\n-188.134.77.121:8333\n-188.138.1.43:8333\n-188.217.9.168:8333\n-190.2.133.91:8333\n-190.184.198.34:8333\n-190.211.204.68:8333\n-192.139.35.143:8333\n-192.162.100.156:8333\n-192.162.101.250:8333\n-192.206.202.6:8333\n-192.207.12.244:8333\n-192.207.12.245:8333\n-192.228.101.157:8333\n-193.112.192.73:8333\n-193.170.166.12:8333\n-194.15.231.236:8333\n-194.165.16.33:8333\n-194.181.80.77:8333\n-194.186.160.253:8333\n-194.247.13.7:8333\n-194.247.13.32:8333\n-195.0.203.21:8333\n-195.38.168.114:8333\n-195.43.141.28:8333\n-195.95.225.248:8333\n-195.123.224.7:8333\n-195.154.235.79:8333\n-195.169.99.82:8333\n-195.201.0.81:8333\n-197.155.6.43:8333\n-198.44.231.160:6333\n-198.58.102.35:8333\n-198.137.202.175:8333\n-199.127.224.50:8333\n-199.182.129.26:8333\n-199.188.204.102:8333\n-199.188.204.155:8333\n-199.244.49.224:8333\n-199.249.230.37:15738\n-200.83.123.46:8333\n-200.109.67.71:8333\n-200.122.128.185:8333\n-202.153.199.182:8333\n-202.159.136.54:8333\n-202.168.16.232:8333\n-203.11.71.1:8333\n-203.162.80.219:8333\n-203.178.143.13:8333\n-204.15.11.4:8333\n-206.125.169.162:8333\n-206.174.55.164:8333\n-207.182.146.18:8333\n-208.93.66.198:8333\n-208.98.196.249:8333\n-208.107.224.202:8333\n-208.110.65.114:8333\n-208.118.235.190:8333\n-209.122.208.131:8333\n-209.126.110.198:8333\n-209.131.238.80:8333\n-212.56.108.81:8333\n-212.73.150.132:8333\n-212.77.224.145:8333\n-212.85.90.194:8333\n-212.92.101.30:8333\n-212.112.133.92:8333\n-212.227.132.167:8333\n-213.10.100.182:8333\n-213.57.240.69:8333\n-213.91.205.134:8333\n-213.125.67.108:8333\n-213.152.161.170:45893\n-213.155.3.216:8333\n-213.180.70.138:8333\n-213.185.226.225:8333\n-216.71.203.79:8333\n-216.194.164.211:8333\n-216.240.168.226:8333\n-217.20.130.72:8333\n-217.23.9.180:8333\n+185.232.28.254:8333\n+185.239.236.116:8333\n+185.251.161.54:8333\n+188.42.40.234:18333\n+188.65.212.138:8333\n+188.65.212.157:8333\n+188.68.45.143:8333\n+188.127.229.105:8333\n+188.131.177.130:8333\n+188.134.8.36:8333\n+188.134.88.5:8333\n+188.138.17.92:8333\n+188.150.157.11:8333\n+188.208.111.62:8333\n+188.231.177.149:8333\n+190.2.145.177:8333\n+190.104.249.44:8333\n+191.209.21.188:8333\n+192.3.11.20:8333\n+192.3.11.24:8333\n+192.34.56.59:8333\n+192.65.170.15:8333\n+192.65.170.50:8333\n+192.146.137.18:8333\n+192.166.47.32:8333\n+192.169.94.29:8333\n+192.227.80.83:8333\n+192.254.65.126:8333\n+193.10.203.23:8334\n+193.29.57.4:8333\n+193.58.196.212:8333\n+193.59.41.11:8333\n+193.84.116.22:8333\n+193.108.131.43:8333\n+193.148.71.10:8333\n+193.169.244.190:8333\n+193.194.163.35:8333\n+193.194.163.53:8333\n+194.5.159.197:8333\n+194.14.246.205:8333\n+194.135.92.96:8333\n+194.135.135.69:8333\n+194.158.92.150:8333\n+194.187.251.163:31239\n+195.56.63.5:8333\n+195.56.63.10:8333\n+195.67.139.54:8333\n+195.95.225.17:8333\n+195.135.194.8:8333\n+195.154.113.90:8333\n+195.206.20.114:8333\n+195.206.105.42:8333\n+195.209.249.164:8333\n+195.224.116.20:8333\n+198.1.231.6:8333\n+198.251.83.19:8333\n+199.48.83.58:8333\n+199.96.50.211:8333\n+199.188.204.25:8333\n+199.192.20.201:8333\n+200.76.194.7:8333\n+200.87.116.213:8333\n+202.28.194.82:8333\n+202.55.87.45:8333\n+203.130.48.117:8885\n+203.132.95.10:8333\n+204.14.245.180:8333\n+204.152.203.98:8333\n+205.209.162.98:8333\n+206.221.178.149:8333\n+208.110.99.105:8333\n+209.133.220.74:8333\n+209.151.237.71:8333\n+211.149.170.31:8333\n+212.51.132.226:8333\n+212.241.70.213:8333\n+213.21.15.22:8333\n+213.136.83.8:8333\n+213.227.152.108:8333\n+213.254.23.116:8333\n+216.108.236.180:8333\n+216.194.165.98:8333\n+216.236.164.82:8333\n+217.16.185.165:8333\n+217.21.24.146:8333\n+217.26.32.10:8333\n 217.64.47.138:8333\n-217.169.14.90:8333\n-218.245.1.205:8333\n-220.130.128.58:8333\n-220.133.39.61:8333\n-222.239.193.116:8333\n-222.239.193.120:8333\n-[2001:0:4137:9e76:1cbd:3bc0:ade7:bf44]:8333\n-[2001:0:4137:9e76:2046:150d:8d65:de4]:8333\n-[2001:0:4137:9e76:2c99:3f36:d003:f47a]:8333\n-[2001:0:4137:9e76:34b6:3910:a3dc:7bfa]:8333\n-[2001:0:4137:9e76:3cec:2b5:525b:fb3c]:8333\n-[2001:0:53aa:64c:c5:235d:a10d:e0]:8333\n-[2001:0:53aa:64c:cbc:5ace:a625:39d1]:8333\n-[2001:0:5ef5:79fb:38e5:36c1:d0ee:5d98]:8333\n-[2001:0:5ef5:79fb:3c5c:c6c:39cf:69d3]:8333\n-[2001:0:5ef5:79fb:896:ef4:ba63:8d15]:8333\n-[2001:0:9d38:6ab8:106a:2112:e06b:b881]:8333\n-[2001:0:9d38:6ab8:1c99:1655:e782:9340]:8333\n-[2001:0:9d38:6ab8:20cd:1cd9:54e6:5a6e]:8333\n-[2001:0:9d38:6ab8:245e:2b3:a300:317e]:8333\n-[2001:0:9d38:6ab8:2814:215c:88e3:4ee0]:8333\n-[2001:0:9d38:6ab8:30ac:3a51:b2da:712d]:8333\n-[2001:0:9d38:6ab8:34a6:eeb:c3ed:5be7]:8333\n-[2001:0:9d38:6ab8:c2f:16d5:525a:107e]:8333\n-[2001:0:9d38:6ab8:cb1:2557:431c:f3e1]:8333\n-[2001:0:9d38:6abd:1056:290d:a671:3d90]:8333\n-[2001:0:9d38:6abd:1865:14fe:d0a7:1f72]:8333\n-[2001:0:9d38:6abd:2c3c:3006:a486:93c3]:8333\n-[2001:0:9d38:6abd:2c73:3313:f21a:96da]:8333\n-[2001:0:9d38:6abd:3050:fbff:a250:3386]:8333\n-[2001:0:9d38:6abd:3828:494:fdaa:56cd]:8333\n-[2001:0:9d38:6abd:454:187d:3e75:b00b]:8333\n-[2001:0:9d38:78cf:c2c:1dcc:fa42:41a3]:8333\n-[2001:0:9d38:90d7:1c4a:20d4:4daa:eb5a]:8333\n-[2001:0:9d38:90d7:1ca7:1612:9a18:31e5]:8333\n-[2001:0:9d38:90d7:24c8:3a0a:a68d:f799]:8333\n-[2001:0:9d38:90d7:2837:324e:d0cb:9f45]:22475\n-[2001:0:9d38:90d7:28c1:361e:a69c:b099]:8333\n-[2001:0:9d38:90d7:30fe:1c89:d0b4:4d18]:8333\n-[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333\n-[2001:0:9d38:90d7:34a8:fb1:88e3:fb19]:8333\n-[2001:0:9d38:90d7:3c19:3d23:d0b4:f831]:18652\n-[2001:0:9d38:90d7:3c45:2342:d0cb:d6ca]:8333\n-[2001:0:9d38:90d7:3c5f:3105:d0b4:60b6]:8333\n-[2001:0:9d38:90d7:8a1:2fb:d0cb:1e8f]:8333\n-[2001:0:9d38:90d7:a3:36e0:e020:53fa]:8333\n-[2001:0:9d38:90d7:eb:3b30:d0a4:aa5]:8333\n-[2001:0:9d38:953c:104e:8af:b3aa:f300]:8333\n-[2001:0:9d38:953c:1434:71f:b850:bab1]:8333\n-[2001:0:9d38:953c:144a:36e8:519a:bb69]:8333\n-[2001:0:9d38:953c:20fc:26ef:ed26:c737]:8333\n-[2001:0:9d38:953c:454:120:88e8:2fb]:8333\n-[2001:0:9d38:953c:801:1620:bc22:95bc]:8333\n-[2001:0:9d38:953c:8a0:1fdb:ab00:bc2]:8333\n-[2001:0:9d38:953c:cf6:3d48:4386:4937]:8333\n-[2001:13d8:1c01:1000::8]:8333\n-[2001:1620:923:0:75be:ed92:1a01:641]:8333\n-[2001:1680:101:8c::1]:8333\n-[2001:1970:5ae2:2b00:30bd:7910:c84:7a8f]:8333\n-[2001:1970:5d56:aa01:1e75:8ff:fead:da48]:8333\n-[2001:19f0:300:1045:225:90ff:fec9:29b3]:8333\n-[2001:19f0:5:1f93:5400:1ff:fe7a:c65a]:8333\n-[2001:19f0:6c01:4bd:5400:1ff:fe76:4db6]:8333\n-[2001:19f0:ac01:2fb:5400:ff:fe5b:c3ff]:8333\n-[2001:1a48:7:af1a:75f8:2c47:3285:d50e]:8333\n-[2001:1af8:4010:a094:3333::8c38]:8333\n-[2001:1af8:4070:a016:3333::5afb]:8333\n-[2001:1af8:4700:a071:4444::e26e]:8333\n-[2001:200:0:8801:5054:ff:fef2:1d0]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:41d0:1000:1f98::]:8333\n-[2001:41d0:1004:18c7::]:8333\n-[2001:41d0:1004:19dc::]:18555\n-[2001:41d0:1004:1f7c::]:8333\n-[2001:41d0:1008:2bed::]:8333\n-[2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:5395::1]:8333\n-[2001:41d0:1:85d3::1]:8333\n-[2001:41d0:1:8649::1]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:a5b8::1]:8333\n-[2001:41d0:1:ab6b::1]:8333\n-[2001:41d0:1:d227::]:8333\n-[2001:41d0:1:f897::1]:8333\n-[2001:41d0:1:f932::1]:8333\n-[2001:41d0:2:34b7::1]:8333\n-[2001:41d0:2:4975::]:8333\n-[2001:41d0:2:5c22::]:8333\n-[2001:41d0:2:84d4::1]:8333\n-[2001:41d0:2:ab38::]:8333\n-[2001:41d0:2:c33c::]:8333\n-[2001:41d0:303:193b::]:8333\n-[2001:41d0:303:2505::1a]:8333\n-[2001:41d0:303:41db::]:58333\n-[2001:41d0:303:4c68::]:8333\n-[2001:41d0:303:508::]:8333\n-[2001:41d0:303:6767::]:8333\n-[2001:41d0:303:68cd::]:8333\n-[2001:41d0:602:17a4::]:8333\n-[2001:41d0:602:1842::]:8333\n-[2001:41d0:602:3b7::]:8333\n-[2001:41d0:602:898::]:8333\n-[2001:41d0:602:b1a::]:8333\n-[2001:41d0:800:135::]:8333\n-[2001:41d0:800:3d3::]:8333\n-[2001:41d0:8:101d::1]:8333\n-[2001:41d0:8:1b29::]:8333\n-[2001:41d0:8:3f74::1]:8333\n-[2001:41d0:8:43a0::]:8333\n-[2001:41d0:8:bb32::1]:8333\n-[2001:41d0:8:bed3::]:8333\n-[2001:41d0:8:c67c::]:8333\n-[2001:41d0:8:ca2d::]:8333\n-[2001:41d0:8:d444::1]:8333\n-[2001:41d0:8:ddb::1]:8333\n-[2001:41d0:8:ea86::1]:8333\n-[2001:41d0:a:1220::1]:8333\n-[2001:41d0:a:27ed::1]:8333\n-[2001:41d0:a:296c::]:8139\n-[2001:41d0:a:2b18::1]:8333\n-[2001:41d0:a:405c::]:8333\n-[2001:41d0:a:42df::]:8312\n-[2001:41d0:a:4c49::aca:7929]:8333\n-[2001:41d0:a:6927::1]:8333\n-[2001:41d0:a:69a2::1]:8333\n-[2001:41d0:a:6a87::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:6c7d::1]:8333\n-[2001:41d0:a:f243::1]:8333\n-[2001:41d0:a:f9cd::1]:8333\n-[2001:41d0:d:dc9::]:8333\n-[2001:41d0:e:1146::1]:8333\n-[2001:41d0:e:126::1]:8333\n-[2001:41d0:e:12aa::1]:8333\n-[2001:41d0:e:1388::1]:8333\n-[2001:41d0:e:ec5::1]:8333\n-[2001:41f0:0:4:62:6974:636f:696e]:8333\n-[2001:470:18:be4::2]:8333\n-[2001:470:1c62:b170:bbff:53f1:edbf:99df]:42434\n-[2001:470:1f06:15b4::2]:8333\n-[2001:470:1f06:cea::2]:8333\n-[2001:470:1f07:803:20c:29ff:fe2d:5879]:8333\n-[2001:470:1f08:3cc::2]:8333\n-[2001:470:1f0a:18dd::2]:8333\n-[2001:470:1f15:11f8::10]:8333\n-[2001:470:1f15:cf7::14]:8333\n-[2001:470:1f17:b5::10]:8333\n-[2001:470:1f1a:172::2]:8333\n-[2001:470:1f1b:5a6:216:3eff:fe24:1162]:8333\n-[2001:470:28:365::7]:8333\n-[2001:470:41:6::2]:8333\n-[2001:470:6c80:101::1]:8333\n-[2001:470:6c80:3::1]:8333\n-[2001:470:7:63e::2]:8333\n-[2001:470:7:b74::2]:8333\n-[2001:470:8:bd3:4d25:ca57:a5b7:c6c4]:8333\n+217.64.133.220:8333\n+217.92.55.246:8333\n+217.172.244.9:8333\n+218.75.140.45:8333\n+219.75.122.47:8333\n+220.233.138.130:8333\n+221.130.29.230:18421\n+222.122.49.40:8333\n+222.186.169.1:8333\n+222.222.43.29:8333\n+223.16.30.175:8333\n+[2001:1bc0:cc::a001]:8333\n+[2001:1c02:2f18:d00:b62e:99ff:fe49:d492]:8333\n+[2001:250:200:7:d6a9:fcf4:e78d:2d82]:8333\n+[2001:41c9:1:424::231]:8333\n+[2001:41d0:1004:19b4::]:8333\n+[2001:44b8:4195:1801:5c73:5d67:d2a6:9910]:8333\n+[2001:470:88ff:2e::1]:8333\n [2001:470:a:c13::2]:8333\n-[2001:470:c144:cafe::23]:8333\n-[2001:470:c3c4:100:100::202]:8333\n-[2001:470:e696::1]:8333\n-[2001:48f8:1003::3ba]:8333\n-[2001:48f8:9015:1422:3dc0:fcf2:772f:57bc]:8333\n-[2001:4ba0:babe:832::]:8333\n-[2001:628:22a0:9::12]:8333\n+[2001:4800:7821:101:be76:4eff:fe04:9f50]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n+[2001:48d0:1:2163:0:ff:febe:5a80]:8333\n+[2001:4ba0:fffa:5d::93]:8333\n [2001:638:a000:4140::ffff:191]:8333\n-[2001:638:a000:4142::ff10:bed6]:8333\n+[2001:678:7dc:8::2]:8333\n+[2001:678:ec:1:250:56ff:fea7:47e9]:8333\n+[2001:67c:10ec:2a49:8000::1082]:8333\n+[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n [2001:67c:21ec:1000::a]:8333\n-[2001:8d8:90b:c000::21:2fc0]:8333\n-[2001:8d8:91c:9200::5c:d425]:8333\n-[2001:980:231b:1:8e89:a5ff:fee3:f8be]:8333\n-[2001:980:ade8:1:14fc:fd6d:608c:f669]:8333\n-[2001:981:bdbd:1:c506:7d38:4b47:da15]:8333\n-[2001:982:27f2:1:7271:bcff:fe94:d5bb]:8333\n-[2001:984:26b5::1]:8333\n-[2001:984:aec7:1:dcb7:29a:7eda:b9a2]:8333\n-[2001:985:79af:20::35]:8333\n-[2001:985:cb69:0:20c:29ff:feaf:dd5e]:8333\n-[2001:b011:300d:1870:9c87:d4ff:fe9c:2d0f]:8333\n-[2001:b030:2422::208d]:8333\n-[2001:bc8:31d7:100::1]:8333\n-[2001:bc8:323c:100::]:8333\n-[2001:bc8:33ac:19ff::26]:8333\n-[2001:bc8:399f:f000::1]:8333\n-[2001:bc8:3dc1:100::142]:8333\n-[2001:bc8:4400:2000::463b]:8333\n-[2001:bc8:4400:2400::1b35]:8333\n-[2001:bc8:4700:2000::5823]:8333\n-[2001:da8:8001:2303:1cf4:4466:3f1a:7edb]:8333\n-[2001:da8:d800:741:652d:52db:5713:4515]:8333\n-[2002:17e5:10ea::17e5:10ea]:8333\n-[2002:1f2b:8cbe::1f2b:8cbe]:8333\n-[2002:2f59:30f3::2f59:30f3]:8333\n-[2002:2f5a:562a::2f5a:562a]:8333\n-[2002:3e92:46d8::3e92:46d8]:8333\n-[2002:3f62:e6bb::3f62:e6bb]:8333\n-[2002:404e:a30a::404e:a30a]:8333\n-[2002:43db:9616::43db:9616]:8333\n-[2002:43e5:a1fa::43e5:a1fa]:8333\n-[2002:5266:afb::5266:afb]:8333\n-[2002:5dbd:91a9::5dbd:91a9]:8333\n-[2002:627e:333d::627e:333d]:8333\n-[2002:6b9b:486c::6b9b:486c]:8333\n-[2002:6dcb:7cba::6dcb:7cba]:8333\n-[2002:7cf8:e33e::7cf8:e33e]:8333\n-[2002:8e00:8231::8e00:8231]:8333\n-[2002:8e00:8233::8e00:8233]:8333\n-[2002:b07e:a70a::b07e:a70a]:8333\n-[2002:b2c9:e6fc:10:3d5c:e3ad:813:9c46]:8333\n-[2002:b4b2:3612::b4b2:3612]:8333\n-[2002:b610:1ca2::b610:1ca2]:8333\n+[2001:67c:26b4:12:7ae3:b5ff:fe04:6f9c]:8333\n+[2001:67c:2db8:6::45]:8333\n+[2001:700:300:1513:29c7:2430:190e:ab59]:8333\n+[2001:718:801:311:5054:ff:fe19:c483]:8333\n+[2001:818:e245:f800:4df:2bdf:ecf5:eb60]:8333\n+[2001:8f1:1404:3700:8e49:715a:2e09:b634]:9444\n+[2001:ba8:1f1:f069::2]:8333\n+[2001:bb8:4008:20:648c:5eff:fe74:ce4]:8333\n+[2001:da8:d800:821:a7d5:f5a7:530d:b71e]:8333\n+[2001:e42:103:100::30]:8333\n+[2001:e68:7400:2:6854:419e:221c:82f3]:8333\n [2002:b610:1ca3::b610:1ca3]:8333\n-[2002:b845:3322::1]:8333\n-[2002:b946:694a::b946:694a]:8339\n-[2002:b960:5e18::b960:5e18]:8333\n-[2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:c2a5:1021::c2a5:1021]:8333\n-[2002:c62c:e7a0::c62c:e7a0]:6333\n-[2002:ca99:c7b6::ca99:c7b6]:8333\n-[2002:d035:2734::d035:2734]:8333\n-[2002:d06e:5d1a::d06e:5d1a]:8333\n-[2002:d8da:b949::d8da:b949]:8333\n-[2400:2410:a960:4800:18be:d624:7018:cd2f]:8333\n-[2400:6180:0:d0::3e1:b001]:8333\n-[2400:6180:0:d0::5cd2:a001]:8333\n-[2400:6180:0:d1::4c6:8001]:8333\n-[2400:6180:100:d0::797:a001]:8333\n-[2400:8500:1302:817:150:95:130:17]:8333\n-[2401:1800:7800:106:be76:4eff:fe1c:1879]:8333\n+[2002:b6ff:3dca::b6ff:3dca]:28364\n+[2400:2651:42e0:3300:40b4:576d:d14c:65d4]:8333\n+[2400:4052:e20:4f00:69fe:bb33:7b1c:a1ca]:8333\n+[2401:2500:203:184::15]:8333\n [2401:3900:2:1::2]:8333\n-[2401:a400:3200:5600:3c16:2deb:abce:70cd]:8333\n-[2401:b140::43:100]:8333\n-[2401:b140::43:102]:8333\n-[2402:1f00:8100:21c::]:8333\n-[2403:bd80:c000:1:103:202:216:182]:8333\n-[2405:6580:c5c0:1700:6cd2:b72e:740e:4311]:8333\n-[2405:800:1000:1:1000::2001]:8333\n-[2405:9800:b560:96d:630:c28e:a79a:a182]:8333\n+[2401:a400:3200:5600:14ee:f361:4bdc:1f7c]:8333\n+[2401:d002:4402:0:8f28:591a:6ea0:c683]:8333\n+[2402:cb40:1000:504::dead]:8333\n [2405:aa00:2::40]:8333\n [2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n-[2600:1f16:625:e00:269a:3452:2edf:1011]:8333\n-[2600:1f16:625:e00:7bc:5879:4463:15dd]:8333\n-[2600:1f16:625:e00:a28b:5a16:849c:fe41]:8333\n-[2600:1f16:625:e00:a70f:e728:e8e1:2c2e]:8333\n-[2600:3c00::f03c:91ff:fe0c:4d74]:8333\n-[2600:3c00::f03c:91ff:fe2b:bf38]:8333\n-[2600:3c00::f03c:91ff:fe91:3e49]:8333\n-[2600:3c00::f03c:91ff:feb6:19f2]:8333\n-[2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c01::f03c:91ff:fed8:85a2]:8333\n-[2600:3c01::f03c:91ff:fed8:db38]:8333\n-[2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2601:147:4300:e61::30c]:8333\n-[2601:147:4300:e61::f91]:8333\n-[2601:186:c100:6bcd:16bd:cea1:235d:1c19]:8333\n-[2601:18d:4600:5f32:20e7:b3ff:fecf:a99]:8333\n-[2601:240:4601:ecee:309a:f9de:b64d:87df]:8333\n-[2601:240:8100:256b:20c:29ff:fe5e:d707]:8333\n-[2601:646:c202:5301:101b:a096:efba:c10a]:8333\n-[2601:807:8000:9508:9993:d2b3:1a:8225]:8333\n-[2601:c8:4100:770:c37:807b:98cc:bd7e]:8333\n-[2602:100:6154:d6e3:2c91:d0de:b032:b0a4]:8333\n-[2602:100:6154:d6e3::60]:8333\n-[2602:61:786c:2c00::1]:8333\n-[2602:ff83:fff:fffe::75]:8333\n-[2602:ff83:fff:fffe::76]:8333\n-[2603:3005:3000:5000:bc5a:72ac:36e9:175e]:8333\n-[2604:0:c1:100:6bc1:f98a:97f9:3845]:8333\n+[2409:8a15:4a1a:2830:7285:c2ff:fe70:60a4]:8333\n+[2409:8a1e:6938:d2c0:2e0:70ff:fe86:cb59]:8333\n+[2409:8a28:421:2580:2e0:70ff:fe8b:13e]:8333\n+[2409:8a28:421:2770:2e0:70ff:fe87:fecb]:8333\n+[240d:1a:759:6000:ddab:3141:4da0:8878]:8333\n+[2600:3c01::f03c:91ff:fecd:1b95]:8333\n+[2600:6c40:7980:27:20a:f7ff:fe69:f4d5]:8333\n+[2602:ffc5::ffc5:b844]:8333\n [2604:2d80:c808:857b:8d6:9e1c:7131:4bea]:8333\n-[2604:4080:1008:0:96de:80ff:fe62:e650]:8333\n-[2604:4300:a:104:b699:baff:feaa:5109]:8333\n-[2604:5500:c226:7f00:2d96:ed64:ce45:9a6]:8333\n-[2604:8d80:100::adf3:4030]:8333\n-[2604:a880:2:d0::22f8:e001]:8333\n-[2604:a880:2:d0::22f8:f001]:8333\n-[2604:a880:2:d0::22f9:1]:8333\n-[2604:a880:2:d0::22f9:1001]:8333\n-[2604:a880:2:d0::22f9:c001]:8333\n-[2604:a880:2:d0::22f9:d001]:8333\n-[2604:a880:2:d0::22f9:e001]:8333\n-[2604:a880:2:d0::22fa:1001]:8333\n-[2604:a880:2:d0::22fa:2001]:8333\n-[2604:a880:2:d0::22fa:3001]:8333\n-[2604:a880:2:d0::38:f001]:8333\n-[2604:a880:2:d0::662:c001]:8333\n-[2604:a880:400:d0::1ac4:b001]:8333\n-[2604:a880:400:d0::2004:4001]:8333\n-[2604:a880:400:d0::2004:5001]:8333\n-[2604:a880:400:d0::2004:6001]:8333\n-[2604:a880:400:d0::2004:d001]:8333\n-[2604:a880:400:d0::2004:e001]:8333\n-[2604:a880:400:d0::2005:1]:8333\n-[2604:a880:400:d0::2005:2001]:8333\n-[2604:a880:400:d0::2005:3001]:8333\n-[2604:a880:400:d0::cd7:4001]:8333\n-[2604:a880:400:d1::729:b001]:8333\n-[2604:a880:800:a1::11a9:8001]:8333\n-[2604:a880:800:a1::59:9001]:8333\n-[2604:a880:800:a1::cbb:f001]:8333\n-[2604:a880:800:a1::ee8:e001]:8333\n-[2604:a880:cad:d0::370:f001]:8333\n-[2604:a880:cad:d0::a52:6001]:8333\n+[2604:4300:a:2e:21b:21ff:fe11:392]:8333\n+[2604:5500:c134:4000::3fc]:32797\n+[2604:5500:c2a3:7b00:cc6:373b:44a8:caa4]:8333\n+[2604:6000:6e85:4a01:a82d:f9ff:fef5:28b9]:8333\n+[2604:7780:303:80::80]:8333\n [2605:4d00::50]:8333\n-[2605:9880:0:1cf:225:90ff:fec9:29b3]:8333\n-[2605:9880:0:3::8333]:8333\n-[2605:9880:201:17::4b7c]:8333\n-[2605:a000:4a87:9501:d613:fbf8:1e82:8d3c]:8333\n-[2605:a000:f343:b700:5054:ff:fea7:131]:8333\n-[2605:a601:a41:1a00:a00:27ff:fefc:4759]:8333\n+[2605:9880:0:777:225:90ff:fefc:8958]:8333\n [2605:ae00:203::203]:8333\n [2605:c000:2a0a:1::102]:8333\n-[2605:e000:1c00:80e8:984e:a697:97a3:50ed]:8333\n-[2605:e000:1c0d:437b:5054:ff:fe1b:2913]:8333\n-[2605:e000:9093:a700:9853:4464:5f78:c484]:8333\n-[2605:f700:100:400::104e:43bd]:8333\n+[2605:e000:1127:8fc:ec63:a191:32c2:633c]:8333\n+[2605:e200:d202:300:20c:29ff:fef1:85ec]:8333\n [2605:f700:100:400::131:5b54]:8333\n-[2605:f700:100:c10:5575:8e73:b07c:bf5a]:8333\n-[2606:6000:c149:8830:5054:ff:fe78:66ff]:8333\n-[2607:1c00:a:6:3c1c:1b0d:ba4:8ea9]:8333\n-[2607:1c00:a:6::1000]:8333\n-[2607:5300:120:a04::]:8333\n-[2607:5300:203:2fac::]:8333\n-[2607:5300:203:408::]:8333\n-[2607:5300:203:6bc::]:18333\n-[2607:5300:203:8d::]:8333\n-[2607:5300:60:10aa::1]:8333\n-[2607:5300:60:122a::1]:8333\n-[2607:5300:60:13bb::1]:8333\n-[2607:5300:60:3ddf::]:8333\n-[2607:5300:60:5735::]:8333\n-[2607:5300:60:714::1]:8333\n-[2607:5300:60:981::1]:8333\n-[2607:5300:60:cff1::]:28633\n-[2607:9280:b:73b:250:56ff:fe21:bf32]:8333\n-[2607:f178:0:8::106]:8333\n-[2607:f1c0:823:af00::35:bbd1]:8333\n-[2607:f2c0:f00e:300:201:2eff:fe67:9130]:8333\n-[2607:fa18:0:beef::c012]:8333\n-[2607:ff28:1:7::176e:c4a5]:8333\n-[2607:ff28:1:7::65af:9afb]:8333\n-[2620:71:4000:0:192:30:120:110]:8333\n-[2801:84:0:1034:76d4:35ff:fe7f:5033]:8333\n-[2803:1500:1200:c487::1]:8333\n-[2804:14c:6582:60f0::1]:8333\n-[2804:14d:baa6:962c:486:47f6:c161:a79d]:8333\n-[2a00:13a0:3015:1:85:14:79:26]:8333\n-[2a00:16d8:c::5b6a:c261]:8333\n-[2a00:1768:2001:24::148:218]:8333\n-[2a00:1838:36:2c::ed85]:8333\n-[2a00:1a28:1157:2f8::946a]:8333\n-[2a00:1c48:6:203:a60:6eff:fe44:8086]:8333\n+[2606:c680:0:b:3830:34ff:fe66:6663]:8333\n+[2607:4480:2:1:38:102:69:70]:8333\n+[2607:9280:b:73b:250:56ff:fe21:9c2f]:8333\n+[2607:f128:40:1703::2]:8333\n+[2607:f188:0:4:eef4:bbff:fecc:6668]:8333\n+[2607:f2c0:e1e2:11:1044:9b7a:b81e:1d74]:8333\n+[2607:f470:8:1048:ae1f:6bff:fe70:7240]:8333\n+[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n+[2620:6e:a000:1:42:42:42:42]:8333\n+[2804:14d:baa7:9674:21e:67ff:fea8:d799]:8333\n+[2804:14d:baa7:9674:3615:9eff:fe23:d610]:8333\n+[2804:39e8:ff85:a600:7285:c2ff:feae:9925]:8333\n+[2804:d41:aa01:1600:5a2d:3b27:3b83:2b45]:8333\n+[2a00:12d8:7001:1:46e7:6915:75be:92f9]:8333\n+[2a00:1398:4:2a03:215:5dff:fed6:1033]:8333\n+[2a00:1630:14::101]:8333\n+[2a00:1768:2001:27::ef6a]:8333\n+[2a00:1828:a004:2::666]:8333\n+[2a00:1838:36:142::ec73]:8333\n+[2a00:1838:36:7d::d3c6]:8333\n [2a00:1f40:2::1126]:8333\n-[2a00:7c80:0:5d::1d0e]:8333\n+[2a00:23a8:41d0:5800:20c:29ff:fe0d:6a75]:8333\n+[2a00:23c5:fd01:9f00:6317:7c02:788f:88ea]:8333\n+[2a00:6020:13c2:3800:be6a:a1c8:c9e7:65ec]:8333\n+[2a00:63c2:8:88::2]:8333\n+[2a00:7143:3::227]:8333\n+[2a00:7b80:452:2000::138]:8333\n [2a00:8a60:e012:a00::21]:8333\n-[2a00:ab00:603:84::3]:8333\n-[2a00:bbe0:cc:0:6651:6ff:fe0e:9418]:8333\n-[2a00:ca8:a1f:3025:4121:5ca1:3b:4469]:8333\n-[2a00:ca8:a1f:9091:945e:80a3:830a:78cf]:8333\n-[2a01:238:433c:5300:7a61:3e1a:27f4:9dc2]:8333\n-[2a01:4240:a21:983b::c0a8:32]:8333\n-[2a01:488:66:1000:53a9:21b8:0:1]:8333\n-[2a01:4d60:3:1:5::1]:8333\n-[2a01:4f8:10a:3524::2]:8333\n-[2a01:4f8:10b:362::2]:8333\n-[2a01:4f8:10b:d50::2]:8333\n-[2a01:4f8:10b:f44::2]:8333\n-[2a01:4f8:120:1391::2]:8333\n-[2a01:4f8:120:70a3::2]:8333\n-[2a01:4f8:120:93f8::2]:8333\n-[2a01:4f8:121:2385::2]:8333\n-[2a01:4f8:130:71d2::2]:8333\n-[2a01:4f8:130:7422::2]:8333\n-[2a01:4f8:13a:124f::2]:8333\n-[2a01:4f8:13a:1dcb::2]:8333\n-[2a01:4f8:13a:708::2]:21775\n-[2a01:4f8:13a:723::2]:8333\n-[2a01:4f8:13b:109e::2]:8333\n-[2a01:4f8:13b:1a9e::201]:8333\n-[2a01:4f8:13b:271c::2]:10731\n-[2a01:4f8:13b:2d42::2]:8333\n-[2a01:4f8:13b:2d94::2]:8333\n-[2a01:4f8:13b:3810::2]:8333\n-[2a01:4f8:13b:3da8::2]:8333\n-[2a01:4f8:13b:41e6::2]:8333\n-[2a01:4f8:13b:4281::2]:8333\n-[2a01:4f8:13b:5c7::2]:8333\n-[2a01:4f8:13b:81::2]:8333\n-[2a01:4f8:140:236a:cafe::5]:8333\n-[2a01:4f8:140:324e::2]:8333\n-[2a01:4f8:140:5329::102]:8333\n-[2a01:4f8:140:5329::50:109]:8333\n-[2a01:4f8:140:931a::2]:8333\n-[2a01:4f8:140:93b0::2]:8333\n-[2a01:4f8:141:47::2]:8333\n-[2a01:4f8:150:53a4::4]:8333\n-[2a01:4f8:150:72ee::4202]:8333\n-[2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:4443::2]:8333\n-[2a01:4f8:160:6092:d7bd:a39:3e52:b65d]:8333\n-[2a01:4f8:160:60aa::2]:8333\n-[2a01:4f8:160:636e::2]:8333\n-[2a01:4f8:161:6091::2]:8333\n-[2a01:4f8:161:6111::2]:8333\n-[2a01:4f8:161:812e::2]:8333\n-[2a01:4f8:162:2c6::2]:8333\n-[2a01:4f8:162:33ac::2]:8333\n-[2a01:4f8:171:1c3::2]:8333\n-[2a01:4f8:171:2bdc::2]:8333\n-[2a01:4f8:171:3248::2]:8333\n-[2a01:4f8:171:4dc::2]:8333\n-[2a01:4f8:171:d09::2]:8333\n-[2a01:4f8:171:d4a::2]:8333\n-[2a01:4f8:171:e0d::2]:8333\n-[2a01:4f8:171:ecd::2]:8333\n-[2a01:4f8:172:1823::2]:8333\n-[2a01:4f8:173:1622::2]:8333\n-[2a01:4f8:190:50b6::2]:8333\n-[2a01:4f8:190:5176::123]:8333\n-[2a01:4f8:191:268::2]:8333\n-[2a01:4f8:192:216c::2]:8333\n-[2a01:4f8:192:628a::83]:8333\n-[2a01:4f8:1c0c:77af::1]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:442d::2]:8333\n-[2a01:4f8:201:1113::2]:8333\n-[2a01:4f8:201:4f0::2]:8333\n-[2a01:4f8:201:53cc::2]:8333\n-[2a01:4f8:201:8026::1337]:8333\n-[2a01:4f8:201:8026::2]:8333\n-[2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:211:309::2]:8333\n-[2a01:4f8:211:f08::2]:8333\n-[2a01:4f8:212:1e16::2]:8333\n-[2a01:4f8:221:1808::2]:15000\n-[2a01:4f8:221:2e18::2]:8333\n-[2a01:4f8:221:2fcf::2]:8333\n-[2a01:4f8:221:3441::2]:8333\n-[2a01:4f8:221:3452::2]:8333\n-[2a01:4f8:221:39c1::2]:8335\n-[2a01:4f8:221:3c82::2]:8333\n-[2a01:4f8:221:3c82:fea1::666]:8333\n-[2a01:4f8:221:6cd::2]:8333\n-[2a01:4f8:221:801::2]:8333\n-[2a01:4f8:221:f59::2]:8333\n-[2a01:4f8:a0:6147::2]:8333\n-[2a01:4f8:c0c:4268::2]:8333\n-[2a01:4f8:c0c:56a5::2]:8333\n-[2a01:4f8:c17:e00::2]:8333\n-[2a01:4f9:2a:10d4::2]:8333\n-[2a01:4f9:2a:1827::2]:8333\n-[2a01:4f9:2a:192c::2]:8333\n-[2a01:4f9:2a:1c87::2]:8333\n-[2a01:4f9:2a:2510::2]:8333\n-[2a01:4f9:2a:2518::2]:8333\n-[2a01:4f9:2a:2585::2]:8333\n-[2a01:4f9:2a:2698::2]:8333\n-[2a01:4f9:2a:2d0a::2]:8333\n-[2a01:4f9:2a:2d17::2]:8333\n-[2a01:4f9:2a:347::2]:8333\n-[2a01:4f9:2a:650::2]:8333\n-[2a01:4f9:2a:d54::2]:8333\n-[2a01:4f9:c010:12e7::1]:8333\n-[2a01:4f9:c010:1736::1]:8333\n-[2a01:5d00:1:4b6:d2bf:9cff:fe45:b834]:8333\n-[2a01:79c:cebe:70cc:1a03:73ff:fe48:e691]:8333\n-[2a01:7a0:2:1374::7]:8333\n-[2a01:7a7:2:1218:ec4:7aff:fe83:83c4]:8333\n-[2a01:7a7:2:1288:ea39:35ff:fef0:c429]:8333\n-[2a01:7c8:aaba:18:5054:ff:fe2b:df20]:8333\n-[2a01:7c8:fffa:50e:3035:741b:be02:b5de]:8333\n-[2a01:be00:10:201:0:80:cece:1]:8333\n-[2a01:cb00:5be:d500:227:eff:fe28:c565]:8333\n-[2a01:cb00:b3:d300:9276:8a8c:74bf:2a88]:8333\n-[2a01:cb14:b8:a500:dd9d:80f5:d305:68f9]:8333\n-[2a01:e0a:20:9120:7c3f:5643:9978:1825]:8333\n-[2a01:e0a:d:6ea0:56:deab:1b2f:300b]:8333\n-[2a01:e34:ec16:93f0:725d:d8d2:bb90:eabf]:8333\n-[2a01:e34:ee33:1640:c418:3c3a:8ff6:3eab]:8333\n-[2a01:e34:eed7:6670:28c0:183c:7783:7dc3]:8333\n-[2a01:e35:2f7d:a0b0:59c2:3c8a:95a2:c4d1]:8333\n-[2a01:e35:87ba:d0c0:75a2:9f39:efcb:f59f]:8333\n-[2a02:120b:c3c5:cef0:ec82:a43d:4d6:dc2]:8333\n-[2a02:120b:c3d1:f2d0:eea8:6bff:fefc:2265]:8333\n-[2a02:168:404c:0:eea8:6bff:fef3:7d5c]:8333\n-[2a02:180:1:1::517:10b6]:8333\n+[2a00:ca8:a1f:3025:f949:e442:c940:13e8]:8333\n+[2a00:d70:0:15:f816:3eff:fe73:d819]:8333\n+[2a00:d880:5:331::3978]:8333\n+[2a01:238:420f:9200:fa5a:1a4b:1e6a:fadf]:8333\n+[2a01:430:17:1::ffff:1153]:8333\n+[2a01:488:66:1000:53a9:1573:0:1]:8333\n+[2a01:4f8:120:80cc::2]:8433\n+[2a01:5f0:beef:5:0:3:0:1]:52101\n+[2a01:79c:cebc:a630:9dd8:ef55:8374:92a1]:8333\n+[2a01:7a0:2:137a::11]:8333\n+[2a01:7a0:2:137c::3]:8333\n+[2a01:7c8:aab6:db:5054:ff:feca:cfc8]:8333\n+[2a01:8b81:6403:4700::1]:8333\n+[2a01:cb00:7cd:b000:fa1f:bd1:fe0:62a6]:8333\n+[2a01:cb00:d3d:7700:227:eff:fe28:c565]:8333\n+[2a01:d0:bef2::12]:8333\n+[2a01:d0:f34f:1:1f67:e250:6aeb:b9c4]:8333\n+[2a01:e34:ee6b:2ab0:88c2:1c12:f4eb:c26c]:8333\n+[2a01:e35:2fba:2e90:1:0:b:1]:8333\n+[2a02:1205:505d:eb50:beae:c5ff:fe42:a973]:8333\n+[2a02:120b:2c3f:a90:10dd:31ff:fe42:5079]:8333\n+[2a02:130:300:1520:1::2]:8333\n+[2a02:13b8:4000:1000:216:e6ff:fe92:8619]:8333\n [2a02:180:1:1::5b8f:538c]:8333\n-[2a02:1b8:10:147::2]:8333\n-[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333\n-[2a02:2528:503:2::14]:8333\n-[2a02:2528:fa:1400::1]:8333\n-[2a02:2770:17:0:21a:4aff:fe7b:175f]:8333\n+[2a02:2168:8062:db00:96de:80ff:fea3:fd00]:8333\n [2a02:2770:5:0:21a:4aff:fe44:8370]:8333\n-[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333\n+[2a02:2788:864:fb3:5b8a:c8f7:9fff:ae2d]:8333\n+[2a02:2f0d:607:bc00:5e9a:d8ff:fe57:8bc5]:8333\n+[2a02:348:9a:83b1::1]:8333\n [2a02:390:9000:0:218:7dff:fe10:be33]:8333\n+[2a02:4780:8:6:2:354e:1256:7a04]:8333\n+[2a02:578:4f07:24:76ad:cef7:93c1:b9b9]:8333\n+[2a02:6d40:30f6:e901:89b8:bb58:25a:6050]:8333\n [2a02:750:7:c11:5054:ff:fe43:eb81]:8333\n-[2a02:7aa0:1619::590:eba2]:8333\n-[2a02:7b40:3e4d:9ed9::1]:8333\n-[2a02:7b40:50d1:e04f::1]:8333\n-[2a02:7b40:5928:f9e::1]:8333\n-[2a02:7b40:592f:a590::1]:8333\n-[2a02:7b40:b0df:82fe::1]:8333\n-[2a02:7b40:b0df:8925::1]:8333\n-[2a02:7b40:b0df:8b41::1]:8333\n-[2a02:7b40:b0df:8d57::1]:8333\n-[2a02:7b40:d418:6fcd::1]:8333\n-[2a02:8108:2340:1c18:7a:231e:1430:7f12]:8333\n-[2a02:8108:9c3f:dd18:922b:34ff:fe30:ac42]:8333\n-[2a02:810d:8a40:36f8:9af2:b3ff:fee8:6d7a]:8333\n-[2a02:8388:e301:7180:201:2eff:fe82:b3cc]:8333\n-[2a02:908:213:54a0:39bf:d4aa:60b2:d9c3]:8333\n-[2a02:908:4f0:7e1c:5054:ff:feb7:ce4b]:8333\n-[2a02:930:1:0:250:56ff:fe8e:2819]:8333\n-[2a02:a80:0:2052::2]:8333\n-[2a02:c205:0:5145::1]:8333\n-[2a02:c205:2008:272::1]:8333\n-[2a02:c205:2010:6230::1]:8333\n-[2a02:c205:2016:4327::1]:8333\n-[2a02:c205:2017:2116::1]:8333\n-[2a02:c205:2018:1754::1]:8333\n-[2a02:c205:2018:8229::1]:8333\n-[2a02:c205:3002:2787::1]:8333\n-[2a02:c205:3002:6525::1]:8333\n-[2a02:c207:0:3829::1]:8333\n-[2a02:c207:2007:4699::1]:8333\n-[2a02:c207:2009:213::1]:8333\n-[2a02:c207:2010:7751::1]:8333\n-[2a02:c207:2012:4826::1]:8333\n-[2a02:c207:2014:4199::1]:8333\n-[2a02:c207:2014:5639::1]:8333\n-[2a02:c207:2014:9913::1]:18333\n-[2a02:c207:2015:3799::1]:8333\n-[2a02:c207:2015:3926::1]:8333\n-[2a02:c207:2015:5919::1]:8333\n-[2a02:c207:2015:6681::1]:8333\n-[2a02:c207:2016:2394::1]:8333\n-[2a02:c207:2016:9375::1]:8333\n-[2a02:c207:2017:1988::1]:8333\n-[2a02:c207:2017:3720::1]:8333\n-[2a02:c207:2017:4486::1]:8333\n-[2a02:c207:2017:4708::1]:8333\n-[2a02:c207:2017:5828::1]:8333\n-[2a02:c207:2017:7320::1]:8333\n-[2a02:c207:2017:8175::1]:8333\n-[2a02:c207:2017:8998::1]:8333\n-[2a02:c207:2018:1462::1]:8333\n-[2a02:c207:2018:3094::1]:8333\n-[2a02:c207:2018:3275::1]:8333\n-[2a02:c207:2018:3710::1]:8333\n-[2a02:c207:2018:4790::1]:8333\n-[2a02:c207:2018:7407::1]:8333\n-[2a02:c207:2019:1067::1]:8333\n-[2a02:c207:2019:1425::1]:8333\n-[2a02:c207:2019:2041::1]:8333\n-[2a02:c207:2019:248::1]:8333\n-[2a02:c207:2019:3592::1]:8333\n-[2a02:c207:3001:9320::1]:8333\n-[2a02:c207:3002:1287::1]:8333\n-[2a02:c207:3002:4187::1]:8333\n-[2a02:c207:3002:5642::1]:8333\n-[2a02:c207:3002:7150::1]:8333\n-[2a02:c207:3002:7222::1]:8333\n-[2a02:c207:3002:7610::1]:8333\n-[2a02:c207:3002:8456::1]:8333\n-[2a02:ce80:0:20::1]:8333\n-[2a02:e00:fff0:1b9::1]:8333\n-[2a02:e00:fff0:1b9::a]:8333\n-[2a02:e00:fff0:1e2::1]:8333\n-[2a03:b0c0:1:d0::69:3001]:8333\n-[2a03:b0c0:2:d0::3ba:b001]:8333\n-[2a03:b0c0:2:d0::8ce:4001]:8333\n-[2a03:b0c0:3:d0::116:5001]:8333\n-[2a03:b0c0:3:d0::12a:1]:8333\n-[2a03:b0c0:3:d0::23fb:6001]:8333\n-[2a03:b0c0:3:d0::409:1001]:8333\n-[2a03:b0c0:3:d0::44b8:9001]:8333\n-[2a03:b0c0:3:d0::44b8:a001]:8333\n-[2a03:b0c0:3:d0::44b8:e001]:8333\n-[2a03:b0c0:3:d0::44b8:f001]:8333\n-[2a03:b0c0:3:d0::44b9:1]:8333\n-[2a03:b0c0:3:d0::44b9:1001]:8333\n-[2a03:b0c0:3:d0::44b9:2001]:8333\n-[2a03:b0c0:3:d0::44b9:4001]:8333\n-[2a03:b0c0:3:d0::5e48:d001]:8333\n-[2a03:ee40:0:294:250:56ff:fe8d:4ad7]:8333\n+[2a02:7aa0:1619::adc:8de0]:8333\n+[2a02:7b40:4f62:19ae::1]:8333\n+[2a02:8108:95bf:eae3:211:32ff:fe8e:b5b8]:8333\n+[2a02:e00:fff0:23f::1]:8333\n+[2a02:e00:fff0:23f::a]:8333\n+[2a03:1b20:1:f410:40::3e]:16463\n+[2a03:6000:870:0:46:23:87:218]:8333\n+[2a03:9da0:f6:1::2]:8333\n+[2a03:e2c0:1ce::2]:8333\n+[2a04:2180:0:2::f2]:8333\n [2a04:2180:1:c:f000::15]:8333\n-[2a07:440:2000:20::ca0:1817]:8333\n-[2a0a:c800:1:1::4]:8333\n-226eupdnaouu4h2v.onion:8333\n-23wdfqkzttmenvki.onion:8333\n-2bfsxzluysybysnr.onion:8333\n-2f4xg7m3g6vtxqcd.onion:8333\n-2i5i6kvxoggngz67.onion:8333\n-336lqgffb4tg5gpm.onion:8333\n-342ouaetvqzgepjx.onion:8333\n-3mutzniftca5w7ou.onion:8333\n-3qpbpt4gkp3dxn2r.onion:8333\n-3r44ddzjitznyahw.onion:8333\n-3xucqntxp5ddoaz5.onion:8333\n-44walnmvlhcqa3c2.onion:8333\n-4ehtdyvvzhbbo6c5.onion:8333\n-4jekbh7cdlfda3ve.onion:8333\n-4mewwo2bfxk6lg3f.onion:8333\n-53tsjt6zq3iasv5q.onion:8333\n-546esc6botbjfbxb.onion:8333\n-55zzzsk7iqv6p3ew.onion:8333\n-56stijc6kcgw6flk.onion:8333\n-5elzwcg4xysogalo.onion:8333\n-5f4ysqk4eed4jcvj.onion:8333\n-5k3oxus2laabmyip.onion:8333\n-5ptuzplawb3svsos.onion:8333\n-5rmpsrrdb3vpfgzh.onion:8333\n-5wnkqzjzjehmq7hn.onion:8333\n-5xxsqhppii22pges.onion:8333\n-5ygszbkbbauzjx7m.onion:8333\n-5z2she4d6fvrdnme.onion:8333\n-64qrhyxglyjjhkne.onion:8333\n-6kn76kajckqg22ao.onion:8333\n-6m2iqgnqjxh7ulyk.onion:8333\n-6wcfnbb3vmaw6cwa.onion:8333\n-6zynxbbupfmnvc3g.onion:8333\n-7sns7raurpmllybi.onion:8333\n-7whaszg22pdkvfck.onion:8333\n-a3a6plzycomx5gqw.onion:8333\n-acs7hylaadjkt7mk.onion:8333\n-agpwcvixadbinyet.onion:8333\n-ajqvsylg5xd5vs3y.onion:8333\n-aktfeaqkbnk52bfx.onion:8333\n-albsennsmbsgxls3.onion:8333\n-alruzrdz7xcek67f.onion:8333\n-am6aq3dluz3njcnt.onion:8333\n-aoefyxgnpgaiw2xg.onion:8333\n-ap2frg2maqxpmkkd.onion:8333\n-ap4zz4imxbdl6plr.onion:8333\n-apbbvhk32myudnyy.onion:8333\n-arlocvowxtnlbpo3.onion:8333\n-b5d6etfljm2lje5y.onion:8333\n-bdwvcwafzpssqckj.onion:8333\n-brwqezn6le54w2bb.onion:8333\n-bxxvkb7czrxtvz2c.onion:8333\n-c2tpqkaz4ihjzwgb.onion:8333\n-cgcv32rbbbjyyzow.onion:8333\n-ckkqplgkzof45h2y.onion:8333\n-cpyfqbs4fs3vnbpf.onion:8333\n-ctzuzxnvla5xvb7z.onion:8333\n-cw4iqvcdy67b5tpw.onion:8333\n-cyvpgt25274i5b7c.onion:8333\n-dmudsr7x7edvyglt.onion:8333\n-dsbn53f2dwphv5mx.onion:8333\n-dssqdj6pxnzkth6i.onion:8333\n-e3zbephvcqmzcqkr.onion:8333\n-e63i7c7qazbdtjma.onion:8333\n-eiuaj2qjvbn737ph.onion:8333\n-ep2mjzox3kvb6ax4.onion:8333\n-eyvfxeefr4eokefr.onion:8333\n-f3nfioh27j2xlfe5.onion:8333\n-f5ezxphghknfbrtg.onion:8333\n-faewczjuzs4wfxhv.onion:8333\n-fefisckqu5raqe3c.onion:8333\n-fgbss353vsvandn7.onion:8333\n-fnlkrowsyrfeub6s.onion:8333\n-fno4aakpl6sg6y47.onion:8333\n-fnpnjdk24pzgcplx.onion:8333\n-foe4ymjz4hjhowud.onion:8333\n-fql436nz7qdis3nk.onion:8333\n-frhfucww5vghf7cv.onion:8333\n-frrxefv5dir5hm7l.onion:8333\n-fuckerolyuv7ebla.onion:8333\n-fz6nsij6jiyuwlsc.onion:8333\n-g4qfwcu5wm7ze5lg.onion:8333\n-gb5ypqt63du3wfhn.onion:8333\n-gcydj5id3jcxybzr.onion:8333\n-gfvnnnwcddfzosav.onion:8333\n-golevvyaydsduuw2.onion:8333\n-gq4su6stjnosqu67.onion:8333\n-hb4oreglor5x3xoa.onion:8333\n-hbuair37dxnblurw.onion:8333\n-hda7fvzq3voh7mu6.onion:8333\n-hnvk3pgvieyixyc2.onion:8333\n-ifwxwunja4pgwydg.onion:8333\n-ijmbmziunbszzxtj.onion:8333\n-in7r5ieo7ogkxbne.onion:8333\n-inysvhakrulg6lts.onion:8333\n-iwrwbwss7lfalfg4.onion:8333\n-ja7dmgkri7fi47xk.onion:8333\n-jtksnokusbzms7wl.onion:8333\n-jwxyqhp42cmwhqf3.onion:8333\n-jxrfatqtcevzwywz.onion:8333\n-jy6mvzb2ntutiye6.onion:8333\n-jydquxzliej6dm24.onion:8333\n-k2gdzvryrx7v6ksw.onion:8333\n-kkdas3qebkosygu5.onion:8333\n+[2a04:52c0:101:97f::dcbe]:8333\n+[2a04:ee41:83:50df:d908:f71d:2a86:b337]:8333\n+[2a05:1700::100]:8333\n+[2a05:fc87:4::2]:8333\n+[2a05:fc87:4::7]:8333\n+[2a07:5741:0:69d::1]:8333\n+[2a07:5741:0:7cd::1]:8333\n+[2a07:7200:ffff:c53f::e1:17]:8333\n+[2a07:b400:1:34c::2:1002]:8333\n+[2a0b:ae40:3:4a0a::15]:8333\n+[2a0e:b780::55d1:f05b]:8333\n+[2c0f:fce8:0:400:b7c::1]:8333\n+2empatdfea6vwete.onion:8333\n+34aqcwnnuiqh234f.onion:8333\n+3gxqibajrtysyp5o.onion:8333\n+3sami4tg4yhctjyc.onion:8333\n+3w77hrilg6q64opl.onion:8333\n+46xh2sbjsjiyl4fu.onion:8333\n+4ee44qsamrjpywju.onion:8333\n+4haplrtkprjqhm2j.onion:8333\n+4u3y3zf2emynt6ui.onion:8333\n+57dytizbai7o4kq7.onion:8333\n+5guaeulc7xm4g2mm.onion:8334\n+5mtvd4dk62ccdk4v.onion:8333\n+5pmjz6mmikyabaw5.onion:8333\n+6eurcxoqsa4qpiqq.onion:8333\n+6ivvkeseojsmpby4.onion:8333\n+6tlha6njtcuwpfa3.onion:8333\n+6ymgbvnn6d5nfmv4.onion:8333\n+72y2n5rary4mywkz.onion:8333\n+7b75ub5dapphemit.onion:8333\n+7xaqpr7exrtlnjbb.onion:8333\n+a64haiqsl76l25gv.onion:8333\n+ab7ftdfw6qhdx3re.onion:8333\n+aiupgbtdqpmwfpuz.onion:8333\n+akeg56rzkg7rsyyg.onion:8333\n+akinbo7tlegsnsxn.onion:8333\n+anem5aq4cr2zl7tz.onion:8333\n+at3w5qisczgguije.onion:8333\n+auo4zjsp44vydv6c.onion:8333\n+bowg4prf63givea4.onion:8333\n+cjuek22p4vv4hzbu.onion:8333\n+cklaa2xdawrb75fg.onion:8333\n+coxiru76nnfw3vdj.onion:8333\n+cwq2fuc54mlp3ojc.onion:8333\n+dganr7dffsacayml.onion:8333\n+djbsspmvlc6ijiis.onion:8333\n+dmfwov5ycnpvulij.onion:8333\n+dp2ekfbxubpdfrt4.onion:8333\n+dw2ufbybrgtzssts.onion:4333\n+edkmfeaapvavhtku.onion:8333\n+ejdoey3uay3cz7bs.onion:8333\n+eladlvwflaahxomr.onion:8333\n+ffhx6ttq7ejbodua.onion:8333\n+hbnnzteon75un65y.onion:8333\n+hcyxhownxdv7yybw.onion:8333\n+hdfcxll2tqs2l4jc.onion:8333\n+hdld2bxyvzy45ds4.onion:8333\n+hlnnhn2xj2qffqjs.onion:8333\n+hnqwmqikfmnkpdja.onion:8333\n+hvmjovdasoin43wn.onion:8333\n+hwzcbnenp6dsp6ow.onion:8333\n+i5ellwzndjuke242.onion:8333\n+iapvpwzs4gpbl6fk.onion:8885\n+if7fsvgyqwowxkcn.onion:8333\n+ilukzjazxlxrbuwy.onion:8333\n kswfyurnglm65u7b.onion:8333\n-l2pruzr3mnhieuug.onion:8333\n-lgkgcd4brjmhrqna.onion:8333\n-lgkvbvro67jomosw.onion:8333\n-llljnatksfgtlhko.onion:8333\n-mdpt6w5sjwcnxtwy.onion:8333\n-mhjcepzc4gyadw2w.onion:8333\n-mn744hbioayn3ojs.onion:8333\n-mpakpgzu7umgu3ze.onion:8333\n-mvomwfdddqfqg3lq.onion:8333\n-mx5kdfxwowc3ymzg.onion:8333\n-n4m32zcp5hvomkt4.onion:8333\n-n73steqcmjz5hwni.onion:8333\n-nc2bgkhqohrmwbxr.onion:8333\n-nc6zlswwqqg7c5yz.onion:8333\n-nrrfwdmrm3imuebn.onion:8333\n-nrrmkgmulpgsbwlt.onion:8333\n-o2tku2dbsd6iumch.onion:8333\n-o72zyzrv77ea2bwu.onion:8333\n-ohgwa5y65z4eem7b.onion:8333\n-olvdu57g7rxwpcr4.onion:8333\n-onlzo775ogdpjn5x.onion:8333\n-otshttbd6v2k3jlz.onion:8333\n-owr5tm7ygw62z4vl.onion:8333\n-pcfhsdqzs6q63ryu.onion:8333\n-pffwqxvuldeq55zc.onion:8333\n-pgnz7kwc36rcucpu.onion:8333\n-ph4g7b4jsyuntvr4.onion:8333\n-pjghcivzkoersesd.onion:8333\n-pu7w3jfyrzp7sxsi.onion:8333\n-pxvkjp6sfb2f7foe.onion:8333\n-qaxm5spmx5d2k3up.onion:8333\n-qepth54daysmpy5y.onion:8333\n-qj6irqn2i73edff5.onion:8333\n-qjpejfzlwqqnzsol.onion:8333\n-qxe3bqjmrcepxpx4.onion:8333\n-rlonjm7ui6fdyz4h.onion:8333\n-rs635ss24ymwyqkw.onion:8333\n-sgiitogeoqslvkjv.onion:8333\n-spidernetimmmkth.onion:8333\n-tb7qlicrt6rdzxzd.onion:8333\n-thbjka62axzuwtnt.onion:8333\n-toguvy5upyuctudx.onion:8333\n-u7mpvxotmnqntyn5.onion:8333\n-uccmw67l4kgl646y.onion:8333\n-ueo6royc3775ioq7.onion:8333\n-ujsb2qcjk4t6234z.onion:8333\n-uub43p3artmornv5.onion:8333\n-uvb55mwvuy22mgm2.onion:8333\n-uzzyjgqlf47ackbr.onion:8333\n-v5fgr3fnz3nw663t.onion:8333\n-v5zs2sgjyr3glh6c.onion:8333\n-vk3qjdehyy4dwcxw.onion:8333\n-voy6xbvejox4xbax.onion:8333\n-vuiw75kgpcqke4mv.onion:8333\n-w3q47ucyajtfic76.onion:8333\n-wg6vwmbrzyyzapun.onion:8333\n-wgpfwxgy2dowienn.onion:8333\n-wjtmvsznvdclncau.onion:8333\n-xab45bpmmrl5g3by.onion:8333\n-xdlu3ujzieheouo7.onion:8333\n-xgykmaa2jjay7cfu.onion:8333\n-xnlu3tvakngy7tkp.onion:8333\n-xsn5icce45gs3qy7.onion:8333\n-ydonogjpjd3me45v.onion:8333\n-ykn7vof37bavxetd.onion:8333\n-yl525dwhvqis7ryc.onion:8333\n-yrbaccpbyge6xaba.onion:8333\n-yyuxafli7fqdizhq.onion:8333\n-z33nukt7ngik3cpe.onion:8333\n-zon2bbc2q2ihqt4c.onion:8333\n-zqjvtxskxonu4kzv.onion:8333\n+ldu2hbiorkvdymja.onion:8333\n+lvvgedppmpigudhz.onion:8333\n+mk3bnep5ubou7i44.onion:8333\n+muhp42ytbwi6qf62.onion:8333\n+n5khsbd6whw7ooip.onion:8333\n+ndmbrjcvu2s6jcom.onion:8333\n+nf4iypnyjwfpcjm7.onion:8333\n+nkdw6ywzt3dqwxuf.onion:8333\n+o4sl5na6jeqgi3l6.onion:8333\n+opencubebqqx3buj.onion:8333\n+ovbkvgdllk3xxeah.onion:8333\n+pg2jeh62fkq3byps.onion:8333\n+pkcgxf23ws3lwqvq.onion:8333\n+qdtau72ifwauot6b.onion:8333\n+qidnrqy2ozz3nzqq.onion:8333\n+readybit5veyche6.onion:8333\n+s2epxac7ovy36ruj.onion:8333\n+satofxsc3xjadxsm.onion:8333\n+sv5oitfnsmfoc3wu.onion:8333\n+uftbw4zi5wlzcwho.onion:8333\n+uz3pvdhie3372vxw.onion:8333\n+v2x7gpj3shxfnl25.onion:8333\n+vov46htt6gyixdmb.onion:8333\n+wg3b3qxcwcrraq2o.onion:8333\n+wgeecjm4w4ko66f7.onion:8333\n+wmxc6ask4a5xyaxh.onion:8333\n+wqrafn4zal3bbbhr.onion:8333\n+xhi5x5qc44elydk4.onion:8333\n+xk6bjlmgvwojvozj.onion:8333\n+xmgr7fsmp7bgburk.onion:8333\n+xocvz3dzyu2kzu6f.onion:8333\n+xv7pt6etwxiygss6.onion:8444\n+yumx7asj7feoozic.onion:8333\n+zmaddsqelw2oywfb.onion:8444"
      },
      {
        "sha": "13385cc816209d2c9fc2acf68343dce15e4dd201",
        "filename": "contrib/seeds/suspicious_hosts.txt",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/seeds/suspicious_hosts.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/seeds/suspicious_hosts.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/suspicious_hosts.txt?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,16 @@\n+130.211.129.106\n+148.251.238.178\n+176.9.46.6\n+178.63.107.226\n+54.173.72.127\n+54.174.10.182\n+54.183.64.54\n+54.194.231.211\n+54.66.214.167\n+54.66.220.137\n+54.67.33.14\n+54.77.251.214\n+54.94.195.96\n+54.94.200.247\n+83.81.130.26\n+88.198.17.7\n\\ No newline at end of file"
      },
      {
        "sha": "573a71a675312d3ce110bc60b788964116d9a0e4",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -2,7 +2,7 @@\n \n Utilities to generate test vectors for the data-driven Bitcoin tests.\n \n-Usage: \n+Usage:\n \n     PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_keys_valid.json\n     PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_keys_invalid.json"
      },
      {
        "sha": "f232bb62c2c391e6cd056002951703c24b2dbac6",
        "filename": "contrib/valgrind.supp",
        "status": "modified",
        "additions": 145,
        "deletions": 2,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,7 +6,14 @@\n # Example use:\n # $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n # $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n-#       --show-leak-kinds=all src/test/test_bitcoin --log_level=test_suite\n+#       --show-leak-kinds=all src/test/test_bitcoin\n+#\n+# To create suppressions for found issues, use the --gen-suppressions=all option:\n+# $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n+#       --show-leak-kinds=all --gen-suppressions=all --show-reachable=yes \\\n+#       --error-limit=no src/test/test_bitcoin\n+#\n+# Note that suppressions may depend on OS and/or library versions.\n {\n    Suppress libstdc++ warning - https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65434\n    Memcheck:Leak\n@@ -23,8 +30,57 @@\n    Memcheck:Cond\n    obj:*/libdb_cxx-*.so\n    fun:__log_put\n+}\n+{\n+   Suppress libdb warning\n+   Memcheck:Param\n+   pwrite64(buf)\n+   fun:pwrite\n+   fun:__os_io\n+}\n+{\n+   Suppress libdb warning\n+   Memcheck:Cond\n+   fun:__log_putr.isra.1\n+}\n+{\n+   Suppress libdb warning\n+   Memcheck:Param\n+   pwrite64(buf)\n+   fun:pwrite\n+   fun:__os_io\n+   obj:*/libdb_cxx-*.so\n+}\n+{\n+   Suppress uninitialized bytes warning in compat code\n+   Memcheck:Param\n+   ioctl(TCSET{S,SW,SF})\n+   fun:tcsetattr\n+}\n+{\n+   Suppress libdb warning\n+   Memcheck:Leak\n+   fun:malloc\n+   ...\n    obj:*/libdb_cxx-*.so\n-   fun:__log_put_record\n+}\n+{\n+   Suppress leaks on init\n+   Memcheck:Leak\n+   ...\n+   fun:_Z11AppInitMainR11NodeContext\n+}\n+{\n+   Suppress leaks on shutdown\n+   Memcheck:Leak\n+   ...\n+   fun:_Z8ShutdownR11NodeContext\n+}\n+{\n+   Ignore GUI warning\n+   Memcheck:Leak\n+   ...\n+   obj:/usr/lib64/libgdk-3.so.0.2404.7\n }\n {\n    Suppress leveldb warning (leveldb::InitModule()) - https://github.com/google/leveldb/issues/113\n@@ -41,3 +97,90 @@\n    ...\n    fun:_ZN7leveldbL14InitDefaultEnvEv\n }\n+{\n+   Suppress leveldb leak\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   ...\n+   fun:_ZN7leveldb6DBImpl14BackgroundCallEv\n+}\n+{\n+   Suppress leveldb leak\n+   Memcheck:Leak\n+   fun:_Znwm\n+   ...\n+   fun:GetCoin\n+}\n+{\n+   Suppress wcsnrtombs glibc SSE4 warning (could be related: https://stroika.atlassian.net/browse/STK-626)\n+   Memcheck:Addr16\n+   fun:__wcsnlen_sse4_1\n+   fun:wcsnrtombs\n+}\n+{\n+   Suppress wcsnrtombs warning (remove after removing boost::fs)\n+   Memcheck:Cond\n+   ...\n+   fun:_ZN5boost10filesystem6detail11unique_pathERKNS0_4pathEPNS_6system10error_codeE\n+   fun:unique_path\n+}\n+{\n+   Suppress boost warning\n+   Memcheck:Leak\n+   fun:_Znwm\n+   ...\n+   fun:_ZN5boost9unit_test9framework5state17execute_test_treeEmjPKNS2_23random_generator_helperE\n+   fun:_ZN5boost9unit_test9framework3runEmb\n+   fun:_ZN5boost9unit_test14unit_test_mainEPFbvEiPPc\n+   fun:main\n+}\n+{\n+   Suppress boost::filesystem warning (fixed in boost 1.70: https://github.com/boostorg/filesystem/commit/bbe9d1771e5d679b3f10c42a58fc81f7e8c024a9)\n+   Memcheck:Cond\n+   fun:_ZN5boost10filesystem6detail28directory_iterator_incrementERNS0_18directory_iteratorEPNS_6system10error_codeE\n+   ...\n+   obj:*/libboost_filesystem.so.*\n+}\n+{\n+   Suppress boost::filesystem warning (could be related: https://stackoverflow.com/questions/9830182/function-boostfilesystemcomplete-being-reported-as-possible-memory-leak-by-v)\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   ...\n+   fun:_ZN5boost10filesystem8absoluteERKNS0_4pathES3_\n+}\n+{\n+   Suppress boost still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   ...\n+   fun:_M_construct_aux<char*>\n+   fun:_M_construct<char*>\n+   fun:basic_string\n+   fun:path\n+}\n+{\n+   Suppress LogInstance still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   fun:_Z11LogInstancev\n+}\n+{\n+   Suppress secp256k1_context_create still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:malloc\n+   ...\n+   fun:secp256k1_context_create\n+}\n+{\n+   Suppress BCLog::Logger::StartLogging() still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:malloc\n+   ...\n+   fun:_ZN5BCLog6Logger12StartLoggingEv\n+}"
      },
      {
        "sha": "e95a57586ff1c34fef56f4d851934f0d881bbd8c",
        "filename": "contrib/verify-commits/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -40,7 +40,7 @@ Import trusted keys\n In order to check the commit signatures, you must add the trusted PGP keys to your machine. [GnuPG](https://gnupg.org/) may be used to import the trusted keys by running the following command:\n \n ```sh\n-gpg --recv-keys $(<contrib/verify-commits/trusted-keys)\n+gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys $(<contrib/verify-commits/trusted-keys)\n ```\n \n Key expiry/revocation"
      },
      {
        "sha": "db5bfce208ef18e72d8643f83e773723ccd39116",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "78873dc0c38ebe6d800ab319c0cc21b9eeb641cd",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env bash\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "7e46c6fd47733fc35d3194faf0399f96640ca2af",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Verify commits against a trusted keys list.\"\"\""
      },
      {
        "sha": "4296998631cff715d429c5b203c41b53f8e722e0",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env bash\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "31720e72e7081d61a6905adbfeabdc8d15a517f6",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "4023a5b638f89f9838990db0700ed9ec5a629e9b",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,34 +1,34 @@\n -----BEGIN CERTIFICATE-----\n-MIIFcTCCBFmgAwIBAgIRALWcUnSOxv9FQW3xdaMDO6swDQYJKoZIhvcNAQELBQAw\n+MIIFdDCCBFygAwIBAgIRAL98pqZb/N9LuNaNxKsHNGQwDQYJKoZIhvcNAQELBQAw\n fDELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n A1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGlnbyBMaW1pdGVkMSQwIgYDVQQD\n-ExtTZWN0aWdvIFJTQSBDb2RlIFNpZ25pbmcgQ0EwHhcNMTkwMzI3MDAwMDAwWhcN\n-MjAwMzI2MjM1OTU5WjCBtDELMAkGA1UEBhMCQ0gxDTALBgNVBBEMBDgwMDUxCzAJ\n-BgNVBAgMAlpIMRAwDgYDVQQHDAdaw7xyaWNoMRcwFQYDVQQJDA5NYXR0ZW5nYXNz\n-ZSAyNzEuMCwGA1UECgwlQml0Y29pbiBDb3JlIENvZGUgU2lnbmluZyBBc3NvY2lh\n-dGlvbjEuMCwGA1UEAwwlQml0Y29pbiBDb3JlIENvZGUgU2lnbmluZyBBc3NvY2lh\n-dGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK04VDwiY1wxcW3E\n-WTTGmnbciCwETwC96DG4qcoH2PPNsVy3dfwGh0C02Qj2vL64IfwIGUFSgREvyjZk\n-CNhEuJO2e0nO0rKNNH5v/JO+P7/VYPZkF5a3uUz9ulmihULXioieHB/q0l6BmiJL\n-+cYaMVfidL9Y+IJwgiTqjnpRhv1Ik083SPsu6GcfQT9MJfY/+xse2EP0l4GfdFE6\n-DRcWjiC8UHpfpGYcImzSFZZpbFbqoAyhueCl28QU4f8QAbS6BqNfaAK9MMACWDcK\n-eTz3C5JK6CiUxOnGIxilXhljuybFUjR4jGl5eTRpuPWk95NTTYS36q+bx/1nYelx\n-0n4nnDMCAwEAAaOCAbMwggGvMB8GA1UdIwQYMBaAFA7hOqhTOjHVir7Bu61nGgOF\n-rTQOMB0GA1UdDgQWBBRbN7ECrPCdVvh58enwy3Dix46h2jAOBgNVHQ8BAf8EBAMC\n-B4AwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDAzARBglghkgBhvhC\n-AQEEBAMCBBAwQAYDVR0gBDkwNzA1BgwrBgEEAbIxAQIBAwIwJTAjBggrBgEFBQcC\n-ARYXaHR0cHM6Ly9zZWN0aWdvLmNvbS9DUFMwQwYDVR0fBDwwOjA4oDagNIYyaHR0\n-cDovL2NybC5zZWN0aWdvLmNvbS9TZWN0aWdvUlNBQ29kZVNpZ25pbmdDQS5jcmww\n-cwYIKwYBBQUHAQEEZzBlMD4GCCsGAQUFBzAChjJodHRwOi8vY3J0LnNlY3RpZ28u\n-Y29tL1NlY3RpZ29SU0FDb2RlU2lnbmluZ0NBLmNydDAjBggrBgEFBQcwAYYXaHR0\n-cDovL29jc3Auc2VjdGlnby5jb20wKwYDVR0RBCQwIoEgam9uYXNAYml0Y29pbmNv\n-cmVjb2Rlc2lnbmluZy5vcmcwDQYJKoZIhvcNAQELBQADggEBAF/AIXcFBWCC2Red\n-SHN4Cvko5mdSkDNgzjVFc+OwAJ5RdOgbERde4PnHm3Qmrnx+uMetVnmrC8Fv1Iwb\n-kkR0bdbWBj6lF6zMsClIN6WJEfY+qfj1qi7wyucu+3OElYRC9bm5Lf0mEHQr8lJ1\n-lGvAjPh+/hmxoVNbHFMZ1Ea+BrbjVwiSznt0gzdMh0CispBZKLWCIwRwi+hFjQrw\n-Z7RLH8HeCJ5Ojl/OTDQqh6AylQ7l9w9KHsUt4Jqy/AnCCyAj2/6xjdwnuo3tCZwb\n-g/9CydiAacD/83odphEeC2iBa+0wsj9bWmyYKY7S9n0u+wm3wBfZbSVMDDPk/la1\n-3qCUDLk=\n+ExtTZWN0aWdvIFJTQSBDb2RlIFNpZ25pbmcgQ0EwHhcNMjAwMzI0MDAwMDAwWhcN\n+MjEwMzI0MjM1OTU5WjCBtzELMAkGA1UEBhMCQ0gxDTALBgNVBBEMBDgwMDUxDjAM\n+BgNVBAgMBVN0YXRlMRAwDgYDVQQHDAdaw7xyaWNoMRcwFQYDVQQJDA5NYXR0ZW5n\n+YXNzZSAyNzEuMCwGA1UECgwlQml0Y29pbiBDb3JlIENvZGUgU2lnbmluZyBBc3Nv\n+Y2lhdGlvbjEuMCwGA1UEAwwlQml0Y29pbiBDb3JlIENvZGUgU2lnbmluZyBBc3Nv\n+Y2lhdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMtxC8N4r/jE\n+OGOdFy/0UtiUvEczPZf9WYZz/7paAkc75XopHIE5/ssmoEX27gG9K00tf3Q62QAx\n+inZUPWkNTh8X0l+6uSGiIBFIV7dDgztIxnPcxaqw0k7Q2TEqKJvb5qm16zX6WfXJ\n+R2r6O5utUdQ3AarHnQq9fwdM1j5+ywS5u52te74ENgDMTMKUuB2J3KH1ASg5PAtO\n+CjPqPL+ZXJ7eT3M0Z+Lbu5ISZSqZB48BcCwOo/fOO0dAiLT9FE1iVtaCpBKHqGmd\n+glRjPzZdgDv8g28etRmk8wQ5pQmfL2gBjt/LtIgMPTdHHETKLxJO5H3y0CNx1vzL\n+ql7xNMxELxkCAwEAAaOCAbMwggGvMB8GA1UdIwQYMBaAFA7hOqhTOjHVir7Bu61n\n+GgOFrTQOMB0GA1UdDgQWBBSHBbl82FUJiUkXyyYJog1awYRsxjAOBgNVHQ8BAf8E\n+BAMCB4AwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDAzARBglghkgB\n+hvhCAQEEBAMCBBAwQAYDVR0gBDkwNzA1BgwrBgEEAbIxAQIBAwIwJTAjBggrBgEF\n+BQcCARYXaHR0cHM6Ly9zZWN0aWdvLmNvbS9DUFMwQwYDVR0fBDwwOjA4oDagNIYy\n+aHR0cDovL2NybC5zZWN0aWdvLmNvbS9TZWN0aWdvUlNBQ29kZVNpZ25pbmdDQS5j\n+cmwwcwYIKwYBBQUHAQEEZzBlMD4GCCsGAQUFBzAChjJodHRwOi8vY3J0LnNlY3Rp\n+Z28uY29tL1NlY3RpZ29SU0FDb2RlU2lnbmluZ0NBLmNydDAjBggrBgEFBQcwAYYX\n+aHR0cDovL29jc3Auc2VjdGlnby5jb20wKwYDVR0RBCQwIoEgam9uYXNAYml0Y29p\n+bmNvcmVjb2Rlc2lnbmluZy5vcmcwDQYJKoZIhvcNAQELBQADggEBAAU59qJzQ2ED\n+aTMIQTsU01zIhZJ/xwQh78i0v2Mnr46RvzYrZOev+btF3SyUYD8veNnbYlY6yEYq\n+Vb+/PQnE3t1xlqR80qiTZCk/Wmxx/qKvQuWeRL5QQgvsCmWBpycQ7PNfwzOWxbPE\n+b0Hb2/VFFZfR9iltkfeInRUrzS96CJGYtm7dMf2JtnXYBcwpn1N8BSMH4nXVyN8g\n+VEE5KyjE7+/awYiSST7+e6Y7FE5AJ4f3FjqnRm+2XetTVqITwMLKZMoV283nSEeH\n+fA4FNAMGz9QeV38ol65NNqFP2vSSgVoPK79orqH9OOW2LSobt2qun+euddJIQeYV\n+CMP90b/2WPc=\n -----END CERTIFICATE-----\n -----BEGIN CERTIFICATE-----\n MIIF3jCCA8agAwIBAgIQAf1tMPyjylGoG7xkDjUDLTANBgkqhkiG9w0BAQwFADCB"
      },
      {
        "sha": "19c506ce5447d4b9099f741fd33f800d101bcf6d",
        "filename": "depends/.gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -8,5 +8,7 @@ i686*\n mips*\n arm*\n aarch64*\n+powerpc*\n riscv32*\n riscv64*\n+s390x*"
      },
      {
        "sha": "5f5247f8818f0e534dcf39ba00afced76622b7b7",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 16,
        "deletions": 13,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,11 +1,15 @@\n .NOTPARALLEL :\n \n+# Pattern rule to print variables, e.g. make print-top_srcdir\n+print-%:\n+\t@echo $* = $($*)\n+\n SOURCES_PATH ?= $(BASEDIR)/sources\n WORK_PATH = $(BASEDIR)/work\n BASE_CACHE ?= $(BASEDIR)/built\n SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n-RAPIDCHECK ?=\n+NO_QR ?=\n NO_WALLET ?=\n NO_ZMQ ?=\n NO_UPNP ?=\n@@ -54,6 +58,11 @@ full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))\n host_os:=$(findstring linux,$(full_host_os))\n host_os+=$(findstring darwin,$(full_host_os))\n host_os+=$(findstring mingw32,$(full_host_os))\n+\n+ifeq (android,$(findstring android,$(full_host_os)))\n+host_os:=android\n+endif\n+\n host_os:=$(strip $(host_os))\n ifeq ($(host_os),)\n host_os=$(full_host_os)\n@@ -91,28 +100,21 @@ $(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n $(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n $(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n \n-qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages)\n+qrencode_packages_$(NO_QR) = $(qrencode_packages)\n+\n+qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages) $(qrencode_packages_)\n+\n wallet_packages_$(NO_WALLET) = $(wallet_packages)\n upnp_packages_$(NO_UPNP) = $(upnp_packages)\n zmq_packages_$(NO_ZMQ) = $(zmq_packages)\n \n-rapidcheck_packages_$(RAPIDCHECK) = $(rapidcheck_packages)\n-\n packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n \n-ifneq ($(qt_packages_),)\n-native_packages += $(qt_native_packages)\n-endif\n-\n ifneq ($(zmq_packages_),)\n packages += $(zmq_packages)\n endif\n \n-ifeq ($(rapidcheck_packages_),)\n-packages += $(rapidcheck_packages)\n-endif\n-\n all_packages = $(packages) $(native_packages)\n \n meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n@@ -149,6 +151,7 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n             -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n             -e 's|@no_qt@|$(NO_QT)|' \\\n+            -e 's|@no_qr@|$(NO_QR)|' \\\n             -e 's|@no_zmq@|$(NO_ZMQ)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\\n@@ -181,7 +184,7 @@ $(host_prefix)/share/config.site: check-packages\n check-packages: check-sources\n \n clean-all: clean\n-\t@rm -rf $(SOURCES_PATH) x86_64* i686* mips* arm* aarch64* riscv32* riscv64*\n+\t@rm -rf $(SOURCES_PATH) x86_64* i686* mips* arm* aarch64* powerpc* riscv32* riscv64* s390x*\n \n clean:\n \t@rm -rf $(WORK_PATH) $(BASE_CACHE) $(BUILD)"
      },
      {
        "sha": "79865ff011575b130392ce910c579bc7ca2a52a9",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 34,
        "deletions": 6,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -12,34 +12,41 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin's configure script by default will ignore the depends output.** In\n+**Bitcoin Core's configure script by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n you must point it at the appropriate `--prefix` directory generated by the\n build. In the above example, a prefix dir named x86_64-w64-mingw32 will be\n created. To use it for Bitcoin:\n \n-    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n+    ./configure --prefix=$PWD/depends/x86_64-w64-mingw32\n \n Common `host-platform-triplets` for cross compilation are:\n \n - `i686-pc-linux-gnu` for Linux 32 bit\n - `x86_64-pc-linux-gnu` for x86 Linux\n - `x86_64-w64-mingw32` for Win64\n-- `x86_64-apple-darwin14` for macOS\n+- `x86_64-apple-darwin16` for macOS\n - `arm-linux-gnueabihf` for Linux ARM 32 bit\n - `aarch64-linux-gnu` for Linux ARM 64 bit\n+- `powerpc64-linux-gnu` for Linux POWER 64-bit (big endian)\n+- `powerpc64le-linux-gnu` for Linux POWER 64-bit (little endian)\n - `riscv32-linux-gnu` for Linux RISC-V 32 bit\n - `riscv64-linux-gnu` for Linux RISC-V 64 bit\n+- `s390x-linux-gnu` for Linux S390X\n+- `armv7a-linux-android` for Android ARM 32 bit\n+- `aarch64-linux-android` for Android ARM 64 bit\n+- `i686-linux-android` for Android x86 32 bit\n+- `x86_64-linux-android` for Android x86 64 bit\n \n-No other options are needed, the paths are automatically configured.\n+The paths are automatically configured and no other options are needed unless targeting [Android](#Android).\n \n ### Install the required dependencies: Ubuntu & Debian\n \n #### For macOS cross compilation\n \n     sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev libz-dev libbz2-dev python3-setuptools\n \n-#### For Win32/Win64 cross compilation\n+#### For Win64 cross compilation\n \n - see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n \n@@ -57,13 +64,21 @@ For linux AARCH64 cross compilation:\n \n     sudo apt-get install g++-aarch64-linux-gnu binutils-aarch64-linux-gnu\n \n+For linux POWER 64-bit cross compilation (there are no packages for 32-bit):\n+\n+    sudo apt-get install g++-powerpc64-linux-gnu binutils-powerpc64-linux-gnu g++-powerpc64le-linux-gnu binutils-powerpc64le-linux-gnu\n+\n For linux RISC-V 64-bit cross compilation (there are no packages for 32-bit):\n \n     sudo apt-get install g++-riscv64-linux-gnu binutils-riscv64-linux-gnu\n \n RISC-V known issue: gcc-7.3.0 and gcc-7.3.1 result in a broken `test_bitcoin` executable (see https://github.com/bitcoin/bitcoin/pull/13543),\n this is apparently fixed in gcc-8.1.0.\n \n+For linux S390X cross compilation:\n+\n+    sudo apt-get install g++-s390x-linux-gnu binutils-s390x-linux-gnu\n+\n ### Dependency Options\n The following can be set when running make: make FOO=bar\n \n@@ -72,11 +87,11 @@ The following can be set when running make: make FOO=bar\n     SDK_PATH: Path where sdk's can be found (used by macOS)\n     FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n     NO_QT: Don't download/build/cache qt and its dependencies\n+    NO_QR: Don't download/build/cache packages needed for enabling qrencode\n     NO_ZMQ: Don't download/build/cache packages needed for enabling zeromq\n     NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n     NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n     DEBUG: disable some optimizations and enable more runtime checking\n-    RAPIDCHECK: build rapidcheck (experimental, requires cmake)\n     HOST_ID_SALT: Optional salt to use when generating host package ids\n     BUILD_ID_SALT: Optional salt to use when generating build package ids\n \n@@ -90,6 +105,19 @@ options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n     download-win: run 'make download-win' to fetch all sources needed for win builds\n     download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n \n+\n+### Android\n+\n+Before proceeding with an Android build one needs to get the [Android SDK](https://developer.android.com/studio) and use the \"SDK Manager\" tool to download the NDK and one or more \"Platform packages\" (these are Android versions and have a corresponding API level).\n+In order to build `ANDROID_API_LEVEL` (API level corresponding to the Android version targeted, e.g. Android 9.0 Pie is 28 and its \"Platform package\" needs to be available) and `ANDROID_TOOLCHAIN_BIN` (path to toolchain binaries depending on the platform the build is being performed on) need to be set.\n+\n+API levels from 24 to 29 have been tested to work.\n+\n+If the build includes Qt, environment variables `ANDROID_SDK` and `ANDROID_NDK` need to be set as well but can otherwise be omitted.\n+This is an example command for a default build with no disabled dependencies:\n+\n+    ANDROID_SDK=/home/user/Android/Sdk ANDROID_NDK=/home/user/Android/Sdk/ndk-bundle make HOST=aarch64-linux-android ANDROID_API_LEVEL=28 ANDROID_TOOLCHAIN_BIN=/home/user/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin\n+\n ### Other documentation\n \n - [description.md](description.md): General description of the depends system"
      },
      {
        "sha": "eb587fca890e939d86d996ef34355db213bde4d8",
        "filename": "depends/builders/darwin.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -10,8 +10,8 @@ build_darwin_SHA256SUM=shasum -a 256\n build_darwin_DOWNLOAD=curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n \n #darwin host on darwin builder. overrides darwin host preferences.\n-darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n-darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++\n+darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(shell xcrun --show-sdk-path)\n+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++ --sysroot $(shell xcrun --show-sdk-path)\n darwin_AR:=$(shell xcrun -f ar)\n darwin_RANLIB:=$(shell xcrun -f ranlib)\n darwin_STRIP:=$(shell xcrun -f strip)"
      },
      {
        "sha": "7f9ebbe31097dff5e381dceffadbf64502ab3d46",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 269,
        "deletions": 80,
        "changes": 349,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2018 Free Software Foundation, Inc.\n+#   Copyright 1992-2019 Free Software Foundation, Inc.\n \n-timestamp='2018-07-06'\n+timestamp='2019-09-10'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2018 Free Software Foundation, Inc.\n+Copyright 1992-2019 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -84,8 +84,6 @@ if test $# != 0; then\n   exit 1\n fi\n \n-trap 'exit 1' 1 2 15\n-\n # CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n # compiler to aid in system detection is discouraged as it requires\n # temporary files to be created and, as you can see below, it is a\n@@ -96,34 +94,38 @@ trap 'exit 1' 1 2 15\n \n # Portable tmp directory creation inspired by the Autoconf team.\n \n-set_cc_for_build='\n-trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n-trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n-: ${TMPDIR=/tmp} ;\n- { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n- { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp 2>/dev/null) ; } ||\n- { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n- { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n-dummy=$tmp/dummy ;\n-tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n-case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n- ,,)    echo \"int x;\" > \"$dummy.c\" ;\n-\tfor c in cc gcc c89 c99 ; do\n-\t  if ($c -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n-\t     CC_FOR_BUILD=\"$c\"; break ;\n-\t  fi ;\n-\tdone ;\n-\tif test x\"$CC_FOR_BUILD\" = x ; then\n-\t  CC_FOR_BUILD=no_compiler_found ;\n-\tfi\n-\t;;\n- ,,*)   CC_FOR_BUILD=$CC ;;\n- ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n-esac ; set_cc_for_build= ;'\n+tmp=\n+# shellcheck disable=SC2172\n+trap 'test -z \"$tmp\" || rm -fr \"$tmp\"' 0 1 2 13 15\n+\n+set_cc_for_build() {\n+    : \"${TMPDIR=/tmp}\"\n+    # shellcheck disable=SC2039\n+    { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+\t{ test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir \"$tmp\" 2>/dev/null) ; } ||\n+\t{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir \"$tmp\" 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n+\t{ echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; }\n+    dummy=$tmp/dummy\n+    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n+\t,,)    echo \"int x;\" > \"$dummy.c\"\n+\t       for driver in cc gcc c89 c99 ; do\n+\t\t   if ($driver -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n+\t\t       CC_FOR_BUILD=\"$driver\"\n+\t\t       break\n+\t\t   fi\n+\t       done\n+\t       if test x\"$CC_FOR_BUILD\" = x ; then\n+\t\t   CC_FOR_BUILD=no_compiler_found\n+\t       fi\n+\t       ;;\n+\t,,*)   CC_FOR_BUILD=$CC ;;\n+\t,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n+    esac\n+}\n \n # This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n # (ghazi@noc.rutgers.edu 1994-08-24)\n-if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+if test -f /.attbin/uname ; then\n \tPATH=$PATH:/.attbin ; export PATH\n fi\n \n@@ -138,7 +140,7 @@ Linux|GNU|GNU/*)\n \t# We could probably try harder.\n \tLIBC=gnu\n \n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tcat <<-EOF > \"$dummy.c\"\n \t#include <features.h>\n \t#if defined(__UCLIBC__)\n@@ -199,7 +201,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t\tos=netbsdelf\n \t\t;;\n \t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n-\t\teval \"$set_cc_for_build\"\n+\t\tset_cc_for_build\n \t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t\t\t| grep -q __ELF__\n \t\tthen\n@@ -260,6 +262,9 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n     *:SolidBSD:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-solidbsd\"$UNAME_RELEASE\"\n \texit ;;\n+    *:OS108:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-os108_\"$UNAME_RELEASE\"\n+\texit ;;\n     macppc:MirBSD:*:*)\n \techo powerpc-unknown-mirbsd\"$UNAME_RELEASE\"\n \texit ;;\n@@ -269,12 +274,15 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n     *:Sortix:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-sortix\n \texit ;;\n+    *:Twizzler:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-twizzler\n+\texit ;;\n     *:Redox:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-redox\n \texit ;;\n     mips:OSF1:*.*)\n-        echo mips-dec-osf1\n-        exit ;;\n+\techo mips-dec-osf1\n+\texit ;;\n     alpha:OSF1:*:*)\n \tcase $UNAME_RELEASE in\n \t*4.0)\n@@ -389,7 +397,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo i386-pc-auroraux\"$UNAME_RELEASE\"\n \texit ;;\n     i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tSUN_ARCH=i386\n \t# If there is a compiler, see if it is configured for 64-bit objects.\n \t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n@@ -482,7 +490,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo clipper-intergraph-clix\"$UNAME_RELEASE\"\n \texit ;;\n     mips:*:*:UMIPS | mips:*:*:RISCos)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n #ifdef __cplusplus\n #include <stdio.h>  /* for printf() prototype */\n@@ -579,7 +587,7 @@ EOF\n \texit ;;\n     *:AIX:2:3)\n \tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n-\t\teval \"$set_cc_for_build\"\n+\t\tset_cc_for_build\n \t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n \t\t#include <sys/systemcfg.h>\n \n@@ -660,7 +668,7 @@ EOF\n \t\t    esac\n \t\tfi\n \t\tif [ \"$HP_ARCH\" = \"\" ]; then\n-\t\t    eval \"$set_cc_for_build\"\n+\t\t    set_cc_for_build\n \t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n \n \t\t#define _HPUX_SOURCE\n@@ -700,7 +708,7 @@ EOF\n \tesac\n \tif [ \"$HP_ARCH\" = hppa2.0w ]\n \tthen\n-\t    eval \"$set_cc_for_build\"\n+\t    set_cc_for_build\n \n \t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n \t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n@@ -726,7 +734,7 @@ EOF\n \techo ia64-hp-hpux\"$HPUX_REV\"\n \texit ;;\n     3050*:HI-UX:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#include <unistd.h>\n \tint\n@@ -840,6 +848,17 @@ EOF\n     *:BSD/OS:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-bsdi\"$UNAME_RELEASE\"\n \texit ;;\n+    arm:FreeBSD:*:*)\n+\tUNAME_PROCESSOR=`uname -p`\n+\tset_cc_for_build\n+\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t    | grep -q __ARM_PCS_VFP\n+\tthen\n+\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabi\n+\telse\n+\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabihf\n+\tfi\n+\texit ;;\n     *:FreeBSD:*:*)\n \tUNAME_PROCESSOR=`/usr/bin/uname -p`\n \tcase \"$UNAME_PROCESSOR\" in\n@@ -881,7 +900,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-pc-uwin\n \texit ;;\n     amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n-\techo x86_64-unknown-cygwin\n+\techo x86_64-pc-cygwin\n \texit ;;\n     prep*:SunOS:5.*:*)\n \techo powerpcle-unknown-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n@@ -922,7 +941,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     arm*:Linux:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t    | grep -q __ARM_EABI__\n \tthen\n@@ -971,23 +990,51 @@ EOF\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     mips:Linux:*:* | mips64:Linux:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n+\tIS_GLIBC=0\n+\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#undef CPU\n-\t#undef ${UNAME_MACHINE}\n-\t#undef ${UNAME_MACHINE}el\n+\t#undef mips\n+\t#undef mipsel\n+\t#undef mips64\n+\t#undef mips64el\n+\t#if ${IS_GLIBC} && defined(_ABI64)\n+\tLIBCABI=gnuabi64\n+\t#else\n+\t#if ${IS_GLIBC} && defined(_ABIN32)\n+\tLIBCABI=gnuabin32\n+\t#else\n+\tLIBCABI=${LIBC}\n+\t#endif\n+\t#endif\n+\n+\t#if ${IS_GLIBC} && defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n+\tCPU=mipsisa64r6\n+\t#else\n+\t#if ${IS_GLIBC} && !defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n+\tCPU=mipsisa32r6\n+\t#else\n+\t#if defined(__mips64)\n+\tCPU=mips64\n+\t#else\n+\tCPU=mips\n+\t#endif\n+\t#endif\n+\t#endif\n+\n \t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n-\tCPU=${UNAME_MACHINE}el\n+\tMIPS_ENDIAN=el\n \t#else\n \t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n-\tCPU=${UNAME_MACHINE}\n+\tMIPS_ENDIAN=\n \t#else\n-\tCPU=\n+\tMIPS_ENDIAN=\n \t#endif\n \t#endif\n EOF\n-\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU'`\"\n-\ttest \"x$CPU\" != x && { echo \"$CPU-unknown-linux-$LIBC\"; exit; }\n+\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\"\n+\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n \t;;\n     mips64el:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n@@ -1100,7 +1147,7 @@ EOF\n \t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n \t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n \tesac\n-\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}{$UNAME_VERSION}\"\n+\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\"\n \texit ;;\n     i*86:*:3.2:*)\n \tif test -f /usr/options/cb.name; then\n@@ -1284,38 +1331,39 @@ EOF\n \techo \"$UNAME_MACHINE\"-apple-rhapsody\"$UNAME_RELEASE\"\n \texit ;;\n     *:Darwin:*:*)\n-\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n-\teval \"$set_cc_for_build\"\n-\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n-\t    UNAME_PROCESSOR=powerpc\n+\tUNAME_PROCESSOR=`uname -p`\n+\tcase $UNAME_PROCESSOR in\n+\t    unknown) UNAME_PROCESSOR=powerpc ;;\n+\tesac\n+\tif command -v xcode-select > /dev/null 2> /dev/null && \\\n+\t\t! xcode-select --print-path > /dev/null 2> /dev/null ; then\n+\t    # Avoid executing cc if there is no toolchain installed as\n+\t    # cc will be a stub that puts up a graphical alert\n+\t    # prompting the user to install developer tools.\n+\t    CC_FOR_BUILD=no_compiler_found\n+\telse\n+\t    set_cc_for_build\n \tfi\n-\tif test \"`echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'`\" -le 10 ; then\n-\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n-\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\t       grep IS_64BIT_ARCH >/dev/null\n-\t\tthen\n-\t\t    case $UNAME_PROCESSOR in\n-\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n-\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n-\t\t    esac\n-\t\tfi\n-\t\t# On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n-\t\tif (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n-\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\t       grep IS_PPC >/dev/null\n-\t\tthen\n-\t\t    UNAME_PROCESSOR=powerpc\n-\t\tfi\n+\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t   grep IS_64BIT_ARCH >/dev/null\n+\t    then\n+\t\tcase $UNAME_PROCESSOR in\n+\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n+\t\t    powerpc) UNAME_PROCESSOR=powerpc64 ;;\n+\t\tesac\n+\t    fi\n+\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n+\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n+\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t   grep IS_PPC >/dev/null\n+\t    then\n+\t\tUNAME_PROCESSOR=powerpc\n \t    fi\n \telif test \"$UNAME_PROCESSOR\" = i386 ; then\n-\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n-\t    # that puts up a graphical alert prompting to install\n-\t    # developer tools.  Any system running Mac OS X 10.7 or\n-\t    # later (Darwin 11 and later) is required to have a 64-bit\n-\t    # processor. This is not true of the ARM version of Darwin\n-\t    # that Apple uses in portable devices.\n-\t    UNAME_PROCESSOR=x86_64\n+\t    # uname -m returns i386 or x86_64\n+\t    UNAME_PROCESSOR=$UNAME_MACHINE\n \tfi\n \techo \"$UNAME_PROCESSOR\"-apple-darwin\"$UNAME_RELEASE\"\n \texit ;;\n@@ -1358,6 +1406,7 @@ EOF\n \t# \"uname -m\" is not consistent, so use $cputype instead. 386\n \t# is converted to i386 for consistency with other x86\n \t# operating systems.\n+\t# shellcheck disable=SC2154\n \tif test \"$cputype\" = 386; then\n \t    UNAME_MACHINE=i386\n \telse\n@@ -1414,8 +1463,148 @@ EOF\n     amd64:Isilon\\ OneFS:*:*)\n \techo x86_64-unknown-onefs\n \texit ;;\n+    *:Unleashed:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-unleashed\"$UNAME_RELEASE\"\n+\texit ;;\n esac\n \n+# No uname command or uname output not recognized.\n+set_cc_for_build\n+cat > \"$dummy.c\" <<EOF\n+#ifdef _SEQUENT_\n+#include <sys/types.h>\n+#include <sys/utsname.h>\n+#endif\n+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n+#if defined (vax) || defined (__vax) || defined (__vax__) || defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n+#include <signal.h>\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+#include <sys/utsname.h>\n+#endif\n+#endif\n+#endif\n+main ()\n+{\n+#if defined (sony)\n+#if defined (MIPSEB)\n+  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n+     I don't know....  */\n+  printf (\"mips-sony-bsd\\n\"); exit (0);\n+#else\n+#include <sys/param.h>\n+  printf (\"m68k-sony-newsos%s\\n\",\n+#ifdef NEWSOS4\n+  \"4\"\n+#else\n+  \"\"\n+#endif\n+  ); exit (0);\n+#endif\n+#endif\n+\n+#if defined (NeXT)\n+#if !defined (__ARCHITECTURE__)\n+#define __ARCHITECTURE__ \"m68k\"\n+#endif\n+  int version;\n+  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n+  if (version < 4)\n+    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n+  else\n+    printf (\"%s-next-openstep%d\\n\", __ARCHITECTURE__, version);\n+  exit (0);\n+#endif\n+\n+#if defined (MULTIMAX) || defined (n16)\n+#if defined (UMAXV)\n+  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n+#else\n+#if defined (CMU)\n+  printf (\"ns32k-encore-mach\\n\"); exit (0);\n+#else\n+  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined (__386BSD__)\n+  printf (\"i386-pc-bsd\\n\"); exit (0);\n+#endif\n+\n+#if defined (sequent)\n+#if defined (i386)\n+  printf (\"i386-sequent-dynix\\n\"); exit (0);\n+#endif\n+#if defined (ns32000)\n+  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n+#endif\n+#endif\n+\n+#if defined (_SEQUENT_)\n+  struct utsname un;\n+\n+  uname(&un);\n+  if (strncmp(un.version, \"V2\", 2) == 0) {\n+    printf (\"i386-sequent-ptx2\\n\"); exit (0);\n+  }\n+  if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n+    printf (\"i386-sequent-ptx1\\n\"); exit (0);\n+  }\n+  printf (\"i386-sequent-ptx\\n\"); exit (0);\n+#endif\n+\n+#if defined (vax)\n+#if !defined (ultrix)\n+#include <sys/param.h>\n+#if defined (BSD)\n+#if BSD == 43\n+  printf (\"vax-dec-bsd4.3\\n\"); exit (0);\n+#else\n+#if BSD == 199006\n+  printf (\"vax-dec-bsd4.3reno\\n\"); exit (0);\n+#else\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n+#endif\n+#endif\n+#else\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n+#endif\n+#else\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+  struct utsname un;\n+  uname (&un);\n+  printf (\"vax-dec-ultrix%s\\n\", un.release); exit (0);\n+#else\n+  printf (\"vax-dec-ultrix\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n+#if defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+  struct utsname *un;\n+  uname (&un);\n+  printf (\"mips-dec-ultrix%s\\n\", un.release); exit (0);\n+#else\n+  printf (\"mips-dec-ultrix\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined (alliant) && defined (i860)\n+  printf (\"i860-alliant-bsd\\n\"); exit (0);\n+#endif\n+\n+  exit (1);\n+}\n+EOF\n+\n+$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null && SYSTEM_NAME=`$dummy` &&\n+\t{ echo \"$SYSTEM_NAME\"; exit; }\n+\n+# Apollos put the system type in the environment.\n+test -d /usr/apollo && { echo \"$ISP-apollo-$SYSTYPE\"; exit; }\n+\n echo \"$0: unable to guess system type\" >&2\n \n case \"$UNAME_MACHINE:$UNAME_SYSTEM\" in"
      },
      {
        "sha": "fb9bf713cc671e7a738bada7dd67c4e99d8d2a66",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -16,10 +16,10 @@ fi\n if test -z $with_qt_bindir && test -z \"@no_qt@\"; then\n   with_qt_bindir=$depends_prefix/native/bin\n fi\n-if test -z $with_protoc_bindir && test -z \"@no_qt@\"; then\n-  with_protoc_bindir=$depends_prefix/native/bin\n-fi\n \n+if test -z $with_qrencode && test -n \"@no_qr@\"; then\n+  with_qrencode=no\n+fi\n \n if test -z $enable_wallet && test -n \"@no_wallet@\"; then\n   enable_wallet=no\n@@ -59,7 +59,7 @@ PKG_CONFIG=\"`which pkg-config` --static\"\n # avoid ruining the cache. Sigh.\n export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig:$depends_prefix/lib/pkgconfig\n if test -z \"@allow_host_packages@\"; then\n-  export PKGCONFIG_LIBDIR=\n+  export PKG_CONFIG_LIBDIR=$depends_prefix/lib/pkgconfig\n fi\n \n CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\""
      },
      {
        "sha": "a318a46868500fbeea993e693e32701041ffad1b",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 565,
        "deletions": 580,
        "changes": 1145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n-#   Copyright 1992-2018 Free Software Foundation, Inc.\n+#   Copyright 1992-2019 Free Software Foundation, Inc.\n \n-timestamp='2018-07-03'\n+timestamp='2019-06-30'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -67,7 +67,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright 1992-2018 Free Software Foundation, Inc.\n+Copyright 1992-2019 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -89,7 +89,7 @@ while test $# -gt 0 ; do\n     - )\t# Use stdin as input.\n        break ;;\n     -* )\n-       echo \"$me: invalid option $1$help\"\n+       echo \"$me: invalid option $1$help\" >&2\n        exit 1 ;;\n \n     *local*)\n@@ -111,7 +111,8 @@ case $# in\n esac\n \n # Split fields of configuration type\n-IFS=\"-\" read -r field1 field2 field3 field4 <<EOF\n+# shellcheck disable=SC2162\n+IFS=\"-\" read field1 field2 field3 field4 <<EOF\n $1\n EOF\n \n@@ -149,29 +150,39 @@ case $1 in\n \t\tesac\n \t\t;;\n \t*-*)\n-\t\t# Second component is usually, but not always the OS\n-\t\tcase $field2 in\n-\t\t\t# Prevent following clause from handling this valid os\n-\t\t\tsun*os*)\n-\t\t\t\tbasic_machine=$field1\n-\t\t\t\tos=$field2\n-\t\t\t\t;;\n-\t\t\t# Manufacturers\n-\t\t\tdec* | mips* | sequent* | encore* | pc532* | sgi* | sony* \\\n-\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n-\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n-\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* | hitachi* \\\n-\t\t\t| c[123]* | convex* | sun | crds | omron* | dg | ultra | tti* \\\n-\t\t\t| harris | dolphin | highlevel | gould | cbm | ns | masscomp \\\n-\t\t\t| apple | axis | knuth | cray | microblaze* \\\n-\t\t\t| sim | cisco | oki | wec | wrs | winbond)\n-\t\t\t\tbasic_machine=$field1-$field2\n+\t\t# A lone config we happen to match not fitting any pattern\n+\t\tcase $field1-$field2 in\n+\t\t\tdecstation-3100)\n+\t\t\t\tbasic_machine=mips-dec\n \t\t\t\tos=\n \t\t\t\t;;\n-\t\t\t*)\n-\t\t\t\tbasic_machine=$field1\n-\t\t\t\tos=$field2\n-\t\t\t\t;;\n+\t\t\t*-*)\n+\t\t\t\t# Second component is usually, but not always the OS\n+\t\t\t\tcase $field2 in\n+\t\t\t\t\t# Prevent following clause from handling this valid os\n+\t\t\t\t\tsun*os*)\n+\t\t\t\t\t\tbasic_machine=$field1\n+\t\t\t\t\t\tos=$field2\n+\t\t\t\t\t\t;;\n+\t\t\t\t\t# Manufacturers\n+\t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n+\t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n+\t\t\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n+\t\t\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* \\\n+\t\t\t\t\t| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \\\n+\t\t\t\t\t| ultra | tti* | harris | dolphin | highlevel | gould \\\n+\t\t\t\t\t| cbm | ns | masscomp | apple | axis | knuth | cray \\\n+\t\t\t\t\t| microblaze* | sim | cisco \\\n+\t\t\t\t\t| oki | wec | wrs | winbond)\n+\t\t\t\t\t\tbasic_machine=$field1-$field2\n+\t\t\t\t\t\tos=\n+\t\t\t\t\t\t;;\n+\t\t\t\t\t*)\n+\t\t\t\t\t\tbasic_machine=$field1\n+\t\t\t\t\t\tos=$field2\n+\t\t\t\t\t\t;;\n+\t\t\t\tesac\n+\t\t\t;;\n \t\tesac\n \t\t;;\n \t*)\n@@ -190,6 +201,14 @@ case $1 in\n \t\t\t\tbasic_machine=m68010-adobe\n \t\t\t\tos=scout\n \t\t\t\t;;\n+\t\t\talliant)\n+\t\t\t\tbasic_machine=fx80-alliant\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\taltos | altos3068)\n+\t\t\t\tbasic_machine=m68k-altos\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tam29k)\n \t\t\t\tbasic_machine=a29k-none\n \t\t\t\tos=bsd\n@@ -198,6 +217,10 @@ case $1 in\n \t\t\t\tbasic_machine=580-amdahl\n \t\t\t\tos=sysv\n \t\t\t\t;;\n+\t\t\tamiga)\n+\t\t\t\tbasic_machine=m68k-unknown\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tamigaos | amigados)\n \t\t\t\tbasic_machine=m68k-unknown\n \t\t\t\tos=amigaos\n@@ -234,13 +257,41 @@ case $1 in\n \t\t\t\tbasic_machine=arm-unknown\n \t\t\t\tos=cegcc\n \t\t\t\t;;\n+\t\t\tconvex-c1)\n+\t\t\t\tbasic_machine=c1-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c2)\n+\t\t\t\tbasic_machine=c2-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c32)\n+\t\t\t\tbasic_machine=c32-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c34)\n+\t\t\t\tbasic_machine=c34-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c38)\n+\t\t\t\tbasic_machine=c38-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n \t\t\tcray)\n \t\t\t\tbasic_machine=j90-cray\n \t\t\t\tos=unicos\n \t\t\t\t;;\n-\t\t\tcraynv)\n-\t\t\t\tbasic_machine=craynv-cray\n-\t\t\t\tos=unicosmp\n+\t\t\tcrds | unos)\n+\t\t\t\tbasic_machine=m68k-crds\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\tda30)\n+\t\t\t\tbasic_machine=m68k-da30\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\tdecstation | pmax | pmin | dec3100 | decstatn)\n+\t\t\t\tbasic_machine=mips-dec\n+\t\t\t\tos=\n \t\t\t\t;;\n \t\t\tdelta88)\n \t\t\t\tbasic_machine=m88k-motorola\n@@ -286,13 +337,13 @@ case $1 in\n \t\t\t\tbasic_machine=m88k-harris\n \t\t\t\tos=sysv3\n \t\t\t\t;;\n-\t\t\thp300bsd)\n+\t\t\thp300 | hp300hpux)\n \t\t\t\tbasic_machine=m68k-hp\n-\t\t\t\tos=bsd\n+\t\t\t\tos=hpux\n \t\t\t\t;;\n-\t\t\thp300hpux)\n+\t\t\thp300bsd)\n \t\t\t\tbasic_machine=m68k-hp\n-\t\t\t\tos=hpux\n+\t\t\t\tos=bsd\n \t\t\t\t;;\n \t\t\thppaosf)\n \t\t\t\tbasic_machine=hppa1.1-hp\n@@ -306,10 +357,6 @@ case $1 in\n \t\t\t\tbasic_machine=i386-mach\n \t\t\t\tos=mach\n \t\t\t\t;;\n-\t\t\tvsta)\n-\t\t\t\tbasic_machine=i386-unknown\n-\t\t\t\tos=vsta\n-\t\t\t\t;;\n \t\t\tisi68 | isi)\n \t\t\t\tbasic_machine=m68k-isi\n \t\t\t\tos=sysv\n@@ -371,7 +418,7 @@ case $1 in\n \t\t\t\tos=sysv4\n \t\t\t\t;;\n \t\t\tnetbsd386)\n-\t\t\t\tbasic_machine=i386-unknown\n+\t\t\t\tbasic_machine=i386-pc\n \t\t\t\tos=netbsd\n \t\t\t\t;;\n \t\t\tnetwinder)\n@@ -454,14 +501,26 @@ case $1 in\n \t\t\t\tbasic_machine=mips-sei\n \t\t\t\tos=seiux\n \t\t\t\t;;\n+\t\t\tsequent)\n+\t\t\t\tbasic_machine=i386-sequent\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsps7)\n \t\t\t\tbasic_machine=m68k-bull\n \t\t\t\tos=sysv2\n \t\t\t\t;;\n+\t\t\tst2000)\n+\t\t\t\tbasic_machine=m68k-tandem\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tstratus)\n \t\t\t\tbasic_machine=i860-stratus\n \t\t\t\tos=sysv4\n \t\t\t\t;;\n+\t\t\tsun2)\n+\t\t\t\tbasic_machine=m68000-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun2os3)\n \t\t\t\tbasic_machine=m68000-sun\n \t\t\t\tos=sunos3\n@@ -470,6 +529,10 @@ case $1 in\n \t\t\t\tbasic_machine=m68000-sun\n \t\t\t\tos=sunos4\n \t\t\t\t;;\n+\t\t\tsun3)\n+\t\t\t\tbasic_machine=m68k-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun3os3)\n \t\t\t\tbasic_machine=m68k-sun\n \t\t\t\tos=sunos3\n@@ -478,6 +541,10 @@ case $1 in\n \t\t\t\tbasic_machine=m68k-sun\n \t\t\t\tos=sunos4\n \t\t\t\t;;\n+\t\t\tsun4)\n+\t\t\t\tbasic_machine=sparc-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun4os3)\n \t\t\t\tbasic_machine=sparc-sun\n \t\t\t\tos=sunos3\n@@ -490,6 +557,10 @@ case $1 in\n \t\t\t\tbasic_machine=sparc-sun\n \t\t\t\tos=solaris2\n \t\t\t\t;;\n+\t\t\tsun386 | sun386i | roadrunner)\n+\t\t\t\tbasic_machine=i386-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsv1)\n \t\t\t\tbasic_machine=sv1-cray\n \t\t\t\tos=unicos\n@@ -534,6 +605,10 @@ case $1 in\n \t\t\t\tbasic_machine=vax-dec\n \t\t\t\tos=vms\n \t\t\t\t;;\n+\t\t\tvsta)\n+\t\t\t\tbasic_machine=i386-pc\n+\t\t\t\tos=vsta\n+\t\t\t\t;;\n \t\t\tvxworks960)\n \t\t\t\tbasic_machine=i960-wrs\n \t\t\t\tos=vxworks\n@@ -562,417 +637,162 @@ case $1 in\n \t\t;;\n esac\n \n-# Decode aliases for certain CPU-COMPANY combinations.\n+# Decode 1-component or ad-hoc basic machines\n case $basic_machine in\n-\t# Recognize the basic CPU types without company name.\n-\t# Some are omitted here because they have special meanings below.\n-\t1750a | 580 \\\n-\t| a29k \\\n-\t| aarch64 | aarch64_be \\\n-\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n-\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n-\t| am33_2.0 \\\n-\t| arc | arceb \\\n-\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv6m | armv[78][arm] \\\n-\t| avr | avr32 \\\n-\t| ba \\\n-\t| be32 | be64 \\\n-\t| bfin \\\n-\t| c4x | c8051 | clipper | csky \\\n-\t| d10v | d30v | dlx | dsp16xx \\\n-\t| e2k | epiphany \\\n-\t| fido | fr30 | frv | ft32 \\\n-\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n-\t| hexagon \\\n-\t| i370 | i860 | i960 | ia16 | ia64 \\\n-\t| ip2k | iq2000 \\\n-\t| k1om \\\n-\t| le32 | le64 \\\n-\t| lm32 \\\n-\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n-\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n-\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n-\t| mips16 \\\n-\t| mips64 | mips64el \\\n-\t| mips64octeon | mips64octeonel \\\n-\t| mips64orion | mips64orionel \\\n-\t| mips64r5900 | mips64r5900el \\\n-\t| mips64vr | mips64vrel \\\n-\t| mips64vr4100 | mips64vr4100el \\\n-\t| mips64vr4300 | mips64vr4300el \\\n-\t| mips64vr5000 | mips64vr5000el \\\n-\t| mips64vr5900 | mips64vr5900el \\\n-\t| mipsisa32 | mipsisa32el \\\n-\t| mipsisa32r2 | mipsisa32r2el \\\n-\t| mipsisa32r6 | mipsisa32r6el \\\n-\t| mipsisa64 | mipsisa64el \\\n-\t| mipsisa64r2 | mipsisa64r2el \\\n-\t| mipsisa64r6 | mipsisa64r6el \\\n-\t| mipsisa64sb1 | mipsisa64sb1el \\\n-\t| mipsisa64sr71k | mipsisa64sr71kel \\\n-\t| mipsr5900 | mipsr5900el \\\n-\t| mipstx39 | mipstx39el \\\n-\t| mn10200 | mn10300 \\\n-\t| moxie \\\n-\t| mt \\\n-\t| msp430 \\\n-\t| nds32 | nds32le | nds32be \\\n-\t| nfp \\\n-\t| nios | nios2 | nios2eb | nios2el \\\n-\t| ns16k | ns32k \\\n-\t| open8 | or1k | or1knd | or32 \\\n-\t| pdp10 | pj | pjl \\\n-\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n-\t| pru \\\n-\t| pyramid \\\n-\t| riscv | riscv32 | riscv64 \\\n-\t| rl78 | rx \\\n-\t| score \\\n-\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n-\t| sh64 | sh64le \\\n-\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n-\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n-\t| spu \\\n-\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n-\t| ubicom32 \\\n-\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n-\t| visium \\\n-\t| wasm32 \\\n-\t| x86 | xc16x | xstormy16 | xtensa \\\n-\t| z8k | z80)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n-\tc54x)\n-\t\tbasic_machine=tic54x-unknown\n-\t\t;;\n-\tc55x)\n-\t\tbasic_machine=tic55x-unknown\n-\t\t;;\n-\tc6x)\n-\t\tbasic_machine=tic6x-unknown\n-\t\t;;\n-\tleon|leon[3-9])\n-\t\tbasic_machine=sparc-$basic_machine\n-\t\t;;\n-\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=${os:-none}\n-\t\t;;\n-\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65)\n+\t# Here we handle the default manufacturer of certain CPU types.  It is in\n+\t# some cases the only manufacturer, in others, it is the most popular.\n+\tw89k)\n+\t\tcpu=hppa1.1\n+\t\tvendor=winbond\n \t\t;;\n-\tm9s12z | m68hcs12z | hcs12z | s12z)\n-\t\tbasic_machine=s12z-unknown\n-\t\tos=${os:-none}\n+\top50n)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n \t\t;;\n-\tms1)\n-\t\tbasic_machine=mt-unknown\n+\top60c)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n \t\t;;\n-\tstrongarm | thumb | xscale)\n-\t\tbasic_machine=arm-unknown\n+\tibm*)\n+\t\tcpu=i370\n+\t\tvendor=ibm\n \t\t;;\n-\txgate)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=${os:-none}\n+\torion105)\n+\t\tcpu=clipper\n+\t\tvendor=highlevel\n \t\t;;\n-\txscaleeb)\n-\t\tbasic_machine=armeb-unknown\n+\tmac | mpw | mac-mpw)\n+\t\tcpu=m68k\n+\t\tvendor=apple\n \t\t;;\n-\n-\txscaleel)\n-\t\tbasic_machine=armel-unknown\n+\tpmac | pmac-mpw)\n+\t\tcpu=powerpc\n+\t\tvendor=apple\n \t\t;;\n \n-\t# We use `pc' rather than `unknown'\n-\t# because (1) that's what they normally are, and\n-\t# (2) the word \"unknown\" tends to confuse beginning users.\n-\ti*86 | x86_64)\n-\t  basic_machine=$basic_machine-pc\n-\t  ;;\n-\t# Recognize the basic CPU types with company name.\n-\t580-* \\\n-\t| a29k-* \\\n-\t| aarch64-* | aarch64_be-* \\\n-\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n-\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n-\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n-\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n-\t| avr-* | avr32-* \\\n-\t| ba-* \\\n-\t| be32-* | be64-* \\\n-\t| bfin-* | bs2000-* \\\n-\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n-\t| c8051-* | clipper-* | craynv-* | csky-* | cydra-* \\\n-\t| d10v-* | d30v-* | dlx-* \\\n-\t| e2k-* | elxsi-* \\\n-\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n-\t| h8300-* | h8500-* \\\n-\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n-\t| hexagon-* \\\n-\t| i*86-* | i860-* | i960-* | ia16-* | ia64-* \\\n-\t| ip2k-* | iq2000-* \\\n-\t| k1om-* \\\n-\t| le32-* | le64-* \\\n-\t| lm32-* \\\n-\t| m32c-* | m32r-* | m32rle-* \\\n-\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n-\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n-\t| microblaze-* | microblazeel-* \\\n-\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n-\t| mips16-* \\\n-\t| mips64-* | mips64el-* \\\n-\t| mips64octeon-* | mips64octeonel-* \\\n-\t| mips64orion-* | mips64orionel-* \\\n-\t| mips64r5900-* | mips64r5900el-* \\\n-\t| mips64vr-* | mips64vrel-* \\\n-\t| mips64vr4100-* | mips64vr4100el-* \\\n-\t| mips64vr4300-* | mips64vr4300el-* \\\n-\t| mips64vr5000-* | mips64vr5000el-* \\\n-\t| mips64vr5900-* | mips64vr5900el-* \\\n-\t| mipsisa32-* | mipsisa32el-* \\\n-\t| mipsisa32r2-* | mipsisa32r2el-* \\\n-\t| mipsisa32r6-* | mipsisa32r6el-* \\\n-\t| mipsisa64-* | mipsisa64el-* \\\n-\t| mipsisa64r2-* | mipsisa64r2el-* \\\n-\t| mipsisa64r6-* | mipsisa64r6el-* \\\n-\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n-\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n-\t| mipsr5900-* | mipsr5900el-* \\\n-\t| mipstx39-* | mipstx39el-* \\\n-\t| mmix-* \\\n-\t| mt-* \\\n-\t| msp430-* \\\n-\t| nds32-* | nds32le-* | nds32be-* \\\n-\t| nfp-* \\\n-\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n-\t| none-* | np1-* | ns16k-* | ns32k-* \\\n-\t| open8-* \\\n-\t| or1k*-* \\\n-\t| orion-* \\\n-\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n-\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n-\t| pru-* \\\n-\t| pyramid-* \\\n-\t| riscv-* | riscv32-* | riscv64-* \\\n-\t| rl78-* | romp-* | rs6000-* | rx-* \\\n-\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n-\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n-\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n-\t| sparclite-* \\\n-\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n-\t| tahoe-* \\\n-\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n-\t| tile*-* \\\n-\t| tron-* \\\n-\t| ubicom32-* \\\n-\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n-\t| vax-* \\\n-\t| visium-* \\\n-\t| wasm32-* \\\n-\t| we32k-* \\\n-\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n-\t| xstormy16-* | xtensa*-* \\\n-\t| ymp-* \\\n-\t| z8k-* | z80-*)\n-\t\t;;\n-\t# Recognize the basic CPU types without company name, with glob match.\n-\txtensa*)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n \t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n-\t\tbasic_machine=m68000-att\n+\t\tcpu=m68000\n+\t\tvendor=att\n \t\t;;\n \t3b*)\n-\t\tbasic_machine=we32k-att\n-\t\t;;\n-\tabacus)\n-\t\tbasic_machine=abacus-unknown\n-\t\t;;\n-\talliant | fx80)\n-\t\tbasic_machine=fx80-alliant\n-\t\t;;\n-\taltos | altos3068)\n-\t\tbasic_machine=m68k-altos\n-\t\t;;\n-\tamd64)\n-\t\tbasic_machine=x86_64-pc\n-\t\t;;\n-\tamd64-*)\n-\t\tbasic_machine=x86_64-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tamiga | amiga-*)\n-\t\tbasic_machine=m68k-unknown\n-\t\t;;\n-\tasmjs)\n-\t\tbasic_machine=asmjs-unknown\n-\t\t;;\n-\tblackfin-*)\n-\t\tbasic_machine=bfin-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n+\t\tcpu=we32k\n+\t\tvendor=att\n \t\t;;\n \tbluegene*)\n-\t\tbasic_machine=powerpc-ibm\n+\t\tcpu=powerpc\n+\t\tvendor=ibm\n \t\tos=cnk\n \t\t;;\n-\tc54x-*)\n-\t\tbasic_machine=tic54x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc55x-*)\n-\t\tbasic_machine=tic55x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc6x-*)\n-\t\tbasic_machine=tic6x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc90)\n-\t\tbasic_machine=c90-cray\n-\t\tos=${os:-unicos}\n-\t\t;;\n-\tconvex-c1)\n-\t\tbasic_machine=c1-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c2)\n-\t\tbasic_machine=c2-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c32)\n-\t\tbasic_machine=c32-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c34)\n-\t\tbasic_machine=c34-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c38)\n-\t\tbasic_machine=c38-convex\n-\t\tos=bsd\n-\t\t;;\n-\tcr16 | cr16-*)\n-\t\tbasic_machine=cr16-unknown\n-\t\tos=${os:-elf}\n-\t\t;;\n-\tcrds | unos)\n-\t\tbasic_machine=m68k-crds\n-\t\t;;\n-\tcrisv32 | crisv32-* | etraxfs*)\n-\t\tbasic_machine=crisv32-axis\n-\t\t;;\n-\tcris | cris-* | etrax*)\n-\t\tbasic_machine=cris-axis\n-\t\t;;\n-\tcrx)\n-\t\tbasic_machine=crx-unknown\n-\t\tos=${os:-elf}\n-\t\t;;\n-\tda30 | da30-*)\n-\t\tbasic_machine=m68k-da30\n-\t\t;;\n-\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n-\t\tbasic_machine=mips-dec\n-\t\t;;\n \tdecsystem10* | dec10*)\n-\t\tbasic_machine=pdp10-dec\n+\t\tcpu=pdp10\n+\t\tvendor=dec\n \t\tos=tops10\n \t\t;;\n \tdecsystem20* | dec20*)\n-\t\tbasic_machine=pdp10-dec\n+\t\tcpu=pdp10\n+\t\tvendor=dec\n \t\tos=tops20\n \t\t;;\n \tdelta | 3300 | motorola-3300 | motorola-delta \\\n \t      | 3300-motorola | delta-motorola)\n-\t\tbasic_machine=m68k-motorola\n-\t\t;;\n-\tdpx20 | dpx20-*)\n-\t\tbasic_machine=rs6000-bull\n-\t\tos=${os:-bosx}\n+\t\tcpu=m68k\n+\t\tvendor=motorola\n \t\t;;\n \tdpx2*)\n-\t\tbasic_machine=m68k-bull\n+\t\tcpu=m68k\n+\t\tvendor=bull\n \t\tos=sysv3\n \t\t;;\n-\te500v[12])\n-\t\tbasic_machine=powerpc-unknown\n-\t\tos=$os\"spe\"\n-\t\t;;\n-\te500v[12]-*)\n-\t\tbasic_machine=powerpc-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=$os\"spe\"\n-\t\t;;\n \tencore | umax | mmax)\n-\t\tbasic_machine=ns32k-encore\n+\t\tcpu=ns32k\n+\t\tvendor=encore\n \t\t;;\n \telxsi)\n-\t\tbasic_machine=elxsi-elxsi\n+\t\tcpu=elxsi\n+\t\tvendor=elxsi\n \t\tos=${os:-bsd}\n \t\t;;\n \tfx2800)\n-\t\tbasic_machine=i860-alliant\n+\t\tcpu=i860\n+\t\tvendor=alliant\n \t\t;;\n \tgenix)\n-\t\tbasic_machine=ns32k-ns\n+\t\tcpu=ns32k\n+\t\tvendor=ns\n \t\t;;\n \th3050r* | hiux*)\n-\t\tbasic_machine=hppa1.1-hitachi\n+\t\tcpu=hppa1.1\n+\t\tvendor=hitachi\n \t\tos=hiuxwe2\n \t\t;;\n-\thp300-*)\n-\t\tbasic_machine=m68k-hp\n-\t\t;;\n \thp3k9[0-9][0-9] | hp9[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \thp9k2[0-9][0-9] | hp9k31[0-9])\n-\t\tbasic_machine=m68000-hp\n+\t\tcpu=m68000\n+\t\tvendor=hp\n \t\t;;\n \thp9k3[2-9][0-9])\n-\t\tbasic_machine=m68k-hp\n+\t\tcpu=m68k\n+\t\tvendor=hp\n \t\t;;\n \thp9k6[0-9][0-9] | hp6[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \thp9k7[0-79][0-9] | hp7[0-79][0-9])\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k78[0-9] | hp78[0-9])\n \t\t# FIXME: really hppa2.0-hp\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n \t\t# FIXME: really hppa2.0-hp\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[0-9][13679] | hp8[0-9][13679])\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[0-9][0-9] | hp8[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n-\t\t;;\n-\ti370-ibm* | ibm*)\n-\t\tbasic_machine=i370-ibm\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \ti*86v32)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv32\n \t\t;;\n \ti*86v4*)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv4\n \t\t;;\n \ti*86v)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv\n \t\t;;\n \ti*86sol2)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=solaris2\n \t\t;;\n \tj90 | j90-cray)\n-\t\tbasic_machine=j90-cray\n+\t\tcpu=j90\n+\t\tvendor=cray\n \t\tos=${os:-unicos}\n \t\t;;\n \tiris | iris4d)\n-\t\tbasic_machine=mips-sgi\n+\t\tcpu=mips\n+\t\tvendor=sgi\n \t\tcase $os in\n \t\t    irix*)\n \t\t\t;;\n@@ -981,40 +801,27 @@ case $basic_machine in\n \t\t\t;;\n \t\tesac\n \t\t;;\n-\tleon-*|leon[3-9]-*)\n-\t\tbasic_machine=sparc-`echo \"$basic_machine\" | sed 's/-.*//'`\n-\t\t;;\n-\tm68knommu-*)\n-\t\tbasic_machine=m68k-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n-\t\t;;\n-\tmicroblaze*)\n-\t\tbasic_machine=microblaze-xilinx\n-\t\t;;\n \tminiframe)\n-\t\tbasic_machine=m68000-convergent\n+\t\tcpu=m68000\n+\t\tvendor=convergent\n \t\t;;\n \t*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)\n-\t\tbasic_machine=m68k-atari\n+\t\tcpu=m68k\n+\t\tvendor=atari\n \t\tos=mint\n \t\t;;\n-\tmips3*-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/mips3/mips64/'`\n-\t\t;;\n-\tmips3*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/mips3/mips64/'`-unknown\n-\t\t;;\n-\tms1-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/ms1-/mt-/'`\n-\t\t;;\n \tnews-3600 | risc-news)\n-\t\tbasic_machine=mips-sony\n+\t\tcpu=mips\n+\t\tvendor=sony\n \t\tos=newsos\n \t\t;;\n \tnext | m*-next)\n-\t\tbasic_machine=m68k-next\n+\t\tcpu=m68k\n+\t\tvendor=next\n \t\tcase $os in\n-\t\t    nextstep* )\n+\t\t    openstep*)\n+\t\t        ;;\n+\t\t    nextstep*)\n \t\t\t;;\n \t\t    ns2*)\n \t\t      os=nextstep2\n@@ -1025,260 +832,442 @@ case $basic_machine in\n \t\tesac\n \t\t;;\n \tnp1)\n-\t\tbasic_machine=np1-gould\n+\t\tcpu=np1\n+\t\tvendor=gould\n \t\t;;\n-\tneo-tandem)\n-\t\tbasic_machine=neo-tandem\n+\top50n-* | op60c-*)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n+\t\tos=proelf\n \t\t;;\n-\tnse-tandem)\n-\t\tbasic_machine=nse-tandem\n+\tpa-hitachi)\n+\t\tcpu=hppa1.1\n+\t\tvendor=hitachi\n+\t\tos=hiuxwe2\n \t\t;;\n-\tnsr-tandem)\n-\t\tbasic_machine=nsr-tandem\n+\tpbd)\n+\t\tcpu=sparc\n+\t\tvendor=tti\n \t\t;;\n-\tnsv-tandem)\n-\t\tbasic_machine=nsv-tandem\n+\tpbb)\n+\t\tcpu=m68k\n+\t\tvendor=tti\n \t\t;;\n-\tnsx-tandem)\n-\t\tbasic_machine=nsx-tandem\n+\tpc532)\n+\t\tcpu=ns32k\n+\t\tvendor=pc532\n \t\t;;\n-\top50n-* | op60c-*)\n-\t\tbasic_machine=hppa1.1-oki\n-\t\tos=proelf\n+\tpn)\n+\t\tcpu=pn\n+\t\tvendor=gould\n \t\t;;\n-\topenrisc | openrisc-*)\n-\t\tbasic_machine=or32-unknown\n+\tpower)\n+\t\tcpu=power\n+\t\tvendor=ibm\n \t\t;;\n-\tpa-hitachi)\n-\t\tbasic_machine=hppa1.1-hitachi\n-\t\tos=hiuxwe2\n+\tps2)\n+\t\tcpu=i386\n+\t\tvendor=ibm\n \t\t;;\n-\tparisc-*)\n-\t\tbasic_machine=hppa-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n+\trm[46]00)\n+\t\tcpu=mips\n+\t\tvendor=siemens\n \t\t;;\n-\tpbd)\n-\t\tbasic_machine=sparc-tti\n+\trtpc | rtpc-*)\n+\t\tcpu=romp\n+\t\tvendor=ibm\n \t\t;;\n-\tpbb)\n-\t\tbasic_machine=m68k-tti\n+\tsde)\n+\t\tcpu=mipsisa32\n+\t\tvendor=sde\n+\t\tos=${os:-elf}\n \t\t;;\n-\tpc532 | pc532-*)\n-\t\tbasic_machine=ns32k-pc532\n+\tsimso-wrs)\n+\t\tcpu=sparclite\n+\t\tvendor=wrs\n+\t\tos=vxworks\n \t\t;;\n-\tpc98)\n-\t\tbasic_machine=i386-pc\n+\ttower | tower-32)\n+\t\tcpu=m68k\n+\t\tvendor=ncr\n \t\t;;\n-\tpc98-*)\n-\t\tbasic_machine=i386-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tvpp*|vx|vx-*)\n+\t\tcpu=f301\n+\t\tvendor=fujitsu\n \t\t;;\n-\tpentium | p5 | k5 | k6 | nexgen | viac3)\n-\t\tbasic_machine=i586-pc\n+\tw65)\n+\t\tcpu=w65\n+\t\tvendor=wdc\n \t\t;;\n-\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n-\t\tbasic_machine=i686-pc\n+\tw89k-*)\n+\t\tcpu=hppa1.1\n+\t\tvendor=winbond\n+\t\tos=proelf\n \t\t;;\n-\tpentiumii | pentium2 | pentiumiii | pentium3)\n-\t\tbasic_machine=i686-pc\n+\tnone)\n+\t\tcpu=none\n+\t\tvendor=none\n \t\t;;\n-\tpentium4)\n-\t\tbasic_machine=i786-pc\n+\tleon|leon[3-9])\n+\t\tcpu=sparc\n+\t\tvendor=$basic_machine\n \t\t;;\n-\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n-\t\tbasic_machine=i586-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tleon-*|leon[3-9]-*)\n+\t\tcpu=sparc\n+\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n \t\t;;\n-\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n-\t\tbasic_machine=i686-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\n+\t*-*)\n+\t\t# shellcheck disable=SC2162\n+\t\tIFS=\"-\" read cpu vendor <<EOF\n+$basic_machine\n+EOF\n \t\t;;\n-\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n-\t\tbasic_machine=i686-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti*86 | x86_64)\n+\t\tcpu=$basic_machine\n+\t\tvendor=pc\n \t\t;;\n-\tpentium4-*)\n-\t\tbasic_machine=i786-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t# These rules are duplicated from below for sake of the special case above;\n+\t# i.e. things that normalized to x86 arches should also default to \"pc\"\n+\tpc98)\n+\t\tcpu=i386\n+\t\tvendor=pc\n \t\t;;\n-\tpn)\n-\t\tbasic_machine=pn-gould\n+\tx64 | amd64)\n+\t\tcpu=x86_64\n+\t\tvendor=pc\n+\t\t;;\n+\t# Recognize the basic CPU types without company name.\n+\t*)\n+\t\tcpu=$basic_machine\n+\t\tvendor=unknown\n+\t\t;;\n+esac\n+\n+unset -v basic_machine\n+\n+# Decode basic machines in the full and proper CPU-Company form.\n+case $cpu-$vendor in\n+\t# Here we handle the default manufacturer of certain CPU types in canonical form. It is in\n+\t# some cases the only manufacturer, in others, it is the most popular.\n+\tcraynv-unknown)\n+\t\tvendor=cray\n+\t\tos=${os:-unicosmp}\n+\t\t;;\n+\tc90-unknown | c90-cray)\n+\t\tvendor=cray\n+\t\tos=${os:-unicos}\n \t\t;;\n-\tpower)\tbasic_machine=power-ibm\n+\tfx80-unknown)\n+\t\tvendor=alliant\n \t\t;;\n-\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n+\tromp-unknown)\n+\t\tvendor=ibm\n \t\t;;\n-\tppc-* | ppcbe-*)\n-\t\tbasic_machine=powerpc-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tmmix-unknown)\n+\t\tvendor=knuth\n \t\t;;\n-\tppcle | powerpclittle)\n-\t\tbasic_machine=powerpcle-unknown\n+\tmicroblaze-unknown | microblazeel-unknown)\n+\t\tvendor=xilinx\n \t\t;;\n-\tppcle-* | powerpclittle-*)\n-\t\tbasic_machine=powerpcle-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\trs6000-unknown)\n+\t\tvendor=ibm\n \t\t;;\n-\tppc64)\tbasic_machine=powerpc64-unknown\n+\tvax-unknown)\n+\t\tvendor=dec\n \t\t;;\n-\tppc64-*) basic_machine=powerpc64-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tpdp11-unknown)\n+\t\tvendor=dec\n \t\t;;\n-\tppc64le | powerpc64little)\n-\t\tbasic_machine=powerpc64le-unknown\n+\twe32k-unknown)\n+\t\tvendor=att\n \t\t;;\n-\tppc64le-* | powerpc64little-*)\n-\t\tbasic_machine=powerpc64le-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tcydra-unknown)\n+\t\tvendor=cydrome\n \t\t;;\n-\tps2)\n-\t\tbasic_machine=i386-ibm\n+\ti370-ibm*)\n+\t\tvendor=ibm\n \t\t;;\n-\trm[46]00)\n-\t\tbasic_machine=mips-siemens\n+\torion-unknown)\n+\t\tvendor=highlevel\n \t\t;;\n-\trtpc | rtpc-*)\n-\t\tbasic_machine=romp-ibm\n+\txps-unknown | xps100-unknown)\n+\t\tcpu=xps100\n+\t\tvendor=honeywell\n \t\t;;\n-\ts390 | s390-*)\n-\t\tbasic_machine=s390-ibm\n+\n+\t# Here we normalize CPU types with a missing or matching vendor\n+\tdpx20-unknown | dpx20-bull)\n+\t\tcpu=rs6000\n+\t\tvendor=bull\n+\t\tos=${os:-bosx}\n \t\t;;\n-\ts390x | s390x-*)\n-\t\tbasic_machine=s390x-ibm\n+\n+\t# Here we normalize CPU types irrespective of the vendor\n+\tamd64-*)\n+\t\tcpu=x86_64\n \t\t;;\n-\tsb1)\n-\t\tbasic_machine=mipsisa64sb1-unknown\n+\tblackfin-*)\n+\t\tcpu=bfin\n+\t\tos=linux\n \t\t;;\n-\tsb1el)\n-\t\tbasic_machine=mipsisa64sb1el-unknown\n+\tc54x-*)\n+\t\tcpu=tic54x\n \t\t;;\n-\tsde)\n-\t\tbasic_machine=mipsisa32-sde\n-\t\tos=${os:-elf}\n+\tc55x-*)\n+\t\tcpu=tic55x\n \t\t;;\n-\tsequent)\n-\t\tbasic_machine=i386-sequent\n+\tc6x-*)\n+\t\tcpu=tic6x\n \t\t;;\n-\tsh5el)\n-\t\tbasic_machine=sh5le-unknown\n+\te500v[12]-*)\n+\t\tcpu=powerpc\n+\t\tos=$os\"spe\"\n \t\t;;\n-\tsimso-wrs)\n-\t\tbasic_machine=sparclite-wrs\n-\t\tos=vxworks\n+\tmips3*-*)\n+\t\tcpu=mips64\n \t\t;;\n-\tspur)\n-\t\tbasic_machine=spur-unknown\n+\tms1-*)\n+\t\tcpu=mt\n \t\t;;\n-\tst2000)\n-\t\tbasic_machine=m68k-tandem\n+\tm68knommu-*)\n+\t\tcpu=m68k\n+\t\tos=linux\n \t\t;;\n-\tstrongarm-* | thumb-*)\n-\t\tbasic_machine=arm-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tm9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)\n+\t\tcpu=s12z\n \t\t;;\n-\tsun2)\n-\t\tbasic_machine=m68000-sun\n+\topenrisc-*)\n+\t\tcpu=or32\n \t\t;;\n-\tsun3 | sun3-*)\n-\t\tbasic_machine=m68k-sun\n+\tparisc-*)\n+\t\tcpu=hppa\n+\t\tos=linux\n \t\t;;\n-\tsun4)\n-\t\tbasic_machine=sparc-sun\n+\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n+\t\tcpu=i586\n \t\t;;\n-\tsun386 | sun386i | roadrunner)\n-\t\tbasic_machine=i386-sun\n+\tpentiumpro-* | p6-* | 6x86-* | athlon-* | athalon_*-*)\n+\t\tcpu=i686\n \t\t;;\n-\ttile*)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=linux-gnu\n+\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n+\t\tcpu=i686\n \t\t;;\n-\ttx39)\n-\t\tbasic_machine=mipstx39-unknown\n+\tpentium4-*)\n+\t\tcpu=i786\n \t\t;;\n-\ttx39el)\n-\t\tbasic_machine=mipstx39el-unknown\n+\tpc98-*)\n+\t\tcpu=i386\n \t\t;;\n-\ttower | tower-32)\n-\t\tbasic_machine=m68k-ncr\n+\tppc-* | ppcbe-*)\n+\t\tcpu=powerpc\n \t\t;;\n-\tvpp*|vx|vx-*)\n-\t\tbasic_machine=f301-fujitsu\n+\tppcle-* | powerpclittle-*)\n+\t\tcpu=powerpcle\n \t\t;;\n-\tw65*)\n-\t\tbasic_machine=w65-wdc\n-\t\tos=none\n+\tppc64-*)\n+\t\tcpu=powerpc64\n \t\t;;\n-\tw89k-*)\n-\t\tbasic_machine=hppa1.1-winbond\n-\t\tos=proelf\n+\tppc64le-* | powerpc64little-*)\n+\t\tcpu=powerpc64le\n \t\t;;\n-\tx64)\n-\t\tbasic_machine=x86_64-pc\n+\tsb1-*)\n+\t\tcpu=mipsisa64sb1\n \t\t;;\n-\txps | xps100)\n-\t\tbasic_machine=xps100-honeywell\n+\tsb1el-*)\n+\t\tcpu=mipsisa64sb1el\n \t\t;;\n-\txscale-* | xscalee[bl]-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/^xscale/arm/'`\n+\tsh5e[lb]-*)\n+\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n \t\t;;\n-\tnone)\n-\t\tbasic_machine=none-none\n-\t\tos=${os:-none}\n+\tspur-*)\n+\t\tcpu=spur\n \t\t;;\n-\n-# Here we handle the default manufacturer of certain CPU types.  It is in\n-# some cases the only manufacturer, in others, it is the most popular.\n-\tw89k)\n-\t\tbasic_machine=hppa1.1-winbond\n+\tstrongarm-* | thumb-*)\n+\t\tcpu=arm\n \t\t;;\n-\top50n)\n-\t\tbasic_machine=hppa1.1-oki\n+\ttx39-*)\n+\t\tcpu=mipstx39\n \t\t;;\n-\top60c)\n-\t\tbasic_machine=hppa1.1-oki\n+\ttx39el-*)\n+\t\tcpu=mipstx39el\n \t\t;;\n-\tromp)\n-\t\tbasic_machine=romp-ibm\n+\tx64-*)\n+\t\tcpu=x86_64\n \t\t;;\n-\tmmix)\n-\t\tbasic_machine=mmix-knuth\n+\txscale-* | xscalee[bl]-*)\n+\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n \t\t;;\n-\trs6000)\n-\t\tbasic_machine=rs6000-ibm\n+\n+\t# Recognize the canonical CPU Types that limit and/or modify the\n+\t# company names they are paired with.\n+\tcr16-*)\n+\t\tos=${os:-elf}\n \t\t;;\n-\tvax)\n-\t\tbasic_machine=vax-dec\n+\tcrisv32-* | etraxfs*-*)\n+\t\tcpu=crisv32\n+\t\tvendor=axis\n \t\t;;\n-\tpdp11)\n-\t\tbasic_machine=pdp11-dec\n+\tcris-* | etrax*-*)\n+\t\tcpu=cris\n+\t\tvendor=axis\n \t\t;;\n-\twe32k)\n-\t\tbasic_machine=we32k-att\n+\tcrx-*)\n+\t\tos=${os:-elf}\n \t\t;;\n-\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n-\t\tbasic_machine=sh-unknown\n+\tneo-tandem)\n+\t\tcpu=neo\n+\t\tvendor=tandem\n \t\t;;\n-\tcydra)\n-\t\tbasic_machine=cydra-cydrome\n+\tnse-tandem)\n+\t\tcpu=nse\n+\t\tvendor=tandem\n \t\t;;\n-\torion)\n-\t\tbasic_machine=orion-highlevel\n+\tnsr-tandem)\n+\t\tcpu=nsr\n+\t\tvendor=tandem\n \t\t;;\n-\torion105)\n-\t\tbasic_machine=clipper-highlevel\n+\tnsv-tandem)\n+\t\tcpu=nsv\n+\t\tvendor=tandem\n \t\t;;\n-\tmac | mpw | mac-mpw)\n-\t\tbasic_machine=m68k-apple\n+\tnsx-tandem)\n+\t\tcpu=nsx\n+\t\tvendor=tandem\n \t\t;;\n-\tpmac | pmac-mpw)\n-\t\tbasic_machine=powerpc-apple\n+\ts390-*)\n+\t\tcpu=s390\n+\t\tvendor=ibm\n \t\t;;\n-\t*-unknown)\n-\t\t# Make sure to match an already-canonicalized machine name.\n+\ts390x-*)\n+\t\tcpu=s390x\n+\t\tvendor=ibm\n \t\t;;\n+\ttile*-*)\n+\t\tos=${os:-linux-gnu}\n+\t\t;;\n+\n \t*)\n-\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$basic_machine\"\\' not recognized 1>&2\n-\t\texit 1\n+\t\t# Recognize the canonical CPU types that are allowed with any\n+\t\t# company name.\n+\t\tcase $cpu in\n+\t\t\t1750a | 580 \\\n+\t\t\t| a29k \\\n+\t\t\t| aarch64 | aarch64_be \\\n+\t\t\t| abacus \\\n+\t\t\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \\\n+\t\t\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \\\n+\t\t\t| alphapca5[67] | alpha64pca5[67] \\\n+\t\t\t| am33_2.0 \\\n+\t\t\t| amdgcn \\\n+\t\t\t| arc | arceb \\\n+\t\t\t| arm  | arm[lb]e | arme[lb] | armv* \\\n+\t\t\t| avr | avr32 \\\n+\t\t\t| asmjs \\\n+\t\t\t| ba \\\n+\t\t\t| be32 | be64 \\\n+\t\t\t| bfin | bpf | bs2000 \\\n+\t\t\t| c[123]* | c30 | [cjt]90 | c4x \\\n+\t\t\t| c8051 | clipper | craynv | csky | cydra \\\n+\t\t\t| d10v | d30v | dlx | dsp16xx \\\n+\t\t\t| e2k | elxsi | epiphany \\\n+\t\t\t| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \\\n+\t\t\t| h8300 | h8500 \\\n+\t\t\t| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n+\t\t\t| hexagon \\\n+\t\t\t| i370 | i*86 | i860 | i960 | ia16 | ia64 \\\n+\t\t\t| ip2k | iq2000 \\\n+\t\t\t| k1om \\\n+\t\t\t| le32 | le64 \\\n+\t\t\t| lm32 \\\n+\t\t\t| m32c | m32r | m32rle \\\n+\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \\\n+\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \\\n+\t\t\t| m88110 | m88k | maxq | mb | mcore | mep | metag \\\n+\t\t\t| microblaze | microblazeel \\\n+\t\t\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n+\t\t\t| mips16 \\\n+\t\t\t| mips64 | mips64eb | mips64el \\\n+\t\t\t| mips64octeon | mips64octeonel \\\n+\t\t\t| mips64orion | mips64orionel \\\n+\t\t\t| mips64r5900 | mips64r5900el \\\n+\t\t\t| mips64vr | mips64vrel \\\n+\t\t\t| mips64vr4100 | mips64vr4100el \\\n+\t\t\t| mips64vr4300 | mips64vr4300el \\\n+\t\t\t| mips64vr5000 | mips64vr5000el \\\n+\t\t\t| mips64vr5900 | mips64vr5900el \\\n+\t\t\t| mipsisa32 | mipsisa32el \\\n+\t\t\t| mipsisa32r2 | mipsisa32r2el \\\n+\t\t\t| mipsisa32r6 | mipsisa32r6el \\\n+\t\t\t| mipsisa64 | mipsisa64el \\\n+\t\t\t| mipsisa64r2 | mipsisa64r2el \\\n+\t\t\t| mipsisa64r6 | mipsisa64r6el \\\n+\t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n+\t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n+\t\t\t| mipsr5900 | mipsr5900el \\\n+\t\t\t| mipstx39 | mipstx39el \\\n+\t\t\t| mmix \\\n+\t\t\t| mn10200 | mn10300 \\\n+\t\t\t| moxie \\\n+\t\t\t| mt \\\n+\t\t\t| msp430 \\\n+\t\t\t| nds32 | nds32le | nds32be \\\n+\t\t\t| nfp \\\n+\t\t\t| nios | nios2 | nios2eb | nios2el \\\n+\t\t\t| none | np1 | ns16k | ns32k | nvptx \\\n+\t\t\t| open8 \\\n+\t\t\t| or1k* \\\n+\t\t\t| or32 \\\n+\t\t\t| orion \\\n+\t\t\t| picochip \\\n+\t\t\t| pdp10 | pdp11 | pj | pjl | pn | power \\\n+\t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n+\t\t\t| pru \\\n+\t\t\t| pyramid \\\n+\t\t\t| riscv | riscv32 | riscv64 \\\n+\t\t\t| rl78 | romp | rs6000 | rx \\\n+\t\t\t| score \\\n+\t\t\t| sh | shl \\\n+\t\t\t| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n+\t\t\t| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \\\n+\t\t\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \\\n+\t\t\t| sparclite \\\n+\t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n+\t\t\t| spu \\\n+\t\t\t| tahoe \\\n+\t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n+\t\t\t| tron \\\n+\t\t\t| ubicom32 \\\n+\t\t\t| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n+\t\t\t| vax \\\n+\t\t\t| visium \\\n+\t\t\t| w65 \\\n+\t\t\t| wasm32 | wasm64 \\\n+\t\t\t| we32k \\\n+\t\t\t| x86 | x86_64 | xc16x | xgate | xps100 \\\n+\t\t\t| xstormy16 | xtensa* \\\n+\t\t\t| ymp \\\n+\t\t\t| z8k | z80)\n+\t\t\t\t;;\n+\n+\t\t\t*)\n+\t\t\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$cpu-$vendor\"\\' not recognized 1>&2\n+\t\t\t\texit 1\n+\t\t\t\t;;\n+\t\tesac\n \t\t;;\n esac\n \n # Here we canonicalize certain aliases for manufacturers.\n-case $basic_machine in\n-\t*-digital*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/digital.*/dec/'`\n+case $vendor in\n+\tdigital*)\n+\t\tvendor=dec\n \t\t;;\n-\t*-commodore*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/commodore.*/cbm/'`\n+\tcommodore*)\n+\t\tvendor=cbm\n \t\t;;\n \t*)\n \t\t;;\n@@ -1356,9 +1345,9 @@ case $os in\n \t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n \t     | aos* | aros* | cloudabi* | sortix* \\\n \t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n-\t     | clix* | riscos* | uniplus* | iris* | rtu* | xenix* \\\n+\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n \t     | knetbsd* | mirbsd* | netbsd* \\\n-\t     | bitrig* | openbsd* | solidbsd* | libertybsd* \\\n+\t     | bitrig* | openbsd* | solidbsd* | libertybsd* | os108* \\\n \t     | ekkobsd* | kfreebsd* | freebsd* | riscix* | lynxos* \\\n \t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n \t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n@@ -1376,12 +1365,13 @@ case $os in\n \t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n \t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n \t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n-\t     | midnightbsd*)\n+\t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n+\t     | nsk* | powerunix)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \tqnx*)\n-\t\tcase $basic_machine in\n-\t\t    x86-* | i*86-*)\n+\t\tcase $cpu in\n+\t\t    x86 | i*86)\n \t\t\t;;\n \t\t    *)\n \t\t\tos=nto-$os\n@@ -1460,9 +1450,6 @@ case $os in\n \tns2)\n \t\tos=nextstep2\n \t\t;;\n-\tnsk*)\n-\t\tos=nsk\n-\t\t;;\n \t# Preserve the version number of sinix5.\n \tsinix5.*)\n \t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n@@ -1507,7 +1494,7 @@ case $os in\n \t\t# Until real need of OS specific support for\n \t\t# particular features comes up, bare metal\n \t\t# configurations are quite functional.\n-\t\tcase $basic_machine in\n+\t\tcase $cpu in\n \t\t    arm*)\n \t\t\tos=eabi\n \t\t\t;;\n@@ -1541,7 +1528,7 @@ else\n # will signal an error saying that MANUFACTURER isn't an operating\n # system, and we'll never get to this point.\n \n-case $basic_machine in\n+case $cpu-$vendor in\n \tscore-*)\n \t\tos=elf\n \t\t;;\n@@ -1722,9 +1709,8 @@ fi\n \n # Here we handle the case where we know the os, and the CPU type, but not the\n # manufacturer.  We pick the logical manufacturer.\n-vendor=unknown\n-case $basic_machine in\n-\t*-unknown)\n+case $vendor in\n+\tunknown)\n \t\tcase $os in\n \t\t\triscix*)\n \t\t\t\tvendor=acorn\n@@ -1793,11 +1779,10 @@ case $basic_machine in\n \t\t\t\tvendor=stratus\n \t\t\t\t;;\n \t\tesac\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed \"s/unknown/$vendor/\"`\n \t\t;;\n esac\n \n-echo \"$basic_machine-$os\"\n+echo \"$cpu-$vendor-$os\"\n exit\n \n # Local variables:"
      },
      {
        "sha": "0a6f2e644219008dcb4cefe4d7a152e838e9b66d",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,4 +1,4 @@\n-This is a system of building and caching dependencies necessary for building Bitcoin. \n+This is a system of building and caching dependencies necessary for building Bitcoin.\n There are several features that make it different from most similar systems:\n \n ### It is designed to be builder and host agnostic\n@@ -26,7 +26,7 @@ Before building, a unique build-id is generated for each package. This id\n consists of a hash of all files used to build the package (Makefiles, packages,\n etc), and as well as a hash of the same data for each recursive dependency. If\n any portion of a package's build recipe changes, it will be rebuilt as well as\n-any other package that depends on it. If any of the main makefiles (Makefile, \n+any other package that depends on it. If any of the main makefiles (Makefile,\n funcs.mk, etc) are changed, all packages will be rebuilt. After building, the\n results are cached into a tarball that can be re-used and distributed.\n "
      },
      {
        "sha": "a4434b5167ad970a184cb64dd796b3bc54d5662f",
        "filename": "depends/funcs.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -133,7 +133,7 @@ $(1)_config_env+=PKG_CONFIG_PATH=$($($(1)_type)_prefix)/share/pkgconfig\n $(1)_config_env+=PATH=$(build_prefix)/bin:$(PATH)\n $(1)_build_env+=PATH=$(build_prefix)/bin:$(PATH)\n $(1)_stage_env+=PATH=$(build_prefix)/bin:$(PATH)\n-$(1)_autoconf=./configure --host=$($($(1)_type)_host) --disable-dependency-tracking --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n+$(1)_autoconf=./configure --host=$($($(1)_type)_host) --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n \n ifneq ($($(1)_nm),)\n $(1)_autoconf += NM=\"$$($(1)_nm)\""
      },
      {
        "sha": "969ec2a1cb047f2895e17402012d637534f49b7a",
        "filename": "depends/hosts/android.mk",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/hosts/android.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/hosts/android.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/android.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,11 @@\n+ifeq ($(HOST),armv7a-linux-android)\n+android_AR=$(ANDROID_TOOLCHAIN_BIN)/arm-linux-androideabi-ar\n+android_CXX=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)eabi$(ANDROID_API_LEVEL)-clang++\n+android_CC=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)eabi$(ANDROID_API_LEVEL)-clang\n+android_RANLIB=$(ANDROID_TOOLCHAIN_BIN)/arm-linux-androideabi-ranlib\n+else\n+android_AR=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)-ar\n+android_CXX=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)$(ANDROID_API_LEVEL)-clang++\n+android_CC=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)$(ANDROID_API_LEVEL)-clang\n+android_RANLIB=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)-ranlib\n+endif"
      },
      {
        "sha": "1bc4fb81896f6298c07ff50afaf3865da59797f4",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,9 +1,8 @@\n-OSX_MIN_VERSION=10.10\n-OSX_SDK_VERSION=10.11\n+OSX_MIN_VERSION=10.12\n+OSX_SDK_VERSION=10.14\n OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n-LD64_VERSION=253.9\n-darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n-darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION) -stdlib=libc++\n+darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK)\n+darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -stdlib=libc++\n \n darwin_CFLAGS=-pipe\n darwin_CXXFLAGS=$(darwin_CFLAGS)"
      },
      {
        "sha": "7ed20ea1297dcad84173c4ec085dee714f87f22f",
        "filename": "depends/packages.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -32,15 +32,15 @@ These variables are optional:\n \n     $(package)_build_subdir:\n     cd to this dir before running configure/build/stage commands.\n-    \n+\n     $(package)_download_file:\n     The file-name of the upstream source if it differs from how it should be\n     stored locally. This can be used to avoid storing file-names with strange\n     characters.\n-    \n+\n     $(package)_dependencies:\n     Names of any other packages that this one depends on.\n-    \n+\n     $(package)_patches:\n     Filenames of any patches needed to build the package\n \n@@ -134,7 +134,7 @@ the user. Other variables may be defined as needed.\n     Stage the build results. If undefined, does nothing.\n \n   The following variables are available for each recipe:\n-    \n+\n     $(1)_staging_dir: package's destination sysroot path\n     $(1)_staging_prefix_dir: prefix path inside of the package's staging dir\n     $(1)_extract_dir: path to the package's extracted sources"
      },
      {
        "sha": "b679438c6f65af33a263b714a4f3017bee964dcd",
        "filename": "depends/packages/bdb.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,7 +6,7 @@ $(package)_sha256_hash=12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b857327\n $(package)_build_subdir=build_unix\n \n define $(package)_set_vars\n-$(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n+$(package)_config_opts=--disable-shared --enable-cxx --disable-replication --enable-option-checking\n $(package)_config_opts_mingw32=--enable-mingw\n $(package)_config_opts_linux=--with-pic\n $(package)_cxxflags=-std=c++11"
      },
      {
        "sha": "cbe4fe4d970bf8aa3e899f93f3197f82b7bbc894",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -10,26 +10,30 @@ $(package)_config_opts_debug=variant=debug\n $(package)_config_opts=--layout=tagged --build-type=complete --user-config=user-config.jam\n $(package)_config_opts+=threading=multi link=static -sNO_BZIP2=1 -sNO_ZLIB=1\n $(package)_config_opts_linux=threadapi=pthread runtime-link=shared\n-$(package)_config_opts_darwin=--toolset=darwin-4.2.1 runtime-link=shared\n+$(package)_config_opts_darwin=--toolset=clang-darwin runtime-link=shared\n $(package)_config_opts_mingw32=binary-format=pe target-os=windows threadapi=win32 runtime-link=static\n $(package)_config_opts_x86_64_mingw32=address-model=64\n $(package)_config_opts_i686_mingw32=address-model=32\n $(package)_config_opts_i686_linux=address-model=32 architecture=x86\n+$(package)_config_opts_i686_android=address-model=32\n+$(package)_config_opts_aarch64_android=address-model=64\n+$(package)_config_opts_x86_64_android=address-model=64\n+$(package)_config_opts_armv7a_android=address-model=32\n $(package)_toolset_$(host_os)=gcc\n $(package)_archiver_$(host_os)=$($(package)_ar)\n-$(package)_toolset_darwin=darwin\n-$(package)_archiver_darwin=$($(package)_libtool)\n-$(package)_config_libraries=chrono,filesystem,system,thread,test\n+$(package)_toolset_darwin=clang-darwin\n+$(package)_config_libraries=filesystem,system,thread,test\n $(package)_cxxflags=-std=c++11 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n+$(package)_cxxflags_android=-fPIC\n endef\n \n define $(package)_preprocess_cmds\n-  echo \"using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$(boost_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n+  echo \"using $($(package)_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$($(package)_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n endef\n \n define $(package)_config_cmds\n-  ./bootstrap.sh --without-icu --with-libraries=$(boost_config_libraries)\n+  ./bootstrap.sh --without-icu --with-libraries=$($(package)_config_libraries)\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "902fe43be267919d8d71c44d9b6dea5cea9928d1",
        "filename": "depends/packages/expat.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,6 +6,7 @@ $(package)_sha256_hash=cbc9102f4a31a8dafd42d642e9a3aa31e79a0aedaa1f6efd2795ebc83\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --without-docbook --without-tests --without-examples\n+  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n endef\n "
      },
      {
        "sha": "128599ba773326b87901dd219946831838e39c80",
        "filename": "depends/packages/fontconfig.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -7,6 +7,7 @@ $(package)_dependencies=freetype expat\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-docs --disable-static --disable-libxml2 --disable-iconv\n+  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "a1584608e19f714ca190875aae124edd33a1456a",
        "filename": "depends/packages/freetype.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,6 +6,7 @@ $(package)_sha256_hash=3a3bb2c4e15ffb433f2032f50a5b5a92558206822e22bfe8cbe339af4\n \n define $(package)_set_vars\n   $(package)_config_opts=--without-zlib --without-png --without-harfbuzz --without-bzip2 --disable-static\n+  $(package)_config_opts += --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n endef\n "
      },
      {
        "sha": "4c55c2df04b5cd50f1af5ae63bab275d7c1284ac",
        "filename": "depends/packages/libXau.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -9,6 +9,7 @@ $(package)_dependencies=xproto\n # --disable-xthreads. It is currently enabled.\n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --disable-lint-library --without-lint\n+  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n endef\n "
      },
      {
        "sha": "eb45e14f6fb95b19df8cd39d659f2564fbe75639",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,17 +1,19 @@\n package=libevent\n-$(package)_version=2.1.8-stable\n+$(package)_version=2.1.11-stable\n $(package)_download_path=https://github.com/libevent/libevent/archive/\n $(package)_file_name=release-$($(package)_version).tar.gz\n-$(package)_sha256_hash=316ddb401745ac5d222d7c529ef1eada12f58f6376a66c1118eee803cb70f83d\n+$(package)_sha256_hash=229393ab2bf0dc94694f21836846b424f3532585bac3468738b7bf752c03901e\n \n define $(package)_preprocess_cmds\n   ./autogen.sh\n endef\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress --disable-samples\n+  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n   $(package)_config_opts_release=--disable-debug-mode\n   $(package)_config_opts_linux=--with-pic\n+  $(package)_config_opts_android=--with-pic\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "2204b381958b8f0be875308764df849b62e9af40",
        "filename": "depends/packages/libxcb.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -7,6 +7,7 @@ $(package)_dependencies=xcb_proto libXau\n \n define $(package)_set_vars\n $(package)_config_opts=--disable-static --disable-build-docs --without-doxygen --without-launchd\n+$(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n # Because we pass -qt-xcb to Qt, it will compile in a set of xcb helper libraries and extensions,\n # so we skip building all of the extensions here.\n # More info is available from: https://doc.qt.io/qt-5.9/linux-requirements.html"
      },
      {
        "sha": "4195230b4003efac0071e416dd9c1ca1d66979e7",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 30,
        "deletions": 17,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,45 +1,55 @@\n package=native_cctools\n-$(package)_version=807d6fd1be5d2224872e381870c0a75387fe05e6\n-$(package)_download_path=https://github.com/theuni/cctools-port/archive\n+$(package)_version=3764b223c011574971ee3ae09ce968ba5dc2f00f\n+$(package)_download_path=https://github.com/tpoechtrager/cctools-port/archive\n $(package)_file_name=$($(package)_version).tar.gz\n-$(package)_sha256_hash=a09c9ba4684670a0375e42d9d67e7f12c1f62581a27f28f7c825d6d7032ccc6a\n+$(package)_sha256_hash=3e35907bf376269a844df08e03cbb43e345c88125374f2228e03724b5f9a2a04\n $(package)_build_subdir=cctools\n-$(package)_clang_version=3.7.1\n-$(package)_clang_download_path=https://llvm.org/releases/$($(package)_clang_version)\n+$(package)_clang_version=6.0.1\n+$(package)_clang_download_path=https://releases.llvm.org/$($(package)_clang_version)\n $(package)_clang_download_file=clang+llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n $(package)_clang_file_name=clang-llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n-$(package)_clang_sha256_hash=99b28a6b48e793705228a390471991386daa33a9717cd9ca007fcdde69608fd9\n+$(package)_clang_sha256_hash=fa5416553ca94a8c071a27134c094a5fb736fe1bd0ecc5ef2d9bc02754e1bef0\n+\n+$(package)_libtapi_version=3efb201881e7a76a21e0554906cf306432539cef\n+$(package)_libtapi_download_path=https://github.com/tpoechtrager/apple-libtapi/archive\n+$(package)_libtapi_download_file=$($(package)_libtapi_version).tar.gz\n+$(package)_libtapi_file_name=$($(package)_libtapi_version).tar.gz\n+$(package)_libtapi_sha256_hash=380c1ca37cfa04a8699d0887a8d3ee1ad27f3d08baba78887c73b09485c0fbd3\n+\n $(package)_extra_sources=$($(package)_clang_file_name)\n+$(package)_extra_sources += $($(package)_libtapi_file_name)\n \n define $(package)_fetch_cmds\n $(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash))\n+$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_libtapi_download_path),$($(package)_libtapi_download_file),$($(package)_libtapi_file_name),$($(package)_libtapi_sha256_hash))\n endef\n \n define $(package)_extract_cmds\n   mkdir -p $($(package)_extract_dir) && \\\n   echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n   echo \"$($(package)_clang_sha256_hash)  $($(package)_source_dir)/$($(package)_clang_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_libtapi_sha256_hash)  $($(package)_source_dir)/$($(package)_libtapi_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n   $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  mkdir -p toolchain/bin toolchain/lib/clang/3.5/include && \\\n+  mkdir -p toolchain/bin toolchain/lib/clang/$($(package)_clang_version)/include && \\\n+  mkdir -p libtapi && \\\n+  tar --no-same-owner --strip-components=1 -C libtapi -xf $($(package)_source_dir)/$($(package)_libtapi_file_name) && \\\n   tar --no-same-owner --strip-components=1 -C toolchain -xf $($(package)_source_dir)/$($(package)_clang_file_name) && \\\n   rm -f toolchain/lib/libc++abi.so* && \\\n-  echo \"#!/bin/sh\" > toolchain/bin/$(host)-dsymutil && \\\n-  echo \"exit 0\" >> toolchain/bin/$(host)-dsymutil && \\\n-  chmod +x toolchain/bin/$(host)-dsymutil && \\\n   tar --no-same-owner --strip-components=1 -xf $($(package)_source)\n endef\n \n define $(package)_set_vars\n-$(package)_config_opts=--target=$(host) --disable-lto-support\n-$(package)_ldflags+=-Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n-$(package)_cc=$($(package)_extract_dir)/toolchain/bin/clang\n-$(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n+  $(package)_config_opts=--target=$(host) --disable-lto-support --with-libtapi=$($(package)_extract_dir)\n+  $(package)_ldflags+=-Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n+  $(package)_cc=$($(package)_extract_dir)/toolchain/bin/clang\n+  $(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n endef\n \n define $(package)_preprocess_cmds\n-  cd $($(package)_build_subdir); ./autogen.sh && \\\n-  sed -i.old \"/define HAVE_PTHREADS/d\" ld64/src/ld/InputFiles.h\n+  CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/build.sh && \\\n+  CC=$($(package)_cc) CXX=$($(package)_cxx) INSTALLPREFIX=$($(package)_extract_dir) ./libtapi/install.sh && \\\n+  sed -i.old \"/define HAVE_PTHREADS/d\" $($(package)_build_subdir)/ld64/src/ld/InputFiles.h\n endef\n \n define $(package)_config_cmds\n@@ -52,6 +62,9 @@ endef\n \n define $(package)_stage_cmds\n   $(MAKE) DESTDIR=$($(package)_staging_dir) install && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/lib/ && \\\n+  cd $($(package)_extract_dir) && \\\n+  cp lib/libtapi.so.6 $($(package)_staging_prefix_dir)/lib/ && \\\n   cd $($(package)_extract_dir)/toolchain && \\\n   mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include && \\\n   mkdir -p $($(package)_staging_prefix_dir)/bin $($(package)_staging_prefix_dir)/include && \\"
      },
      {
        "sha": "c0f0ce74de8b64efac6e15e4c9082f13073a2951",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,16 +1,18 @@\n package=native_libdmg-hfsplus\n-$(package)_version=0.1\n-$(package)_download_path=https://github.com/theuni/libdmg-hfsplus/archive\n-$(package)_file_name=libdmg-hfsplus-v$($(package)_version).tar.gz\n-$(package)_sha256_hash=6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3\n+$(package)_version=7ac55ec64c96f7800d9818ce64c79670e7f02b67\n+$(package)_download_path=https://github.com/planetbeing/libdmg-hfsplus/archive\n+$(package)_file_name=$($(package)_version).tar.gz\n+$(package)_sha256_hash=56fbdc48ec110966342f0ecddd6f8f89202f4143ed2a3336e42bbf88f940850c\n $(package)_build_subdir=build\n+$(package)_patches=remove-libcrypto-dependency.patch\n \n define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/remove-libcrypto-dependency.patch && \\\n   mkdir build\n endef\n \n define $(package)_config_cmds\n-  cmake -DCMAKE_INSTALL_PREFIX:PATH=$(build_prefix)/bin ..\n+  cmake -DCMAKE_INSTALL_PREFIX:PATH=$(build_prefix) -DCMAKE_C_FLAGS=\"-Wl,--build-id=none\" ..\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "1de8c37d362aa9f01bfd9631ce3d22aa77b35b8e",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,25 +0,0 @@\n-package=native_protobuf\n-$(package)_version=2.6.1\n-$(package)_download_path=https://github.com/google/protobuf/releases/download/v$($(package)_version)\n-$(package)_file_name=protobuf-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=ee445612d544d885ae240ffbcbf9267faa9f593b7b101f21d58beceb92661910\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-shared --without-zlib\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C src protoc\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install-strip\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf lib include\n-endef"
      },
      {
        "sha": "db47113b2f9b844c24f14f41a7a87bf0cbf05aa4",
        "filename": "depends/packages/openssl.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,81 +0,0 @@\n-package=openssl\n-$(package)_version=1.0.1k\n-$(package)_download_path=https://www.openssl.org/source\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n-\n-define $(package)_set_vars\n-$(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n-$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl\n-$(package)_config_opts+=no-camellia\n-$(package)_config_opts+=no-capieng\n-$(package)_config_opts+=no-cast\n-$(package)_config_opts+=no-comp\n-$(package)_config_opts+=no-dso\n-$(package)_config_opts+=no-dtls1\n-$(package)_config_opts+=no-ec_nistp_64_gcc_128\n-$(package)_config_opts+=no-gost\n-$(package)_config_opts+=no-gmp\n-$(package)_config_opts+=no-heartbeats\n-$(package)_config_opts+=no-idea\n-$(package)_config_opts+=no-jpake\n-$(package)_config_opts+=no-krb5\n-$(package)_config_opts+=no-libunbound\n-$(package)_config_opts+=no-md2\n-$(package)_config_opts+=no-mdc2\n-$(package)_config_opts+=no-rc4\n-$(package)_config_opts+=no-rc5\n-$(package)_config_opts+=no-rdrand\n-$(package)_config_opts+=no-rfc3779\n-$(package)_config_opts+=no-rsax\n-$(package)_config_opts+=no-sctp\n-$(package)_config_opts+=no-seed\n-$(package)_config_opts+=no-sha0\n-$(package)_config_opts+=no-shared\n-$(package)_config_opts+=no-ssl-trace\n-$(package)_config_opts+=no-ssl2\n-$(package)_config_opts+=no-ssl3\n-$(package)_config_opts+=no-static_engine\n-$(package)_config_opts+=no-store\n-$(package)_config_opts+=no-unit-test\n-$(package)_config_opts+=no-weak-ssl-ciphers\n-$(package)_config_opts+=no-whirlpool\n-$(package)_config_opts+=no-zlib\n-$(package)_config_opts+=no-zlib-dynamic\n-$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n-$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n-$(package)_config_opts_x86_64_linux=linux-x86_64\n-$(package)_config_opts_i686_linux=linux-generic32\n-$(package)_config_opts_arm_linux=linux-generic32\n-$(package)_config_opts_armv7l_linux=linux-generic32\n-$(package)_config_opts_aarch64_linux=linux-generic64\n-$(package)_config_opts_mipsel_linux=linux-generic32\n-$(package)_config_opts_mips_linux=linux-generic32\n-$(package)_config_opts_powerpc_linux=linux-generic32\n-$(package)_config_opts_riscv32_linux=linux-generic32\n-$(package)_config_opts_riscv64_linux=linux-generic64\n-$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n-$(package)_config_opts_x86_64_mingw32=mingw64\n-$(package)_config_opts_i686_mingw32=mingw\n-endef\n-\n-define $(package)_preprocess_cmds\n-  sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n-  sed -i.old \"s|engines apps test|engines|\" Makefile.org\n-endef\n-\n-define $(package)_config_cmds\n-  ./Configure $($(package)_config_opts)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf share bin etc\n-endef"
      },
      {
        "sha": "42dbaa77a60d7ef329dd992965e4a46ad860f443",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,11 +1,11 @@\n-packages:=boost openssl libevent\n+packages:=boost libevent\n \n-qt_native_packages = native_protobuf\n-qt_packages = qrencode protobuf zlib\n+qt_packages = zlib\n \n-qt_linux_packages:=qt expat libxcb xcb_proto libXau xproto freetype fontconfig\n+qrencode_packages = qrencode\n \n-rapidcheck_packages = rapidcheck\n+qt_linux_packages:=qt expat libxcb xcb_proto libXau xproto freetype fontconfig\n+qt_android_packages=qt\n \n qt_darwin_packages=qt\n qt_mingw32_packages=qt"
      },
      {
        "sha": "52975b14ecc3325f0da5f4fac7725ee94c0bd67e",
        "filename": "depends/packages/protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,34 +0,0 @@\n-package=protobuf\n-$(package)_version=$(native_$(package)_version)\n-$(package)_download_path=$(native_$(package)_download_path)\n-$(package)_file_name=$(native_$(package)_file_name)\n-$(package)_sha256_hash=$(native_$(package)_sha256_hash)\n-$(package)_dependencies=native_$(package)\n-$(package)_cxxflags=-std=c++11\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_preprocess_cmds\n-   cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub . &&\\\n-   cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub gtest/build-aux\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C src libprotobuf.la\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) -C src install-libLTLIBRARIES install-nobase_includeHEADERS &&\\\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm lib/libprotoc.a lib/*.la\n-endef"
      },
      {
        "sha": "d1687883bcd5197372367e4a9a5f029594f9f273",
        "filename": "depends/packages/qrencode.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -7,7 +7,9 @@ $(package)_sha256_hash=efe5188b1ddbcbf98763b819b146be6a90481aac30cfc8d858ab78a19\n define $(package)_set_vars\n $(package)_config_opts=--disable-shared --without-tools --without-tests --disable-sdltest\n $(package)_config_opts += --disable-gprof --disable-gcov --disable-mudflap\n+$(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n $(package)_config_opts_linux=--with-pic\n+$(package)_config_opts_android=--with-pic\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "366b1d0c423aee4fc4bc68226cddc0cf240c6377",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 57,
        "deletions": 17,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,20 +1,20 @@\n PACKAGE=qt\n-$(package)_version=5.9.7\n+$(package)_version=5.9.8\n $(package)_download_path=https://download.qt.io/official_releases/qt/5.9/$($(package)_version)/submodules\n $(package)_suffix=opensource-src-$($(package)_version).tar.xz\n $(package)_file_name=qtbase-$($(package)_suffix)\n-$(package)_sha256_hash=36dd9574f006eaa1e5af780e4b33d11fe39d09fd7c12f3b9d83294174bd28f00\n-$(package)_dependencies=openssl zlib\n+$(package)_sha256_hash=9b9dec1f67df1f94bce2955c5604de992d529dde72050239154c56352da0907d\n+$(package)_dependencies=zlib\n $(package)_linux_dependencies=freetype fontconfig libxcb\n $(package)_build_subdir=qtbase\n $(package)_qt_libs=corelib network widgets gui plugins testlib\n-$(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch fix_no_printer.patch fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch\n+$(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch fix_no_printer.patch fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch fix_android_qmake_conf.patch fix_android_jni_static.patch\n \n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n-$(package)_qttranslations_sha256_hash=b36da7d93c3ab6fca56b32053bb73bc619c8b192bb89b74e3bcde2705f1c2a14\n+$(package)_qttranslations_sha256_hash=fb5a47799754af73d3bf501fe513342cfe2fc37f64e80df5533f6110e804220c\n \n $(package)_qttools_file_name=qttools-$($(package)_suffix)\n-$(package)_qttools_sha256_hash=d62e0f70d99645d6704dbb8976fb2222443061743689943d40970c52c49367a1\n+$(package)_qttools_sha256_hash=a97556eb7b2f30252cdd8a598c396cfce2b2f79d2bae883af6d3b26a2cdcc63c\n \n $(package)_extra_sources  = $($(package)_qttranslations_file_name)\n $(package)_extra_sources += $($(package)_qttools_file_name)\n@@ -25,7 +25,6 @@ $(package)_config_opts_debug = -debug\n $(package)_config_opts += -bindir $(build_prefix)/bin\n $(package)_config_opts += -c++std c++11\n $(package)_config_opts += -confirm-license\n-$(package)_config_opts += -dbus-runtime\n $(package)_config_opts += -hostprefix $(build_prefix)\n $(package)_config_opts += -no-compile-examples\n $(package)_config_opts += -no-cups\n@@ -40,11 +39,15 @@ $(package)_config_opts += -no-iconv\n $(package)_config_opts += -no-kms\n $(package)_config_opts += -no-linuxfb\n $(package)_config_opts += -no-libjpeg\n+$(package)_config_opts += -no-libproxy\n $(package)_config_opts += -no-libudev\n $(package)_config_opts += -no-mtdev\n+$(package)_config_opts += -no-openssl\n $(package)_config_opts += -no-openvg\n $(package)_config_opts += -no-reduce-relocations\n $(package)_config_opts += -no-qml-debug\n+$(package)_config_opts += -no-sctp\n+$(package)_config_opts += -no-securetransport\n $(package)_config_opts += -no-sql-db2\n $(package)_config_opts += -no-sql-ibase\n $(package)_config_opts += -no-sql-oci\n@@ -54,13 +57,13 @@ $(package)_config_opts += -no-sql-odbc\n $(package)_config_opts += -no-sql-psql\n $(package)_config_opts += -no-sql-sqlite\n $(package)_config_opts += -no-sql-sqlite2\n+$(package)_config_opts += -no-system-proxies\n $(package)_config_opts += -no-use-gold-linker\n $(package)_config_opts += -no-xinput2\n $(package)_config_opts += -nomake examples\n $(package)_config_opts += -nomake tests\n $(package)_config_opts += -opensource\n-$(package)_config_opts += -openssl-linked\n-$(package)_config_opts += -optimized-qmake\n+$(package)_config_opts += -optimized-tools\n $(package)_config_opts += -pch\n $(package)_config_opts += -pkg-config\n $(package)_config_opts += -prefix $(host_prefix)\n@@ -79,16 +82,20 @@ $(package)_config_opts += -no-feature-dial\n $(package)_config_opts += -no-feature-filesystemwatcher\n $(package)_config_opts += -no-feature-fontcombobox\n $(package)_config_opts += -no-feature-ftp\n+$(package)_config_opts += -no-feature-http\n $(package)_config_opts += -no-feature-image_heuristic_mask\n $(package)_config_opts += -no-feature-keysequenceedit\n $(package)_config_opts += -no-feature-lcdnumber\n+$(package)_config_opts += -no-feature-networkdiskcache\n+$(package)_config_opts += -no-feature-networkproxy\n $(package)_config_opts += -no-feature-pdf\n $(package)_config_opts += -no-feature-printdialog\n $(package)_config_opts += -no-feature-printer\n $(package)_config_opts += -no-feature-printpreviewdialog\n $(package)_config_opts += -no-feature-printpreviewwidget\n $(package)_config_opts += -no-feature-regularexpression\n $(package)_config_opts += -no-feature-sessionmanager\n+$(package)_config_opts += -no-feature-socks5\n $(package)_config_opts += -no-feature-sql\n $(package)_config_opts += -no-feature-statemachine\n $(package)_config_opts += -no-feature-syntaxhighlighter\n@@ -104,14 +111,16 @@ $(package)_config_opts += -no-feature-vnc\n $(package)_config_opts += -no-feature-wizard\n $(package)_config_opts += -no-feature-xml\n \n+$(package)_config_opts_darwin = -no-dbus\n+$(package)_config_opts_darwin += -no-opengl\n+\n ifneq ($(build_os),darwin)\n-$(package)_config_opts_darwin = -xplatform macx-clang-linux\n+$(package)_config_opts_darwin += -xplatform macx-clang-linux\n $(package)_config_opts_darwin += -device-option MAC_SDK_PATH=$(OSX_SDK)\n $(package)_config_opts_darwin += -device-option MAC_SDK_VERSION=$(OSX_SDK_VERSION)\n $(package)_config_opts_darwin += -device-option CROSS_COMPILE=\"$(host)-\"\n $(package)_config_opts_darwin += -device-option MAC_MIN_VERSION=$(OSX_MIN_VERSION)\n $(package)_config_opts_darwin += -device-option MAC_TARGET=$(host)\n-$(package)_config_opts_darwin += -device-option MAC_LD64_VERSION=$(LD64_VERSION)\n endif\n \n $(package)_config_opts_linux  = -qt-xkbcommon-x11\n@@ -121,12 +130,41 @@ $(package)_config_opts_linux += -no-feature-xlib\n $(package)_config_opts_linux += -system-freetype\n $(package)_config_opts_linux += -fontconfig\n $(package)_config_opts_linux += -no-opengl\n+$(package)_config_opts_linux += -dbus-runtime\n $(package)_config_opts_arm_linux += -platform linux-g++ -xplatform bitcoin-linux-g++\n $(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n $(package)_config_opts_x86_64_linux = -xplatform linux-g++-64\n $(package)_config_opts_aarch64_linux = -xplatform linux-aarch64-gnu-g++\n+$(package)_config_opts_powerpc64_linux = -platform linux-g++ -xplatform bitcoin-linux-g++\n+$(package)_config_opts_powerpc64le_linux = -platform linux-g++ -xplatform bitcoin-linux-g++\n $(package)_config_opts_riscv64_linux = -platform linux-g++ -xplatform bitcoin-linux-g++\n-$(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_config_opts_s390x_linux = -platform linux-g++ -xplatform bitcoin-linux-g++\n+\n+$(package)_config_opts_mingw32 = -no-opengl\n+$(package)_config_opts_mingw32 += -no-dbus\n+$(package)_config_opts_mingw32 += -xplatform win32-g++\n+$(package)_config_opts_mingw32 += -device-option CROSS_COMPILE=\"$(host)-\"\n+\n+$(package)_config_opts_android = -xplatform android-clang\n+$(package)_config_opts_android += -android-sdk $(ANDROID_SDK)\n+$(package)_config_opts_android += -android-ndk $(ANDROID_NDK)\n+$(package)_config_opts_android += -android-ndk-platform android-$(ANDROID_API_LEVEL)\n+$(package)_config_opts_android += -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_config_opts_android += -egl\n+$(package)_config_opts_android += -qpa xcb\n+$(package)_config_opts_android += -no-eglfs\n+$(package)_config_opts_android += -no-dbus\n+$(package)_config_opts_android += -opengl es2\n+$(package)_config_opts_android += -qt-freetype\n+$(package)_config_opts_android += -no-fontconfig\n+$(package)_config_opts_android += -L $(host_prefix)/lib\n+$(package)_config_opts_android += -I $(host_prefix)/include\n+\n+$(package)_config_opts_aarch64_android += -android-arch arm64-v8a\n+$(package)_config_opts_armv7a_android += -android-arch armeabi-v7a\n+$(package)_config_opts_x86_64_android += -android-arch x86_64\n+$(package)_config_opts_i686_android += -android-arch i686\n+\n $(package)_build_env  = QT_RCC_TEST=1\n $(package)_build_env += QT_RCC_SOURCE_DATE_OVERRIDE=1\n endef\n@@ -156,9 +194,7 @@ define $(package)_preprocess_cmds\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   sed -i.old \"/updateqm.depends =/d\" qttranslations/translations/translations.pro && \\\n   sed -i.old \"s/src_plugins.depends = src_sql src_network/src_plugins.depends = src_network/\" qtbase/src/src.pro && \\\n-  sed -i.old \"s|X11/extensions/XIproto.h|X11/X.h|\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n   sed -i.old -e 's/if \\[ \"$$$$XPLATFORM_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/if \\[ \"$$$$BUILD_ON_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/' -e 's|/bin/pwd|pwd|' qtbase/configure && \\\n-  sed -i.old 's/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, 0)/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, kCGMouseButtonLeft)/' qtbase/src/plugins/platforms/cocoa/qcocoacursor.mm && \\\n   mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n   cp -f qtbase/mkspecs/macx-clang/Info.plist.lib qtbase/mkspecs/macx-clang-linux/ &&\\\n   cp -f qtbase/mkspecs/macx-clang/Info.plist.app qtbase/mkspecs/macx-clang-linux/ &&\\\n@@ -171,16 +207,20 @@ define $(package)_preprocess_cmds\n   patch -p1 -i $($(package)_patch_dir)/fix_no_printer.patch &&\\\n   patch -p1 -i $($(package)_patch_dir)/fix_rcc_determinism.patch &&\\\n   patch -p1 -i $($(package)_patch_dir)/xkb-default.patch &&\\\n+  patch -p1 -i $($(package)_patch_dir)/fix_android_qmake_conf.patch &&\\\n+  patch -p1 -i $($(package)_patch_dir)/fix_android_jni_static.patch &&\\\n   echo \"!host_build: QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"!host_build: QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"!host_build: QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_riscv64_arch.patch &&\\\n   patch -p1 -i $($(package)_patch_dir)/no-xlib.patch &&\\\n   echo \"QMAKE_LINK_OBJECT_MAX = 10\" >> qtbase/mkspecs/win32-g++/qmake.conf &&\\\n   echo \"QMAKE_LINK_OBJECT_SCRIPT = object_script\" >> qtbase/mkspecs/win32-g++/qmake.conf &&\\\n-  sed -i.old \"s|QMAKE_CFLAGS            = |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_LFLAGS            = |!host_build: QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_CXXFLAGS          = |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CFLAGS           += |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CXXFLAGS         += |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"0,/^QMAKE_LFLAGS_/s|^QMAKE_LFLAGS_|!host_build: QMAKE_LFLAGS            = $($(package)_ldflags)\\n&|\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CC                = clang|QMAKE_CC                = $($(package)_cc)|\" qtbase/mkspecs/common/clang.conf && \\\n+  sed -i.old \"s|QMAKE_CXX               = clang++|QMAKE_CXX               = $($(package)_cxx)|\" qtbase/mkspecs/common/clang.conf && \\\n   sed -i.old \"s/LIBRARY_PATH/(CROSS_)?\\0/g\" qtbase/mkspecs/features/toolchain.prf\n endef\n "
      },
      {
        "sha": "a16fee270e87a56326a3091dbdea25cdbe334648",
        "filename": "depends/packages/rapidcheck.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/depends/packages/rapidcheck.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/depends/packages/rapidcheck.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/rapidcheck.mk?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,21 +0,0 @@\n-package=rapidcheck\n-$(package)_version=d9482c683429fe79122e3dcab14c9655874aeb8e\n-$(package)_download_path=https://github.com/emil-e/rapidcheck/archive\n-$(package)_file_name=$($(package)_version).tar.gz\n-$(package)_sha256_hash=b9ee8955b175fd3c0757ebd887bb075541761af08b0c28391b7c6c0685351f6b\n-\n-define $(package)_config_cmds\n-  cmake -DCMAKE_INSTALL_PREFIX=$($(package)_staging_dir)$(host_prefix) -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DRC_ENABLE_BOOST_TEST=ON -B .\n-endef\n-\n-define $(package)_preprocess_cmds\n-  sed -i.old 's/ -Wall//' CMakeLists.txt\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) rapidcheck\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) rapidcheck install\n-endef"
      },
      {
        "sha": "01203a0718af93deff60d84fb337848e79ae661e",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -4,11 +4,6 @@ $(package)_download_path=https://xcb.freedesktop.org/dist\n $(package)_file_name=xcb-proto-$($(package)_version).tar.bz2\n $(package)_sha256_hash=7ef40ddd855b750bc597d2a435da21e55e502a0fefa85b274f2c922800baaf05\n \n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n define $(package)_config_cmds\n   $($(package)_autoconf)\n endef"
      },
      {
        "sha": "6bd867d02b20f4cf46da0b73baa5fd1fab68f6b9",
        "filename": "depends/packages/xproto.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,6 +6,7 @@ $(package)_sha256_hash=636162c1759805a5a0114a369dffdeccb8af8c859ef6e1445f26a4e6e\n \n define $(package)_set_vars\n $(package)_config_opts=--without-fop --without-xmlto --without-xsltproc --disable-specs\n+$(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "6f35ede24850ad76484f76fc1f607a8bd158de65",
        "filename": "depends/packages/zeromq.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,10 +6,12 @@ $(package)_sha256_hash=bcbabe1e2c7d0eec4ed612e10b94b112dd5f06fcefa994a0c79a45d83\n $(package)_patches=0001-fix-build-with-older-mingw64.patch 0002-disable-pthread_set_name_np.patch\n \n define $(package)_set_vars\n-  $(package)_config_opts=--without-docs --disable-shared --disable-curve --disable-curve-keygen --disable-perf --disable-Werror --disable-drafts\n+  $(package)_config_opts=--without-docs --disable-shared --disable-curve --disable-curve-keygen --disable-perf\n   $(package)_config_opts += --without-libsodium --without-libgssapi_krb5 --without-pgm --without-norm --without-vmci\n-  $(package)_config_opts += --disable-libunwind --disable-radix-tree --without-gcov\n+  $(package)_config_opts += --disable-libunwind --disable-radix-tree --without-gcov --disable-dependency-tracking\n+  $(package)_config_opts += --disable-Werror --disable-drafts --enable-option-checking\n   $(package)_config_opts_linux=--with-pic\n+  $(package)_config_opts_android=--with-pic\n   $(package)_cxxflags=-std=c++11\n endef\n "
      },
      {
        "sha": "acb02020a80b2424fe6080a0b64b8ac54d33df62",
        "filename": "depends/packages/zlib.mk",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -5,23 +5,27 @@ $(package)_file_name=$(package)-$($(package)_version).tar.gz\n $(package)_sha256_hash=c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\n \n define $(package)_set_vars\n-$(package)_build_opts= CC=\"$($(package)_cc)\"\n-$(package)_build_opts+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags) -fPIC\"\n-$(package)_build_opts+=RANLIB=\"$($(package)_ranlib)\"\n-$(package)_build_opts+=AR=\"$($(package)_ar)\"\n-$(package)_build_opts_darwin+=AR=\"$($(package)_libtool)\"\n-$(package)_build_opts_darwin+=ARFLAGS=\"-o\"\n+$(package)_config_opts= CC=\"$($(package)_cc)\"\n+$(package)_config_opts+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags) -fPIC\"\n+$(package)_config_opts+=RANLIB=\"$($(package)_ranlib)\"\n+$(package)_config_opts+=AR=\"$($(package)_ar)\"\n+$(package)_config_opts_darwin+=AR=\"$($(package)_libtool)\"\n+$(package)_config_opts_darwin+=ARFLAGS=\"-o\"\n+$(package)_config_opts_android+=CHOST=$(host)\n endef\n \n+# zlib has its own custom configure script that takes in options like CC,\n+# CFLAGS, RANLIB, AR, and ARFLAGS from the environment rather than from\n+# command-line arguments.\n define $(package)_config_cmds\n-  ./configure --static --prefix=$(host_prefix)\n+  env $($(package)_config_opts) ./configure --static --prefix=$(host_prefix)\n endef\n \n define $(package)_build_cmds\n-  $(MAKE) $($(package)_build_opts) libz.a\n+  $(MAKE) libz.a\n endef\n \n define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install $($(package)_build_opts)\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n endef\n "
      },
      {
        "sha": "f346c8f2cff8b040cc534c32402ccf92229d8c05",
        "filename": "depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,45 @@\n+From 3e5fd3fb56bc9ff03beb535979e33dcf83fe1f70 Mon Sep 17 00:00:00 2001\n+From: Cory Fields <cory-nospam-@coryfields.com>\n+Date: Thu, 8 May 2014 12:39:42 -0400\n+Subject: [PATCH] dmg: remove libcrypto dependency\n+\n+---\n+ dmg/CMakeLists.txt | 16 ----------------\n+ 1 file changed, 16 deletions(-)\n+\n+diff --git a/dmg/CMakeLists.txt b/dmg/CMakeLists.txt\n+index eec62d6..3969f64 100644\n+--- a/dmg/CMakeLists.txt\n++++ b/dmg/CMakeLists.txt\n+@@ -1,12 +1,5 @@\n+-INCLUDE(FindOpenSSL)\n+ INCLUDE(FindZLIB)\n+ \n+-FIND_LIBRARY(CRYPTO_LIBRARIES crypto\n+-      PATHS\n+-      /usr/lib\n+-      /usr/local/lib\n+-   )\n+-\n+ IF(NOT ZLIB_FOUND)\n+ \tmessage(FATAL_ERROR \"zlib is required for dmg!\")\n+ ENDIF(NOT ZLIB_FOUND)\n+@@ -18,15 +11,6 @@ link_directories(${PROJECT_BINARY_DIR}/common ${PROJECT_BINARY_DIR}/hfs)\n+ \n+ add_library(dmg adc.c base64.c checksum.c dmgfile.c dmglib.c filevault.c io.c partition.c resources.c udif.c)\n+ \n+-IF(OPENSSL_FOUND)\n+-\tadd_definitions(-DHAVE_CRYPT)\n+-\tinclude_directories(${OPENSSL_INCLUDE_DIR})\n+-\ttarget_link_libraries(dmg ${CRYPTO_LIBRARIES})\n+-\tIF(WIN32)\n+-\t\tTARGET_LINK_LIBRARIES(dmg gdi32)\n+-\tENDIF(WIN32)\n+-ENDIF(OPENSSL_FOUND)\n+-\n+ target_link_libraries(dmg common hfs z)\n+ \n+ add_executable(dmg-bin dmg.c)\n+-- \n+2.22.0\n+"
      },
      {
        "sha": "2f6ff00f40c253c95d5bc62e887b032eac22055e",
        "filename": "depends/patches/qt/fix_android_jni_static.patch",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/qt/fix_android_jni_static.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/qt/fix_android_jni_static.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_jni_static.patch?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,18 @@\n+--- old/qtbase/src/plugins/platforms/android/androidjnimain.cpp\n++++ new/qtbase/src/plugins/platforms/android/androidjnimain.cpp\n+@@ -890,6 +890,14 @@\n+         __android_log_print(ANDROID_LOG_FATAL, \"Qt\", \"registerNatives failed\");\n+         return -1;\n+     }\n++\n++    const jint ret = QT_PREPEND_NAMESPACE(QtAndroidPrivate::initJNI(vm, env));\n++    if (ret != 0)\n++    {\n++        __android_log_print(ANDROID_LOG_FATAL, \"Qt\", \"initJNI failed\");\n++        return ret;\n++    }\n++\n+     QWindowSystemInterfacePrivate::TabletEvent::setPlatformSynthesizesMouse(false);\n+ \n+     m_javaVM = vm;\n+"
      },
      {
        "sha": "13bfff9776474028c5165f9e3d5e64bee3d576e5",
        "filename": "depends/patches/qt/fix_android_qmake_conf.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/qt/fix_android_qmake_conf.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/qt/fix_android_qmake_conf.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_qmake_conf.patch?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,20 @@\n+--- old/qtbase/mkspecs/android-clang/qmake.conf\n++++ new/qtbase/mkspecs/android-clang/qmake.conf\n+@@ -30,7 +30,7 @@\n+     QMAKE_CFLAGS += -target mips64el-none-linux-android\n+ \n+ QMAKE_CFLAGS += -gcc-toolchain $$NDK_TOOLCHAIN_PATH\n+-QMAKE_LINK    = $$QMAKE_CXX $$QMAKE_CFLAGS -Wl,--exclude-libs,libgcc.a\n++QMAKE_LINK    = $$QMAKE_CXX $$QMAKE_CFLAGS -Wl,--exclude-libs,libgcc.a -nostdlib++\n+ QMAKE_CFLAGS += -DANDROID_HAS_WSTRING --sysroot=$$NDK_ROOT/sysroot \\\n+                 -isystem $$NDK_ROOT/sysroot/usr/include/$$NDK_TOOLS_PREFIX \\\n+                 -isystem $$NDK_ROOT/sources/cxx-stl/llvm-libc++/include \\\n+@@ -40,7 +40,7 @@\n+ ANDROID_SOURCES_CXX_STL_LIBDIR = $$NDK_ROOT/sources/cxx-stl/llvm-libc++/libs/$$ANDROID_TARGET_ARCH\n+ \n+ ANDROID_STDCPP_PATH = $$ANDROID_SOURCES_CXX_STL_LIBDIR/libc++_shared.so\n+-ANDROID_CXX_STL_LIBS = -lc++\n++ANDROID_CXX_STL_LIBS = -lc++_shared\n+ \n+ QMAKE_ARM_CFLAGS_RELEASE                   = -Oz\n+ QMAKE_ARM_CFLAGS_RELEASE_WITH_DEBUGINFO    = -g -Oz"
      },
      {
        "sha": "4cd96df29ff307b012d5ae4c49cfff71948cca86",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -18,7 +18,7 @@ QMAKE_APPLE_DEVICE_ARCHS=x86_64\n !host_build: QMAKE_CFLAGS += -target $${MAC_TARGET}\n !host_build: QMAKE_OBJECTIVE_CFLAGS += $$QMAKE_CFLAGS\n !host_build: QMAKE_CXXFLAGS += $$QMAKE_CFLAGS\n-!host_build: QMAKE_LFLAGS += -target $${MAC_TARGET} -mlinker-version=$${MAC_LD64_VERSION}\n+!host_build: QMAKE_LFLAGS += -target $${MAC_TARGET}\n QMAKE_AR = $${CROSS_COMPILE}ar cq\n QMAKE_RANLIB=$${CROSS_COMPILE}ranlib\n QMAKE_LIBTOOL=$${CROSS_COMPILE}libtool"
      },
      {
        "sha": "b1c6f78a7046dbcdf4be20d3cc43e5cb09bc7528",
        "filename": "depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -12,7 +12,7 @@ diff --git a/src/thread.cpp b/src/thread.cpp\n index a1086b0c..9943f354 100644\n --- a/src/thread.cpp\n +++ b/src/thread.cpp\n-@@ -307,7 +307,7 @@ void zmq::thread_t::setThreadName (const char *name_)\n+@@ -308,7 +308,7 @@ void zmq::thread_t::setThreadName (const char *name_)\n   */\n      if (!name_)\n          return;\n@@ -21,9 +21,9 @@ index a1086b0c..9943f354 100644\n  #if defined(ZMQ_HAVE_PTHREAD_SETNAME_1)\n      int rc = pthread_setname_np (name_);\n      if (rc)\n-@@ -323,6 +323,8 @@ void zmq::thread_t::setThreadName (const char *name_)\n+@@ -324,6 +324,8 @@ void zmq::thread_t::setThreadName (const char *name_)\n  #elif defined(ZMQ_HAVE_PTHREAD_SET_NAME)\n-     pthread_set_name_np (descriptor, name_);\n+     pthread_set_name_np (_descriptor, name_);\n  #endif\n +#endif\n +    return;"
      },
      {
        "sha": "7e307ab7c84b00f43d75c514e86a334f0f9aa241",
        "filename": "doc/Doxyfile.in",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -790,7 +790,7 @@ WARN_LOGFILE           =\n # spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n # Note: If this tag is empty the current directory is searched.\n \n-INPUT                  = src\n+INPUT                  = src doc/README_doxygen.md\n \n # This tag can be used to specify the character encoding of the source files\n # that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n@@ -861,7 +861,8 @@ RECURSIVE              = YES\n # Note that relative paths are relative to the directory from which doxygen is\n # run.\n \n-EXCLUDE                = src/leveldb \\\n+EXCLUDE                = src/crc32c \\\n+                         src/leveldb \\\n                          src/json \\\n                          src/test \\\n                          src/qt/test\n@@ -974,7 +975,7 @@ FILTER_SOURCE_PATTERNS =\n # (index.html). This can be useful if you have a project on for instance GitHub\n # and want to reuse the introduction page also for the doxygen output.\n \n-USE_MDFILE_AS_MAINPAGE =\n+USE_MDFILE_AS_MAINPAGE = doc/README_doxygen.md\n \n #---------------------------------------------------------------------------\n # Configuration options related to source browsing"
      },
      {
        "sha": "19d8204d83eb7960ae0e91e04ca8404422e564df",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -30,7 +30,7 @@ Drag Bitcoin Core to your applications folder, and then run Bitcoin Core.\n \n * See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n for help and more information.\n-* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client, use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n+* Ask for help on [#bitcoin](https://webchat.freenode.net/#bitcoin) on Freenode. If you don't have an IRC client, use [webchat here](https://webchat.freenode.net/#bitcoin).\n * Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n \n Building\n@@ -54,7 +54,7 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Productivity Notes](productivity.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n-- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Source Code Documentation (External Link)](https://doxygen.bitcoincore.org/)\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [JSON-RPC Interface](JSON-RPC-interface.md)\n@@ -66,8 +66,8 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n \n ### Resources\n * Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client, use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n-* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client, use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client, use [webchat here](https://webchat.freenode.net/#bitcoin-core-dev).\n+* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client, use [webchat here](https://webchat.freenode.net/#bitcoin-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)\n@@ -84,5 +84,3 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n License\n ---------------------\n Distributed under the [MIT software license](/COPYING).\n-This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](https://www.openssl.org/). This product includes\n-cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "6888383a9861eaef1b5b1eb86d8e13712b2be2b0",
        "filename": "doc/README_doxygen.md",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/README_doxygen.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/README_doxygen.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_doxygen.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,15 @@\n+\\mainpage notitle\n+\n+\\section intro_sec Introduction\n+\n+This is the developer documentation of the reference client for an experimental new digital currency called Bitcoin,\n+which enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+with no central authority: managing transactions and issuing money are carried out collectively by the network.\n+\n+The software is a community-driven open source project, released under the MIT license.\n+\n+See https://github.com/bitcoin/bitcoin and https://bitcoincore.org/ for further information about the project.\n+\n+\\section Navigation\n+Use <a href=\"modules.html\"><code>Modules</code></a>, <a href=\"namespaces.html\"><code>Namespaces</code></a>, <a href=\"classes.html\"><code>Classes</code></a>, or <a href=\"files.html\"><code>Files</code></a> at the top of the page to start navigating the code.\n+"
      },
      {
        "sha": "11e9c90f49b9629d164d6d96040487fbdd882621",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -30,7 +30,7 @@ To query for a confirmed transaction, enable the transaction index via \"txindex=\n Given a block hash: returns a block, in binary, hex-encoded binary or JSON formats.\n Responds with 404 if the block doesn't exist.\n \n-The HTTP request and response are both handled entirely in-memory, thus making maximum memory usage at least 2.66MB (1 MB max block, plus hex encoding) per request.\n+The HTTP request and response are both handled entirely in-memory.\n \n With the /notxdetails/ option JSON response will only contain the transaction hash instead of the complete transaction details. The option only affects the JSON response.\n \n@@ -50,7 +50,7 @@ Given a height: returns hash of block in best-block-chain at height provided.\n \n Returns various state info regarding block chain processing.\n Only supports JSON as output format.\n-* chain : (string) current network name as defined in BIP70 (main, test, regtest)\n+* chain : (string) current network name (main, test, regtest)\n * blocks : (numeric) the current number of blocks processed in the server\n * headers : (numeric) the current number of headers we have validated\n * bestblockhash : (string) the hash of the currently best block\n@@ -81,7 +81,7 @@ $ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff76\n       {\n          \"txvers\" : 1\n          \"height\" : 2147483647,\n-         \"value\" : 8.8687,\t\t \n+         \"value\" : 8.8687,\n          \"scriptPubKey\" : {\n             \"asm\" : \"OP_DUP OP_HASH160 1c7cebb529b86a04c683dfa87be49de35bcf589e OP_EQUALVERIFY OP_CHECKSIG\",\n             \"hex\" : \"76a9141c7cebb529b86a04c683dfa87be49de35bcf589e88ac\","
      },
      {
        "sha": "b1a06009b52a7f1a6f6fb6f5923403ed0028862c",
        "filename": "doc/benchmarking.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -11,7 +11,7 @@ Running\n For benchmarks purposes you only need to compile `bitcoin_bench`. Beware of configuring without `--enable-debug` as this would impact\n benchmarking by unlatching log printers and lock analysis.\n \n-    make -C src bench_bitcoin\n+    make -C src bitcoin_bench\n \n After compiling bitcoin-core, the benchmarks can be run with:\n "
      },
      {
        "sha": "b96862297f52af4acfcca0eb7f9ce3470816fd04",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 17,
        "deletions": 12,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,4 +1,4 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.18.0**):\n+BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.19.0**):\n \n * [`BIP 9`](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/bitcoin/bitcoin/pull/7575))\n * [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n@@ -15,25 +15,30 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.18.0**):\n * [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)). As of **v0.13.0**, this is only available for `NODE_BLOOM` (BIP 111) peers.\n * [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial Merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)). Disabled by default since **v0.19.0**, can be enabled by the `-peerbloomfilters` option.\n * [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n-* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)). Starting **v0.17.0**, whether to send reject messages can be configured with the `-enablebip61` option, and support is deprecated as of **v0.18.0**.\n+* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)). Starting **v0.17.0**, whether to send reject messages can be configured with the `-enablebip61` option, and support is deprecated (disabled by default) as of **v0.18.0**. Support was removed in **v0.20.0** ([PR #15437](https://github.com/bitcoin/bitcoin/pull/15437)).\n * [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n-* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n-* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)). Support can be optionally disabled at build time since **v0.18.0** ([PR 14451](https://github.com/bitcoin/bitcoin/pull/14451)).\n+* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki):\n+  Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n+  Support can be optionally disabled at build time since **v0.18.0** ([PR 14451](https://github.com/bitcoin/bitcoin/pull/14451)),\n+  and it is disabled by default at build time since **v0.19.0** ([PR #15584](https://github.com/bitcoin/bitcoin/pull/15584)).\n+  It has been removed as of **v0.20.0** ([PR 17165](https://github.com/bitcoin/bitcoin/pull/17165)).\n * [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n-* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n-* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*.\n-* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)).\n+* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)). Enabled by default in the wallet GUI as of **v0.18.1** ([PR #11605](https://github.com/bitcoin/bitcoin/pull/11605))\n * [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n * [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n-* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)) and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n+* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 144`](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki): Segregated Witness as of **0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n * [`BIP 145`](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n-* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n+* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068)).\n-* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): The NODE_NETWORK_LIMITED service bit is signalled as of **v0.16.0** ([PR 11740](https://github.com/bitcoin/bitcoin/pull/11740)), and such nodes are connected to as of **v0.17.0** ([PR 10387](https://github.com/bitcoin/bitcoin/pull/10387)).\n-* [`BIP 173`](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki): Bech32 addresses for native Segregated Witness outputs are supported as of **v0.16.0** ([PR 11167](https://github.com/bitcoin/bitcoin/pull/11167)).\n+- [`BIP 158`](https://github.com/bitcoin/bips/blob/master/bip-0158.mediawiki): Compact Block Filters for Light Clients can be indexed as of **v0.19.0** ([PR #14121](https://github.com/bitcoin/bitcoin/pull/14121)).\n+* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): The `NODE_NETWORK_LIMITED` service bit is signalled as of **v0.16.0** ([PR 11740](https://github.com/bitcoin/bitcoin/pull/11740)), and such nodes are connected to as of **v0.17.0** ([PR 10387](https://github.com/bitcoin/bitcoin/pull/10387)).\n+* [`BIP 173`](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki): Bech32 addresses for native Segregated Witness outputs are supported as of **v0.16.0** ([PR 11167](https://github.com/bitcoin/bitcoin/pull/11167)). Bech32 addresses are generated by default as of **v0.20.0** ([PR 16884](https://github.com/bitcoin/bitcoin/pull/16884)).\n * [`BIP 174`](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki): RPCs to operate on Partially Signed Bitcoin Transactions (PSBT) are present as of **v0.17.0** ([PR 13557](https://github.com/bitcoin/bitcoin/pull/13557)).\n * [`BIP 176`](https://github.com/bitcoin/bips/blob/master/bip-0176.mediawiki): Bits Denomination [QT only] is supported as of **v0.16.0** ([PR 12035](https://github.com/bitcoin/bitcoin/pull/12035))."
      },
      {
        "sha": "f4a8edec75c5cf9a9bf04d010e5476698856d15c",
        "filename": "doc/bitcoin-conf.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -50,3 +50,13 @@ rpcport=4000\n The configuration file is not automatically created; you can create it using your favorite text editor. By default, the configuration file name is `bitcoin.conf` and it is located in the Bitcoin data directory, but both the Bitcoin data directory and the configuration file path may be changed using the `-datadir` and `-conf` command-line options.\n \n The `includeconf=<file>` option in the `bitcoin.conf` file can be used to include additional configuration files.\n+\n+### Default configuration file locations\n+\n+Operating System | Data Directory | Example Path\n+-- | -- | --\n+Windows | `%APPDATA%\\Bitcoin\\` | `C:\\Users\\username\\AppData\\Roaming\\Bitcoin\\bitcoin.conf`\n+Linux | `$HOME/.bitcoin/` | `/home/username/.bitcoin/bitcoin.conf`\n+macOS | `$HOME/Library/Application Support/Bitcoin/` | `/Users/username/Library/Application Support/Bitcoin/bitcoin.conf`\n+\n+You can find an example bitcoin.conf file in [share/examples/bitcoin.conf](../share/examples/bitcoin.conf)."
      },
      {
        "sha": "f48855a344fde73bb7b1cab23f74ce7c137dc264",
        "filename": "doc/build-freebsd.md",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -10,15 +10,15 @@ This guide does not contain instructions for building the GUI.\n \n You will need the following dependencies, which can be installed as root via pkg:\n \n-```shell\n-pkg install autoconf automake boost-libs git gmake libevent libtool openssl pkgconf\n+```bash\n+pkg install autoconf automake boost-libs git gmake libevent libtool pkgconf\n \n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n In order to run the test suite (recommended), you will need to have Python 3 installed:\n \n-```shell\n+```bash\n pkg install python3\n ```\n \n@@ -29,32 +29,33 @@ See [dependencies.md](dependencies.md) for a complete overview.\n BerkeleyDB is only necessary for the wallet functionality. To skip this, pass\n `--disable-wallet` to `./configure` and skip to the next section.\n \n-```shell\n+```bash\n ./contrib/install_db4.sh `pwd`\n export BDB_PREFIX=\"$PWD/db4\"\n ```\n \n ## Building Bitcoin Core\n \n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error):\n+**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n \n With wallet:\n-```shell\n+```bash\n ./autogen.sh\n ./configure --with-gui=no \\\n     BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n-    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\"\n+    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n+    MAKE=gmake\n ```\n \n Without wallet:\n-```shell\n+```bash\n ./autogen.sh\n-./configure --with-gui=no --disable-wallet\n+./configure --with-gui=no --disable-wallet MAKE=gmake\n ```\n \n followed by:\n \n-```shell\n+```bash\n gmake # use -jX here for parallelism\n gmake check # Run tests if Python 3 is available\n ```"
      },
      {
        "sha": "47049a780edef5c5e1ef87813eff17eb0060d467",
        "filename": "doc/build-netbsd.md",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -37,13 +37,13 @@ from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n If you have to build it yourself, you can use [the installation script included\n in contrib/](/contrib/install_db4.sh) like so:\n \n-```shell\n+```bash\n ./contrib/install_db4.sh `pwd`\n ```\n \n from the root of the repository. Then set `BDB_PREFIX` for the next section:\n \n-```shell\n+```bash\n export BDB_PREFIX=\"$PWD/db4\"\n ```\n \n@@ -52,24 +52,26 @@ export BDB_PREFIX=\"$PWD/db4\"\n **Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n \n With wallet:\n-```\n+```bash\n ./autogen.sh\n ./configure --with-gui=no CPPFLAGS=\"-I/usr/pkg/include\" \\\n     LDFLAGS=\"-L/usr/pkg/lib\" \\\n     BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n     BOOST_LDFLAGS=\"-L/usr/pkg/lib\" \\\n     BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n-    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\"\n+    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n+    MAKE=gmake\n ```\n \n Without wallet:\n-```\n+```bash\n ./autogen.sh\n ./configure --with-gui=no --disable-wallet \\\n     CPPFLAGS=\"-I/usr/pkg/include\" \\\n     LDFLAGS=\"-L/usr/pkg/lib\" \\\n     BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    BOOST_LDFLAGS=\"-L/usr/pkg/lib\"\n+    BOOST_LDFLAGS=\"-L/usr/pkg/lib\" \\\n+    MAKE=gmake\n ```\n \n Build and run the tests:"
      },
      {
        "sha": "53c647ae34b59a511ba9869b4af17372ea59a698",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -38,19 +38,19 @@ from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n If you have to build it yourself, you can use [the installation script included\n in contrib/](/contrib/install_db4.sh) like so:\n \n-```shell\n+```bash\n ./contrib/install_db4.sh `pwd` CC=cc CXX=c++\n ```\n \n from the root of the repository. Then set `BDB_PREFIX` for the next section:\n \n-```shell\n+```bash\n export BDB_PREFIX=\"$PWD/db4\"\n ```\n \n ### Building Bitcoin Core\n \n-**Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n+**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n \n Preparation:\n ```bash\n@@ -70,12 +70,14 @@ Make sure `BDB_PREFIX` is set to the appropriate path from the above steps.\n To configure with wallet:\n ```bash\n ./configure --with-gui=no CC=cc CXX=c++ \\\n-    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\"\n+    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n+    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n+    MAKE=gmake\n ```\n \n To configure without wallet:\n ```bash\n-./configure --disable-wallet --with-gui=no CC=cc CXX=c++\n+./configure --disable-wallet --with-gui=no CC=cc CXX=c++ MAKE=gmake\n ```\n \n Build and run the tests:"
      },
      {
        "sha": "7b76117c8bd868d1045cfd1106d5bf6049e27c00",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 3,
        "deletions": 95,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -19,9 +19,10 @@ Then install [Homebrew](https://brew.sh).\n \n ## Dependencies\n ```shell\n-brew install automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf python qt libevent qrencode\n+brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode\n ```\n \n+If you run into issues, check [Homebrew's troubleshooting page](https://docs.brew.sh/Troubleshooting).\n See [dependencies.md](dependencies.md) for a complete overview.\n \n If you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG:\n@@ -110,99 +111,6 @@ tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n ```\n \n ## Notes\n-* Tested on OS X 10.10 Yosemite through macOS 10.14 Mojave on 64-bit Intel\n+* Tested on OS X 10.12 Sierra through macOS 10.15 Catalina on 64-bit Intel\n processors only.\n * Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714).\n-\n-## Deterministic macOS DMG Notes\n-Working macOS DMGs are created in Linux by combining a recent `clang`, the Apple\n-`binutils` (`ld`, `ar`, etc) and DMG authoring tools.\n-\n-Apple uses `clang` extensively for development and has upstreamed the necessary\n-functionality so that a vanilla clang can take advantage. It supports the use of `-F`,\n-`-target`, `-mmacosx-version-min`, and `--sysroot`, which are all necessary when\n-building for macOS.\n-\n-Apple's version of `binutils` (called `cctools`) contains lots of functionality missing in the\n-FSF's `binutils`. In addition to extra linker options for frameworks and sysroots, several\n-other tools are needed as well such as `install_name_tool`, `lipo`, and `nmedit`. These\n-do not build under Linux, so they have been patched to do so. The work here was used as\n-a starting point: [mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n-\n-In order to build a working toolchain, the following source packages are needed from\n-Apple: `cctools`, `dyld`, and `ld64`.\n-\n-These tools inject timestamps by default, which produce non-deterministic binaries. The\n-`ZERO_AR_DATE` environment variable is used to disable that.\n-\n-This version of `cctools` has been patched to use the current version of `clang`'s headers\n-and its `libLTO.so` rather than those from `llvmgcc`, as it was originally done in `toolchain4`.\n-\n-To complicate things further, all builds must target an Apple SDK. These SDKs are free to\n-download, but not redistributable. To obtain it, register for an Apple Developer Account,\n-then download the [Xcode 7.3.1 dmg](https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg).\n-\n-This file is several gigabytes in size, but only a single directory inside is needed:\n-```\n-Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\n-```\n-\n-Unfortunately, the usual Linux tools (7zip, hpmount, loopback mount) are incapable of\n-opening this file. To create a tarball suitable for Gitian input, there are two options:\n-\n-Using macOS, you can mount the DMG, and then create it with:\n-```shell\n-hdiutil attach Xcode_7.3.1.dmg\n-tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.11.sdk.tar.gz MacOSX10.11.sdk\n-```\n-\n-Alternatively, you can use 7zip and SleuthKit to extract the files one by one. The script\n-[`extract-osx-sdk.sh`](./../contrib/macdeploy/extract-osx-sdk.sh) automates this. First\n-ensure the DMG file is in the current directory, and then run the script. You may wish to\n-delete the `intermediate 5.hfs` file and `MacOSX10.11.sdk` (the directory) when you've\n-confirmed the extraction succeeded.\n-\n-```shell\n-apt-get install p7zip-full sleuthkit\n-contrib/macdeploy/extract-osx-sdk.sh\n-rm -rf 5.hfs MacOSX10.11.sdk\n-```\n-\n-The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries which are\n-created using these tools. The build process has been designed to avoid including the\n-SDK's files in Gitian's outputs. All interim tarballs are fully deterministic and may be freely\n-redistributed.\n-\n-`genisoimage` is used to create the initial DMG. It is not deterministic as-is, so it has been\n-patched. A system `genisoimage` will work fine, but it will not be deterministic because\n-the file-order will change between invocations. The patch can be seen here:  [theuni/osx-cross-depends](https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff).\n-No effort was made to fix this cleanly, so it likely leaks memory badly. But it's only used for\n-a single invocation, so that's no real concern.\n-\n-`genisoimage` cannot compress DMGs, so afterwards, the DMG tool from the\n-`libdmg-hfsplus` project is used to compress it. There are several bugs in this tool and its\n-maintainer has seemingly abandoned the project. It has been forked and is available\n-(with fixes) here: [theuni/libdmg-hfsplus](https://github.com/theuni/libdmg-hfsplus).\n-\n-The DMG tool has the ability to create DMGs from scratch as well, but this functionality is\n-broken. Only the compression feature is currently used. Ideally, the creation could be fixed\n-and `genisoimage` would no longer be necessary.\n-\n-Background images and other features can be added to DMG files by inserting a\n-`.DS_Store` before creation. This is generated by the script\n-`contrib/macdeploy/custom_dsstore.py`.\n-\n-As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a requirement in\n-order to satisfy the new Gatekeeper requirements. Because this private key cannot be\n-shared, we'll have to be a bit creative in order for the build process to remain somewhat\n-deterministic. Here's how it works:\n-\n-- Builders use Gitian to create an unsigned release. This outputs an unsigned DMG which\n-  users may choose to bless and run. It also outputs an unsigned app structure in the form\n-  of a tarball, which also contains all of the tools that have been previously (deterministically)\n-  built in order to create a final DMG.\n-- The Apple keyholder uses this unsigned app to create a detached signature, using the\n-  script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n-- Builders feed the unsigned app + detached signature back into Gitian. It uses the\n-  pre-built tools to recombine the pieces into a deterministic DMG.\n-"
      },
      {
        "sha": "6b51db5f5527aea12925035117fa828571468fae",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -33,7 +33,6 @@ These dependencies are required:\n \n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n- libssl      | Crypto           | Random Number Generation, Elliptic Curve Cryptography\n  libboost    | Utility          | Library for threading, data structures, etc\n  libevent    | Networking       | OS independent asynchronous networking\n \n@@ -44,7 +43,6 @@ Optional dependencies:\n  miniupnpc   | UPnP Support     | Firewall-jumping support\n  libdb4.8    | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n  qt          | GUI              | GUI toolkit (only needed when GUI enabled)\n- protobuf    | Payments in GUI  | Data interchange format used for payment protocol (only needed when GUI enabled)\n  libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n  univalue    | Utility          | JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)\n  libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n@@ -82,7 +80,7 @@ Build requirements:\n \n Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n \n-    sudo apt-get install libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n+    sudo apt-get install libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev\n \n BerkeleyDB is required for the wallet.\n \n@@ -112,7 +110,7 @@ To build without GUI pass `--without-gui`.\n \n To build with Qt 5 you need the following:\n \n-    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n+    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools\n \n libqrencode (optional) can be installed with:\n \n@@ -128,7 +126,7 @@ built by default.\n \n Build requirements:\n \n-    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n+    sudo dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n \n Optional (see `--with-miniupnpc` and `--enable-upnp-default`):\n \n@@ -140,7 +138,7 @@ ZMQ dependencies (provides ZMQ API):\n \n To build with Qt 5 you need the following:\n \n-    sudo dnf install qt5-qttools-devel qt5-qtbase-devel protobuf-devel\n+    sudo dnf install qt5-qttools-devel qt5-qtbase-devel\n \n libqrencode (optional) can be installed with:\n \n@@ -155,8 +153,8 @@ symbols, which reduces the executable size by about 90%.\n miniupnpc\n ---------\n \n-[miniupnpc](http://miniupnp.free.fr/) may be used for UPnP port mapping.  It can be downloaded from [here](\n-http://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n+[miniupnpc](https://miniupnp.tuxfamily.org) may be used for UPnP port mapping.  It can be downloaded from [here](\n+https://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n turned off by default.  See the configure options for upnp behavior desired:\n \n \t--without-miniupnpc      No UPnP support miniupnp not required"
      },
      {
        "sha": "bbff638b90ba25c7c5dfecf0e5c5de73b449f71d",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -8,18 +8,18 @@ The options known to work for building Bitcoin Core on Windows are:\n * On Linux, using the [Mingw-w64](https://mingw-w64.org/doku.php) cross compiler tool chain. Ubuntu Bionic 18.04 is required\n and is the platform used to build the Bitcoin Core Windows release binaries.\n * On Windows, using [Windows\n-Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about) and the Mingw-w64 cross compiler tool chain.\n+Subsystem for Linux (WSL)](https://docs.microsoft.com/windows/wsl/about) and the Mingw-w64 cross compiler tool chain.\n+* On Windows, using a native compiler tool chain such as [Visual Studio](https://www.visualstudio.com).\n \n Other options which may work, but which have not been extensively tested are (please contribute instructions):\n \n-* On Windows, using a POSIX compatibility layer application such as [cygwin](http://www.cygwin.com/) or [msys2](http://www.msys2.org/).\n-* On Windows, using a native compiler tool chain such as [Visual Studio](https://www.visualstudio.com).\n+* On Windows, using a POSIX compatibility layer application such as [cygwin](https://www.cygwin.com/) or [msys2](https://www.msys2.org/).\n \n Installing Windows Subsystem for Linux\n ---------------------------------------\n \n With Windows 10, Microsoft has released a new feature named the [Windows\n-Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about). This\n+Subsystem for Linux (WSL)](https://docs.microsoft.com/windows/wsl/about). This\n feature allows you to run a bash shell directly on Windows in an Ubuntu-based\n environment. Within this environment you can cross compile for Windows without\n the need for a separate Linux VM or server. Note that while WSL can be installed with\n@@ -28,7 +28,7 @@ tested with Ubuntu.\n \n This feature is not supported in versions of Windows prior to Windows 10 or on\n Windows Server SKUs. In addition, it is available [only for 64-bit versions of\n-Windows](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide).\n+Windows](https://docs.microsoft.com/windows/wsl/install-win10).\n \n Full instructions to install WSL are available on the above link.\n To install WSL on Windows 10 with Fall Creators Update installed (version >= 16215.0) do the following:\n@@ -62,8 +62,7 @@ First, install the general dependencies:\n     sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git\n \n A host toolchain (`build-essential`) is necessary because some dependency\n-packages (such as `protobuf`) need to build host utilities that are used in the\n-build process.\n+packages need to build host utilities that are used in the build process.\n \n See [dependencies.md](dependencies.md) for a complete overview.\n "
      },
      {
        "sha": "0cb5311e8b7c8a269fa5efadf54e3b7dd161a9fb",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -10,19 +10,17 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | Clang |  | [3.3+](https://releases.llvm.org/download.html) (C++11 support) |  |  |  |\n | Expat | [2.2.7](https://libexpat.github.io/) |  | No | Yes |  |\n | fontconfig | [2.12.1](https://www.freedesktop.org/software/fontconfig/release/) |  | No | Yes |  |\n-| FreeType | [2.7.1](https://download.savannah.gnu.org/releases/freetype) |  | No |  |  |\n+| FreeType | [2.7.1](https://download.savannah.gnu.org/releases/freetype) |  | No |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Android only) |\n | GCC |  | [4.8+](https://gcc.gnu.org/) (C++11 support) |  |  |  |\n-| HarfBuzz-NG |  |  |  |  |  |\n-| libevent | [2.1.8-stable](https://github.com/libevent/libevent/releases) | 2.0.22 | No |  |  |\n+| HarfBuzz-NG |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n+| libevent | [2.1.11-stable](https://github.com/libevent/libevent/releases) | [2.0.21](https://github.com/bitcoin/bitcoin/pull/18676) | No |  |  |\n | libpng |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | librsvg | |  |  |  |  |\n-| MiniUPnPc | [2.0.20180203](http://miniupnp.free.fr/files) |  | No |  |  |\n-| OpenSSL | [1.0.1k](https://www.openssl.org/source) |  | Yes |  |  |\n+| MiniUPnPc | [2.0.20180203](https://miniupnp.tuxfamily.org/files) |  | No |  |  |\n | PCRE |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n-| protobuf | [2.6.1](https://github.com/google/protobuf/releases) |  | No |  |  |\n | Python (tests) |  | [3.5](https://www.python.org/downloads) |  |  |  |\n | qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |\n-| Qt | [5.9.7](https://download.qt.io/official_releases/qt/) | [5.5.1](https://github.com/bitcoin/bitcoin/issues/13478) | No |  |  |\n+| Qt | [5.9.8](https://download.qt.io/official_releases/qt/) | [5.5.1](https://github.com/bitcoin/bitcoin/issues/13478) | No |  |  |\n | XCB |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Linux only) |\n | xkbcommon |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Linux only) |\n | ZeroMQ | [4.3.1](https://github.com/zeromq/libzmq/releases) | 4.0.0 | No |  |  |\n@@ -35,7 +33,6 @@ Some dependencies are not needed in all configurations. The following are some f\n #### Options passed to `./configure`\n * MiniUPnPc is not needed with  `--with-miniupnpc=no`.\n * Berkeley DB is not needed with `--disable-wallet`.\n-* protobuf is not needed with `--disable-bip70`.\n * Qt is not needed with `--without-gui`.\n * If the qrencode dependency is absent, QR support won't be added. To force an error when that happens, pass `--with-qrencode`.\n * ZeroMQ is needed only with the `--with-zmq` option."
      },
      {
        "sha": "181ff77e5080abce1c4f3fb2116afdf8649590e2",
        "filename": "doc/descriptors.md",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -10,6 +10,14 @@ Supporting RPCs are:\n - `deriveaddresses` takes as input a descriptor and computes the corresponding\n   addresses.\n - `listunspent` outputs a specialized descriptor for the reported unspent outputs.\n+- `getaddressinfo` outputs a descriptor for solvable addresses (since v0.18).\n+- `importmulti` takes as input descriptors to import into the wallet\n+  (since v0.18).\n+- `generatetodescriptor` takes as input a descriptor and generates coins to it\n+  (`regtest` only, since v0.19).\n+- `utxoupdatepsbt` takes as input descriptors to add information to the psbt\n+  (since v0.19).\n+- `createmultisig` and `addmultisigaddress` return descriptors as well (since v0.20)\n \n This document describes the language. For the specifics on usage, see the RPC\n documentation for the functions mentioned above.\n@@ -23,6 +31,7 @@ Output descriptors currently support:\n - Pay-to-script-hash scripts (P2SH), through the `sh` function.\n - Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n - Multisig scripts, through the `multi` function.\n+- Multisig scripts where the public keys are sorted lexicographically, through the `sortedmulti` function.\n - Any type of supported address through the `addr` function.\n - Raw hex scripts through the `raw` function.\n - Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation paths.\n@@ -37,12 +46,14 @@ Output descriptors currently support:\n - `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` describes an (overly complicated) P2SH-P2WSH-P2PKH output with the specified public key.\n - `multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)` describes a bare *1-of-2* multisig output with keys in the specified order.\n - `sh(multi(2,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe))` describes a P2SH *2-of-2* multisig output with keys in the specified order.\n+- `sh(sortedmulti(2,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01))` describes a P2SH *2-of-2* multisig output with keys sorted lexicographically in the resulting redeemScript.\n - `wsh(multi(2,03a0434d9e47f3c86235477c7b1ae6ae5d3442d49b1943c2b752a68e2a47e247c7,03774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb,03d01115d548e7561b15c38f004d734633687cf4419620095bc5b0f47070afe85a))` describes a P2WSH *2-of-3* multisig output with keys in the specified order.\n - `sh(wsh(multi(1,03f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8,03499fdf9e895e719cfd64e67f07d38e3226aa7b63678949e6e49b241a60e823e4,02d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e)))` describes a P2SH-P2WSH *1-of-3* multisig output with keys in the specified order.\n - `pk(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8)` describes a P2PK output with the public key of the specified xpub.\n - `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2)` describes a P2PKH output with child key *1'/2* of the specified xpub.\n - `pkh([d34db33f/44'/0'/0']xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)` describes a set of P2PKH outputs, but additionally specifies that the specified xpub is a child of a master with fingerprint `d34db33f`, and derived using path `44'/0'/0'`.\n - `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where the first multisig key is the *1/0/`i`* child of the first specified xpub and the second multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default).\n+- `wsh(sortedmulti(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where one multisig key is the *1/0/`i`* child of the first specified xpub and the other multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default). The order of public keys in the resulting witnessScripts is determined by the lexicographic order of the public keys at that index.\n \n ## Reference\n \n@@ -56,6 +67,7 @@ Descriptors consist of several types of expressions. The top level expression is\n - `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n - `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)` and `pkh(KEY)`. If the key is compressed, it also includes `wpkh(KEY)` and `sh(wpkh(KEY))`.\n - `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `sortedmulti(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script with keys sorted lexicographically in the resulting script.\n - `addr(ADDR)` (top level only): the script which ADDR expands to.\n - `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n \n@@ -101,11 +113,12 @@ not contain \"p2\" for brevity.\n \n Several pieces of software use multi-signature (multisig) scripts based\n on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the\n-`multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n*\n+`multi(k,key_1,key_2,...,key_n)` and `sortedmulti(k,key_1,key_2,...,key_n)`\n+functions. They represent a *k-of-n*\n multisig policy, where any *k* out of the *n* provided `KEY` expressions must\n sign.\n \n-Key order is significant. A `multi()` expression describes a multisig script\n+Key order is significant for `multi()`. A `multi()` expression describes a multisig script\n with keys in the specified order, and in a search for TXOs, it will not match\n outputs with multisig scriptPubKeys that have the same keys in a different\n order. Also, to prevent a combinatorial explosion of the search space, if more\n@@ -114,6 +127,10 @@ or `*'`, the `multi()` expression only matches multisig scripts with the `i`th\n child key from each wildcard path in lockstep, rather than scripts with any\n combination of child keys from each wildcard path.\n \n+Key order does not matter for `sortedmulti()`. `sortedmulti()` behaves in the same way\n+as `multi()` does but the keys are reordered in the resulting script such that they\n+are lexicographically ordered as described in BIP67.\n+\n ### BIP32 derived keys and chains\n \n Most modern wallet software and hardware uses keys that are derived using"
      },
      {
        "sha": "b33b3ad18a5b4dc9701d7aa4aaadefcf94f72a15",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 329,
        "deletions": 72,
        "changes": 401,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -9,15 +9,17 @@ Developer Notes\n     - [Coding Style (C++)](#coding-style-c)\n     - [Coding Style (Python)](#coding-style-python)\n     - [Coding Style (Doxygen-compatible comments)](#coding-style-doxygen-compatible-comments)\n+      - [Generating Documentation](#generating-documentation)\n     - [Development tips and tricks](#development-tips-and-tricks)\n         - [Compiling for debugging](#compiling-for-debugging)\n         - [Compiling for gprof profiling](#compiling-for-gprof-profiling)\n-        - [debug.log](#debuglog)\n+        - [`debug.log`](#debuglog)\n         - [Testnet and Regtest modes](#testnet-and-regtest-modes)\n         - [DEBUG_LOCKORDER](#debug_lockorder)\n         - [Valgrind suppressions file](#valgrind-suppressions-file)\n         - [Compiling for test coverage](#compiling-for-test-coverage)\n         - [Performance profiling with perf](#performance-profiling-with-perf)\n+        - [Sanitizers](#sanitizers)\n     - [Locking/mutex usage notes](#lockingmutex-usage-notes)\n     - [Threads](#threads)\n     - [Ignoring IDE/editor files](#ignoring-ideeditor-files)\n@@ -27,16 +29,21 @@ Developer Notes\n     - [General C++](#general-c)\n     - [C++ data structures](#c-data-structures)\n     - [Strings and formatting](#strings-and-formatting)\n-    - [Variable names](#variable-names)\n+    - [Shadowing](#shadowing)\n     - [Threads and synchronization](#threads-and-synchronization)\n     - [Scripts](#scripts)\n         - [Shebang](#shebang)\n     - [Source code organization](#source-code-organization)\n     - [GUI](#gui)\n     - [Subtrees](#subtrees)\n+    - [Upgrading LevelDB](#upgrading-leveldb)\n+      - [File Descriptor Counts](#file-descriptor-counts)\n+      - [Consensus Compatibility](#consensus-compatibility)\n     - [Scripted diffs](#scripted-diffs)\n+        - [Suggestions and examples](#suggestions-and-examples)\n     - [Release notes](#release-notes)\n     - [RPC interface guidelines](#rpc-interface-guidelines)\n+    - [Internal interface guidelines](#internal-interface-guidelines)\n \n <!-- markdown-toc end -->\n \n@@ -62,7 +69,7 @@ tool to clean up patches automatically before submission.\n   - Braces on the same line for everything else.\n   - 4 space indentation (no tabs) for every block except namespaces.\n   - No indentation for `public`/`protected`/`private` or for `namespace`.\n-  - No extra spaces inside parenthesis; don't do ( this ).\n+  - No extra spaces inside parenthesis; don't do `( this )`.\n   - No space after function names; one space after `if`, `for` and `while`.\n   - If an `if` only has a single-statement `then`-clause, it can appear\n     on the same line as the `if`, without braces. In every other case,\n@@ -76,7 +83,7 @@ code.\n     separate words (snake_case).\n     - Class member variables have a `m_` prefix.\n     - Global variables have a `g_` prefix.\n-  - Constant names are all uppercase, and use `_` to separate words.\n+  - Compile-time constant names are all uppercase, and use `_` to separate words.\n   - Class names, function names, and method names are UpperCamelCase\n     (PascalCase). Do not prefix class names with `C`.\n   - Test suite naming convention: The Boost test suite in file\n@@ -87,7 +94,6 @@ code.\n   - `++i` is preferred over `i++`.\n   - `nullptr` is preferred over `NULL` or `(void*)0`.\n   - `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\n-  - `enum class` is preferred over `enum` where possible. Scoped enumerations avoid two potential pitfalls/problems with traditional C++ enumerations: implicit conversions to int, and name clashes due to enumerators being exported to the surrounding scope.\n \n Block style example:\n ```c++\n@@ -137,12 +143,17 @@ For example, to describe a function use:\n \n ```c++\n /**\n- * ... text ...\n- * @param[in] arg1    A description\n- * @param[in] arg2    Another argument description\n- * @pre Precondition for function...\n+ * ... Description ...\n+ *\n+ * @param[in]  arg1 input description...\n+ * @param[in]  arg2 input description...\n+ * @param[out] arg3 output description...\n+ * @return Return cases...\n+ * @throws Error type and cases...\n+ * @pre  Pre-condition for function...\n+ * @post Post-condition for function...\n  */\n-bool function(int arg1, const char *arg2)\n+bool function(int arg1, const char *arg2, std::string& arg3)\n ```\n \n A complete list of `@xxx` commands can be found at http://www.doxygen.nl/manual/commands.html.\n@@ -157,44 +168,73 @@ To describe a class, use the same construct above the class definition:\n  * @see GetWarnings()\n  */\n class CAlert\n-{\n ```\n \n To describe a member or variable use:\n ```c++\n-int var; //!< Detailed description after the member\n+//! Description before the member\n+int var;\n ```\n \n or\n ```c++\n-//! Description before the member\n-int var;\n+int var; //!< Description after the member\n ```\n \n Also OK:\n ```c++\n ///\n-/// ... text ...\n+/// ... Description ...\n ///\n bool function2(int arg1, const char *arg2)\n ```\n \n-Not OK (used plenty in the current source, but not picked up):\n+Not picked up by Doxygen:\n ```c++\n //\n-// ... text ...\n+// ... Description ...\n //\n ```\n \n+Also not picked up by Doxygen:\n+```c++\n+/*\n+ * ... Description ...\n+ */\n+```\n+\n A full list of comment syntaxes picked up by Doxygen can be found at http://www.doxygen.nl/manual/docblocks.html,\n but the above styles are favored.\n \n-Documentation can be generated with `make docs` and cleaned up with `make clean-docs`. The resulting files are located in `doc/doxygen/html`; open `index.html` to view the homepage.\n+Recommendations:\n \n-Before running `make docs`, you will need to install dependencies `doxygen` and `dot`. For example, on macOS via Homebrew:\n-```\n-brew install doxygen --with-graphviz\n-```\n+- Avoiding duplicating type and input/output information in function\n+  descriptions.\n+\n+- Use backticks (&#96;&#96;) to refer to `argument` names in function and\n+  parameter descriptions.\n+\n+- Backticks aren't required when referring to functions Doxygen already knows\n+  about; it will build hyperlinks for these automatically. See\n+  http://www.doxygen.nl/manual/autolink.html for complete info.\n+\n+- Avoid linking to external documentation; links can break.\n+\n+- Javadoc and all valid Doxygen comments are stripped from Doxygen source code\n+  previews (`STRIP_CODE_COMMENTS = YES` in [Doxyfile.in](doc/Doxyfile.in)). If\n+  you want a comment to be preserved, it must instead use `//` or `/* */`.\n+\n+### Generating Documentation\n+\n+The documentation can be generated with `make docs` and cleaned up with `make\n+clean-docs`. The resulting files are located in `doc/doxygen/html`; open\n+`index.html` in that directory to view the homepage.\n+\n+Before running `make docs`, you'll need to install these dependencies:\n+\n+Linux: `sudo apt install doxygen graphviz`\n+\n+MacOS: `brew install doxygen graphviz`\n \n Development tips and tricks\n ---------------------------\n@@ -208,15 +248,15 @@ produce better debugging builds.\n \n Run configure with the `--enable-gprof` option, then make.\n \n-### debug.log\n+### `debug.log`\n \n-If the code is behaving strangely, take a look in the debug.log file in the data directory;\n+If the code is behaving strangely, take a look in the `debug.log` file in the data directory;\n error and debugging messages are written there.\n \n The `-debug=...` command-line option controls debugging; running with just `-debug` or `-debug=1` will turn\n-on all categories (and give you a very large debug.log file).\n+on all categories (and give you a very large `debug.log` file).\n \n-The Qt code routes `qDebug()` output to debug.log under category \"qt\": run with `-debug=qt`\n+The Qt code routes `qDebug()` output to `debug.log` under category \"qt\": run with `-debug=qt`\n to see it.\n \n ### Testnet and Regtest modes\n@@ -234,7 +274,7 @@ Bitcoin Core is a multi-threaded application, and deadlocks or other\n multi-threading bugs can be very difficult to track down. The `--enable-debug`\n configure option adds `-DDEBUG_LOCKORDER` to the compiler flags. This inserts\n run-time checks to keep track of which locks are held and adds warnings to the\n-debug.log file if inconsistencies are detected.\n+`debug.log` file if inconsistencies are detected.\n \n ### Valgrind suppressions file\n \n@@ -249,6 +289,7 @@ $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n       --show-leak-kinds=all src/test/test_bitcoin --log_level=test_suite\n $ valgrind -v --leak-check=full src/bitcoind -printtoconsole\n+$ ./test/functional/test_runner.py --valgrind\n ```\n \n ### Compiling for test coverage\n@@ -276,8 +317,7 @@ the functional test framework. Perf can observe a running process and sample\n (at some frequency) where its execution is.\n \n Perf installation is contingent on which kernel version you're running; see\n-[this StackExchange\n-thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n+[this thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n for specific instructions.\n \n Certain kernel parameters may need to be set for perf to be able to inspect the\n@@ -312,7 +352,7 @@ or using a graphical tool like [Hotspot](https://github.com/KDAB/hotspot).\n See the functional test documentation for how to invoke perf within tests.\n \n \n-**Sanitizers**\n+### Sanitizers\n \n Bitcoin Core can be compiled with various \"sanitizers\" enabled, which add\n instrumentation for issues regarding things like memory safety, thread race\n@@ -373,7 +413,7 @@ Deadlocks due to inconsistent lock ordering (thread 1 locks `cs_main` and then\n `cs_wallet`, while thread 2 locks them in the opposite order: result, deadlock\n as each waits for the other to release its lock) are a problem. Compile with\n `-DDEBUG_LOCKORDER` (or use `--enable-debug`) to get lock order inconsistencies\n-reported in the debug.log file.\n+reported in the `debug.log` file.\n \n Re-architecting the core code so there are better-defined interfaces\n between the various components is a goal, with any necessary locking\n@@ -383,29 +423,52 @@ and its `cs_KeyStore` lock for example).\n Threads\n -------\n \n-- ThreadScriptCheck : Verifies block scripts.\n+- [Main thread (`bitcoind`)](https://doxygen.bitcoincore.org/bitcoind_8cpp.html#a0ddf1224851353fc92bfbff6f499fa97)\n+  : Started from `main()` in `bitcoind.cpp`. Responsible for starting up and\n+  shutting down the application.\n+\n+- [ThreadImport (`b-loadblk`)](https://doxygen.bitcoincore.org/init_8cpp.html#ae9e290a0e829ec0198518de2eda579d1)\n+  : Loads blocks from `blk*.dat` files or `-loadblock=<file>` on startup.\n \n-- ThreadImport : Loads blocks from blk*.dat files or bootstrap.dat.\n+- [ThreadScriptCheck (`b-scriptch.x`)](https://doxygen.bitcoincore.org/validation_8cpp.html#a925a33e7952a157922b0bbb8dab29a20)\n+  : Parallel script validation threads for transactions in blocks.\n \n-- StartNode : Starts other threads.\n+- [ThreadHTTP (`b-http`)](https://doxygen.bitcoincore.org/httpserver_8cpp.html#abb9f6ea8819672bd9a62d3695070709c)\n+  : Libevent thread to listen for RPC and REST connections.\n \n-- ThreadDNSAddressSeed : Loads addresses of peers from the DNS.\n+- [HTTP worker threads(`b-httpworker.x`)](https://doxygen.bitcoincore.org/httpserver_8cpp.html#aa6a7bc27265043bc0193220c5ae3a55f)\n+  : Threads to service RPC and REST requests.\n \n-- ThreadMapPort : Universal plug-and-play startup/shutdown.\n+- [Indexer threads (`b-txindex`, etc)](https://doxygen.bitcoincore.org/class_base_index.html#a96a7407421fbf877509248bbe64f8d87)\n+  : One thread per indexer.\n \n-- ThreadSocketHandler : Sends/Receives data from peers on port 8333.\n+- [SchedulerThread (`b-scheduler`)](https://doxygen.bitcoincore.org/class_c_scheduler.html#a14d2800815da93577858ea078aed1fba)\n+  : Does asynchronous background tasks like dumping wallet contents, dumping\n+  addrman and running asynchronous validationinterface callbacks.\n \n-- ThreadOpenAddedConnections : Opens network connections to added nodes.\n+- [TorControlThread (`b-torcontrol`)](https://doxygen.bitcoincore.org/torcontrol_8cpp.html#a4faed3692d57a0d7bdbecf3b37f72de0)\n+  : Libevent thread for tor connections.\n \n-- ThreadOpenConnections : Initiates new connections to peers.\n+- Net threads:\n \n-- ThreadMessageHandler : Higher-level message handling (sending and receiving).\n+  - [ThreadMessageHandler (`b-msghand`)](https://doxygen.bitcoincore.org/class_c_connman.html#aacdbb7148575a31bb33bc345e2bf22a9)\n+    : Application level message handling (sending and receiving). Almost\n+    all net_processing and validation logic runs on this thread.\n \n-- DumpAddresses : Dumps IP addresses of nodes to peers.dat.\n+  - [ThreadDNSAddressSeed (`b-dnsseed`)](https://doxygen.bitcoincore.org/class_c_connman.html#aa7c6970ed98a4a7bafbc071d24897d13)\n+    : Loads addresses of peers from the DNS.\n \n-- ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n+  - [ThreadMapPort (`b-upnp`)](https://doxygen.bitcoincore.org/net_8cpp.html#a63f82a71c4169290c2db1651a9bbe249)\n+    : Universal plug-and-play startup/shutdown.\n \n-- Shutdown : Does an orderly shutdown of everything.\n+  - [ThreadSocketHandler (`b-net`)](https://doxygen.bitcoincore.org/class_c_connman.html#a765597cbfe99c083d8fa3d61bb464e34)\n+    : Sends/Receives data from peers on port 8333.\n+\n+  - [ThreadOpenAddedConnections (`b-addcon`)](https://doxygen.bitcoincore.org/class_c_connman.html#a0b787caf95e52a346a2b31a580d60a62)\n+    : Opens network connections to added nodes.\n+\n+  - [ThreadOpenConnections (`b-opencon`)](https://doxygen.bitcoincore.org/class_c_connman.html#a55e9feafc3bab78e5c9d408c207faa45)\n+    : Initiates new connections to peers.\n \n Ignoring IDE/editor files\n --------------------------\n@@ -467,11 +530,6 @@ Wallet\n \n - Make sure that no crashes happen with run-time option `-disablewallet`.\n \n-  - *Rationale*: In RPC code that conditionally uses the wallet (such as\n-    `validateaddress`), it is easy to forget that global pointer `pwalletMain`\n-    can be nullptr. See `test/functional/disablewallet.py` for functional tests\n-    exercising the API with `-disablewallet`.\n-\n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set.\n \n   - *Rationale*: Otherwise compilation of the disable-wallet build will fail in environments without BerkeleyDB.\n@@ -546,11 +604,10 @@ class A\n }\n ```\n \n-- By default, declare single-argument constructors `explicit`.\n+- By default, declare constructors `explicit`.\n \n-  - *Rationale*: This is a precaution to avoid unintended conversions that might\n-    arise when single-argument constructors are used as implicit conversion\n-    functions.\n+  - *Rationale*: This is a precaution to avoid unintended\n+    [conversions](https://en.cppreference.com/w/cpp/language/converting_constructor).\n \n - Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API.\n@@ -563,6 +620,34 @@ class A\n   - *Rationale*: Easier to understand what is happening, thus easier to spot mistakes, even for those\n   that are not language lawyers.\n \n+- Prefer `enum class` (scoped enumerations) over `enum` (traditional enumerations) where possible.\n+\n+  - *Rationale*: Scoped enumerations avoid two potential pitfalls/problems with traditional C++ enumerations: implicit conversions to `int`, and name clashes due to enumerators being exported to the surrounding scope.\n+\n+- `switch` statement on an enumeration example:\n+\n+```cpp\n+enum class Tabs {\n+    INFO,\n+    CONSOLE,\n+    GRAPH,\n+    PEERS\n+};\n+\n+int GetInt(Tabs tab)\n+{\n+    switch (tab) {\n+    case Tabs::INFO: return 0;\n+    case Tabs::CONSOLE: return 1;\n+    case Tabs::GRAPH: return 2;\n+    case Tabs::PEERS: return 3;\n+    } // no default case, so the compiler can warn about missing cases\n+    assert(false);\n+}\n+```\n+\n+*Rationale*: The comment documents skipping `default:` label, and it complies with `clang-format` rules. The assertion prevents firing of `-Wreturn-type` warning on some compilers.\n+\n Strings and formatting\n ------------------------\n \n@@ -613,27 +698,35 @@ Strings and formatting\n \n   - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion.\n \n-Variable names\n+- Use `.c_str()` sparingly. Its only valid use is to pass C++ strings to C functions that take NULL-terminated\n+  strings.\n+\n+  - Do not use it when passing a sized array (so along with `.size()`). Use `.data()` instead to get a pointer\n+    to the raw data.\n+\n+    - *Rationale*: Although this is guaranteed to be safe starting with C++11, `.data()` communicates the intent better.\n+\n+  - Do not use it when passing strings to `tfm::format`, `strprintf`, `LogPrint[f]`.\n+\n+    - *Rationale*: This is redundant. Tinyformat handles strings.\n+\n+  - Do not use it to convert to `QString`. Use `QString::fromStdString()`.\n+\n+    - *Rationale*: Qt has built-in functionality for converting their string\n+      type from/to C++. No need to roll your own.\n+\n+  - In cases where do you call `.c_str()`, you might want to additionally check that the string does not contain embedded '\\0' characters, because\n+    it will (necessarily) truncate the string. This might be used to hide parts of the string from logging or to circumvent\n+    checks. If a use of strings is sensitive to this, take care to check the string for embedded NULL characters first\n+    and reject it if there are any (see `ParsePrechecks` in `strencodings.cpp` for an example).\n+\n+Shadowing\n --------------\n \n Although the shadowing warning (`-Wshadow`) is not enabled by default (it prevents issues arising\n from using a different variable with the same name),\n please name variables so that their names do not shadow variables defined in the source code.\n \n-E.g. in member initializers, prepend `_` to the argument name shadowing the\n-member name:\n-\n-```c++\n-class AddressBookPage\n-{\n-    Mode m_mode;\n-}\n-\n-AddressBookPage::AddressBookPage(Mode _mode)\n-    : m_mode(_mode)\n-...\n-```\n-\n When using nested cycles, do not name the inner cycle variable the same as in\n the upper cycle, etc.\n \n@@ -792,7 +885,11 @@ Current subtrees include:\n   - **Note**: Follow the instructions in [Upgrading LevelDB](#upgrading-leveldb) when\n     merging upstream changes to the LevelDB subtree.\n \n-- src/libsecp256k1\n+- src/crc32c\n+  - Used by leveldb for hardware acceleration of CRC32C checksums for data integrity.\n+  - Upstream at https://github.com/google/crc32c ; Maintained by Google.\n+\n+- src/secp256k1\n   - Upstream at https://github.com/bitcoin-core/secp256k1/ ; actively maintained by Core contributors.\n \n - src/crypto/ctaes\n@@ -854,7 +951,7 @@ Scripted diffs\n For reformatting and refactoring commits where the changes can be easily automated using a bash script, we use\n scripted-diff commits. The bash script is included in the commit message and our Travis CI job checks that\n the result of the script is identical to the commit. This aids reviewers since they can verify that the script\n-does exactly what it's supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n+does exactly what it is supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n on the new master commit).\n \n To create a scripted-diff:\n@@ -875,7 +972,35 @@ For development, it might be more convenient to verify all scripted-diffs in a r\n test/lint/commit-script-check.sh origin/master..HEAD\n ```\n \n-Commit [`bb81e173`](https://github.com/bitcoin/bitcoin/commit/bb81e173) is an example of a scripted-diff.\n+### Suggestions and examples\n+\n+If you need to replace in multiple files, prefer `git ls-files` to `find` or globbing, and `git grep` to `grep`, to\n+avoid changing files that are not under version control.\n+\n+For efficient replacement scripts, reduce the selection to the files that potentially need to be modified, so for\n+example, instead of a blanket `git ls-files src | xargs sed -i s/apple/orange/`, use\n+`git grep -l apple src | xargs sed -i s/apple/orange/`.\n+\n+Also, it is good to keep the selection of files as specific as possible \u2014 for example, replace only in directories where\n+you expect replacements \u2014 because it reduces the risk that a rebase of your commit by re-running the script will\n+introduce accidental changes.\n+\n+Some good examples of scripted-diff:\n+\n+- [scripted-diff: Rename InitInterfaces to NodeContext](https://github.com/bitcoin/bitcoin/commit/301bd41a2e6765b185bd55f4c541f9e27aeea29d)\n+uses an elegant script to replace occurrences of multiple terms in all source files.\n+\n+- [scripted-diff: Remove g_connman, g_banman globals](https://github.com/bitcoin/bitcoin/commit/8922d7f6b751a3e6b3b9f6fb7961c442877fb65a)\n+replaces specific terms in a list of specific source files.\n+\n+- [scripted-diff: Replace fprintf with tfm::format](https://github.com/bitcoin/bitcoin/commit/fac03ec43a15ad547161e37e53ea82482cc508f9)\n+does a global replacement but excludes certain directories.\n+\n+To find all previous uses of scripted diffs in the repository, do:\n+\n+```\n+git log --grep=\"-BEGIN VERIFY SCRIPT-\"\n+```\n \n Release notes\n -------------\n@@ -958,7 +1083,7 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n - A RPC method must either be a wallet method or a non-wallet method. Do not\n   introduce new methods that differ in behavior based on the presence of a wallet.\n \n-  - *Rationale*: as well as complicating the implementation and interfering\n+  - *Rationale*: As well as complicating the implementation and interfering\n     with the introduction of multi-wallet, wallet and non-wallet code should be\n     separated to avoid introducing circular dependencies between code units.\n \n@@ -985,8 +1110,140 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n \n   - *Rationale*: RPC methods registered with the same function pointer will be\n     considered aliases and only the first method name will show up in the\n-    `help` rpc command list.\n+    `help` RPC command list.\n \n   - *Exception*: Using RPC method aliases may be appropriate in cases where a\n     new RPC is replacing a deprecated RPC, to avoid both RPCs confusingly\n     showing up in the command list.\n+\n+- Use *invalid* bech32 addresses (e.g. in the constant array `EXAMPLE_ADDRESS`) for\n+  `RPCExamples` help documentation.\n+\n+  - *Rationale*: Prevent accidental transactions by users and encourage the use\n+    of bech32 addresses by default.\n+\n+- Use the `UNIX_EPOCH_TIME` constant when describing UNIX epoch time or\n+  timestamps in the documentation.\n+\n+  - *Rationale*: User-facing consistency.\n+\n+Internal interface guidelines\n+-----------------------------\n+\n+Internal interfaces between parts of the codebase that are meant to be\n+independent (node, wallet, GUI), are defined in\n+[`src/interfaces/`](../src/interfaces/). The main interface classes defined\n+there are [`interfaces::Chain`](../src/interfaces/chain.h), used by wallet to\n+access the node's latest chain state,\n+[`interfaces::Node`](../src/interfaces/node.h), used by the GUI to control the\n+node, and [`interfaces::Wallet`](../src/interfaces/wallet.h), used by the GUI\n+to control an individual wallet. There are also more specialized interface\n+types like [`interfaces::Handler`](../src/interfaces/handler.h)\n+[`interfaces::ChainClient`](../src/interfaces/chain.h) passed to and from\n+various interface methods.\n+\n+Interface classes are written in a particular style so node, wallet, and GUI\n+code doesn't need to run in the same process, and so the class declarations\n+work more easily with tools and libraries supporting interprocess\n+communication:\n+\n+- Interface classes should be abstract and have methods that are [pure\n+  virtual](https://en.cppreference.com/w/cpp/language/abstract_class). This\n+  allows multiple implementations to inherit from the same interface class,\n+  particularly so one implementation can execute functionality in the local\n+  process, and other implementations can forward calls to remote processes.\n+\n+- Interface method definitions should wrap existing functionality instead of\n+  implementing new functionality. Any substantial new node or wallet\n+  functionality should be implemented in [`src/node/`](../src/node/) or\n+  [`src/wallet/`](../src/wallet/) and just exposed in\n+  [`src/interfaces/`](../src/interfaces/) instead of being implemented there,\n+  so it can be more modular and accessible to unit tests.\n+\n+- Interface method parameter and return types should either be serializable or\n+  be other interface classes. Interface methods shouldn't pass references to\n+  objects that can't be serialized or accessed from another process.\n+\n+  Examples:\n+\n+  ```c++\n+  // Good: takes string argument and returns interface class pointer\n+  virtual unique_ptr<interfaces::Wallet> loadWallet(std::string filename) = 0;\n+\n+  // Bad: returns CWallet reference that can't be used from another process\n+  virtual CWallet& loadWallet(std::string filename) = 0;\n+  ```\n+\n+  ```c++\n+  // Good: accepts and returns primitive types\n+  virtual bool findBlock(const uint256& hash, int& out_height, int64_t& out_time) = 0;\n+\n+  // Bad: returns pointer to internal node in a linked list inaccessible to\n+  // other processes\n+  virtual const CBlockIndex* findBlock(const uint256& hash) = 0;\n+  ```\n+\n+  ```c++\n+  // Good: takes plain callback type and returns interface pointer\n+  using TipChangedFn = std::function<void(int block_height, int64_t block_time)>;\n+  virtual std::unique_ptr<interfaces::Handler> handleTipChanged(TipChangedFn fn) = 0;\n+\n+  // Bad: returns boost connection specific to local process\n+  using TipChangedFn = std::function<void(int block_height, int64_t block_time)>;\n+  virtual boost::signals2::scoped_connection connectTipChanged(TipChangedFn fn) = 0;\n+  ```\n+\n+- For consistency and friendliness to code generation tools, interface method\n+  input and inout parameters should be ordered first and output parameters\n+  should come last.\n+\n+  Example:\n+\n+  ```c++\n+  // Good: error output param is last\n+  virtual bool broadcastTransaction(const CTransactionRef& tx, CAmount max_fee, std::string& error) = 0;\n+\n+  // Bad: error output param is between input params\n+  virtual bool broadcastTransaction(const CTransactionRef& tx, std::string& error, CAmount max_fee) = 0;\n+  ```\n+\n+- For friendliness to code generation tools, interface methods should not be\n+  overloaded:\n+\n+  Example:\n+\n+  ```c++\n+  // Good: method names are unique\n+  virtual bool disconnectByAddress(const CNetAddr& net_addr) = 0;\n+  virtual bool disconnectById(NodeId id) = 0;\n+\n+  // Bad: methods are overloaded by type\n+  virtual bool disconnect(const CNetAddr& net_addr) = 0;\n+  virtual bool disconnect(NodeId id) = 0;\n+  ```\n+\n+- For consistency and friendliness to code generation tools, interface method\n+  names should be `lowerCamelCase` and standalone function names should be\n+  `UpperCamelCase`.\n+\n+  Examples:\n+\n+  ```c++\n+  // Good: lowerCamelCase method name\n+  virtual void blockConnected(const CBlock& block, int height) = 0;\n+\n+  // Bad: uppercase class method\n+  virtual void BlockConnected(const CBlock& block, int height) = 0;\n+  ```\n+\n+  ```c++\n+  // Good: UpperCamelCase standalone function name\n+  std::unique_ptr<Node> MakeNode(LocalInit& init);\n+\n+  // Bad: lowercase standalone function\n+  std::unique_ptr<Node> makeNode(LocalInit& init);\n+  ```\n+\n+  Note: This last convention isn't generally followed outside of\n+  [`src/interfaces/`](../src/interfaces/), though it did come up for discussion\n+  before in [#14635](https://github.com/bitcoin/bitcoin/pull/14635)."
      },
      {
        "sha": "cd23d547bb7eaaa25b7e7c03278a4e5694e72bd3",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 106,
        "deletions": 37,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,37 +1,106 @@\n-Filename            | Description\n---------------------|----------------------------------------------------------------------------------------------------------------------------\n-banlist.dat         | stores the IPs/Subnets of banned nodes\n-bitcoin.conf        | contains configuration settings for bitcoind or bitcoin-qt\n-bitcoind.pid        | stores the process id of bitcoind while running\n-blocks/blk000??.dat | block data (custom, 128 MiB per file); since 0.8.0\n-blocks/rev000??.dat | block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n-blocks/index/*      | block index (LevelDB); since 0.8.0\n-chainstate/*        | blockchain state database (LevelDB); since 0.8.0\n-database/*          | BDB database environment; only used for wallet since 0.8.0; moved to wallets/ directory on new installs since 0.16.0\n-db.log              | wallet database log file; moved to wallets/ directory on new installs since 0.16.0\n-debug.log           | contains debug information and general logging generated by bitcoind or bitcoin-qt\n-fee_estimates.dat   | stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n-indexes/txindex/*   | optional transaction index database (LevelDB); since 0.17.0\n-mempool.dat         | dump of the mempool's transactions; since 0.14.0\n-peers.dat           | peer IP address database (custom format); since 0.7.0\n-wallet.dat          | personal wallet (BDB) with keys and transactions; moved to wallets/ directory on new installs since 0.16.0\n-wallets/database/*  | BDB database environment; used for wallets since 0.16.0\n-wallets/db.log      | wallet database log file; since 0.16.0\n-wallets/wallet.dat  | personal wallet (BDB) with keys and transactions; since 0.16.0\n-.cookie             | session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n-onion_private_key   | cached Tor hidden service private key for `-listenonion`: since 0.12.0\n-guisettings.ini.bak | backup of former GUI settings after `-resetguisettings` is used\n-\n-Only used in pre-0.8.0\n----------------------\n-* blktree/*; block chain index (LevelDB); since pre-0.8, replaced by blocks/index/* in 0.8.0\n-* coins/*; unspent transaction output database (LevelDB); since pre-0.8, replaced by chainstate/* in 0.8.0\n-\n-Only used before 0.8.0\n----------------------\n-* blkindex.dat: block chain index database (BDB); replaced by {chainstate/*,blocks/index/*,blocks/rev000??.dat} in 0.8.0\n-* blk000?.dat: block data (custom, 2 GiB per file); replaced by blocks/blk000??.dat in 0.8.0\n-\n-Only used before 0.7.0\n----------------------\n-* addr.dat: peer IP address database (BDB); replaced by peers.dat in 0.7.0\n+# Bitcoin Core file system\n+\n+**Contents**\n+\n+- [Data directory location](#data-directory-location)\n+\n+- [Data directory layout](#data-directory-layout)\n+\n+- [Multi-wallet environment](#multi-wallet-environment)\n+\n+- [GUI settings](#gui-settings)\n+\n+- [Legacy subdirectories and files](#legacy-subdirectories-and-files)\n+\n+- [Notes](#notes)\n+\n+## Data directory location\n+\n+The data directory is the default location where the Bitcoin Core files are stored.\n+\n+1. The default data directory paths for supported platforms are:\n+\n+Platform | Data directory path\n+---------|--------------------\n+Linux    | `$HOME/.bitcoin/`\n+macOS    | `$HOME/Library/Application Support/Bitcoin/`\n+Windows  | `%APPDATA%\\Bitcoin\\` <sup>[\\[1\\]](#note1)</sup>\n+\n+2. The non-default data directory path can be specified by `-datadir` option.\n+\n+3. All content of the data directory, except for `bitcoin.conf` file, is chain-specific. This means the actual data directory paths for non-mainnet cases differ:\n+\n+Chain option        | Data directory path\n+--------------------|--------------------\n+no option (mainnet) | *path_to_datadir*`/`\n+`-testnet`          | *path_to_datadir*`/testnet3/`\n+`-regtest`          | *path_to_datadir*`/regtest/`\n+\n+## Data directory layout\n+\n+Subdirectory       | File(s)               | Description\n+-------------------|-----------------------|------------\n+`blocks/`          |                       | Blocks directory; can be specified by `-blocksdir` option (except for `blocks/index/`)\n+`blocks/index/`    | LevelDB database      | Block index; `-blocksdir` option does not affect this path\n+`blocks/`          | `blkNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Actual Bitcoin blocks (in network format, dumped in raw on disk, 128 MiB per file)\n+`blocks/`          | `revNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Block undo data (custom format)\n+`chainstate/`      | LevelDB database      | Blockchain state (a compact representation of all currently unspent transaction outputs and some metadata about the transactions they are from)\n+`indexes/txindex/` | LevelDB database      | Transaction index; *optional*, used if `-txindex=1`\n+`indexes/blockfilter/basic/db/` | LevelDB database      | Blockfilter index LevelDB database for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n+`indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n+`wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, a wallet resides in the data directory\n+`./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n+`./`               | `bitcoin.conf`        | Contains [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`; can be specified by `-conf` option\n+`./`               | `bitcoind.pid`        | Stores the process ID (PID) of `bitcoind` or `bitcoin-qt` while running; created at start and deleted on shutdown; can be specified by `-pid` option\n+`./`               | `debug.log`           | Contains debug information and general logging generated by `bitcoind` or `bitcoin-qt`; can be specified by `-debuglogfile` option\n+`./`               | `fee_estimates.dat`   | Stores statistics used to estimate minimum transaction fees and priorities required for confirmation\n+`./`               | `guisettings.ini.bak` | Backup of former [GUI settings](#gui-settings) after `-resetguisettings` option is used\n+`./`               | `mempool.dat`         | Dump of the mempool's transactions\n+`./`               | `onion_private_key`   | Cached Tor hidden service private key for `-listenonion` option\n+`./`               | `peers.dat`           | Peer IP address database (custom format)\n+`./`               | `.cookie`             | Session RPC authentication cookie; if used, created at start and deleted on shutdown; can be specified by `-rpccookiefile` option\n+`./`               | `.lock`               | Data directory lock file\n+\n+## Multi-wallet environment\n+\n+Wallets are Berkeley DB (BDB) databases:\n+\n+Subdirectory | File(s)           | Description\n+-------------|-------------------|------------\n+`database/`  | BDB logging files | Part of BDB environment; created at start and deleted on shutdown; a user *must keep it as safe* as personal wallet `wallet.dat`\n+`./`         | `db.log`          | BDB error file\n+`./`         | `wallet.dat`      | Personal wallet (BDB) with keys and transactions\n+`./`         | `.walletlock`     | Wallet lock file\n+\n+1. Each user-defined wallet named \"wallet_name\" resides in `wallets/wallet_name/` subdirectory.\n+\n+2. The default (unnamed) wallet resides in `wallets/` subdirectory; if the latter does not exist, the wallet resides in the data directory.\n+\n+3. A wallet database path can be specified by `-wallet` option.\n+\n+4. `wallet.dat` files must not be shared across different node instances, as that can result in key-reuse and double-spends due the lack of synchronization between instances.\n+\n+5. Any copy or backup of the wallet should be done through a `backupwallet` call in order to update and lock the wallet, preventing any file corruption caused by updates during the copy.\n+\n+## GUI settings\n+\n+`bitcoin-qt` uses [`QSettings`](https://doc.qt.io/qt-5/qsettings.html) class; this implies platform-specific [locations where application settings are stored](https://doc.qt.io/qt-5/qsettings.html#locations-where-application-settings-are-stored).\n+\n+## Legacy subdirectories and files\n+\n+These subdirectories and files are no longer used by the Bitcoin Core:\n+\n+Path           | Description | Repository notes\n+---------------|-------------|-----------------\n+`blktree/`     | Blockchain index; replaced by `blocks/index/` in [0.8.0](https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.8.0.md#improvements) | [PR #2231](https://github.com/bitcoin/bitcoin/pull/2231), [`8fdc94cc`](https://github.com/bitcoin/bitcoin/commit/8fdc94cc8f0341e96b1edb3a5b56811c0b20bd15)\n+`coins/`       | Unspent transaction output database; replaced by `chainstate/` in 0.8.0 | [PR #2231](https://github.com/bitcoin/bitcoin/pull/2231), [`8fdc94cc`](https://github.com/bitcoin/bitcoin/commit/8fdc94cc8f0341e96b1edb3a5b56811c0b20bd15)\n+`blkindex.dat` | Blockchain index BDB database; replaced by {`chainstate/`, `blocks/index/`, `blocks/revNNNNN.dat`<sup>[\\[2\\]](#note2)</sup>} in 0.8.0 | [PR #1677](https://github.com/bitcoin/bitcoin/pull/1677)\n+`blk000?.dat`  | Block data (custom format, 2 GiB per file); replaced by `blocks/blkNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> in 0.8.0 | [PR #1677](https://github.com/bitcoin/bitcoin/pull/1677)\n+`addr.dat`     | Peer IP address BDB database; replaced by `peers.dat` in [0.7.0](https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.7.0.md) | [PR #1198](https://github.com/bitcoin/bitcoin/pull/1198), [`928d3a01`](https://github.com/bitcoin/bitcoin/commit/928d3a011cc66c7f907c4d053f674ea77dc611cc)\n+\n+## Notes\n+\n+<a name=\"note1\">1</a>. The `/` (slash, U+002F) is used as the platform-independent path component separator in this paper.\n+\n+<a name=\"note2\">2</a>. `NNNNN` matches `[0-9]{5}` regex.\n+"
      },
      {
        "sha": "419b1db44ef308cd3262e405fd1675670514896a",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 134,
        "deletions": 74,
        "changes": 208,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,97 +1,157 @@\n-Fuzz-testing Bitcoin Core\n-==========================\n-\n-A special test harness in `src/test/fuzz/` is provided for each fuzz target to\n-provide an easy entry point for fuzzers and the like. In this document we'll\n-describe how to use it with AFL and libFuzzer.\n+# Fuzzing Bitcoin Core using libFuzzer\n+\n+## Quickstart guide\n+\n+To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/docs/LibFuzzer.html):\n+\n+```sh\n+$ git clone https://github.com/bitcoin/bitcoin\n+$ cd bitcoin/\n+$ ./autogen.sh\n+$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+# macOS users: If you have problem with this step then make sure to read \"macOS hints for\n+# libFuzzer\" on https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md#macos-hints-for-libfuzzer\n+$ make\n+$ src/test/fuzz/process_message\n+# abort fuzzing using ctrl-c\n+```\n \n-## Preparing fuzzing\n+## Fuzzing harnesses, fuzzing output and fuzzing corpora\n+\n+[`process_message`](https://github.com/bitcoin/bitcoin/blob/master/src/test/fuzz/process_message.cpp) is a fuzzing harness for the [`ProcessMessage(...)` function (`net_processing`)](https://github.com/bitcoin/bitcoin/blob/master/src/net_processing.cpp). The available fuzzing harnesses are found in [`src/test/fuzz/`](https://github.com/bitcoin/bitcoin/tree/master/src/test/fuzz).\n+\n+The fuzzer will output `NEW` every time it has created a test input that covers new areas of the code under test. For more information on how to interpret the fuzzer output, see the [libFuzzer documentation](https://llvm.org/docs/LibFuzzer.html).\n+\n+If you specify a corpus directory then any new coverage increasing inputs will be saved there:\n+\n+```sh\n+$ mkdir -p process_message-seeded-from-thin-air/\n+$ src/test/fuzz/process_message process_message-seeded-from-thin-air/\n+INFO: Seed: 840522292\n+INFO: Loaded 1 modules   (424174 inline 8-bit counters): 424174 [0x55e121ef9ab8, 0x55e121f613a6),\n+INFO: Loaded 1 PC tables (424174 PCs): 424174 [0x55e121f613a8,0x55e1225da288),\n+INFO:        0 files found in process_message-seeded-from-thin-air/\n+INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\n+INFO: A corpus is not provided, starting from an empty corpus\n+#2      INITED cov: 94 ft: 95 corp: 1/1b exec/s: 0 rss: 150Mb\n+#3      NEW    cov: 95 ft: 96 corp: 2/3b lim: 4 exec/s: 0 rss: 150Mb L: 2/2 MS: 1 InsertByte-\n+#4      NEW    cov: 96 ft: 98 corp: 3/7b lim: 4 exec/s: 0 rss: 150Mb L: 4/4 MS: 1 CrossOver-\n+#21     NEW    cov: 96 ft: 100 corp: 4/11b lim: 4 exec/s: 0 rss: 150Mb L: 4/4 MS: 2 ChangeBit-CrossOver-\n+#324    NEW    cov: 101 ft: 105 corp: 5/12b lim: 6 exec/s: 0 rss: 150Mb L: 6/6 MS: 5 CrossOver-ChangeBit-CopyPart-ChangeBit-ChangeBinInt-\n+#1239   REDUCE cov: 102 ft: 106 corp: 6/24b lim: 14 exec/s: 0 rss: 150Mb L: 13/13 MS: 5 ChangeBit-CrossOver-EraseBytes-ChangeBit-InsertRepeatedBytes-\n+#1272   REDUCE cov: 102 ft: 106 corp: 6/23b lim: 14 exec/s: 0 rss: 150Mb L: 12/12 MS: 3 ChangeBinInt-ChangeBit-EraseBytes-\n+        NEW_FUNC[1/677]: 0x55e11f456690 in std::_Function_base::~_Function_base() /usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/std_function.h:255\n+        NEW_FUNC[2/677]: 0x55e11f465800 in CDataStream::CDataStream(std::vector<unsigned char, std::allocator<unsigned char> > const&, int, int) src/./streams.h:248\n+#2125   REDUCE cov: 4820 ft: 4867 corp: 7/29b lim: 21 exec/s: 0 rss: 155Mb L: 6/12 MS: 2 CopyPart-CMP- DE: \"block\"-\n+        NEW_FUNC[1/9]: 0x55e11f64d790 in std::_Rb_tree<uint256, std::pair<uint256 const, std::chrono::duration<long, std::ratio<1l, 1000000l> > >, std::_Select1st<std::pair<uint256 const, std::chrono::duration<long, std::ratio<1l, 1000000l> > > >, std::less<uint256>, std::allocator<std::pair<uint256 const, std::chrono::duration<long, std::ratio<1l, 1000000l> > > > >::~_Rb_tree() /usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/stl_tree.h:972\n+        NEW_FUNC[2/9]: 0x55e11f64d870 in std::_Rb_tree<uint256, std::pair<uint256 const, std::chrono::duration<long, std::ratio<1l, 1000000l> > >, std::_Select1st<std::pair<uint256 const, std::chrono::duration<long, std::ratio<1l, 1000000l> > > >, std::less<uint256>, std::allocator<std::pair<uint256 const, std::chrono::duration<long, std::ratio<1l, 1000000l> > > > >::_M_erase(std::_Rb_tree_node<std::pair<uint256 const, std::chrono::duration<long, std::ratio<1l, 1000000l> > > >*) /usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/stl_tree.h:1875\n+#2228   NEW    cov: 4898 ft: 4971 corp: 8/35b lim: 21 exec/s: 0 rss: 156Mb L: 6/12 MS: 3 EraseBytes-CopyPart-PersAutoDict- DE: \"block\"-\n+        NEW_FUNC[1/5]: 0x55e11f46df70 in std::enable_if<__and_<std::allocator_traits<zero_after_free_allocator<char> >::__construct_helper<char, unsigned char const&>::type>::value, void>::type std::allocator_traits<zero_after_free_allocator<char> >::_S_construct<char, unsigned char const&>(zero_after_free_allocator<char>&, char*, unsigned char const&) /usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/alloc_traits.h:243\n+        NEW_FUNC[2/5]: 0x55e11f477390 in std::vector<unsigned char, std::allocator<unsigned char> >::data() /usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/bits/stl_vector.h:1056\n+#2456   NEW    cov: 4933 ft: 5042 corp: 9/55b lim: 21 exec/s: 0 rss: 160Mb L: 20/20 MS: 3 ChangeByte-InsertRepeatedBytes-PersAutoDict- DE: \"block\"-\n+#2467   NEW    cov: 4933 ft: 5043 corp: 10/76b lim: 21 exec/s: 0 rss: 161Mb L: 21/21 MS: 1 InsertByte-\n+#4215   NEW    cov: 4941 ft: 5129 corp: 17/205b lim: 29 exec/s: 4215 rss: 350Mb L: 29/29 MS: 5 InsertByte-ChangeBit-CopyPart-InsertRepeatedBytes-CrossOver-\n+#4567   REDUCE cov: 4941 ft: 5129 corp: 17/204b lim: 29 exec/s: 4567 rss: 404Mb L: 24/29 MS: 2 ChangeByte-EraseBytes-\n+#6642   NEW    cov: 4941 ft: 5138 corp: 18/244b lim: 43 exec/s: 2214 rss: 450Mb L: 43/43 MS: 3 CopyPart-CMP-CrossOver- DE: \"verack\"-\n+# abort fuzzing using ctrl-c\n+$ ls process_message-seeded-from-thin-air/\n+349ac589fc66a09abc0b72bb4ae445a7a19e2cd8 4df479f1f421f2ea64b383cd4919a272604087a7\n+a640312c98dcc55d6744730c33e41c5168c55f09 b135de16e4709558c0797c15f86046d31c5d86d7\n+c000f7b41b05139de8b63f4cbf7d1ad4c6e2aa7f fc52cc00ec1eb1c08470e69f809ae4993fa70082\n+$ cat --show-nonprinting process_message-seeded-from-thin-air/349ac589fc66a09abc0b72bb4ae445a7a19e2cd8\n+block^@M-^?M-^?M-^?M-^?M-^?nM-^?M-^?\n+```\n \n-AFL needs an input directory with examples, and an output directory where it\n-will place examples that it found. These can be anywhere in the file system,\n-we'll define environment variables to make it easy to reference them.\n+In this case the fuzzer managed to create a `block` message which when passed to `ProcessMessage(...)` increased coverage.\n \n-libFuzzer will use the input directory as output directory.\n+The project's collection of seed corpora is found in the [`bitcoin-core/qa-assets`](https://github.com/bitcoin-core/qa-assets) repo.\n \n-Extract the example seeds (or other starting inputs) into the inputs\n-directory before starting fuzzing.\n+To fuzz `process_message` using the [`bitcoin-core/qa-assets`](https://github.com/bitcoin-core/qa-assets) seed corpus:\n \n-```\n-git clone https://github.com/bitcoin-core/qa-assets\n-export DIR_FUZZ_IN=$PWD/qa-assets/fuzz_seed_corpus\n+```sh\n+$ git clone https://github.com/bitcoin-core/qa-assets\n+$ src/test/fuzz/process_message qa-assets/fuzz_seed_corpus/process_message/\n+INFO: Seed: 1346407872\n+INFO: Loaded 1 modules   (424174 inline 8-bit counters): 424174 [0x55d8a9004ab8, 0x55d8a906c3a6),\n+INFO: Loaded 1 PC tables (424174 PCs): 424174 [0x55d8a906c3a8,0x55d8a96e5288),\n+INFO:      991 files found in qa-assets/fuzz_seed_corpus/process_message/\n+INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\n+INFO: seed corpus: files: 991 min: 1b max: 1858b total: 288291b rss: 150Mb\n+#993    INITED cov: 7063 ft: 8236 corp: 25/3821b exec/s: 0 rss: 181Mb\n+\u2026\n ```\n \n-Only for AFL:\n+If you find coverage increasing inputs when fuzzing you are highly encouraged to submit them for inclusion in the [`bitcoin-core/qa-assets`](https://github.com/bitcoin-core/qa-assets) repo.\n \n-```\n-mkdir outputs\n-export AFLOUT=$PWD/outputs\n-```\n+Every single pull request submitted against the Bitcoin Core repo is automatically tested against all inputs in the [`bitcoin-core/qa-assets`](https://github.com/bitcoin-core/qa-assets) repo. Contributing new coverage increasing inputs is an easy way to help make Bitcoin Core more robust.\n \n-## AFL\n+## macOS hints for libFuzzer\n \n-### Building AFL\n+The default Clang/LLVM version supplied by Apple on macOS does not include\n+fuzzing libraries, so macOS users will need to install a full version, for\n+example using `brew install llvm`.\n \n-It is recommended to always use the latest version of afl:\n-```\n-wget http://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz\n-tar -zxvf afl-latest.tgz\n-cd afl-<version>\n-make\n-export AFLPATH=$PWD\n-```\n+Should you run into problems with the address sanitizer, it is possible you\n+may need to run `./configure` with `--disable-asm` to avoid errors\n+with certain assembly code from Bitcoin Core's code. See [developer notes on sanitizers](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#sanitizers)\n+for more information.\n \n-### Instrumentation\n+You may also need to take care of giving the correct path for `clang` and\n+`clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n+`clang` does not come first in your path.\n \n-To build Bitcoin Core using AFL instrumentation (this assumes that the\n-`AFLPATH` was set as above):\n-```\n-./configure --disable-ccache --disable-shared --enable-tests --enable-fuzz CC=${AFLPATH}/afl-gcc CXX=${AFLPATH}/afl-g++\n-export AFL_HARDEN=1\n-cd src/\n-make\n-```\n-We disable ccache because we don't want to pollute the ccache with instrumented\n-objects, and similarly don't want to use non-instrumented cached objects linked\n-in.\n-\n-The fuzzing can be sped up significantly (~200x) by using `afl-clang-fast` and\n-`afl-clang-fast++` in place of `afl-gcc` and `afl-g++` when compiling. When\n-compiling using `afl-clang-fast`/`afl-clang-fast++` the resulting\n-binary will be instrumented in such a way that the AFL\n-features \"persistent mode\" and \"deferred forkserver\" can be used. See\n-https://github.com/mcarpenter/afl/tree/master/llvm_mode for details.\n-\n-### Fuzzing\n-\n-To start the actual fuzzing use:\n+Full configure that was tested on macOS Catalina with `brew` installed `llvm`:\n \n+```sh\n+./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=/usr/local/opt/llvm/bin/clang CXX=/usr/local/opt/llvm/bin/clang++ --disable-asm\n ```\n-export FUZZ_TARGET=fuzz_target_foo  # Pick a fuzz_target\n-mkdir ${AFLOUT}/${FUZZ_TARGET}\n-$AFLPATH/afl-fuzz -i ${DIR_FUZZ_IN}/${FUZZ_TARGET} -o ${AFLOUT}/${FUZZ_TARGET} -m52 -- test/fuzz/${FUZZ_TARGET}\n+\n+Read the [libFuzzer documentation](https://llvm.org/docs/LibFuzzer.html) for more information. This [libFuzzer tutorial](https://github.com/google/fuzzing/blob/master/tutorial/libFuzzerTutorial.md) might also be of interest.\n+\n+# Fuzzing Bitcoin Core using american fuzzy lop (`afl-fuzz`)\n+\n+## Quickstart guide\n+\n+To quickly get started fuzzing Bitcoin Core using [`afl-fuzz`](https://github.com/google/afl):\n+\n+```sh\n+$ git clone https://github.com/bitcoin/bitcoin\n+$ cd bitcoin/\n+$ git clone https://github.com/google/afl\n+$ make -C afl/\n+$ make -C afl/llvm_mode/\n+$ ./autogen.sh\n+$ CC=$(pwd)/afl/afl-clang-fast CXX=$(pwd)/afl/afl-clang-fast++ ./configure --enable-fuzz\n+$ make\n+# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n+# try compiling using: AFL_NO_X86=1 make\n+$ mkdir -p inputs/ outputs/\n+$ echo A > inputs/thin-air-input\n+$ afl/afl-fuzz -i inputs/ -o outputs/ -- src/test/fuzz/bech32\n+# You may have to change a few kernel parameters to test optimally - afl-fuzz\n+# will print an error and suggestion if so.\n ```\n \n-You may have to change a few kernel parameters to test optimally - `afl-fuzz`\n-will print an error and suggestion if so.\n+Read the [`afl-fuzz` documentation](https://github.com/google/afl) for more information.\n \n-## libFuzzer\n+# Fuzzing Bitcoin Core using Honggfuzz\n \n-A recent version of `clang`, the address sanitizer and libFuzzer is needed (all\n-found in the `compiler-rt` runtime libraries package).\n+## Quickstart guide\n \n-To build all fuzz targets with libFuzzer, run\n+To quickly get started fuzzing Bitcoin Core using [Honggfuzz](https://github.com/google/honggfuzz):\n \n+```sh\n+$ git clone https://github.com/bitcoin/bitcoin\n+$ cd bitcoin/\n+$ ./autogen.sh\n+$ git clone https://github.com/google/honggfuzz\n+$ cd honggfuzz/\n+$ make\n+$ cd ..\n+$ CC=$(pwd)/honggfuzz/hfuzz_cc/hfuzz-clang CXX=$(pwd)/honggfuzz/hfuzz_cc/hfuzz-clang++ ./configure --enable-fuzz --with-sanitizers=address,undefined\n+$ make\n+$ mkdir -p inputs/\n+$ honggfuzz/honggfuzz -i inputs/ -- src/test/fuzz/process_message\n ```\n-./configure --disable-ccache --enable-fuzz --with-sanitizers=fuzzer,address CC=clang CXX=clang++\n-make\n-```\n-\n-The fuzzer needs some inputs to work on, but the inputs or seeds can be used\n-interchangeably between libFuzzer and AFL.\n-\n-See https://llvm.org/docs/LibFuzzer.html#running on how to run the libFuzzer\n-instrumented executable.\n \n-Alternatively run the script in `./test/fuzz/test_runner.py` and provide it\n-with the `${DIR_FUZZ_IN}` created earlier.\n+Read the [Honggfuzz documentation](https://github.com/google/honggfuzz/blob/master/docs/USAGE.md) for more information."
      },
      {
        "sha": "99aa0a0def3d6b91511d53aee17f507ae1f813de",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -20,9 +20,9 @@ The macOS configuration assumes bitcoind will be set up for the current user.\n Configuration\n ---------------------------------\n \n-At a bare minimum, bitcoind requires that the rpcpassword setting be set\n-when running as a daemon.  If the configuration file does not exist or this\n-setting is not set, bitcoind will shut down promptly after startup.\n+Running bitcoind as a daemon does not require any manual configuration. You may\n+set the `rpcauth` setting in the `bitcoin.conf` configuration file to override\n+the default behaviour of using a special cookie for authentication.\n \n This password does not have to be remembered or typed as it is mostly used\n as a fixed token that bitcoind and client programs read from the configuration\n@@ -53,17 +53,17 @@ Paths\n \n All three configurations assume several paths that might need to be adjusted.\n \n-Binary:              `/usr/bin/bitcoind`  \n-Configuration file:  `/etc/bitcoin/bitcoin.conf`  \n-Data directory:      `/var/lib/bitcoind`  \n+Binary:              `/usr/bin/bitcoind`\n+Configuration file:  `/etc/bitcoin/bitcoin.conf`\n+Data directory:      `/var/lib/bitcoind`\n PID file:            `/var/run/bitcoind/bitcoind.pid` (OpenRC and Upstart) or `/run/bitcoind/bitcoind.pid` (systemd)\n-Lock file:           `/var/lock/subsys/bitcoind` (CentOS)  \n+Lock file:           `/var/lock/subsys/bitcoind` (CentOS)\n \n-The configuration file, PID directory (if applicable) and data directory\n-should all be owned by the bitcoin user and group.  It is advised for security\n-reasons to make the configuration file and data directory only readable by the\n-bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n-can then be controlled by group membership.\n+The PID directory (if applicable) and data directory should both be owned by the\n+bitcoin user and group. It is advised for security reasons to make the\n+configuration file and data directory only readable by the bitcoin user and\n+group. Access to bitcoin-cli and other bitcoind rpc clients can then be\n+controlled by group membership.\n \n NOTE: When using the systemd .service file, the creation of the aforementioned\n directories and the setting of their permissions is automatically handled by\n@@ -83,10 +83,10 @@ OpenRC).\n \n ### macOS\n \n-Binary:              `/usr/local/bin/bitcoind`  \n-Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n-Data directory:      `~/Library/Application Support/Bitcoin`  \n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`  \n+Binary:              `/usr/local/bin/bitcoind`\n+Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`\n+Data directory:      `~/Library/Application Support/Bitcoin`\n+Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n \n Installing Service Configuration\n -----------------------------------"
      },
      {
        "sha": "129651d8e9f2f0795ca484af84518feef4faf3ad",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -113,7 +113,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "f68be21e8d9045094871c2025bc8f82526e49471",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -179,10 +179,6 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n unless \\fB\\-connect\\fR used)\n .HP\n-\\fB\\-enablebip61\\fR\n-.IP\n-Send reject messages per BIP61 (default: 0)\n-.HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n Specify your own public address\n@@ -612,7 +608,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "b4c769889637e51971118e1e3c3dbcf2c9336283",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -114,7 +114,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "aadea09a2b82382fd7f806262a6ef1d9f529da91",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -61,7 +61,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "211ba10285d3dffb0580a6b1a438495bac19c566",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -179,10 +179,6 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n unless \\fB\\-connect\\fR used)\n .HP\n-\\fB\\-enablebip61\\fR\n-.IP\n-Send reject messages per BIP61 (default: 0)\n-.HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n Specify your own public address\n@@ -585,7 +581,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "1bf3d9afb53f2efe0c3c7182adc07868a8a5cdeb",
        "filename": "doc/productivity.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/productivity.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/productivity.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/productivity.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -172,11 +172,11 @@ When looking at other's pull requests, it may make sense to add the following se\n \n ```\n [remote \"upstream-pull\"]\n-        fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n+        fetch = +refs/pull/*/head:refs/remotes/upstream-pull/*\n         url = git@github.com:bitcoin/bitcoin.git\n ```\n \n-This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all` or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`, `git checkout` and anywhere a commit id would be acceptable to see the changes from pull request NUMBER.\n+This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all` or `git fetch upstream-pull`. It will download and store on disk quite a lot of data (all PRs, including merged and closed ones). Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`, `git checkout` and anywhere a commit id would be acceptable to see the changes from pull request NUMBER.\n \n ### Diff the diffs with `git range-diff`\n "
      },
      {
        "sha": "397a907f17c00f64c9404f9a2d4d1810077b05e6",
        "filename": "doc/rapidcheck.md",
        "status": "removed",
        "additions": 0,
        "deletions": 84,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db67101c748c208cced8e9b76a66d57cd48fbf6e/doc/rapidcheck.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db67101c748c208cced8e9b76a66d57cd48fbf6e/doc/rapidcheck.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/rapidcheck.md?ref=db67101c748c208cced8e9b76a66d57cd48fbf6e",
        "patch": "@@ -1,84 +0,0 @@\n-# RapidCheck property-based testing for Bitcoin Core\n-\n-## Concept\n-\n-Property-based testing is experimentally being added to Bitcoin Core with\n-[RapidCheck](https://github.com/emil-e/rapidcheck), a C++ framework for\n-property-based testing inspired by the Haskell library\n-[QuickCheck](https://hackage.haskell.org/package/QuickCheck).\n-\n-RapidCheck performs random testing of program properties. A specification of the\n-program is given in the form of properties which functions should satisfy, and\n-RapidCheck tests that the properties hold in a large number of randomly\n-generated cases.\n-\n-If an exception is found, RapidCheck tries to find the smallest case, for some\n-definition of smallest, for which the property is still false and displays it as\n-a counter-example. For example, if the input is an integer, RapidCheck tries to\n-find the smallest integer for which the property is false.\n-\n-## Running\n-\n-If RapidCheck is installed, Bitcoin Core will automatically run the\n-property-based tests with the unit tests during `make check`, unless the\n-`--without-rapidcheck` flag is passed when configuring.\n-\n-For more information, run `./configure --help` and see `--with-rapidcheck` under\n-Optional Packages.\n-\n-## Setup\n-\n-The following instructions have been tested with Linux Debian and macOS.\n-\n-1. Clone the RapidCheck source code and cd into the repository.\n-\n-    ```shell\n-    git clone https://github.com/emil-e/rapidcheck.git\n-    cd rapidcheck\n-    ```\n-\n-2. Build RapidCheck (requires CMake to be installed).\n-\n-    ```shell\n-    cmake -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DRC_ENABLE_BOOST_TEST=ON $(pwd)\n-    make && make install\n-    ```\n-\n-3. Configure Bitcoin Core with RapidCheck.\n-\n-    `cd` to the directory of your local bitcoin repository and run\n-    `./configure`. In the output you should see:\n-\n-    ```shell\n-    checking rapidcheck.h usability... yes\n-    checking rapidcheck.h presence... yes\n-    checking for rapidcheck.h... yes\n-    [...]\n-    Options used to compile and link:\n-    [...]\n-      with test     = yes\n-        with prop   = yes\n-    ```\n-\n-4. Build Bitcoin Core with RapidCheck.\n-\n-    Now you can run `make` and should see the property-based tests compiled with\n-    the unit tests:\n-\n-    ```shell\n-    Making all in src\n-    [...]\n-    CXX      test/gen/test_bitcoin-crypto_gen.o\n-    CXX      test/test_bitcoin-key_properties.o\n-    ```\n-\n-5. Run the unit tests with `make check`. The property-based tests will be run\n-   with the unit tests.\n-\n-    ```shell\n-    Running tests: crypto_tests from test/crypto_tests.cpp\n-    [...]\n-    Running tests: key_properties from test/key_properties.cpp\n-    ```\n-\n-That's it! You are now running property-based tests in Bitcoin Core."
      },
      {
        "sha": "6e7a578ecc4e19bcce131626c8c1e868e678286e",
        "filename": "doc/reduce-memory.md",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/reduce-memory.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/reduce-memory.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-memory.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -24,8 +24,9 @@ The size of some in-memory caches can be reduced. As caches trade off memory usa\n \n ## Number of peers\n \n-- `-maxconnections=<n>` - the maximum number of connections, this defaults to `125`. Each active connection takes up some memory. Only significant if incoming\n-   connections are enabled, otherwise the number of connections will never be more than `8`.\n+- `-maxconnections=<n>` - the maximum number of connections, this defaults to 125. Each active connection takes up some\n+  memory. This option applies only if incoming connections are enabled, otherwise the number of connections will never\n+  be more than 10. Of the 10 outbound peers, there can be 8 full-relay connections and 2 block-relay-only ones.\n \n ## Thread configuration\n \n@@ -41,7 +42,7 @@ threads take up 8MiB for the thread stack on a 64-bit system, and 4MiB in a\n By default, since glibc `2.10`, the C library will create up to two heap arenas per core. This is known to cause excessive memory usage in some scenarios. To avoid this make a script that sets `MALLOC_ARENA_MAX` before starting bitcoind:\n \n ```bash\n-#!/bin/bash\n+#!/usr/bin/env bash\n export MALLOC_ARENA_MAX=1\n bitcoind\n ```"
      },
      {
        "sha": "e39e43df7a8bf4f61f5878a53363ad5fcef5632e",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -3,8 +3,10 @@ Reduce Traffic\n \n Some node operators need to deal with bandwidth caps imposed by their ISPs.\n \n-By default, Bitcoin Core allows up to 125 connections to different peers, 8 of\n-which are outbound. You can therefore, have at most 117 inbound connections.\n+By default, Bitcoin Core allows up to 125 connections to different peers, 10 of\n+which are outbound. You can therefore, have at most 115 inbound connections.\n+Of the 10 outbound peers, there can be 8 full-relay connections and 2\n+block-relay-only ones.\n \n The default settings can result in relatively significant traffic consumption.\n \n@@ -26,7 +28,7 @@ calculating the target.\n \n ## 2. Disable \"listening\" (`-listen=0`)\n \n-Disabling listening will result in fewer nodes connected (remember the maximum of 8\n+Disabling listening will result in fewer nodes connected (remember the maximum of 10\n outbound peers). Fewer nodes will result in less traffic usage as you are relaying\n blocks and transactions to fewer nodes.\n \n@@ -44,7 +46,11 @@ with other peers, you can disable transaction relay.\n Be reminded of the effects of this setting.\n \n - Fee estimation will no longer work.\n-- Not relaying other's transactions could hurt your privacy if used while a\n-  wallet is loaded or if you use the node to broadcast transactions.\n+- It sets the flag \"-walletbroadcast\" to be \"0\", only if it is currently unset.\n+  Doing so disables the automatic broadcasting of transactions from wallet. Not\n+  relaying other's transactions could hurt your privacy if used while a wallet\n+  is loaded or if you use the node to broadcast transactions.\n+- If a peer is whitelisted and \"-whitelistforcerelay\" is set to \"1\" (which will\n+  also set \"whitelistrelay\" to \"1\"), we will still receive and relay their transactions.\n - It makes block propagation slower because compact block relay can only be\n   used when transaction relay is enabled."
      },
      {
        "sha": "0d668a6302fef8e5b9221d5962d8547cdcfdd681",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 27,
        "deletions": 289,
        "changes": 316,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -39,338 +39,76 @@ installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n or `bitcoind`/`bitcoin-qt` (on Linux).\n \n Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n-possible, but might take some time if the datadir needs to be migrated.  Old\n+possible, but it might take some time if the datadir needs to be migrated. Old\n wallet versions of Bitcoin Core are generally supported.\n \n Compatibility\n ==============\n \n Bitcoin Core is supported and extensively tested on operating systems using\n-the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n+the Linux kernel, macOS 10.12+, and Windows 7 and newer. It is not recommended\n to use Bitcoin Core on unsupported systems.\n \n Bitcoin Core should also work on most other Unix-like systems but is not\n as frequently tested on them.\n \n-From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n-built using Qt 5.9.x, which doesn't support versions of macOS older than\n-10.10. Additionally, Bitcoin Core does not yet change appearance when\n-macOS \"dark mode\" is activated.\n+From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no\n+longer supported. Additionally, Bitcoin Core does not yet change appearance\n+when macOS \"dark mode\" is activated.\n \n-In addition to previously-supported CPU platforms, this release's\n-pre-compiled distribution also provides binaries for the RISC-V\n-platform.\n+In addition to previously supported CPU platforms, this release's pre-compiled\n+distribution provides binaries for the RISC-V platform.\n \n Notable changes\n ===============\n \n-New user documentation\n-----------------------\n+P2P and network changes\n+-----------------------\n \n-- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n-  suggests configuration tweaks for running Bitcoin Core on systems with\n-  limited memory. (#16339)\n+Updated RPCs\n+------------\n+\n+Changes to Wallet or GUI related RPCs can be found in the GUI or Wallet section below.\n \n New RPCs\n --------\n \n-- `getbalances` returns an object with all balances (`mine`,\n-  `untrusted_pending` and `immature`). Please refer to the RPC help of\n-  `getbalances` for details. The new RPC is intended to replace\n-  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n-  `getwalletinfo`.  These old calls and fields may be removed in a\n-  future version. (#15930, #16239)\n-\n-- `setwalletflag` sets and unsets wallet flags that enable or disable\n-  features specific to that existing wallet, such as the new\n-  `avoid_reuse` feature documented elsewhere in these release notes.\n-  (#13756)\n-\n-- `getblockfilter` gets the BIP158 filter for the specified block.  This\n-  RPC is only enabled if block filters have been created using the\n-  `-blockfilterindex` configuration option. (#14121)\n-\n-New settings\n+Build System\n ------------\n \n-- `-blockfilterindex` enables the creation of BIP158 block filters for\n-  the entire blockchain.  Filters will be created in the background and\n-  currently use about 4 GiB of space.  Note: this version of Bitcoin\n-  Core does not serve block filters over the P2P network, although the\n-  local user may obtain block filters using the `getblockfilter` RPC.\n-  (#14121)\n-\n Updated settings\n ----------------\n \n-- `whitebind` and `whitelist` now accept a list of permissions to\n-  provide peers connecting using the indicated interfaces or IP\n-  addresses.  If no permissions are specified with an address or CIDR\n-  network, the implicit default permissions are the same as previous\n-  releases.  See the `bitcoind -help` output for these two options for\n-  details about the available permissions. (#16248)\n+Changes to Wallet or GUI related settings can be found in the GUI or Wallet  section below.\n \n-Updated RPCs\n+New settings\n ------------\n \n-Note: some low-level RPC changes mainly useful for testing are described in the\n-Low-level Changes section below.\n-\n-- `sendmany` no longer has a `minconf` argument.  This argument was not\n-  well specified and would lead to RPC errors even when the wallet's\n-  coin selection succeeded.  Users who want to influence coin selection\n-  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n-  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n-  arguments. (#15596)\n-\n-- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n-  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n-  whether already used addresses should be included in the operation.\n-  Additionally, `sendtoaddress` will avoid partial spends when\n-  `avoid_reuse` is enabled even if this feature is not already enabled\n-  via the `-avoidpartialspends` command line flag because not doing so\n-  would risk using up the \"wrong\" UTXO for an address reuse case.\n-  (#13756)\n-\n-- `listunspent` now returns a \"reused\" bool for each output if the\n-  wallet flag \"avoid_reuse\" is enabled. (#13756)\n-\n-- `getblockstats` now uses BlockUndo data instead of the transaction\n-  index, making it much faster, no longer dependent on the `-txindex`\n-  configuration option, and functional for all non-pruned blocks.\n-  (#14802)\n-\n-- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n-  out input and output scripts and keys when known. P2SH-witness inputs\n-  will be filled in from the UTXO set when a descriptor is provided that\n-  shows they're spending segwit outputs.  See the RPC help text for full\n-  details. (#15427)\n-\n-- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n-  `allowhighfees` parameter to fail mempool acceptance if the\n-  transaction fee exceedes the value of the configuration option\n-  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n-  can be changed when calling either RPC using a `maxfeerate` parameter.\n-  (#15620)\n-\n-- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n-  `getrawmempool` no longer return a `size` field unless the\n-  configuration option `-deprecatedrpc=size` is used.  Instead a new\n-  `vsize` field is returned with the transaction's virtual size\n-  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n-\n-- `getwalletinfo` now includes a `scanning` field that is either `false`\n-  (no scanning) or an object with information about the duration and\n-  progress of the wallet's scanning historical blocks for transactions\n-  affecting its balances. (#15730)\n-\n-- `createwallet` accepts a new `passphrase` parameter.  If set, this\n-  will create the new wallet encrypted with the given passphrase.  If\n-  unset (the default) or set to an empty string, no encryption will be\n-  used. (#16394)\n-\n-- `getmempoolentry` now provides a `weight` field containing the\n-  transaction weight as defined in BIP141. (#16647)\n-\n-- `getdescriptorinfo` now returns an additional `checksum` field\n-  containing the checksum for the unmodified descriptor provided by the\n-  user (that is, before the descriptor is normalized for the\n-  `descriptor` field). (#15986)\n-\n-- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n-  `-walletrbf` configuration option is set to true. (#15911)\n-\n-GUI changes\n------------\n-\n-- Provides bech32 addresses by default.  The user may change the address\n-  during invoice generation using a GUI toggle, or the default address\n-  type may be changed by the `-addresstype` configuration option.\n-  (#15711, #16497)\n-\n-Deprecated or removed configuration options\n--------------------------------------------\n-\n-- `-mempoolreplacement` is removed, although default node behavior\n-  remains the same.  This option previously allowed the user to prevent\n-  the node from accepting or relaying BIP125 transaction replacements.\n-  This is different from the remaining configuration option\n-  `-walletrbf`. (#16171)\n-\n-Deprecated or removed RPCs\n---------------------------\n+Wallet\n+------\n \n-- `bumpfee` no longer accepts a `totalFee` option unless the\n-  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n-  parameter will be fully removed in a subsequent release. (#15996)\n+#### Wallet RPC changes\n \n-- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n-  Use the `generatetoaddress` RPC instead. (#15492)\n+- The `upgradewallet` RPC replaces the `-upgradewallet` command line option.\n+  (#15761)\n+- The `settxfee` RPC will fail if the fee was set higher than the `-maxtxfee`\n+  command line setting. The wallet will already fail to create transactions\n+  with fees higher than `-maxtxfee`. (#18467)\n \n-P2P changes\n+GUI changes\n -----------\n \n-- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n-  by default, but can be enabled by setting the `-enablebip61` command\n-  line option.  BIP 61 reject messages will be removed entirely in a\n-  future version of Bitcoin Core. (#14054)\n-\n-- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n-  especially for nodes with spinning disks, the default value for the\n-  `-peerbloomfilters` configuration option has been changed to false.\n-  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n-  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n-  transactions matching a bloom filter.  Users who still want to provide\n-  bloom filter support may either set the configuration option to true\n-  to re-enable both BIP111 and BIP37 support or enable just BIP37\n-  support for specific peers using the updated `-whitelist` and\n-  `-whitebind` configuration options described elsewhere in these\n-  release notes.  For the near future, lightweight clients using public\n-  BIP111/BIP37 nodes should still be able to connect to older versions\n-  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n-  but developers of such software should consider migrating to either\n-  using specific BIP37 nodes or an alternative transaction filtering\n-  system. (#16152)\n-\n-Miscellaneous CLI Changes\n--------------------------\n-\n-- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n-  `chain` and now returns the current network name as defined in BIP70\n-  (main, test, regtest). (#15566)\n-\n Low-level changes\n =================\n \n-RPC\n----\n-\n-- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n-  Instead, information has been moved into the `softforks` object and\n-  an additional `type` field describes how Bitcoin Core determines\n-  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n-  help for details. (#16060)\n-\n-- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n-  and `segwit` (the BIP9 deployments that are currently in active\n-  state). (#16060)\n-\n-- `getrpcinfo` now returns a `logpath` field with the path to\n-  `debug.log`. (#15483)\n-\n Tests\n -----\n \n-- The regression test chain enabled by the `-regtest` command line flag\n-  now requires transactions to not violate standard policy by default.\n-  This is the same default used for mainnet and makes it easier to test\n-  mainnet behavior on regtest. Note that the testnet still allows\n-  non-standard txs by default and that the policy can be locally\n-  adjusted with the `-acceptnonstdtxn` command line flag for both test\n-  chains. (#15891)\n-\n-Configuration\n-------------\n-\n-- A setting specified in the default section but not also specified in a\n-  network-specific section (e.g. testnet) will now produce a error\n-  preventing startup instead of just a warning unless the network is\n-  mainnet.  This prevents settings intended for mainnet from being\n-  applied to testnet or regtest. (#15629)\n-\n-- On platforms supporting `thread_local`, log lines can be prefixed with\n-  the name of the thread that caused the log. To enable this behavior,\n-  use `-logthreadnames=1`. (#15849)\n-\n-Network\n--------\n-\n-- When fetching a transaction announced by multiple peers, previous versions of\n-  Bitcoin Core would sequentially attempt to download the transaction from each\n-  announcing peer until the transaction is received, in the order that those\n-  peers' announcements were received.  In this release, the download logic has\n-  changed to randomize the fetch order across peers and to prefer sending\n-  download requests to outbound peers over inbound peers. This fixes an issue\n-  where inbound peers could prevent a node from getting a transaction.\n-  (#14897, #15834)\n-\n-- If a Tor hidden service is being used, Bitcoin Core will be bound to\n-  the standard port 8333 even if a different port is configured for\n-  clearnet connections.  This prevents leaking node identity through use\n-  of identical non-default port numbers. (#15651)\n-\n-Mempool and transaction relay\n------------------------------\n-\n-- Allows one extra single-ancestor transaction per package.  Previously,\n-  if a transaction in the mempool had 25 descendants, or it and all of\n-  its descendants were over 101,000 vbytes, any newly-received\n-  transaction that was also a descendant would be ignored.  Now, one\n-  extra descendant will be allowed provided it is an immediate\n-  descendant (child) and the child's size is 10,000 vbytes or less.\n-  This makes it possible for two-party contract protocols such as\n-  Lightning Network to give each participant an output they can spend\n-  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n-  allowing one malicious participant to fill the entire package and thus\n-  prevent the other participant from spending their output. (#15681)\n-\n-- Transactions with outputs paying v1 to v16 witness versions (future\n-  segwit versions) are now accepted into the mempool, relayed, and\n-  mined.  Attempting to spend those outputs remains forbidden by policy\n-  (\"non-standard\").  When this change has been widely deployed, wallets\n-  and services can accept any valid bech32 Bitcoin address without\n-  concern that transactions paying future segwit versions will become\n-  stuck in an unconfirmed state. (#15846)\n-\n-- Legacy transactions (transactions with no segwit inputs) must now be\n-  sent using the legacy encoding format, enforcing the rule specified in\n-  BIP144.  (#14039)\n-\n-Wallet\n-------\n-\n-- When in pruned mode, a rescan that was triggered by an `importwallet`,\n-  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n-  when blocks have been pruned. Previously it would fail when `-prune`\n-  has been set.  This change allows setting `-prune` to a high value\n-  (e.g. the disk size) without the calls to any of the import RPCs\n-  failing until the first block is pruned. (#15870)\n-\n-- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n-  BTC), the RPC commands `walletcreatefundedpsbt` and\n-  `fundrawtransaction` will now fail instead of rounding down the fee.\n-  Be aware that the `feeRate` argument is specified in BTC per 1,000\n-  vbytes, not satoshi per vbyte. (#16257)\n-\n-- A new wallet flag `avoid_reuse` has been added (default off). When\n-  enabled, a wallet will distinguish between used and unused addresses,\n-  and default to not use the former in coin selection.  When setting\n-  this flag on an existing wallet, rescanning the blockchain is required\n-  to correctly mark previously used destinations.  Together with \"avoid\n-  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n-  serious privacy issue where a malicious user can track spends by\n-  sending small payments to a previously-paid address that would then\n-  be included with unrelated inputs in future payments. (#13756)\n-\n-Build system changes\n---------------------\n-\n-- Python >=3.5 is now required by all aspects of the project. This\n-  includes the build systems, test framework and linters. The previously\n-  supported minimum (3.4), was EOL in March 2019. (#14954)\n-\n-- The minimum supported miniUPnPc API version is set to 10. This keeps\n-  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n-  packages. Please note, on Debian this package is still vulnerable to\n-  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n-  (in jessie only) and\n-  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n-  (both in jessie and in stretch). (#15993)\n-\n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/).\n+As well as to everyone that helped with translations on\n+[Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      },
      {
        "sha": "70b8ec589fa36db6f5cb594fb608813369780969",
        "filename": "doc/release-notes/release-notes-0.19.0.1.md",
        "status": "added",
        "additions": 1089,
        "deletions": 0,
        "changes": 1089,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-notes/release-notes-0.19.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-notes/release-notes-0.19.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.19.0.1.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,1089 @@\n+Bitcoin Core version 0.19.0.1 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.19.0.1/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but might take some time if the datadir needs to be migrated.  Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems using\n+the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n+to use Bitcoin Core on unsupported systems.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+as frequently tested on them.\n+\n+From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n+built using Qt 5.9.x, which doesn't support versions of macOS older than\n+10.10. Additionally, Bitcoin Core does not yet change appearance when\n+macOS \"dark mode\" is activated.\n+\n+Users running macOS Catalina may need to \"right-click\" and then choose \"Open\"\n+to open the Bitcoin Core .dmg. This is due to new signing requirements\n+imposed by Apple, which the Bitcoin Core project does not yet adhere too.\n+\n+Notable changes\n+===============\n+\n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweaks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n+New RPCs\n+--------\n+\n+- `getbalances` returns an object with all balances (`mine`,\n+  `untrusted_pending` and `immature`). Please refer to the RPC help of\n+  `getbalances` for details. The new RPC is intended to replace\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n+  `getwalletinfo`.  These old calls and fields may be removed in a\n+  future version. (#15930, #16239)\n+\n+- `setwalletflag` sets and unsets wallet flags that enable or disable\n+  features specific to that existing wallet, such as the new\n+  `avoid_reuse` feature documented elsewhere in these release notes.\n+  (#13756)\n+\n+- `getblockfilter` gets the BIP158 filter for the specified block.  This\n+  RPC is only enabled if block filters have been created using the\n+  `-blockfilterindex` configuration option. (#14121)\n+\n+New settings\n+------------\n+\n+- `-blockfilterindex` enables the creation of BIP158 block filters for\n+  the entire blockchain.  Filters will be created in the background and\n+  currently use about 4 GiB of space.  Note: this version of Bitcoin\n+  Core does not serve block filters over the P2P network, although the\n+  local user may obtain block filters using the `getblockfilter` RPC.\n+  (#14121)\n+\n+Updated settings\n+----------------\n+\n+- `whitebind` and `whitelist` now accept a list of permissions to\n+  provide peers connecting using the indicated interfaces or IP\n+  addresses.  If no permissions are specified with an address or CIDR\n+  network, the implicit default permissions are the same as previous\n+  releases.  See the `bitcoind -help` output for these two options for\n+  details about the available permissions. (#16248)\n+\n+- Users setting custom `dbcache` values can increase their setting slightly\n+  without using any more real memory.  Recent changes reduced the memory use\n+  by about 9% and made chainstate accounting more accurate (it was underestimating\n+  the use of memory before).  For example, if you set a value of \"450\" before, you\n+  may now set a value of \"500\" to use about the same real amount of memory. (#16957)\n+\n+\n+Updated RPCs\n+------------\n+\n+Note: some low-level RPC changes mainly useful for testing are described in the\n+Low-level Changes section below.\n+\n+- `sendmany` no longer has a `minconf` argument.  This argument was not\n+  well-specified and would lead to RPC errors even when the wallet's\n+  coin selection succeeded.  Users who want to influence coin selection\n+  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n+  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n+  arguments. (#15596)\n+\n+- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n+  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n+  whether already used addresses should be included in the operation.\n+  Additionally, `sendtoaddress` will avoid partial spends when\n+  `avoid_reuse` is enabled even if this feature is not already enabled\n+  via the `-avoidpartialspends` command line flag because not doing so\n+  would risk using up the \"wrong\" UTXO for an address reuse case.\n+  (#13756)\n+\n+- RPCs which have an `include_watchonly` argument or `includeWatching` option now default to `true` for watch-only\n+  wallets. Affected RPCs are: `getbalance`, `listreceivedbyaddress`, `listreceivedbylabel`, `listtransactions`,\n+  `listsinceblock`, `gettransaction`, `walletcreatefundedpsbt`, and `fundrawtransaction`. (#16383)\n+\n+- `listunspent` now returns a \"reused\" bool for each output if the\n+  wallet flag \"avoid_reuse\" is enabled. (#13756)\n+\n+- `getblockstats` now uses BlockUndo data instead of the transaction\n+  index, making it much faster, no longer dependent on the `-txindex`\n+  configuration option, and functional for all non-pruned blocks.\n+  (#14802)\n+\n+- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n+  out input and output scripts and keys when known. P2SH-witness inputs\n+  will be filled in from the UTXO set when a descriptor is provided that\n+  shows they're spending segwit outputs.  See the RPC help text for full\n+  details. (#15427)\n+\n+- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n+  `allowhighfees` parameter to fail mempool acceptance if the\n+  transaction fee exceeds the value of the configuration option\n+  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n+  can be changed when calling either RPC using a `maxfeerate` parameter.\n+  (#15620)\n+\n+- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n+  `getrawmempool` no longer return a `size` field unless the\n+  configuration option `-deprecatedrpc=size` is used.  Instead a new\n+  `vsize` field is returned with the transaction's virtual size\n+  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n+\n+- `getwalletinfo` now includes a `scanning` field that is either `false`\n+  (no scanning) or an object with information about the duration and\n+  progress of the wallet's scanning historical blocks for transactions\n+  affecting its balances. (#15730)\n+\n+- `gettransaction` now accepts a third (boolean) argument `verbose`. If\n+  set to `true`, a new `decoded` field will be added to the response containing\n+  the decoded transaction. This field is equivalent to RPC `decoderawtransaction`,\n+  or RPC `getrawtransaction` when `verbose` is passed. (#16185, #16866, #16873)\n+\n+- `createwallet` accepts a new `passphrase` parameter.  If set, this\n+  will create the new wallet encrypted with the given passphrase.  If\n+  unset (the default) or set to an empty string, no encryption will be\n+  used. (#16394)\n+\n+- `getchaintxstats` RPC now returns the additional key of\n+  `window_final_block_height`. (#16695)\n+\n+- `getmempoolentry` now provides a `weight` field containing the\n+  transaction weight as defined in BIP141. (#16647)\n+\n+- The `getnetworkinfo` and `getpeerinfo` commands now contain a new field with decoded network service flags. (#16786)\n+\n+- `getdescriptorinfo` now returns an additional `checksum` field\n+  containing the checksum for the unmodified descriptor provided by the\n+  user (that is, before the descriptor is normalized for the\n+  `descriptor` field). (#15986)\n+\n+- `joinpsbts` now shuffles the order of the inputs and outputs of the resulting\n+  joined PSBT. Previously, inputs and outputs were added in the order PSBTs were\n+  provided. This made it easy to correlate inputs to outputs, representing a\n+  privacy leak. (#16512)\n+\n+- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n+  `-walletrbf` configuration option is set to true. (#15911)\n+\n+GUI changes\n+-----------\n+\n+- The GUI wallet now provides bech32 addresses by default.  The user may change the address type\n+  during invoice generation using a GUI toggle, or the default address\n+  type may be changed with the `-addresstype` configuration option.\n+  (#15711, #16497)\n+\n+- In 0.18.0, a `./configure` flag was introduced to allow disabling BIP70 support in the GUI (support was enabled by default). In 0.19.0, this flag is now __disabled__ by default. If you want to compile Bitcoin Core with BIP70 support in the GUI, you can pass `--enable-bip70` to `./configure`. (#15584)\n+\n+Deprecated or removed configuration options\n+-------------------------------------------\n+\n+- `-mempoolreplacement` is removed, although default node behavior\n+  remains the same.  This option previously allowed the user to prevent\n+  the node from accepting or relaying BIP125 transaction replacements.\n+  This is different from the remaining configuration option\n+  `-walletrbf`. (#16171)\n+\n+Deprecated or removed RPCs\n+--------------------------\n+\n+- `bumpfee` no longer accepts a `totalFee` option unless the\n+  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n+  parameter will be fully removed in a subsequent release. (#15996)\n+\n+- `bumpfee` has a new `fee_rate` option as a replacement for the deprecated `totalFee`. (#16727)\n+\n+- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n+  Use the `generatetoaddress` RPC instead. (#15492)\n+\n+P2P changes\n+-----------\n+\n+- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n+  by default, but can be enabled by setting the `-enablebip61` command\n+  line option.  BIP 61 reject messages will be removed entirely in a\n+  future version of Bitcoin Core. (#14054)\n+\n+- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n+  especially for nodes with spinning disks, the default value for the\n+  `-peerbloomfilters` configuration option has been changed to false.\n+  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n+  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n+  transactions matching a bloom filter.  Users who still want to provide\n+  bloom filter support may either set the configuration option to true\n+  to re-enable both BIP111 and BIP37 support or enable just BIP37\n+  support for specific peers using the updated `-whitelist` and\n+  `-whitebind` configuration options described elsewhere in these\n+  release notes.  For the near future, lightweight clients using public\n+  BIP111/BIP37 nodes should still be able to connect to older versions\n+  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n+  but developers of such software should consider migrating to either\n+  using specific BIP37 nodes or an alternative transaction filtering\n+  system. (#16152)\n+\n+- By default, Bitcoin Core will now make two additional outbound connections that are exclusively used for block-relay.  No transactions or addr messages will be processed on these connections. These connections are designed to add little additional memory or bandwidth resource requirements but should make some partitioning attacks more difficult to carry out. (#15759)\n+\n+Miscellaneous CLI Changes\n+-------------------------\n+\n+- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n+  `chain` and now returns the current network name as defined in BIP70\n+  (main, test, regtest). (#15566)\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n+  Instead, information has been moved into the `softforks` object and\n+  an additional `type` field describes how Bitcoin Core determines\n+  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n+  help for details. (#16060)\n+\n+- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n+  and `segwit` (the BIP9 deployments that are currently in active\n+  state). (#16060)\n+\n+- `getrpcinfo` now returns a `logpath` field with the path to\n+  `debug.log`. (#15483)\n+\n+Tests\n+-----\n+\n+- The regression test chain enabled by the `-regtest` command line flag\n+  now requires transactions to not violate standard policy by default.\n+  This is the same default used for mainnet and makes it easier to test\n+  mainnet behavior on regtest. Note that the testnet still allows\n+  non-standard txs by default and that the policy can be locally\n+  adjusted with the `-acceptnonstdtxn` command line flag for both test\n+  chains. (#15891)\n+\n+Configuration\n+------------\n+\n+- A setting specified in the default section but not also specified in a\n+  network-specific section (e.g. testnet) will now produce an error\n+  preventing startup instead of just a warning unless the network is\n+  mainnet.  This prevents settings intended for mainnet from being\n+  applied to testnet or regtest. (#15629)\n+\n+- On platforms supporting `thread_local`, log lines can be prefixed with\n+  the name of the thread that caused the log. To enable this behavior,\n+  use `-logthreadnames=1`. (#15849)\n+\n+Network\n+-------\n+\n+- When fetching a transaction announced by multiple peers, previous versions of\n+  Bitcoin Core would sequentially attempt to download the transaction from each\n+  announcing peer until the transaction is received, in the order that those\n+  peers' announcements were received.  In this release, the download logic has\n+  changed to randomize the fetch order across peers and to prefer sending\n+  download requests to outbound peers over inbound peers. This fixes an issue\n+  where inbound peers could prevent a node from getting a transaction.\n+  (#14897, #15834)\n+\n+- If a Tor hidden service is being used, Bitcoin Core will be bound to\n+  the standard port 8333 even if a different port is configured for\n+  clearnet connections.  This prevents leaking node identity through use\n+  of identical non-default port numbers. (#15651)\n+\n+Mempool and transaction relay\n+-----------------------------\n+\n+- Allows one extra single-ancestor transaction per package.  Previously,\n+  if a transaction in the mempool had 25 descendants, or it and all of\n+  its descendants were over 101,000 vbytes, any newly-received\n+  transaction that was also a descendant would be ignored.  Now, one\n+  extra descendant will be allowed provided it is an immediate\n+  descendant (child) and the child's size is 10,000 vbytes or less.\n+  This makes it possible for two-party contract protocols such as\n+  Lightning Network to give each participant an output they can spend\n+  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n+  allowing one malicious participant to fill the entire package and thus\n+  prevent the other participant from spending their output. (#15681)\n+\n+- Transactions with outputs paying v1 to v16 witness versions (future\n+  segwit versions) are now accepted into the mempool, relayed, and\n+  mined.  Attempting to spend those outputs remains forbidden by policy\n+  (\"non-standard\").  When this change has been widely deployed, wallets\n+  and services can accept any valid bech32 Bitcoin address without\n+  concern that transactions paying future segwit versions will become\n+  stuck in an unconfirmed state. (#15846)\n+\n+- Legacy transactions (transactions with no segwit inputs) must now be\n+  sent using the legacy encoding format, enforcing the rule specified in\n+  BIP144.  (#14039)\n+\n+Wallet\n+------\n+\n+- When in pruned mode, a rescan that was triggered by an `importwallet`,\n+  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n+  when blocks have been pruned. Previously it would fail when `-prune`\n+  has been set.  This change allows setting `-prune` to a high value\n+  (e.g. the disk size) without the calls to any of the import RPCs\n+  failing until the first block is pruned. (#15870)\n+\n+- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n+  BTC), the RPC commands `walletcreatefundedpsbt` and\n+  `fundrawtransaction` will now fail instead of rounding down the fee.\n+  Be aware that the `feeRate` argument is specified in BTC per 1,000\n+  vbytes, not satoshi per vbyte. (#16257)\n+\n+- A new wallet flag `avoid_reuse` has been added (default off). When\n+  enabled, a wallet will distinguish between used and unused addresses,\n+  and default to not use the former in coin selection.  When setting\n+  this flag on an existing wallet, rescanning the blockchain is required\n+  to correctly mark previously used destinations.  Together with \"avoid\n+  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n+  serious privacy issue where a malicious user can track spends by\n+  sending small payments to a previously-paid address that would then\n+  be included with unrelated inputs in future payments. (#13756)\n+\n+Build system changes\n+--------------------\n+\n+- Python >=3.5 is now required by all aspects of the project. This\n+  includes the build systems, test framework and linters. The previously\n+  supported minimum (3.4), was EOL in March 2019. (#14954)\n+\n+- The minimum supported miniUPnPc API version is set to 10. This keeps\n+  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n+  packages. Please note, on Debian this package is still vulnerable to\n+  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n+  (in jessie only) and\n+  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n+  (both in jessie and in stretch). (#15993)\n+\n+0.19.0 change log\n+=================\n+\n+### Consensus\n+- #16128 Delete error-prone CScript constructor only used with FindAndDelete (instagibbs)\n+- #16060 Bury bip9 deployments (jnewbery)\n+\n+### Policy\n+- #15557 Enhance `bumpfee` to include inputs when targeting a feerate (instagibbs)\n+- #15846 Make sending to future native witness outputs standard (sipa)\n+\n+### Block and transaction handling\n+- #15632 Remove ResendWalletTransactions from the Validation Interface (jnewbery)\n+- #14121 Index for BIP 157 block filters (jimpo)\n+- #15141 Rewrite DoS interface between validation and net_processing (sdaftuar)\n+- #15880 utils and libraries: Replace deprecated Boost Filesystem functions (hebasto)\n+- #15971 validation: Add compile-time checking for negative locking requirement in LimitValidationInterfaceQueue (practicalswift)\n+- #15999 init: Remove dead code in LoadChainTip (MarcoFalke)\n+- #16015 validation: Hold cs_main when reading chainActive in RewindBlockIndex (practicalswift)\n+- #16056 remove unused magic number from consistency check (instagibbs)\n+- #16171 Remove -mempoolreplacement to prevent needless block prop slowness (TheBlueMatt)\n+- #15894 Remove duplicated \"Error: \" prefix in logs (hebasto)\n+- #14193 validation: Add missing mempool locks (MarcoFalke)\n+- #15681 Allow one extra single-ancestor transaction per package (TheBlueMatt)\n+- #15305 [validation] Crash if disconnecting a block fails (sdaftuar)\n+- #16471 log correct messages when CPFP fails (jnewbery)\n+- #16433 txmempool: Remove unused default value MemPoolRemovalReason::UNKNOWN (MarcoFalke)\n+- #13868 Remove unused fScriptChecks parameter from CheckInputs (Empact)\n+- #16421 Conservatively accept RBF bumps bumping one tx at the package limits (TheBlueMatt)\n+- #16854 Prevent UpdateTip log message from being broken up (stevenroose)\n+- #16956 validation: Make GetWitnessCommitmentIndex public (MarcoFalke)\n+- #16713 Ignore old versionbit activations to avoid 'unknown softforks' warning (jnewbery)\n+- #17002 chainparams: Bump assumed chain params (MarcoFalke)\n+- #16849 Fix block index inconsistency in InvalidateBlock() (sdaftuar)\n+\n+### P2P protocol and network code\n+- #15597 Generate log entry when blocks messages are received unexpectedly (pstratem)\n+- #15654 Remove unused unsanitized user agent string CNode::strSubVer (MarcoFalke)\n+- #15689 netaddress: Update CNetAddr for ORCHIDv2 (dongcarl)\n+- #15834 Fix transaction relay bugs introduced in #14897 and expire transactions from peer in-flight map (sdaftuar)\n+- #15651 torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently (luke-jr)\n+- #16188 Document what happens to getdata of unknown type (MarcoFalke)\n+- #15649 Add ChaCha20Poly1305@Bitcoin AEAD (jonasschnelli)\n+- #16152 Disable bloom filtering by default (TheBlueMatt)\n+- #15993 Drop support of the insecure miniUPnPc versions (hebasto)\n+- #16197 Use mockable time for tx download (MarcoFalke)\n+- #16248 Make whitebind/whitelist permissions more flexible (NicolasDorier)\n+- #16618 [Fix] Allow connection of a noban banned peer (NicolasDorier)\n+- #16631 Restore default whitelistrelay to true (NicolasDorier)\n+- #15759 Add 2 outbound block-relay-only connections (sdaftuar)\n+- #15558 Don't query all DNS seeds at once (sipa)\n+- #16999 0.19 seeds update (laanwj)\n+\n+### Wallet\n+- #15288 Remove wallet -> node global function calls (ryanofsky)\n+- #15491 Improve log output for errors during load (gwillen)\n+- #13541 wallet/rpc: sendrawtransaction maxfeerate (kallewoof)\n+- #15680 Remove resendwallettransactions RPC method (jnewbery)\n+- #15508 Refactor analyzepsbt for use outside RPC code (gwillen)\n+- #15747 Remove plethora of Get*Balance (MarcoFalke)\n+- #15728 Refactor relay transactions (jnewbery)\n+- #15639 bitcoin-wallet tool: Drop libbitcoin_server.a dependency (ryanofsky)\n+- #15853 Remove unused import checkpoints.h (MarcoFalke)\n+- #15780 add cachable amounts for caching credit/debit values (kallewoof)\n+- #15778 Move maxtxfee from node to wallet (jnewbery)\n+- #15901 log on rescan completion (andrewtoth)\n+- #15917 Avoid logging no_such_file_or_directory error (promag)\n+- #15452 Replace CScriptID and CKeyID in CTxDestination with dedicated types (instagibbs)\n+- #15870 Only fail rescan when blocks have actually been pruned (MarcoFalke)\n+- #15006 Add option to create an encrypted wallet (achow101)\n+- #16001 Give WalletModel::UnlockContext move semantics (sipa)\n+- #15741 Batch write imported stuff in importmulti (achow101)\n+- #16144 do not encrypt wallets with disabled private keys (mrwhythat)\n+- #15024 Allow specific private keys to be derived from descriptor (meshcollider)\n+- #13756 \"avoid_reuse\" wallet flag for improved privacy (kallewoof)\n+- #16226 Move ismine to the wallet module (achow101)\n+- #16239 wallet/rpc: follow-up clean-up/fixes to avoid_reuse (kallewoof)\n+- #16286 refactoring: wallet: Fix GCC 7.4.0 warning (hebasto)\n+- #16257 abort when attempting to fund a transaction above -maxtxfee (Sjors)\n+- #16237 Have the wallet give out destinations instead of keys (achow101)\n+- #16322 Fix -maxtxfee check by moving it to CWallet::CreateTransaction (promag)\n+- #16361 Remove redundant pre-TopUpKeypool check (instagibbs)\n+- #16244 Move wallet creation out of the createwallet rpc into its own function (achow101)\n+- #16227 Refactor CWallet's inheritance chain (achow101)\n+- #16208 Consume ReserveDestination on successful CreateTransaction (instagibbs)\n+- #16301 Use CWallet::Import* functions in all import* RPCs (achow101)\n+- #16402 Remove wallet settings from chainparams (MarcoFalke)\n+- #16415 Get rid of PendingWalletTx class (ryanofsky)\n+- #15588 Log the actual wallet file version and no longer publicly expose the \"version\" record (achow101)\n+- #16399 Improve wallet creation (fjahr)\n+- #16475 Enumerate walletdb keys (MarcoFalke)\n+- #15709 Do not add \"setting\" key as unknown (Bushstar)\n+- #16451 Remove CMerkleTx (jnewbery)\n+- #15906 Move min_depth and max_depth to coin control (amitiuttarwar)\n+- #16502 Drop unused OldKey (promag)\n+- #16394 Allow createwallet to take empty passwords to make unencrypted wallets (achow101)\n+- #15911 Use wallet RBF default for walletcreatefundedpsbt (Sjors)\n+- #16503 Remove p2pEnabled from Chain interface (ariard)\n+- #16557 restore coinbase and confirmed/conflicted checks in SubmitMemoryPoolAndRelay() (jnewbery)\n+- #14934 Descriptor expansion cache clarifications (Sjors)\n+- #16383 rpcwallet: default include_watchonly to true for watchonly wallets (jb55)\n+- #16542 Return more specific errors about invalid descriptors (achow101)\n+- #16572 Fix Char as Bool in Wallet (JeremyRubin)\n+- #16753 extract PubKey from P2PK script with Solver (theStack)\n+- #16716 Use wallet name instead of pointer on unload/release (promag)\n+- #16185 gettransaction: add an argument to decode the transaction (darosior)\n+- #16745 Translate all initErrors in CreateWalletFromFile (MarcoFalke)\n+- #16792 Assert that the HRP is lowercase in Bech32::Encode (meshcollider)\n+- #16624 encapsulate transactions state (ariard)\n+- #16830 Cleanup walletinitinterface.h (hebasto)\n+- #16796 Fix segfault in CreateWalletFromFile (MarcoFalke)\n+- #16866 Rename 'decode' argument in gettransaction method to 'verbose' (jnewbery)\n+- #16727 Explicit feerate for bumpfee (instagibbs)\n+- #16609 descriptor: fix missed m_script_arg arg renaming in #14934 (fanquake)\n+\n+### RPC and other APIs\n+- #15492 remove deprecated generate method (Sjors)\n+- #15566 cli: Replace testnet with chain and return network name as per bip70 (fanquake)\n+- #15564 cli: Remove duplicate wallet fields from -getinfo (fanquake)\n+- #15642 Remove deprecated rpc warnings (jnewbery)\n+- #15637 Rename size to vsize in mempool related calls (fanquake)\n+- #15620 Uncouple non-wallet rpcs from maxTxFee global (MarcoFalke)\n+- #15616 Clarify decodescript RPCResult doc (MarcoFalke)\n+- #15669 Fix help text for signtransactionwithXXX (torkelrogstad)\n+- #15596 Ignore sendmany::minconf as dummy value (MarcoFalke)\n+- #15755 remove unused var in rawtransaction.cpp (Bushstar)\n+- #15746 RPCHelpMan: Always name dictionary keys (MarcoFalke)\n+- #15748 remove dead mining code (jnewbery)\n+- #15751 Speed up deriveaddresses for large ranges (sipa)\n+- #15770 Validate maxfeerate with AmountFromValue (promag)\n+- #15474 rest/rpc: Make mempoolinfo atomic (promag)\n+- #15463 Speedup getaddressesbylabel (promag)\n+- #15784 Remove dependency on interfaces::Chain in SignTransaction (ariard)\n+- #15323 Expose g_is_mempool_loaded via getmempoolinfo (Empact)\n+- #15932 Serialize in getblock without cs_main (MarcoFalke)\n+- #15930 Add balances RPC (MarcoFalke)\n+- #15730 Show scanning details in getwalletinfo (promag)\n+- #14802 faster getblockstats using BlockUndo data (FelixWeis)\n+- #14984 Speedup getrawmempool when verbose=true (promag)\n+- #16071 Hint for importmulti in help output of importpubkey and importaddress (kristapsk)\n+- #16063 Mention getwalletinfo where a rescan is triggered (promag)\n+- #16024 deriveaddresses: Correction of descriptor checksum in RPC example (ccapo)\n+- #16217 getrawtransaction: inform about blockhash argument when lookup fails (darosior)\n+- #15427 Add support for descriptors to utxoupdatepsbt (sipa)\n+- #16262 Allow shutdown while in generateblocks (pstratem)\n+- #15483 Adding a 'logpath' entry to getrpcinfo (darosior)\n+- #16325 Clarify that block count means height excl genesis (MarcoFalke)\n+- #16326 add new utxoupdatepsbt arguments to the CRPCCommand and CPRCCvertParam tables (jnewbery)\n+- #16332 Add logpath description for getrpcinfo (instagibbs)\n+- #16240 JSONRPCRequest-aware RPCHelpMan (kallewoof)\n+- #15996 Deprecate totalfee argument in `bumpfee` (instagibbs)\n+- #16467 sendrawtransaction help privacy note (jonatack)\n+- #16596 Fix getblocktemplate CLI example (emilengler)\n+- #15986 Add checksum to getdescriptorinfo (sipa)\n+- #16647 add weight to getmempoolentry output (fanquake)\n+- #16695 Add window final block height to getchaintxstats (leto)\n+- #16798 Refactor rawtransaction_util's SignTransaction to separate prevtx parsing (achow101)\n+- #16285 Improve scantxoutset response and help message (promag)\n+- #16725 Don't show addresses or P2PK in decoderawtransaction (NicolasDorier)\n+- #16787 Human readable network services (darosior)\n+- #16251 Improve signrawtransaction error reporting (ajtowns)\n+- #16873 fix regression in gettransaction (jonatack)\n+- #16512 Shuffle inputs and outputs after joining psbts (achow101)\n+- #16521 Use the default maxfeerate value as BTC/kB (Remagpie)\n+- #16817 Fix casing in getblockchaininfo to be inline with other fields (dangershony)\n+- #17131 fix -rpcclienttimeout 0 option (fjahr)\n+- #17249 Add missing deque include to fix build (jbeich)\n+- #17368 cli: fix -getinfo output when compiled with no wallet (fanquake)\n+\n+### GUI\n+- #15464 Drop unused return values in WalletFrame (promag)\n+- #15614 Defer removeAndDeleteWallet when no modal widget is active (promag)\n+- #15711 Generate bech32 addresses by default (MarcoFalke)\n+- #15829 update request payment button text and tab description (fanquake)\n+- #15874 Resolve the qt/guiutil <-> qt/optionsmodel CD (251Labs)\n+- #15371 Uppercase bech32 addresses in qr codes (benthecarman)\n+- #15928 Move QRImageWidget to its own file-pair (luke-jr)\n+- #16113 move coin control \"OK\" to the right hand side of the dialog (fanquake)\n+- #16090 Add vertical spacer to peer detail widget (JosuGZ)\n+- #15886 qt, wallet: Revamp SendConfirmationDialog (hebasto)\n+- #16263 Use qInfo() if no error occurs (hebasto)\n+- #16153 Add antialiasing to traffic graph widget (JosuGZ)\n+- #16350 Remove unused guard (hebasto)\n+- #16106 Sort wallets in open wallet menu (promag)\n+- #16291 Stop translating PACKAGE_NAME (MarcoFalke)\n+- #16380 Remove unused bits from the service flags enum (MarcoFalke)\n+- #16379 Fix autostart filenames on Linux for testnet/regtest (hebasto)\n+- #16366 init: Use InitError for all errors in bitcoind/qt (MarcoFalke)\n+- #16436 Do not create payment server if -disablewallet option provided (hebasto)\n+- #16514 Remove unused RPCConsole::tabFocus (promag)\n+- #16497 Generate bech32 addresses by default (take 2, fixup) (MarcoFalke)\n+- #16349 Remove redundant WalletController::addWallet slot (hebasto)\n+- #16578 Do not pass in command line arguments to QApplication (achow101)\n+- #16612 Remove menu icons (laanwj)\n+- #16677 remove unused PlatformStyle::TextColorIcon (fanquake)\n+- #16694 Ensure transaction send error is always visible (fanquake)\n+- #14879 Add warning messages to the debug window (hebasto)\n+- #16708 Replace obsolete functions of QSslSocket (hebasto)\n+- #16701 Replace functions deprecated in Qt 5.13 (hebasto)\n+- #16706 Replace deprecated QSignalMapper by lambda expressions (hebasto)\n+- #16707 Remove obsolete QModelIndex::child() (hebasto)\n+- #16758 Replace QFontMetrics::width() with TextWidth() (hebasto)\n+- #16760 Change uninstall icon on Windows (GChuf)\n+- #16720 Replace objc_msgSend() function calls with the native Objective-C syntax (hebasto)\n+- #16788 Update transifex slug for 0.19 (laanwj)\n+- #15450 Create wallet menu option (achow101)\n+- #16735 Remove unused menu items for Windows and Linux (GChuf)\n+- #16826 Do additional character escaping for wallet names and address labels (achow101)\n+- #15529 Add Qt programs to msvc build (updated, no code changes) (sipsorcery)\n+- #16714 add prune to intro screen with smart default (Sjors)\n+- #16858 advise users not to switch wallets when opening a BIP70 URI (jameshilliard)\n+- #16822 Create wallet menu option follow-ups (jonatack)\n+- #16882 Re-generate translations before 0.19.0 (MarcoFalke)\n+- #16928 Rename address checkbox back to bech32 (MarcoFalke)\n+- #16837 Fix {C{,XX},LD}FLAGS pickup (dongcarl)\n+- #16971 Change default size of intro frame (emilengler)\n+- #16988 Periodic translations update (laanwj)\n+- #16852 When BIP70 is disabled, get PaymentRequest merchant using string search (achow101)\n+- #16952 make sure to update the UI when deleting a transaction (jonasschnelli)\n+- #17031 Prevent processing duplicate payment requests (promag)\n+- #17135 Make polling in ClientModel asynchronous (promag)\n+- #17120 Fix start timer from non QThread (promag)\n+- #17257 disable font antialiasing for QR image address (fanquake)\n+\n+### Build system\n+- #14954 Require python 3.5 (MarcoFalke)\n+- #15580 native_protobuf: avoid system zlib (dongcarl)\n+- #15601 Switch to python3 (take 3) (MarcoFalke)\n+- #15581 Make less assumptions about build env (dongcarl)\n+- #14853 latest RapidCheck (fanquake)\n+- #15446 Improve depends debuggability (dongcarl)\n+- #13788 Fix --disable-asm for newer assembly checks/code (luke-jr)\n+- #12051 add missing debian contrib file to tarball (puchu)\n+- #15919 Remove unused OpenSSL includes to make it more clear where OpenSSL is used (practicalswift)\n+- #15978 .gitignore: Don't ignore depends patches (dongcarl)\n+- #15939 gitian: Remove windows 32 bit build (MarcoFalke)\n+- #15239 scripts and tools: Move non-linux build source tarballs to \"bitcoin-binaries/version\" directory (hebasto)\n+- #14047 Add HKDF_HMAC256_L32 and method to negate a private key (jonasschnelli)\n+- #16051 add patch to common dependencies (fanquake)\n+- #16049 switch to secure download of all dependencies (Kemu)\n+- #16059 configure: Fix thread_local detection (dongcarl)\n+- #16089 add ability to skip building zeromq (fanquake)\n+- #15844 Purge libtool archives (dongcarl)\n+- #15461 update to Boost 1.70 (Sjors)\n+- #16141 remove GZIP export from gitian descriptors (fanquake)\n+- #16235 Cleaned up and consolidated msbuild files (no code changes) (sipsorcery)\n+- #16246 MSVC: Fix error in debug mode (Fix #16245) (NicolasDorier)\n+- #16183 xtrans: Configure flags cleanup (dongcarl)\n+- #16258 [MSVC]: Create the config.ini as part of bitcoind build (NicolasDorier)\n+- #16271 remove -Wall from rapidcheck build flags (fanquake)\n+- #16309 [MSVC] allow user level project customization (NicolasDorier)\n+- #16308 [MSVC] Copy build output to src/ automatically after build (NicolasDorier)\n+- #15457 Check std::system for -[alert|block|wallet]notify (Sjors)\n+- #16344 use #if HAVE_SYSTEM instead of defined(HAVE_SYSTEM) (Sjors)\n+- #16352 prune dbus from depends (fanquake)\n+- #16270 expat 2.2.7 (fanquake)\n+- #16408 Prune X packages (dongcarl)\n+- #16386 disable unused Qt features (fanquake)\n+- #16424 Treat -Wswitch as error when --enable-werror (MarcoFalke)\n+- #16441 remove qt libjpeg check from bitcoin_qt.m4 (fanquake)\n+- #16434 Specify AM_CPPFLAGS for ZMQ (domob1812)\n+- #16534 add Qt Creator Makefile.am.user to .gitignore (Bushstar)\n+- #16573 disable building libsecp256k1 benchmarks (fanquake)\n+- #16533 disable libxcb extensions (fanquake)\n+- #16589 Remove unused src/obj-test folder (MarcoFalke)\n+- #16435 autoconf: Sane `--enable-debug` defaults (dongcarl)\n+- #16622 echo property tests status during build (jonatack)\n+- #16611 Remove src/obj directory from repository (laanwj)\n+- #16371 ignore macOS make deploy artefacts & add them to clean-local (fanquake)\n+- #16654 build: update RapidCheck Makefile (jonatack)\n+- #16370 cleanup package configure flags (fanquake)\n+- #16746 msbuild: Ignore linker warning (sipsorcery)\n+- #16750 msbuild: adds bench_bitcoin to auto generated project files (sipsorcery)\n+- #16810 guix: Remove ssp spec file hack (dongcarl)\n+- #16477 skip deploying plugins we dont use in macdeployqtplus (fanquake)\n+- #16413 Bump QT to LTS release 5.9.8 (THETCR)\n+- #15584 disable BIP70 support by default (fanquake)\n+- #16871 make building protobuf optional in depends (fanquake)\n+- #16879 remove redundant sed patching (fanquake)\n+- #16809 zlib: Move toolchain options to configure (dongcarl)\n+- #15146 Solve SmartOS FD_ZERO build issue (Empact)\n+- #16870 update boost macros to latest upstream for improved error reporting (fanquake)\n+- #16982 Factor out qt translations from build system (laanwj)\n+- #16926 Add OpenSSL termios fix for musl libc (nmarley)\n+- #16927 Refresh ZeroMQ 4.3.1 patch (nmarley)\n+- #17005 Qt version appears only if GUI is being built (ch4ot1c)\n+- #16468 Exclude depends/Makefile in .gitignore (promag)\n+\n+### Tests and QA\n+- #15296 Add script checking for deterministic line coverage in unit tests (practicalswift)\n+- #15338 ci: Build and run tests once on freebsd (MarcoFalke)\n+- #15479 Add .style.yapf (MarcoFalke)\n+- #15534 lint-format-strings: open files sequentially (fix for OS X) (gwillen)\n+- #15504 fuzz: Link BasicTestingSetup (shared with unit tests) (MarcoFalke)\n+- #15473 bench: Benchmark mempooltojson (MarcoFalke)\n+- #15466 Print remaining jobs in test_runner.py (stevenroose)\n+- #15631 mininode: Clearer error message on invalid magic bytes (MarcoFalke)\n+- #15255 Remove travis_wait from lint script (gkrizek)\n+- #15686 make pruning test faster (jnewbery)\n+- #15533 .style.yapf: Set column_limit=160 (MarcoFalke)\n+- #15660 Overhaul p2p_compactblocks.py (sdaftuar)\n+- #15495 Add regtests for HTTP status codes (domob1812)\n+- #15772 Properly log named args in authproxy (MarcoFalke)\n+- #15771 Prevent concurrency issues reading .cookie file (promag)\n+- #15693 travis: Switch to ubuntu keyserver to avoid timeouts (MarcoFalke)\n+- #15629 init: Throw error when network specific config is ignored (MarcoFalke)\n+- #15773 Add BitcoinTestFramework::sync_* methods (MarcoFalke)\n+- #15797 travis: Bump second timeout to 33 minutes, add rationale (MarcoFalke)\n+- #15788 Unify testing setups for fuzz, bench, and unit tests (MarcoFalke)\n+- #15352 Reduce noise level in test_bitcoin output (practicalswift)\n+- #15779 Add wallet_balance benchmark (MarcoFalke)\n+- #15843 fix outdated include in blockfilter_index_tests (jamesob)\n+- #15866 Add missing syncwithvalidationinterfacequeue to wallet_import_rescan (MarcoFalke)\n+- #15697 Make swap_magic_bytes in p2p_invalid_messages atomic (MarcoFalke)\n+- #15895 Avoid re-reading config.ini unnecessarily (luke-jr)\n+- #15896 feature_filelock, interface_bitcoin_cli: Use PACKAGE_NAME in messages rather than hardcoding Bitcoin Core (luke-jr)\n+- #15897 QA/mininode: Send all headers upfront in send_blocks_and_test to avoid sending an unconnected one (luke-jr)\n+- #15696 test_runner: Move feature_pruning to base tests (MarcoFalke)\n+- #15869 Add settings merge test to prevent regresssions (ryanofsky)\n+- #15758 Add further tests to wallet_balance (MarcoFalke)\n+- #15841 combine_logs: append node stderr and stdout if it exists (MarcoFalke)\n+- #15949 test_runner: Move pruning back to extended (MarcoFalke)\n+- #15927 log thread names by default in functional tests (jnewbery)\n+- #15664 change default Python block serialization to witness (instagibbs)\n+- #15988 Add test for ArgsManager::GetChainName (ryanofsky)\n+- #15963 Make random seed logged and settable (jnewbery)\n+- #15943 Fail if RPC has been added without tests (MarcoFalke)\n+- #16036 travis: Run all lint scripts even if one fails (scravy)\n+- #13555 parameterize adjustment period in versionbits_computeblockversion (JBaczuk)\n+- #16079 wallet_balance.py: Prevent edge cases (stevenroose)\n+- #16078 replace tx hash with txid in rawtransaction test (LongShao007)\n+- #16042 Bump MAX_NODES to 12 (MarcoFalke)\n+- #16124 Limit Python linting to files in the repo (practicalswift)\n+- #16143 Mark unit test blockfilter_index_initial_sync as non-deterministic (practicalswift)\n+- #16214 travis: Fix caching issues (MarcoFalke)\n+- #15982 Make msg_block a witness block (MarcoFalke)\n+- #16225 Make coins_tests/updatecoins_simulation_test deterministic (practicalswift)\n+- #16236 fuzz: Log output even if fuzzer failed (MarcoFalke)\n+- #15520 cirrus: Run extended test feature_pruning (MarcoFalke)\n+- #16234 Add test for unknown args (MarcoFalke)\n+- #16207 stop generating lcov coverage when functional tests fail (asood123)\n+- #16252 Log to debug.log in all unit tests (MarcoFalke)\n+- #16289 Add missing ECC_Stop() in GUI rpcnestedtests.cpp (jonasschnelli)\n+- #16278 Remove unused includes (practicalswift)\n+- #16302 Add missing syncwithvalidationinterfacequeue to wallet_balance test (MarcoFalke)\n+- #15538 wallet_bumpfee.py: Make sure coin selection produces change (instagibbs)\n+- #16294 Create at most one testing setup (MarcoFalke)\n+- #16299 bench: Move generated data to a dedicated translation unit (promag)\n+- #16329 Add tests for getblockchaininfo.softforks (MarcoFalke)\n+- #15687 tool wallet test coverage for unexpected writes to wallet (jonatack)\n+- #16267 bench: Benchmark blocktojson (fanatid)\n+- #14505 Add linter to make sure single parameter constructors are marked explicit (practicalswift)\n+- #16338 Disable other targets when enable-fuzz is set (qmma70)\n+- #16334 rpc_users: Also test rpcauth.py with password (dongcarl)\n+- #15282 Replace hard-coded hex tx with class in test framework (stevenroose)\n+- #16390 Add --filter option to test_runner.py (promag)\n+- #15891 Require standard txs in regtest by default (MarcoFalke)\n+- #16374 Enable passing wildcard test names to test runner from root (jonatack)\n+- #16420 Fix race condition in wallet_encryption test (jonasschnelli)\n+- #16422 remove redundant setup in addrman_tests (zenosage)\n+- #16438 travis: Print memory and number of cpus (MarcoFalke)\n+- #16445 Skip flaky p2p_invalid_messages test on macOS (fjahr)\n+- #16459 Fix race condition in example_test.py (sdaftuar)\n+- #16464 Ensure we don't generate a too-big block in p2sh sigops test (sdaftuar)\n+- #16491 fix deprecated log.warn in feature_dbcrash test (jonatack)\n+- #15134 Switch one of the Travis jobs to an unsigned char environment (-funsigned-char) (practicalswift)\n+- #16505 Changes verbosity of msbuild from quiet to normal in the appveyor script (sipsorcery)\n+- #16293 Make test cases separate functions (MarcoFalke)\n+- #16470 Fail early on disconnect in mininode.wait_for_* (MarcoFalke)\n+- #16277 Suppress output in test_bitcoin for expected errors (gertjaap)\n+- #16493 Fix test failures (MarcoFalke)\n+- #16538 Add missing sync_blocks to feature_pruning (MarcoFalke)\n+- #16509 Adapt test framework for chains other than \"regtest\" (MarcoFalke)\n+- #16363 Add test for BIP30 duplicate tx (MarcoFalke)\n+- #16535 Explain why -whitelist is used in feature_fee_estimation (MarcoFalke)\n+- #16554 only include and use OpenSSL where it's actually needed (BIP70) (fanquake)\n+- #16598 Remove confusing hash256 function in util (elichai)\n+- #16595 travis: Use extended 90 minute timeout when available (MarcoFalke)\n+- #16563 Add unit test for AddTimeData (mzumsande)\n+- #16561 Use colors and dots in test_runner.py output only if standard output is a terminal (practicalswift)\n+- #16465 Test p2sh-witness and bech32 in wallet_import_rescan (MarcoFalke)\n+- #16582 Rework ci (Use travis only as fallback env) (MarcoFalke)\n+- #16633 travis: Fix test_runner.py timeouts (MarcoFalke)\n+- #16646 Run tests with UPnP disabled (fanquake)\n+- #16623 ci: Add environment files for all settings (MarcoFalke)\n+- #16656 fix rpc_setban.py race (jonasschnelli)\n+- #16570 Make descriptor tests deterministic (davereikher)\n+- #16404 Test ZMQ notification after chain reorg (promag)\n+- #16726 Avoid common Python default parameter gotcha when mutable dict/list:s are used as default parameter values (practicalswift)\n+- #16739 ci: Pass down $makejobs to test_runner.py, other improvements (MarcoFalke)\n+- #16767 Check for codespell in lint-spelling.sh (kristapsk)\n+- #16768 Make lint-includes.sh work from any directory (kristapsk)\n+- #15257 Scripts and tools: Bump flake8 to 3.7.8 (Empact)\n+- #16804 Remove unused try-block in assert_debug_log (MarcoFalke)\n+- #16850 `servicesnames` field in `getpeerinfo` and `getnetworkinfo` (darosior)\n+- #16551 Test that low difficulty chain fork is rejected (MarcoFalke)\n+- #16737 Establish only one connection between nodes in rpc_invalidateblock (MarcoFalke)\n+- #16845 Add notes on how to generate data/wallets/high_minversion (MarcoFalke)\n+- #16888 Bump timeouts in slow running tests (MarcoFalke)\n+- #16864 Add python bech32 impl round-trip test (instagibbs)\n+- #16865 add some unit tests for merkle.cpp (soroosh-sdi)\n+- #14696 Add explicit references to related CVE's in p2p_invalid_block test (lucash-dev)\n+- #16907 lint: Add DisabledOpcodeTemplates to whitelist (MarcoFalke)\n+- #16898 Remove connect_nodes_bi (MarcoFalke)\n+- #16917 Move common function assert_approx() into util.py (fridokus)\n+- #16921 Add information on how to add Vulture suppressions (practicalswift)\n+- #16920 Fix extra_args in wallet_import_rescan.py (MarcoFalke)\n+- #16918 Make PORT_MIN in test runner configurable (MarcoFalke)\n+- #16941 travis: Disable feature_block in tsan run due to oom (MarcoFalke)\n+- #16929 follow-up to rpc: default maxfeerate value as BTC/kB (jonatack)\n+- #16959 ci: Set $host before setting fallback values (MarcoFalke)\n+- #16961 Remove python dead code linter (laanwj)\n+- #16931 add unittests for CheckProofOfWork (soroosh-sdi)\n+- #16991 Fix service flag comparison check in rpc_net test (luke-jr) (laanwj)\n+- #16987 Correct docstring param name (jbampton)\n+- #17015 Explain QT_QPA_PLATFORM for gui tests (MarcoFalke)\n+- #17006 Enable UBSan for Travis fuzzing job (practicalswift)\n+- #17086 Fix fs_tests for unknown locales (carnhofdaki)\n+- #15903 appveyor: Write @PACKAGE_NAME@ to config (MarcoFalke)\n+- #16742 test: add executable flag for wallet_watchonly.py (theStack)\n+- #16740 qa: Relax so that the subscriber is ready before publishing zmq messages (#16740)\n+\n+### Miscellaneous\n+- #15335 Fix lack of warning of unrecognized section names (AkioNak)\n+- #15528 contrib: Bump gitian descriptors for 0.19 (MarcoFalke)\n+- #15609 scripts and tools: Set 'distro' explicitly (hebasto)\n+- #15519 Add Poly1305 implementation (jonasschnelli)\n+- #15643 contrib: Gh-merge: include acks in merge commit (MarcoFalke)\n+- #15838 scripts and tools: Fetch missing review comments in github-merge.py (nkostoulas)\n+- #15920 lint: Check that all wallet args are hidden (MarcoFalke)\n+- #15849 Thread names in logs and deadlock debug tools (jamesob)\n+- #15650 Handle the result of posix_fallocate system call (lucayepa)\n+- #15766 scripts and tools: Upgrade gitian image before signing (hebasto)\n+- #15512 Add ChaCha20 encryption option (XOR) (jonasschnelli)\n+- #15968 Fix portability issue with pthreads (grim-trigger)\n+- #15970 Utils and libraries: fix static_assert for macro HAVE_THREAD_LOCAL (orientye)\n+- #15863 scripts and tools: Ensure repos are up-to-date in gitian-build.py (hebasto)\n+- #15224 Add RNG strengthening (10ms once every minute) (sipa)\n+- #15840 Contrib scripts: Filter IPv6 by ASN (abitfan)\n+- #13998 Scripts and tools: gitian-build.py improvements and corrections (hebasto)\n+- #15236 scripts and tools: Make --setup command independent (hebasto)\n+- #16114 contrib: Add curl as a required program in gitian-build.py (fanquake)\n+- #16046 util: Add type safe gettime (MarcoFalke)\n+- #15703 Update secp256k1 subtree to latest upstream (sipa)\n+- #16086 contrib: Use newer config.guess & config.sub in install_db4.sh (fanquake)\n+- #16130 Don't GPG sign intermediate commits with github-merge tool (stevenroose)\n+- #16162 scripts: Add key for michael ford (fanquake) to trusted keys list (fanquake)\n+- #16201 devtools: Always use unabbreviated commit IDs in github-merge.py (laanwj)\n+- #16112 util: Log early messages (MarcoFalke)\n+- #16223 devtools: Fetch and display ACKs at sign-off time in github-merge (laanwj)\n+- #16300 util: Explain why the path is cached (MarcoFalke)\n+- #16314 scripts and tools: Update copyright_header.py script (hebasto)\n+- #16158 Fix logic of memory_cleanse() on MSVC and clean up docs (real-or-random)\n+- #14734 fix an undefined behavior in uint::SetHex (kazcw)\n+- #16327 scripts and tools: Update ShellCheck linter (hebasto)\n+- #15277 contrib: Enable building in guix containers (dongcarl)\n+- #16362 Add bilingual_str type (hebasto)\n+- #16481 logs: add missing space (harding)\n+- #16581 sipsorcery gitian key (sipsorcery)\n+- #16566 util: Refactor upper/lowercase functions (kallewoof)\n+- #16620 util: Move resolveerrmsg to util/error (MarcoFalke)\n+- #16625 scripts: Remove github-merge.py (fanquake)\n+- #15864 Fix datadir handling (hebasto)\n+- #16670 util: Add join helper to join a list of strings (MarcoFalke)\n+- #16665 scripts: Move update-translations.py to maintainer-tools repo (fanquake)\n+- #16730 Support serialization of `std::vector<bool>` (sipa)\n+- #16556 Fix systemd service file configuration directory setup (setpill)\n+- #15615 Add log output during initial header sync (jonasschnelli)\n+- #16774 Avoid unnecessary \"Synchronizing blockheaders\" log messages (jonasschnelli)\n+- #16489 log: harmonize bitcoind logging (jonatack)\n+- #16577 util: Cbufferedfile fixes and unit test (LarryRuane)\n+- #16984 util: Make thread names shorter (hebasto)\n+- #17038 Don't rename main thread at process level (laanwj)\n+- #17184 util: Filter out macos process serial number (hebasto)\n+- #17095 util: Filter control characters out of log messages (laanwj)\n+- #17085 init: Change fallback locale to C.UTF-8 (laanwj)\n+- #16957 9% less memory: make SaltedOutpointHasher noexcept (martinus)\n+- #17449 fix uninitialized variable nMinerConfirmationWindow (bitcoinVBR)\n+\n+### Documentation\n+- #15514 Update Transifex links (fanquake)\n+- #15513 add \"sections\" info to example bitcoin.conf (fanquake)\n+- #15530 Move wallet lock annotations to header (MarcoFalke)\n+- #15562 remove duplicate clone step in build-windows.md (fanquake)\n+- #15565 remove release note fragments (fanquake)\n+- #15444 Additional productivity tips (Sjors)\n+- #15577 Enable TLS in link to chris.beams.io (JeremyRand)\n+- #15604 release note for disabling reject messages by default (jnewbery)\n+- #15611 Add Gitian key for droark (droark)\n+- #15626 Update ACK description in CONTRIBUTING.md (jonatack)\n+- #15603 Add more tips to productivity.md (gwillen)\n+- #15683 Comment for seemingly duplicate LIBBITCOIN_SERVER (Bushstar)\n+- #15685 rpc-mining: Clarify error messages (MarcoFalke)\n+- #15760 Clarify sendrawtransaction::maxfeerate==0 help (MarcoFalke)\n+- #15659 fix findFork comment (r8921039)\n+- #15718 Improve netaddress comments (dongcarl)\n+- #15833 remove out-of-date comment on pay-to-witness support (r8921039)\n+- #15821 Remove upgrade note in release notes from EOL versions (MarcoFalke)\n+- #15267 explain AcceptToMemoryPoolWorker's coins_to_uncache (jamesob)\n+- #15887 Align code example style with clang-format (hebasto)\n+- #15877 Fix -dustrelayfee= argument docs grammar (keepkeyjon)\n+- #15908 Align MSVC build options with Linux build ones (hebasto)\n+- #15941 Add historical release notes for 0.18.0 (laanwj)\n+- #15794 Clarify PR guidelines w/re documentation (dongcarl)\n+- #15607 Release process updates (jonatack)\n+- #14364 Clarify -blocksdir usage (sangaman)\n+- #15777 Add doxygen comments for keypool classes (jnewbery)\n+- #15820 Add productivity notes for dummy rebases (dongcarl)\n+- #15922 Explain how to pass in non-fundamental types into functions (MarcoFalke)\n+- #16080 build/doc: update bitcoin_config.h packages, release process (jonatack)\n+- #16047 analyzepsbt description in doc/psbt.md (jonatack)\n+- #16039 add release note for 14954 (fanquake)\n+- #16139 Add riscv64 to outputs list in release-process.md (JeremyRand)\n+- #16140 create security policy (narula)\n+- #16164 update release process for SECURITY.md (jonatack)\n+- #16213 Remove explicit mention of versions from SECURITY.md (MarcoFalke)\n+- #16186 doc/lint: Fix spelling errors identified by codespell 1.15.0 (Empact)\n+- #16149 Rework section on ACK in CONTRIBUTING.md (MarcoFalke)\n+- #16196 Add release notes for 14897 & 15834 (MarcoFalke)\n+- #16241 add rapidcheck to vcpkg install list (fanquake)\n+- #16243 Remove travis badge from readme (MarcoFalke)\n+- #16256 remove orphaned header in developer notes (jonatack)\n+- #15964 Improve build-osx document formatting (giulio92)\n+- #16313 Fix broken link in doc/build-osx.md (jonatack)\n+- #16330 Use placeholder instead of key expiration date (hebasto)\n+- #16339 add reduce-memory.md (fanquake)\n+- #16347 Include static members in Doxygen (dongcarl)\n+- #15824 Improve netbase comments (dongcarl)\n+- #16430 Update bips 35, 37 and 111 status (MarcoFalke)\n+- #16455 Remove downgrading warning in release notes, per 0.18 branch (MarcoFalke)\n+- #16484 update labels in CONTRIBUTING.md (MarcoFalke)\n+- #16483 update Python command in msvc readme (sipsorcery)\n+- #16504 Add release note for the deprecated totalFee option of bumpfee (promag)\n+- #16448 add note on precedence of options in bitcoin.conf (fanquake)\n+- #16536 Update and extend benchmarking.md (ariard)\n+- #16530 Fix grammar and punctuation in developer notes (Tech1k)\n+- #16574 Add historical release notes for 0.18.1 (laanwj)\n+- #16585 Update Markdown syntax for bdb packages (emilengler)\n+- #16586 Mention other ways to conserve memory on compilation (MarcoFalke)\n+- #16605 Add missing contributor to 0.18.1 release notes (meshcollider)\n+- #16615 Fix typos in COPYRIGHT (gapeman)\n+- #16626 Fix spelling error chache -> cache (nilswloewen)\n+- #16587 Improve versionbits.h documentation (ariard)\n+- #16643 Add ZMQ dependencies to the Fedora build instructions (hebasto)\n+- #16634 Refer in rpcbind doc to the manpage (MarcoFalke)\n+- #16555 mention whitelist is inbound, and applies to blocksonly (Sjors)\n+- #16645 initial RapidCheck property-based testing documentation (jonatack)\n+- #16691 improve depends prefix documentation (fanquake)\n+- #16629 Add documentation for the new whitelist permissions (NicolasDorier)\n+- #16723 Update labels in CONTRIBUTING.md (hebasto)\n+- #16461 Tidy up shadowing section (promag)\n+- #16621 add default bitcoin.conf locations (GChuf)\n+- #16752 Delete stale URL in test README (michaelfolkson)\n+- #14862 Declare BLOCK_VALID_HEADER reserved (MarcoFalke)\n+- #16806 Add issue templates for bug and feature request (MarcoFalke)\n+- #16857 Elaborate need to re-login on Debian-based after usermod for Tor group (clashicly)\n+- #16863 Add a missing closing parenthesis in the bitcoin-wallet's help (darosior)\n+- #16757 CChainState return values (MarcoFalke)\n+- #16847 add comments clarifying how local services are advertised (jamesob)\n+- #16812 Fix whitespace errs in .md files, bitcoin.conf, and Info.plist.in (ch4ot1c)\n+- #16885 Update tx-size-small comment with relevant CVE disclosure (instagibbs)\n+- #16900 Fix doxygen comment for SignTransaction in rpc/rawtransaction_util (MarcoFalke)\n+- #16914 Update homebrew instruction for doxygen (Sjors)\n+- #16912 Remove Doxygen intro from src/bitcoind.cpp (ch4ot1c)\n+- #16960 replace outdated OpenSSL comment in test README (fanquake)\n+- #16968 Remove MSVC update step from translation process (laanwj)\n+- #16953 Improve test READMEs (fjahr)\n+- #16962 Put PR template in comments (laanwj)\n+- #16397 Clarify includeWatching for fundrawtransaction (stevenroose)\n+- #15459 add how to calculate blockchain and chainstate size variables to release process (marcoagner)\n+- #16997 Update bips.md for 0.19 (laanwj)\n+- #17001 Remove mention of renamed mapBlocksUnlinked (MarcoFalke)\n+- #17014 Consolidate release notes before 0.19.0 (move-only) (MarcoFalke)\n+- #17111 update bips.md with buried BIP9 deployments (MarcoFalke)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 251\n+- Aaron Clauson\n+- Akio Nakamura\n+- Alistair Mann\n+- Amiti Uttarwar\n+- Andrew Chow\n+- andrewtoth\n+- Anthony Towns\n+- Antoine Riard\n+- Aseem Sood\n+- Ben Carman\n+- Ben Woosley\n+- bpay\n+- Carl Dong\n+- Carnhof Daki\n+- Chris Capobianco\n+- Chris Moore\n+- Chuf\n+- clashic\n+- clashicly\n+- Cory Fields\n+- Daki Carnhof\n+- Dan Gershony\n+- Daniel Edgecumbe\n+- Daniel Kraft\n+- Daniel McNally\n+- darosior\n+- David A. Harding\n+- David Reikher\n+- Douglas Roark\n+- Elichai Turkel\n+- Emil\n+- Emil Engler\n+- ezegom\n+- Fabian Jahr\n+- fanquake\n+- Felix Weis\n+- Ferdinando M. Ametrano\n+- fridokus\n+- gapeman\n+- GChuf\n+- Gert-Jaap Glasbergen\n+- Giulio Lombardo\n+- Glenn Willen\n+- Graham Krizek\n+- Gregory Sanders\n+- grim-trigger\n+- gwillen\n+- Hennadii Stepanov\n+- Jack Mallers\n+- James Hilliard\n+- James O'Beirne\n+- Jan Beich\n+- Jeremy Rubin\n+- JeremyRand\n+- Jim Posen\n+- John Bampton\n+- John Newbery\n+- Jon Atack\n+- Jon Layton\n+- Jonas Schnelli\n+- Jonathan \"Duke\" Leto\n+- Jo\u00e3o Barbosa\n+- Joonmo Yang\n+- Jordan Baczuk\n+- Jorge Tim\u00f3n\n+- Josu Go\u00f1i\n+- Julian Fleischer\n+- Karl-Johan Alm\n+- Kaz Wesley\n+- keepkeyjon\n+- Kirill Fomichev\n+- Kristaps Kaupe\n+- Kristian Kramer\n+- Larry Ruane\n+- Lenny Maiorani\n+- LongShao007\n+- Luca Venturini\n+- lucash-dev\n+- Luke Dashjr\n+- marcoagner\n+- MarcoFalke\n+- marcuswin\n+- Martin Ankerl\n+- Martin Zumsande\n+- Matt Corallo\n+- MeshCollider\n+- Michael Folkson\n+- Miguel Herranz\n+- Nathan Marley\n+- Neha Narula\n+- nicolas.dorier\n+- Nils Loewen\n+- nkostoulas\n+- NullFunctor\n+- orient\n+- Patrick Strateman\n+- Peter Bushnell\n+- Peter Wagner\n+- Pieter Wuille\n+- practicalswift\n+- qmma\n+- r8921039\n+- RJ Rybarczyk\n+- Russell Yanofsky\n+- Samuel Dobson\n+- Sebastian Falbesoner\n+- setpill\n+- shannon1916\n+- Sjors Provoost\n+- soroosh-sdi\n+- Steven Roose\n+- Suhas Daftuar\n+- tecnovert\n+- THETCR\n+- Tim Ruffing\n+- Tobias Kaderle\n+- Torkel Rogstad\n+- Ulrich Kempken\n+- whythat\n+- William Casarin\n+- Wladimir J. van der Laan\n+- zenosage\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      },
      {
        "sha": "086491e92dea86159787b214acf16e0158a400f5",
        "filename": "doc/release-notes/release-notes-0.19.0.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-notes/release-notes-0.19.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-notes/release-notes-0.19.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.19.0.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,6 @@\n+0.19.0 note\n+-----------\n+\n+Due to a last-minute issue (#17449), 0.19.0, although it was tagged, was never released.\n+\n+See the release notes for 0.19.0.1 instead."
      },
      {
        "sha": "5746bebb0d2cd67cce4e1f11d0ff3b82a52e37d1",
        "filename": "doc/release-notes/release-notes-0.19.1.md",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-notes/release-notes-0.19.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-notes/release-notes-0.19.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.19.1.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,115 @@\n+0.19.1 Release Notes\n+===============================\n+\n+Bitcoin Core version 0.19.1 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.19.1/>\n+\n+This minor release includes various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the datadir needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems using\n+the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n+to use Bitcoin Core on unsupported systems.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+as frequently tested on them.\n+\n+From Bitcoin Core 0.17.0 onwards, macOS versions earlier than 10.10 are no\n+longer supported, as Bitcoin Core is now built using Qt 5.9.x which requires\n+macOS 10.10+. Additionally, Bitcoin Core does not yet change appearance when\n+macOS \"dark mode\" is activated.\n+\n+In addition to previously supported CPU platforms, this release's pre-compiled\n+distribution provides binaries for the RISC-V platform.\n+\n+0.19.1 change log\n+=================\n+\n+### Wallet\n+- #17643 Fix origfee return for bumpfee with feerate arg (instagibbs)\n+- #16963 Fix `unique_ptr` usage in boost::signals2 (promag)\n+- #17258 Fix issue with conflicted mempool tx in listsinceblock (adamjonas, mchrostowski)\n+- #17924 Bug: IsUsedDestination shouldn't use key id as script id for ScriptHash (instagibbs)\n+- #17621 IsUsedDestination should count any known single-key address (instagibbs)\n+- #17843 Reset reused transactions cache (fjahr)\n+\n+### RPC and other APIs\n+- #17687 cli: Fix fatal leveldb error when specifying -blockfilterindex=basic twice (brakmic)\n+- #17728 require second argument only for scantxoutset start action (achow101)\n+- #17445 zmq: Fix due to invalid argument and multiple notifiers (promag)\n+- #17524 psbt: handle unspendable psbts (achow101)\n+- #17156 psbt: check that various indexes and amounts are within bounds (achow101)\n+\n+### GUI\n+- #17427 Fix missing qRegisterMetaType for `size_t` (hebasto)\n+- #17695 disable File-\\>CreateWallet during startup (fanquake)\n+- #17634 Fix comparison function signature (hebasto)\n+- #18062 Fix unintialized WalletView::progressDialog (promag)\n+\n+### Tests and QA\n+- #17416 Appveyor improvement - text file for vcpkg package list (sipsorcery)\n+- #17488 fix \"bitcoind already running\" warnings on macOS (fanquake)\n+- #17980 add missing #include to fix compiler errors (kallewoof)\n+\n+### Platform support\n+- #17736 Update msvc build for Visual Studio 2019 v16.4 (sipsorcery)\n+- #17364 Updates to appveyor config for VS2019 and Qt5.9.8 + msvc project fixes (sipsorcery)\n+- #17887 bug-fix macos: give free bytes to `F_PREALLOCATE` (kallewoof)\n+\n+### Miscellaneous\n+- #17897 init: Stop indexes on shutdown after ChainStateFlushed callback (jimpo)\n+- #17450 util: Add missing headers to util/fees.cpp (hebasto)\n+- #17654 Unbreak build with Boost 1.72.0 (jbeich)\n+- #17857 scripts: Fix symbol-check & security-check argument passing (fanquake)\n+- #17762 Log to net category for exceptions in ProcessMessages (laanwj)\n+- #18100 Update univalue subtree (MarcoFalke)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Aaron Clauson\n+- Adam Jonas\n+- Andrew Chow\n+- Fabian Jahr\n+- fanquake\n+- Gregory Sanders\n+- Harris\n+- Hennadii Stepanov\n+- Jan Beich\n+- Jim Posen\n+- Jo\u00e3o Barbosa\n+- Karl-Johan Alm\n+- Luke Dashjr\n+- MarcoFalke\n+- Michael Chrostowski\n+- Russell Yanofsky\n+- Wladimir J. van der Laan\n+\n+As well as to everyone that helped with translations on\n+[Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      },
      {
        "sha": "a61b67c35f07deb7f6c648544b03939de81b40ef",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 43,
        "deletions": 24,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -11,22 +11,12 @@ Release Process\n \n ### Before every major and minor release\n \n-* Update [bips.md](bips.md) to account for changes since the last release.\n+* Update [bips.md](bips.md) to account for changes since the last release (don't forget to bump the version number on the first line).\n * Update version in `configure.ac` (don't forget to set `CLIENT_VERSION_RC` to `0`).\n * Write release notes (see \"Write the release notes\" below).\n-* Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n-* Update `src/chainparams.cpp` defaultAssumeValid with information from the getblockhash rpc.\n-  - The selected value must not be orphaned so it may be useful to set the value two blocks back from the tip.\n-  - Testnet should be set some tens of thousands back from the tip due to reorgs there.\n-  - This update should be reviewed with a reindex-chainstate with assumevalid=0 to catch any defect\n-     that causes rejection of blocks in the past history.\n \n ### Before every major release\n \n-* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/bitcoin/bitcoin/pull/7415) for an example.\n-* Update [`src/chainparams.cpp`](/src/chainparams.cpp) m_assumed_blockchain_size and m_assumed_chain_state_size with the current size plus some overhead.\n-* Update `src/chainparams.cpp` chainTxData with statistics about the transaction count and rate. Use the output of the RPC `getchaintxstats`, see\n-  [this pull request](https://github.com/bitcoin/bitcoin/pull/12270) for an example. Reviewers can verify the results by running `getchaintxstats <window_block_count> <window_last_block_hash>` with the `window_block_count` and `window_last_block_hash` from your output.\n * On both the master branch and the new release branch:\n   - update `CLIENT_VERSION_MINOR` in [`configure.ac`](../configure.ac)\n   - update `CLIENT_VERSION_MINOR`, `PACKAGE_VERSION`, and `PACKAGE_STRING` in [`build_msvc/bitcoin_config.h`](/build_msvc/bitcoin_config.h)\n@@ -36,6 +26,16 @@ Release Process\n \n #### Before branch-off\n \n+* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/bitcoin/bitcoin/pull/7415) for an example.\n+* Update [`src/chainparams.cpp`](/src/chainparams.cpp) m_assumed_blockchain_size and m_assumed_chain_state_size with the current size plus some overhead (see [this](#how-to-calculate-m_assumed_blockchain_size-and-m_assumed_chain_state_size) for information on how to calculate them).\n+* Update `src/chainparams.cpp` chainTxData with statistics about the transaction count and rate. Use the output of the RPC `getchaintxstats`, see\n+  [this pull request](https://github.com/bitcoin/bitcoin/pull/17002) for an example. Reviewers can verify the results by running `getchaintxstats <window_block_count> <window_last_block_hash>` with the `window_block_count` and `window_last_block_hash` from your output.\n+* Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n+* Update `src/chainparams.cpp` defaultAssumeValid with information from the getblockhash rpc.\n+  - The selected value must not be orphaned so it may be useful to set the value two blocks back from the tip.\n+  - Testnet should be set some tens of thousands back from the tip due to reorgs there.\n+  - This update should be reviewed with a reindex-chainstate with assumevalid=0 to catch any defect\n+     that causes rejection of blocks in the past history.\n - Clear the release notes and move them to the wiki (see \"Write the release notes\" below).\n \n #### After branch-off (on master)\n@@ -44,7 +44,8 @@ Release Process\n \n #### After branch-off (on the major release branch)\n \n-- Update the versions and the link to the release notes draft in `doc/release-notes.md`.\n+- Update the versions.\n+- Create a pinned meta-issue for testing the release candidate (see [this issue](https://github.com/bitcoin/bitcoin/issues/17079) for an example) and provide a link to it in the release announcements where useful.\n \n #### Before final release\n \n@@ -116,13 +117,11 @@ Ensure gitian-builder is up-to-date:\n \n     pushd ./gitian-builder\n     mkdir -p inputs\n-    wget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n-    echo 'a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911 inputs/osslsigncode-Backports-to-1.7.1.patch' | sha256sum -c\n-    wget -P inputs https://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n-    echo 'f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9 inputs/osslsigncode-1.7.1.tar.gz' | sha256sum -c\n+    wget -O inputs/osslsigncode-2.0.tar.gz https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz\n+    echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\n     popd\n \n-Create the macOS SDK tarball, see the [macOS build instructions](build-osx.md#deterministic-macos-dmg-notes) for details, and copy it into the inputs directory.\n+Create the macOS SDK tarball, see the [macdeploy instructions](/contrib/macdeploy/README.md#deterministic-macos-dmg-notes) for details, and copy it into the inputs directory.\n \n ### Optional: Seed the Gitian sources cache and offline git repositories\n \n@@ -220,7 +219,7 @@ Codesigner only: Commit the detached codesign payloads:\n     rm -rf *\n     tar xf signature-osx.tar.gz\n     tar xf signature-win.tar.gz\n-    git add -a\n+    git add -A\n     git commit -m \"point to ${VERSION}\"\n     git tag -s v${VERSION} HEAD\n     git push the current branch and new tag\n@@ -269,7 +268,6 @@ The list of files should be:\n ```\n bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz\n bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz\n-bitcoin-${VERSION}-i686-pc-linux-gnu.tar.gz\n bitcoin-${VERSION}-riscv64-linux-gnu.tar.gz\n bitcoin-${VERSION}-x86_64-linux-gnu.tar.gz\n bitcoin-${VERSION}-osx64.tar.gz\n@@ -317,7 +315,7 @@ bitcoin.org (see below for bitcoin.org update instructions).\n     instructions: https://github.com/bitcoin-dot-org/bitcoin.org/blob/master/docs/adding-events-release-notes-and-alerts.md#release-notes\n \n   - After the pull request is merged, the website will automatically show the newest version within 15 minutes, as well\n-    as update the OS download links. Ping @saivann/@harding (saivann/harding on Freenode) in case anything goes wrong\n+    as update the OS download links.\n \n - Update other repositories and websites for new version\n \n@@ -330,9 +328,12 @@ bitcoin.org (see below for bitcoin.org update instructions).\n \n   - Update packaging repo\n \n-      - Notify BlueMatt so that he can start building [the PPAs](https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin)\n+      - Push the flatpak to flathub, e.g. https://github.com/flathub/org.bitcoincore.bitcoin-qt/pull/2\n \n-      - Create a new branch for the major release \"0.xx\" (used to build the snap package)\n+      - Push the latest version to master (if applicable), e.g. https://github.com/bitcoin-core/packaging/pull/32\n+\n+      - Create a new branch for the major release \"0.xx\" from master (used to build the snap package) and request the\n+        track (if applicable), e.g. https://forum.snapcraft.io/t/track-request-for-bitcoin-core-snap/10112/7\n \n       - Notify MarcoFalke so that he can start building the snap package\n \n@@ -356,8 +357,6 @@ bitcoin.org (see below for bitcoin.org update instructions).\n \n       - Create a [new GitHub release](https://github.com/bitcoin/bitcoin/releases/new) with a link to the archived release notes\n \n-      - Create a pinned meta-issue for testing the release candidate (see [this issue](https://github.com/bitcoin/bitcoin/issues/15555) for an example) and provide a link to it in the release announcements where useful\n-\n - Announce the release:\n \n   - bitcoin-dev and bitcoin-core-dev mailing list\n@@ -369,3 +368,23 @@ bitcoin.org (see below for bitcoin.org update instructions).\n   - Optionally twitter, reddit /r/Bitcoin, ... but this will usually sort out itself\n \n   - Celebrate\n+\n+### Additional information\n+\n+#### How to calculate `m_assumed_blockchain_size` and `m_assumed_chain_state_size`\n+\n+Both variables are used as a guideline for how much space the user needs on their drive in total, not just strictly for the blockchain.\n+Note that all values should be taken from a **fully synced** node and have an overhead of 5-10% added on top of its base value.\n+\n+To calculate `m_assumed_blockchain_size`:\n+- For `mainnet` -> Take the size of the data directory, excluding `/regtest` and `/testnet3` directories.\n+- For `testnet` -> Take the size of the `/testnet3` directory.\n+\n+\n+To calculate `m_assumed_chain_state_size`:\n+- For `mainnet` -> Take the size of the `/chainstate` directory.\n+- For `testnet` -> Take the size of the `/testnet3/chainstate` directory.\n+\n+Notes:\n+- When taking the size for `m_assumed_blockchain_size`, there's no need to exclude the `/chainstate` directory since it's a guideline value and an overhead will be added anyway.\n+- The expected overhead for growth may change over time, so it may not be the same value as last release; pay attention to that when changing the variables."
      },
      {
        "sha": "2c54e32f8455a57928e20278abe5bdece76b7773",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -114,7 +114,10 @@ preconfigured and the creation of a hidden service is automatic. If permission p\n are seen with `-debug=tor` they can be resolved by adding both the user running Tor and\n the user running bitcoind to the same group and setting permissions appropriately. On\n Debian-based systems the user running bitcoind can be added to the debian-tor group,\n-which has the appropriate permissions.\n+which has the appropriate permissions. Before starting bitcoind you will need to re-login\n+to allow debian-tor group to be applied. Otherwise you will see the following notice: \"tor:\n+Authentication cookie /run/tor/control.authcookie could not be opened (check permissions)\"\n+on debug.log.\n \n An alternative authentication method is the use\n of the `-torpassword=password` option. The `password` is the clear text form that"
      },
      {
        "sha": "39f878cea3bc761da11c969d7874b04a2bf95b98",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -71,18 +71,12 @@ To assist in updating translations, a helper script is available in the [maintai\n 2. `git add` new translations from `src/qt/locale/`\n 3. Update `src/qt/bitcoin_locale.qrc` manually or via\n ```bash\n-git ls-files src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'\n+git ls-files src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/        <file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'\n ```\n-4. Update `src/Makefile.qt.include` manually or via\n+4. Update `src/Makefile.qt_locale.include` manually or via\n ```bash\n git ls-files src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'\n ```\n-5. Update `build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj` or via\n-```bash\n-git ls-files src/qt/locale/*ts|xargs -n1 basename |\n-  sed 's/@/%40/' |\n-  sed 's/\\(bitcoin_\\(.*\\)\\).ts/    <None Include=\"..\\\\..\\\\src\\\\qt\\\\locale\\\\\\1.ts\">\\n      <DeploymentContent>true<\\/DeploymentContent>\\n    <\\/None>/'\n-```\n \n **Do not directly download translations** one by one from the Transifex website, as we do a few post-processing steps before committing the translations.\n "
      },
      {
        "sha": "a309abd0cc53ad7dbfb4626e9a15405658d417a4",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -111,7 +111,9 @@ using other means such as firewalling.\n \n Note that when the block chain tip changes, a reorganisation may occur\n and just the tip will be notified. It is up to the subscriber to\n-retrieve the chain from the last known block to the new tip.\n+retrieve the chain from the last known block to the new tip. Also note\n+that no notification occurs if the tip was in the active chain - this\n+is the case after calling invalidateblock RPC.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type you are"
      },
      {
        "sha": "1ceab280bb114edd8e348dfa4821943f580e3805",
        "filename": "libbitcoinconsensus.pc.in",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/libbitcoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/libbitcoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libbitcoinconsensus.pc.in?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -8,4 +8,3 @@ Description: Library for the Bitcoin consensus protocol.\n Version: @PACKAGE_VERSION@\n Libs: -L${libdir} -lbitcoinconsensus\n Cflags: -I${includedir}\n-Requires.private: libcrypto"
      },
      {
        "sha": "96fb6658a01bb84ba743270c7d0886109c80bf38",
        "filename": "share/examples/bitcoin.conf",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/examples/bitcoin.conf?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,7 +1,7 @@\n ##\n ## bitcoin.conf configuration file. Lines beginning with # are comments.\n ##\n- \n+\n # Network-related settings:\n \n # Note that if you use testnet or regtest, particularly with the options\n@@ -97,7 +97,7 @@\n # rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n \n # How many seconds bitcoin will wait for a complete RPC HTTP request.\n-# after the HTTP connection is established. \n+# after the HTTP connection is established.\n #rpcclienttimeout=30\n \n # By default, only RPC connections from localhost are allowed.\n@@ -108,7 +108,7 @@\n # because the rpcpassword is transmitted over the network unencrypted.\n \n # server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n+# it is also read by bitcoind to determine if RPC should be enabled\n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24\n #rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n@@ -139,11 +139,11 @@\n # both prior transactions and several dozen future transactions.\n #keypool=100\n \n-# Enable pruning to reduce storage requirements by deleting old blocks. \n+# Enable pruning to reduce storage requirements by deleting old blocks.\n # This mode is incompatible with -txindex and -rescan.\n # 0 = default (no pruning).\n # 1 = allows manual pruning via RPC.\n-# >=550 = target to stay under in MiB. \n+# >=550 = target to stay under in MiB.\n #prune=550\n \n # User interface options"
      },
      {
        "sha": "81fa2ed5d0013a9fb9931ed8218e3db3650a58d5",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -18,13 +18,9 @@ else\n     exit 1\n fi\n \n-git_check_in_repo() {\n-    ! { git status --porcelain -uall --ignored \"$@\" 2>/dev/null || echo '??'; } | grep -q '?'\n-}\n-\n DESC=\"\"\n SUFFIX=\"\"\n-if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" ] && [ -e \"$(command -v git)\" ] && [ \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ] && git_check_in_repo share/genbuild.sh; then\n+if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" ] && [ -e \"$(command -v git)\" ] && [ \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ]; then\n     # clean 'dirty' status of touched files that haven't been modified\n     git diff >/dev/null 2>/dev/null\n "
      },
      {
        "sha": "3befba342540c2eef19fb73692bddf0031c066a4",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 4,
        "deletions": 41,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -3,7 +3,7 @@\n <plist version=\"0.9\">\n <dict>\n   <key>LSMinimumSystemVersion</key>\n-  <string>10.10.0</string>\n+  <string>10.12.0</string>\n \n   <key>LSArchitecturePriority</key>\n   <array>\n@@ -16,7 +16,7 @@\n   <key>CFBundlePackageType</key>\n   <string>APPL</string>\n \n-  <key>CFBundleGetInfoString</key>\n+  <key>NSHumanReadableCopyright</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@.@CLIENT_VERSION_BUILD@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ @COPYRIGHT_HOLDERS_FINAL@</string>\n \n   <key>CFBundleShortVersionString</key>\n@@ -30,7 +30,7 @@\n \n   <key>CFBundleExecutable</key>\n   <string>Bitcoin-Qt</string>\n-  \n+\n   <key>CFBundleName</key>\n   <string>Bitcoin-Qt</string>\n \n@@ -54,43 +54,6 @@\n     </dict>\n   </array>\n \n-  <key>UTExportedTypeDeclarations</key>\n-  <array>\n-    <dict>\n-      <key>UTTypeIdentifier</key>\n-      <string>org.bitcoin.paymentrequest</string>\n-      <key>UTTypeDescription</key>\n-      <string>Bitcoin payment request</string>\n-      <key>UTTypeConformsTo</key>\n-      <array>\n-        <string>public.data</string>\n-      </array>\n-      <key>UTTypeTagSpecification</key>\n-      <dict>\n-        <key>public.mime-type</key>\n-        <string>application/x-bitcoin-payment-request</string>\n-        <key>public.filename-extension</key>\n-        <array>\n-          <string>bitcoinpaymentrequest</string>\n-        </array>\n-      </dict>\n-    </dict>\n-  </array>\n-\n-  <key>CFBundleDocumentTypes</key>\n-  <array>\n-    <dict>\n-      <key>CFBundleTypeRole</key>\n-      <string>Editor</string>\n-      <key>LSItemContentTypes</key>\n-      <array>\n-        <string>org.bitcoin.paymentrequest</string>\n-      </array>\n-      <key>LSHandlerRank</key>\n-      <string>Owner</string>\n-    </dict>\n-  </array>\n-\n   <key>NSPrincipalClass</key>\n     <string>NSApplication</string>\n \n@@ -99,7 +62,7 @@\n \n   <key>NSRequiresAquaSystemAppearance</key>\n     <string>True</string>\n-  \n+\n   <key>LSApplicationCategoryType</key>\n     <string>public.app-category.finance</string>\n </dict>"
      },
      {
        "sha": "4efc4bd6f532d54c2494b1937d0ac2bf7dfdedb0",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2012-2018 The Bitcoin Core developers\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "5431909bb22d2c25b42f48ba90b2ab618a76e98f",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 11,
        "deletions": 15,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -1,7 +1,12 @@\n-Name \"@PACKAGE_NAME@ (@WINDOWS_BITS@-bit)\"\n+Name \"@PACKAGE_NAME@ (64-bit)\"\n \n RequestExecutionLevel highest\n SetCompressor /SOLID lzma\n+SetDateSave off\n+\n+# Uncomment these lines when investigating reproducibility errors\n+#SetCompress off\n+#SetDatablockOptimize off\n \n # General Symbol Definitions\n !define REGKEY \"SOFTWARE\\$(^Name)\"\n@@ -28,9 +33,7 @@ SetCompressor /SOLID lzma\n # Included files\n !include Sections.nsh\n !include MUI2.nsh\n-!if \"@WINDOWS_BITS@\" == \"64\"\n !include x64.nsh\n-!endif\n \n # Variables\n Var StartMenuGroup\n@@ -48,12 +51,7 @@ Var StartMenuGroup\n !insertmacro MUI_LANGUAGE English\n \n # Installer attributes\n-OutFile @abs_top_srcdir@/@PACKAGE_TARNAME@-@PACKAGE_VERSION@-win@WINDOWS_BITS@-setup.exe\n-!if \"@WINDOWS_BITS@\" == \"64\"\n InstallDir $PROGRAMFILES64\\Bitcoin\n-!else\n-InstallDir $PROGRAMFILES\\Bitcoin\n-!endif\n CRCCheck on\n XPStyle on\n BrandingText \" \"\n@@ -64,8 +62,8 @@ VIAddVersionKey ProductVersion \"@PACKAGE_VERSION@\"\n VIAddVersionKey CompanyName \"${COMPANY}\"\n VIAddVersionKey CompanyWebsite \"${URL}\"\n VIAddVersionKey FileVersion \"@PACKAGE_VERSION@\"\n-VIAddVersionKey FileDescription \"\"\n-VIAddVersionKey LegalCopyright \"\"\n+VIAddVersionKey FileDescription \"Installer for @PACKAGE_NAME@\"\n+VIAddVersionKey LegalCopyright \"Copyright (C) 2009-@COPYRIGHT_YEAR@ @COPYRIGHT_HOLDERS_FINAL@\"\n InstallDirRegKey HKCU \"${REGKEY}\" Path\n ShowUninstDetails show\n \n@@ -94,14 +92,14 @@ Section -post SEC0001\n     !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\n     CreateDirectory $SMPROGRAMS\\$StartMenuGroup\n     CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\" $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\" \"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" \"-testnet\" \"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" 1\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, 64-bit).lnk\" \"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" \"-testnet\" \"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" 1\n     CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\" $INSTDIR\\uninstall.exe\n     !insertmacro MUI_STARTMENU_WRITE_END\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayVersion \"@PACKAGE_VERSION@\"\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" Publisher \"${COMPANY}\"\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" URLInfoAbout \"${URL}\"\n-    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayIcon $INSTDIR\\uninstall.exe\n+    WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayIcon $INSTDIR\\bitcoin-qt.exe\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" UninstallString $INSTDIR\\uninstall.exe\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\n@@ -138,7 +136,7 @@ Section -un.post UNSEC0001\n     DeleteRegKey HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\"\n-    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\"\n+    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, 64-bit).lnk\"\n     Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\n     Delete /REBOOTOK $INSTDIR\\uninstall.exe\n     Delete /REBOOTOK $INSTDIR\\debug.log\n@@ -160,15 +158,13 @@ SectionEnd\n # Installer functions\n Function .onInit\n     InitPluginsDir\n-!if \"@WINDOWS_BITS@\" == \"64\"\n     ${If} ${RunningX64}\n       ; disable registry redirection (enable access to 64-bit portion of registry)\n       SetRegView 64\n     ${Else}\n       MessageBox MB_OK|MB_ICONSTOP \"Cannot install 64-bit version on a 32-bit system.\"\n       Abort\n     ${EndIf}\n-!endif\n FunctionEnd\n \n # Uninstaller functions"
      },
      {
        "sha": "aae039dd77f335b5f52da066e3ddee27a9b81ddb",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -5,6 +5,7 @@ AlignEscapedNewlinesLeft: true\n AlignTrailingComments: true\n AllowAllParametersOfDeclarationOnNextLine: false\n AllowShortBlocksOnASingleLine: false\n+AllowShortCaseLabelsOnASingleLine: true\n AllowShortFunctionsOnASingleLine: All\n AllowShortIfStatementsOnASingleLine: true\n AllowShortLoopsOnASingleLine: false"
      },
      {
        "sha": "627df97cad4c2087e2798963ef9d04abe8c5ce0c",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 52,
        "deletions": 23,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -19,7 +19,7 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n+BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n@@ -119,6 +119,7 @@ BITCOIN_CORE_H = \\\n   compat.h \\\n   compat/assumptions.h \\\n   compat/byteswap.h \\\n+  compat/cpuid.h \\\n   compat/endian.h \\\n   compat/sanity.h \\\n   compressor.h \\\n@@ -146,18 +147,23 @@ BITCOIN_CORE_H = \\\n   dbwrapper.h \\\n   limitedmap.h \\\n   logging.h \\\n+  logging/timer.h \\\n   memusage.h \\\n   merkleblock.h \\\n   miner.h \\\n   net.h \\\n   net_permissions.h \\\n   net_processing.h \\\n+  net_types.h \\\n   netaddress.h \\\n   netbase.h \\\n   netmessagemaker.h \\\n   node/coin.h \\\n+  node/coinstats.h \\\n+  node/context.h \\\n   node/psbt.h \\\n   node/transaction.h \\\n+  node/utxo_snapshot.h \\\n   noui.h \\\n   optional.h \\\n   outputtype.h \\\n@@ -170,8 +176,8 @@ BITCOIN_CORE_H = \\\n   protocol.h \\\n   psbt.h \\\n   random.h \\\n+  randomenv.h \\\n   reverse_iterator.h \\\n-  reverselock.h \\\n   rpc/blockchain.h \\\n   rpc/client.h \\\n   rpc/protocol.h \\\n@@ -203,20 +209,27 @@ BITCOIN_CORE_H = \\\n   txmempool.h \\\n   ui_interface.h \\\n   undo.h \\\n+  util/asmap.h \\\n   util/bip32.h \\\n   util/bytevectorhash.h \\\n+  util/check.h \\\n   util/error.h \\\n   util/fees.h \\\n+  util/golombrice.h \\\n+  util/spanparsing.h \\\n   util/system.h \\\n+  util/macros.h \\\n   util/memory.h \\\n+  util/message.h \\\n   util/moneystr.h \\\n   util/rbf.h \\\n+  util/settings.h \\\n   util/string.h \\\n   util/threadnames.h \\\n   util/time.h \\\n   util/translation.h \\\n   util/url.h \\\n-  util/validation.h \\\n+  util/vector.h \\\n   validation.h \\\n   validationinterface.h \\\n   versionbits.h \\\n@@ -229,8 +242,8 @@ BITCOIN_CORE_H = \\\n   wallet/fees.h \\\n   wallet/ismine.h \\\n   wallet/load.h \\\n-  wallet/psbtwallet.h \\\n   wallet/rpcwallet.h \\\n+  wallet/scriptpubkeyman.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n   wallet/wallettool.h \\\n@@ -278,6 +291,8 @@ libbitcoin_server_a_SOURCES = \\\n   net.cpp \\\n   net_processing.cpp \\\n   node/coin.cpp \\\n+  node/coinstats.cpp \\\n+  node/context.cpp \\\n   node/psbt.cpp \\\n   node/transaction.cpp \\\n   noui.cpp \\\n@@ -333,11 +348,10 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/db.cpp \\\n   wallet/feebumper.cpp \\\n   wallet/fees.cpp \\\n-  wallet/ismine.cpp \\\n   wallet/load.cpp \\\n-  wallet/psbtwallet.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n+  wallet/scriptpubkeyman.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n   wallet/walletutil.cpp \\\n@@ -482,32 +496,40 @@ libbitcoin_util_a_SOURCES = \\\n   support/lockedpool.cpp \\\n   chainparamsbase.cpp \\\n   clientversion.cpp \\\n+  compat/glibc_sanity_fdelt.cpp \\\n   compat/glibc_sanity.cpp \\\n   compat/glibcxx_sanity.cpp \\\n   compat/strnlen.cpp \\\n   fs.cpp \\\n   interfaces/handler.cpp \\\n   logging.cpp \\\n   random.cpp \\\n+  randomenv.cpp \\\n   rpc/request.cpp \\\n   support/cleanse.cpp \\\n   sync.cpp \\\n   threadinterrupt.cpp \\\n+  util/asmap.cpp \\\n   util/bip32.cpp \\\n   util/bytevectorhash.cpp \\\n   util/error.cpp \\\n   util/fees.cpp \\\n   util/system.cpp \\\n+  util/message.cpp \\\n   util/moneystr.cpp \\\n   util/rbf.cpp \\\n+  util/settings.cpp \\\n   util/threadnames.cpp \\\n+  util/spanparsing.cpp \\\n   util/strencodings.cpp \\\n   util/string.cpp \\\n   util/time.cpp \\\n-  util/url.cpp \\\n-  util/validation.cpp \\\n   $(BITCOIN_CORE_H)\n \n+if USE_LIBEVENT\n+libbitcoin_util_a_SOURCES += util/url.cpp\n+endif\n+\n if GLIBC_BACK_COMPAT\n libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\n AM_LDFLAGS += $(COMPAT_LDFLAGS)\n@@ -517,6 +539,8 @@ endif\n libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_cli_a_SOURCES = \\\n+  compat/stdin.h \\\n+  compat/stdin.cpp \\\n   rpc/client.cpp \\\n   $(BITCOIN_CORE_H)\n \n@@ -533,12 +557,9 @@ if TARGET_WINDOWS\n bitcoind_SOURCES += bitcoind-res.rc\n endif\n \n-# Libraries below may be listed more than once to resolve circular dependencies (see\n-# https://eli.thegreenplace.net/2013/07/09/library-order-in-static-linking#circular-dependency)\n bitcoind_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_WALLET) \\\n-  $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL) \\\n@@ -550,7 +571,7 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n@@ -568,7 +589,7 @@ bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+bitcoin_cli_LDADD += $(BOOST_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #\n@@ -589,7 +610,7 @@ bitcoin_tx_LDADD = \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+bitcoin_tx_LDADD += $(BOOST_LIBS)\n #\n \n # bitcoin-wallet binary #\n@@ -616,7 +637,7 @@ bitcoin_wallet_LDADD = \\\n   $(LIBSECP256K1) \\\n   $(LIBUNIVALUE)\n \n-bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(ZMQ_LIBS)\n+bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(ZMQ_LIBS)\n #\n \n # bitcoinconsensus library #\n@@ -681,27 +702,35 @@ clean-local:\n \t$(AM_V_GEN) $(WINDRES) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) -DWINDRES_PREPROC -i $< -o $@\n \n check-symbols: $(bin_PROGRAMS)\n+if TARGET_DARWIN\n+\t@echo \"Checking macOS dynamic libraries...\"\n+\t$(AM_V_at) OTOOL=$(OTOOL) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n+endif\n+\n+if TARGET_WINDOWS\n+\t@echo \"Checking Windows dynamic libraries...\"\n+\t$(AM_V_at) OBJDUMP=$(OBJDUMP) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n+endif\n+\n if GLIBC_BACK_COMPAT\n \t@echo \"Checking glibc back compat...\"\n-\t$(AM_V_at) READELF=$(READELF) CPPFILT=$(CPPFILT) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py < $(bin_PROGRAMS)\n+\t$(AM_V_at) READELF=$(READELF) CPPFILT=$(CPPFILT) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)\n endif\n \n check-security: $(bin_PROGRAMS)\n if HARDEN\n \t@echo \"Checking binary security...\"\n-\t$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) $(PYTHON) $(top_srcdir)/contrib/devtools/security-check.py < $(bin_PROGRAMS)\n-endif\n-\n-if ENABLE_BIP70\n-%.pb.cc %.pb.h: %.proto\n-\t@test -f $(PROTOC)\n-\t$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(<D) $<\n+\t$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) OTOOL=$(OTOOL) $(PYTHON) $(top_srcdir)/contrib/devtools/security-check.py $(bin_PROGRAMS)\n endif\n \n if EMBEDDED_LEVELDB\n+include Makefile.crc32c.include\n include Makefile.leveldb.include\n endif\n \n+include Makefile.test_util.include\n+include Makefile.test_fuzz.include\n+\n if ENABLE_TESTS\n include Makefile.test.include\n endif"
      },
      {
        "sha": "766c0fca546d323d7f7631228bff798c4bfedb76",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -12,6 +12,7 @@ GENERATED_BENCH_FILES = $(RAW_BENCH_FILES:.raw=.raw.h)\n \n bench_bench_bitcoin_SOURCES = \\\n   $(RAW_BENCH_FILES) \\\n+  bench/addrman.cpp \\\n   bench/bench_bitcoin.cpp \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n@@ -30,6 +31,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/gcs_filter.cpp \\\n   bench/merkle_root.cpp \\\n   bench/mempool_eviction.cpp \\\n+  bench/mempool_stress.cpp \\\n   bench/rpc_blockchain.cpp \\\n   bench/rpc_mempool.cpp \\\n   bench/util_time.cpp \\\n@@ -38,24 +40,20 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/bech32.cpp \\\n   bench/lockedpool.cpp \\\n   bench/poly1305.cpp \\\n-  bench/prevector.cpp \\\n-  test/setup_common.h \\\n-  test/setup_common.cpp \\\n-  test/util.h \\\n-  test/util.cpp\n+  bench/prevector.cpp\n \n nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_BENCH_FILES)\n \n-bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_WALLET) \\\n-  $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBTEST_UTIL) \\\n   $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) \\\n   $(LIBMEMENV) \\\n@@ -73,7 +71,7 @@ bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n bench_bench_bitcoin_SOURCES += bench/wallet_balance.cpp\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)"
      },
      {
        "sha": "802b3a2e4b8450d74215c7dd08cd079a9eb49adc",
        "filename": "src/Makefile.crc32c.include",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.crc32c.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.crc32c.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.crc32c.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,75 @@\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+LIBCRC32C_INT = crc32c/libcrc32c.a\n+LIBLEVELDB_SSE42_INT  = leveldb/libleveldb_sse42.a\n+\n+EXTRA_LIBRARIES += $(LIBCRC32C_INT)\n+\n+LIBCRC32C = $(LIBCRC32C_INT)\n+\n+CRC32C_CPPFLAGS_INT =\n+CRC32C_CPPFLAGS_INT += -I$(srcdir)/crc32c/include\n+CRC32C_CPPFLAGS_INT += -DHAVE_BUILTIN_PREFETCH=@HAVE_BUILTIN_PREFETCH@\n+CRC32C_CPPFLAGS_INT += -DHAVE_MM_PREFETCH=@HAVE_MM_PREFETCH@\n+CRC32C_CPPFLAGS_INT += -DHAVE_STRONG_GETAUXVAL=@HAVE_STRONG_GETAUXVAL@\n+CRC32C_CPPFLAGS_INT += -DHAVE_WEAK_GETAUXVAL=@HAVE_WEAK_GETAUXVAL@\n+CRC32C_CPPFLAGS_INT += -DCRC32C_TESTS_BUILT_WITH_GLOG=0\n+\n+if ENABLE_SSE42\n+CRC32C_CPPFLAGS_INT += -DHAVE_SSE42=1\n+else\n+CRC32C_CPPFLAGS_INT += -DHAVE_SSE42=0\n+endif\n+\n+if ENABLE_ARM_CRC\n+CRC32C_CPPFLAGS_INT += -DHAVE_ARM64_CRC32C=1\n+else\n+CRC32C_CPPFLAGS_INT += -DHAVE_ARM64_CRC32C=0\n+endif\n+\n+if WORDS_BIGENDIAN\n+CRC32C_CPPFLAGS_INT += -DBYTE_ORDER_BIG_ENDIAN=1\n+else\n+CRC32C_CPPFLAGS_INT += -DBYTE_ORDER_BIG_ENDIAN=0\n+endif\n+\n+crc32c_libcrc32c_a_CPPFLAGS = $(AM_CPPFLAGS) $(CRC32C_CPPFLAGS_INT) $(CRC32C_CPPFLAGS)\n+crc32c_libcrc32c_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+\n+crc32c_libcrc32c_a_SOURCES =\n+crc32c_libcrc32c_a_SOURCES += crc32c/include/crc32c/crc32c.h\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_arm64.h\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_arm64_linux_check.h\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_internal.h\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_prefetch.h\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_read_le.h\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_round_up.h\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_sse42_check.h\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_sse42.h\n+\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c.cc\n+crc32c_libcrc32c_a_SOURCES += crc32c/src/crc32c_portable.cc\n+\n+if ENABLE_SSE42\n+LIBCRC32C_SSE42_INT = crc32c/libcrc32c_sse42.a\n+EXTRA_LIBRARIES += $(LIBCRC32C_SSE42_INT)\n+LIBCRC32C += $(LIBCRC32C_SSE42_INT)\n+\n+crc32c_libcrc32c_sse42_a_CPPFLAGS = $(crc32c_libcrc32c_a_CPPFLAGS)\n+crc32c_libcrc32c_sse42_a_CXXFLAGS = $(crc32c_libcrc32c_a_CXXFLAGS) $(SSE42_CXXFLAGS)\n+\n+crc32c_libcrc32c_sse42_a_SOURCES = crc32c/src/crc32c_sse42.cc\n+endif\n+\n+if ENABLE_ARM_CRC\n+LIBCRC32C_ARM_CRC_INT = crc32c/libcrc32c_arm_crc.a\n+EXTRA_LIBRARIES += $(LIBCRC32C_ARM_CRC_INT)\n+LIBCRC32C += $(LIBCRC32C_ARM_CRC_INT)\n+\n+crc32c_libcrc32c_arm_crc_a_CPPFLAGS = $(crc32c_libcrc32c_a_CPPFLAGS)\n+crc32c_libcrc32c_arm_crc_a_CXXFLAGS = $(crc32c_libcrc32c_a_CXXFLAGS) $(ARM_CRC_CXXFLAGS)\n+\n+crc32c_libcrc32c_arm_crc_a_SOURCES = crc32c/src/crc32c_arm64.cc\n+endif"
      },
      {
        "sha": "79ff72ca8dfd226c4bfa26fceff53cc50951acae",
        "filename": "src/Makefile.leveldb.include",
        "status": "modified",
        "additions": 21,
        "deletions": 25,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -4,41 +4,43 @@\n \n LIBLEVELDB_INT = leveldb/libleveldb.a\n LIBMEMENV_INT  = leveldb/libmemenv.a\n-LIBLEVELDB_SSE42_INT  = leveldb/libleveldb_sse42.a\n \n EXTRA_LIBRARIES += $(LIBLEVELDB_INT)\n EXTRA_LIBRARIES += $(LIBMEMENV_INT)\n-EXTRA_LIBRARIES += $(LIBLEVELDB_SSE42_INT)\n \n-LIBLEVELDB += $(LIBLEVELDB_INT)\n+LIBLEVELDB += $(LIBLEVELDB_INT) $(LIBCRC32C)\n LIBMEMENV += $(LIBMEMENV_INT)\n-LIBLEVELDB_SSE42 = $(LIBLEVELDB_SSE42_INT)\n \n LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/include\n LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/helpers/memenv\n \n LEVELDB_CPPFLAGS_INT =\n LEVELDB_CPPFLAGS_INT += -I$(srcdir)/leveldb\n-LEVELDB_CPPFLAGS_INT += $(LEVELDB_TARGET_FLAGS)\n-LEVELDB_CPPFLAGS_INT += -DLEVELDB_ATOMIC_PRESENT\n+LEVELDB_CPPFLAGS_INT += -I$(srcdir)/crc32c/include\n LEVELDB_CPPFLAGS_INT += -D__STDC_LIMIT_MACROS\n+LEVELDB_CPPFLAGS_INT += -DHAVE_SNAPPY=0 -DHAVE_CRC32C=1\n+LEVELDB_CPPFLAGS_INT += -DHAVE_FDATASYNC=@HAVE_FDATASYNC@\n+LEVELDB_CPPFLAGS_INT += -DHAVE_FULLFSYNC=@HAVE_FULLFSYNC@\n+LEVELDB_CPPFLAGS_INT += -DHAVE_O_CLOEXEC=@HAVE_O_CLOEXEC@\n+\n+if WORDS_BIGENDIAN\n+LEVELDB_CPPFLAGS_INT += -DLEVELDB_IS_BIG_ENDIAN=1\n+else\n+LEVELDB_CPPFLAGS_INT += -DLEVELDB_IS_BIG_ENDIAN=0\n+endif\n \n if TARGET_WINDOWS\n-LEVELDB_CPPFLAGS_INT += -DLEVELDB_PLATFORM_WINDOWS -D__USE_MINGW_ANSI_STDIO=1\n+LEVELDB_CPPFLAGS_INT += -DLEVELDB_PLATFORM_WINDOWS -D_UNICODE -DUNICODE -D__USE_MINGW_ANSI_STDIO=1\n else\n LEVELDB_CPPFLAGS_INT += -DLEVELDB_PLATFORM_POSIX\n endif\n \n leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)\n-leveldb_libleveldb_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+leveldb_libleveldb_a_CXXFLAGS = $(filter-out -Wconditional-uninitialized -Werror=conditional-uninitialized, $(AM_CXXFLAGS)) $(PIE_FLAGS)\n \n leveldb_libleveldb_a_SOURCES=\n-leveldb_libleveldb_a_SOURCES += leveldb/port/atomic_pointer.h\n-leveldb_libleveldb_a_SOURCES += leveldb/port/port_example.h\n-leveldb_libleveldb_a_SOURCES += leveldb/port/port_posix.h\n-leveldb_libleveldb_a_SOURCES += leveldb/port/win/stdint.h\n+leveldb_libleveldb_a_SOURCES += leveldb/port/port_stdcxx.h\n leveldb_libleveldb_a_SOURCES += leveldb/port/port.h\n-leveldb_libleveldb_a_SOURCES += leveldb/port/port_win.h\n leveldb_libleveldb_a_SOURCES += leveldb/port/thread_annotations.h\n leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/db.h\n leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/options.h\n@@ -47,6 +49,7 @@ leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/filter_policy.h\n leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/slice.h\n leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/table_builder.h\n leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/env.h\n+leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/export.h\n leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/c.h\n leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/iterator.h\n leveldb_libleveldb_a_SOURCES += leveldb/include/leveldb/cache.h\n@@ -78,6 +81,7 @@ leveldb_libleveldb_a_SOURCES += leveldb/table/format.h\n leveldb_libleveldb_a_SOURCES += leveldb/table/iterator_wrapper.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/crc32c.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/env_posix_test_helper.h\n+leveldb_libleveldb_a_SOURCES += leveldb/util/env_windows_test_helper.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/arena.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/random.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/posix_logger.h\n@@ -87,7 +91,9 @@ leveldb_libleveldb_a_SOURCES += leveldb/util/coding.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/testutil.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/mutexlock.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/logging.h\n+leveldb_libleveldb_a_SOURCES += leveldb/util/no_destructor.h\n leveldb_libleveldb_a_SOURCES += leveldb/util/testharness.h\n+leveldb_libleveldb_a_SOURCES += leveldb/util/windows_logger.h\n \n leveldb_libleveldb_a_SOURCES += leveldb/db/builder.cc\n leveldb_libleveldb_a_SOURCES += leveldb/db/c.cc\n@@ -120,7 +126,6 @@ leveldb_libleveldb_a_SOURCES += leveldb/util/coding.cc\n leveldb_libleveldb_a_SOURCES += leveldb/util/comparator.cc\n leveldb_libleveldb_a_SOURCES += leveldb/util/crc32c.cc\n leveldb_libleveldb_a_SOURCES += leveldb/util/env.cc\n-leveldb_libleveldb_a_SOURCES += leveldb/util/env_posix.cc\n leveldb_libleveldb_a_SOURCES += leveldb/util/filter_policy.cc\n leveldb_libleveldb_a_SOURCES += leveldb/util/hash.cc\n leveldb_libleveldb_a_SOURCES += leveldb/util/histogram.cc\n@@ -129,21 +134,12 @@ leveldb_libleveldb_a_SOURCES += leveldb/util/options.cc\n leveldb_libleveldb_a_SOURCES += leveldb/util/status.cc\n \n if TARGET_WINDOWS\n-leveldb_libleveldb_a_SOURCES += leveldb/util/env_win.cc\n-leveldb_libleveldb_a_SOURCES += leveldb/port/port_win.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/env_windows.cc\n else\n-leveldb_libleveldb_a_SOURCES += leveldb/port/port_posix.cc\n+leveldb_libleveldb_a_SOURCES += leveldb/util/env_posix.cc\n endif\n \n leveldb_libmemenv_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)\n leveldb_libmemenv_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)\n leveldb_libmemenv_a_SOURCES =  leveldb/helpers/memenv/memenv.cc\n leveldb_libmemenv_a_SOURCES += leveldb/helpers/memenv/memenv.h\n-\n-leveldb_libleveldb_sse42_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)\n-leveldb_libleveldb_sse42_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)\n-if ENABLE_HWCRC32\n-leveldb_libleveldb_sse42_a_CPPFLAGS += -DLEVELDB_PLATFORM_POSIX_SSE\n-leveldb_libleveldb_sse42_a_CXXFLAGS += $(SSE42_CXXFLAGS)\n-endif\n-leveldb_libleveldb_sse42_a_SOURCES =  leveldb/port/port_posix_sse.cc"
      },
      {
        "sha": "cf09eee2cbdfbdc21c14df801c0d17080bdd9df5",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 14,
        "deletions": 126,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -6,98 +6,13 @@ bin_PROGRAMS += qt/bitcoin-qt\n EXTRA_LIBRARIES += qt/libbitcoinqt.a\n \n # bitcoin qt core #\n-QT_TS = \\\n-  qt/locale/bitcoin_af.ts \\\n-  qt/locale/bitcoin_af_ZA.ts \\\n-  qt/locale/bitcoin_ar.ts \\\n-  qt/locale/bitcoin_be_BY.ts \\\n-  qt/locale/bitcoin_bg_BG.ts \\\n-  qt/locale/bitcoin_bg.ts \\\n-  qt/locale/bitcoin_ca_ES.ts \\\n-  qt/locale/bitcoin_ca.ts \\\n-  qt/locale/bitcoin_ca@valencia.ts \\\n-  qt/locale/bitcoin_cs.ts \\\n-  qt/locale/bitcoin_cy.ts \\\n-  qt/locale/bitcoin_da.ts \\\n-  qt/locale/bitcoin_de.ts \\\n-  qt/locale/bitcoin_el_GR.ts \\\n-  qt/locale/bitcoin_el.ts \\\n-  qt/locale/bitcoin_en_GB.ts \\\n-  qt/locale/bitcoin_en.ts \\\n-  qt/locale/bitcoin_eo.ts \\\n-  qt/locale/bitcoin_es_AR.ts \\\n-  qt/locale/bitcoin_es_CL.ts \\\n-  qt/locale/bitcoin_es_CO.ts \\\n-  qt/locale/bitcoin_es_DO.ts \\\n-  qt/locale/bitcoin_es_ES.ts \\\n-  qt/locale/bitcoin_es_MX.ts \\\n-  qt/locale/bitcoin_es.ts \\\n-  qt/locale/bitcoin_es_UY.ts \\\n-  qt/locale/bitcoin_es_VE.ts \\\n-  qt/locale/bitcoin_et_EE.ts \\\n-  qt/locale/bitcoin_et.ts \\\n-  qt/locale/bitcoin_eu_ES.ts \\\n-  qt/locale/bitcoin_fa_IR.ts \\\n-  qt/locale/bitcoin_fa.ts \\\n-  qt/locale/bitcoin_fi.ts \\\n-  qt/locale/bitcoin_fr_CA.ts \\\n-  qt/locale/bitcoin_fr_FR.ts \\\n-  qt/locale/bitcoin_fr.ts \\\n-  qt/locale/bitcoin_gl.ts \\\n-  qt/locale/bitcoin_he.ts \\\n-  qt/locale/bitcoin_hi_IN.ts \\\n-  qt/locale/bitcoin_hr.ts \\\n-  qt/locale/bitcoin_hu.ts \\\n-  qt/locale/bitcoin_id_ID.ts \\\n-  qt/locale/bitcoin_it_IT.ts \\\n-  qt/locale/bitcoin_it.ts \\\n-  qt/locale/bitcoin_ja.ts \\\n-  qt/locale/bitcoin_ka.ts \\\n-  qt/locale/bitcoin_kk_KZ.ts \\\n-  qt/locale/bitcoin_ko_KR.ts \\\n-  qt/locale/bitcoin_ku_IQ.ts \\\n-  qt/locale/bitcoin_ky.ts \\\n-  qt/locale/bitcoin_la.ts \\\n-  qt/locale/bitcoin_lt.ts \\\n-  qt/locale/bitcoin_lv_LV.ts \\\n-  qt/locale/bitcoin_mk_MK.ts \\\n-  qt/locale/bitcoin_mn.ts \\\n-  qt/locale/bitcoin_ms_MY.ts \\\n-  qt/locale/bitcoin_nb.ts \\\n-  qt/locale/bitcoin_ne.ts \\\n-  qt/locale/bitcoin_nl.ts \\\n-  qt/locale/bitcoin_pam.ts \\\n-  qt/locale/bitcoin_pl.ts \\\n-  qt/locale/bitcoin_pt_BR.ts \\\n-  qt/locale/bitcoin_pt_PT.ts \\\n-  qt/locale/bitcoin_ro_RO.ts \\\n-  qt/locale/bitcoin_ro.ts \\\n-  qt/locale/bitcoin_ru_RU.ts \\\n-  qt/locale/bitcoin_ru.ts \\\n-  qt/locale/bitcoin_sk.ts \\\n-  qt/locale/bitcoin_sl_SI.ts \\\n-  qt/locale/bitcoin_sq.ts \\\n-  qt/locale/bitcoin_sr@latin.ts \\\n-  qt/locale/bitcoin_sr.ts \\\n-  qt/locale/bitcoin_sv.ts \\\n-  qt/locale/bitcoin_ta.ts \\\n-  qt/locale/bitcoin_th_TH.ts \\\n-  qt/locale/bitcoin_tr_TR.ts \\\n-  qt/locale/bitcoin_tr.ts \\\n-  qt/locale/bitcoin_uk.ts \\\n-  qt/locale/bitcoin_ur_PK.ts \\\n-  qt/locale/bitcoin_uz@Cyrl.ts \\\n-  qt/locale/bitcoin_vi.ts \\\n-  qt/locale/bitcoin_vi_VN.ts \\\n-  qt/locale/bitcoin_zh_CN.ts \\\n-  qt/locale/bitcoin_zh_HK.ts \\\n-  qt/locale/bitcoin_zh.ts \\\n-  qt/locale/bitcoin_zh_TW.ts\n+include Makefile.qt_locale.include\n \n QT_FORMS_UI = \\\n   qt/forms/addressbookpage.ui \\\n   qt/forms/askpassphrasedialog.ui \\\n   qt/forms/coincontroldialog.ui \\\n+  qt/forms/createwalletdialog.ui \\\n   qt/forms/editaddressdialog.ui \\\n   qt/forms/helpmessagedialog.ui \\\n   qt/forms/intro.ui \\\n@@ -117,6 +32,7 @@ QT_MOC_CPP = \\\n   qt/moc_addressbookpage.cpp \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n+  qt/moc_createwalletdialog.cpp \\\n   qt/moc_bantablemodel.cpp \\\n   qt/moc_bitcoinaddressvalidator.cpp \\\n   qt/moc_bitcoinamountfield.cpp \\\n@@ -179,16 +95,6 @@ QT_QRC = qt/bitcoin.qrc\n QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp\n QT_QRC_LOCALE = qt/bitcoin_locale.qrc\n \n-if ENABLE_BIP70\n-PROTOBUF_CC = qt/paymentrequest.pb.cc\n-PROTOBUF_H = qt/paymentrequest.pb.h\n-PROTOBUF_PROTO = qt/paymentrequest.proto\n-else\n-PROTOBUF_CC =\n-PROTOBUF_H =\n-PROTOBUF_PROTO =\n-endif\n-\n BITCOIN_QT_H = \\\n   qt/addressbookpage.h \\\n   qt/addresstablemodel.h \\\n@@ -202,6 +108,7 @@ BITCOIN_QT_H = \\\n   qt/clientmodel.h \\\n   qt/coincontroldialog.h \\\n   qt/coincontroltreewidget.h \\\n+  qt/createwalletdialog.h \\\n   qt/csvmodelwriter.h \\\n   qt/editaddressdialog.h \\\n   qt/guiconstants.h \\\n@@ -217,7 +124,6 @@ BITCOIN_QT_H = \\\n   qt/optionsdialog.h \\\n   qt/optionsmodel.h \\\n   qt/overviewpage.h \\\n-  qt/paymentrequestplus.h \\\n   qt/paymentserver.h \\\n   qt/peertablemodel.h \\\n   qt/platformstyle.h \\\n@@ -230,6 +136,7 @@ BITCOIN_QT_H = \\\n   qt/rpcconsole.h \\\n   qt/sendcoinsdialog.h \\\n   qt/sendcoinsentry.h \\\n+  qt/sendcoinsrecipient.h \\\n   qt/signverifymessagedialog.h \\\n   qt/splashscreen.h \\\n   qt/trafficgraphwidget.h \\\n@@ -328,6 +235,7 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/askpassphrasedialog.cpp \\\n   qt/coincontroldialog.cpp \\\n   qt/coincontroltreewidget.cpp \\\n+  qt/createwalletdialog.cpp \\\n   qt/editaddressdialog.cpp \\\n   qt/openuridialog.cpp \\\n   qt/overviewpage.cpp \\\n@@ -351,18 +259,12 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/walletmodeltransaction.cpp \\\n   qt/walletview.cpp\n \n-BITCOIN_QT_WALLET_BIP70_CPP = \\\n-  qt/paymentrequestplus.cpp\n-\n BITCOIN_QT_CPP = $(BITCOIN_QT_BASE_CPP)\n if TARGET_WINDOWS\n BITCOIN_QT_CPP += $(BITCOIN_QT_WINDOWS_CPP)\n endif\n if ENABLE_WALLET\n BITCOIN_QT_CPP += $(BITCOIN_QT_WALLET_CPP)\n-if ENABLE_BIP70\n-BITCOIN_QT_CPP += $(BITCOIN_QT_WALLET_BIP70_CPP)\n-endif # ENABLE_BIP70\n endif # ENABLE_WALLET\n \n RES_IMAGES =\n@@ -374,18 +276,17 @@ BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n BITCOIN_QT_INCLUDES = -DQT_NO_KEYWORDS\n \n qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n-  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS)\n qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n qt_libbitcoinqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n-  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n+  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n if TARGET_DARWIN\n   qt_libbitcoinqt_a_SOURCES += $(BITCOIN_MM)\n endif\n \n-nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n-  $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n+nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n \n # forms/foo.h -> forms/ui_foo.h\n QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))\n@@ -395,14 +296,9 @@ QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:\n $(QT_MOC): $(QT_FORMS_H)\n $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n \n-#Generating these with a half-written protobuf header leads to wacky results.\n-#This makes sure it's done.\n-$(QT_MOC): $(PROTOBUF_H)\n-$(QT_MOC_CPP): $(PROTOBUF_H)\n-\n # bitcoin-qt binary #\n qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n-  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+  $(QT_INCLUDES) $(QR_CFLAGS)\n qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_bitcoin_qt_SOURCES = qt/main.cpp\n@@ -417,16 +313,8 @@ if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-if ENABLE_BIP70\n-qt_bitcoin_qt_LDADD += $(SSL_LIBS)\n-else\n-if TARGET_WINDOWS\n-qt_bitcoin_qt_LDADD += $(SSL_LIBS)\n-endif\n-endif\n-qt_bitcoin_qt_LDADD += $(CRYPTO_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX\n \n@@ -435,9 +323,9 @@ QT_QM=$(QT_TS:.ts=.qm)\n \n SECONDARY: $(QT_QM)\n \n-$(srcdir)/qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)\n+$(srcdir)/qt/bitcoinstrings.cpp: FORCE\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" $(PYTHON) ../share/qt/extract_strings_qt.py $^\n+\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" $(PYTHON) ../share/qt/extract_strings_qt.py $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)\n \n translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_BASE_CPP) qt/bitcoin.cpp $(BITCOIN_QT_WINDOWS_CPP) $(BITCOIN_QT_WALLET_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n@@ -450,7 +338,7 @@ $(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \t@rm $(@D)/temp_$(<F)\n \n-$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n+$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n \t@test -f $(RCC)\n \t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@"
      },
      {
        "sha": "3ac21b1326fa48da547bbed1299a07bcdb78933e",
        "filename": "src/Makefile.qt_locale.include",
        "status": "added",
        "additions": 85,
        "deletions": 0,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.qt_locale.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.qt_locale.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt_locale.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -0,0 +1,85 @@\n+QT_TS = \\\n+  qt/locale/bitcoin_af.ts \\\n+  qt/locale/bitcoin_am.ts \\\n+  qt/locale/bitcoin_ar.ts \\\n+  qt/locale/bitcoin_be.ts \\\n+  qt/locale/bitcoin_bg.ts \\\n+  qt/locale/bitcoin_bn.ts \\\n+  qt/locale/bitcoin_bs.ts \\\n+  qt/locale/bitcoin_ca.ts \\\n+  qt/locale/bitcoin_cs.ts \\\n+  qt/locale/bitcoin_cy.ts \\\n+  qt/locale/bitcoin_da.ts \\\n+  qt/locale/bitcoin_de.ts \\\n+  qt/locale/bitcoin_el.ts \\\n+  qt/locale/bitcoin_en.ts \\\n+  qt/locale/bitcoin_en_GB.ts \\\n+  qt/locale/bitcoin_eo.ts \\\n+  qt/locale/bitcoin_es.ts \\\n+  qt/locale/bitcoin_es_CL.ts \\\n+  qt/locale/bitcoin_es_CO.ts \\\n+  qt/locale/bitcoin_es_DO.ts \\\n+  qt/locale/bitcoin_es_MX.ts \\\n+  qt/locale/bitcoin_es_VE.ts \\\n+  qt/locale/bitcoin_et.ts \\\n+  qt/locale/bitcoin_eu.ts \\\n+  qt/locale/bitcoin_fa.ts \\\n+  qt/locale/bitcoin_fi.ts \\\n+  qt/locale/bitcoin_fil.ts \\\n+  qt/locale/bitcoin_fr.ts \\\n+  qt/locale/bitcoin_he.ts \\\n+  qt/locale/bitcoin_hi.ts \\\n+  qt/locale/bitcoin_hr.ts \\\n+  qt/locale/bitcoin_hu.ts \\\n+  qt/locale/bitcoin_id.ts \\\n+  qt/locale/bitcoin_is.ts \\\n+  qt/locale/bitcoin_it.ts \\\n+  qt/locale/bitcoin_ja.ts \\\n+  qt/locale/bitcoin_ka.ts \\\n+  qt/locale/bitcoin_kk.ts \\\n+  qt/locale/bitcoin_km.ts \\\n+  qt/locale/bitcoin_ko.ts \\\n+  qt/locale/bitcoin_ku_IQ.ts \\\n+  qt/locale/bitcoin_ky.ts \\\n+  qt/locale/bitcoin_la.ts \\\n+  qt/locale/bitcoin_lt.ts \\\n+  qt/locale/bitcoin_lv.ts \\\n+  qt/locale/bitcoin_mk.ts \\\n+  qt/locale/bitcoin_ml.ts \\\n+  qt/locale/bitcoin_mn.ts \\\n+  qt/locale/bitcoin_mr_IN.ts \\\n+  qt/locale/bitcoin_ms.ts \\\n+  qt/locale/bitcoin_my.ts \\\n+  qt/locale/bitcoin_nb.ts \\\n+  qt/locale/bitcoin_ne.ts \\\n+  qt/locale/bitcoin_nl.ts \\\n+  qt/locale/bitcoin_pam.ts \\\n+  qt/locale/bitcoin_pl.ts \\\n+  qt/locale/bitcoin_pt.ts \\\n+  qt/locale/bitcoin_pt_BR.ts \\\n+  qt/locale/bitcoin_ro.ts \\\n+  qt/locale/bitcoin_ru.ts \\\n+  qt/locale/bitcoin_si.ts \\\n+  qt/locale/bitcoin_sk.ts \\\n+  qt/locale/bitcoin_sl.ts \\\n+  qt/locale/bitcoin_sn.ts \\\n+  qt/locale/bitcoin_sq.ts \\\n+  qt/locale/bitcoin_sr.ts \\\n+  qt/locale/bitcoin_sr@latin.ts \\\n+  qt/locale/bitcoin_sv.ts \\\n+  qt/locale/bitcoin_szl.ts \\\n+  qt/locale/bitcoin_ta.ts \\\n+  qt/locale/bitcoin_te.ts \\\n+  qt/locale/bitcoin_th.ts \\\n+  qt/locale/bitcoin_tr.ts \\\n+  qt/locale/bitcoin_uk.ts \\\n+  qt/locale/bitcoin_ur.ts \\\n+  qt/locale/bitcoin_uz@Cyrl.ts \\\n+  qt/locale/bitcoin_uz@Latn.ts \\\n+  qt/locale/bitcoin_vi.ts \\\n+  qt/locale/bitcoin_yo.ts \\\n+  qt/locale/bitcoin_zh-Hans.ts \\\n+  qt/locale/bitcoin_zh.ts \\\n+  qt/locale/bitcoin_zh_CN.ts \\\n+  qt/locale/bitcoin_zh_HK.ts \\\n+  qt/locale/bitcoin_zh_TW.ts"
      },
      {
        "sha": "8c47fabad9f419d8ee8ca0ed112a623f951c3184",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 4,
        "deletions": 22,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb",
        "patch": "@@ -15,10 +15,6 @@ if ENABLE_WALLET\n TEST_QT_MOC_CPP += \\\n   qt/test/moc_addressbooktests.cpp \\\n   qt/test/moc_wallettests.cpp\n-if ENABLE_BIP70\n-TEST_QT_MOC_CPP += \\\n-  qt/test/moc_paymentservertests.cpp\n-endif # ENABLE_BIP70\n endif # ENABLE_WALLET\n \n TEST_QT_H = \\\n@@ -28,18 +24,10 @@ TEST_QT_H = \\\n   qt/test/rpcnestedtests.h \\\n   qt/test/uritests.h \\\n   qt/test/util.h \\\n-  qt/test/paymentrequestdata.h \\\n-  qt/test/paymentservertests.h \\\n   qt/test/wallettests.h\n \n-TEST_BITCOIN_CPP = \\\n-  test/setup_common.cpp\n-\n-TEST_BITCOIN_H = \\\n-  test/setup_common.h\n-\n qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n-  $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n+  $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n \n qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/apptests.cpp \\\n@@ -48,23 +36,17 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n   qt/test/util.cpp \\\n-  $(TEST_QT_H) \\\n-  $(TEST_BITCOIN_CPP) \\\n-  $(TEST_BITCOIN_H)\n+  $(TEST_QT_H)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_SOURCES += \\\n   qt/test/addressbooktests.cpp \\\n   qt/test/wallettests.cpp \\\n   wallet/test/wallet_test_fixture.cpp\n-if ENABLE_BIP70\n-qt_test_test_bitcoin_qt_SOURCES += \\\n-  qt/test/paymentservertests.cpp\n-endif # ENABLE_BIP70\n endif # ENABLE_WALLET\n \n nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n \n-qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBTEST_UTIL)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_UTIL) $(LIBBITCOIN_WALLET)\n endif\n@@ -73,7 +55,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)"
      },
      {
        "sha": "3a0d4fdc158c6eb295d0a78e528625ed01fc0bad",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "4e858979febd551284c10ebd95c0f8e3a9f51e5e",
        "filename": "src/Makefile.test_fuzz.include",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.test_fuzz.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.test_fuzz.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_fuzz.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "d7bc73defb4149469734cac6c8257e201fef47f3",
        "filename": "src/Makefile.test_util.include",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.test_util.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/Makefile.test_util.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_util.include?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "835c5d6c65badf70baaa215835b2da5217ea46e8",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "c6d4307d694985482a211efb7fe6850b9071f66e",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 12,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "7aba340d9d9100df6feb5e767847f01d41956ded",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 15,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "8e82020df01676999830ba145220441ab13aa1f4",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 82,
        "deletions": 36,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "0bebb0cf54946dc60d039cd1fcd3585d56d9c2cf",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "a0a0429c2a3b61c698e3f9b82c1fdd18c591a170",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "9cc584f0e498d58133e8d20d4beba338b0c9171d",
        "filename": "src/banman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "6bea2e75e94f072d49149ce17d085f40bb0c34b2",
        "filename": "src/banman.h",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/banman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/banman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "6a9e21ffc2bf3cf7358ea9c5e6e8d2b68ecc881e",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "042ad671d3418aed6a826d00e0f28d19724654c8",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "1e0471f11018ba7223893e68e63f1be0b79a680d",
        "filename": "src/bech32.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "fb39cd352b405549a0ccb9744a8283e484768d58",
        "filename": "src/bech32.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bech32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bech32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "cc260df2b810ed57ff01087a4a8e4e72095a090a",
        "filename": "src/bench/addrman.cpp",
        "status": "added",
        "additions": 140,
        "deletions": 0,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/addrman.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "0690483d5025d06f5c58844cb308d5d9db9c97de",
        "filename": "src/bench/base58.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/base58.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "2107840a3a49bdd3ac44e318bdeb73a7d663345e",
        "filename": "src/bench/bech32.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bech32.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "7b93ef688d88deb44924d2c5a81881ea2e9dc3ea",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "629bca9a73d0d506644a8cab4d03b4ea71082078",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "1b75854210520936dbe3ec835c81a958b5b6eccb",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 25,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "268f67cadafde92ab488a7e52bb125f7d2f2e159",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "86f9a0bf67393d2a362114d057bea2d400ab8131",
        "filename": "src/bench/ccoins_caching.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 42,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/ccoins_caching.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/ccoins_caching.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/ccoins_caching.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "f1b0a9a98992512652b5e77eb7df1fa7cc481434",
        "filename": "src/bench/chacha20.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/chacha20.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "df10f27d03fa8ea9d717d022647d96b9bad419d8",
        "filename": "src/bench/chacha_poly_aead.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/chacha_poly_aead.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/chacha_poly_aead.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/chacha_poly_aead.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "2b2c78905e57a5f0d4d83c9838b5ae5210e44a49",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "e052681181dd298570e1f85facab5c9ee5eccc39",
        "filename": "src/bench/checkqueue.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkqueue.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "d6d5e67c5bcfd3c18cb9f3246b14f03954b88381",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "ddcef5121e78a34db632775891c454eae869669b",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "e87f15042bb318301dfbda6617c9a36f343a6e20",
        "filename": "src/bench/duplicate_inputs.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/duplicate_inputs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/duplicate_inputs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/duplicate_inputs.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "f88150200acf236e2fafa4150f875801e71236c2",
        "filename": "src/bench/examples.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/examples.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/examples.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/examples.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "5d943810dfc43419183f1b7891a02061ae30b2a0",
        "filename": "src/bench/lockedpool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/lockedpool.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "69483f29148f13a1837deddc6318f48d307215d2",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "38d8632318441f242f8305132cf94ae4a3bf4ad5",
        "filename": "src/bench/mempool_stress.cpp",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/mempool_stress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/mempool_stress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_stress.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "e84f92feae77eaf7d31ac3f0e5d2e6d28b23d5a1",
        "filename": "src/bench/merkle_root.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/merkle_root.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/merkle_root.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/merkle_root.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "02e5fecc0def4a225c50506dccbc1428be7b6a71",
        "filename": "src/bench/poly1305.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/poly1305.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/poly1305.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/poly1305.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "6cdb4ff0a700df62ffd04002f1e35a5541e34142",
        "filename": "src/bench/rollingbloom.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/rollingbloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/rollingbloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rollingbloom.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "511573abac5c24bef4ceefee2fe3507e35281e86",
        "filename": "src/bench/rpc_blockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/rpc_blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/rpc_blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rpc_blockchain.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "bf63cccf096d412bd1cc1969fccdda4bb6814e94",
        "filename": "src/bench/rpc_mempool.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/rpc_mempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/rpc_mempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rpc_mempool.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "14bca5f7d1217e64272952f1d6526b97da3f98ac",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 38,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "810c344ab5e6b6d7b26a7e737753b70098e72aa6",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 7,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "cdaabd6fab1658ed059f1d8c11b47805ee4874cc",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 79,
        "deletions": 23,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "f54a299a36157caa1d126bf3a7fda6d39ecb7d28",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "7f9439788ac226c22a79090b0bdbbb29cf1bd22c",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "2aa416ca44b7a6e2c7e6ee3131408ed9c3b75ff5",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 36,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "263d863cfa0e507033eb8dc733ffbeee8bd4161c",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "377ac3a1a6ca2626d755f33de4fcd36d2f3f2821",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 35,
        "deletions": 108,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "5f5bed5bda0f4be918ac126c8ed5c7c8f032cd39",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 36,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "ff8744b2179b7fd7fc4bf1a2774d70c93aa67777",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "54fcf487e4736fec3f109de908f322c024464dc3",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 37,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "9173b80d66d081e853a1ee02d7e698b2dd57e3e5",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 2,
        "deletions": 13,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "c09113a8668fb24ca0fd6a3b2aa759ba54092395",
        "filename": "src/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "802e23f7759a4c9725431297f7f046b8c65baedd",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 52,
        "deletions": 86,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "799474fae223fb29ad66c54d62dd834e06e0ee6e",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 20,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "542ef329dadef5bf9ff6e16394d05e68273c68e3",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "894b8553c4da09eb72558dd152e1c3a4e7e8c6ca",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "3c139931ea23d453bac9de968e5f68df44117199",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "2aca18c1884b981679f50c01e42ea73eed3a8e31",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 710,
        "deletions": 1231,
        "changes": 1941,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "e3faa1dec083dbb04bc7382c7df54ce3f0fd3921",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "7b76c13f98ca1f33904d3e2c5ef243f4914be94a",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 35,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "a3f34bb0eec645c9a2ed019f426dc5d76a4217c1",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 51,
        "deletions": 27,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "27ef1a18df882b8b35a7c86a8779d6162d971ba8",
        "filename": "src/compat/byteswap.h",
        "status": "modified",
        "additions": 2,
        "deletions": 9,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/byteswap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/byteswap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/byteswap.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "0877ad47d302ba56594673a84b5e43b70ed676a7",
        "filename": "src/compat/cpuid.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/cpuid.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/cpuid.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/cpuid.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "cc74f28899e914e592ff409b96b62873e8b5807f",
        "filename": "src/compat/glibc_sanity.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 17,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/glibc_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/glibc_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "87140d0c714dc5c261d678a48ba329d2f68b8643",
        "filename": "src/compat/glibc_sanity_fdelt.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/glibc_sanity_fdelt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/glibc_sanity_fdelt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity_fdelt.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "0fc4e0fcf2dca38d7fe3ce7468c328c5b180fbed",
        "filename": "src/compat/stdin.cpp",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/stdin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/stdin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/stdin.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "468fe4d6a6e0d18ccd3e177574cb917da76f75e9",
        "filename": "src/compat/stdin.h",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/stdin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compat/stdin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/stdin.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "a70306d320ee6d31e0e3f8c5002e83cfed1b6fec",
        "filename": "src/compressor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compressor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compressor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "478bfff0b69da0ff847b2866dcf7801f10c53713",
        "filename": "src/compressor.h",
        "status": "modified",
        "additions": 30,
        "deletions": 35,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compressor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/compressor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "af01902c9235cd028d57772006c5436c1ecb7255",
        "filename": "src/consensus/merkle.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "4ae5a5b897fe95d63c4ed1dc4ed912f8d17ffd41",
        "filename": "src/consensus/merkle.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/merkle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/merkle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "61b1fbc2e5a88793e23c8f6966f2474c0f5e5d84",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "bb8cd10c63831e4057fa8b5ac504e96cd2a4239a",
        "filename": "src/consensus/tx_check.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 19,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/tx_check.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/tx_check.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_check.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "21f842408aef3824726b2206b295033921a5bb66",
        "filename": "src/consensus/tx_check.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/tx_check.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/tx_check.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_check.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "81245e3e11bb27022571301d2bc2426347ef3c36",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "ffcaf3cab143b7b255136b18eebf22331c077c34",
        "filename": "src/consensus/tx_verify.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/tx_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/tx_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "a79e7b9d127ae80c22ae853a02ad4c16d2891a9a",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 77,
        "deletions": 92,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "80ec80cd503e2998819479da4625433a96117508",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      },
      {
        "sha": "df78c319eebb69c63fe86e571c76d56e3daa725b",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=570ad20ad6f4a9631a3a5a29c99ccc0cdcaeeaeb"
      }
    ]
  }
]