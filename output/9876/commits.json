[
  {
    "sha": "9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjE2YzUyYmRhN2Y3YTA3MzEwZmE0ZjgxNjRkZjFmYTZiNGJiY2Zk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-26T00:04:18Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-26T17:55:43Z"
      },
      "message": "Change authproxy.py to be Python3 and tidy up imports.",
      "tree": {
        "sha": "ab712ba474ec4bd4b44c1735a23a0b13e1a0cd48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab712ba474ec4bd4b44c1735a23a0b13e1a0cd48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6206252e5073c1cde2e313f2e5a3ca17582c5823",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6206252e5073c1cde2e313f2e5a3ca17582c5823",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6206252e5073c1cde2e313f2e5a3ca17582c5823"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 6,
      "deletions": 12
    },
    "files": [
      {
        "sha": "b69509f4e2d31ca719e387601da7e2ac4e1aef39",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 6,
        "deletions": 12,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd",
        "patch": "@@ -33,19 +33,13 @@\n - uses standard Python json lib\n \"\"\"\n \n-try:\n-    import http.client as httplib\n-except ImportError:\n-    import httplib\n import base64\n import decimal\n+import http.client\n import json\n import logging\n import socket\n-try:\n-    import urllib.parse as urlparse\n-except ImportError:\n-    import urlparse\n+import urllib.parse\n \n USER_AGENT = \"AuthServiceProxy/0.1\"\n \n@@ -76,7 +70,7 @@ def __init__(self, service_url, service_name=None, timeout=HTTP_TIMEOUT, connect\n         self.__service_url = service_url\n         self._service_name = service_name\n         self.ensure_ascii = ensure_ascii # can be toggled on the fly by tests\n-        self.__url = urlparse.urlparse(service_url)\n+        self.__url = urllib.parse.urlparse(service_url)\n         if self.__url.port is None:\n             port = 80\n         else:\n@@ -97,10 +91,10 @@ def __init__(self, service_url, service_name=None, timeout=HTTP_TIMEOUT, connect\n             # Callables re-use the connection of the original proxy\n             self.__conn = connection\n         elif self.__url.scheme == 'https':\n-            self.__conn = httplib.HTTPSConnection(self.__url.hostname, port,\n+            self.__conn = http.client.HTTPSConnection(self.__url.hostname, port,\n                                                   timeout=timeout)\n         else:\n-            self.__conn = httplib.HTTPConnection(self.__url.hostname, port,\n+            self.__conn = http.client.HTTPConnection(self.__url.hostname, port,\n                                                  timeout=timeout)\n \n     def __getattr__(self, name):\n@@ -123,7 +117,7 @@ def _request(self, method, path, postdata):\n         try:\n             self.__conn.request(method, path, postdata, headers)\n             return self._get_response()\n-        except httplib.BadStatusLine as e:\n+        except http.client.BadStatusLine as e:\n             if e.line == \"''\": # if connection was closed, try again\n                 self.__conn.close()\n                 self.__conn.request(method, path, postdata, headers)"
      }
    ]
  },
  {
    "sha": "14e92d866ebedc3f9dc9fedc1e307be5786c9221",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNGU5MmQ4NjZlYmVkYzNmOWRjOWZlZGMxZTMwN2JlNTc4NmM5MjIx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-26T00:05:07Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-26T17:57:03Z"
      },
      "message": "Eliminate wildcard imports from test_framework\n\nThis commit eliminates wildcard imports from test_framework and tidies\nup the import order (standard library first, then package modules, both\nsorted in alphabetical order).",
      "tree": {
        "sha": "e2d583644ea842a6d8fea1d073e77e59eab755a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2d583644ea842a6d8fea1d073e77e59eab755a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14e92d866ebedc3f9dc9fedc1e307be5786c9221",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14e92d866ebedc3f9dc9fedc1e307be5786c9221",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/14e92d866ebedc3f9dc9fedc1e307be5786c9221",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14e92d866ebedc3f9dc9fedc1e307be5786c9221/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f16c52bda7f7a07310fa4f8164df1fa6b4bbcfd"
      }
    ],
    "stats": {
      "total": 179,
      "additions": 117,
      "deletions": 62
    },
    "files": [
      {
        "sha": "43222ea1eb6e2cf834804476cba16d9b383743d0",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -4,9 +4,10 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test BIP68 implementation.\"\"\"\n \n+from test_framework.blocktools import *\n+from test_framework.mininode import ToHex, FromHex\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.blocktools import *\n \n SEQUENCE_LOCKTIME_DISABLE_FLAG = (1<<31)\n SEQUENCE_LOCKTIME_TYPE_FLAG = (1<<22) # this means use time (0 means height)"
      },
      {
        "sha": "e700052b61c2ea4e472816e9a04049cbf15323de",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -11,6 +11,11 @@\n re-requested.\n \"\"\"\n \n+from test_framework.blocktools import *\n+from test_framework.comptool import (TestManager,\n+                                     TestInstance,\n+                                     RejectResult)\n+from test_framework.mininode import NetworkThread\n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n from test_framework.comptool import TestManager, TestInstance, RejectResult"
      },
      {
        "sha": "49ac8a3083295208c8bf4ff40a67cd6636855459",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -10,10 +10,10 @@\n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.comptool import TestManager, TestInstance, RejectResult\n from test_framework.blocktools import *\n+from test_framework.mininode import NetworkThread\n+from test_framework.test_framework import ComparisonTestFramework\n import time\n \n-\n-\n # Use the ComparisonTestFramework with 1 node: only use --testbinary.\n class InvalidTxRequestTest(ComparisonTestFramework):\n "
      },
      {
        "sha": "900943611a78b475f162829ec302cc4c019cf04a",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -4,13 +4,14 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test multiple RPC users.\"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import str_to_b64str, assert_equal\n-\n import os\n import http.client\n import urllib.parse\n \n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal,\n+                                 str_to_b64str)\n+\n class HTTPBasicsTest (BitcoinTestFramework):\n \n     def __init__(self):"
      },
      {
        "sha": "5b5f3e4a6aca6d20a4204b6dab8840711f0a299c",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -17,6 +17,7 @@\n from test_framework.blocktools import *\n import time\n from test_framework.key import CECKey\n+from test_framework.mininode import *\n from test_framework.script import *\n import struct\n "
      },
      {
        "sha": "7ea93120bc00d3d01802eee982d3d6d7b05d943c",
        "filename": "qa/rpc-tests/test_framework/address.py",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/address.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -4,8 +4,13 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Encode and decode BASE58, P2PKH and P2SH addresses.\"\"\"\n \n-from .script import hash256, hash160, sha256, CScript, OP_0\n-from .util import bytes_to_hex_str, hex_str_to_bytes\n+from .script import (CScript,\n+                     OP_0,\n+                     hash256,\n+                     hash160,\n+                     sha256)\n+from .util import (bytes_to_hex_str,\n+                   hex_str_to_bytes)\n \n chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n "
      },
      {
        "sha": "dea9a3a4719d3f8b119abf07464c7462a13680cf",
        "filename": "qa/rpc-tests/test_framework/bignum.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/bignum.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -9,7 +9,6 @@\n \n import struct\n \n-\n # generic big endian MPI format\n \n def bn_bytes(v, have_ext=False):"
      },
      {
        "sha": "453bf0fe9e843ca402a4aeb4fd8846fb36b1017b",
        "filename": "qa/rpc-tests/test_framework/blockstore.py",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/blockstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/blockstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blockstore.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -4,9 +4,17 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"BlockStore and TxStore helper classes.\"\"\"\n \n-from .mininode import *\n-from io import BytesIO\n import dbm.dumb as dbmd\n+from io import BytesIO\n+import sys\n+\n+from .mininode import (BytesIO,\n+                       CBlock,\n+                       CBlockHeader,\n+                       CBlockLocator,\n+                       CTransaction,\n+                       msg_generic,\n+                       msg_headers)\n \n class BlockStore(object):\n     \"\"\"BlockStore helper class."
      },
      {
        "sha": "e0bb079654f3570f399abf737069b07b62ef6c83",
        "filename": "qa/rpc-tests/test_framework/blocktools.py",
        "status": "modified",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blocktools.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -4,8 +4,21 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Utilities for manipulating blocks and transactions.\"\"\"\n \n-from .mininode import *\n-from .script import CScript, OP_TRUE, OP_CHECKSIG, OP_RETURN\n+from .mininode import (CBlock,\n+                       COIN,\n+                       COutPoint,\n+                       CTransaction,\n+                       CTxIn,\n+                       CTxInWitness,\n+                       CTxOut,\n+                       hash256,\n+                       ser_string,\n+                       ser_uint256,\n+                       uint256_from_str)\n+from .script import (CScript,\n+                     OP_TRUE,\n+                     OP_CHECKSIG,\n+                     OP_RETURN)\n \n # Create a block (with regtest difficulty)\n def create_block(hashprev, coinbase, nTime=None):"
      },
      {
        "sha": "56cde0ce0c64f235972b85eb22976b71049f7375",
        "filename": "qa/rpc-tests/test_framework/comptool.py",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/comptool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/comptool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/comptool.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -17,8 +17,23 @@\n     on_getdata: provide blocks via BlockStore\n \"\"\"\n \n-from .mininode import *\n-from .blockstore import BlockStore, TxStore\n+from .blockstore import (BlockStore,\n+                         TxStore)\n+from .mininode import (CBlock,\n+                       CBlockHeader,\n+                       CInv,\n+                       CTransaction,\n+                       MAX_INV_SZ,\n+                       NodeConn,\n+                       NodeConnCB,\n+                       mininode_lock,\n+                       msg_block,\n+                       msg_getheaders,\n+                       msg_headers,\n+                       msg_inv,\n+                       msg_mempool,\n+                       msg_ping,\n+                       wait_until)\n from .util import p2p_port\n \n global mininode_lock"
      },
      {
        "sha": "2a0b3a2bed23e600914f5c0c85675be13a2db003",
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -10,7 +10,6 @@\n \n import os\n \n-\n REFERENCE_FILENAME = 'rpc_interface.txt'\n \n "
      },
      {
        "sha": "b5a16b032f18f46f5b82c7d7010026525da2ba04",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -20,21 +20,23 @@\n ser_*, deser_*: functions that handle serialization/deserialization\n \"\"\"\n \n-import struct\n-import socket\n import asyncore\n-import time\n-import sys\n-import random\n-from .util import hex_str_to_bytes, bytes_to_hex_str\n-from io import BytesIO\n from codecs import encode\n+import copy\n import hashlib\n-from threading import RLock\n-from threading import Thread\n+from io import BytesIO\n import logging\n-import copy\n-from test_framework.siphash import siphash256\n+import random\n+import socket\n+import struct\n+import sys\n+from threading import (RLock,\n+                       Thread)\n+import time\n+\n+from .siphash import siphash256\n+from .util import (hex_str_to_bytes,\n+                   bytes_to_hex_str)\n \n BIP0031_VERSION = 60000\n MY_VERSION = 70014  # past bip-31 for ping/pong"
      },
      {
        "sha": "115e62894bc9ef6f7ebd38fab01806a8983b5009",
        "filename": "qa/rpc-tests/test_framework/netutil.py",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/netutil.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -7,13 +7,14 @@\n Roughly based on http://voorloopnul.com/blog/a-python-netstat-in-less-than-100-lines-of-code/ by Ricardo Pascal\n \"\"\"\n \n-import sys\n-import socket\n-import fcntl\n-import struct\n+from binascii import (unhexlify,\n+                      hexlify)\n import array\n+import fcntl\n import os\n-from binascii import unhexlify, hexlify\n+import socket\n+import struct\n+import sys\n \n STATE_ESTABLISHED = '01'\n STATE_SYN_SENT  = '02'"
      },
      {
        "sha": "e384e74e1ee9ba1897a877701ad64ce1ba034e3f",
        "filename": "qa/rpc-tests/test_framework/script.py",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/script.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -7,22 +7,27 @@\n This file is modified from python-bitcoinlib.\n \"\"\"\n \n-from .mininode import CTransaction, CTxOut, sha256, hash256, uint256_from_str, ser_uint256, ser_string\n from binascii import hexlify\n import hashlib\n-\n+import struct\n import sys\n+\n+from .bignum import bn2vch\n+from .mininode import (CTransaction,\n+                       CTxOut,\n+                       hash256,\n+                       ser_string,\n+                       ser_uint256,\n+                       sha256,\n+                       uint256_from_str)\n+\n bchr = chr\n bord = ord\n if sys.version > '3':\n     long = int\n     bchr = lambda x: bytes([x])\n     bord = lambda x: x\n \n-import struct\n-\n-from .bignum import bn2vch\n-\n MAX_SCRIPT_SIZE = 10000\n MAX_SCRIPT_ELEMENT_SIZE = 520\n MAX_SCRIPT_OPCODES = 201"
      },
      {
        "sha": "1aa70da56fad283b871542a9fd5f1c7d8183a706",
        "filename": "qa/rpc-tests/test_framework/socks5.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/socks5.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/socks5.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/socks5.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -4,8 +4,11 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Dummy Socks5 server for testing.\"\"\"\n \n-import socket, threading, queue\n-import traceback, sys\n+import queue\n+import socket\n+import sys\n+import threading\n+import traceback\n \n ### Protocol constants\n class Command:"
      },
      {
        "sha": "fc158f8195b1eccf6a8e179dbae0b3f1e10d9e9e",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 12,
        "deletions": 15,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -7,26 +7,23 @@\n import logging\n import optparse\n import os\n-import sys\n import shutil\n+import sys\n import tempfile\n import traceback\n \n-from .util import (\n-    initialize_chain,\n-    start_nodes,\n-    connect_nodes_bi,\n-    sync_blocks,\n-    sync_mempools,\n-    stop_nodes,\n-    stop_node,\n-    enable_coverage,\n-    check_json_precision,\n-    initialize_chain_clean,\n-    PortSeed,\n-)\n from .authproxy import JSONRPCException\n-\n+from .util import (PortSeed,\n+                   check_json_precision,\n+                   connect_nodes_bi,\n+                   enable_coverage,\n+                   initialize_chain_clean,\n+                   initialize_chain,\n+                   start_nodes,\n+                   stop_node,\n+                   stop_nodes,\n+                   sync_blocks,\n+                   sync_mempools)\n \n class BitcoinTestFramework(object):\n "
      },
      {
        "sha": "bbae1043c41a64af7886c07dc98c000534c746a9",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14e92d866ebedc3f9dc9fedc1e307be5786c9221/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "patch": "@@ -4,23 +4,23 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Helpful routines for regression testing.\"\"\"\n \n-import os\n-import sys\n-\n from binascii import hexlify, unhexlify\n from base64 import b64encode\n from decimal import Decimal, ROUND_DOWN\n-import json\n+import errno\n import http.client\n+import json\n+import os\n import random\n+import re\n import shutil\n import subprocess\n+import sys\n import time\n-import re\n-import errno\n \n from . import coverage\n-from .authproxy import AuthServiceProxy, JSONRPCException\n+from .authproxy import (AuthServiceProxy,\n+                        JSONRPCException)\n \n COVERAGE_DIR = None\n "
      }
    ]
  },
  {
    "sha": "506e23280daf2c3d379d979a189cbaf03d13a001",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDZlMjMyODBkYWYyYzNkMzc5ZDk3OWExODljYmFmMDNkMTNhMDAx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-26T00:41:19Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-26T17:57:06Z"
      },
      "message": "Tidy up imports\n\nThis commit tidies the import statements at the top of the individual\ntest modules. Imports are grouped by:\n\n- standard library imports\n- third party imports\n- local package imports\n\nthe groups are separated by a line and arranged in alphabetical order.",
      "tree": {
        "sha": "dd1f6a98dfe0af361c53202f87a97f746aae9baf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd1f6a98dfe0af361c53202f87a97f746aae9baf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/506e23280daf2c3d379d979a189cbaf03d13a001",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/506e23280daf2c3d379d979a189cbaf03d13a001",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/506e23280daf2c3d379d979a189cbaf03d13a001",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/506e23280daf2c3d379d979a189cbaf03d13a001/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14e92d866ebedc3f9dc9fedc1e307be5786c9221",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14e92d866ebedc3f9dc9fedc1e307be5786c9221"
      }
    ],
    "stats": {
      "total": 389,
      "additions": 227,
      "deletions": 162
    },
    "files": [
      {
        "sha": "2530a4e46497fb0681dee3d86952b27cb7dca3cd",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -11,9 +11,10 @@\n  no effect on transactions which are already conflicted or abandoned.\n \"\"\"\n \n+import urllib.parse\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import urllib.parse\n \n class AbandonConflictTest(BitcoinTestFramework):\n     def __init__(self):"
      },
      {
        "sha": "23a6b632e56a366ded051bd99e9f06b0c35dbad6",
        "filename": "qa/rpc-tests/assumevalid.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/assumevalid.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -30,12 +30,13 @@\n       isn't buried by at least two weeks' work.\n \"\"\"\n \n+from test_framework.blocktools import (create_block,\n+                                       create_coinbase)\n+from test_framework.key import CECKey\n from test_framework.mininode import *\n+from test_framework.script import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.blocktools import create_block, create_coinbase\n-from test_framework.key import CECKey\n-from test_framework.script import *\n \n class BaseNode(SingleNodeConnCB):\n     def __init__(self):"
      },
      {
        "sha": "e64003aade02fddcafab49e86dc38e6b59dad591",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -16,15 +16,22 @@\n Mine 1 old version block, see that the node rejects.\n \"\"\"\n \n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.mininode import CTransaction, NetworkThread\n-from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n-from test_framework.script import CScript, OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP\n from io import BytesIO\n import time\n \n+from test_framework.blocktools import (create_coinbase,\n+                                       create_block)\n+from test_framework.comptool import (TestInstance,\n+                                     TestManager)\n+from test_framework.mininode import (CTransaction,\n+                                     NetworkThread)\n+from test_framework.script import (CScript,\n+                                   OP_1NEGATE,\n+                                   OP_CHECKLOCKTIMEVERIFY,\n+                                   OP_DROP)\n+from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.util import *\n+\n def cltv_invalidate(tx):\n     '''Modify the signature in vin 0 of the tx to fail CLTV\n "
      },
      {
        "sha": "488ac1d4d3891d8ba302b3f107612bd2c18011f4",
        "filename": "qa/rpc-tests/bip68-112-113-p2p.py",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-112-113-p2p.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -43,15 +43,20 @@\n bip112tx_special - test negative argument to OP_CSV\n \"\"\"\n \n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.mininode import ToHex, CTransaction, NetworkThread\n-from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n-from test_framework.script import *\n from io import BytesIO\n import time\n \n+from test_framework.blocktools import (create_coinbase,\n+                                       create_block)\n+from test_framework.comptool import (TestInstance,\n+                                     TestManager)\n+from test_framework.mininode import (ToHex,\n+                                     CTransaction,\n+                                     NetworkThread)\n+from test_framework.script import *\n+from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.util import *\n+\n base_relative_locktime = 10\n seq_disable_flag = 1<<31\n seq_random_high_bit = 1<<25"
      },
      {
        "sha": "37d70723bf2e2a29943b3462c6054118f6ae69d7",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -16,16 +16,23 @@\n test that enforcement has triggered\n \"\"\"\n \n+from io import BytesIO\n+import itertools\n+import time\n+\n from test_framework.blockstore import BlockStore\n+from test_framework.blocktools import (create_coinbase,\n+                                       create_block)\n+from test_framework.comptool import (TestInstance,\n+                                     TestManager)\n+from test_framework.mininode import (CTransaction,\n+                                     NetworkThread)\n+from test_framework.script import (CScript,\n+                                   OP_1NEGATE,\n+                                   OP_CHECKSEQUENCEVERIFY,\n+                                   OP_DROP)\n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n-from test_framework.mininode import CTransaction, NetworkThread\n-from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n-from test_framework.script import CScript, OP_1NEGATE, OP_CHECKSEQUENCEVERIFY, OP_DROP\n-from io import BytesIO\n-import time\n-import itertools\n \n class BIP9SoftForksTest(ComparisonTestFramework):\n "
      },
      {
        "sha": "962b04ca8696169a83290847529206572579c9fc",
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -16,15 +16,19 @@\n Mine 1 old version block, see that the node rejects.\n \"\"\"\n \n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.mininode import CTransaction, NetworkThread\n-from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n-from test_framework.script import CScript\n from io import BytesIO\n import time\n \n+from test_framework.blocktools import (create_coinbase,\n+                                       create_block)\n+from test_framework.comptool import (TestInstance,\n+                                     TestManager)\n+from test_framework.mininode import (CTransaction,\n+                                     NetworkThread)\n+from test_framework.script import CScript\n+from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.util import *\n+\n # A canonical signature consists of: \n # <30> <total len> <02> <len R> <R> <02> <len S> <S> <hashtype>\n def unDERify(tx):"
      },
      {
        "sha": "98554f61c85bde56913e4cabc4783eabc35ef3ed",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -13,17 +13,14 @@\n \n from decimal import Decimal\n \n-from test_framework.test_framework import BitcoinTestFramework\n from test_framework.authproxy import JSONRPCException\n-from test_framework.util import (\n-    assert_equal,\n-    assert_raises,\n-    assert_is_hex_string,\n-    assert_is_hash_string,\n-    start_nodes,\n-    connect_nodes_bi,\n-)\n-\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal,\n+                                 assert_is_hash_string,\n+                                 assert_is_hex_string,\n+                                 assert_raises,\n+                                 connect_nodes_bi,\n+                                 start_nodes)\n \n class BlockchainTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "650b088bcd24fdc387374e007ba0638cf6ab130a",
        "filename": "qa/rpc-tests/bumpfee.py",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bumpfee.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,14 +4,16 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the bumpfee RPC.\"\"\"\n \n+import io\n+\n from segwit import send_to_witness\n+\n+from test_framework.blocktools import (create_block,\n+                                       create_coinbase)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework import blocktools\n from test_framework.mininode import CTransaction\n from test_framework.util import *\n \n-import io\n-\n # Sequence number that is BIP 125 opt-in and BIP 68-compliant\n BIP125_SEQUENCE_NUMBER = 0xfffffffd\n \n@@ -310,7 +312,7 @@ def submit_block_with_tx(node, tx):\n     tip = node.getbestblockhash()\n     height = node.getblockcount() + 1\n     block_time = node.getblockheader(tip)[\"mediantime\"] + 1\n-    block = blocktools.create_block(int(tip, 16), blocktools.create_coinbase(height), block_time)\n+    block = create_block(int(tip, 16), create_coinbase(height), block_time)\n     block.vtx.append(ctx)\n     block.rehash()\n     block.hashMerkleRoot = block.calc_merkle_root()"
      },
      {
        "sha": "972ede0de1401952f9961667ba9090af6815950e",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,10 +4,11 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test decoding scripts via decodescript RPC command.\"\"\"\n \n+from io import BytesIO\n+\n+from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import *\n-from io import BytesIO\n \n class DecodeScriptTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "da8ba3d6b6fccbb7d632e43176138d61348df84f",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -11,7 +11,6 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-\n class DisableWalletTest (BitcoinTestFramework):\n \n     def __init__(self):"
      },
      {
        "sha": "be2c8a1631c2a9c2b70b12bbd4615f967574a88a",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -7,7 +7,6 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-\n def get_unspent(listunspent, amount):\n     for utx in listunspent:\n         if utx['amount'] == amount:"
      },
      {
        "sha": "ffdfd5d43452331b550ea76538eb3d66fcbf4c80",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,11 +4,11 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test longpolling with getblocktemplate.\"\"\"\n \n+import threading\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-import threading\n-\n class LongpollThread(threading.Thread):\n     def __init__(self, node):\n         threading.Thread.__init__(self)"
      },
      {
        "sha": "65d75deaa04948fb31b7d4e262e564b55f4ff9af",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,13 +4,13 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test block proposals with getblocktemplate.\"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-\n from binascii import a2b_hex, b2a_hex\n from hashlib import sha256\n from struct import pack\n \n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n def b2x(b):\n     return b2a_hex(b).decode('ascii')\n "
      },
      {
        "sha": "776351ab1d675352152d6debca8a9973c8277b60",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,12 +4,12 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the RPC HTTP basics.\"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-\n import http.client\n import urllib.parse\n \n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n class HTTPBasicsTest (BitcoinTestFramework):\n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "352560fffce9484e31113a012292a594f7bf1440",
        "filename": "qa/rpc-tests/import-rescan.py",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/import-rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/import-rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/import-rescan.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -19,15 +19,18 @@\n happened previously.\n \"\"\"\n \n-from test_framework.authproxy import JSONRPCException\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (start_nodes, connect_nodes, sync_blocks, assert_equal, set_node_times)\n-from decimal import Decimal\n-\n import collections\n import enum\n import itertools\n \n+from test_framework.authproxy import JSONRPCException\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (start_nodes,\n+                                 connect_nodes,\n+                                 sync_blocks,\n+                                 assert_equal,\n+                                 set_node_times)\n+\n Call = enum.Enum(\"Call\", \"single multi\")\n Data = enum.Enum(\"Data\", \"address pub priv\")\n Rescan = enum.Enum(\"Rescan\", \"no yes late_timestamp\")"
      },
      {
        "sha": "79eae5f79b3f9c29f5751ce33502ac4f117568a4",
        "filename": "qa/rpc-tests/importmulti.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importmulti.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the importmulti RPC.\"\"\"\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n "
      },
      {
        "sha": "1064bcf02bcfa2d6bef8841c7e73b310a4106061",
        "filename": "qa/rpc-tests/importprunedfunds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importprunedfunds.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -3,10 +3,10 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the importprunedfunds and removeprunedfunds RPCs.\"\"\"\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-\n class ImportPrunedFundsTest(BitcoinTestFramework):\n \n     def __init__(self):"
      },
      {
        "sha": "f4a92ac461ea6a9ca09a6d6903dbf2027c0eceb8",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -11,17 +11,16 @@\n re-requested.\n \"\"\"\n \n+import copy\n+import time\n+\n from test_framework.blocktools import *\n from test_framework.comptool import (TestManager,\n                                      TestInstance,\n                                      RejectResult)\n from test_framework.mininode import NetworkThread\n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n-from test_framework.comptool import TestManager, TestInstance, RejectResult\n-from test_framework.blocktools import *\n-import copy\n-import time\n \n # Use the ComparisonTestFramework with 1 node: only use --testbinary.\n class InvalidBlockRequestTest(ComparisonTestFramework):"
      },
      {
        "sha": "f74ce595a5d0df8817270188d3773d26509b2a31",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -7,9 +7,10 @@\n In this test we connect to one node over p2p, and test tx requests.\n \"\"\"\n \n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.comptool import TestManager, TestInstance, RejectResult\n from test_framework.blocktools import *\n+from test_framework.comptool import (TestManager,\n+                                     TestInstance,\n+                                     RejectResult)\n from test_framework.mininode import NetworkThread\n from test_framework.test_framework import ComparisonTestFramework\n import time"
      },
      {
        "sha": "c6a98be3c1367ab830d9f86ecf8bf8617a91877b",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,10 +4,12 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the listtransactions API.\"\"\"\n \n+from io import BytesIO\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import CTransaction, COIN\n-from io import BytesIO\n+from test_framework.mininode import (CTransaction,\n+                                     COIN)\n \n def txFromHex(hexstring):\n     tx = CTransaction()"
      },
      {
        "sha": "cc72296d73f5e2d54b23a140961403449bfbe426",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -10,10 +10,11 @@\n reach. [0.10 clients shouldn't request more than 16 from a single peer.]\n \"\"\"\n \n+import logging\n+\n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import logging\n \n MAX_REQUESTS = 128\n "
      },
      {
        "sha": "499342224cf707f8dc752751cb63d28c26b4528b",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -11,10 +11,11 @@\n * Verify that the upload counters are reset after 24 hours.\n \"\"\"\n \n+import time\n+\n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import time\n \n # TestNode: bare-bones \"peer\".  Used mostly as a conduit for a test to sending\n # p2p messages to a node, generating the messages in the main testing logic."
      },
      {
        "sha": "51e63aa9e65657eed2f0f3f819b9aebdf410bec7",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,9 +4,9 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test descendant package tracking code.\"\"\"\n \n+from test_framework.mininode import COIN\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import COIN\n \n MAX_ANCESTORS = 25\n MAX_DESCENDANTS = 25"
      },
      {
        "sha": "8225db0fadb9a503c90d877b2b6711dfbaa0f2de",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,11 +4,11 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node handling.\"\"\"\n \n+import urllib.parse\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-import urllib.parse\n-\n class NodeHandlingTest (BitcoinTestFramework):\n \n     def __init__(self):"
      },
      {
        "sha": "84b3238bf1c91ea9406c1fdb881b1d8819700ad5",
        "filename": "qa/rpc-tests/nulldummy.py",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nulldummy.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -13,13 +13,17 @@\n [Policy/Consensus] Check that the new NULLDUMMY rules are enforced on the 432nd block.\n \"\"\"\n \n+from io import BytesIO\n+import time\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import CTransaction, NetworkThread\n-from test_framework.blocktools import create_coinbase, create_block, add_witness_commitment\n+from test_framework.mininode import (CTransaction,\n+                                     NetworkThread)\n+from test_framework.blocktools import (create_coinbase,\n+                                       create_block,\n+                                       add_witness_commitment)\n from test_framework.script import CScript\n-from io import BytesIO\n-import time\n \n NULLDUMMY_ERROR = \"64: non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero)\"\n "
      },
      {
        "sha": "898fe8df7821ef86f6f88ee0d572eb2feae175ff",
        "filename": "qa/rpc-tests/p2p-acceptblock.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-acceptblock.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -48,11 +48,13 @@\n    Node0 should process and the tip should advance.\n \"\"\"\n \n+import time\n+\n+from test_framework.blocktools import (create_block,\n+                                       create_coinbase)\n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import time\n-from test_framework.blocktools import create_block, create_coinbase\n \n # TestNode: bare-bones \"peer\".  Used mostly as a conduit for a test to sending\n # p2p messages to a node, generating the messages in the main testing logic."
      },
      {
        "sha": "62626d57532d20a00f1cc3707ca94d4a49946385",
        "filename": "qa/rpc-tests/p2p-compactblocks.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-compactblocks.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -8,11 +8,14 @@\n Version 2 compact blocks are post-segwit (wtxids)\n \"\"\"\n \n+from test_framework.blocktools import (create_block,\n+                                       create_coinbase,\n+                                       add_witness_commitment)\n from test_framework.mininode import *\n+from test_framework.script import (CScript,\n+                                   OP_TRUE)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment\n-from test_framework.script import CScript, OP_TRUE\n \n # TestNode: A peer we use to send messages to bitcoind, and store responses.\n class TestNode(SingleNodeConnCB):"
      },
      {
        "sha": "2daaa80df44c875db1221499b6da41ebafbf2104",
        "filename": "qa/rpc-tests/p2p-feefilter.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-feefilter.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,11 +4,11 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test processing of feefilter messages.\"\"\"\n \n+import time\n+\n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import time\n-\n \n def hashToHex(hash):\n     return format(hash, '064x')"
      },
      {
        "sha": "065ecf1c48fe2c3ce2ca4fcfb518fc1234bdda91",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -11,15 +11,18 @@\n each test.\n \"\"\"\n \n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.comptool import TestManager, TestInstance, RejectResult\n-from test_framework.blocktools import *\n import time\n+import struct\n+\n+from test_framework.blocktools import *\n+from test_framework.comptool import (TestManager,\n+                                     TestInstance,\n+                                     RejectResult)\n from test_framework.key import CECKey\n from test_framework.mininode import *\n from test_framework.script import *\n-import struct\n+from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.util import *\n \n class PreviousSpendableOutput(object):\n     def __init__(self, tx = CTransaction(), n = -1):"
      },
      {
        "sha": "b270989c3136cbb9ff8f65bf1b909829bf10c04e",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,15 +4,20 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test segwit transactions and blocks on P2P network.\"\"\"\n \n+from binascii import hexlify\n+import random\n+import time\n+\n+from test_framework.blocktools import (create_block,\n+                                       create_coinbase,\n+                                       add_witness_commitment,\n+                                       WITNESS_COMMITMENT_HEADER)\n+from test_framework.key import (CECKey,\n+                                CPubKey)\n from test_framework.mininode import *\n+from test_framework.script import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.script import *\n-from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment, WITNESS_COMMITMENT_HEADER\n-from test_framework.key import CECKey, CPubKey\n-import time\n-import random\n-from binascii import hexlify\n \n # The versionbit bit used to signal activation of SegWit\n VB_WITNESS_BIT = 1"
      },
      {
        "sha": "a30263ec13ccc012f76fc1a304cf0ffb8739ad05",
        "filename": "qa/rpc-tests/p2p-versionbits-warning.py",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-versionbits-warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/p2p-versionbits-warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-versionbits-warning.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -8,12 +8,14 @@\n soft-forks, and test that warning alerts are generated.\n \"\"\"\n \n+import re\n+import time\n+\n+from test_framework.blocktools import (create_block,\n+                                       create_coinbase)\n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import re\n-import time\n-from test_framework.blocktools import create_block, create_coinbase\n \n VB_PERIOD = 144 # versionbits period length for regtest\n VB_THRESHOLD = 108 # versionbits activation threshold for regtest"
      },
      {
        "sha": "0c7fd9081c968f7b4309edc4685b203123000923",
        "filename": "qa/rpc-tests/preciousblock.py",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/preciousblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/preciousblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/preciousblock.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -5,12 +5,10 @@\n \"\"\"Test the preciousblock RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    assert_equal,\n-    connect_nodes_bi,\n-    sync_chain,\n-    sync_blocks,\n-)\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes_bi,\n+                                 sync_chain,\n+                                 sync_blocks)\n \n def unidirectional_node_sync_via_rpc(node_src, node_dest):\n     blocks_to_copy = []"
      },
      {
        "sha": "2994ac9197439704d3213cd0a4e9823ba3243f1b",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,9 +4,10 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the prioritisetransaction mining RPC.\"\"\"\n \n+from test_framework.mininode import (COIN,\n+                                     MAX_BLOCK_BASE_SIZE)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import COIN, MAX_BLOCK_BASE_SIZE\n \n class PrioritiseTransactionTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "d9ec2b56ef706b1a277eb028600e31542367677c",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -27,17 +27,18 @@\n addnode connect to generic DNS name\n \"\"\"\n \n-import socket\n import os\n+import socket\n \n-from test_framework.socks5 import Socks5Configuration, Socks5Command, Socks5Server, AddressType\n+from test_framework.socks5 import (Socks5Configuration,\n+                                   Socks5Command,\n+                                   Socks5Server,\n+                                   AddressType)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    PORT_MIN,\n-    PORT_RANGE,\n-    start_nodes,\n-    assert_equal,\n-)\n+from test_framework.util import (PORT_MIN,\n+                                 PORT_RANGE,\n+                                 assert_equal,\n+                                 start_nodes)\n from test_framework.netutil import test_ipv6_local\n \n RANGE_BEGIN = PORT_MIN + 2 * PORT_RANGE  # Start after p2p and rpc ports"
      },
      {
        "sha": "3049ab9fe4ec1d8bbd8ea3b7cb72cd27d179578e",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -9,11 +9,12 @@\n This test takes 30 mins or more (up to 2 hours)\n \"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n import time\n import os\n \n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n MIN_BLOCKS_TO_KEEP = 288\n \n # Rescans start at the earliest block up to 2 hours before a key timestamp, so"
      },
      {
        "sha": "2f3c7a28e095acd9d7028e8e5f17cace5dd7b35e",
        "filename": "qa/rpc-tests/reindex.py",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -9,14 +9,13 @@\n - Stop the node and restart it with -reindex-chainstate. Verify that the node has reindexed up to block 3.\n \"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    start_nodes,\n-    stop_nodes,\n-    assert_equal,\n-)\n import time\n \n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal,\n+                                 start_nodes,\n+                                 stop_nodes)\n+\n class ReindexTest(BitcoinTestFramework):\n \n     def __init__(self):"
      },
      {
        "sha": "f415708a11b937668f24b80569f0ed464259d207",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,10 +4,10 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the RBF code.\"\"\"\n \n+from test_framework.mininode import *\n+from test_framework.script import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.script import *\n-from test_framework.mininode import *\n \n MAX_REPLACEMENT_LIMIT = 100\n "
      },
      {
        "sha": "dc98582470ee29039a031e983a9afe68bf26debf",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,15 +4,15 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the REST API.\"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-from struct import *\n-from io import BytesIO\n from codecs import encode\n-\n import http.client\n+from io import BytesIO\n+from struct import *\n import urllib.parse\n \n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n def deser_uint256(f):\n     r = 0\n     for i in range(8):"
      },
      {
        "sha": "a61d0806f68ae99de9eb29bba833ba2edbc5988b",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,10 +4,9 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test running bitcoind with the -rpcbind and -rpcallowip options.\"\"\"\n \n+from test_framework.netutil import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.netutil import *\n-\n \n class RPCBindTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "112ff616d934aae37f153773f67f3c4c78fe04c2",
        "filename": "qa/rpc-tests/rpcnamedargs.py",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/rpcnamedargs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/rpcnamedargs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcnamedargs.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -5,12 +5,9 @@\n \"\"\"Test using named arguments for RPCs.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    assert_equal,\n-    assert_raises_jsonrpc,\n-    start_nodes,\n-)\n-\n+from test_framework.util import (assert_equal,\n+                                 assert_raises_jsonrpc,\n+                                 start_nodes)\n \n class NamedArgumentTest(BitcoinTestFramework):\n     \"\"\""
      },
      {
        "sha": "7328b28dfe6d7609ec3bf856c910acefe0e8eaaa",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 22,
        "deletions": 5,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,13 +4,30 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the SegWit changeover logic.\"\"\"\n \n+from io import BytesIO\n+\n+from test_framework.address import (key_to_p2pkh,\n+                                    script_to_p2sh)\n+from test_framework.mininode import (COutPoint,\n+                                     CTransaction,\n+                                     CTxIn,\n+                                     CTxOut,\n+                                     FromHex,\n+                                     ripemd160,\n+                                     sha256)\n+from test_framework.script import (CScript,\n+                                   OP_0,\n+                                   OP_1,\n+                                   OP_2,\n+                                   OP_CHECKMULTISIG,\n+                                   OP_CHECKSIG,\n+                                   OP_DUP,\n+                                   OP_EQUAL,\n+                                   OP_EQUALVERIFY,\n+                                   OP_HASH160,\n+                                   hash160)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import sha256, ripemd160, CTransaction, CTxIn, COutPoint, CTxOut\n-from test_framework.address import script_to_p2sh, key_to_p2pkh\n-from test_framework.script import CScript, OP_HASH160, OP_CHECKSIG, OP_0, hash160, OP_EQUAL, OP_DUP, OP_EQUALVERIFY, OP_1, OP_2, OP_CHECKMULTISIG\n-from io import BytesIO\n-from test_framework.mininode import FromHex\n \n NODE_0 = 0\n NODE_1 = 1"
      },
      {
        "sha": "6e25411c15c6c75bb536d57cad1f835d5dcc1d22",
        "filename": "qa/rpc-tests/sendheaders.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/sendheaders.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -73,11 +73,11 @@\n    Expect: disconnect.\n \"\"\"\n \n+from test_framework.blocktools import (create_block,\n+                                       create_coinbase)\n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.blocktools import create_block, create_coinbase\n-\n \n direct_fetch_response_time = 0.05\n "
      },
      {
        "sha": "0ccb714272ed17f36ed96296b16d9b9fa1216980",
        "filename": "qa/rpc-tests/signrawtransactions.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/signrawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/signrawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signrawtransactions.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -7,7 +7,6 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-\n class SignRawTransactionsTest(BitcoinTestFramework):\n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "7a525e271de7a9cf7009f1b51ad860dddb71047b",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -5,6 +5,7 @@\n \"\"\"Test fee estimation code.\"\"\"\n \n from collections import OrderedDict\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n "
      },
      {
        "sha": "b98755885959485b3ab010dd6e4b812a6a057686",
        "filename": "qa/rpc-tests/wallet-accounts.py",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/wallet-accounts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/wallet-accounts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-accounts.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -13,10 +13,8 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    start_nodes,\n-    assert_equal,\n-)\n+from test_framework.util import (assert_equal,\n+                                 start_nodes)\n \n class WalletAccountsTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "76ed35b471bb8331a98fc44d68d9ffe4953ae659",
        "filename": "qa/rpc-tests/wallet-dump.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/wallet-dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/wallet-dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-dump.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -5,8 +5,10 @@\n \"\"\"Test the dumpwallet RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (start_nodes, start_node, assert_equal, bitcoind_processes)\n-\n+from test_framework.util import (assert_equal,\n+                                 bitcoind_processes,\n+                                 start_node,\n+                                 start_nodes)\n \n def read_dump(file_name, addrs, hd_master_addr_old):\n     \"\"\""
      },
      {
        "sha": "5ff8b5e4c0e74cf2ee214c1b42a1d2fc8c2dfb54",
        "filename": "qa/rpc-tests/wallet-hd.py",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-hd.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,16 +4,14 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test Hierarchical Deterministic wallet function.\"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    start_nodes,\n-    start_node,\n-    assert_equal,\n-    connect_nodes_bi,\n-)\n import os\n import shutil\n \n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes_bi,\n+                                 start_node,\n+                                 start_nodes)\n \n class WalletHDTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "11b5c9199e14355aed6332d49f711fc44b2b6431",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet.\"\"\"\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n "
      },
      {
        "sha": "f89a5e0a81dafbd0d1ff5c00ac6443cecad094e6",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -31,10 +31,12 @@\n and confirm again balances are correct.\n \"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n from random import randint\n import logging\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO, stream=sys.stdout)\n \n class WalletBackupTest(BitcoinTestFramework):"
      },
      {
        "sha": "f563e7525a7b33e62f41cef7748e1481b47fc314",
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -12,10 +12,10 @@\n - restart node 0 and verify that the confirmed transactions are still\n   available, but that the unconfirmed transaction has been zapped.\n \"\"\"\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-\n class ZapWalletTXesTest (BitcoinTestFramework):\n \n     def __init__(self):"
      },
      {
        "sha": "7f042d19ac22f5994100057e626c8ac20b84f8ce",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/506e23280daf2c3d379d979a189cbaf03d13a001/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=506e23280daf2c3d379d979a189cbaf03d13a001",
        "patch": "@@ -4,10 +4,11 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the ZMQ API.\"\"\"\n \n+import struct\n+import zmq\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import zmq\n-import struct\n \n class ZMQTest (BitcoinTestFramework):\n "
      }
    ]
  },
  {
    "sha": "f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjg3ZThkZTFlZGY5YTBiMzQyYjNlNWI5OGI4OGU3YmIxYTJiZDQ3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-26T17:50:19Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-27T02:49:36Z"
      },
      "message": "Remove wildcard imports\n\nWildcard imports (`from foo import *`) are generally considered bad\npractice in Python. They make it unclear which names are present in\nthe namespace, which is confusing for both human readers and static\nanalysis tools.\n\nThis commit removes wildcard imports from all the test scripts and\nreplaces them with explicit imports.",
      "tree": {
        "sha": "3bf97ec63e112e8ad6f1f53f2615570ba5be19f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3bf97ec63e112e8ad6f1f53f2615570ba5be19f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "506e23280daf2c3d379d979a189cbaf03d13a001",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/506e23280daf2c3d379d979a189cbaf03d13a001",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/506e23280daf2c3d379d979a189cbaf03d13a001"
      }
    ],
    "stats": {
      "total": 701,
      "additions": 613,
      "deletions": 88
    },
    "files": [
      {
        "sha": "95323bebb6ec1784651f2086300825f7745e8f4a",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -11,10 +11,17 @@\n  no effect on transactions which are already conflicted or abandoned.\n \"\"\"\n \n+from decimal import Decimal\n import urllib.parse\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes,\n+                                 p2p_port,\n+                                 start_node,\n+                                 stop_node,\n+                                 sync_blocks,\n+                                 sync_mempools)\n \n class AbandonConflictTest(BitcoinTestFramework):\n     def __init__(self):"
      },
      {
        "sha": "a37da34a0f9b0874a27c8cf4aa98544ef0e17bff",
        "filename": "qa/rpc-tests/assumevalid.py",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/assumevalid.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -33,10 +33,25 @@\n from test_framework.blocktools import (create_block,\n                                        create_coinbase)\n from test_framework.key import CECKey\n-from test_framework.mininode import *\n-from test_framework.script import *\n+from test_framework.mininode import (CBlockHeader,\n+                                     COutPoint,\n+                                     CTransaction,\n+                                     CTxIn,\n+                                     CTxOut,\n+                                     NetworkThread,\n+                                     NodeConn,\n+                                     SingleNodeConnCB,\n+                                     msg_block,\n+                                     msg_headers,\n+                                     wait_until)\n+from test_framework.script import (CScript,\n+                                   CTransaction,\n+                                   CTxOut,\n+                                   OP_TRUE,)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 p2p_port,\n+                                 start_node)\n \n class BaseNode(SingleNodeConnCB):\n     def __init__(self):"
      },
      {
        "sha": "6d11b6be31edacd1c0d9438bdd29fe4308e6fdf1",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -30,7 +30,8 @@\n                                    OP_CHECKLOCKTIMEVERIFY,\n                                    OP_DROP)\n from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n+from test_framework.util import (hex_str_to_bytes,\n+                                 start_nodes)\n \n def cltv_invalidate(tx):\n     '''Modify the signature in vin 0 of the tx to fail CLTV"
      },
      {
        "sha": "49f76669843ecf3f790487dbe8b30ed11e2ebd42",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,9 @@\n \"\"\"Test the CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 connect_nodes,\n+                                 start_node)\n \n class BIP65Test(BitcoinTestFramework):\n     def __init__(self):"
      },
      {
        "sha": "41d744e9a92b3183d8a16ccc60553de2016cfc55",
        "filename": "qa/rpc-tests/bip68-112-113-p2p.py",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-112-113-p2p.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -43,6 +43,7 @@\n bip112tx_special - test negative argument to OP_CSV\n \"\"\"\n \n+from decimal import Decimal\n from io import BytesIO\n import time\n \n@@ -53,9 +54,15 @@\n from test_framework.mininode import (ToHex,\n                                      CTransaction,\n                                      NetworkThread)\n-from test_framework.script import *\n+from test_framework.script import (CScript,\n+                                   CTransaction,\n+                                   OP_CHECKSEQUENCEVERIFY,\n+                                   OP_DROP)\n from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 get_bip9_status,\n+                                 hex_str_to_bytes,\n+                                 start_nodes)\n \n base_relative_locktime = 10\n seq_disable_flag = 1<<31"
      },
      {
        "sha": "fda05750a01f609156df8d652f136ce5fe8d98b7",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,10 +4,25 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test BIP68 implementation.\"\"\"\n \n-from test_framework.blocktools import *\n+import time\n+\n+from test_framework.blocktools import (COIN,\n+                                       COutPoint,\n+                                       CScript,\n+                                       CTransaction,\n+                                       CTxIn,\n+                                       CTxOut,\n+                                       create_block,\n+                                       create_coinbase)\n from test_framework.mininode import ToHex, FromHex\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 connect_nodes,\n+                                 get_bip9_status,\n+                                 satoshi_round,\n+                                 start_node,\n+                                 sync_blocks)\n \n SEQUENCE_LOCKTIME_DISABLE_FLAG = (1<<31)\n SEQUENCE_LOCKTIME_TYPE_FLAG = (1<<22) # this means use time (0 means height)"
      },
      {
        "sha": "5769eaca45c9757805693cce12d7498b92539582",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -32,7 +32,12 @@\n                                    OP_CHECKSEQUENCEVERIFY,\n                                    OP_DROP)\n from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 bytes_to_hex_str,\n+                                 hex_str_to_bytes,\n+                                 shutil,\n+                                 start_nodes,\n+                                 stop_nodes)\n \n class BIP9SoftForksTest(ComparisonTestFramework):\n "
      },
      {
        "sha": "cb65445d8cf02a6511701ca908220c51b3d07807",
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -27,7 +27,8 @@\n                                      NetworkThread)\n from test_framework.script import CScript\n from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n+from test_framework.util import (hex_str_to_bytes,\n+                                 start_nodes)\n \n # A canonical signature consists of: \n # <30> <total len> <02> <len R> <R> <02> <len S> <S> <hashtype>"
      },
      {
        "sha": "1996490da39648e134b476b9fc2d50af7657eabc",
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,9 @@\n \"\"\"Test the BIP66 changeover logic.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 connect_nodes,\n+                                 start_node)\n \n class BIP66Test(BitcoinTestFramework):\n     def __init__(self):"
      },
      {
        "sha": "c161262ae1111224caaf33e122c176ac27917ec3",
        "filename": "qa/rpc-tests/bumpfee.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bumpfee.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,6 +4,7 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the bumpfee RPC.\"\"\"\n \n+from decimal import Decimal\n import io\n \n from segwit import send_to_witness\n@@ -12,7 +13,16 @@\n                                        create_coinbase)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.mininode import CTransaction\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_raises_message,\n+                                 bitcoind_processes,\n+                                 bytes_to_hex_str,\n+                                 connect_nodes_bi,\n+                                 hex_str_to_bytes,\n+                                 start_node,\n+                                 start_nodes,\n+                                 sync_mempools)\n \n # Sequence number that is BIP 125 opt-in and BIP 68-compliant\n BIP125_SEQUENCE_NUMBER = 0xfffffffd"
      },
      {
        "sha": "f14c9373407cb8b40621e18025630d06967938c3",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -6,9 +6,15 @@\n \n from io import BytesIO\n \n-from test_framework.mininode import *\n+from test_framework.mininode import ( BytesIO,\n+                                     CTransaction,\n+                                     bytes_to_hex_str,\n+                                     hex_str_to_bytes)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 bytes_to_hex_str,\n+                                 hex_str_to_bytes,\n+                                 start_nodes)\n \n class DecodeScriptTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "fba1e8397f09558a037213b887695dcd4fd166be",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -9,7 +9,8 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 start_nodes)\n \n class DisableWalletTest (BitcoinTestFramework):\n "
      },
      {
        "sha": "07e98d692ea96ba6837ff192437f715508efcf5f",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,8 +4,11 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the -alertnotify option.\"\"\"\n \n+import os\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (connect_nodes,\n+                                 start_node)\n \n class ForkNotifyTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "1f64822879d8d495a8036e3820b0ceafc2a50761",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,8 +4,18 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the fundrawtransaction RPC.\"\"\"\n \n+from decimal import Decimal\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_fee_amount,\n+                                 assert_greater_than,\n+                                 assert_greater_than_or_equal,\n+                                 connect_nodes_bi,\n+                                 count_bytes,\n+                                 start_nodes,\n+                                 stop_node)\n \n def get_unspent(listunspent, amount):\n     for utx in listunspent:"
      },
      {
        "sha": "3d24070a7c2b31ea37b9208c417ea2f7024f609c",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,10 +4,12 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test longpolling with getblocktemplate.\"\"\"\n \n+from decimal import Decimal\n import threading\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (get_rpc_proxy,\n+                                 random_transaction)\n \n class LongpollThread(threading.Thread):\n     def __init__(self, node):"
      },
      {
        "sha": "e14edc0531174623af80da528df58c5a7f9f5761",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -9,7 +9,9 @@\n from struct import pack\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_raises,\n+                                 connect_nodes_bi)\n \n def b2x(b):\n     return b2a_hex(b).decode('ascii')"
      },
      {
        "sha": "51aa02204237be86b7bc4c5044b45fcd4216feb6",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -8,7 +8,8 @@\n import urllib.parse\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 str_to_b64str)\n \n class HTTPBasicsTest (BitcoinTestFramework):\n     def __init__(self):"
      },
      {
        "sha": "bd753545a395d268a4ebfe9abc96b069050da274",
        "filename": "qa/rpc-tests/importmulti.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importmulti.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,11 @@\n \"\"\"Test the importmulti RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_raises_message,\n+                                 start_nodes,\n+                                 stop_nodes)\n \n class ImportMultiTest (BitcoinTestFramework):\n     def __init__(self):"
      },
      {
        "sha": "b2d1fc4e2903ad972124d019893dffc5f61c842c",
        "filename": "qa/rpc-tests/importprunedfunds.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importprunedfunds.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,8 +4,13 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the importprunedfunds and removeprunedfunds RPCs.\"\"\"\n \n+from decimal import Decimal\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 connect_nodes_bi,\n+                                 start_nodes)\n \n class ImportPrunedFundsTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "b18b9d1af3617ae4c61553cf3659580164277847",
        "filename": "qa/rpc-tests/invalidateblock.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidateblock.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,8 +4,12 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the invalidateblock RPC.\"\"\"\n \n+import time\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (connect_nodes_bi,\n+                                 start_node,\n+                                 sync_blocks)\n \n class InvalidateTest(BitcoinTestFramework):\n     "
      },
      {
        "sha": "b110a964ba4256d3ed91be2ab48d53a047be7720",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -14,13 +14,16 @@\n import copy\n import time\n \n-from test_framework.blocktools import *\n+from test_framework.blocktools import (COIN,\n+                                       create_block,\n+                                       create_coinbase,\n+                                       create_transaction)\n from test_framework.comptool import (TestManager,\n                                      TestInstance,\n                                      RejectResult)\n from test_framework.mininode import NetworkThread\n from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n+from test_framework.util import assert_equal \n \n # Use the ComparisonTestFramework with 1 node: only use --testbinary.\n class InvalidBlockRequestTest(ComparisonTestFramework):"
      },
      {
        "sha": "d781c6a4ca3a53c3eceef14a9f26683c326a65d7",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -7,7 +7,12 @@\n In this test we connect to one node over p2p, and test tx requests.\n \"\"\"\n \n-from test_framework.blocktools import *\n+import time\n+\n+from test_framework.blocktools import (COIN,\n+                                       create_block,\n+                                       create_coinbase,\n+                                       create_transaction)\n from test_framework.comptool import (TestManager,\n                                      TestInstance,\n                                      RejectResult)"
      },
      {
        "sha": "bc3cdab9ef8591f05989c0a41b1da97d7d56c042",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,8 +4,13 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\"\n \n+import time\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 bitcoind_processes,\n+                                 start_node)\n \n class KeyPoolTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "1f69f21bdfce9931eec22686b1bf1ecaf6366ae2",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,10 +4,17 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the listtransactions API.\"\"\"\n \n+from decimal import Decimal\n from io import BytesIO\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_array_result,\n+                                 assert_equal,\n+                                 bytes_to_hex_str,\n+                                 enable_mocktime,\n+                                 hex_str_to_bytes,\n+                                 start_nodes,\n+                                 sync_mempools)\n from test_framework.mininode import (CTransaction,\n                                      COIN)\n "
      },
      {
        "sha": "c07b5873edf5ddf6d2e35269e14c9fbfa52ef434",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -11,10 +11,21 @@\n \"\"\"\n \n import logging\n-\n-from test_framework.mininode import *\n+import os\n+import random\n+import time\n+\n+from test_framework.mininode import (CInv,\n+                                     EarlyDisconnectError,\n+                                     NetworkThread,\n+                                     NodeConn,\n+                                     NodeConnCB,\n+                                     logging,\n+                                     mininode_lock,\n+                                     msg_inv)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (p2p_port,\n+                                 start_nodes)\n \n MAX_REQUESTS = 128\n "
      },
      {
        "sha": "f5f968963d5cd5a372877fa8c8f1bb1a5ffea71e",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -13,9 +13,20 @@\n \n import time\n \n-from test_framework.mininode import *\n+from test_framework.mininode import (CInv,\n+                                     NetworkThread,\n+                                     NodeConn,\n+                                     NodeConnCB,\n+                                     msg_getdata,\n+                                     msg_ping,\n+                                     msg_pong,\n+                                     wait_until)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 mine_large_block,\n+                                 p2p_port,\n+                                 start_node,\n+                                 stop_node)\n \n # TestNode: bare-bones \"peer\".  Used mostly as a conduit for a test to sending\n # p2p messages to a node, generating the messages in the main testing logic."
      },
      {
        "sha": "091c55770936bdcdd22826d01d2dcd0464f4c7bc",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,10 @@\n \"\"\"Test mempool limiting together/eviction with the wallet.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (create_confirmed_utxos,\n+                                 create_lots_of_big_transactions,\n+                                 gen_return_txouts,\n+                                 start_node)\n \n class MempoolLimitTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "6c5c82c1acc196b6aa526939e7fae3c585b6daea",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,9 +4,17 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test descendant package tracking code.\"\"\"\n \n+from decimal import Decimal\n+\n from test_framework.mininode import COIN\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 connect_nodes,\n+                                 satoshi_round,\n+                                 start_node,\n+                                 sync_blocks,\n+                                 sync_mempools)\n \n MAX_ANCESTORS = 25\n MAX_DESCENDANTS = 25"
      },
      {
        "sha": "c7486f117cf3506101cd0e434d6b52a4b2aa18e6",
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -9,7 +9,12 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_raises,\n+                                 connect_nodes,\n+                                 create_tx,\n+                                 start_node)\n \n # Create one-input, one-output, no-fee transaction:\n class MempoolCoinbaseTest(BitcoinTestFramework):"
      },
      {
        "sha": "af299a858fa52961b843b918dc00bea9bf699642",
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,9 @@\n \"\"\"Test resurrection of mined transactions when the blockchain is re-organized.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 create_tx,\n+                                 start_node)\n \n # Create one-input, one-output, no-fee transaction:\n class MempoolCoinbaseTest(BitcoinTestFramework):"
      },
      {
        "sha": "f29a47257ef6f67fc2245ffd4e72f2129f1a0886",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -13,7 +13,11 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_raises,\n+                                 create_tx,\n+                                 start_node)\n \n # Create one-input, one-output, no-fee transaction:\n class MempoolSpendCoinbaseTest(BitcoinTestFramework):"
      },
      {
        "sha": "d0f6995d46b45cf2ad48453ecd8d04ba8ba67528",
        "filename": "qa/rpc-tests/merkle_blocks.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/merkle_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/merkle_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/merkle_blocks.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,11 @@\n \"\"\"Test gettxoutproof and verifytxoutproof RPCs.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_raises,\n+                                 connect_nodes,\n+                                 start_node)\n \n class MerkleBlockTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "98f0382b2b8c3badab0752ea9e57cda6bc1b2a8e",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,10 +4,15 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node handling.\"\"\"\n \n+import time\n import urllib.parse\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes_bi,\n+                                 p2p_port,\n+                                 start_node,\n+                                 stop_node)\n \n class NodeHandlingTest (BitcoinTestFramework):\n "
      },
      {
        "sha": "b2efd5e6e31e031d5358ab27b7d30ee9aecffa41",
        "filename": "qa/rpc-tests/nulldummy.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nulldummy.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -17,7 +17,11 @@\n import time\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 bytes_to_hex_str,\n+                                 hex_str_to_bytes,\n+                                 start_nodes)\n from test_framework.mininode import (CTransaction,\n                                      NetworkThread)\n from test_framework.blocktools import (create_coinbase,"
      },
      {
        "sha": "b28b11a71b3e27448dc83b8b1be898ed7204cd76",
        "filename": "qa/rpc-tests/p2p-acceptblock.py",
        "status": "modified",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-acceptblock.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -48,13 +48,26 @@\n    Node0 should process and the tip should advance.\n \"\"\"\n \n+import os\n import time\n \n from test_framework.blocktools import (create_block,\n                                        create_coinbase)\n-from test_framework.mininode import *\n+from test_framework.mininode import (CBlockHeader,\n+                                     CInv,\n+                                     NetworkThread,\n+                                     NodeConn,\n+                                     NodeConnCB,\n+                                     mininode_lock,\n+                                     msg_block,\n+                                     msg_headers,\n+                                     msg_inv,\n+                                     msg_ping,\n+                                     msg_pong)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 p2p_port,\n+                                 start_node)\n \n # TestNode: bare-bones \"peer\".  Used mostly as a conduit for a test to sending\n # p2p messages to a node, generating the messages in the main testing logic."
      },
      {
        "sha": "189d4a6fce4eaf53de02325ff051442db27a8d8a",
        "filename": "qa/rpc-tests/p2p-compactblocks.py",
        "status": "modified",
        "additions": 48,
        "deletions": 2,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-compactblocks.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -8,14 +8,60 @@\n Version 2 compact blocks are post-segwit (wtxids)\n \"\"\"\n \n+from decimal import Decimal\n+import random\n+\n from test_framework.blocktools import (create_block,\n                                        create_coinbase,\n                                        add_witness_commitment)\n-from test_framework.mininode import *\n+from test_framework.mininode import (BlockTransactions,\n+                                     BlockTransactionsRequest,\n+                                     CBlock,\n+                                     CBlockHeader,\n+                                     CInv,\n+                                     COutPoint,\n+                                     CTransaction,\n+                                     CTxIn,\n+                                     CTxInWitness,\n+                                     CTxOut,\n+                                     FromHex,\n+                                     HeaderAndShortIDs,\n+                                     MSG_WITNESS_FLAG,\n+                                     NODE_NETWORK,\n+                                     NODE_WITNESS,\n+                                     NetworkThread,\n+                                     NodeConn,\n+                                     P2PHeaderAndShortIDs,\n+                                     PrefilledTransaction,\n+                                     SingleNodeConnCB,\n+                                     ToHex,\n+                                     calculate_shortid,\n+                                     mininode_lock,\n+                                     msg_block,\n+                                     msg_blocktxn,\n+                                     msg_cmpctblock,\n+                                     msg_getblocktxn,\n+                                     msg_getdata,\n+                                     msg_getheaders,\n+                                     msg_headers,\n+                                     msg_inv,\n+                                     msg_sendcmpct,\n+                                     msg_sendheaders,\n+                                     msg_tx,\n+                                     msg_witness_block,\n+                                     msg_witness_blocktxn,\n+                                     ser_uint256,\n+                                     wait_until)\n from test_framework.script import (CScript,\n                                    OP_TRUE)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes,\n+                                 get_bip9_status,\n+                                 p2p_port,\n+                                 satoshi_round,\n+                                 start_nodes,\n+                                 sync_blocks)\n \n # TestNode: A peer we use to send messages to bitcoind, and store responses.\n class TestNode(SingleNodeConnCB):"
      },
      {
        "sha": "4b11f418892d28beb09f3875385a611dbf49ac35",
        "filename": "qa/rpc-tests/p2p-feefilter.py",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-feefilter.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,11 +4,20 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test processing of feefilter messages.\"\"\"\n \n+from decimal import Decimal\n import time\n \n-from test_framework.mininode import *\n+from test_framework.mininode import (NetworkThread,\n+                                     NodeConn,\n+                                     SingleNodeConnCB,\n+                                     mininode_lock,\n+                                     msg_feefilter)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (connect_nodes,\n+                                 p2p_port,\n+                                 start_node,\n+                                 sync_blocks,\n+                                 sync_mempools)\n \n def hashToHex(hash):\n     return format(hash, '064x')"
      },
      {
        "sha": "168aaeeb89e149af073f71897e3d06c45d0301be",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 53,
        "deletions": 4,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -11,18 +11,67 @@\n each test.\n \"\"\"\n \n+import copy\n import time\n import struct\n \n-from test_framework.blocktools import *\n+from test_framework.blocktools import (CBlock,\n+                                       COIN,\n+                                       COutPoint,\n+                                       CScript,\n+                                       CTransaction,\n+                                       CTxIn,\n+                                       CTxOut,\n+                                       OP_CHECKSIG,\n+                                       OP_RETURN,\n+                                       OP_TRUE,\n+                                       create_block,\n+                                       create_coinbase,\n+                                       create_transaction,\n+                                       get_legacy_sigopcount_block,\n+                                       ser_uint256,\n+                                       uint256_from_str)\n from test_framework.comptool import (TestManager,\n                                      TestInstance,\n                                      RejectResult)\n from test_framework.key import CECKey\n-from test_framework.mininode import *\n-from test_framework.script import *\n+from test_framework.mininode import (CBlock,\n+                                     CBlockHeader,\n+                                     COIN,\n+                                     COutPoint,\n+                                     CTransaction,\n+                                     CTxIn,\n+                                     CTxOut,\n+                                     MAX_BLOCK_BASE_SIZE,\n+                                     NetworkThread,\n+                                     ser_uint256,\n+                                     uint256_from_compact,\n+                                     uint256_from_str)\n+from test_framework.script import (CScript,\n+                                   CTransaction,\n+                                   CTxOut,\n+                                   MAX_SCRIPT_ELEMENT_SIZE,\n+                                   OP_2DUP,\n+                                   OP_CHECKMULTISIG,\n+                                   OP_CHECKMULTISIGVERIFY,\n+                                   OP_CHECKSIG,\n+                                   OP_CHECKSIGVERIFY,\n+                                   OP_ELSE,\n+                                   OP_ENDIF,\n+                                   OP_EQUAL,\n+                                   OP_FALSE,\n+                                   OP_HASH160,\n+                                   OP_IF,\n+                                   OP_INVALIDOPCODE,\n+                                   OP_RETURN,\n+                                   OP_TRUE,\n+                                   SIGHASH_ALL,\n+                                   SignatureHash,\n+                                   hash160,\n+                                   ser_uint256,\n+                                   uint256_from_str)\n from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n+from test_framework.util import assert_equal\n \n class PreviousSpendableOutput(object):\n     def __init__(self, tx = CTransaction(), n = -1):"
      },
      {
        "sha": "3929f827f1d9ea6df97851d7878f6e737f4698ba",
        "filename": "qa/rpc-tests/p2p-leaktests.py",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-leaktests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-leaktests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-leaktests.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -11,9 +11,18 @@\n into sending us something it shouldn't.\n \"\"\"\n \n-from test_framework.mininode import *\n+import time\n+\n+from test_framework.mininode import (NetworkThread,\n+                                     NodeConn,\n+                                     NodeConnCB,\n+                                     msg_getaddr,\n+                                     msg_ping,\n+                                     msg_verack,\n+                                     wait_until)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (p2p_port,\n+                                 start_nodes)\n \n banscore = 10\n "
      },
      {
        "sha": "afac78a264a02611febfcdfd3fc3b19b598c50cf",
        "filename": "qa/rpc-tests/p2p-mempool.py",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-mempool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-mempool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-mempool.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -8,9 +8,17 @@\n filters are not enabled.\n \"\"\"\n \n-from test_framework.mininode import *\n+from test_framework.mininode import (NetworkThread,\n+                                     NodeConn,\n+                                     NodeConnCB,\n+                                     msg_mempool,\n+                                     msg_ping,\n+                                     msg_pong,\n+                                     wait_until)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 p2p_port,\n+                                 start_node)\n \n class TestNode(NodeConnCB):\n     def __init__(self):"
      },
      {
        "sha": "b4e0117f11a97e625dbcf1068375ba6c5078fd72",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 76,
        "deletions": 3,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -6,6 +6,7 @@\n \n from binascii import hexlify\n import random\n+import struct\n import time\n \n from test_framework.blocktools import (create_block,\n@@ -14,10 +15,82 @@\n                                        WITNESS_COMMITMENT_HEADER)\n from test_framework.key import (CECKey,\n                                 CPubKey)\n-from test_framework.mininode import *\n-from test_framework.script import *\n+from test_framework.mininode import (CBlock,\n+                                     CBlockHeader,\n+                                     CInv,\n+                                     COutPoint,\n+                                     CTransaction,\n+                                     CTxIn,\n+                                     CTxInWitness,\n+                                     CTxOut,\n+                                     CTxWitness,\n+                                     MAX_BLOCK_BASE_SIZE,\n+                                     MSG_WITNESS_FLAG,\n+                                     NODE_NETWORK,\n+                                     NODE_WITNESS,\n+                                     NetworkThread,\n+                                     NodeConn,\n+                                     NodeConnCB,\n+                                     bytes_to_hex_str,\n+                                     hash256,\n+                                     hex_str_to_bytes,\n+                                     mininode_lock,\n+                                     msg_block,\n+                                     msg_getdata,\n+                                     msg_headers,\n+                                     msg_inv,\n+                                     msg_ping,\n+                                     msg_pong,\n+                                     msg_tx,\n+                                     msg_witness_block,\n+                                     msg_witness_tx,\n+                                     ser_uint256,\n+                                     ser_vector,\n+                                     sha256,\n+                                     uint256_from_str)\n+from test_framework.script import (CScript,\n+                                   CScriptNum,\n+                                   CScriptOp,\n+                                   CTransaction,\n+                                   CTxOut,\n+                                   OP_0,\n+                                   OP_1,\n+                                   OP_16,\n+                                   OP_2DROP,\n+                                   OP_CHECKMULTISIG,\n+                                   OP_CHECKSIG,\n+                                   OP_DROP,\n+                                   OP_DUP,\n+                                   OP_ELSE,\n+                                   OP_ENDIF,\n+                                   OP_EQUAL,\n+                                   OP_EQUALVERIFY,\n+                                   OP_HASH160,\n+                                   OP_IF,\n+                                   OP_RETURN,\n+                                   OP_TRUE,\n+                                   SIGHASH_ALL,\n+                                   SIGHASH_ANYONECANPAY,\n+                                   SIGHASH_NONE,\n+                                   SIGHASH_SINGLE,\n+                                   SegwitVersion1SignatureHash,\n+                                   SignatureHash,\n+                                   hash160,\n+                                   hash256,\n+                                   ser_uint256,\n+                                   sha256,\n+                                   uint256_from_str)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 bytes_to_hex_str,\n+                                 connect_nodes,\n+                                 get_bip9_status,\n+                                 hex_str_to_bytes,\n+                                 p2p_port,\n+                                 start_node,\n+                                 stop_node,\n+                                 sync_blocks,\n+                                 sync_mempools)\n \n # The versionbit bit used to signal activation of SegWit\n VB_WITNESS_BIT = 1"
      },
      {
        "sha": "c496693cc8e4f4ef3360745141ade507fa4fbc13",
        "filename": "qa/rpc-tests/p2p-timeouts.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-timeouts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-timeouts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-timeouts.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -23,9 +23,13 @@\n \n from time import sleep\n \n-from test_framework.mininode import *\n+from test_framework.mininode import (NetworkThread,\n+                                     NodeConn,\n+                                     SingleNodeConnCB,\n+                                     msg_ping)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (p2p_port,\n+                                 start_nodes)\n \n class TestNode(SingleNodeConnCB):\n     def __init__(self):"
      },
      {
        "sha": "e4a577b5642483ab37f49243d35c1c9c1040c910",
        "filename": "qa/rpc-tests/p2p-versionbits-warning.py",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-versionbits-warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/p2p-versionbits-warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-versionbits-warning.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -8,14 +8,23 @@\n soft-forks, and test that warning alerts are generated.\n \"\"\"\n \n+import os\n import re\n import time\n \n from test_framework.blocktools import (create_block,\n                                        create_coinbase)\n-from test_framework.mininode import *\n+from test_framework.mininode import (NetworkThread,\n+                                     NodeConn,\n+                                     NodeConnCB,\n+                                     mininode_lock,\n+                                     msg_block,\n+                                     msg_ping,\n+                                     msg_pong)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (p2p_port,\n+                                 start_nodes,\n+                                 stop_nodes)\n \n VB_PERIOD = 144 # versionbits period length for regtest\n VB_THRESHOLD = 108 # versionbits activation threshold for regtest"
      },
      {
        "sha": "7db78b3ba383e70f424b7e56e9b5491ba14a9a8b",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -7,7 +7,12 @@\n from test_framework.mininode import (COIN,\n                                      MAX_BLOCK_BASE_SIZE)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 create_confirmed_utxos,\n+                                 create_lots_of_big_transactions,\n+                                 gen_return_txouts,\n+                                 start_node)\n \n class PrioritiseTransactionTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "4a94ebfb3ccbca45bb99000fbd1eac98b91ab377",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -13,7 +13,14 @@\n import os\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_greater_than,\n+                                 assert_raises_message,\n+                                 connect_nodes,\n+                                 mine_large_block,\n+                                 start_node,\n+                                 sync_blocks)\n \n MIN_BLOCKS_TO_KEEP = 288\n "
      },
      {
        "sha": "300a4e0baddcb8891eb94f53c2d23d5cf4bf3262",
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -12,8 +12,14 @@\n    - getrawtransaction\n \"\"\"\n \n+from decimal import Decimal\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_raises,\n+                                 connect_nodes_bi,\n+                                 start_nodes)\n \n # Create one-input, one-output, no-fee transaction:\n class RawTransactionsTest(BitcoinTestFramework):"
      },
      {
        "sha": "938f8c11c02931f61d676edba605c13492b2a55d",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,8 +4,12 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the listreceivedbyaddress RPC.\"\"\"\n \n+from decimal import Decimal\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_array_result,\n+                                 enable_mocktime,\n+                                 start_nodes)\n \n def get_sub_array_from_array(object_array, to_match):\n     '''"
      },
      {
        "sha": "0352ae9fe4c59aac5e8e1984729cf7ed4c7cb5da",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,10 +4,21 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the RBF code.\"\"\"\n \n-from test_framework.mininode import *\n-from test_framework.script import *\n+from test_framework.mininode import (COIN,\n+                                     COutPoint,\n+                                     CTransaction,\n+                                     CTxIn,\n+                                     CTxOut,\n+                                     bytes_to_hex_str)\n+from test_framework.script import (CScript,\n+                                   CTransaction,\n+                                   CTxOut)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 bytes_to_hex_str,\n+                                 satoshi_round,\n+                                 start_node)\n \n MAX_REPLACEMENT_LIMIT = 100\n "
      },
      {
        "sha": "7614c58a7ff534eb28cd906a0a4952e890b1b8e0",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,13 +5,20 @@\n \"\"\"Test the REST API.\"\"\"\n \n from codecs import encode\n+from decimal import Decimal\n import http.client\n from io import BytesIO\n-from struct import *\n+import json\n+from struct import (pack,\n+                    unpack)\n import urllib.parse\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 assert_greater_than,\n+                                 connect_nodes_bi,\n+                                 hex_str_to_bytes,\n+                                 start_nodes)\n \n def deser_uint256(f):\n     r = 0"
      },
      {
        "sha": "f4caec7fb2456ea06366734bae97772f8c47828d",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,9 +4,20 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test running bitcoind with the -rpcbind and -rpcallowip options.\"\"\"\n \n-from test_framework.netutil import *\n+import sys\n+\n+from test_framework.netutil import (addr_to_hex,\n+                                    all_interfaces,\n+                                    get_bind_addrs)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 bitcoind_processes,\n+                                 get_rpc_proxy,\n+                                 rpc_port,\n+                                 rpc_url,\n+                                 start_nodes,\n+                                 stop_nodes)\n \n class RPCBindTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "bb563eb1410d3529a857c17ce5447812d2f3b7e5",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,6 +4,7 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the SegWit changeover logic.\"\"\"\n \n+from decimal import Decimal\n from io import BytesIO\n \n from test_framework.address import (key_to_p2pkh,\n@@ -27,7 +28,13 @@\n                                    OP_HASH160,\n                                    hash160)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 bytes_to_hex_str,\n+                                 connect_nodes,\n+                                 hex_str_to_bytes,\n+                                 start_node,\n+                                 sync_blocks)\n \n NODE_0 = 0\n NODE_1 = 1"
      },
      {
        "sha": "f25803f76ddae02262d078d0b3c2489405d95e20",
        "filename": "qa/rpc-tests/sendheaders.py",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/sendheaders.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -75,9 +75,26 @@\n \n from test_framework.blocktools import (create_block,\n                                        create_coinbase)\n-from test_framework.mininode import *\n+from test_framework.mininode import (CBlockHeader,\n+                                     CInv,\n+                                     NetworkThread,\n+                                     NodeConn,\n+                                     SingleNodeConnCB,\n+                                     mininode_lock,\n+                                     msg_block,\n+                                     msg_getblocks,\n+                                     msg_getdata,\n+                                     msg_getheaders,\n+                                     msg_headers,\n+                                     msg_inv,\n+                                     msg_sendheaders,\n+                                     wait_until)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes,\n+                                 p2p_port,\n+                                 start_nodes,\n+                                 sync_blocks)\n \n direct_fetch_response_time = 0.05\n "
      },
      {
        "sha": "82b1a2fc088cc48b8965644196444198a48276a1",
        "filename": "qa/rpc-tests/signmessages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/signmessages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/signmessages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signmessages.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,7 @@\n \"\"\"Test RPC commands for signing and verifying messages.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import start_nodes\n \n class SignMessagesTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "ec837e16d8978cac98b6b7004d3424ddd808cb0a",
        "filename": "qa/rpc-tests/signrawtransactions.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/signrawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/signrawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signrawtransactions.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,10 @@\n \"\"\"Test transaction signing using the signrawtransaction RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_raises,\n+                                 start_nodes)\n \n class SignRawTransactionsTest(BitcoinTestFramework):\n     def __init__(self):"
      },
      {
        "sha": "0d9d9b78d3414629e4f1443dbe4e17875cd96091",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,9 +5,16 @@\n \"\"\"Test fee estimation code.\"\"\"\n \n from collections import OrderedDict\n+from decimal import Decimal\n+import random\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes,\n+                                 satoshi_round,\n+                                 start_node,\n+                                 sync_blocks,\n+                                 sync_mempools)\n \n # Construct 2 trivial P2SH's and the ScriptSigs that spend them\n # So we can create many many transactions without needing to spend"
      },
      {
        "sha": "2b04c598810527600bb5f14afd9a3a147deb630a",
        "filename": "qa/rpc-tests/txn_clone.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_clone.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -5,7 +5,9 @@\n \"\"\"Test the wallet accounts properly when there are cloned transactions with malleated scriptsigs.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes,\n+                                 sync_blocks)\n \n class TxnMallTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "4de6e8e59b5cf4b8786aaad7fea521779245f478",
        "filename": "qa/rpc-tests/txn_doublespend.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_doublespend.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,8 +4,13 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet accounts properly when there is a double-spend conflict.\"\"\"\n \n+from decimal import Decimal\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes,\n+                                 find_output,\n+                                 sync_blocks)\n \n class TxnMallTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "8872657dc5a3c8086a26404d45ce8b284d5fcb19",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -4,8 +4,23 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet.\"\"\"\n \n+from decimal import Decimal\n+import time\n+\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_array_result,\n+                                 assert_equal,\n+                                 assert_fee_amount,\n+                                 assert_raises_message,\n+                                 connect_nodes_bi,\n+                                 count_bytes,\n+                                 start_node,\n+                                 start_nodes,\n+                                 stop_node,\n+                                 stop_nodes,\n+                                 sync_blocks,\n+                                 sync_mempools)\n \n class WalletTest (BitcoinTestFramework):\n "
      },
      {
        "sha": "94c4b0734100fad340af36634a9a8e47ec5d98f9",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -31,11 +31,21 @@\n and confirm again balances are correct.\n \"\"\"\n \n-from random import randint\n+from decimal import Decimal\n import logging\n+import os\n+import sys\n+from random import randint\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 connect_nodes,\n+                                 shutil,\n+                                 start_node,\n+                                 start_nodes,\n+                                 stop_node,\n+                                 sync_blocks,\n+                                 sync_mempools)\n \n logging.basicConfig(format='%(levelname)s: %(message)s', level=logging.INFO, stream=sys.stdout)\n "
      },
      {
        "sha": "641b237977cfe0100bbdb62cf398b438a9c7c08e",
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -14,7 +14,13 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (JSONRPCException,\n+                                 assert_equal,\n+                                 assert_raises,\n+                                 bitcoind_processes,\n+                                 connect_nodes_bi,\n+                                 start_node,\n+                                 start_nodes)\n \n class ZapWalletTXesTest (BitcoinTestFramework):\n "
      },
      {
        "sha": "4340deec5f1b1e5bc23bc362c4e7bbf1bed1adca",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "patch": "@@ -8,7 +8,9 @@\n import zmq\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 bytes_to_hex_str,\n+                                 start_nodes)\n \n class ZMQTest (BitcoinTestFramework):\n "
      }
    ]
  },
  {
    "sha": "329f0c631bc4d171ea12460da2a53add7c81893a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjlmMGM2MzFiYzRkMTcxZWExMjQ2MGRhMmE1M2FkZDdjODE4OTNh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-27T23:46:02Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-28T17:51:50Z"
      },
      "message": "nits. To squash",
      "tree": {
        "sha": "7e7fd7cc6edcdccc0564dd346479f6f27195de0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e7fd7cc6edcdccc0564dd346479f6f27195de0e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/329f0c631bc4d171ea12460da2a53add7c81893a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/329f0c631bc4d171ea12460da2a53add7c81893a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/329f0c631bc4d171ea12460da2a53add7c81893a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/329f0c631bc4d171ea12460da2a53add7c81893a/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f287e8de1edf9a0b342b3e5b98b88e7bb1a2bd47"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 33,
      "deletions": 63
    },
    "files": [
      {
        "sha": "7c13df91433f026e27343ae4401115ab4c5ff418",
        "filename": "qa/rpc-tests/assumevalid.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/assumevalid.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -45,9 +45,7 @@\n                                      msg_headers,\n                                      wait_until)\n from test_framework.script import (CScript,\n-                                   CTransaction,\n-                                   CTxOut,\n-                                   OP_TRUE,)\n+                                   OP_TRUE)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (assert_equal,\n                                  p2p_port,"
      },
      {
        "sha": "6f768b58bbe882c2aa3777a38da9c7751b85d331",
        "filename": "qa/rpc-tests/bip68-112-113-p2p.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-112-113-p2p.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -55,7 +55,6 @@\n                                      CTransaction,\n                                      NetworkThread)\n from test_framework.script import (CScript,\n-                                   CTransaction,\n                                    OP_CHECKSEQUENCEVERIFY,\n                                    OP_DROP)\n from test_framework.test_framework import ComparisonTestFramework"
      },
      {
        "sha": "adeff0da12cb2f506d5aa4435ee8af6bea2f7828",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -6,15 +6,16 @@\n \n import time\n \n-from test_framework.blocktools import (COIN,\n-                                       COutPoint,\n-                                       CScript,\n-                                       CTransaction,\n-                                       CTxIn,\n-                                       CTxOut,\n-                                       create_block,\n+from test_framework.blocktools import (create_block,\n                                        create_coinbase)\n-from test_framework.mininode import ToHex, FromHex\n+from test_framework.mininode import (COIN,\n+                                     COutPoint,\n+                                     CTransaction,\n+                                     CTxIn,\n+                                     CTxOut,\n+                                     FromHex,\n+                                     ToHex)\n+from test_framework.script import CScript\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (JSONRPCException,\n                                  assert_equal,"
      },
      {
        "sha": "9c2ccb103d85db659547afa6badfe0b1da68d8dc",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -18,6 +18,7 @@\n \n from io import BytesIO\n import itertools\n+import shutil\n import time\n \n from test_framework.blockstore import BlockStore\n@@ -35,7 +36,6 @@\n from test_framework.util import (assert_equal,\n                                  bytes_to_hex_str,\n                                  hex_str_to_bytes,\n-                                 shutil,\n                                  start_nodes,\n                                  stop_nodes)\n "
      },
      {
        "sha": "ad00a92251e067186756bee8506884f18031dba0",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -6,10 +6,7 @@\n \n from io import BytesIO\n \n-from test_framework.mininode import ( BytesIO,\n-                                     CTransaction,\n-                                     bytes_to_hex_str,\n-                                     hex_str_to_bytes)\n+from test_framework.mininode import CTransaction\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (assert_equal,\n                                  bytes_to_hex_str,"
      },
      {
        "sha": "61aed05b523b90808696571bb6893f08c01196c0",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -14,14 +14,14 @@\n import copy\n import time\n \n-from test_framework.blocktools import (COIN,\n-                                       create_block,\n+from test_framework.blocktools import (create_block,\n                                        create_coinbase,\n                                        create_transaction)\n from test_framework.comptool import (TestManager,\n                                      TestInstance,\n                                      RejectResult)\n-from test_framework.mininode import NetworkThread\n+from test_framework.mininode import (COIN,\n+                                     NetworkThread)\n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import assert_equal \n "
      },
      {
        "sha": "61a46192337f8fdffe73174589620c1b057d08ec",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -9,14 +9,14 @@\n \n import time\n \n-from test_framework.blocktools import (COIN,\n-                                       create_block,\n+from test_framework.blocktools import (create_block,\n                                        create_coinbase,\n                                        create_transaction)\n from test_framework.comptool import (TestManager,\n                                      TestInstance,\n                                      RejectResult)\n-from test_framework.mininode import NetworkThread\n+from test_framework.mininode import (COIN,\n+                                     NetworkThread)\n from test_framework.test_framework import ComparisonTestFramework\n import time\n "
      },
      {
        "sha": "766af2e4a4a2b82eec5e583316d4d65beee3a657",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -7,6 +7,8 @@\n from decimal import Decimal\n from io import BytesIO\n \n+from test_framework.mininode import (CTransaction,\n+                                     COIN)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (assert_array_result,\n                                  assert_equal,\n@@ -15,8 +17,6 @@\n                                  hex_str_to_bytes,\n                                  start_nodes,\n                                  sync_mempools)\n-from test_framework.mininode import (CTransaction,\n-                                     COIN)\n \n def txFromHex(hexstring):\n     tx = CTransaction()"
      },
      {
        "sha": "d0fdc27771561b33654a1b2aeeb1d063082fa225",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -20,7 +20,6 @@\n                                      NetworkThread,\n                                      NodeConn,\n                                      NodeConnCB,\n-                                     logging,\n                                      mininode_lock,\n                                      msg_inv)\n from test_framework.test_framework import BitcoinTestFramework"
      },
      {
        "sha": "9e4c07aa9a6ed6e9f78226f492fc08143e9a86bf",
        "filename": "qa/rpc-tests/nulldummy.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nulldummy.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -16,18 +16,18 @@\n from io import BytesIO\n import time\n \n+from test_framework.blocktools import (create_coinbase,\n+                                       create_block,\n+                                       add_witness_commitment)\n+from test_framework.mininode import (CTransaction,\n+                                     NetworkThread)\n+from test_framework.script import CScript\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (JSONRPCException,\n                                  assert_equal,\n                                  bytes_to_hex_str,\n                                  hex_str_to_bytes,\n                                  start_nodes)\n-from test_framework.mininode import (CTransaction,\n-                                     NetworkThread)\n-from test_framework.blocktools import (create_coinbase,\n-                                       create_block,\n-                                       add_witness_commitment)\n-from test_framework.script import CScript\n \n NULLDUMMY_ERROR = \"64: non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero)\"\n "
      },
      {
        "sha": "ffc2e95fb902dfce75067ed51e1997e6898317f2",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 19,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -15,22 +15,10 @@\n import time\n import struct\n \n-from test_framework.blocktools import (CBlock,\n-                                       COIN,\n-                                       COutPoint,\n-                                       CScript,\n-                                       CTransaction,\n-                                       CTxIn,\n-                                       CTxOut,\n-                                       OP_CHECKSIG,\n-                                       OP_RETURN,\n-                                       OP_TRUE,\n-                                       create_block,\n+from test_framework.blocktools import (create_block,\n                                        create_coinbase,\n                                        create_transaction,\n-                                       get_legacy_sigopcount_block,\n-                                       ser_uint256,\n-                                       uint256_from_str)\n+                                       get_legacy_sigopcount_block)\n from test_framework.comptool import (TestManager,\n                                      TestInstance,\n                                      RejectResult)\n@@ -48,8 +36,6 @@\n                                      uint256_from_compact,\n                                      uint256_from_str)\n from test_framework.script import (CScript,\n-                                   CTransaction,\n-                                   CTxOut,\n                                    MAX_SCRIPT_ELEMENT_SIZE,\n                                    OP_2DUP,\n                                    OP_CHECKMULTISIG,\n@@ -67,9 +53,7 @@\n                                    OP_TRUE,\n                                    SIGHASH_ALL,\n                                    SignatureHash,\n-                                   hash160,\n-                                   ser_uint256,\n-                                   uint256_from_str)\n+                                   hash160)\n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import assert_equal\n "
      },
      {
        "sha": "ad3fad2b099f531bc82ec844bc5e91f8fb9cb96f",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -51,8 +51,6 @@\n from test_framework.script import (CScript,\n                                    CScriptNum,\n                                    CScriptOp,\n-                                   CTransaction,\n-                                   CTxOut,\n                                    OP_0,\n                                    OP_1,\n                                    OP_16,\n@@ -75,11 +73,7 @@\n                                    SIGHASH_SINGLE,\n                                    SegwitVersion1SignatureHash,\n                                    SignatureHash,\n-                                   hash160,\n-                                   hash256,\n-                                   ser_uint256,\n-                                   sha256,\n-                                   uint256_from_str)\n+                                   hash160)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (assert_equal,\n                                  bytes_to_hex_str,"
      },
      {
        "sha": "c6abc9d22a9e06f99070a0a19514faf9986670b5",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -30,6 +30,7 @@\n import os\n import socket\n \n+from test_framework.netutil import test_ipv6_local\n from test_framework.socks5 import (Socks5Configuration,\n                                    Socks5Command,\n                                    Socks5Server,\n@@ -39,7 +40,6 @@\n                                  PORT_RANGE,\n                                  assert_equal,\n                                  start_nodes)\n-from test_framework.netutil import test_ipv6_local\n \n RANGE_BEGIN = PORT_MIN + 2 * PORT_RANGE  # Start after p2p and rpc ports\n "
      },
      {
        "sha": "4f6cdb0cbc1c0e117a9c64ca9b7cdb115fca03aa",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -10,9 +10,7 @@\n                                      CTxIn,\n                                      CTxOut,\n                                      bytes_to_hex_str)\n-from test_framework.script import (CScript,\n-                                   CTransaction,\n-                                   CTxOut)\n+from test_framework.script import CScript\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (JSONRPCException,\n                                  assert_equal,"
      },
      {
        "sha": "ae7a84655335ca7a7f2fc3486953e910f761ae86",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/329f0c631bc4d171ea12460da2a53add7c81893a/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=329f0c631bc4d171ea12460da2a53add7c81893a",
        "patch": "@@ -36,11 +36,11 @@\n import os\n import sys\n from random import randint\n+import shutil\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (assert_equal,\n                                  connect_nodes,\n-                                 shutil,\n                                  start_node,\n                                  start_nodes,\n                                  stop_node,"
      }
    ]
  }
]