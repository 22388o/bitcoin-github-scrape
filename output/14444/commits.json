[
  {
    "sha": "00899053612d389b34470be832bc0cb73d545a33",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDg5OTA1MzYxMmQzODliMzQ0NzBiZTgzMmJjMGNiNzNkNTQ1YTMz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-10-10T09:28:43Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-10-10T09:28:43Z"
      },
      "message": "Add compile time checking for cs_main locks which we assert at run time",
      "tree": {
        "sha": "a5e4d1af5ebd30b83aade5ba2db7c21f1abb18b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5e4d1af5ebd30b83aade5ba2db7c21f1abb18b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00899053612d389b34470be832bc0cb73d545a33",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00899053612d389b34470be832bc0cb73d545a33",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00899053612d389b34470be832bc0cb73d545a33",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00899053612d389b34470be832bc0cb73d545a33/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be992701b018f256db6d64786624be4cb60d8975",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be992701b018f256db6d64786624be4cb60d8975",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be992701b018f256db6d64786624be4cb60d8975"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "42c6b0373d988f5acb6803bf94bfd0b1a18bdaa8",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00899053612d389b34470be832bc0cb73d545a33/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00899053612d389b34470be832bc0cb73d545a33/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=00899053612d389b34470be832bc0cb73d545a33",
        "patch": "@@ -65,7 +65,7 @@ bool BaseIndex::Init()\n     return true;\n }\n \n-static const CBlockIndex* NextSyncBlock(const CBlockIndex* pindex_prev)\n+static const CBlockIndex* NextSyncBlock(const CBlockIndex* pindex_prev) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     AssertLockHeld(cs_main);\n "
      },
      {
        "sha": "dbd827633b86662b350596b5f80abbecc2d6c40d",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00899053612d389b34470be832bc0cb73d545a33/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00899053612d389b34470be832bc0cb73d545a33/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=00899053612d389b34470be832bc0cb73d545a33",
        "patch": "@@ -257,7 +257,7 @@ bool LoadGenesisBlock(const CChainParams& chainparams);\n  * initializing state if we're running with -reindex. */\n bool LoadBlockIndex(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n /** Update the chain tip based on database information. */\n-bool LoadChainTip(const CChainParams& chainparams);\n+bool LoadChainTip(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n /** Unload database information */\n void UnloadBlockIndex();\n /** Run an instance of the script checking thread */\n@@ -436,7 +436,7 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n }\n \n /** Find the last common block between the parameter chain and a locator. */\n-CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator);\n+CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n /** Mark a block as precious and reorganize.\n  *"
      }
    ]
  }
]