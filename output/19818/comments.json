[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681837009",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-681837009",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 681837009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTgzNzAwOQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T09:31:56Z",
    "updated_at": "2020-08-27T09:31:56Z",
    "author_association": "MEMBER",
    "body": "According to https://en.bitcoin.it/wiki/Protocol_documentation#Inventory_Vectors (section written in 2010 by \"MagicalTux\") this is unsigned. Though, our python tests also treat this as signed. https://btcinformation.org/en/developer-reference#inv doesn't say anything about signedness.\r\n\r\nWould be good to at least update the python test framework and also add a p2p test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681837009/reactions",
      "total_count": 5,
      "+1": 4,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681975627",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-681975627",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 681975627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTk3NTYyNw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T14:13:47Z",
    "updated_at": "2020-08-27T20:10:21Z",
    "author_association": "MEMBER",
    "body": "> Would be good to at least update the python test framework and also add a p2p test.\r\n\r\nUpdated the python test framework and added test coverage.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681975627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682112273",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682112273",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 682112273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjExMjI3Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-27T18:18:06Z",
    "updated_at": "2020-08-27T18:18:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nThanks for fixing UBSan fuzzing finds!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682112273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682338614",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682338614",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 682338614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjMzODYxNA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T05:48:13Z",
    "updated_at": "2020-08-28T07:55:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonatack Just to confirm: if the test changes we're dropped in this change set (keeping only the changes to `src/protocol.{cpp,h}`) then all functional tests would still pass, right?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682338614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682384295",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682384295",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 682384295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjM4NDI5NQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T07:53:07Z",
    "updated_at": "2020-08-28T07:53:07Z",
    "author_association": "MEMBER",
    "body": "> @jonasnick Just to confirm: if the test changes we're dropped in this change set (keeping only the changes to `src/protocol.{cpp,h}`) then all functional tests would still pass, right?\r\n\r\nRight. I pushed the changes to `src/protocol.{h/cpp}` several times in other PR changesets (#19610, #19611) before dropping them, and the CI passes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682384295/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682478111",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682478111",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 682478111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjQ3ODExMQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T11:38:37Z",
    "updated_at": "2020-08-28T11:38:37Z",
    "author_association": "MEMBER",
    "body": "> According to https://en.bitcoin.it/wiki/Protocol_documentation#Inventory_Vectors (section written in 2010 by \"MagicalTux\") this is unsigned. Though, our python tests also treat this as signed. https://btcinformation.org/en/developer-reference#inv doesn't say anything about signedness.\r\n\r\nbtcinformation.org does show this as uint32_t: https://btcinformation.org/en/developer-reference#data-messages. That was added by @harding to the bitcoin.org developer docs here: https://github.com/bitcoin-dot-org/Bitcoin.org/commit/1634212dd5550bb9b610341668b4b7b5fa3690a5#diff-693f5b3e9d88b97c899694c8d1656cbbR110\r\n\r\nNote that even though comparing an int to a uint32_t causes a UBSan warning, it's not actually undefined behaviour: https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#:~:text=%2Dfsanitize%3Dimplicit%2Dinteger%2D,the%20new%20value%20is%20negative. However, I think it's still worth changing this, so that we're always comparing / xor'ing a uint32_t with a uint32_t, so concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682478111/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682484118",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682484118",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 682484118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjQ4NDExOA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T11:54:28Z",
    "updated_at": "2020-08-28T11:54:28Z",
    "author_association": "MEMBER",
    "body": "Great links @jnewbery, thanks.\r\n\r\n> Note that even though comparing an int to a uint32_t causes a UBSan warning, it's not actually undefined behaviour: [clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#:~:text=%2Dfsanitize%3Dimplicit%2Dinteger%2D,the%20new%20value%20is%20negative](https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#:~:text=%2Dfsanitize%3Dimplicit%2Dinteger%2D,the%20new%20value%20is%20negative).\r\n\r\n\"-fsanitize=implicit-integer-sign-change: Implicit conversion between integer types, if that changes the sign of the value...issues caught by this sanitizer are not undefined behavior, but are often unintentional.\"",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682484118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683032897",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-683032897",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 683032897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzAzMjg5Nw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T18:19:42Z",
    "updated_at": "2020-08-28T18:21:39Z",
    "author_association": "MEMBER",
    "body": "Thanks everyone for your feedback. I wrote a [few tests](https://github.com/bitcoin/bitcoin/commit/6c0f4aefe373bb89188e91464326dabf0f9f3397) but they all covered the change to the CInv class in the test framework, not the CInv change in `protocol.{h,cpp}`, so I've simplified and removed them in the latest push.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683032897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683286347",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-683286347",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 683286347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzI4NjM0Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-29T12:51:55Z",
    "updated_at": "2020-08-29T12:51:55Z",
    "author_association": "MEMBER",
    "body": "Thanks for addressing the comments, the code changes look good to me now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683286347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685766893",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-685766893",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 685766893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTc2Njg5Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-02T14:17:07Z",
    "updated_at": "2020-09-02T14:20:46Z",
    "author_association": "MEMBER",
    "body": "> All the values we ever assign to CInv::type are non-negative within the reach of a signed 32 bit integer. GetDataMsg is uint32_t and in some places we |= a variable of type uint32_t into CInv::type\r\n\r\nBitwise arithmetic should definitely use unsigned integers, good point.\r\n\r\n> Actually serializing a signed integer in the way we do it is not portable, it just works because all platforms use two's complement, but that's not guaranteed.\r\n\r\nI thought this was already guaranteed in C++11, but no, apparently only [C++20](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0907r1.html) will guarantee two's complement signed integers.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685766893/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686426437",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-686426437",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 686426437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQyNjQzNw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T11:29:58Z",
    "updated_at": "2020-09-03T14:03:40Z",
    "author_association": "MEMBER",
    "body": "ACK 7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686426437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686540138",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-686540138",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
    "id": 686540138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU0MDEzOA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T14:42:06Z",
    "updated_at": "2020-09-03T14:42:06Z",
    "author_association": "MEMBER",
    "body": "ACK 7984c39be11ca04460883365e1ae2a496aaa6c0e \ud83c\udf3b\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 7984c39be11ca04460883365e1ae2a496aaa6c0e \ud83c\udf3b\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjtLAwAtfwkLzUyVHkPG+CsHcnD4C7PQgsfTFBMxOM9trXOHY299iYHJehs2jwr\r\nj748j23g+pETizxSTTPal7FmbYGvmVrITJiLVfLtMeW+9vOoP59qzb1/mvxEWFWw\r\n8hQnBJtUxYH1t8DxdWcVLew4jTlGyds2E6hGb09htsPam9LAxW+eUDynlwFXQgE1\r\nHNxmk8K2mMLYoHeLidculEx2UcQFIH7GqFWDplFDpzSAruFneWqyg+V2LUqhCTpH\r\nJq/YFXupkfmHrySzWkJz3Ix2mGslNaxtqw18KnFFIc8Kx1qzZKOvloWIZCjvnCQt\r\nGbWMZfSvvf1ALu44WX+dZLl6NtGU8x18bS0y6tkKrPyW51XyouCn7J3aOk03IcXn\r\n3LizPJLA5DFf9jCILzLwoQLRhZbLAVsSoWIBVIyIIuoOrsbf2omAoxe13HoepQzK\r\na02g086odTrNRvKdwARXzC6tLEdgQHW4mJbZJLDCJ1Gz+qXJOla2tCIrieZq0Y8T\r\nvC5hwFiZ\r\n=81Qa\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `a72c948f27f3e6c7aa323c708d61eff780f8ac68076405b22c540f1cb6199d2f  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108a72c948f27f3e6c7aa323c708d61eff780f8ac68076405b22c540f1cb6199d2ff0102c0b7e847c151a12661814c8cf4cdf6f08fff010a5ad52e61bef8a305f7f99369dada55b08f1202417521e7173e05f706c328761b88be26e7a86e0f67304b90eeaf002f751141a08f1045f5100b3f008ed8bbe87dc67590b0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010b7e538fb1213e2d8f8a8fa78cebfcfb308f12041646d819eb11bda4258daa0c392ec20c588be886fe0687ab2863f382dc8689d08f1045f5100b3f0086910d4061760cdec0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010e75afb1e43c31eb8a7ba05a900c66aae08f1204e3e1b86a0dd500ff033d9d8bcff05839c18809629c2c3a88c44346487279f3908f1045f5100b3f00885a4f9b960564c290083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010fd50f1d334b615f39fd8969ef27e856408f120fc40bcc43c6e151e59d6593c9d84b975f230ac53f9c663b18a124a92de6d4ab308f1045f5100b3f008fd1c107c2ce586a80083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686540138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478276038",
    "pull_request_review_id": 476535312,
    "id": 478276038,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3NjAzOA==",
    "diff_hunk": "@@ -425,7 +425,7 @@ class CInv\n     // Combined-message helper methods\n     bool IsGenTxMsg()     const { return type == MSG_TX || type == MSG_WTX || type == MSG_WITNESS_TX; }\n \n-    int type;\n+    uint32_t type;",
    "path": "src/protocol.h",
    "position": 14,
    "original_position": 14,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "407175e0c2bc797599ebd9c0a1f2ec89ad7af136",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ACK on using a sized type here.\r\nHowever, changing from signed to unsigned is, in principle, a P2P protocol change.\r\nThis needs to be carefully reviewed for potential unexpected by-effects.",
    "created_at": "2020-08-27T09:17:22Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478276038",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478276038"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478276038"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478276038/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 428,
    "original_line": 428,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478463149",
    "pull_request_review_id": 476779308,
    "id": 478463149,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ2MzE0OQ==",
    "diff_hunk": "@@ -125,6 +128,16 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_negative_type(self):\n+        self.log.info(\"Test inv with negative type raises argument out of range error\")\n+        invalid_inv = msg_inv([CInv(t=-1, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_message(invalid_inv)\n+        except struct.error as e:",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 26,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "9e05ed27fd6dbe7af78eed08abd8a1957f2905d5",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We generally don't test the test framework. Sending an uint32_t{-1} and observing the node doesn't crash with sanitizers enabled should be a sufficient smoke test. Maybe add an assert_debug_log to observe how the inv will be formatted.\r\n\r\n```\r\n            LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\r\n",
    "created_at": "2020-08-27T14:29:58Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478463149",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478463149"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478463149"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478463149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 136,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478596148",
    "pull_request_review_id": 476954186,
    "id": 478596148,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5NjE0OA==",
    "diff_hunk": "@@ -125,6 +128,16 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_negative_type(self):\n+        self.log.info(\"Test inv with negative type raises argument out of range error\")\n+        invalid_inv = msg_inv([CInv(t=-1, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_message(invalid_inv)\n+        except struct.error as e:",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 26,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "9e05ed27fd6dbe7af78eed08abd8a1957f2905d5",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks Marco. Trying some stuff to see how the CI reacts to it.",
    "created_at": "2020-08-27T17:54:49Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478596148",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478596148"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478596148"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478596148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 136,
    "side": "RIGHT",
    "in_reply_to_id": 478463149
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478598930",
    "pull_request_review_id": 476957755,
    "id": 478598930,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5ODkzMA==",
    "diff_hunk": "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 41,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "6c0f4aefe373bb89188e91464326dabf0f9f3397",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        inv_with_signed_type = msg_inv([CInv(t=0xffffffff, h=1)])\r\n```\r\n\r\nSerialized -1 as signed integer is identical to 0xffffffff serialized as unsigned integer, so might as well use the latter",
    "created_at": "2020-08-27T17:59:40Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478598930",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478598930"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478598930"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478598930/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 144,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478607004",
    "pull_request_review_id": 476968075,
    "id": 478607004,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNzAwNA==",
    "diff_hunk": "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 41,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "6c0f4aefe373bb89188e91464326dabf0f9f3397",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That was breaking this method in `messages.py::CInv` with `KeyError: 4294967295` from calling `CInv::typemap[4294967295]`\r\n```python\r\n    def __repr__(self):\r\n        return \"CInv(type=%s hash=%064x)\" \\\r\n            % (self.typemap[abs(self.type)], self.hash)\r\n```",
    "created_at": "2020-08-27T18:14:26Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478607004",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478607004"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478607004"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478607004/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 144,
    "side": "RIGHT",
    "in_reply_to_id": 478598930
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478611091",
    "pull_request_review_id": 476973299,
    "id": 478611091,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxMTA5MQ==",
    "diff_hunk": "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 41,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "6c0f4aefe373bb89188e91464326dabf0f9f3397",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even when adding type `0xffffffff: \"Error\"`?",
    "created_at": "2020-08-27T18:22:06Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478611091",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478611091"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478611091"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478611091/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 144,
    "side": "RIGHT",
    "in_reply_to_id": 478598930
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478635081",
    "pull_request_review_id": 477003878,
    "id": 478635081,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzNTA4MQ==",
    "diff_hunk": "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 41,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "6c0f4aefe373bb89188e91464326dabf0f9f3397",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done, simplified, good idea. LMK if we should drop the first test.",
    "created_at": "2020-08-27T19:07:05Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478635081",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478635081"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478635081"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478635081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 144,
    "side": "RIGHT",
    "in_reply_to_id": 478598930
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478844800",
    "pull_request_review_id": 477255792,
    "id": 478844800,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NDgwMA==",
    "diff_hunk": "@@ -125,6 +128,22 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_integer_type(self):\n+        self.log.info(\"Test inv message with MSG_TX type as signed int raises out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 26,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "1bb9a9221d494bbe57164e7d4638cc52a34cd006",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "imo could drop the test framework self-test",
    "created_at": "2020-08-28T05:50:37Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478844800",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478844800"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478844800"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478844800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 136,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478926070",
    "pull_request_review_id": 477482527,
    "id": 478926070,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkyNjA3MA==",
    "diff_hunk": "@@ -125,6 +128,22 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_integer_type(self):\n+        self.log.info(\"Test inv message with MSG_TX type as signed int raises out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 26,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "1bb9a9221d494bbe57164e7d4638cc52a34cd006",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done, but I think both of these tests only tested the framework change anyway.",
    "created_at": "2020-08-28T08:15:18Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478926070",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478926070"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478926070"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478926070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 136,
    "side": "RIGHT",
    "in_reply_to_id": 478844800
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479241586",
    "pull_request_review_id": 477691326,
    "id": 479241586,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI0MTU4Ng==",
    "diff_hunk": "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",\n     }\n \n     def __init__(self, t=0, h=0):\n         self.type = t\n         self.hash = h\n \n     def deserialize(self, f):\n-        self.type = struct.unpack(\"<i\", f.read(4))[0]\n+        self.type = struct.unpack(\"<I\", f.read(4))[0]\n         self.hash = deser_uint256(f)\n \n     def serialize(self):\n         r = b\"\"\n-        r += struct.pack(\"<i\", self.type)\n+        r += struct.pack(\"<I\", self.type)\n         r += ser_uint256(self.hash)\n         return r\n \n     def __repr__(self):\n         return \"CInv(type=%s hash=%064x)\" \\\n-            % (self.typemap[self.type], self.hash)\n+            % (self.typemap[abs(self.type)], self.hash)",
    "path": "test/functional/test_framework/messages.py",
    "position": null,
    "original_position": 30,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "7bfc631a1157848d2d249ecd2c29665aa263d714",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think this `abs(\u2026)` is correct. There should be no reason to take an absolute value here, convert, say, `-1` to `1`.\r\n\r\nmaybe\r\n```\r\nself.typemap.get(self.type, \"Error\")\r\n```\r\n",
    "created_at": "2020-08-28T12:36:37Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479241586",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479241586"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479241586"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479241586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 268,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479242384",
    "pull_request_review_id": 477691753,
    "id": 479242384,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI0MjM4NA==",
    "diff_hunk": "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",",
    "path": "test/functional/test_framework/messages.py",
    "position": null,
    "original_position": 8,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "7bfc631a1157848d2d249ecd2c29665aa263d714",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd prefer to report anything that is unkonwn as \"Error\" instead of specifically adding `0xffffffff`  here.",
    "created_at": "2020-08-28T12:37:16Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479242384",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479242384"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479242384"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479242384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 249,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479297020",
    "pull_request_review_id": 477734211,
    "id": 479297020,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5NzAyMA==",
    "diff_hunk": "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",\n     }\n \n     def __init__(self, t=0, h=0):\n         self.type = t\n         self.hash = h\n \n     def deserialize(self, f):\n-        self.type = struct.unpack(\"<i\", f.read(4))[0]\n+        self.type = struct.unpack(\"<I\", f.read(4))[0]\n         self.hash = deser_uint256(f)\n \n     def serialize(self):\n         r = b\"\"\n-        r += struct.pack(\"<i\", self.type)\n+        r += struct.pack(\"<I\", self.type)\n         r += ser_uint256(self.hash)\n         return r\n \n     def __repr__(self):\n         return \"CInv(type=%s hash=%064x)\" \\\n-            % (self.typemap[self.type], self.hash)\n+            % (self.typemap[abs(self.type)], self.hash)",
    "path": "test/functional/test_framework/messages.py",
    "position": null,
    "original_position": 30,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "7bfc631a1157848d2d249ecd2c29665aa263d714",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for reviewing. The thought was to not allow shallow errors of type `KeyError` to hide deeper issues, like argument out of datatype range.",
    "created_at": "2020-08-28T13:36:48Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479297020",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479297020"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479297020"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479297020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 268,
    "side": "RIGHT",
    "in_reply_to_id": 479241586
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479304476",
    "pull_request_review_id": 477740252,
    "id": 479304476,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwNDQ3Ng==",
    "diff_hunk": "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",",
    "path": "test/functional/test_framework/messages.py",
    "position": null,
    "original_position": 8,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "7bfc631a1157848d2d249ecd2c29665aa263d714",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not sure what to do here. This was only needed for the test. I tried a few [different tests](https://github.com/bitcoin/bitcoin/commit/6c0f4aefe373bb89188e91464326dabf0f9f3397); the first one doesn't require adding entries to `typemap`. I don't think any of the tests cover the `protocol.{h,cpp} CInv::type` type change, only the test framework change.",
    "created_at": "2020-08-28T13:44:42Z",
    "updated_at": "2020-08-28T18:13:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479304476",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479304476"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479304476"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479304476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 249,
    "side": "RIGHT",
    "in_reply_to_id": 479242384
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479462943",
    "pull_request_review_id": 477934035,
    "id": 479462943,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2Mjk0Mw==",
    "diff_hunk": "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",\n     }\n \n     def __init__(self, t=0, h=0):\n         self.type = t\n         self.hash = h\n \n     def deserialize(self, f):\n-        self.type = struct.unpack(\"<i\", f.read(4))[0]\n+        self.type = struct.unpack(\"<I\", f.read(4))[0]\n         self.hash = deser_uint256(f)\n \n     def serialize(self):\n         r = b\"\"\n-        r += struct.pack(\"<i\", self.type)\n+        r += struct.pack(\"<I\", self.type)\n         r += ser_uint256(self.hash)\n         return r\n \n     def __repr__(self):\n         return \"CInv(type=%s hash=%064x)\" \\\n-            % (self.typemap[self.type], self.hash)\n+            % (self.typemap[abs(self.type)], self.hash)",
    "path": "test/functional/test_framework/messages.py",
    "position": null,
    "original_position": 30,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "7bfc631a1157848d2d249ecd2c29665aa263d714",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Dropped this line.",
    "created_at": "2020-08-28T18:14:29Z",
    "updated_at": "2020-08-28T18:14:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479462943",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479462943"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479462943"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479462943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 268,
    "side": "RIGHT",
    "in_reply_to_id": 479241586
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479463133",
    "pull_request_review_id": 477934282,
    "id": 479463133,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MzEzMw==",
    "diff_hunk": "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",",
    "path": "test/functional/test_framework/messages.py",
    "position": null,
    "original_position": 8,
    "commit_id": "7984c39be11ca04460883365e1ae2a496aaa6c0e",
    "original_commit_id": "7bfc631a1157848d2d249ecd2c29665aa263d714",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Dropped this line.",
    "created_at": "2020-08-28T18:14:56Z",
    "updated_at": "2020-08-28T18:14:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479463133",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479463133"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479463133"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479463133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 249,
    "side": "RIGHT",
    "in_reply_to_id": 479242384
  }
]