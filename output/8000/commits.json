[
  {
    "sha": "9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZWFhMGFmYTZlYzVkM2RkMDFlNGQwMTEyMTMxNGVmNTFmMmJjMzA1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-04T09:35:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-04T09:37:10Z"
      },
      "message": "tinyformat: force USE_VARIADIC_TEMPLATES\n\nNow that we started using c++11, force use of variadic templates.\n\nThe autodetection may be wonky on some compilers, see discussion\n[here](https://github.com/bitcoin/bitcoin/pull/7982#issuecomment-216222357)\nand is unnecessary for us anyhow.",
      "tree": {
        "sha": "ef4ad15780f343120feafb3a370974b8500f0f04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef4ad15780f343120feafb3a370974b8500f0f04"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "559fbae8c658c779a423201df6d5850fce3cd3b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/559fbae8c658c779a423201df6d5850fce3cd3b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/559fbae8c658c779a423201df6d5850fce3cd3b1"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c6ec0419b3943917fa8815088c7b7d55156e0c0b",
        "filename": "src/tinyformat.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305/src/tinyformat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305/src/tinyformat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/tinyformat.h?ref=9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305",
        "patch": "@@ -113,7 +113,7 @@ namespace tfm = tinyformat;\n \n // Define for C++11 variadic templates which make the code shorter & more\n // general.  If you don't define this, C++11 support is autodetected below.\n-// #define TINYFORMAT_USE_VARIADIC_TEMPLATES\n+#define TINYFORMAT_USE_VARIADIC_TEMPLATES\n \n \n //------------------------------------------------------------------------------"
      }
    ]
  },
  {
    "sha": "08d7b563e91ed2ad226ec2505a5a850ab869d2f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGQ3YjU2M2U5MWVkMmFkMjI2ZWMyNTA1YTVhODUwYWI4NjlkMmYw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-04T12:21:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-04T12:21:04Z"
      },
      "message": "util: switch LogPrint and error to variadic templates",
      "tree": {
        "sha": "14ce5a066dbb01ab9a2b1982a08dcc7d6405b50c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14ce5a066dbb01ab9a2b1982a08dcc7d6405b50c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08d7b563e91ed2ad226ec2505a5a850ab869d2f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08d7b563e91ed2ad226ec2505a5a850ab869d2f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08d7b563e91ed2ad226ec2505a5a850ab869d2f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08d7b563e91ed2ad226ec2505a5a850ab869d2f0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9eaa0afa6ec5d3dd01e4d01121314ef51f2bc305"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 18,
      "deletions": 25
    },
    "files": [
      {
        "sha": "25c9b733e871f9660c1480072e969ab79b90f494",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 18,
        "deletions": 25,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08d7b563e91ed2ad226ec2505a5a850ab869d2f0/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08d7b563e91ed2ad226ec2505a5a850ab869d2f0/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=08d7b563e91ed2ad226ec2505a5a850ab869d2f0",
        "patch": "@@ -76,40 +76,33 @@ int LogPrintStr(const std::string &str);\n \n #define LogPrintf(...) LogPrint(NULL, __VA_ARGS__)\n \n-/**\n- * When we switch to C++11, this can be switched to variadic templates instead\n- * of this macro-based construction (see tinyformat.h).\n- */\n-#define MAKE_ERROR_AND_LOG_FUNC(n)                                        \\\n-    /**   Print to debug.log if -debug=category switch is given OR category is NULL. */ \\\n-    template<TINYFORMAT_ARGTYPES(n)>                                          \\\n-    static inline int LogPrint(const char* category, const char* format, TINYFORMAT_VARARGS(n))  \\\n-    {                                                                         \\\n-        if(!LogAcceptCategory(category)) return 0;                            \\\n-        return LogPrintStr(tfm::format(format, TINYFORMAT_PASSARGS(n))); \\\n-    }                                                                         \\\n-    /**   Log error and return false */                                        \\\n-    template<TINYFORMAT_ARGTYPES(n)>                                          \\\n-    static inline bool error(const char* format, TINYFORMAT_VARARGS(n))                     \\\n-    {                                                                         \\\n-        LogPrintStr(\"ERROR: \" + tfm::format(format, TINYFORMAT_PASSARGS(n)) + \"\\n\"); \\\n-        return false;                                                         \\\n-    }\n+template<typename T1, typename... Args>\n+static inline int LogPrint(const char* category, const char* fmt, const T1& v1, const Args&... args)\n+{\n+    if(!LogAcceptCategory(category)) return 0;                            \\\n+    return LogPrintStr(tfm::format(fmt, v1, args...));\n+}\n \n-TINYFORMAT_FOREACH_ARGNUM(MAKE_ERROR_AND_LOG_FUNC)\n+template<typename T1, typename... Args>\n+bool error(const char* fmt, const T1& v1, const Args&... args)\n+{\n+    LogPrintStr(\"ERROR: \" + tfm::format(fmt, v1, args...) + \"\\n\");\n+    return false;\n+}\n \n /**\n  * Zero-arg versions of logging and error, these are not covered by\n- * TINYFORMAT_FOREACH_ARGNUM\n+ * the variadic templates above (and don't take format arguments but\n+ * bare strings).\n  */\n-static inline int LogPrint(const char* category, const char* format)\n+static inline int LogPrint(const char* category, const char* s)\n {\n     if(!LogAcceptCategory(category)) return 0;\n-    return LogPrintStr(format);\n+    return LogPrintStr(s);\n }\n-static inline bool error(const char* format)\n+static inline bool error(const char* s)\n {\n-    LogPrintStr(std::string(\"ERROR: \") + format + \"\\n\");\n+    LogPrintStr(std::string(\"ERROR: \") + s + \"\\n\");\n     return false;\n }\n "
      }
    ]
  }
]