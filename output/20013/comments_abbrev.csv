kallewoof,2020-09-25 12:30:17,"@promag I tried to work on a solution based on always providing the entire `params` object recursively normalized, keeping the originals around as well, but it is very easy to mess up. For example if I convert send and leave FundTransaction as it is, the updated send will now put new normalized keys in the options and FundTransaction will fail to find those, even though the initial code had copied",https://github.com/bitcoin/bitcoin/pull/20013#issuecomment-698900928,698900928,
DrahtBot,2020-09-25 13:04:17,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n* #16439 (cli/gui: suppo",https://github.com/bitcoin/bitcoin/pull/20013#issuecomment-698916251,698916251,
kallewoof,2020-09-29 08:42:51,"I extended this a slight bit to now also normalize the `-named` functionality.\n```\n$ ./bitcoin-cli -regtest -named send out_puts='[{""bcrt1qkfveed8g8vnktsc3490aarzh302l2qc2ymhlge"":1}]' conftarget=1 estim_ate_mode=sat/b\n```\n\nIn the process, I ran into linker issues with QT build, so I inlined the `NormalizeParameterName` function. Seems moving it to a shared place between `rpc/client` and ",https://github.com/bitcoin/bitcoin/pull/20013#issuecomment-700545373,700545373,
kallewoof,2020-09-30 07:39:23,"Expanding on this, I am coming to the conclusion that this is error prone and messy -- did you normalize or didn't you? That would be a continuous problem. @promag's #20017 seems like a better approach.",https://github.com/bitcoin/bitcoin/pull/20013#issuecomment-701219217,701219217,
