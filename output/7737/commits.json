[
  {
    "sha": "f11c5a3cbd2833be124e66272aea274fda534626",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTFjNWEzY2JkMjgzM2JlMTI0ZTY2MjcyYWVhMjc0ZmRhNTM0NjI2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-23T10:55:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-23T12:15:20Z"
      },
      "message": "devtools: make github-merge.py use py3\n\nThis makes github-merge.py the first developer tool to go\nall Python 3 (for context see #7717).\n\nThe changes are straightforward as the script already was\n`from __future__ import division,print_function,unicode_literals`.\n\nHowever urllib2 changed name, and json will only accept unicode data not\nbytes.\n\nThis retains py2 compatibility for now: not strictly necessary\nas it's not used by the build system - but it was easy.",
      "tree": {
        "sha": "46a4fa8808d19a202bde8807cd018fc3e5b9cead",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46a4fa8808d19a202bde8807cd018fc3e5b9cead"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f11c5a3cbd2833be124e66272aea274fda534626",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f11c5a3cbd2833be124e66272aea274fda534626",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f11c5a3cbd2833be124e66272aea274fda534626",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f11c5a3cbd2833be124e66272aea274fda534626/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "490064111f8633c46132d0f2b35e8be494839a9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/490064111f8633c46132d0f2b35e8be494839a9a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/490064111f8633c46132d0f2b35e8be494839a9a"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 13,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9a62fccbbb5551038c9959bff63122b2511ed73a",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f11c5a3cbd2833be124e66272aea274fda534626/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f11c5a3cbd2833be124e66272aea274fda534626/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=f11c5a3cbd2833be124e66272aea274fda534626",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/env python2\n+#!/usr/bin/env python3\n # Copyright (c) 2016 Bitcoin Core Developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -19,6 +19,11 @@\n from sys import stdin,stdout,stderr\n import argparse\n import subprocess\n+import json,codecs\n+try:\n+    from urllib.request import Request,urlopen\n+except:\n+    from urllib2 import Request,urlopen\n \n # External tools (can be overridden using environment)\n GIT = os.getenv('GIT','git')\n@@ -38,7 +43,7 @@ def git_config_get(option, default=None):\n     Get named configuration option from git repository.\n     '''\n     try:\n-        return subprocess.check_output([GIT,'config','--get',option]).rstrip()\n+        return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n     except subprocess.CalledProcessError as e:\n         return default\n \n@@ -47,18 +52,19 @@ def retrieve_pr_title(repo,pull):\n     Retrieve pull request title from github.\n     Return None if no title can be found, or an error happens.\n     '''\n-    import urllib2,json\n     try:\n-        req = urllib2.Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n-        result = urllib2.urlopen(req)\n-        result = json.load(result)\n-        return result['title']\n+        req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n+        result = urlopen(req)\n+        reader = codecs.getreader('utf-8')\n+        obj = json.load(reader(result))\n+        return obj['title']\n     except Exception as e:\n         print('Warning: unable to retrieve pull title from github: %s' % e)\n         return None\n \n def ask_prompt(text):\n     print(text,end=\" \",file=stderr)\n+    stderr.flush()\n     reply = stdin.readline().rstrip()\n     print(\"\",file=stderr)\n     return reply"
      }
    ]
  }
]