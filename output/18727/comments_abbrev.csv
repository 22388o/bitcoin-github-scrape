DrahtBot,2020-04-22 00:42:21,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-617482557,617482557,
ryanofsky,2020-04-27 18:42:17,"Rebased f9cea7231dfec9c75b206899c818301401d8c0d4 -> 2142bf14fc72b8555ca81af5913e329ceda8f782 ([`pr/create.1`](https://github.com/ryanofsky/bitcoin/commits/pr/create.1) -> [`pr/create.2`](https://github.com/ryanofsky/bitcoin/commits/pr/create.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/create.1-rebase..pr/create.2)) due to conflict with #16528\n",https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-620162654,620162654,
MarcoFalke,2020-04-29 18:04:27,ACK 7918c1b019a36a8f9aa55daae422c6b6723b2a39,https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621372488,621372488,
ariard,2020-04-30 09:07:51,"@MarcoFalke, I may miss ACK timeline but you could have wait #16426 first to avoid another round of review :(",https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621711308,621711308,
MarcoFalke,2020-04-30 11:11:48,"@ariard Sorry :sob: , but I didn't feel comfortable merging #16426 with the assert removed. So 16426 would have to go through another round of review anyway.",https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621767816,621767816,
MarcoFalke,2020-04-30 11:15:06,It seems two other reviewers agreed with me: https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621421348 and this one seemed ready to merge.,https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621769252,621769252,
ryanofsky,2020-04-30 14:02:18,"I though #16426 was ready to merge, but it should be pretty easy to update #16426 after this PR. All this PR does is add a test, and I posted a version of the test that works with #16426 previously: 25651aad58b1f6e543f1ad565d821de46268e724 ([branch](https://github.com/ryanofsky/bitcoin/commits/review.16426.5-edit)) in https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412461100, so there sh",https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621872442,621872442,
MarcoFalke,2020-04-30 14:15:28,"How hard is it to adapt the new tests? As you have already done the work, could you rebase 25651aa on current master+the other pull. So it can simply be cherry-picked by @ariard and we can move forward with #16426 and merge it?",https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621880481,621880481,
ryanofsky,2020-04-30 14:19:51,"I'll rebase 25651aad58b1f6e543f1ad565d821de46268e724, but it's should also be pretty simple for antoine to just copy and paste working test code https://github.com/ryanofsky/bitcoin/blob/25651aad58b1f6e543f1ad565d821de46268e724/src/wallet/test/wallet_tests.cpp#L669-L771 into the last commit over the broken test",https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621883238,621883238,
ariard,2020-04-30 19:09:12,"@MarcoFalke yes you were right, I didn't know how to interpret your Approach ACK at first look, given your also quoted a commit. Maybe it's better in this kind of case to not ACK at all to underlies fix matters for the reviewer. Nevermind let's move forward :)",https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-622046352,622046352,
ariard,2020-04-23 01:16:53,Transactions contained by stale blockConnected and transactionAddedToMempool should be processed twice ? May we assert that their `nTimeReceived` hasn't change between duplicate processing?,https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413439175,413439175,src/wallet/test/wallet_tests.cpp
ariard,2020-04-23 01:20:50,"I think you can just copy-paste actual new comment in d6d6632, which is originally yours (IIRC), I found it clearer",https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413440418,413440418,src/wallet/test/wallet_tests.cpp
ryanofsky,2020-04-28 13:48:00,"re: https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413439175\n\n> Transactions contained by stale blockConnected and transactionAddedToMempool should be processed twice ? May we assert that their `nTimeReceived` hasn't change between duplicate processing?\n\nInteresting suggestion, I added these checks.\n\nI don't think they should ideally be processed twice, and this was my origi",https://github.com/bitcoin/bitcoin/pull/18727#discussion_r416627368,416627368,src/wallet/test/wallet_tests.cpp
ryanofsky,2020-04-28 13:48:14,"re: https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413440418\n\n> I think you can just copy-paste actual new comment in [d6d6632](https://github.com/bitcoin/bitcoin/commit/d6d6632edd3465e2b577c9eeedad90b061f8a392), which is originally yours (IIRC), I found it clearer\n\nI don't think I understand this suggestion. This comment is describing what the test does, and I don't think anyth",https://github.com/bitcoin/bitcoin/pull/18727#discussion_r416627524,416627524,src/wallet/test/wallet_tests.cpp
MarcoFalke,2020-04-29 15:55:51,"```suggestion\n    using MatchCb = std::function<void(const std::string&)>;\n```\n\nwhy does this need a return value? From glancing over it, it seems the same can be achieved with a callback that circumvents `m_found` and `m_cb` is set to nullptr by default.\n\nI presume you want to make this as flexible as possible for potential future use cases?\n\n",https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426353,417426353,src/test/util/logging.h
MarcoFalke,2020-04-29 15:56:24,Could add a docstring here on how to use it?,https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426764,417426764,src/test/util/logging.h
ryanofsky,2020-04-29 17:20:59,"re: https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426353\n\n> why does this need a return value? From glancing over it, it seems the same can be achieved with a callback that circumvents `m_found` and `m_cb` is set to nullptr by default.\n\nI added comment to clarify what this is doing. Suggestion to change return and argument types seems like it would complicate DebugLogHelper ",https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417482733,417482733,src/test/util/logging.h
ryanofsky,2020-04-29 17:21:09,"re: https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426764\n\n> Could add a docstring here on how to use it?\n\nYes, added this",https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417482819,417482819,src/test/util/logging.h
