[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/617482557",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-617482557",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 617482557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzQ4MjU1Nw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-22T00:42:21Z",
    "updated_at": "2020-04-29T17:12:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/617482557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620162654",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-620162654",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 620162654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDE2MjY1NA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T18:42:17Z",
    "updated_at": "2020-04-27T18:42:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased f9cea7231dfec9c75b206899c818301401d8c0d4 -> 2142bf14fc72b8555ca81af5913e329ceda8f782 ([`pr/create.1`](https://github.com/ryanofsky/bitcoin/commits/pr/create.1) -> [`pr/create.2`](https://github.com/ryanofsky/bitcoin/commits/pr/create.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/create.1-rebase..pr/create.2)) due to conflict with #16528\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620162654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621372488",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621372488",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 621372488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTM3MjQ4OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T18:04:27Z",
    "updated_at": "2020-04-29T18:04:27Z",
    "author_association": "MEMBER",
    "body": "ACK 7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621372488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621711308",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621711308",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 621711308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTcxMTMwOA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T09:07:51Z",
    "updated_at": "2020-04-30T09:07:51Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke, I may miss ACK timeline but you could have wait #16426 first to avoid another round of review :(",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621711308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621767816",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621767816",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 621767816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTc2NzgxNg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T11:11:48Z",
    "updated_at": "2020-04-30T11:11:48Z",
    "author_association": "MEMBER",
    "body": "@ariard Sorry :sob: , but I didn't feel comfortable merging #16426 with the assert removed. So 16426 would have to go through another round of review anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621767816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621769252",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621769252",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 621769252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTc2OTI1Mg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T11:15:06Z",
    "updated_at": "2020-04-30T11:15:06Z",
    "author_association": "MEMBER",
    "body": "It seems two other reviewers agreed with me: https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621421348 and this one seemed ready to merge.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621769252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621872442",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621872442",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 621872442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg3MjQ0Mg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:02:18Z",
    "updated_at": "2020-04-30T14:02:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I though #16426 was ready to merge, but it should be pretty easy to update #16426 after this PR. All this PR does is add a test, and I posted a version of the test that works with #16426 previously: 25651aad58b1f6e543f1ad565d821de46268e724 ([branch](https://github.com/ryanofsky/bitcoin/commits/review.16426.5-edit)) in https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412461100, so there should be no new code to write, and only a little bit to review",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621872442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621880481",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621880481",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 621880481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg4MDQ4MQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:15:28Z",
    "updated_at": "2020-04-30T14:15:28Z",
    "author_association": "MEMBER",
    "body": "How hard is it to adapt the new tests? As you have already done the work, could you rebase 25651aa on current master+the other pull. So it can simply be cherry-picked by @ariard and we can move forward with #16426 and merge it?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621880481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621883238",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-621883238",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 621883238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg4MzIzOA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:19:51Z",
    "updated_at": "2020-04-30T14:20:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll rebase 25651aad58b1f6e543f1ad565d821de46268e724, but it's should also be pretty simple for antoine to just copy and paste working test code https://github.com/ryanofsky/bitcoin/blob/25651aad58b1f6e543f1ad565d821de46268e724/src/wallet/test/wallet_tests.cpp#L669-L771 into the last commit over the broken test",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621883238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622046352",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#issuecomment-622046352",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18727",
    "id": 622046352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjA0NjM1Mg==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T19:09:12Z",
    "updated_at": "2020-04-30T19:09:12Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke yes you were right, I didn't know how to interpret your Approach ACK at first look, given your also quoted a commit. Maybe it's better in this kind of case to not ACK at all to underlies fix matters for the reviewer. Nevermind let's move forward :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622046352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413439175",
    "pull_request_review_id": 398695333,
    "id": 413439175,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzOTE3NQ==",
    "diff_hunk": "@@ -634,4 +666,80 @@ BOOST_FIXTURE_TEST_CASE(dummy_input_size_test, TestChain100Setup)\n     BOOST_CHECK_EQUAL(CalculateNestedKeyhashInputSize(true), DUMMY_NESTED_P2WPKH_INPUT_SIZE);\n }\n \n+//! Test CreateWalletFromFile function and its behavior handling potential race\n+//! conditions if it's called the same time an incoming transaction shows up in\n+//! the mempool or a new block.\n+//!\n+//! It isn't possible for a unit test to totally verify there aren't race\n+//! conditions without hooking into the implementation more, so this test just\n+//! verifies that new transactions are detected during loading without any\n+//! notifications at all, to infer that timing of notifications shouldn't\n+//! matter. The test could be extended to cover other scenarios in the future.\n+BOOST_FIXTURE_TEST_CASE(CreateWalletFromFile, TestChain100Setup)\n+{\n+    // Create new wallet with known key and unload it.\n+    auto chain = interfaces::MakeChain(m_node);\n+    auto wallet = TestLoadWallet(*chain);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    AddKey(*wallet, key);\n+    TestUnloadWallet(std::move(wallet));\n+\n+    // Add log hook to detect AddToWallet events from rescans, blockConnected,\n+    // and transactionAddedToMempool notifications\n+    int addtx_count = 0;\n+    DebugLogHelper addtx_counter(\"[default wallet] AddToWallet\", [&](const std::string* s) {\n+        if (s) ++addtx_count;\n+        return false;\n+    });\n+\n+    bool rescan_completed = false;\n+    DebugLogHelper rescan_check(\"[default wallet] Rescan completed\", [&](const std::string* s) {\n+        if (s) {\n+            // For now, just assert that cs_main is being held during the\n+            // rescan, ensuring that a new block couldn't be connected\n+            // that the wallet would miss. After\n+            // https://github.com/bitcoin/bitcoin/pull/16426 when cs_main is no\n+            // longer held, the test can be extended to append a new block here\n+            // and check it's handled correctly.\n+            AssertLockHeld(::cs_main);\n+            rescan_completed = true;\n+        }\n+        return false;\n+    });\n+\n+    // Block the queue to prevent the wallet receiving blockConnected and\n+    // transactionAddedToMempool notifications, and create block and mempool\n+    // transactions paying to the wallet\n+    std::promise<void> promise;\n+    CallFunctionInValidationInterfaceQueue([&promise] {\n+        promise.get_future().wait();\n+    });\n+    std::string error;\n+    m_coinbase_txns.push_back(CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+    auto block_tx = TestSimpleSpend(*m_coinbase_txns[0], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\n+    m_coinbase_txns.push_back(CreateAndProcessBlock({block_tx}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+    auto mempool_tx = TestSimpleSpend(*m_coinbase_txns[1], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\n+    BOOST_CHECK(chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, false, error));\n+\n+    // Reload wallet and make sure new transactions are detected despite events\n+    // being blocked\n+    wallet = TestLoadWallet(*chain);\n+    BOOST_CHECK(rescan_completed);\n+    BOOST_CHECK_EQUAL(addtx_count, 2);\n+    {\n+        LOCK(wallet->cs_wallet);\n+        BOOST_CHECK_EQUAL(wallet->mapWallet.count(block_tx.GetHash()), 1);\n+        BOOST_CHECK_EQUAL(wallet->mapWallet.count(mempool_tx.GetHash()), 1);\n+    }\n+\n+    // Unblock notification queue and make sure stale blockConnected and\n+    // transactionAddedToMempool events are processed",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": 126,
    "original_position": 125,
    "commit_id": "7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "original_commit_id": "f9cea7231dfec9c75b206899c818301401d8c0d4",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Transactions contained by stale blockConnected and transactionAddedToMempool should be processed twice ? May we assert that their `nTimeReceived` hasn't change between duplicate processing?",
    "created_at": "2020-04-23T01:16:53Z",
    "updated_at": "2020-04-29T18:00:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413439175",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413439175"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413439175"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413439175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 762,
    "original_line": 762,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413440418",
    "pull_request_review_id": 398695333,
    "id": 413440418,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MDQxOA==",
    "diff_hunk": "@@ -634,4 +666,80 @@ BOOST_FIXTURE_TEST_CASE(dummy_input_size_test, TestChain100Setup)\n     BOOST_CHECK_EQUAL(CalculateNestedKeyhashInputSize(true), DUMMY_NESTED_P2WPKH_INPUT_SIZE);\n }\n \n+//! Test CreateWalletFromFile function and its behavior handling potential race\n+//! conditions if it's called the same time an incoming transaction shows up in\n+//! the mempool or a new block.",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": 59,
    "original_position": 59,
    "commit_id": "7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "original_commit_id": "f9cea7231dfec9c75b206899c818301401d8c0d4",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you can just copy-paste actual new comment in d6d6632, which is originally yours (IIRC), I found it clearer",
    "created_at": "2020-04-23T01:20:50Z",
    "updated_at": "2020-04-29T18:00:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413440418",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413440418"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413440418"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413440418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 695,
    "original_line": 695,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416627368",
    "pull_request_review_id": 401852693,
    "id": 416627368,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYyNzM2OA==",
    "diff_hunk": "@@ -634,4 +666,80 @@ BOOST_FIXTURE_TEST_CASE(dummy_input_size_test, TestChain100Setup)\n     BOOST_CHECK_EQUAL(CalculateNestedKeyhashInputSize(true), DUMMY_NESTED_P2WPKH_INPUT_SIZE);\n }\n \n+//! Test CreateWalletFromFile function and its behavior handling potential race\n+//! conditions if it's called the same time an incoming transaction shows up in\n+//! the mempool or a new block.\n+//!\n+//! It isn't possible for a unit test to totally verify there aren't race\n+//! conditions without hooking into the implementation more, so this test just\n+//! verifies that new transactions are detected during loading without any\n+//! notifications at all, to infer that timing of notifications shouldn't\n+//! matter. The test could be extended to cover other scenarios in the future.\n+BOOST_FIXTURE_TEST_CASE(CreateWalletFromFile, TestChain100Setup)\n+{\n+    // Create new wallet with known key and unload it.\n+    auto chain = interfaces::MakeChain(m_node);\n+    auto wallet = TestLoadWallet(*chain);\n+    CKey key;\n+    key.MakeNewKey(true);\n+    AddKey(*wallet, key);\n+    TestUnloadWallet(std::move(wallet));\n+\n+    // Add log hook to detect AddToWallet events from rescans, blockConnected,\n+    // and transactionAddedToMempool notifications\n+    int addtx_count = 0;\n+    DebugLogHelper addtx_counter(\"[default wallet] AddToWallet\", [&](const std::string* s) {\n+        if (s) ++addtx_count;\n+        return false;\n+    });\n+\n+    bool rescan_completed = false;\n+    DebugLogHelper rescan_check(\"[default wallet] Rescan completed\", [&](const std::string* s) {\n+        if (s) {\n+            // For now, just assert that cs_main is being held during the\n+            // rescan, ensuring that a new block couldn't be connected\n+            // that the wallet would miss. After\n+            // https://github.com/bitcoin/bitcoin/pull/16426 when cs_main is no\n+            // longer held, the test can be extended to append a new block here\n+            // and check it's handled correctly.\n+            AssertLockHeld(::cs_main);\n+            rescan_completed = true;\n+        }\n+        return false;\n+    });\n+\n+    // Block the queue to prevent the wallet receiving blockConnected and\n+    // transactionAddedToMempool notifications, and create block and mempool\n+    // transactions paying to the wallet\n+    std::promise<void> promise;\n+    CallFunctionInValidationInterfaceQueue([&promise] {\n+        promise.get_future().wait();\n+    });\n+    std::string error;\n+    m_coinbase_txns.push_back(CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+    auto block_tx = TestSimpleSpend(*m_coinbase_txns[0], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\n+    m_coinbase_txns.push_back(CreateAndProcessBlock({block_tx}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+    auto mempool_tx = TestSimpleSpend(*m_coinbase_txns[1], 0, coinbaseKey, GetScriptForRawPubKey(key.GetPubKey()));\n+    BOOST_CHECK(chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, false, error));\n+\n+    // Reload wallet and make sure new transactions are detected despite events\n+    // being blocked\n+    wallet = TestLoadWallet(*chain);\n+    BOOST_CHECK(rescan_completed);\n+    BOOST_CHECK_EQUAL(addtx_count, 2);\n+    {\n+        LOCK(wallet->cs_wallet);\n+        BOOST_CHECK_EQUAL(wallet->mapWallet.count(block_tx.GetHash()), 1);\n+        BOOST_CHECK_EQUAL(wallet->mapWallet.count(mempool_tx.GetHash()), 1);\n+    }\n+\n+    // Unblock notification queue and make sure stale blockConnected and\n+    // transactionAddedToMempool events are processed",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": 126,
    "original_position": 125,
    "commit_id": "7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "original_commit_id": "f9cea7231dfec9c75b206899c818301401d8c0d4",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413439175\r\n\r\n> Transactions contained by stale blockConnected and transactionAddedToMempool should be processed twice ? May we assert that their `nTimeReceived` hasn't change between duplicate processing?\r\n\r\nInteresting suggestion, I added these checks.\r\n\r\nI don't think they should ideally be processed twice, and this was my original motivation for writing #15719: to get rid of stale, out of order events. But for now they are processed twice, so this PR just gets better test coverage in place before #15719",
    "created_at": "2020-04-28T13:48:00Z",
    "updated_at": "2020-04-29T18:00:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r416627368",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416627368"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r416627368"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416627368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 762,
    "original_line": 762,
    "side": "RIGHT",
    "in_reply_to_id": 413439175
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416627524",
    "pull_request_review_id": 401852693,
    "id": 416627524,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYyNzUyNA==",
    "diff_hunk": "@@ -634,4 +666,80 @@ BOOST_FIXTURE_TEST_CASE(dummy_input_size_test, TestChain100Setup)\n     BOOST_CHECK_EQUAL(CalculateNestedKeyhashInputSize(true), DUMMY_NESTED_P2WPKH_INPUT_SIZE);\n }\n \n+//! Test CreateWalletFromFile function and its behavior handling potential race\n+//! conditions if it's called the same time an incoming transaction shows up in\n+//! the mempool or a new block.",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": 59,
    "original_position": 59,
    "commit_id": "7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "original_commit_id": "f9cea7231dfec9c75b206899c818301401d8c0d4",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/18727#discussion_r413440418\r\n\r\n> I think you can just copy-paste actual new comment in [d6d6632](https://github.com/bitcoin/bitcoin/commit/d6d6632edd3465e2b577c9eeedad90b061f8a392), which is originally yours (IIRC), I found it clearer\r\n\r\nI don't think I understand this suggestion. This comment is describing what the test does, and I don't think anything in d6d6632edd3465e2b577c9eeedad90b061f8a392 would be reusable here to describe a new test. I did have a slightly different comment in the alternate version of the test I posted 25651aad58b1f6e543f1ad565d821de46268e724 ([branch](https://github.com/ryanofsky/bitcoin/commits/review.16426.5-edit)) https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412461100 if something about that is better",
    "created_at": "2020-04-28T13:48:14Z",
    "updated_at": "2020-04-29T18:00:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r416627524",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416627524"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r416627524"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416627524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 695,
    "original_line": 695,
    "side": "RIGHT",
    "in_reply_to_id": 413440418
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417426353",
    "pull_request_review_id": 402808591,
    "id": 417426353,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNjM1Mw==",
    "diff_hunk": "@@ -16,11 +16,13 @@ class DebugLogHelper\n     const std::string m_message;\n     bool m_found{false};\n     std::list<std::function<void(const std::string&)>>::iterator m_print_connection;\n+    using MatchFn = std::function<bool(const std::string*)>;",
    "path": "src/test/util/logging.h",
    "position": null,
    "original_position": 4,
    "commit_id": "7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "original_commit_id": "66a4d4b2ec76d507b089918d2ba944024e300549",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    using MatchCb = std::function<void(const std::string&)>;\r\n```\r\n\r\nwhy does this need a return value? From glancing over it, it seems the same can be achieved with a callback that circumvents `m_found` and `m_cb` is set to nullptr by default.\r\n\r\nI presume you want to make this as flexible as possible for potential future use cases?\r\n\r\n",
    "created_at": "2020-04-29T15:55:51Z",
    "updated_at": "2020-04-29T18:00:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426353",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417426353"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426353"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417426353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417426764",
    "pull_request_review_id": 402808591,
    "id": 417426764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNjc2NA==",
    "diff_hunk": "@@ -16,11 +16,13 @@ class DebugLogHelper\n     const std::string m_message;\n     bool m_found{false};\n     std::list<std::function<void(const std::string&)>>::iterator m_print_connection;\n+    using MatchFn = std::function<bool(const std::string*)>;\n+    MatchFn m_match;",
    "path": "src/test/util/logging.h",
    "position": 14,
    "original_position": 5,
    "commit_id": "7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "original_commit_id": "66a4d4b2ec76d507b089918d2ba944024e300549",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could add a docstring here on how to use it?",
    "created_at": "2020-04-29T15:56:24Z",
    "updated_at": "2020-04-29T18:00:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417426764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417426764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 30,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417482733",
    "pull_request_review_id": 402878689,
    "id": 417482733,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4MjczMw==",
    "diff_hunk": "@@ -16,11 +16,13 @@ class DebugLogHelper\n     const std::string m_message;\n     bool m_found{false};\n     std::list<std::function<void(const std::string&)>>::iterator m_print_connection;\n+    using MatchFn = std::function<bool(const std::string*)>;",
    "path": "src/test/util/logging.h",
    "position": null,
    "original_position": 4,
    "commit_id": "7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "original_commit_id": "66a4d4b2ec76d507b089918d2ba944024e300549",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426353\r\n\r\n> why does this need a return value? From glancing over it, it seems the same can be achieved with a callback that circumvents `m_found` and `m_cb` is set to nullptr by default.\r\n\r\nI added comment to clarify what this is doing. Suggestion to change return and argument types seems like it would complicate DebugLogHelper implementation instead of simplifying it, and make behavior specific to this particular test case (no ability to stop searching after a custom match and customize behavior if no match is found). I also like Fn _fn suffixes over Cb and am using them in interfaces and wallet code to be consistent with standard library naming and std::function, similar to how I like _mutex more than cs_ to be consistent with std::mutex.",
    "created_at": "2020-04-29T17:20:59Z",
    "updated_at": "2020-04-29T18:02:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417482733",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417482733"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417482733"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417482733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 417426353
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417482819",
    "pull_request_review_id": 402878689,
    "id": 417482819,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4MjgxOQ==",
    "diff_hunk": "@@ -16,11 +16,13 @@ class DebugLogHelper\n     const std::string m_message;\n     bool m_found{false};\n     std::list<std::function<void(const std::string&)>>::iterator m_print_connection;\n+    using MatchFn = std::function<bool(const std::string*)>;\n+    MatchFn m_match;",
    "path": "src/test/util/logging.h",
    "position": 14,
    "original_position": 5,
    "commit_id": "7918c1b019a36a8f9aa55daae422c6b6723b2a39",
    "original_commit_id": "66a4d4b2ec76d507b089918d2ba944024e300549",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417426764\r\n\r\n> Could add a docstring here on how to use it?\r\n\r\nYes, added this",
    "created_at": "2020-04-29T17:21:09Z",
    "updated_at": "2020-04-29T18:02:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417482819",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417482819"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18727#discussion_r417482819"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18727"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417482819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 30,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 417426764
  }
]