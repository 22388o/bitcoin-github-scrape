[
  {
    "sha": "c21fb91adeeb64100e126b2a388966c1a3aacad3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjFmYjkxYWRlZWI2NDEwMGUxMjZiMmEzODg5NjZjMWEzYWFjYWQz",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2017-08-31T00:37:35Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-24T06:11:09Z"
      },
      "message": "Add tail-call semantics to script interpreter (not active).\n\nIf, at the end of script execution, the stack has more than one item on it, the top-most element is interpreted as a serialized script and executed, with the remaining elements on the stack as inputs. No state is maintained, and termination of the subscript terminates execution of the script as a whole. Only one tail-call is allowed per script execution, and neither P2SH nor segwit nor execution of the scriptSig results in tail-call semantics, although the P2SH or segwit redeem script can make a single tail-call.",
      "tree": {
        "sha": "46e2dbf9ed8f3f0bef2f734c7983378618938a9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46e2dbf9ed8f3f0bef2f734c7983378618938a9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c21fb91adeeb64100e126b2a388966c1a3aacad3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlreyn0ACgkQV692LbM1\nMyLrmQ/8Dege5om3iCvf5z+0JOrFZwNQYhYI8CPfOH/V/4Ic6qJtFuNeVJOhRLAv\nnUfiIf6h62NAzCCyBPUOAq2dXSu/+UREknb64GsEnk8CTOd5dCXVLTKyOqbhRjlN\nTOY/Be1PzQKFmRvn8Kh8XfPhMeoAi+/GJVTCUt2ZNF6Ptp1e0q6AlIzHru7IG4ny\noQfNcOCWDQl5l8CkocHbmuk288xwRe8q+2tK93qrzFhuScsf1kwSA8oTxAOnorkT\nlM4ZP/f5xHEP0kT+XCk57pR7MgfVfitCibiQhSiNAOTKZD9+oOy25hFkgq+g1y84\nAROg8F4BWJCD3nOAlVPpK1Tlr8hwjEODxvaODbZjL4oyeqG6jaYJTLj7VQXrmmc9\nGQ6tku/FpMSndK4XaIt1pEeldcEeRUJNDkWr82Ewzl31zv/ibklP24dUUATVKbmS\nXWjjcE9fyRcE6aVwXgRQlmuvZT0u9eBGYCekqOVpLX5FIzx/UcloIg0Fr5aLjOre\n+f1QVASLaiIRNL9jVoSritDymaB1Lw4WgSXX+n0Ckgb3d2FGw6K+f/hOY5UsnCBr\nK35Yp1xXIJtXl25cWn3J5Mylo52XQ37eCe86X1aeKT2s3wjEmSniyMlnEso8hkBc\nPrlHppQ4aczdR63AVyqla0uJ41+joqNTfkHBp8CErR7rtKSd86M=\n=GAqx\n-----END PGP SIGNATURE-----",
        "payload": "tree 46e2dbf9ed8f3f0bef2f734c7983378618938a9b\nparent bdda14d1c01c253a5c553b3b02a82a856b6a1f92\nauthor Mark Friedenbach <mark@friedenbach.org> 1504139855 -0700\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1524550269 +0900\n\nAdd tail-call semantics to script interpreter (not active).\n\nIf, at the end of script execution, the stack has more than one item on it, the top-most element is interpreted as a serialized script and executed, with the remaining elements on the stack as inputs. No state is maintained, and termination of the subscript terminates execution of the script as a whole. Only one tail-call is allowed per script execution, and neither P2SH nor segwit nor execution of the scriptSig results in tail-call semantics, although the P2SH or segwit redeem script can make a single tail-call.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c21fb91adeeb64100e126b2a388966c1a3aacad3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c21fb91adeeb64100e126b2a388966c1a3aacad3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c21fb91adeeb64100e126b2a388966c1a3aacad3/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bdda14d1c01c253a5c553b3b02a82a856b6a1f92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bdda14d1c01c253a5c553b3b02a82a856b6a1f92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bdda14d1c01c253a5c553b3b02a82a856b6a1f92"
      }
    ],
    "stats": {
      "total": 530,
      "additions": 525,
      "deletions": 5
    },
    "files": [
      {
        "sha": "af2fe331d03aea8f94b73aa214a644115b489e62",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 5,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=c21fb91adeeb64100e126b2a388966c1a3aacad3",
        "patch": "@@ -278,7 +278,7 @@ int FindAndDelete(CScript& script, const CScript& b)\n     return nFound;\n }\n \n-bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror)\n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& scriptIn, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror)\n {\n     static const CScriptNum bnZero(0);\n     static const CScriptNum bnOne(1);\n@@ -288,17 +288,21 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n     // static const valtype vchZero(0);\n     static const valtype vchTrue(1, 1);\n \n+    CScript script = scriptIn;\n+    bool allow_tail_call = (flags & SCRIPT_VERIFY_TAIL_CALL) != 0;\n+    std::vector<valtype> altstack;\n+    int nOpCount = 0;\n+\n+tailcall:\n     CScript::const_iterator pc = script.begin();\n     CScript::const_iterator pend = script.end();\n     CScript::const_iterator pbegincodehash = script.begin();\n     opcodetype opcode;\n     valtype vchPushValue;\n     std::vector<bool> vfExec;\n-    std::vector<valtype> altstack;\n     set_error(serror, SCRIPT_ERR_UNKNOWN_ERROR);\n     if (script.size() > MAX_SCRIPT_SIZE)\n         return set_error(serror, SCRIPT_ERR_SCRIPT_SIZE);\n-    int nOpCount = 0;\n     bool fRequireMinimal = (flags & SCRIPT_VERIFY_MINIMALDATA) != 0;\n \n     try\n@@ -1069,6 +1073,69 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n     if (!vfExec.empty())\n         return set_error(serror, SCRIPT_ERR_UNBALANCED_CONDITIONAL);\n \n+    if (allow_tail_call && !stack.empty() && ((stack.size() + altstack.size()) >= 2) && CastToBool(stack.back())) {\n+        // Replace the script we just finished executing with the\n+        // subscript from the top of the stack:\n+        const valtype& top = stacktop(-1);\n+        script = CScript(top.begin(), top.end());\n+        popstack(stack);\n+        // A single component policy script is simply specified.\n+        // Multiple scripts are specified with OP_1 (2 script\n+        // components) through OP_16 (17 script components):\n+        if ((script.size() == 1) && ((OP_1 <= script.front()) && (script.front() <= OP_16))) {\n+            // If policy script is one of OP_1 ... OP_16, then it\n+            // actually specifies (one less than) the number of script\n+            // components that follow, which are concatinated to form\n+            // the policy script.\n+            const std::size_t num_scripts = (script.front() - OP_1) + 2;\n+            if ((stack.size() + altstack.size()) < num_scripts)\n+                return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+            // First we determine the size of the aggregate script, so\n+            // we can allocate enough space to hold it. In doing so we\n+            // also advance an iterator to point to the \"first\" script\n+            // component, the one deepest on the combined stacks.\n+            std::vector<valtype>* curstack = &stack;\n+            std::size_t elem = curstack->size();\n+            std::size_t script_size = 0;\n+            for (std::size_t i = 0; i < num_scripts; ++i) {\n+                if (elem == 0) {\n+                    curstack = &altstack;\n+                    elem = curstack->size();\n+                }\n+                --elem;\n+                script_size += (*curstack)[elem].size();\n+            }\n+            script.resize(script_size);\n+            // We copy the script components into script in reverse\n+            // order, beginning with the deepest script component on\n+            // the stack:\n+            auto pos = script.begin();\n+            for (std::size_t i = 0; i < num_scripts; ++i) {\n+                std::copy((*curstack)[elem].begin(), (*curstack)[elem].end(), pos);\n+                pos += (*curstack)[elem].size();\n+                ++elem;\n+                if (elem == curstack->size()) {\n+                    curstack = &stack;\n+                    elem = 0;\n+                }\n+            }\n+            // Finally we pop the consumed script components off their\n+            // respective stacks:\n+            for (std::size_t i = 0; i < num_scripts; ++i) {\n+                if (!stack.empty())\n+                    popstack(stack);\n+                else\n+                    popstack(altstack);\n+            }\n+        }\n+        // Only allow one tail-call:\n+        allow_tail_call = false;\n+        // Disable nOpCount limit for subscript, effectively:\n+        nOpCount = std::numeric_limits<int>::min();\n+        // Go back to the top of this function:\n+        goto tailcall;\n+    }\n+\n     return set_success(serror);\n }\n \n@@ -1443,6 +1510,8 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n         witness = &emptyWitness;\n     }\n     bool hadWitness = false;\n+    unsigned int witnessflags = flags;\n+    flags &= ~SCRIPT_VERIFY_TAIL_CALL;\n \n     set_error(serror, SCRIPT_ERR_UNKNOWN_ERROR);\n \n@@ -1474,7 +1543,7 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n                 // The scriptSig must be _exactly_ CScript(), otherwise we reintroduce malleability.\n                 return set_error(serror, SCRIPT_ERR_WITNESS_MALLEATED);\n             }\n-            if (!VerifyWitnessProgram(*witness, witnessversion, witnessprogram, flags, checker, serror)) {\n+            if (!VerifyWitnessProgram(*witness, witnessversion, witnessprogram, witnessflags, checker, serror)) {\n                 return false;\n             }\n             // Bypass the cleanstack check at the end. The actual stack is obviously not clean\n@@ -1519,7 +1588,7 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n                     // reintroduce malleability.\n                     return set_error(serror, SCRIPT_ERR_WITNESS_MALLEATED_P2SH);\n                 }\n-                if (!VerifyWitnessProgram(*witness, witnessversion, witnessprogram, flags, checker, serror)) {\n+                if (!VerifyWitnessProgram(*witness, witnessversion, witnessprogram, witnessflags, checker, serror)) {\n                     return false;\n                 }\n                 // Bypass the cleanstack check at the end. The actual stack is obviously not clean"
      },
      {
        "sha": "2268a05ebe12624ba2cf3f2573e6fa88ec5d3219",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=c21fb91adeeb64100e126b2a388966c1a3aacad3",
        "patch": "@@ -111,6 +111,11 @@ enum\n     // Public keys in segregated witness scripts must be compressed\n     //\n     SCRIPT_VERIFY_WITNESS_PUBKEYTYPE = (1U << 15),\n+\n+    // Tail call recursion\n+    //\n+    // See BIP-117 for details.\n+    SCRIPT_VERIFY_TAIL_CALL = (1U << 17),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);"
      },
      {
        "sha": "3630b7e43677feacac10bd7f1055d7f478fa2931",
        "filename": "src/test/data/script_tests.json",
        "status": "modified",
        "additions": 437,
        "deletions": 0,
        "changes": 437,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/test/data/script_tests.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/test/data/script_tests.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_tests.json?ref=c21fb91adeeb64100e126b2a388966c1a3aacad3",
        "patch": "@@ -2615,5 +2615,442 @@\n [\"0 0x09 0x300602010102010101 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \"0x01 0x14 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0x01 0x14 CHECKMULTISIG NOT\", \"DERSIG\", \"OK\", \"BIP66-compliant but not NULLFAIL-compliant\"],\n [\"0 0x09 0x300602010102010101 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\", \"0x01 0x14 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0x01 0x14 CHECKMULTISIG NOT\", \"DERSIG,NULLFAIL\", \"NULLFAIL\", \"BIP66-compliant but not NULLFAIL-compliant\"],\n \n+[\"Tail call recursion tests\"],\n+[\n+    [\n+        \"\",\n+        \"61\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb\",\n+    \"P2SH,WITNESS,CLEANSTACK\",\n+    \"EVAL_FALSE\",\n+    \"baseline\"\n+],\n+[\n+    [\n+        \"01\",\n+        \"61\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb\",\n+    \"P2SH,WITNESS,CLEANSTACK\",\n+    \"OK\",\n+    \"baseline\"\n+],\n+[\n+    [\n+        \"6a\",\n+        \"\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK\",\n+    \"OK\",\n+    \"baseline\"\n+],\n+[\n+    [\n+        \"\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call empty script always fails\"\n+],\n+[\n+    [\n+        \"00\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call false (OP_FALSE) script always fails\"\n+],\n+[\n+    [\n+        \"80\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call false (negative zero) script always fails\"\n+],\n+[\n+    [\n+        \"61\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call with NOP fails due to empty stack\"\n+],\n+[\n+    [\n+        \"0180\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call push negative zero fails due to leaving zero on stack\"\n+],\n+[\n+    [\n+        \"4f\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"0x22 0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"HASH160 0x14 0x905662e110e35dca6387a603053b8a62c939fa1c EQUAL\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OK\",\n+    \"Tail-call push true\"\n+],\n+[\n+    [\n+        \"6a\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_RETURN\",\n+    \"Tail-call OP_RETURN from P2WSH\"\n+],\n+[\n+    [\n+        \"6a\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"0x22 0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"HASH160 0x14 0x905662e110e35dca6387a603053b8a62c939fa1c EQUAL\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_RETURN\",\n+    \"Tail-call OP_RETURN from P2WSH-in-P2SH\"\n+],\n+[\n+    [\n+        \"6c\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OK\",\n+    \"Tail-call preserves alt-stack\"\n+],\n+[\n+    [\n+        \"016a\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OK\",\n+    \"Only one tail-call allowed\"\n+],\n+[\n+    [\n+        \"6a\",\n+        \"01\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_RETURN\",\n+    \"Tail-call with RETURN\"\n+],\n+[\n+    \"0 0x03 RETURN 0x01 NOP\",\n+    \"HASH160 0x14 0x994355199e516ff76c4fa4aab39337b9d84cf12b EQUAL\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call not executed in scriptSig\"\n+],\n+[\n+    \"1\",\n+    \"0x03 RETURN 0x01 NOP\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"CLEANSTACK\",\n+    \"Tail-call not executed in scriptPubKey\"\n+],\n+[\n+    \"1 0x02 0x01 RETURN\",\n+    \"HASH160 0x14 0xc45d70f97d8d98d508d94d6d7cb4fc2db9854ff6 EQUAL\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"CLEANSTACK\",\n+    \"Tail-call not executed in P2SH\"\n+],\n+[\n+    [\n+        \"00\",\n+        \"6b016a\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x26176bb962caefe65bcd78c56acaf878b0f28a8e6319557b023bc10566bc0a1b\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_RETURN\",\n+    \"Tail-call from P2WSH-wrapped-in-P2SH\"\n+],\n+[\n+    \"0\",\n+    \"1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 1ADD 201 EQUALVERIFY RETURN\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_COUNT\",\n+    \"Opcode limit exhaustion\"\n+],\n+[\n+    \"0 0x4ccen+    \"HASH160 0x14 0x2b6362daf55ca98b8dd0298cbca215e63dcd77cc EQUAL\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_COUNT\",\n+    \"Opcode limit exhaustion\"\n+],\n+[\n+    [\n+        \"00\",\n+        \"6b4ccf6c8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b02c900886a\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xa7ecca7f991cb24c6ed2dafc0530a09e74ed40950ba3370b47d8f0eb1a90cddb\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_RETURN\",\n+    \"P2WSH tail-call not subject to opcode limit\"\n+],\n+[\n+    [\n+        \"00\",\n+        \"6b4ccf6c8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b02c900886a\",\n+        0.00000001\n+    ],\n+    \"0x22 0x00 0x20 0xa7ecca7f991cb24c6ed2dafc0530a09e74ed40950ba3370b47d8f0eb1a90cddb\",\n+    \"HASH160 0x14 0xaa15a9747ce973a657d4f278362216d0e38f2ca3 EQUAL\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_RETURN\",\n+    \"P2WSH wrapped in P2SH tail-call not subject to opcode limit\"\n+],\n+[\n+    [\n+        \"51\",\n+        \"6a\",\n+        \"6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"INVALID_STACK_OPERATION\",\n+    \"Tail-call of OP_1 with missing stack elements\"\n+],\n+[\n+    [\n+        \"51\",\n+        \"61\",\n+        \"61\",\n+        \"6b6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xad370ed99b189921e7fe26057c40aab9f4fee8385e47606f50f348b9a5530af0\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call of OP_1 that results in empty stack\"\n+],\n+[\n+    [\n+        \"51\",\n+        \"6a\",\n+        \"6a\",\n+        \"6b6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xad370ed99b189921e7fe26057c40aab9f4fee8385e47606f50f348b9a5530af0\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OP_RETURN\",\n+    \"Tail-call of OP_1 with OP_RETURN\"\n+],\n+[\n+    [\n+        \"51\",\n+        \"51\",\n+        \"61\",\n+        \"6b6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xad370ed99b189921e7fe26057c40aab9f4fee8385e47606f50f348b9a5530af0\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OK\",\n+    \"Tail-call of OP_1\"\n+],\n+[\n+    [\n+        \"51\",\n+        \"51\",\n+        \"51\",\n+        \"6b6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xad370ed99b189921e7fe26057c40aab9f4fee8385e47606f50f348b9a5530af0\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call of OP_1 with too many stack elements\"\n+],\n+[\n+    [\n+        \"60\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xee6321d758cc85fac5f6ad5983bbd4ad1dd594c564fcc8e2f5896f09afc4d574\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"INVALID_STACK_OPERATION\",\n+    \"Tail-call of OP_16 with insufficient stack elements\"\n+],\n+[\n+    [\n+        \"60\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xedda83f4bc5d42e0149bb4a0534bb71001b21116748b1088978bfb008149630f\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call of OP_16 that results in empty stack\"\n+],\n+[\n+    [\n+        \"60\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"51\",\n+        \"6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xedda83f4bc5d42e0149bb4a0534bb71001b21116748b1088978bfb008149630f\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"OK\",\n+    \"Tail-call of OP_16\"\n+],\n+[\n+    [\n+        \"60\",\n+        \"51\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"61\",\n+        \"51\",\n+        \"6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b\",\n+        0.00000001\n+    ],\n+    \"\",\n+    \"0x00 0x20 0xedda83f4bc5d42e0149bb4a0534bb71001b21116748b1088978bfb008149630f\",\n+    \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n+    \"EVAL_FALSE\",\n+    \"Tail-call of OP_16 with cleanstack violation\"\n+],\n+\n [\"The End\"]\n ]"
      },
      {
        "sha": "d7f01098227046fdb5a5ef94365c2634c46d3e6d",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=c21fb91adeeb64100e126b2a388966c1a3aacad3",
        "patch": "@@ -314,6 +314,10 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0x60 0x21 0xff25429251b5a84f452230a3c75fd886b7fc5a7865ce4a7bb7a9d7c5be6da3dbff\", 1000]],\n \"010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e803000000000000015100000000\", \"P2SH,WITNESS,DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM\"],\n \n+[\"Tail call direct from scriptPubKey\"],\n+[[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0x23 0x2103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ac\", 1000]],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000049483045022100aa5d8aa40a90f23ce2c3d11bc845ca4a12acd99cbea37de6b9f6d86edebba8cb022022dedc2aa0a255f74d04c0b76ece2d7c691f9dd11a64a8ac49f62a99c3a05f9d01ffffffff01e8030000000000001976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac00000000\", \"P2SH,WITNESS,TAIL_CALL,CLEANSTACK\"],\n+\n [\"FindAndDelete tests\"],\n [\"This is a test of FindAndDelete. The first tx is a spend of normal scriptPubKey and the second tx is a spend of bare P2WSH.\"],\n [\"The redeemScript/witnessScript is CHECKSIGVERIFY <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01>.\"],"
      },
      {
        "sha": "f17c5d8c137b7e2275bc6fe5fbe87d35e4232057",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=c21fb91adeeb64100e126b2a388966c1a3aacad3",
        "patch": "@@ -331,6 +331,10 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0x00 0x20 0xff25429251b5a84f452230a3c75fd886b7fc5a7865ce4a7bb7a9d7c5be6da3db\", 1000]],\n \"0100000000010100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e8030000000000001976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac02483045022100aa5d8aa40a90f23ce2c3d11bc845ca4a12acd99cbea37de6b9f6d86edebba8cb022022dedc2aa0a255f74d04c0b76ece2d7c691f9dd11a64a8ac49f62a99c3a05f9d01232103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ac00000000\", \"P2SH,WITNESS\"],\n \n+[\"Valid P2WSH with tail-call\"],\n+[[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0x00 0x20 0x810339287c3a7aa37b8e8ae29fa03712f52e1118ffd899ce93a612d857dffe2b\", 1000]],\n+\"0100000000010100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e8030000000000001976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac02483045022100aa5d8aa40a90f23ce2c3d11bc845ca4a12acd99cbea37de6b9f6d86edebba8cb022022dedc2aa0a255f74d04c0b76ece2d7c691f9dd11a64a8ac49f62a99c3a05f9d0124232103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ac00000000\", \"P2SH,WITNESS,TAIL_CALL,CLEANSTACK\"],\n+\n [\"Valid P2SH(P2WPKH)\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"HASH160 0x14 0xfe9c7dacc9fcfbf7e3b7d5ad06aa2b28c5a7b7e3 EQUAL\", 1000]],\n \"01000000000101000100000000000000000000000000000000000000000000000000000000000000000000171600144c9c3dfac4207d5d8cb89df5722cb3d712385e3fffffffff01e8030000000000001976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac02483045022100cfb07164b36ba64c1b1e8c7720a56ad64d96f6ef332d3d37f9cb3c96477dc44502200a464cd7a9cf94cd70f66ce4f4f0625ef650052c7afcfe29d7d7e01830ff91ed012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc7100000000\", \"P2SH,WITNESS\"],"
      },
      {
        "sha": "3cf57c207d35eae9968d2a22ce9a8ae3eb425607",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c21fb91adeeb64100e126b2a388966c1a3aacad3/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=c21fb91adeeb64100e126b2a388966c1a3aacad3",
        "patch": "@@ -53,6 +53,7 @@ static std::map<std::string, unsigned int> mapFlagNames = {\n     {std::string(\"WITNESS\"), (unsigned int)SCRIPT_VERIFY_WITNESS},\n     {std::string(\"DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM\"), (unsigned int)SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM},\n     {std::string(\"WITNESS_PUBKEYTYPE\"), (unsigned int)SCRIPT_VERIFY_WITNESS_PUBKEYTYPE},\n+    {std::string(\"TAIL_CALL\"), (unsigned int)SCRIPT_VERIFY_TAIL_CALL},\n };\n \n unsigned int ParseScriptFlags(std::string strFlags)"
      }
    ]
  },
  {
    "sha": "5790a07798fcf3fd0dfca89fb1cc9310184a69ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzkwYTA3Nzk4ZmNmM2ZkMGRmY2E4OWZiMWNjOTMxMDE4NGE2OWFj",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2017-08-31T00:44:25Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-24T06:11:09Z"
      },
      "message": "Enable tail-call semantics as a standard script validation flag. Transactions that fail tail-call verification will be rejected from the mempool, making it easier to test and later soft-fork activate this feature. Blocks which contain transactions with \"invalid\" tail-call semantics will still be accepted; this is *not* the soft-fork required to use tail-call semantics in production.",
      "tree": {
        "sha": "c66c13ebf10798a77ba3e5e7dc1803931dfffd0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c66c13ebf10798a77ba3e5e7dc1803931dfffd0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5790a07798fcf3fd0dfca89fb1cc9310184a69ac",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlreyn0ACgkQV692LbM1\nMyLY0Q/9FzdDDT3ezY6KpqvoDwdJ9gVtDeulpUjvUwV9rzeZKnzEJvYanz6xhvSy\nme5+qrYXVIIjzZ4A9FzP3h8dqYaDxQ39dL7zXSlSY+dgnPrLiGeAC3GcSz146Pim\nxrszl4xY0g2PUgef22RRExlvQyF6Suyk2YUBiUv8iTwu0F4ml1iYqvERkBIKkPFk\nx/968PLShpAdQqOziiVFmaczyIGtGNhQIJz319MM5E7tGqsfcuYJXdvS6bh/ACOW\nVm5zAEOx25jc1c+vJD/kxJGHnxPthsI74OuSFpaaj5QyLpDXZOFRtw8CWGlsCeTP\nA3izmMdSdaEOO5naaGmimo4DVL0/J417KImV1ykQ/lldbtvCgIbR1g+dz01NS3KV\nvSC4QGyYlgNKAIjrRFRqbcgILJCc+TZ0iM8gzKJWHwT/rvqCIueIfdpR69Fp30P+\nJ7+bKGDC+HLPgjr6tHP2Jtn+0E/HEs9SqDNamAHbhtzZDJUO5H4pZymGjrEOGFvF\npasI2WzyrswYNQiPUxQsKQLkjiYRApJOzOvANuwOiUOeWg+sx38pCL7XTC14FFOP\nry4kJnSLToDO/vdNaYV4x6+3UPuU64SrjQ++ckxNoQQ66jwmacTZpkrN5DQyKqCQ\nEetbQgwwH55hpaYyW95jPCvDlV3UsP6Pe0AOahtV8wCGnz/8eKE=\n=4HFi\n-----END PGP SIGNATURE-----",
        "payload": "tree c66c13ebf10798a77ba3e5e7dc1803931dfffd0c\nparent c21fb91adeeb64100e126b2a388966c1a3aacad3\nauthor Mark Friedenbach <mark@friedenbach.org> 1504140265 -0700\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1524550269 +0900\n\nEnable tail-call semantics as a standard script validation flag. Transactions that fail tail-call verification will be rejected from the mempool, making it easier to test and later soft-fork activate this feature. Blocks which contain transactions with \"invalid\" tail-call semantics will still be accepted; this is *not* the soft-fork required to use tail-call semantics in production.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5790a07798fcf3fd0dfca89fb1cc9310184a69ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5790a07798fcf3fd0dfca89fb1cc9310184a69ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5790a07798fcf3fd0dfca89fb1cc9310184a69ac/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c21fb91adeeb64100e126b2a388966c1a3aacad3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c21fb91adeeb64100e126b2a388966c1a3aacad3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c21fb91adeeb64100e126b2a388966c1a3aacad3"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3146f39c879622685b5a8b5d698cb0fe5a43a742",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5790a07798fcf3fd0dfca89fb1cc9310184a69ac/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5790a07798fcf3fd0dfca89fb1cc9310184a69ac/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=5790a07798fcf3fd0dfca89fb1cc9310184a69ac",
        "patch": "@@ -63,7 +63,8 @@ static constexpr unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VE\n                                                              SCRIPT_VERIFY_LOW_S |\n                                                              SCRIPT_VERIFY_WITNESS |\n                                                              SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM |\n-                                                             SCRIPT_VERIFY_WITNESS_PUBKEYTYPE;\n+                                                             SCRIPT_VERIFY_WITNESS_PUBKEYTYPE |\n+                                                             SCRIPT_VERIFY_TAIL_CALL;\n \n /** For convenience, standard but not mandatory verify flags. */\n static constexpr unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;"
      }
    ]
  },
  {
    "sha": "9a40e8e42a216172cee3ee6e4fca5fe4a9f746d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTQwZThlNDJhMjE2MTcyY2VlM2VlNmU0ZmNhNWZlNGE5Zjc0NmQ4",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-24T08:42:35Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-24T08:42:35Z"
      },
      "message": "f'script_tests: switch to CLEANSTACK where appropriate",
      "tree": {
        "sha": "bc30064366f157d89f1cce83e359fa41c91b659e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc30064366f157d89f1cce83e359fa41c91b659e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a40e8e42a216172cee3ee6e4fca5fe4a9f746d8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlre7fsACgkQV692LbM1\nMyIhCQ/+NkzDJgUbz7gIOms5tTX5U7mnHaQnPUnRHVo7zPgk4X8jfJ2oB8+LOR3D\nv8NPbdynDUapwhpwHHnC+TY3fYD9ITXHnskQo9kjduY1FPntQVpNR+35oaiF7KvO\n+vLL7QeG2gWsOFGYG0F+anpNZDQEWtftTOW27yUMb5Zve32Ockps5fEnaAVK2IZM\nAldwsAMG51h0eAPnMYbLh9a61UOe6d6mxd33YXVLL/upoCdSHsXj6xtBQTZXFHAa\neE6oQ4n5YlD2/dhRJOhg1Gb2wnyKn2VpTY1XhkySwn/aXqzOyu9edE68fJiNLf3O\nhhS/gHGurYrjXUt+CTBGnxwXUU0w+vM1NrSCUnGKopWj3upcgKk/OKYFNKWjva5x\nF17WsZz4yUGkduIu4OsBssKLOGLSosGSPEpiH0Ohmb9jcqQh+v5VmZoFN10jTNl7\nQaFNFnw8HzdTOx/LsLZXPhhEePTC07HfIUhAmp104F74hT05MixeKT1BlCrupOH/\nYMIFmPZNCENFgs01gvmmBxH5/08h9J8VuJwa+2JmCoYsmGA/XQ703O48llnwWdgY\nw4Nitwbhh9Fh6g0ZhnMHXhsvXbvfFel1qWHTKXi65kbt4XowaCmMQ4fsaOuJqP60\nFwymZNpS59r0tytfSNYSMV1uyaZ/X3p6VhRLhsJ8G/pC+d5yRTM=\n=jx0R\n-----END PGP SIGNATURE-----",
        "payload": "tree bc30064366f157d89f1cce83e359fa41c91b659e\nparent 5790a07798fcf3fd0dfca89fb1cc9310184a69ac\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1524559355 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1524559355 +0900\n\nf'script_tests: switch to CLEANSTACK where appropriate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a40e8e42a216172cee3ee6e4fca5fe4a9f746d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a40e8e42a216172cee3ee6e4fca5fe4a9f746d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a40e8e42a216172cee3ee6e4fca5fe4a9f746d8/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5790a07798fcf3fd0dfca89fb1cc9310184a69ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5790a07798fcf3fd0dfca89fb1cc9310184a69ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5790a07798fcf3fd0dfca89fb1cc9310184a69ac"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "dac263fcd6b8c5e2b5d99ef517a4596b423ce038",
        "filename": "src/test/data/script_tests.json",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a40e8e42a216172cee3ee6e4fca5fe4a9f746d8/src/test/data/script_tests.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a40e8e42a216172cee3ee6e4fca5fe4a9f746d8/src/test/data/script_tests.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_tests.json?ref=9a40e8e42a216172cee3ee6e4fca5fe4a9f746d8",
        "patch": "@@ -2702,7 +2702,7 @@\n     \"\",\n     \"0x00 0x20 0x8254c329a92850f6d539dd376f4816ee2764517da5e0235514af433164480d7a\",\n     \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n-    \"EVAL_FALSE\",\n+    \"CLEANSTACK\",\n     \"Tail-call with NOP fails due to empty stack\"\n ],\n [\n@@ -2891,7 +2891,7 @@\n     \"\",\n     \"0x00 0x20 0xad370ed99b189921e7fe26057c40aab9f4fee8385e47606f50f348b9a5530af0\",\n     \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n-    \"EVAL_FALSE\",\n+    \"CLEANSTACK\",\n     \"Tail-call of OP_1 that results in empty stack\"\n ],\n [\n@@ -2933,7 +2933,7 @@\n     \"\",\n     \"0x00 0x20 0xad370ed99b189921e7fe26057c40aab9f4fee8385e47606f50f348b9a5530af0\",\n     \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n-    \"EVAL_FALSE\",\n+    \"CLEANSTACK\",\n     \"Tail-call of OP_1 with too many stack elements\"\n ],\n [\n@@ -2990,7 +2990,7 @@\n     \"\",\n     \"0x00 0x20 0xedda83f4bc5d42e0149bb4a0534bb71001b21116748b1088978bfb008149630f\",\n     \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n-    \"EVAL_FALSE\",\n+    \"CLEANSTACK\",\n     \"Tail-call of OP_16 that results in empty stack\"\n ],\n [\n@@ -3048,7 +3048,7 @@\n     \"\",\n     \"0x00 0x20 0xedda83f4bc5d42e0149bb4a0534bb71001b21116748b1088978bfb008149630f\",\n     \"P2SH,WITNESS,CLEANSTACK,TAIL_CALL\",\n-    \"EVAL_FALSE\",\n+    \"CLEANSTACK\",\n     \"Tail-call of OP_16 with cleanstack violation\"\n ],\n "
      }
    ]
  }
]