theStack,2021-09-17 20:52:50,"Concept ACK\n\nThanks for working on this! Will review and test within the next days.",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-922074813,922074813,
jonatack,2021-09-20 20:18:17,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-923264745,923264745,
Rspigler,2021-09-21 04:47:19,"Concept ACK\n\nThis is great! Thanks",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-923620548,923620548,
laanwj,2021-09-21 10:29:18,"Concept ACK\n\nHave you considered using the gpgme library (like https://github.com/bitcoin-core/bitcoin-maintainer-tools/blob/master/gitian-verify.py#L66 does) instead of parsing gpg command text output? I tried this approach and it became an awful mess, using the library is more robust, though it does introduce another Python dependency.",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-923848127,923848127,
Sjors,2021-09-21 17:21:01,"I guess I'm doing something wrong (on macOS 11.6)?\n\n```\n% contrib/verifybinaries/verify.py 22.0  \nWARNING: https://bitcoin.org failed to provide signature file. Continuing based solely upon https://bitcoincore.org.\nWARNING: https://bitcoin.org failed to provide SHA256SUMS file. Continuing based solely upon https://bitcoincore.org.\nTraceback (most recent call last):\n  File ""contrib/ve",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-924195592,924195592,
jamesob,2021-09-21 17:52:44,"> Have you considered using the gpgme library\n\n@laanwj this is a good idea, I'll look into it. Initially I didn't want end users to have to futz with `pip` or extra Python package installation since it can get very confusing very fast for semi-technical users (and even just plain technical users), but it might be worth the complexity. I'll give that a shot and post the diff.\n\n> I guess I'm",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-924221652,924221652,
jamesob,2021-09-21 17:56:29,"> PS it would be nice to check the timestamp as well if opentimestamp is present.\n\nLove that idea.",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-924224659,924224659,
jamesob,2021-09-22 18:27:43,"I've pushed a fix for the first issue @Sjors discovered (signature miscounting) as well as a `logging` refactoring. A commit for legacy process support is coming soon, but this can still be tested with 22.0.",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-925180450,925180450,
Sjors,2021-09-22 18:31:46,"Much better, modulo somewhat scary warnings:\n```\n% contrib/verifybinaries/verify.py 22.0                                \n[WARNING] https://bitcoin.org failed to provide signature file. Continuing based solely upon https://bitcoincore.org.\n[WARNING] https://bitcoin.org failed to provide SHA256SUMS file. Continuing based solely upon https://bitcoincore.org.\n[WARNING] removing *-unsigned bi",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-925184375,925184375,
jamesob,2021-09-22 23:32:24,"I've pushed an update (thanks to @Sjors' testing) that preserves the ability to verify binaries for releases older than 22.0, but still outputs verification results for everything in a uniform way. \n\nI've also included a change that associates the sha256 hash values along with the binary filenames in JSON output, which seems potentially useful.\n\n### 22.0 output\n```\n% ./contrib/verifybi",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-925401609,925401609,
fanquake,2021-09-23 08:46:59,"Concept ACK - thanks for working on this.\n\n",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-925617977,925617977,
jamesob,2021-09-24 19:31:06,"> Have you considered using the gpgme library (like https://github.com/bitcoin-core/bitcoin-maintainer-tools/blob/master/gitian-verify.py#L66 does) instead of parsing gpg command text output?\n\nSo I spent some time thinking about this and looking around at the various libraries that're available for GPG use. While using one of them would definitely save on a little complexity here, I'm somewhat",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-926871883,926871883,
Sjors,2021-09-27 09:34:52,I tend to agree that it's worth a bit of hassle to not have too many dependencies for this verify script.,https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-927695179,927695179,
theStack,2021-10-02 19:39:10,"Recently I worked on a Linux machine where `gpg` printed its verification results in its local language (German, in my case). In such a case, the verification script would obviously fail, as it expects English as output language. Can we find a way to cope with that? I didn't look deeper yet on what the output language depends on (I guess some typical locale environment variable like `LANGUAGE` or ",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-932810227,932810227,
laanwj,2021-10-13 12:59:31,"> This is one concern that we wouldn't need to take care of when using a library like gpgme, though I generally agree with the opinion that we want to keep the dependencies minimal (as expressed by\n\nYes it would never run into language issues with libgpgme because it uses the GPG code directly, not through parsing text. And FWIW, libgpgme generally seems to already be installed on Ubuntu-ish m",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-942279451,942279451,
jamesob,2021-10-13 19:09:49,"> In such a case, the verification script would obviously fail, as it expects English as output language.\n\nAre you able to actually trigger such a failure at the moment? I think I saw some dutch in @Sjors' output, but the script worked fine. If you are I'd be curious to see it.\n\n> What I'm mostly concerned about is that munging GPG output is conceptually brittle.\n\nI don't want to push ",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-942632953,942632953,
jamesob,2021-10-13 19:50:45,One easy mitigation might be to specify the envvar `LANG=en` before each gpg call (https://stackoverflow.com/a/33961763/1611953).,https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-942665347,942665347,
jamesob,2021-10-14 17:38:05,"Okay, I've verified that `LANGUAGE=x` does control output language for (my version of) gpg:\n```\n13:33:26 james@teller /home/james % LANGUAGE=en gpg --verify sigs.txt\ngpg: Signature made Thu 02 Sep 2021 01:52:57 PM EDT\ngpg:                using RSA key 4589779ADFC14F3327534EA8A3A31BAD5A2A5B10\ngpg: Good signature from ""Peter D. Gray <peter@coinkite.com>"" [unknown]\ngpg: WARNING: This key ",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-943575489,943575489,
jamesob,2021-11-30 17:00:31,"Gentle reminder here that the script in master is broken for 22.0 verification. It'd be great to either get this reviewed/merged or get some clear direction on what's needed to move this forward.\n\nI understand that parsing GPG text output is less than ideal, but I'm still of the opinion that the alternative of introducing a reliance on `gpgme` and all the packaging considerations that come alo",https://github.com/bitcoin/bitcoin/pull/23020#issuecomment-982831579,982831579,
