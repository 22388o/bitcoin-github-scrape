promag,2019-11-18 11:39:57,Just throwing this out in case we want to shut up this UB error.,https://github.com/bitcoin/bitcoin/pull/17505#issuecomment-554979489,554979489,
laanwj,2019-11-18 11:47:00,"This sounds much scarier than it is. Can you please at least add ""potential"" or even ""theoretical"" to your commit message.\n\nIs there even a way to trigger a bug with this? I'd say the 0 case works because it's a post-decrement. It won't enter the while loop in that case? And `num` is never used after the loop.\n\nIf not, NACK, I don't think ""shutting up UB errors"" from every kind of tooling ",https://github.com/bitcoin/bitcoin/pull/17505#issuecomment-554981773,554981773,
promag,2019-11-18 11:54:49,"I was expecting a response like that, I also think the code is safe as is, agree @practicalswift?",https://github.com/bitcoin/bitcoin/pull/17505#issuecomment-554984212,554984212,
practicalswift,2019-11-18 15:23:48,"@promag \n\nAgreed :)\n\nUnsigned integer wraparound is defined: so no problem from a _standards_ perspective :)\n\nWith that said unsigned integer wraparounds can still be a source of errors: sometimes the wraparound is not intended which can lead to bugs. That could be a good reason to try to limit the wraparounds in all code except where the wraparound is intentional (hashing code is a go",https://github.com/bitcoin/bitcoin/pull/17505#issuecomment-555063622,555063622,
practicalswift,2019-11-19 10:33:00,"FWIW: check https://github.com/bitcoin/bitcoin/pull/17511#discussion_r347705333 for a recent example of an unintended unsigned integer wraparound caught by `-fsanitize=integer`. Defined behaviour, but unintended and thus worth flagging :)",https://github.com/bitcoin/bitcoin/pull/17505#issuecomment-555442870,555442870,
