apoelstra,2021-07-20 15:11:09,"There are several loops in the fuzz test where the number of iterations is directly controlled by the fuzzer, which oftentimes will go for millions of iterations, leading to certain fuzz tests taking forever on a single core. This PR limits these fuzzer-controlled loops to 1000 iterations, an arbitrary high number.\n\nIMHO letting the fuzzer control the number of iterations directly like this, w",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-883472879,883472879,
apoelstra,2021-07-20 15:12:10,"On an EPYC 7502 with 256Gb of RAM, just running `time ./test/fuzz/test_runner.py ../../qa-assets/fuzz_seed_corpus/`:\n\nbefore, -j1\n```\nreal    67m58.883s\nuser    152m7.845s\nsys     4m36.080s\n```\n\nafter, -j1\n```\nreal    35m57.697s\nuser    103m10.803s\nsys     3m52.910s\n```\n\nbefore, -j32\n```\nreal    60m6.374s\nuser    153m29.631s\nsys     5m14.991s\n```\n\nafte",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-883473736,883473736,
MarcoFalke,2021-07-20 15:21:57,Concept ACK. @DrahtBot please list the conflicts for the alternative solution that has been proposed.,https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-883481114,883481114,
DrahtBot,2021-07-20 15:22:43,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22919](https://github.com/bitcoin/bitcoin/pull/22919) (fees: skip pointless fee parameter calculation during IBD by Rohi",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-883481679,883481679,
MarcoFalke,2021-07-20 15:34:06,"Ok, that didn't work. Basically, it would be nice to be able to still overwrite the limit per fuzz target:\n\n* #22454: 300\n* #22453: 3000\n* #22444: 3000\n* ...",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-883490020,883490020,
apoelstra,2021-07-20 16:54:04,@MarcoFalke I added a #define variable and capped the `tx_pool` test to 300 iterations to demonstrate how to use it.,https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-883545551,883545551,
practicalswift,2021-07-24 19:43:35,"Concept ACK\n\nNice idea!",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-886102875,886102875,
apoelstra,2021-09-08 18:00:44,Redid the PR. Now it takes the macro from #22649 and just applies it to every single remaining fuzzer loop.,https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-915452449,915452449,
practicalswift,2021-09-09 08:13:31,"Thanks for fixing this!\n\nIs the mixing of `LIMITED_WHILE (` and `LIMITED_WHILE(` intentional? (Personally I prefer the latter.)\n\nACK modulo spacing consistency :)",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-915864779,915864779,
laanwj,2021-09-09 11:31:32,"> There are several loops in the fuzz test where the number of iterations is directly controlled by the fuzzer, which oftentimes will go for millions of iterations, leading to certain fuzz tests taking forever on a single core. \n\nConcept and code review ACK be655e8b8111f3a7cd7909203c2bac3d16751406\n\nI would slightly prefer this ""arbitrary high number"" to be a constant as it's repeated every",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-916004785,916004785,
MarcoFalke,2021-09-09 11:54:27,"> I would slightly prefer this ""arbitrary high number"" to be a constant as it's repeated everywhere.\n\nI'd say the number is dependent on the test context. The current ones in master are 30, 300, 3000, and 30000.\n\nI think each number needs to be picked carefully to be in the right 10^x.\n\n> Is the mixing of LIMITED_WHILE ( and LIMITED_WHILE( intentional? (Personally I prefer the latter.)",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-916019805,916019805,
apoelstra,2021-09-09 14:22:25,"Oops, I will fix the spacing inconsistency. It probably happened when I switched from manual edits to using sed.\n\n@MarcoFalke I think we could probably start with an ""anbitrary high number"", say 30000 (or 10000), and then when when tests reveal that certain tests are taking too long we can reduce them in individual cases. The current situation effectively has a limit of infinity and things are",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-916145360,916145360,
MarcoFalke,2021-10-05 15:11:16,"Sorry, will review soon ",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-934499066,934499066,
apoelstra,2021-10-25 20:03:28,Rebased and changed formatting to be consistent.,https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-951263928,951263928,
MarcoFalke,2021-11-15 15:50:30,"Some times:\n\nmaster | this | relative | name\n```\n	206.2	76.67	0.3718234724	rpc			\n	149.06	157.45	1.056286059	process_messages																				\n	27.21	27.19	0.9992649761	addrman																				\n	24.19	24.89	1.028937578	script_sign																				\n	23.93	26.08	1.089845382	process_message																				\n	23.32	20.44	0.8765008576	coins_view																				\n	15.2",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-969046049,969046049,
MarcoFalke,2021-11-15 15:51:16,"So yeah, this should fix https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40648",https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-969046819,969046819,
MarcoFalke,2021-11-15 15:51:41,cr ACK 214d9055acdd72189a2f415477ce472ca8db4191,https://github.com/bitcoin/bitcoin/pull/22508#issuecomment-969047257,969047257,
MarcoFalke,2021-07-22 06:31:52,"it would be nice to be able to pass the limit to the loop (in the same line). Otherwise it will get messy if there are nested loops and one forgets to adjust the limit or the loops are moved without moving the limit, which is in a different line.",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r674532426,674532426,src/test/fuzz/tx_pool.cpp
apoelstra,2021-07-22 14:56:53,Sure -- replaced the extra #define variable with a new macro argument,https://github.com/bitcoin/bitcoin/pull/22508#discussion_r674884267,674884267,src/test/fuzz/tx_pool.cpp
apoelstra,2021-07-22 14:57:11,"Maybe we should just drop the ""default 1000"" one and always explicitly set the maximum number of iterations?",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r674884556,674884556,src/test/fuzz/tx_pool.cpp
MarcoFalke,2021-07-22 15:01:34,"```suggestion\n    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool) {\n```\n\nSince some loops (prefer to?) use `fuzzed_data_provider.remaining_bytes()`, maybe make this configurable as well? Feel free to ignore the naming suggestion.",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r674889988,674889988,src/test/fuzz/addrman.cpp
MarcoFalke,2021-07-22 15:02:58,"Yeah, I wouldn't mind that. An additional `, 1000` doesn't seem too verbose.",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r674891672,674891672,src/test/fuzz/tx_pool.cpp
MarcoFalke,2021-08-02 09:33:16,"@apoelstra Are you still working on this? If not, I am happy to pick up",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r680820574,680820574,src/test/fuzz/addrman.cpp
apoelstra,2021-09-08 17:33:12,"Hi, sorry, I can pick this up now.",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r704633101,704633101,src/test/fuzz/addrman.cpp
MarcoFalke,2021-11-03 09:37:52,"Why is this needed? There is already a `break` below, no?",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r741750216,741750216,src/test/fuzz/versionbits.cpp
MarcoFalke,2021-11-03 09:46:31,"This seems a bit high? `ConsumeRPCArgument` might call `ConsumeArrayRPCArgument`, so the limit is 100'000'000. A user shouldn't be passing in more than 100 items. So any value between 100-1000 seems more appropriate.\n\nSee also https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40648\n\nWhich is running base58 encoding (expensive) of one rpc arg 6000 times, thus times out. Your limit of 10",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r741757002,741757002,src/test/fuzz/rpc.cpp
apoelstra,2021-11-12 12:21:06,"Yep, you're right, I misread the loop's exit condition. ",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r748237311,748237311,src/test/fuzz/versionbits.cpp
apoelstra,2021-11-12 12:23:56,"ACK. I reduced it to 100.\n\nI worry that reducing this will meaningfully affect test coverage since we presumably want to test what happens when you give gazillions of RPC arguments ... but probably a general-purpose fuzz test is the wrong place to try to hit that.",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r748240532,748240532,src/test/fuzz/rpc.cpp
MarcoFalke,2021-11-12 15:52:26,"Sorry, I also meant in the line above in this file. 100 * 100 is still 10k.",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r748396777,748396777,src/test/fuzz/rpc.cpp
MarcoFalke,2021-11-12 15:54:06,"```suggestion\n    while (fuzzed_data_provider.remaining_bytes() > 0) { // early exit; no need for LIMITED_WHILE\n```\n\nnit",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r748398017,748398017,src/test/fuzz/versionbits.cpp
apoelstra,2021-11-12 15:57:56,fixed,https://github.com/bitcoin/bitcoin/pull/22508#discussion_r748400881,748400881,src/test/fuzz/versionbits.cpp
MarcoFalke,2021-11-12 16:10:17,"This one I meant, too ;)",https://github.com/bitcoin/bitcoin/pull/22508#discussion_r748410030,748410030,src/test/fuzz/rpc.cpp
MarcoFalke,2021-11-12 16:10:33,https://github.com/bitcoin/bitcoin/pull/22508#discussion_r748396777,https://github.com/bitcoin/bitcoin/pull/22508#discussion_r748410230,748410230,src/test/fuzz/rpc.cpp
