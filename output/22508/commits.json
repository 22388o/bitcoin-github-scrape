[
  {
    "sha": "214d9055acdd72189a2f415477ce472ca8db4191",
    "node_id": "C_kwDOABII59oAKDIxNGQ5MDU1YWNkZDcyMTg5YTJmNDE1NDc3Y2U0NzJjYThkYjQxOTE",
    "commit": {
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2021-10-25T19:48:22Z"
      },
      "committer": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2021-11-12T19:51:55Z"
      },
      "message": "fuzz: replace every fuzzer-controlled loop with a LIMITED_WHILE loop\n\nBlindly chose a cap of 10000 iterations for every loop, except for\nthe two in script_ops.cpp and scriptnum_ops.cpp which appeared to\n(sometimes) be deserializing individual bytes; capped those to one\nmillion to ensure that sometimes we try working with massive scripts.\n\nThere was also one fuzzer-controlled loop in timedata.cpp which was\nalready capped, so I left that alone.\n\ngit grep 'while (fuzz' should now run clean except for timedata.cpp",
      "tree": {
        "sha": "ceb70a5558b22371e5c3c4eddb11e967c4249192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ceb70a5558b22371e5c3c4eddb11e967c4249192"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/214d9055acdd72189a2f415477ce472ca8db4191",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/214d9055acdd72189a2f415477ce472ca8db4191",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/214d9055acdd72189a2f415477ce472ca8db4191",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/214d9055acdd72189a2f415477ce472ca8db4191/comments",
    "author": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22a90186496aea8025316bc5616905ffcf1aeb29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22a90186496aea8025316bc5616905ffcf1aeb29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22a90186496aea8025316bc5616905ffcf1aeb29"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 34,
      "deletions": 34
    },
    "files": [
      {
        "sha": "d427d12a3cd21d6f3155babc35a970f2786940d7",
        "filename": "src/test/fuzz/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/addrman.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -236,7 +236,7 @@ FUZZ_TARGET_INIT(addrman, initialize_addrman)\n         }\n     }\n     AddrManDeterministic& addr_man = *addr_man_ptr;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {\n@@ -247,7 +247,7 @@ FUZZ_TARGET_INIT(addrman, initialize_addrman)\n             },\n             [&] {\n                 std::vector<CAddress> addresses;\n-                while (fuzzed_data_provider.ConsumeBool()) {\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n                     const std::optional<CAddress> opt_address = ConsumeDeserializable<CAddress>(fuzzed_data_provider);\n                     if (!opt_address) {\n                         break;"
      },
      {
        "sha": "0cc2d12d29ae7518a51f4c293e59b8f92a46343b",
        "filename": "src/test/fuzz/autofile.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/autofile.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/autofile.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/autofile.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -19,7 +19,7 @@ FUZZ_TARGET(autofile)\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n     CAutoFile auto_file = fuzzed_auto_file_provider.open();\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {"
      },
      {
        "sha": "3e303ecc0fc89a8d0fbf6e9aa166865c2d2af174",
        "filename": "src/test/fuzz/bloom_filter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/bloom_filter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/bloom_filter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/bloom_filter.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -24,7 +24,7 @@ FUZZ_TARGET(bloom_filter)\n         1.0 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max()),\n         fuzzed_data_provider.ConsumeIntegral<unsigned int>(),\n         static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};\n-    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {"
      },
      {
        "sha": "c3c2e4050f193e23cc8345ced93dd896a3a18cc1",
        "filename": "src/test/fuzz/buffered_file.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/buffered_file.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/buffered_file.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/buffered_file.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -29,7 +29,7 @@ FUZZ_TARGET(buffered_file)\n     }\n     if (opt_buffered_file && fuzzed_file != nullptr) {\n         bool setpos_fail = false;\n-        while (fuzzed_data_provider.ConsumeBool()) {\n+        LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n             CallOneOf(\n                 fuzzed_data_provider,\n                 [&] {"
      },
      {
        "sha": "0e12a554082a24db6f3e1b7e52d8f6eaef41e626",
        "filename": "src/test/fuzz/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/chain.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -35,7 +35,7 @@ FUZZ_TARGET(chain)\n     (void)CDiskBlockIndex{*disk_block_index};\n     (void)disk_block_index->BuildSkip();\n \n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         const BlockStatus block_status = fuzzed_data_provider.PickValueInArray({\n             BlockStatus::BLOCK_VALID_UNKNOWN,\n             BlockStatus::BLOCK_VALID_RESERVED,"
      },
      {
        "sha": "325a9a170e09249cde081264d954ba74bd3a8183",
        "filename": "src/test/fuzz/coins_view.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/coins_view.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/coins_view.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/coins_view.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -51,7 +51,7 @@ FUZZ_TARGET_INIT(coins_view, initialize_coins_view)\n     COutPoint random_out_point;\n     Coin random_coin;\n     CMutableTransaction random_mutable_transaction;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {\n@@ -114,7 +114,7 @@ FUZZ_TARGET_INIT(coins_view, initialize_coins_view)\n             },\n             [&] {\n                 CCoinsMap coins_map;\n-                while (fuzzed_data_provider.ConsumeBool()) {\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n                     CCoinsCacheEntry coins_cache_entry;\n                     coins_cache_entry.flags = fuzzed_data_provider.ConsumeIntegral<unsigned char>();\n                     if (fuzzed_data_provider.ConsumeBool()) {"
      },
      {
        "sha": "9e4718e6032e9b0fbabdfb30791c75431311ce9b",
        "filename": "src/test/fuzz/connman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/connman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/connman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/connman.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -31,7 +31,7 @@ FUZZ_TARGET_INIT(connman, initialize_connman)\n     CNode random_node = ConsumeNode(fuzzed_data_provider);\n     CSubNet random_subnet;\n     std::string random_string;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {"
      },
      {
        "sha": "0937026fdd8ae8e15541ca9be4367e770d2239b4",
        "filename": "src/test/fuzz/crypto_aes256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_aes256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_aes256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_aes256.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -19,7 +19,7 @@ FUZZ_TARGET(crypto_aes256)\n     AES256Encrypt encrypt{key.data()};\n     AES256Decrypt decrypt{key.data()};\n \n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         const std::vector<uint8_t> plaintext = ConsumeFixedLengthByteVector(fuzzed_data_provider, AES_BLOCKSIZE);\n         std::vector<uint8_t> ciphertext(AES_BLOCKSIZE);\n         encrypt.Encrypt(ciphertext.data(), plaintext.data());"
      },
      {
        "sha": "5fe67bd4da3aacfca01d88082efd43ad4c5908ce",
        "filename": "src/test/fuzz/crypto_aes256cbc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_aes256cbc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_aes256cbc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_aes256cbc.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -21,7 +21,7 @@ FUZZ_TARGET(crypto_aes256cbc)\n     AES256CBCEncrypt encrypt{key.data(), iv.data(), pad};\n     AES256CBCDecrypt decrypt{key.data(), iv.data(), pad};\n \n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         const std::vector<uint8_t> plaintext = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n         std::vector<uint8_t> ciphertext(plaintext.size() + AES_BLOCKSIZE);\n         const int encrypt_ret = encrypt.Encrypt(plaintext.data(), plaintext.size(), ciphertext.data());"
      },
      {
        "sha": "3f552a8cda8eff56edb6affe1a7fc0a0aa183b15",
        "filename": "src/test/fuzz/crypto_chacha20.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_chacha20.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -19,7 +19,7 @@ FUZZ_TARGET(crypto_chacha20)\n         const std::vector<unsigned char> key = ConsumeFixedLengthByteVector(fuzzed_data_provider, fuzzed_data_provider.ConsumeIntegralInRange<size_t>(16, 32));\n         chacha20 = ChaCha20{key.data(), key.size()};\n     }\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {"
      },
      {
        "sha": "5e60b0f25ba407c5b77b37bab440ed56c5d93755",
        "filename": "src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -28,7 +28,7 @@ FUZZ_TARGET(crypto_chacha20_poly1305_aead)\n     std::vector<uint8_t> in(buffer_size + CHACHA20_POLY1305_AEAD_AAD_LEN + POLY1305_TAGLEN, 0);\n     std::vector<uint8_t> out(buffer_size + CHACHA20_POLY1305_AEAD_AAD_LEN + POLY1305_TAGLEN, 0);\n     bool is_encrypt = fuzzed_data_provider.ConsumeBool();\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {"
      },
      {
        "sha": "24bcc03dfd67a15dbd14261ba8faef56715fd1ff",
        "filename": "src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -18,7 +18,7 @@ FUZZ_TARGET(crypto_hkdf_hmac_sha256_l32)\n     const std::vector<uint8_t> initial_key_material = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n \n     CHKDF_HMAC_SHA256_L32 hkdf_hmac_sha256_l32(initial_key_material.data(), initial_key_material.size(), fuzzed_data_provider.ConsumeRandomLengthString(1024));\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         std::vector<uint8_t> out(32);\n         hkdf_hmac_sha256_l32.Expand32(fuzzed_data_provider.ConsumeRandomLengthString(128), out.data());\n     }"
      },
      {
        "sha": "019afe1c47cb1807e7ff26ec4bd0de1305e4fd73",
        "filename": "src/test/fuzz/cuckoocache.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/cuckoocache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/cuckoocache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/cuckoocache.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -37,7 +37,7 @@ FUZZ_TARGET(cuckoocache)\n     } else {\n         cuckoo_cache.setup(fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, 4096));\n     }\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         if (fuzzed_data_provider.ConsumeBool()) {\n             cuckoo_cache.insert(fuzzed_data_provider.ConsumeBool());\n         } else {"
      },
      {
        "sha": "bcab66842c551dbacec21ce67ad6616fd7b6d84a",
        "filename": "src/test/fuzz/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fees.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -18,7 +18,7 @@ FUZZ_TARGET(fees)\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const CFeeRate minimal_incremental_fee{ConsumeMoney(fuzzed_data_provider)};\n     FeeFilterRounder fee_filter_rounder{minimal_incremental_fee};\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         const CAmount current_minimum_fee = ConsumeMoney(fuzzed_data_provider);\n         const CAmount rounded_fee = fee_filter_rounder.round(current_minimum_fee);\n         assert(MoneyRange(rounded_fee));"
      },
      {
        "sha": "6271367a9c20227b9d8ea4e4d47cd88129438cd5",
        "filename": "src/test/fuzz/merkleblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/merkleblock.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -34,7 +34,7 @@ FUZZ_TARGET(merkleblock)\n                 if (fuzzed_data_provider.ConsumeBool()) {\n                     merkle_block = CMerkleBlock{*opt_block, bloom_filter};\n                 } else if (fuzzed_data_provider.ConsumeBool()) {\n-                    while (fuzzed_data_provider.ConsumeBool()) {\n+                    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n                         txids.insert(ConsumeUInt256(fuzzed_data_provider));\n                     }\n                     merkle_block = CMerkleBlock{*opt_block, txids};"
      },
      {
        "sha": "fb11ea36ce320fdbe9bdb1f6830776b21e6f4b01",
        "filename": "src/test/fuzz/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/net.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -32,7 +32,7 @@ FUZZ_TARGET_INIT(net, initialize_net)\n     SetMockTime(ConsumeTime(fuzzed_data_provider));\n     CNode node{ConsumeNode(fuzzed_data_provider)};\n     node.SetCommonVersion(fuzzed_data_provider.ConsumeIntegral<int>());\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {"
      },
      {
        "sha": "d01d413cffc8f2799c7e3bfd2312218418d14c6a",
        "filename": "src/test/fuzz/netbase_dns_lookup.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/netbase_dns_lookup.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/netbase_dns_lookup.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/netbase_dns_lookup.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -22,7 +22,7 @@ FUZZ_TARGET(netbase_dns_lookup)\n \n     auto fuzzed_dns_lookup_function = [&](const std::string&, bool) {\n         std::vector<CNetAddr> resolved_addresses;\n-        while (fuzzed_data_provider.ConsumeBool()) {\n+        LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n             resolved_addresses.push_back(ConsumeNetAddr(fuzzed_data_provider));\n         }\n         return resolved_addresses;"
      },
      {
        "sha": "2e3b51e7537c28cec91b9a33a254ca29b7dda79d",
        "filename": "src/test/fuzz/node_eviction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/node_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/node_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/node_eviction.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -18,7 +18,7 @@ FUZZ_TARGET(node_eviction)\n {\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n     std::vector<NodeEvictionCandidate> eviction_candidates;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         eviction_candidates.push_back({\n             /* id */ fuzzed_data_provider.ConsumeIntegral<NodeId>(),\n             /* nTimeConnected */ fuzzed_data_provider.ConsumeIntegral<int64_t>(),"
      },
      {
        "sha": "63dc4ce1d9cece48448e24b5250776cd03afa633",
        "filename": "src/test/fuzz/policy_estimator.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/policy_estimator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/policy_estimator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/policy_estimator.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -24,7 +24,7 @@ FUZZ_TARGET_INIT(policy_estimator, initialize_policy_estimator)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     CBlockPolicyEstimator block_policy_estimator;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {\n@@ -40,7 +40,7 @@ FUZZ_TARGET_INIT(policy_estimator, initialize_policy_estimator)\n             },\n             [&] {\n                 std::vector<CTxMemPoolEntry> mempool_entries;\n-                while (fuzzed_data_provider.ConsumeBool()) {\n+                LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n                     const std::optional<CMutableTransaction> mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n                     if (!mtx) {\n                         break;"
      },
      {
        "sha": "1123c8c170ceb97754ee84d6ab0d724bf1eccbec",
        "filename": "src/test/fuzz/pow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/pow.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -27,7 +27,7 @@ FUZZ_TARGET_INIT(pow, initialize_pow)\n     std::vector<CBlockIndex> blocks;\n     const uint32_t fixed_time = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n     const uint32_t fixed_bits = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n-    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 10000) {\n         const std::optional<CBlockHeader> block_header = ConsumeDeserializable<CBlockHeader>(fuzzed_data_provider);\n         if (!block_header) {\n             continue;"
      },
      {
        "sha": "91ec2aafde1d7d4f552c3f41d5ab4665536c4af5",
        "filename": "src/test/fuzz/process_messages.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/process_messages.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/process_messages.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_messages.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -55,7 +55,7 @@ FUZZ_TARGET_INIT(process_messages, initialize_process_messages)\n         connman.AddTestNode(p2p_node);\n     }\n \n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         const std::string random_message_type{fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::COMMAND_SIZE).c_str()};\n \n         const auto mock_time = ConsumeTime(fuzzed_data_provider);"
      },
      {
        "sha": "990bce5f6c58226a8961859ec69ca3c205a750a1",
        "filename": "src/test/fuzz/rbf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rbf.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -24,7 +24,7 @@ FUZZ_TARGET(rbf)\n         return;\n     }\n     CTxMemPool pool;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         const std::optional<CMutableTransaction> another_mtx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n         if (!another_mtx) {\n             break;"
      },
      {
        "sha": "251687104e937491733edce96d2644b1dedca9a0",
        "filename": "src/test/fuzz/rpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rpc.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -294,7 +294,7 @@ std::string ConsumeScalarRPCArgument(FuzzedDataProvider& fuzzed_data_provider)\n std::string ConsumeArrayRPCArgument(FuzzedDataProvider& fuzzed_data_provider)\n {\n     std::vector<std::string> scalar_arguments;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100) {\n         scalar_arguments.push_back(ConsumeScalarRPCArgument(fuzzed_data_provider));\n     }\n     return \"[\\\"\" + Join(scalar_arguments, \"\\\",\\\"\") + \"\\\"]\";\n@@ -348,7 +348,7 @@ FUZZ_TARGET_INIT(rpc, initialize_rpc)\n         return;\n     }\n     std::vector<std::string> arguments;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100) {\n         arguments.push_back(ConsumeRPCArgument(fuzzed_data_provider));\n     }\n     try {"
      },
      {
        "sha": "a90ad5e8ed87ab8b95d05f0b8c694f445db7e7db",
        "filename": "src/test/fuzz/script_descriptor_cache.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/script_descriptor_cache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/script_descriptor_cache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_descriptor_cache.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -17,7 +17,7 @@ FUZZ_TARGET(script_descriptor_cache)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     DescriptorCache descriptor_cache;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         const std::vector<uint8_t> code = fuzzed_data_provider.ConsumeBytes<uint8_t>(BIP32_EXTKEY_SIZE);\n         if (code.size() == BIP32_EXTKEY_SIZE) {\n             CExtPubKey xpub;"
      },
      {
        "sha": "12247679f29d4c3c369c04cb0c49b319dfc078be",
        "filename": "src/test/fuzz/script_ops.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/script_ops.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/script_ops.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_ops.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -15,7 +15,7 @@ FUZZ_TARGET(script_ops)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     CScript script_mut = ConsumeScript(fuzzed_data_provider);\n-    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 1000000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {"
      },
      {
        "sha": "79380bd9c9acd8b519ce72432d68a9c8d67471e0",
        "filename": "src/test/fuzz/script_sign.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/script_sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/script_sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_sign.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -48,7 +48,7 @@ FUZZ_TARGET_INIT(script_sign, initialize_script_sign)\n \n     {\n         std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n-        while (fuzzed_data_provider.ConsumeBool()) {\n+        LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n             const std::optional<CPubKey> pub_key = ConsumeDeserializable<CPubKey>(fuzzed_data_provider);\n             if (!pub_key) {\n                 break;\n@@ -125,7 +125,7 @@ FUZZ_TARGET_INIT(script_sign, initialize_script_sign)\n                 (void)signature_creator.CreateSig(provider, vch_sig, address, ConsumeScript(fuzzed_data_provider), fuzzed_data_provider.PickValueInArray({SigVersion::BASE, SigVersion::WITNESS_V0}));\n             }\n             std::map<COutPoint, Coin> coins;\n-            while (fuzzed_data_provider.ConsumeBool()) {\n+            LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n                 const std::optional<COutPoint> outpoint = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n                 if (!outpoint) {\n                     break;"
      },
      {
        "sha": "0681aaf94929f38adb78aa5e018fcadf2a4befa9",
        "filename": "src/test/fuzz/scriptnum_ops.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/scriptnum_ops.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/scriptnum_ops.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/scriptnum_ops.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -28,7 +28,7 @@ FUZZ_TARGET(scriptnum_ops)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n-    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes() > 0, 1000000) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {"
      },
      {
        "sha": "a78715f769ccefd01100d6b728499d8c4024e781",
        "filename": "src/test/fuzz/torcontrol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/torcontrol.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -44,7 +44,7 @@ FUZZ_TARGET_INIT(torcontrol, initialize_torcontrol)\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n \n     TorController tor_controller;\n-    while (fuzzed_data_provider.ConsumeBool()) {\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\n         TorControlReply tor_control_reply;\n         CallOneOf(\n             fuzzed_data_provider,"
      },
      {
        "sha": "cf95c0b9bf95c8884cb86b3835914251790e2673",
        "filename": "src/test/fuzz/versionbits.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214d9055acdd72189a2f415477ce472ca8db4191/src/test/fuzz/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/versionbits.cpp?ref=214d9055acdd72189a2f415477ce472ca8db4191",
        "patch": "@@ -199,7 +199,7 @@ FUZZ_TARGET_INIT(versionbits, initialize)\n     const uint32_t signalling_mask = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n \n     // mine prior periods\n-    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+    while (fuzzed_data_provider.remaining_bytes() > 0) { // early exit; no need for LIMITED_WHILE\n         // all blocks in these periods either do or don't signal\n         bool signal = fuzzed_data_provider.ConsumeBool();\n         for (int b = 0; b < period; ++b) {"
      }
    ]
  }
]