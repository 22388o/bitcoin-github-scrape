promag,2018-02-01T17:02:50Z,"Note to reviewers, I would like to refactor the code, specially to remove these (or some) static values, but I though maybe we should fix the problem first.",https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362332615,362332615,
instagibbs,2018-02-01T17:21:24Z,"utACK https://github.com/bitcoin/bitcoin/pull/12327/commits/b3e74d626e6c2109492f490a4c8271b4b0bd52c2\n\nThis should fix both `g_change_type;` and `signalRbf` being set at instance time to variables not yet set globally. Other settings are set per-usage of `CCoinControl` or are simply not used when not explicitly set, such as `m_feerate`.",https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362338755,362338755,
laanwj,2018-02-01T17:26:57Z,"> Note to reviewers, I would like to refactor the code, specially to remove there (or some) static values, \n\nYes, we should get rid of the global coincontrol object and just pass it around and store it where necessary. But indeed, not a priority for fixing this.",https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362340342,362340342,
promag,2018-02-01T17:37:11Z,Pushed a commit with @laanwj suggestion if others want to suggest other way.,https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362343536,362343536,
laanwj,2018-02-01T17:38:39Z,"I think ideally we'd instantiate the CCoinControl at a defined time during the GUI initialization process (when we're sure the options have been parsed), instead at first use. But this works I guess...",https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362343993,362343993,
meshcollider,2018-02-01T19:05:35Z,utACK https://github.com/bitcoin/bitcoin/pull/12327/commits/29e7f9f7a2afa6836fbbe7371000805dfb8ec638 after squash,https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362368744,362368744,
jonasschnelli,2018-02-01T19:12:26Z,"utACK 29e7f9f7a2afa6836fbbe7371000805dfb8ec638 , please squash.",https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362370659,362370659,
promag,2018-02-01T19:47:01Z,Done @jonasschnelli @MeshCollider.,https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362380606,362380606,
Sjors,2018-02-01T19:50:28Z,"Tested 6558f8a. Enabling coin control now honors `-changetype` for me, and also uses a native segwit change address when sending to a bech32 address.",https://github.com/bitcoin/bitcoin/pull/12327#issuecomment-362381604,362381604,
laanwj,2018-02-01T17:28:17Z,"I think we leak this pointer?\n\nIf you'd make this a smart pointer, it'd get freed at shutdown at least.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165429109,165429109,src/qt/coincontroldialog.cpp
laanwj,2018-02-01T17:29:54Z,"No need to prefix with  `CoinControlDialog::` here, this is still in the class.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165429692,165429692,src/qt/coincontroldialog.cpp
promag,2018-02-01T17:30:07Z,It was leaking already.,https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165429755,165429755,src/qt/coincontroldialog.cpp
promag,2018-02-01T17:30:47Z,"I know, but this way it's clear it's a static member.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165429918,165429918,src/qt/coincontroldialog.cpp
laanwj,2018-02-01T17:31:58Z,"Let's not do that, we intend to make it non-static field later anyway, so this seems moving the wrong direction.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165430211,165430211,src/qt/coincontroldialog.cpp
laanwj,2018-02-01T17:37:02Z,"But wouldn't that be a one-line change, to use `static unique_ptr<CCoinControl> coin_control;`? Or am I missing something?",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165431628,165431628,src/qt/coincontroldialog.cpp
,2018-02-01T17:46:39Z,"Do a Meyer's singleton\n\n`\nCCoinControl& CoinControlDialog::coinControl()\n{\n    static CCoinControl coin_control;\n    return coin_control;\n}\n`\n\nNo pointers, no leaks.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165434649,165434649,src/qt/coincontroldialog.cpp
promag,2018-02-01T17:52:08Z,"In that case when is coin_control instanced? I think the problem remains, but please correct me if I'm wrong.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165436202,165436202,src/qt/coincontroldialog.cpp
promag,2018-02-01T17:52:41Z,"For now, pushed with `std::unique_ptr` as suggested by @laanwj.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165436362,165436362,src/qt/coincontroldialog.cpp
laanwj,2018-02-01T18:10:03Z,"Thanks!\n\nI think @kekimusmaximus's solution also works, static within a function is initialized on first use.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165441024,165441024,src/qt/coincontroldialog.cpp
promag,2018-02-01T18:14:47Z,"That's new to me, I'll change to that instead.",https://github.com/bitcoin/bitcoin/pull/12327#discussion_r165442199,165442199,src/qt/coincontroldialog.cpp
