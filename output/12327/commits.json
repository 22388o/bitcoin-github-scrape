[
  {
    "sha": "6558f8acc363e1141f2864ee9be2bc7e980842a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTU4ZjhhY2MzNjNlMTE0MWYyODY0ZWU5YmUyYmM3ZTk4MDg0MmEz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-02-01T16:48:56Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-02-01T19:40:20Z"
      },
      "message": "[gui] Defer coin control instancing\n\nDefer the GUI coin control instancing so that argument processing\nis taken into account for the default coin control values.",
      "tree": {
        "sha": "8e1ed59bbc56e85bff2dcfd7ad117c0ff3942b5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e1ed59bbc56e85bff2dcfd7ad117c0ff3942b5d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6558f8acc363e1141f2864ee9be2bc7e980842a3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6558f8acc363e1141f2864ee9be2bc7e980842a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6558f8acc363e1141f2864ee9be2bc7e980842a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6558f8acc363e1141f2864ee9be2bc7e980842a3/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "895fbd768f0c89cea3f78acac58b233d4e3a145e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/895fbd768f0c89cea3f78acac58b233d4e3a145e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/895fbd768f0c89cea3f78acac58b233d4e3a145e"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 25,
      "deletions": 20
    },
    "files": [
      {
        "sha": "acb3f2346f586abba1547ea4096848b340211472",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6558f8acc363e1141f2864ee9be2bc7e980842a3/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6558f8acc363e1141f2864ee9be2bc7e980842a3/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=6558f8acc363e1141f2864ee9be2bc7e980842a3",
        "patch": "@@ -31,7 +31,6 @@\n #include <QTreeWidget>\n \n QList<CAmount> CoinControlDialog::payAmounts;\n-CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n bool CoinControlDialog::fSubtractFeeFromAmount = false;\n \n bool CCoinControlWidgetItem::operator<(const QTreeWidgetItem &other) const {\n@@ -193,7 +192,7 @@ void CoinControlDialog::buttonSelectAllClicked()\n                 ui->treeWidget->topLevelItem(i)->setCheckState(COLUMN_CHECKBOX, state);\n     ui->treeWidget->setEnabled(true);\n     if (state == Qt::Unchecked)\n-        coinControl->UnSelectAll(); // just to be sure\n+        coinControl()->UnSelectAll(); // just to be sure\n     CoinControlDialog::updateLabels(model, this);\n }\n \n@@ -379,11 +378,11 @@ void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n         COutPoint outpt(uint256S(item->text(COLUMN_TXHASH).toStdString()), item->text(COLUMN_VOUT_INDEX).toUInt());\n \n         if (item->checkState(COLUMN_CHECKBOX) == Qt::Unchecked)\n-            coinControl->UnSelect(outpt);\n+            coinControl()->UnSelect(outpt);\n         else if (item->isDisabled()) // locked (this happens if \"check all\" through parent node)\n             item->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n         else\n-            coinControl->Select(outpt);\n+            coinControl()->Select(outpt);\n \n         // selection changed -> update labels\n         if (ui->treeWidget->isEnabled()) // do not update on every click for (un)select all\n@@ -446,7 +445,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     std::vector<COutPoint> vCoinControl;\n     std::vector<COutput>   vOutputs;\n-    coinControl->ListSelected(vCoinControl);\n+    coinControl()->ListSelected(vCoinControl);\n     model->getOutputs(vCoinControl, vOutputs);\n \n     for (const COutput& out : vOutputs) {\n@@ -456,7 +455,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         COutPoint outpt(txhash, out.i);\n         if (model->isSpent(outpt))\n         {\n-            coinControl->UnSelect(outpt);\n+            coinControl()->UnSelect(outpt);\n             continue;\n         }\n \n@@ -509,7 +508,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 nBytes -= 34;\n \n         // Fee\n-        nPayFee = GetMinimumFee(nBytes, *coinControl, ::mempool, ::feeEstimator, nullptr /* FeeCalculation */);\n+        nPayFee = GetMinimumFee(nBytes, *coinControl(), ::mempool, ::feeEstimator, nullptr /* FeeCalculation */);\n \n         if (nPayAmount > 0)\n         {\n@@ -600,6 +599,12 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         label->setVisible(nChange < 0);\n }\n \n+CCoinControl* CoinControlDialog::coinControl()\n+{\n+    static CCoinControl coin_control;\n+    return &coin_control;\n+}\n+\n void CoinControlDialog::updateView()\n {\n     if (!model || !model->getOptionsModel() || !model->getAddressTableModel())\n@@ -703,13 +708,13 @@ void CoinControlDialog::updateView()\n             if (model->isLockedCoin(txhash, out.i))\n             {\n                 COutPoint outpt(txhash, out.i);\n-                coinControl->UnSelect(outpt); // just to be sure\n+                coinControl()->UnSelect(outpt); // just to be sure\n                 itemOutput->setDisabled(true);\n                 itemOutput->setIcon(COLUMN_CHECKBOX, platformStyle->SingleColorIcon(\":/icons/lock_closed\"));\n             }\n \n             // set checkbox\n-            if (coinControl->IsSelected(COutPoint(txhash, out.i)))\n+            if (coinControl()->IsSelected(COutPoint(txhash, out.i)))\n                 itemOutput->setCheckState(COLUMN_CHECKBOX, Qt::Checked);\n         }\n "
      },
      {
        "sha": "a254c555562580460e3a8ef4d111ef6fa5a09cad",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6558f8acc363e1141f2864ee9be2bc7e980842a3/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6558f8acc363e1141f2864ee9be2bc7e980842a3/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=6558f8acc363e1141f2864ee9be2bc7e980842a3",
        "patch": "@@ -52,7 +52,7 @@ class CoinControlDialog : public QDialog\n     static void updateLabels(WalletModel*, QDialog*);\n \n     static QList<CAmount> payAmounts;\n-    static CCoinControl *coinControl;\n+    static CCoinControl *coinControl();\n     static bool fSubtractFeeFromAmount;\n \n private:"
      },
      {
        "sha": "1227e340cec1b3a0f36b805613748a320ac50d2f",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6558f8acc363e1141f2864ee9be2bc7e980842a3/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6558f8acc363e1141f2864ee9be2bc7e980842a3/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=6558f8acc363e1141f2864ee9be2bc7e980842a3",
        "patch": "@@ -256,7 +256,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     // Always use a CCoinControl instance, use the CoinControlDialog instance if CoinControl has been enabled\n     CCoinControl ctrl;\n     if (model->getOptionsModel()->getCoinControlFeatures())\n-        ctrl = *CoinControlDialog::coinControl;\n+        ctrl = *CoinControlDialog::coinControl();\n \n     updateCoinControlState(ctrl);\n \n@@ -367,7 +367,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     if (sendStatus.status == WalletModel::OK)\n     {\n         accept();\n-        CoinControlDialog::coinControl->UnSelectAll();\n+        CoinControlDialog::coinControl()->UnSelectAll();\n         coinControlUpdateLabels();\n     }\n     fNewRecipientAllowed = true;\n@@ -604,7 +604,7 @@ void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n     // Get CCoinControl instance if CoinControl is enabled or create a new one.\n     CCoinControl coin_control;\n     if (model->getOptionsModel()->getCoinControlFeatures()) {\n-        coin_control = *CoinControlDialog::coinControl;\n+        coin_control = *CoinControlDialog::coinControl();\n     }\n \n     // Calculate available amount to send.\n@@ -754,7 +754,7 @@ void SendCoinsDialog::coinControlFeatureChanged(bool checked)\n     ui->frameCoinControl->setVisible(checked);\n \n     if (!checked && model) // coin control features disabled\n-        CoinControlDialog::coinControl->SetNull();\n+        CoinControlDialog::coinControl()->SetNull();\n \n     coinControlUpdateLabels();\n }\n@@ -773,7 +773,7 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n {\n     if (state == Qt::Unchecked)\n     {\n-        CoinControlDialog::coinControl->destChange = CNoDestination();\n+        CoinControlDialog::coinControl()->destChange = CNoDestination();\n         ui->labelCoinControlChangeLabel->clear();\n     }\n     else\n@@ -789,7 +789,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n     if (model && model->getAddressTableModel())\n     {\n         // Default to no change address until verified\n-        CoinControlDialog::coinControl->destChange = CNoDestination();\n+        CoinControlDialog::coinControl()->destChange = CNoDestination();\n         ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n \n         const CTxDestination dest = DecodeDestination(text.toStdString());\n@@ -812,7 +812,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n                     QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n \n                 if(btnRetVal == QMessageBox::Yes)\n-                    CoinControlDialog::coinControl->destChange = dest;\n+                    CoinControlDialog::coinControl()->destChange = dest;\n                 else\n                 {\n                     ui->lineEditCoinControlChange->setText(\"\");\n@@ -831,7 +831,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n                 else\n                     ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n \n-                CoinControlDialog::coinControl->destChange = dest;\n+                CoinControlDialog::coinControl()->destChange = dest;\n             }\n         }\n     }\n@@ -843,7 +843,7 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     if (!model || !model->getOptionsModel())\n         return;\n \n-    updateCoinControlState(*CoinControlDialog::coinControl);\n+    updateCoinControlState(*CoinControlDialog::coinControl());\n \n     // set pay amounts\n     CoinControlDialog::payAmounts.clear();\n@@ -861,7 +861,7 @@ void SendCoinsDialog::coinControlUpdateLabels()\n         }\n     }\n \n-    if (CoinControlDialog::coinControl->HasSelected())\n+    if (CoinControlDialog::coinControl()->HasSelected())\n     {\n         // actual coin control calculation\n         CoinControlDialog::updateLabels(model, this);"
      }
    ]
  }
]