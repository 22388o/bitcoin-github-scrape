practicalswift,2020-08-06 22:12:10,"ACK 90bd476ea67bd80b35188b5f139f159a3836aa7d -- patch looks correct\n\nThanks for your continued work on improving (and reviewing) `src/test/fuzz/` :)",https://github.com/bitcoin/bitcoin/pull/19672#issuecomment-670217063,670217063,
hebasto,2020-08-07 09:43:28,"I'm a bit confused.\n\nI run\n```\n./configure --with-incompatible-bdb --enable-lcov --enable-fuzz CC=clang CXX=clang++ && make\n```\n\nand a bunch of `*.gcno` files were generated in the `src/test/fuzz` directory.\n\nThe following run\n```\nmake check\n```\n\nfails for me (because `configure: WARNING: enable-fuzz will disable all other targets`), and no `*.gcda` files wer generated ",https://github.com/bitcoin/bitcoin/pull/19672#issuecomment-670431417,670431417,
Crypt-iQ,2020-08-07 10:06:02,What is the output of `make check`? `*.gcda` files should only appear if you run one of the fuzz tests and `make check` doesn't run the binaries.,https://github.com/bitcoin/bitcoin/pull/19672#issuecomment-670440507,670440507,
hebasto,2020-08-07 13:58:11,"Revoke my ACK.\n\nStill having concerns about usefulness of combining `--enable-lcov` with `--enable-fuzz`:\n```\n$ ./autogen.sh\n$ ./configure --enable-lcov --enable-fuzz --with-sanitizers=address,fuzzer,undefined CC=clang CXX=clang++\n$ make\n$ make cov\n/usr/bin/lcov --gcov-tool=/usr/bin/gcov -c -i -d /home/hebasto/guix/GitHub/bitcoin/src -o baseline.info\nCapturing coverage data from ",https://github.com/bitcoin/bitcoin/pull/19672#issuecomment-670530309,670530309,
Crypt-iQ,2020-08-07 15:55:19,I've only ever gotten `--enable-lcov --enable-fuzz` to work with `afl-gcc` & `afl-g++`. See this issue https://github.com/bitcoin/bitcoin/issues/12602 It would be very helpful if I could get it to work with `clang` but I haven't had the time yet.,https://github.com/bitcoin/bitcoin/pull/19672#issuecomment-670585891,670585891,
