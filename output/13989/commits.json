[
  {
    "sha": "b0e207ebab05574f826d07a76e090e545b490003",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGUyMDdlYmFiMDU1NzRmODI2ZDA3YTc2ZTA5MGU1NDViNDkwMDAz",
    "commit": {
      "author": {
        "name": "fingera",
        "email": "liuyujun@fingera.cn",
        "date": "2018-08-16T07:54:44Z"
      },
      "committer": {
        "name": "liuyujun",
        "email": "liuyujun@fingera.cn",
        "date": "2019-05-30T01:56:02Z"
      },
      "message": "add avx512 instrinsic",
      "tree": {
        "sha": "7f46bd6dcf3d8b68f100edb1f649f9a7508a1381",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f46bd6dcf3d8b68f100edb1f649f9a7508a1381"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0e207ebab05574f826d07a76e090e545b490003",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e207ebab05574f826d07a76e090e545b490003",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0e207ebab05574f826d07a76e090e545b490003",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e207ebab05574f826d07a76e090e545b490003/comments",
    "author": {
      "login": "fingera",
      "id": 7310938,
      "node_id": "MDQ6VXNlcjczMTA5Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7310938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fingera",
      "html_url": "https://github.com/fingera",
      "followers_url": "https://api.github.com/users/fingera/followers",
      "following_url": "https://api.github.com/users/fingera/following{/other_user}",
      "gists_url": "https://api.github.com/users/fingera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fingera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fingera/subscriptions",
      "organizations_url": "https://api.github.com/users/fingera/orgs",
      "repos_url": "https://api.github.com/users/fingera/repos",
      "events_url": "https://api.github.com/users/fingera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fingera/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fingera",
      "id": 7310938,
      "node_id": "MDQ6VXNlcjczMTA5Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7310938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fingera",
      "html_url": "https://github.com/fingera",
      "followers_url": "https://api.github.com/users/fingera/followers",
      "following_url": "https://api.github.com/users/fingera/following{/other_user}",
      "gists_url": "https://api.github.com/users/fingera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fingera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fingera/subscriptions",
      "organizations_url": "https://api.github.com/users/fingera/orgs",
      "repos_url": "https://api.github.com/users/fingera/repos",
      "events_url": "https://api.github.com/users/fingera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fingera/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7cfd20a77ce57d200b3b9e5e0dfb0d63818abdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7cfd20a77ce57d200b3b9e5e0dfb0d63818abdc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7cfd20a77ce57d200b3b9e5e0dfb0d63818abdc"
      }
    ],
    "stats": {
      "total": 420,
      "additions": 416,
      "deletions": 4
    },
    "files": [
      {
        "sha": "47bc31848391909d0ab371337cac4920f0ca942e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0e207ebab05574f826d07a76e090e545b490003/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0e207ebab05574f826d07a76e090e545b490003/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b0e207ebab05574f826d07a76e090e545b490003",
        "patch": "@@ -358,6 +358,7 @@ if test \"x$use_asm\" = \"xyes\"; then\n AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\n AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-mavx -mavx2 -mavx512f],[[AVX512_CXXFLAGS=\"-mavx -mavx2 -mavx512f\"]],,[[$CXXFLAG_WERROR]])\n AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n \n TEMP_CXXFLAGS=\"$CXXFLAGS\"\n@@ -412,6 +413,27 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n )\n CXXFLAGS=\"$TEMP_CXXFLAGS\"\n \n+case $host in\n+  *mingw*)\n+    ;;\n+  *)\n+    TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+    CXXFLAGS=\"$CXXFLAGS $AVX512_CXXFLAGS\"\n+    AC_MSG_CHECKING(for AVX512 intrinsics)\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <stdint.h>\n+        #include <immintrin.h>\n+      ]],[[\n+        __m512i l = _mm512_set1_epi32(0);\n+        return _mm_extract_epi32(_mm512_extracti32x4_epi32(l, 3), 3);\n+      ]])],\n+    [ AC_MSG_RESULT(yes); enable_avx512=yes; AC_DEFINE(ENABLE_AVX512, 1, [Define this symbol to build code that uses AVX512 intrinsics]) ],\n+    [ AC_MSG_RESULT(no)]\n+    )\n+    CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+    ;;\n+esac\n+\n TEMP_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\"\n AC_MSG_CHECKING(for SHA-NI intrinsics)\n@@ -1462,6 +1484,7 @@ AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n+AM_CONDITIONAL([ENABLE_AVX512],[test x$enable_avx512 = xyes])\n AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n \n@@ -1509,6 +1532,7 @@ AC_SUBST(SANITIZER_LDFLAGS)\n AC_SUBST(SSE42_CXXFLAGS)\n AC_SUBST(SSE41_CXXFLAGS)\n AC_SUBST(AVX2_CXXFLAGS)\n+AC_SUBST(AVX512_CXXFLAGS)\n AC_SUBST(SHANI_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)"
      },
      {
        "sha": "8cd219392b3a1d161b8cb4569ed7420d9550e053",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0e207ebab05574f826d07a76e090e545b490003/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0e207ebab05574f826d07a76e090e545b490003/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b0e207ebab05574f826d07a76e090e545b490003",
        "patch": "@@ -53,6 +53,10 @@ if ENABLE_AVX2\n LIBBITCOIN_CRYPTO_AVX2 = crypto/libbitcoin_crypto_avx2.a\n LIBBITCOIN_CRYPTO += $(LIBBITCOIN_CRYPTO_AVX2)\n endif\n+if ENABLE_AVX512\n+LIBBITCOIN_CRYPTO_AVX512 = crypto/libbitcoin_crypto_avx512.a\n+LIBBITCOIN_CRYPTO += $(LIBBITCOIN_CRYPTO_AVX512)\n+endif\n if ENABLE_SHANI\n LIBBITCOIN_CRYPTO_SHANI = crypto/libbitcoin_crypto_shani.a\n LIBBITCOIN_CRYPTO += $(LIBBITCOIN_CRYPTO_SHANI)\n@@ -388,6 +392,12 @@ crypto_libbitcoin_crypto_avx2_a_CXXFLAGS += $(AVX2_CXXFLAGS)\n crypto_libbitcoin_crypto_avx2_a_CPPFLAGS += -DENABLE_AVX2\n crypto_libbitcoin_crypto_avx2_a_SOURCES = crypto/sha256_avx2.cpp\n \n+crypto_libbitcoin_crypto_avx512_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+crypto_libbitcoin_crypto_avx512_a_CPPFLAGS = $(AM_CPPFLAGS)\n+crypto_libbitcoin_crypto_avx512_a_CXXFLAGS += $(AVX512_CXXFLAGS)\n+crypto_libbitcoin_crypto_avx512_a_CPPFLAGS += -DENABLE_AVX512\n+crypto_libbitcoin_crypto_avx512_a_SOURCES = crypto/sha256_avx512.cpp\n+\n crypto_libbitcoin_crypto_shani_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n crypto_libbitcoin_crypto_shani_a_CPPFLAGS = $(AM_CPPFLAGS)\n crypto_libbitcoin_crypto_shani_a_CXXFLAGS += $(SHANI_CXXFLAGS)"
      },
      {
        "sha": "b2c7036c6a578e09b5729a34ca9b4570280de34a",
        "filename": "src/crypto/sha256.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 4,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0e207ebab05574f826d07a76e090e545b490003/src/crypto/sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0e207ebab05574f826d07a76e090e545b490003/src/crypto/sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.cpp?ref=b0e207ebab05574f826d07a76e090e545b490003",
        "patch": "@@ -29,6 +29,11 @@ namespace sha256d64_avx2\n void Transform_8way(unsigned char* out, const unsigned char* in);\n }\n \n+namespace sha256d64_avx512\n+{\n+void Transform_16way(unsigned char* out, const unsigned char* in);\n+}\n+\n namespace sha256d64_shani\n {\n void Transform_2way(unsigned char* out, const unsigned char* in);\n@@ -461,6 +466,7 @@ TransformD64Type TransformD64 = sha256::TransformD64;\n TransformD64Type TransformD64_2way = nullptr;\n TransformD64Type TransformD64_4way = nullptr;\n TransformD64Type TransformD64_8way = nullptr;\n+TransformD64Type TransformD64_16way = nullptr;\n \n bool SelfTest() {\n     // Input state (equal to the initial SHA256 state)\n@@ -560,11 +566,11 @@ void inline cpuid(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uin\n }\n \n /** Check whether the OS has enabled AVX registers. */\n-bool AVXEnabled()\n+uint32_t AVXEnabledFlags()\n {\n     uint32_t a, d;\n     __asm__(\"xgetbv\" : \"=a\"(a), \"=d\"(d) : \"c\"(0));\n-    return (a & 6) == 6;\n+    return a;\n }\n #endif\n } // namespace\n@@ -578,29 +584,36 @@ std::string SHA256AutoDetect()\n     bool have_xsave = false;\n     bool have_avx = false;\n     bool have_avx2 = false;\n+    bool have_avx512 = false;\n     bool have_shani = false;\n     bool enabled_avx = false;\n+    bool enabled_avx512 = false;\n \n-    (void)AVXEnabled;\n+    (void)AVXEnabledFlags;\n     (void)have_sse4;\n     (void)have_avx;\n     (void)have_xsave;\n     (void)have_avx2;\n+    (void)have_avx512;\n     (void)have_shani;\n     (void)enabled_avx;\n+    (void)enabled_avx512;\n \n     uint32_t eax, ebx, ecx, edx;\n     cpuid(1, 0, eax, ebx, ecx, edx);\n     have_sse4 = (ecx >> 19) & 1;\n     have_xsave = (ecx >> 27) & 1;\n     have_avx = (ecx >> 28) & 1;\n     if (have_xsave && have_avx) {\n-        enabled_avx = AVXEnabled();\n+        uint32_t flags = AVXEnabledFlags();\n+        enabled_avx = (flags & 6) == 6;\n+        enabled_avx512 = (flags & 0xe6) == 0xe6;\n     }\n     if (have_sse4) {\n         cpuid(7, 0, eax, ebx, ecx, edx);\n         have_avx2 = (ebx >> 5) & 1;\n         have_shani = (ebx >> 29) & 1;\n+        have_avx512 = (ebx >> 16) & 1;\n     }\n \n #if defined(ENABLE_SHANI) && !defined(BUILD_BITCOIN_INTERNAL)\n@@ -632,6 +645,13 @@ std::string SHA256AutoDetect()\n         ret += \",avx2(8way)\";\n     }\n #endif\n+\n+#if defined(ENABLE_AVX512) && !defined(BUILD_BITCOIN_INTERNAL)\n+    if (have_avx512 && enabled_avx512) {\n+        TransformD64_16way = sha256d64_avx512::Transform_16way;\n+        ret += \",avx512(16way)\";\n+    }\n+#endif\n #endif\n \n     assert(SelfTest());\n@@ -697,6 +717,14 @@ CSHA256& CSHA256::Reset()\n \n void SHA256D64(unsigned char* out, const unsigned char* in, size_t blocks)\n {\n+    if (TransformD64_16way) {\n+        while (blocks >= 16) {\n+            TransformD64_16way(out, in);\n+            out += 512;\n+            in += 1024;\n+            blocks -= 16;\n+        }\n+    }\n     if (TransformD64_8way) {\n         while (blocks >= 8) {\n             TransformD64_8way(out, in);"
      },
      {
        "sha": "4d1af0112da72119ac0aa706292865271fc3ea82",
        "filename": "src/crypto/sha256_avx512.cpp",
        "status": "added",
        "additions": 350,
        "deletions": 0,
        "changes": 350,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0e207ebab05574f826d07a76e090e545b490003/src/crypto/sha256_avx512.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0e207ebab05574f826d07a76e090e545b490003/src/crypto/sha256_avx512.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256_avx512.cpp?ref=b0e207ebab05574f826d07a76e090e545b490003",
        "patch": "@@ -0,0 +1,350 @@\n+#ifdef ENABLE_AVX512\n+\n+#include <stdint.h>\n+#include <immintrin.h>\n+\n+#include <crypto/sha256.h>\n+#include <crypto/common.h>\n+\n+namespace sha256d64_avx512 {\n+namespace {\n+\n+__m512i inline K(uint32_t x) { return _mm512_set1_epi32(x); }\n+\n+__m512i inline Add(__m512i x, __m512i y) { return _mm512_add_epi32(x, y); }\n+__m512i inline Add(__m512i x, __m512i y, __m512i z) { return Add(Add(x, y), z); }\n+__m512i inline Add(__m512i x, __m512i y, __m512i z, __m512i w) { return Add(Add(x, y), Add(z, w)); }\n+__m512i inline Add(__m512i x, __m512i y, __m512i z, __m512i w, __m512i v) { return Add(Add(x, y, z), Add(w, v)); }\n+__m512i inline Inc(__m512i& x, __m512i y) { x = Add(x, y); return x; }\n+__m512i inline Inc(__m512i& x, __m512i y, __m512i z) { x = Add(x, y, z); return x; }\n+__m512i inline Inc(__m512i& x, __m512i y, __m512i z, __m512i w) { x = Add(x, y, z, w); return x; }\n+__m512i inline Xor(__m512i x, __m512i y) { return _mm512_xor_si512(x, y); }\n+__m512i inline Xor(__m512i x, __m512i y, __m512i z) { return Xor(Xor(x, y), z); }\n+__m512i inline Or(__m512i x, __m512i y) { return _mm512_or_si512(x, y); }\n+__m512i inline And(__m512i x, __m512i y) { return _mm512_and_si512(x, y); }\n+__m512i inline ShR(__m512i x, int n) { return _mm512_srli_epi32(x, n); }\n+template<int N> __m512i inline RoL(__m512i x) { return _mm512_rol_epi32(x, N); }\n+\n+__m512i inline Ch(__m512i x, __m512i y, __m512i z) { return Xor(z, And(x, Xor(y, z))); }\n+__m512i inline Maj(__m512i x, __m512i y, __m512i z) { return Or(And(x, y), And(z, Or(x, y))); }\n+__m512i inline Sigma0(__m512i x) { return Xor(RoL<30>(x), RoL<19>(x), RoL<10>(x)); }\n+__m512i inline Sigma1(__m512i x) { return Xor(RoL<26>(x), RoL<21>(x), RoL<7>(x)); }\n+__m512i inline sigma0(__m512i x) { return Xor(RoL<25>(x), RoL<14>(x), ShR(x, 3)); }\n+__m512i inline sigma1(__m512i x) { return Xor(RoL<15>(x), RoL<13>(x), ShR(x, 10)); }\n+\n+/** One round of SHA-256. */\n+void inline __attribute__((always_inline)) Round(__m512i a, __m512i b, __m512i c, __m512i& d, __m512i e, __m512i f, __m512i g, __m512i& h, __m512i k)\n+{\n+    __m512i t1 = Add(h, Sigma1(e), Ch(e, f, g), k);\n+    __m512i t2 = Add(Sigma0(a), Maj(a, b, c));\n+    d = Add(d, t1);\n+    h = Add(t1, t2);\n+}\n+\n+__m512i inline Read16(const unsigned char* chunk, int offset) {\n+    return _mm512_set_epi32(\n+        ReadBE32(chunk + 64 *  0 + offset),\n+        ReadBE32(chunk + 64 *  1 + offset),\n+        ReadBE32(chunk + 64 *  2 + offset),\n+        ReadBE32(chunk + 64 *  3 + offset),\n+        ReadBE32(chunk + 64 *  4 + offset),\n+        ReadBE32(chunk + 64 *  5 + offset),\n+        ReadBE32(chunk + 64 *  6 + offset),\n+        ReadBE32(chunk + 64 *  7 + offset),\n+\n+        ReadBE32(chunk + 64 *  8 + offset),\n+        ReadBE32(chunk + 64 *  9 + offset),\n+        ReadBE32(chunk + 64 * 10 + offset),\n+        ReadBE32(chunk + 64 * 11 + offset),\n+        ReadBE32(chunk + 64 * 12 + offset),\n+        ReadBE32(chunk + 64 * 13 + offset),\n+        ReadBE32(chunk + 64 * 14 + offset),\n+        ReadBE32(chunk + 64 * 15 + offset)\n+    );\n+}\n+\n+void inline Write16(unsigned char* out, int offset, __m512i d) {\n+    __m128i v = _mm512_extracti32x4_epi32(d, 3);\n+    WriteBE32(out + offset + 32 * 0, _mm_extract_epi32(v, 3));\n+    WriteBE32(out + offset + 32 * 1, _mm_extract_epi32(v, 2));\n+    WriteBE32(out + offset + 32 * 2, _mm_extract_epi32(v, 1));\n+    WriteBE32(out + offset + 32 * 3, _mm_extract_epi32(v, 0));\n+    out += 32 * 4;\n+\n+    v = _mm512_extracti32x4_epi32(d, 2);\n+    WriteBE32(out + offset + 32 * 0, _mm_extract_epi32(v, 3));\n+    WriteBE32(out + offset + 32 * 1, _mm_extract_epi32(v, 2));\n+    WriteBE32(out + offset + 32 * 2, _mm_extract_epi32(v, 1));\n+    WriteBE32(out + offset + 32 * 3, _mm_extract_epi32(v, 0));\n+    out += 32 * 4;\n+\n+    v = _mm512_extracti32x4_epi32(d, 1);\n+    WriteBE32(out + offset + 32 * 0, _mm_extract_epi32(v, 3));\n+    WriteBE32(out + offset + 32 * 1, _mm_extract_epi32(v, 2));\n+    WriteBE32(out + offset + 32 * 2, _mm_extract_epi32(v, 1));\n+    WriteBE32(out + offset + 32 * 3, _mm_extract_epi32(v, 0));\n+    out += 32 * 4;\n+\n+    v = _mm512_extracti32x4_epi32(d, 0);\n+    WriteBE32(out + offset + 32 * 0, _mm_extract_epi32(v, 3));\n+    WriteBE32(out + offset + 32 * 1, _mm_extract_epi32(v, 2));\n+    WriteBE32(out + offset + 32 * 2, _mm_extract_epi32(v, 1));\n+    WriteBE32(out + offset + 32 * 3, _mm_extract_epi32(v, 0));\n+}\n+\n+}\n+\n+void Transform_16way(unsigned char* out, const unsigned char* in)\n+{\n+    // Transform 1\n+    __m512i a = K(0x6a09e667ul);\n+    __m512i b = K(0xbb67ae85ul);\n+    __m512i c = K(0x3c6ef372ul);\n+    __m512i d = K(0xa54ff53aul);\n+    __m512i e = K(0x510e527ful);\n+    __m512i f = K(0x9b05688cul);\n+    __m512i g = K(0x1f83d9abul);\n+    __m512i h = K(0x5be0cd19ul);\n+\n+    __m512i w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n+\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x428a2f98ul), w0 = Read16(in, 0)));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x71374491ul), w1 = Read16(in, 4)));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0xb5c0fbcful), w2 = Read16(in, 8)));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0xe9b5dba5ul), w3 = Read16(in, 12)));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x3956c25bul), w4 = Read16(in, 16)));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x59f111f1ul), w5 = Read16(in, 20)));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x923f82a4ul), w6 = Read16(in, 24)));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0xab1c5ed5ul), w7 = Read16(in, 28)));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0xd807aa98ul), w8 = Read16(in, 32)));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x12835b01ul), w9 = Read16(in, 36)));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x243185beul), w10 = Read16(in, 40)));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x550c7dc3ul), w11 = Read16(in, 44)));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x72be5d74ul), w12 = Read16(in, 48)));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x80deb1feul), w13 = Read16(in, 52)));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x9bdc06a7ul), w14 = Read16(in, 56)));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0xc19bf174ul), w15 = Read16(in, 60)));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0xe49b69c1ul), Inc(w0, sigma1(w14), w9, sigma0(w1))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0xefbe4786ul), Inc(w1, sigma1(w15), w10, sigma0(w2))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x0fc19dc6ul), Inc(w2, sigma1(w0), w11, sigma0(w3))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x240ca1ccul), Inc(w3, sigma1(w1), w12, sigma0(w4))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x2de92c6ful), Inc(w4, sigma1(w2), w13, sigma0(w5))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x4a7484aaul), Inc(w5, sigma1(w3), w14, sigma0(w6))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x5cb0a9dcul), Inc(w6, sigma1(w4), w15, sigma0(w7))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x76f988daul), Inc(w7, sigma1(w5), w0, sigma0(w8))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x983e5152ul), Inc(w8, sigma1(w6), w1, sigma0(w9))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0xa831c66dul), Inc(w9, sigma1(w7), w2, sigma0(w10))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0xb00327c8ul), Inc(w10, sigma1(w8), w3, sigma0(w11))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0xbf597fc7ul), Inc(w11, sigma1(w9), w4, sigma0(w12))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0xc6e00bf3ul), Inc(w12, sigma1(w10), w5, sigma0(w13))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0xd5a79147ul), Inc(w13, sigma1(w11), w6, sigma0(w14))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x06ca6351ul), Inc(w14, sigma1(w12), w7, sigma0(w15))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x14292967ul), Inc(w15, sigma1(w13), w8, sigma0(w0))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x27b70a85ul), Inc(w0, sigma1(w14), w9, sigma0(w1))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x2e1b2138ul), Inc(w1, sigma1(w15), w10, sigma0(w2))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x4d2c6dfcul), Inc(w2, sigma1(w0), w11, sigma0(w3))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x53380d13ul), Inc(w3, sigma1(w1), w12, sigma0(w4))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x650a7354ul), Inc(w4, sigma1(w2), w13, sigma0(w5))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x766a0abbul), Inc(w5, sigma1(w3), w14, sigma0(w6))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x81c2c92eul), Inc(w6, sigma1(w4), w15, sigma0(w7))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x92722c85ul), Inc(w7, sigma1(w5), w0, sigma0(w8))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0xa2bfe8a1ul), Inc(w8, sigma1(w6), w1, sigma0(w9))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0xa81a664bul), Inc(w9, sigma1(w7), w2, sigma0(w10))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0xc24b8b70ul), Inc(w10, sigma1(w8), w3, sigma0(w11))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0xc76c51a3ul), Inc(w11, sigma1(w9), w4, sigma0(w12))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0xd192e819ul), Inc(w12, sigma1(w10), w5, sigma0(w13))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0xd6990624ul), Inc(w13, sigma1(w11), w6, sigma0(w14))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0xf40e3585ul), Inc(w14, sigma1(w12), w7, sigma0(w15))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x106aa070ul), Inc(w15, sigma1(w13), w8, sigma0(w0))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x19a4c116ul), Inc(w0, sigma1(w14), w9, sigma0(w1))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x1e376c08ul), Inc(w1, sigma1(w15), w10, sigma0(w2))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x2748774cul), Inc(w2, sigma1(w0), w11, sigma0(w3))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x34b0bcb5ul), Inc(w3, sigma1(w1), w12, sigma0(w4))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x391c0cb3ul), Inc(w4, sigma1(w2), w13, sigma0(w5))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x4ed8aa4aul), Inc(w5, sigma1(w3), w14, sigma0(w6))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x5b9cca4ful), Inc(w6, sigma1(w4), w15, sigma0(w7))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x682e6ff3ul), Inc(w7, sigma1(w5), w0, sigma0(w8))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x748f82eeul), Inc(w8, sigma1(w6), w1, sigma0(w9))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x78a5636ful), Inc(w9, sigma1(w7), w2, sigma0(w10))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x84c87814ul), Inc(w10, sigma1(w8), w3, sigma0(w11))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x8cc70208ul), Inc(w11, sigma1(w9), w4, sigma0(w12))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x90befffaul), Inc(w12, sigma1(w10), w5, sigma0(w13))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0xa4506cebul), Inc(w13, sigma1(w11), w6, sigma0(w14))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0xbef9a3f7ul), Inc(w14, sigma1(w12), w7, sigma0(w15))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0xc67178f2ul), Inc(w15, sigma1(w13), w8, sigma0(w0))));\n+\n+    a = Add(a, K(0x6a09e667ul));\n+    b = Add(b, K(0xbb67ae85ul));\n+    c = Add(c, K(0x3c6ef372ul));\n+    d = Add(d, K(0xa54ff53aul));\n+    e = Add(e, K(0x510e527ful));\n+    f = Add(f, K(0x9b05688cul));\n+    g = Add(g, K(0x1f83d9abul));\n+    h = Add(h, K(0x5be0cd19ul));\n+\n+    __m512i t0 = a, t1 = b, t2 = c, t3 = d, t4 = e, t5 = f, t6 = g, t7 = h;\n+\n+    // Transform 2\n+    Round(a, b, c, d, e, f, g, h, K(0xc28a2f98ul));\n+    Round(h, a, b, c, d, e, f, g, K(0x71374491ul));\n+    Round(g, h, a, b, c, d, e, f, K(0xb5c0fbcful));\n+    Round(f, g, h, a, b, c, d, e, K(0xe9b5dba5ul));\n+    Round(e, f, g, h, a, b, c, d, K(0x3956c25bul));\n+    Round(d, e, f, g, h, a, b, c, K(0x59f111f1ul));\n+    Round(c, d, e, f, g, h, a, b, K(0x923f82a4ul));\n+    Round(b, c, d, e, f, g, h, a, K(0xab1c5ed5ul));\n+    Round(a, b, c, d, e, f, g, h, K(0xd807aa98ul));\n+    Round(h, a, b, c, d, e, f, g, K(0x12835b01ul));\n+    Round(g, h, a, b, c, d, e, f, K(0x243185beul));\n+    Round(f, g, h, a, b, c, d, e, K(0x550c7dc3ul));\n+    Round(e, f, g, h, a, b, c, d, K(0x72be5d74ul));\n+    Round(d, e, f, g, h, a, b, c, K(0x80deb1feul));\n+    Round(c, d, e, f, g, h, a, b, K(0x9bdc06a7ul));\n+    Round(b, c, d, e, f, g, h, a, K(0xc19bf374ul));\n+    Round(a, b, c, d, e, f, g, h, K(0x649b69c1ul));\n+    Round(h, a, b, c, d, e, f, g, K(0xf0fe4786ul));\n+    Round(g, h, a, b, c, d, e, f, K(0x0fe1edc6ul));\n+    Round(f, g, h, a, b, c, d, e, K(0x240cf254ul));\n+    Round(e, f, g, h, a, b, c, d, K(0x4fe9346ful));\n+    Round(d, e, f, g, h, a, b, c, K(0x6cc984beul));\n+    Round(c, d, e, f, g, h, a, b, K(0x61b9411eul));\n+    Round(b, c, d, e, f, g, h, a, K(0x16f988faul));\n+    Round(a, b, c, d, e, f, g, h, K(0xf2c65152ul));\n+    Round(h, a, b, c, d, e, f, g, K(0xa88e5a6dul));\n+    Round(g, h, a, b, c, d, e, f, K(0xb019fc65ul));\n+    Round(f, g, h, a, b, c, d, e, K(0xb9d99ec7ul));\n+    Round(e, f, g, h, a, b, c, d, K(0x9a1231c3ul));\n+    Round(d, e, f, g, h, a, b, c, K(0xe70eeaa0ul));\n+    Round(c, d, e, f, g, h, a, b, K(0xfdb1232bul));\n+    Round(b, c, d, e, f, g, h, a, K(0xc7353eb0ul));\n+    Round(a, b, c, d, e, f, g, h, K(0x3069bad5ul));\n+    Round(h, a, b, c, d, e, f, g, K(0xcb976d5ful));\n+    Round(g, h, a, b, c, d, e, f, K(0x5a0f118ful));\n+    Round(f, g, h, a, b, c, d, e, K(0xdc1eeefdul));\n+    Round(e, f, g, h, a, b, c, d, K(0x0a35b689ul));\n+    Round(d, e, f, g, h, a, b, c, K(0xde0b7a04ul));\n+    Round(c, d, e, f, g, h, a, b, K(0x58f4ca9dul));\n+    Round(b, c, d, e, f, g, h, a, K(0xe15d5b16ul));\n+    Round(a, b, c, d, e, f, g, h, K(0x007f3e86ul));\n+    Round(h, a, b, c, d, e, f, g, K(0x37088980ul));\n+    Round(g, h, a, b, c, d, e, f, K(0xa507ea32ul));\n+    Round(f, g, h, a, b, c, d, e, K(0x6fab9537ul));\n+    Round(e, f, g, h, a, b, c, d, K(0x17406110ul));\n+    Round(d, e, f, g, h, a, b, c, K(0x0d8cd6f1ul));\n+    Round(c, d, e, f, g, h, a, b, K(0xcdaa3b6dul));\n+    Round(b, c, d, e, f, g, h, a, K(0xc0bbbe37ul));\n+    Round(a, b, c, d, e, f, g, h, K(0x83613bdaul));\n+    Round(h, a, b, c, d, e, f, g, K(0xdb48a363ul));\n+    Round(g, h, a, b, c, d, e, f, K(0x0b02e931ul));\n+    Round(f, g, h, a, b, c, d, e, K(0x6fd15ca7ul));\n+    Round(e, f, g, h, a, b, c, d, K(0x521afacaul));\n+    Round(d, e, f, g, h, a, b, c, K(0x31338431ul));\n+    Round(c, d, e, f, g, h, a, b, K(0x6ed41a95ul));\n+    Round(b, c, d, e, f, g, h, a, K(0x6d437890ul));\n+    Round(a, b, c, d, e, f, g, h, K(0xc39c91f2ul));\n+    Round(h, a, b, c, d, e, f, g, K(0x9eccabbdul));\n+    Round(g, h, a, b, c, d, e, f, K(0xb5c9a0e6ul));\n+    Round(f, g, h, a, b, c, d, e, K(0x532fb63cul));\n+    Round(e, f, g, h, a, b, c, d, K(0xd2c741c6ul));\n+    Round(d, e, f, g, h, a, b, c, K(0x07237ea3ul));\n+    Round(c, d, e, f, g, h, a, b, K(0xa4954b68ul));\n+    Round(b, c, d, e, f, g, h, a, K(0x4c191d76ul));\n+\n+    w0 = Add(t0, a);\n+    w1 = Add(t1, b);\n+    w2 = Add(t2, c);\n+    w3 = Add(t3, d);\n+    w4 = Add(t4, e);\n+    w5 = Add(t5, f);\n+    w6 = Add(t6, g);\n+    w7 = Add(t7, h);\n+\n+    // Transform 3\n+    a = K(0x6a09e667ul);\n+    b = K(0xbb67ae85ul);\n+    c = K(0x3c6ef372ul);\n+    d = K(0xa54ff53aul);\n+    e = K(0x510e527ful);\n+    f = K(0x9b05688cul);\n+    g = K(0x1f83d9abul);\n+    h = K(0x5be0cd19ul);\n+\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x428a2f98ul), w0));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x71374491ul), w1));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0xb5c0fbcful), w2));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0xe9b5dba5ul), w3));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x3956c25bul), w4));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x59f111f1ul), w5));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x923f82a4ul), w6));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0xab1c5ed5ul), w7));\n+    Round(a, b, c, d, e, f, g, h, K(0x5807aa98ul));\n+    Round(h, a, b, c, d, e, f, g, K(0x12835b01ul));\n+    Round(g, h, a, b, c, d, e, f, K(0x243185beul));\n+    Round(f, g, h, a, b, c, d, e, K(0x550c7dc3ul));\n+    Round(e, f, g, h, a, b, c, d, K(0x72be5d74ul));\n+    Round(d, e, f, g, h, a, b, c, K(0x80deb1feul));\n+    Round(c, d, e, f, g, h, a, b, K(0x9bdc06a7ul));\n+    Round(b, c, d, e, f, g, h, a, K(0xc19bf274ul));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0xe49b69c1ul), Inc(w0, sigma0(w1))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0xefbe4786ul), Inc(w1, K(0xa00000ul), sigma0(w2))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x0fc19dc6ul), Inc(w2, sigma1(w0), sigma0(w3))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x240ca1ccul), Inc(w3, sigma1(w1), sigma0(w4))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x2de92c6ful), Inc(w4, sigma1(w2), sigma0(w5))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x4a7484aaul), Inc(w5, sigma1(w3), sigma0(w6))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x5cb0a9dcul), Inc(w6, sigma1(w4), K(0x100ul), sigma0(w7))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x76f988daul), Inc(w7, sigma1(w5), w0, K(0x11002000ul))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x983e5152ul), w8 = Add(K(0x80000000ul), sigma1(w6), w1)));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0xa831c66dul), w9 = Add(sigma1(w7), w2)));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0xb00327c8ul), w10 = Add(sigma1(w8), w3)));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0xbf597fc7ul), w11 = Add(sigma1(w9), w4)));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0xc6e00bf3ul), w12 = Add(sigma1(w10), w5)));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0xd5a79147ul), w13 = Add(sigma1(w11), w6)));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x06ca6351ul), w14 = Add(sigma1(w12), w7, K(0x400022ul))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x14292967ul), w15 = Add(K(0x100ul), sigma1(w13), w8, sigma0(w0))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x27b70a85ul), Inc(w0, sigma1(w14), w9, sigma0(w1))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x2e1b2138ul), Inc(w1, sigma1(w15), w10, sigma0(w2))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x4d2c6dfcul), Inc(w2, sigma1(w0), w11, sigma0(w3))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x53380d13ul), Inc(w3, sigma1(w1), w12, sigma0(w4))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x650a7354ul), Inc(w4, sigma1(w2), w13, sigma0(w5))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x766a0abbul), Inc(w5, sigma1(w3), w14, sigma0(w6))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x81c2c92eul), Inc(w6, sigma1(w4), w15, sigma0(w7))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x92722c85ul), Inc(w7, sigma1(w5), w0, sigma0(w8))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0xa2bfe8a1ul), Inc(w8, sigma1(w6), w1, sigma0(w9))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0xa81a664bul), Inc(w9, sigma1(w7), w2, sigma0(w10))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0xc24b8b70ul), Inc(w10, sigma1(w8), w3, sigma0(w11))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0xc76c51a3ul), Inc(w11, sigma1(w9), w4, sigma0(w12))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0xd192e819ul), Inc(w12, sigma1(w10), w5, sigma0(w13))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0xd6990624ul), Inc(w13, sigma1(w11), w6, sigma0(w14))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0xf40e3585ul), Inc(w14, sigma1(w12), w7, sigma0(w15))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x106aa070ul), Inc(w15, sigma1(w13), w8, sigma0(w0))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x19a4c116ul), Inc(w0, sigma1(w14), w9, sigma0(w1))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x1e376c08ul), Inc(w1, sigma1(w15), w10, sigma0(w2))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x2748774cul), Inc(w2, sigma1(w0), w11, sigma0(w3))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x34b0bcb5ul), Inc(w3, sigma1(w1), w12, sigma0(w4))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x391c0cb3ul), Inc(w4, sigma1(w2), w13, sigma0(w5))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x4ed8aa4aul), Inc(w5, sigma1(w3), w14, sigma0(w6))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x5b9cca4ful), Inc(w6, sigma1(w4), w15, sigma0(w7))));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0x682e6ff3ul), Inc(w7, sigma1(w5), w0, sigma0(w8))));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x748f82eeul), Inc(w8, sigma1(w6), w1, sigma0(w9))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x78a5636ful), Inc(w9, sigma1(w7), w2, sigma0(w10))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x84c87814ul), Inc(w10, sigma1(w8), w3, sigma0(w11))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x8cc70208ul), Inc(w11, sigma1(w9), w4, sigma0(w12))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x90befffaul), Inc(w12, sigma1(w10), w5, sigma0(w13))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0xa4506cebul), Inc(w13, sigma1(w11), w6, sigma0(w14))));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0xbef9a3f7ul), w14, sigma1(w12), w7, sigma0(w15)));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0xc67178f2ul), w15, sigma1(w13), w8, sigma0(w0)));\n+\n+    // Output\n+    Write16(out, 0, Add(a, K(0x6a09e667ul)));\n+    Write16(out, 4, Add(b, K(0xbb67ae85ul)));\n+    Write16(out, 8, Add(c, K(0x3c6ef372ul)));\n+    Write16(out, 12, Add(d, K(0xa54ff53aul)));\n+    Write16(out, 16, Add(e, K(0x510e527ful)));\n+    Write16(out, 20, Add(f, K(0x9b05688cul)));\n+    Write16(out, 24, Add(g, K(0x1f83d9abul)));\n+    Write16(out, 28, Add(h, K(0x5be0cd19ul)));\n+}\n+\n+} // namespace sha256d64_avx512\n+\n+#endif // ENABLE_AVX512"
      }
    ]
  },
  {
    "sha": "bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjE1ZjJhYmNmMDJmYTVkYzU3NWFiYzJjMWQ3YmFmNGNjZjRkMDNl",
    "commit": {
      "author": {
        "name": "liuyujun",
        "email": "liuyujun@fingera.cn",
        "date": "2018-10-15T01:25:38Z"
      },
      "committer": {
        "name": "liuyujun",
        "email": "liuyujun@fingera.cn",
        "date": "2019-05-30T01:56:02Z"
      },
      "message": "fix avx512 ShR",
      "tree": {
        "sha": "1f2335843516a791b7dddb940c22d186f4a25d8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f2335843516a791b7dddb940c22d186f4a25d8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e/comments",
    "author": {
      "login": "fingera",
      "id": 7310938,
      "node_id": "MDQ6VXNlcjczMTA5Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7310938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fingera",
      "html_url": "https://github.com/fingera",
      "followers_url": "https://api.github.com/users/fingera/followers",
      "following_url": "https://api.github.com/users/fingera/following{/other_user}",
      "gists_url": "https://api.github.com/users/fingera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fingera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fingera/subscriptions",
      "organizations_url": "https://api.github.com/users/fingera/orgs",
      "repos_url": "https://api.github.com/users/fingera/repos",
      "events_url": "https://api.github.com/users/fingera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fingera/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fingera",
      "id": 7310938,
      "node_id": "MDQ6VXNlcjczMTA5Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7310938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fingera",
      "html_url": "https://github.com/fingera",
      "followers_url": "https://api.github.com/users/fingera/followers",
      "following_url": "https://api.github.com/users/fingera/following{/other_user}",
      "gists_url": "https://api.github.com/users/fingera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fingera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fingera/subscriptions",
      "organizations_url": "https://api.github.com/users/fingera/orgs",
      "repos_url": "https://api.github.com/users/fingera/repos",
      "events_url": "https://api.github.com/users/fingera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fingera/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0e207ebab05574f826d07a76e090e545b490003",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e207ebab05574f826d07a76e090e545b490003",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0e207ebab05574f826d07a76e090e545b490003"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "29ba1c12b19b8cad2b356c404d8c6c014e3df70e",
        "filename": "src/crypto/sha256_avx512.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e/src/crypto/sha256_avx512.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e/src/crypto/sha256_avx512.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256_avx512.cpp?ref=bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e",
        "patch": "@@ -22,7 +22,7 @@ __m512i inline Xor(__m512i x, __m512i y) { return _mm512_xor_si512(x, y); }\n __m512i inline Xor(__m512i x, __m512i y, __m512i z) { return Xor(Xor(x, y), z); }\n __m512i inline Or(__m512i x, __m512i y) { return _mm512_or_si512(x, y); }\n __m512i inline And(__m512i x, __m512i y) { return _mm512_and_si512(x, y); }\n-__m512i inline ShR(__m512i x, int n) { return _mm512_srli_epi32(x, n); }\n+__m512i inline ShR(__m512i x, unsigned int n) { return _mm512_srli_epi32(x, n); }\n template<int N> __m512i inline RoL(__m512i x) { return _mm512_rol_epi32(x, N); }\n \n __m512i inline Ch(__m512i x, __m512i y, __m512i z) { return Xor(z, And(x, Xor(y, z))); }"
      }
    ]
  },
  {
    "sha": "6a76a13b892139e6bc1c67578e65f387bf2cd1a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTc2YTEzYjg5MjEzOWU2YmMxYzY3NTc4ZTY1ZjM4N2JmMmNkMWEy",
    "commit": {
      "author": {
        "name": "liuyujun",
        "email": "liuyujun@fingera.cn",
        "date": "2019-05-30T02:40:59Z"
      },
      "committer": {
        "name": "liuyujun",
        "email": "liuyujun@fingera.cn",
        "date": "2019-05-30T02:40:59Z"
      },
      "message": "mingw avx512 detection",
      "tree": {
        "sha": "5fd83ff1c42667dca1f20e9a6b8ff67292af785e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5fd83ff1c42667dca1f20e9a6b8ff67292af785e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a76a13b892139e6bc1c67578e65f387bf2cd1a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a76a13b892139e6bc1c67578e65f387bf2cd1a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a76a13b892139e6bc1c67578e65f387bf2cd1a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a76a13b892139e6bc1c67578e65f387bf2cd1a2/comments",
    "author": {
      "login": "fingera",
      "id": 7310938,
      "node_id": "MDQ6VXNlcjczMTA5Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7310938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fingera",
      "html_url": "https://github.com/fingera",
      "followers_url": "https://api.github.com/users/fingera/followers",
      "following_url": "https://api.github.com/users/fingera/following{/other_user}",
      "gists_url": "https://api.github.com/users/fingera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fingera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fingera/subscriptions",
      "organizations_url": "https://api.github.com/users/fingera/orgs",
      "repos_url": "https://api.github.com/users/fingera/repos",
      "events_url": "https://api.github.com/users/fingera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fingera/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fingera",
      "id": 7310938,
      "node_id": "MDQ6VXNlcjczMTA5Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7310938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fingera",
      "html_url": "https://github.com/fingera",
      "followers_url": "https://api.github.com/users/fingera/followers",
      "following_url": "https://api.github.com/users/fingera/following{/other_user}",
      "gists_url": "https://api.github.com/users/fingera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fingera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fingera/subscriptions",
      "organizations_url": "https://api.github.com/users/fingera/orgs",
      "repos_url": "https://api.github.com/users/fingera/repos",
      "events_url": "https://api.github.com/users/fingera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fingera/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf15f2abcf02fa5dc575abc2c1d7baf4ccf4d03e"
      }
    ],
    "stats": {
      "total": 100,
      "additions": 80,
      "deletions": 20
    },
    "files": [
      {
        "sha": "41a7e1ad5552d1f9d494f9771acdd64fa59e6c5e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 80,
        "deletions": 20,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a76a13b892139e6bc1c67578e65f387bf2cd1a2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a76a13b892139e6bc1c67578e65f387bf2cd1a2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=6a76a13b892139e6bc1c67578e65f387bf2cd1a2",
        "patch": "@@ -413,26 +413,86 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n )\n CXXFLAGS=\"$TEMP_CXXFLAGS\"\n \n-case $host in\n-  *mingw*)\n-    ;;\n-  *)\n-    TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-    CXXFLAGS=\"$CXXFLAGS $AVX512_CXXFLAGS\"\n-    AC_MSG_CHECKING(for AVX512 intrinsics)\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        #include <stdint.h>\n-        #include <immintrin.h>\n-      ]],[[\n-        __m512i l = _mm512_set1_epi32(0);\n-        return _mm_extract_epi32(_mm512_extracti32x4_epi32(l, 3), 3);\n-      ]])],\n-    [ AC_MSG_RESULT(yes); enable_avx512=yes; AC_DEFINE(ENABLE_AVX512, 1, [Define this symbol to build code that uses AVX512 intrinsics]) ],\n-    [ AC_MSG_RESULT(no)]\n-    )\n-    CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-    ;;\n-esac\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $AVX512_CXXFLAGS\"\n+AC_MSG_CHECKING(for AVX512 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+    __m512i inline K(uint32_t x) { return _mm512_set1_epi32(x); }\n+    __m512i inline Add(__m512i x, __m512i y) { return _mm512_add_epi32(x, y); }\n+    __m512i inline Add(__m512i x, __m512i y, __m512i z) { return Add(Add(x, y), z); }\n+    __m512i inline Add(__m512i x, __m512i y, __m512i z, __m512i w) { return Add(Add(x, y), Add(z, w)); }\n+    __m512i inline Add(__m512i x, __m512i y, __m512i z, __m512i w, __m512i v) { return Add(Add(x, y, z), Add(w, v)); }\n+    __m512i inline Inc(__m512i& x, __m512i y) { x = Add(x, y); return x; }\n+    __m512i inline Inc(__m512i& x, __m512i y, __m512i z) { x = Add(x, y, z); return x; }\n+    __m512i inline Inc(__m512i& x, __m512i y, __m512i z, __m512i w) { x = Add(x, y, z, w); return x; }\n+    __m512i inline Xor(__m512i x, __m512i y) { return _mm512_xor_si512(x, y); }\n+    __m512i inline Xor(__m512i x, __m512i y, __m512i z) { return Xor(Xor(x, y), z); }\n+    __m512i inline Or(__m512i x, __m512i y) { return _mm512_or_si512(x, y); }\n+    __m512i inline And(__m512i x, __m512i y) { return _mm512_and_si512(x, y); }\n+    __m512i inline ShR(__m512i x, unsigned int n) { return _mm512_srli_epi32(x, n); }\n+    template<int N> __m512i inline RoL(__m512i x) { return _mm512_rol_epi32(x, N); }\n+    __m512i inline Ch(__m512i x, __m512i y, __m512i z) { return Xor(z, And(x, Xor(y, z))); }\n+    __m512i inline Maj(__m512i x, __m512i y, __m512i z) { return Or(And(x, y), And(z, Or(x, y))); }\n+    __m512i inline Sigma0(__m512i x) { return Xor(RoL<30>(x), RoL<19>(x), RoL<10>(x)); }\n+    __m512i inline Sigma1(__m512i x) { return Xor(RoL<26>(x), RoL<21>(x), RoL<7>(x)); }\n+    __m512i inline sigma0(__m512i x) { return Xor(RoL<25>(x), RoL<14>(x), ShR(x, 3)); }\n+    __m512i inline sigma1(__m512i x) { return Xor(RoL<15>(x), RoL<13>(x), ShR(x, 10)); }\n+\n+    /** One round of SHA-256. */\n+    void inline __attribute__((always_inline)) Round(__m512i a, __m512i b, __m512i c, __m512i& d, __m512i e, __m512i f, __m512i g, __m512i& h, __m512i k)\n+    {\n+        __m512i t1 = Add(h, Sigma1(e), Ch(e, f, g), k);\n+        __m512i t2 = Add(Sigma0(a), Maj(a, b, c));\n+        d = Add(d, t1);\n+        h = Add(t1, t2);\n+    }\n+\n+    __m512i inline Read16(int offset) {\n+        return K(offset);\n+    }\n+  ]],[[\n+    __m512i a = K(0x6a09e667ul);\n+    __m512i b = K(0xbb67ae85ul);\n+    __m512i c = K(0x3c6ef372ul);\n+    __m512i d = K(0xa54ff53aul);\n+    __m512i e = K(0x510e527ful);\n+    __m512i f = K(0x9b05688cul);\n+    __m512i g = K(0x1f83d9abul);\n+    __m512i h = K(0x5be0cd19ul);\n+\n+    __m512i w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n+\n+    Round(a, b, c, d, e, f, g, h, Add(K(0x428a2f98ul), w0 = Read16(0)));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x71374491ul), w1 = Read16(4)));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0xb5c0fbcful), w2 = Read16(8)));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0xe9b5dba5ul), w3 = Read16(12)));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x3956c25bul), w4 = Read16(16)));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x59f111f1ul), w5 = Read16(20)));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x923f82a4ul), w6 = Read16(24)));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0xab1c5ed5ul), w7 = Read16(28)));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0xd807aa98ul), w8 = Read16(32)));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0x12835b01ul), w9 = Read16(36)));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x243185beul), w10 = Read16(40)));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x550c7dc3ul), w11 = Read16(44)));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x72be5d74ul), w12 = Read16(48)));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x80deb1feul), w13 = Read16(52)));\n+    Round(c, d, e, f, g, h, a, b, Add(K(0x9bdc06a7ul), w14 = Read16(56)));\n+    Round(b, c, d, e, f, g, h, a, Add(K(0xc19bf174ul), w15 = Read16(60)));\n+    Round(a, b, c, d, e, f, g, h, Add(K(0xe49b69c1ul), Inc(w0, sigma1(w14), w9, sigma0(w1))));\n+    Round(h, a, b, c, d, e, f, g, Add(K(0xefbe4786ul), Inc(w1, sigma1(w15), w10, sigma0(w2))));\n+    Round(g, h, a, b, c, d, e, f, Add(K(0x0fc19dc6ul), Inc(w2, sigma1(w0), w11, sigma0(w3))));\n+    Round(f, g, h, a, b, c, d, e, Add(K(0x240ca1ccul), Inc(w3, sigma1(w1), w12, sigma0(w4))));\n+    Round(e, f, g, h, a, b, c, d, Add(K(0x2de92c6ful), Inc(w4, sigma1(w2), w13, sigma0(w5))));\n+    Round(d, e, f, g, h, a, b, c, Add(K(0x4a7484aaul), Inc(w5, sigma1(w3), w14, sigma0(w6))));\n+\n+    return _mm_extract_epi32(_mm512_extracti32x4_epi32(g, 3), 3);\n+  ]])],\n+[ AC_MSG_RESULT(yes); enable_avx512=yes; AC_DEFINE(ENABLE_AVX512, 1, [Define this symbol to build code that uses AVX512 intrinsics]) ],\n+[ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n \n TEMP_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\""
      }
    ]
  },
  {
    "sha": "90f282f4bfe8e052c674ff829239f6a4845d7397",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MGYyODJmNGJmZThlMDUyYzY3NGZmODI5MjM5ZjZhNDg0NWQ3Mzk3",
    "commit": {
      "author": {
        "name": "liuyujun",
        "email": "liuyujun@fingera.cn",
        "date": "2019-06-27T08:22:55Z"
      },
      "committer": {
        "name": "liuyujun",
        "email": "liuyujun@fingera.cn",
        "date": "2019-06-27T08:22:55Z"
      },
      "message": "disable sha512 when shani exists",
      "tree": {
        "sha": "119114c896ad5d78b0b2e5dea54fba4a02db48b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/119114c896ad5d78b0b2e5dea54fba4a02db48b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90f282f4bfe8e052c674ff829239f6a4845d7397",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90f282f4bfe8e052c674ff829239f6a4845d7397",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/90f282f4bfe8e052c674ff829239f6a4845d7397",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90f282f4bfe8e052c674ff829239f6a4845d7397/comments",
    "author": {
      "login": "fingera",
      "id": 7310938,
      "node_id": "MDQ6VXNlcjczMTA5Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7310938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fingera",
      "html_url": "https://github.com/fingera",
      "followers_url": "https://api.github.com/users/fingera/followers",
      "following_url": "https://api.github.com/users/fingera/following{/other_user}",
      "gists_url": "https://api.github.com/users/fingera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fingera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fingera/subscriptions",
      "organizations_url": "https://api.github.com/users/fingera/orgs",
      "repos_url": "https://api.github.com/users/fingera/repos",
      "events_url": "https://api.github.com/users/fingera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fingera/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fingera",
      "id": 7310938,
      "node_id": "MDQ6VXNlcjczMTA5Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7310938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fingera",
      "html_url": "https://github.com/fingera",
      "followers_url": "https://api.github.com/users/fingera/followers",
      "following_url": "https://api.github.com/users/fingera/following{/other_user}",
      "gists_url": "https://api.github.com/users/fingera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fingera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fingera/subscriptions",
      "organizations_url": "https://api.github.com/users/fingera/orgs",
      "repos_url": "https://api.github.com/users/fingera/repos",
      "events_url": "https://api.github.com/users/fingera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fingera/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a76a13b892139e6bc1c67578e65f387bf2cd1a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a76a13b892139e6bc1c67578e65f387bf2cd1a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a76a13b892139e6bc1c67578e65f387bf2cd1a2"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6ae83e3d3b6ae6600b578694389f8dbd55a2462e",
        "filename": "src/crypto/sha256.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90f282f4bfe8e052c674ff829239f6a4845d7397/src/crypto/sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90f282f4bfe8e052c674ff829239f6a4845d7397/src/crypto/sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.cpp?ref=90f282f4bfe8e052c674ff829239f6a4845d7397",
        "patch": "@@ -622,8 +622,9 @@ std::string SHA256AutoDetect()\n         TransformD64 = TransformD64Wrapper<sha256_shani::Transform>;\n         TransformD64_2way = sha256d64_shani::Transform_2way;\n         ret = \"shani(1way,2way)\";\n-        have_sse4 = false; // Disable SSE4/AVX2;\n+        have_sse4 = false; // Disable SSE4/AVX2/AVX512;\n         have_avx2 = false;\n+        have_avx512 = false;\n     }\n #endif\n "
      }
    ]
  }
]