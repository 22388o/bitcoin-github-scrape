[
  {
    "sha": "90e140862ac7ac172cf89ed88e8183984affe057",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MGUxNDA4NjJhYzdhYzE3MmNmODllZDg4ZTgxODM5ODRhZmZlMDU3",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2017-05-06T03:49:18Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-24T07:27:50Z"
      },
      "message": "[rpc] Fix fVerbose parsing (remove excess if cases and ensure null is accepted).",
      "tree": {
        "sha": "c645be545879b745947cf08294bd3f300ed33a6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c645be545879b745947cf08294bd3f300ed33a6c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90e140862ac7ac172cf89ed88e8183984affe057",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlmef/YACgkQV692LbM1\nMyLRIRAAiFyEV5JvkKXujWB7yg2J9cT//hq3+EaZEby53zDh5Vi0kc5FD6dJ4R+N\nvB6LtxdA8G+eWw33vA7g9xGTCb9Pl2DglEYTYZz1gMIQcgrCe3pw9Z/a5819zAYJ\nGJiu0FX8N5vCsvg7qOCDh8ChLOXuabHSr9jDH4d7G0QSexjccT/NakocQ+KTveCK\n8adr7FVeJ0+2hYFk846C02RxZ5pm7GfC3PiAbnfBPzWPxvGgtxTKbU1XKgu87Oap\nuRqr8x+x0dHZXgVfCGhFhMHzd5uqnjB14Kld9pIcGMufyzqKtNIav64Ict1D84PU\nSyE+YSQT6+fDvSqNDcQTD/Ns/joqdbD722jaQHzQFexNVDSxd68q+e3QteqTXF1k\n7Fz168rhof5tHP6PdqV43y9DQ9tRdqQjSzkwUw2qbgv6XGkcwMDYnv6zfdYOr4bp\nW92kXoPwLnmGBbS3AWCvu4w0VKEMevhkXqTbHTOLPFnHVaLDIN9PCAVyEueo+yYB\nUCSysLFsiToQ5DPxpduLAT2kEGo5OT1RGm+sSy72swhjBU2GdG5GKZsPDevbf2HT\nGhgx4+on4HOQbZinACiOPqoNPgX3j3lEQQo27qd3ka0ilwXNik2QxX0HQhadUjIa\n+3J08BQ8QAQp8iSqCx30jQNU8kirBUqmU3DuqRYzVbWsZvo6azg=\n=aS/V\n-----END PGP SIGNATURE-----",
        "payload": "tree c645be545879b745947cf08294bd3f300ed33a6c\nparent affe9271aa4953ddbceb1bfe4e60838570272c56\nauthor Karl-Johan Alm <kalle.alm@gmail.com> 1494042558 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1503559670 +0900\n\n[rpc] Fix fVerbose parsing (remove excess if cases and ensure null is accepted).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90e140862ac7ac172cf89ed88e8183984affe057",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/90e140862ac7ac172cf89ed88e8183984affe057",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90e140862ac7ac172cf89ed88e8183984affe057/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "affe9271aa4953ddbceb1bfe4e60838570272c56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/affe9271aa4953ddbceb1bfe4e60838570272c56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/affe9271aa4953ddbceb1bfe4e60838570272c56"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 1,
      "deletions": 13
    },
    "files": [
      {
        "sha": "2089c0d806b5c55cb1ab4199795978e11ac998cc",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 13,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90e140862ac7ac172cf89ed88e8183984affe057/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90e140862ac7ac172cf89ed88e8183984affe057/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=90e140862ac7ac172cf89ed88e8183984affe057",
        "patch": "@@ -138,19 +138,7 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n-        if (request.params[1].isNum()) {\n-            if (request.params[1].get_int() != 0) {\n-                fVerbose = true;\n-            }\n-        }\n-        else if(request.params[1].isBool()) {\n-            if(request.params[1].isTrue()) {\n-                fVerbose = true;\n-            }\n-        }\n-        else {\n-            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n-        }\n+        fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n     }\n \n     CTransactionRef tx;"
      }
    ]
  },
  {
    "sha": "ab97ff9331c98c5e367c40b5a57c57c56529f278",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjk3ZmY5MzMxYzk4YzVlMzY3YzQwYjVhNTdjNTdjNTY1MjlmMjc4",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2017-05-06T03:49:34Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-24T07:27:50Z"
      },
      "message": "[test] Updated rawtransactions.py to assert for adjusted exception.",
      "tree": {
        "sha": "8e03eceea1f7bb3eb565646dd8721a6067f9c069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e03eceea1f7bb3eb565646dd8721a6067f9c069"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab97ff9331c98c5e367c40b5a57c57c56529f278",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlmef/YACgkQV692LbM1\nMyKgOBAAj9g94sZGMVPF+TyNZE7iQ3JVyRSz6gZtJTT/FUAjipK7ubiLDjSeYlqf\nLZ2GESSiyhoaAin9+O4L/gJB3DBQlzPcBG/NOJFmmBGJqUVviMYU8R9XB6yKVgbH\nsottbo7nePuoa+h+h+dyEJ2QLcU2JoFRpfGy/J25/zLJc42G9vROQbGLXENK4ORN\nB8lrqL8UdYHRfm8fT9AiNRvR1l3/kGs/Zezl2UgHFjYkH6LiGrfmJ5l9Vo8/JlHU\nGTV1HKPppwRzvRqfH6c+KqvV+csUIWFB8ZotjT1UES41AJOdZrMpTxnh43DiVdBT\nl3iL5jr8+Mz3z4mf9Fpmk1CgfLfeJ03ztO9bWp2UxpZv998Xu13uBOQFIf5NqyVV\nfR7kOMFOoS/RzcYGyYuGIdOrv/CCoXcoxET78SzYjQvUZMyTPoLLy5qzpBXUsAHX\nov9whPA2Qt/eyY4rqVB62Vkn+H/yoJgMIxztskxmQiveYUvwle3V3yHAT6vqukRh\n6y1FEmjTxL9bt3Ct3Kgo1ei6WxtYN8R07kJsmfRu5GLqPY4UK5nP7dDCq8/nMQVo\nYCv0ClhN8LdpNdR9FI57H7UL1MlABnnx0MGhW7elX586ivXD++6rzgfbimNP5Ks1\nzanHJJTC77EstIDSeI0t3eT95gNy2j5WdygBQe2kvA6/1SKix7c=\n=9Kic\n-----END PGP SIGNATURE-----",
        "payload": "tree 8e03eceea1f7bb3eb565646dd8721a6067f9c069\nparent 90e140862ac7ac172cf89ed88e8183984affe057\nauthor Karl-Johan Alm <kalle.alm@gmail.com> 1494042574 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1503559670 +0900\n\n[test] Updated rawtransactions.py to assert for adjusted exception.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab97ff9331c98c5e367c40b5a57c57c56529f278",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab97ff9331c98c5e367c40b5a57c57c56529f278",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab97ff9331c98c5e367c40b5a57c57c56529f278/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90e140862ac7ac172cf89ed88e8183984affe057",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90e140862ac7ac172cf89ed88e8183984affe057",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90e140862ac7ac172cf89ed88e8183984affe057"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "dd88e71ec563b4993d149d903e4e6971d8a3d0d5",
        "filename": "test/functional/rawtransactions.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab97ff9331c98c5e367c40b5a57c57c56529f278/test/functional/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab97ff9331c98c5e367c40b5a57c57c56529f278/test/functional/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rawtransactions.py?ref=ab97ff9331c98c5e367c40b5a57c57c56529f278",
        "patch": "@@ -192,13 +192,13 @@ def run_test(self):\n         assert_equal(self.nodes[0].getrawtransaction(txHash, True)[\"hex\"], rawTxSigned['hex'])\n \n         # 6. invalid parameters - supply txid and string \"Flase\"\n-        assert_raises_jsonrpc(-3,\"Invalid type\", self.nodes[0].getrawtransaction, txHash, \"Flase\")\n+        assert_raises_jsonrpc(-1,\"not a boolean\", self.nodes[0].getrawtransaction, txHash, \"Flase\")\n \n         # 7. invalid parameters - supply txid and empty array\n-        assert_raises_jsonrpc(-3,\"Invalid type\", self.nodes[0].getrawtransaction, txHash, [])\n+        assert_raises_jsonrpc(-1,\"not a boolean\", self.nodes[0].getrawtransaction, txHash, [])\n \n         # 8. invalid parameters - supply txid and empty dict\n-        assert_raises_jsonrpc(-3,\"Invalid type\", self.nodes[0].getrawtransaction, txHash, {})\n+        assert_raises_jsonrpc(-1,\"not a boolean\", self.nodes[0].getrawtransaction, txHash, {})\n \n         inputs  = [ {'txid' : \"1d1d4e24ed99057e84c3f80fd8fbec79ed9e1acee37da269356ecea000000000\", 'vout' : 1, 'sequence' : 1000}]\n         outputs = { self.nodes[0].getnewaddress() : 1 }"
      }
    ]
  },
  {
    "sha": "aef4d255081190c01de8f4078560240c2075bb32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZWY0ZDI1NTA4MTE5MGMwMWRlOGY0MDc4NTYwMjQwYzIwNzViYjMy",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-04-25T08:29:24Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-25T01:14:28Z"
      },
      "message": "[rpc] Allow getrawtransaction to take optional blockhash to fetch transaction from a block directly.",
      "tree": {
        "sha": "215511c178d50aea530152acaf2fb16523baa50f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/215511c178d50aea530152acaf2fb16523baa50f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aef4d255081190c01de8f4078560240c2075bb32",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlmfefQACgkQV692LbM1\nMyJUAA//SHlLjP4cmEQ8d41P2Hp4zlrn94oLn+9bPkPtty9XDJOR3JdaO2rsn4Ob\nKKqBPgqRgmIgWaVwzXYlvwLEoNbbZJ/qy3PiORzxGhe60+ZmB/FBuZdJxkhhi+Vd\nlB4ApjopLGDa+y9k9MLW8RpRttKajCf3xvLBQK+u2XcD+Q4C2YrRrISNXZdvWyrU\nvPk0oXjPgtthQjmTgiqwjg/hGeMZHYK+7lW89u9ktnMm6q5ZVBUBNGOoGqEb4Vpb\nVIKIJbtfQ5VH5GBmH4F8GdgBI0oPkbHCdojA3HFZTXUI7eqz5U80fhU46GfPtRBR\n4wClk8RqQ+xYc5fEAfM1Fst0pMfb6DPTo49G0kkpz5EnHmKVO2ic7kTfMFNlLlnw\nQ7fwzS14BBM9gmHpBqNi7Snc7WJo/Nw/khLqwUEEtRXJ3l5wEoTbXBZaKerYTv9o\nMeo+Ns5kJ8GuqAlKJ2rhOruIROGmSOBvrvdmK7X7D5CVcL7U0sxsTjukJUUKQ0Yt\nzCjbD7Twm2N8de3Mk20r2iKVg4Hm7SQA9Bde+fGGgg+lk3lzOC8/sXvskyuZ+YAv\nyLQObGEGFX/OLujbO2I1In9uYIF1B3awsWipWK6UnPcWIhClznY/rgNXqRRynsdj\nDTAxbC/wfEMIPKu59Qi2rWNv3YL/2g62s1G+0y2UeSNbd7v9dPg=\n=sn/u\n-----END PGP SIGNATURE-----",
        "payload": "tree 215511c178d50aea530152acaf2fb16523baa50f\nparent ab97ff9331c98c5e367c40b5a57c57c56529f278\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1493108964 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1503623668 +0900\n\n[rpc] Allow getrawtransaction to take optional blockhash to fetch transaction from a block directly.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aef4d255081190c01de8f4078560240c2075bb32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aef4d255081190c01de8f4078560240c2075bb32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aef4d255081190c01de8f4078560240c2075bb32/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab97ff9331c98c5e367c40b5a57c57c56529f278",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab97ff9331c98c5e367c40b5a57c57c56529f278",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab97ff9331c98c5e367c40b5a57c57c56529f278"
      }
    ],
    "stats": {
      "total": 113,
      "additions": 72,
      "deletions": 41
    },
    "files": [
      {
        "sha": "4a586732ae027787761b4983db5830d74b29db32",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 11,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aef4d255081190c01de8f4078560240c2075bb32/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aef4d255081190c01de8f4078560240c2075bb32/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=aef4d255081190c01de8f4078560240c2075bb32",
        "patch": "@@ -61,12 +61,15 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n \n UniValue getrawtransaction(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"getrawtransaction \\\"txid\\\" ( verbose )\\n\"\n+            \"getrawtransaction \\\"txid\\\" ( verbose \\\"blockhash\\\" )\\n\"\n \n             \"\\nNOTE: By default this function only works for mempool transactions. If the -txindex option is\\n\"\n-            \"enabled, it also works for blockchain transactions.\\n\"\n+            \"enabled, it also works for blockchain transactions. If the block which contains the transaction\\n\"\n+            \"is known, its hash can be provided even for nodes without -txindex. Note that if a blockhash is\\n\"\n+            \"provided, only that block will be searched and if the transaction is in the mempool or other\\n\"\n+            \"blocks, or if this node does not have the given block available, the transaction will not be found.\\n\"\n             \"DEPRECATED: for now, it also works for transactions with unspent outputs.\\n\"\n \n             \"\\nReturn the raw transaction data.\\n\"\n@@ -76,12 +79,14 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n             \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n+            \"3. \\\"blockhash\\\" (string, optional) The block in which to look for the transaction\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n \n             \"\\nResult (if verbose is set to true):\\n\"\n             \"{\\n\"\n+            \"  \\\"in_active_chain\\\": b, (bool) Whether specified block is in the active chain or not (only present with explicit \\\"blockhash\\\" argument)\\n\"\n             \"  \\\"hex\\\" : \\\"data\\\",       (string) The serialized, hex-encoded data for 'txid'\\n\"\n             \"  \\\"txid\\\" : \\\"id\\\",        (string) The transaction id (same as provided)\\n\"\n             \"  \\\"hash\\\" : \\\"id\\\",        (string) The transaction hash (differs from txid for witness transactions)\\n\"\n@@ -129,30 +134,55 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\"\")\n             + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true\")\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", true\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" false \\\"myblockhash\\\"\")\n+            + HelpExampleCli(\"getrawtransaction\", \"\\\"mytxid\\\" true \\\"myblockhash\\\"\")\n         );\n \n     LOCK(cs_main);\n \n+    bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n+    CBlockIndex* blockindex = nullptr;\n \n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {\n         fVerbose = request.params[1].isNum() ? (request.params[1].get_int() != 0) : request.params[1].get_bool();\n     }\n \n+    if (!request.params[2].isNull()) {\n+        uint256 blockhash = ParseHashV(request.params[2], \"parameter 3\");\n+        if (!blockhash.IsNull()) {\n+            BlockMap::iterator it = mapBlockIndex.find(blockhash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block hash not found\");\n+            }\n+            blockindex = it->second;\n+            in_active_chain = (chainActive[blockindex->nHeight] == blockindex);\n+        }\n+    }\n+\n     CTransactionRef tx;\n-    uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(fTxIndex ? \"No such mempool or blockchain transaction\"\n-            : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n-            \". Use gettransaction for wallet transactions.\");\n+    uint256 hash_block;\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hash_block, true, blockindex)) {\n+        std::string errmsg;\n+        if (blockindex) {\n+            errmsg = \"No such transaction found in the provided block\";\n+        } else {\n+            errmsg = fTxIndex\n+              ? \"No such mempool or blockchain transaction\"\n+              : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\";\n+        }\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, errmsg + \". Use gettransaction for wallet transactions.\");\n+    }\n \n-    if (!fVerbose)\n+    if (!fVerbose) {\n         return EncodeHexTx(*tx, RPCSerializationFlags());\n+    }\n \n     UniValue result(UniValue::VOBJ);\n-    TxToJSON(*tx, hashBlock, result);\n+    if (blockindex) result.push_back(Pair(\"in_active_chain\", in_active_chain));\n+    TxToJSON(*tx, hash_block, result);\n     return result;\n }\n \n@@ -949,7 +979,7 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"rawtransactions\",    \"getrawtransaction\",      &getrawtransaction,      true,  {\"txid\",\"verbose\"} },\n+    { \"rawtransactions\",    \"getrawtransaction\",      &getrawtransaction,      true,  {\"txid\",\"verbose\",\"blockhash\"} },\n     { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n     { \"rawtransactions\",    \"decoderawtransaction\",   &decoderawtransaction,   true,  {\"hexstring\"} },\n     { \"rawtransactions\",    \"decodescript\",           &decodescript,           true,  {\"hexstring\"} },"
      },
      {
        "sha": "c07883d9d17a2e9734cf0900fa65a375ce601925",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 29,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aef4d255081190c01de8f4078560240c2075bb32/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aef4d255081190c01de8f4078560240c2075bb32/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=aef4d255081190c01de8f4078560240c2075bb32",
        "patch": "@@ -897,43 +897,44 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256& hash, CTransactionRef& txOut, const Consensus::Params& consensusParams, uint256& hashBlock, bool fAllowSlow, CBlockIndex* blockIndex)\n {\n-    CBlockIndex *pindexSlow = nullptr;\n+    CBlockIndex* pindexSlow = blockIndex;\n \n     LOCK(cs_main);\n \n-    CTransactionRef ptx = mempool.get(hash);\n-    if (ptx)\n-    {\n-        txOut = ptx;\n-        return true;\n-    }\n+    if (!blockIndex) {\n+        CTransactionRef ptx = mempool.get(hash);\n+        if (ptx) {\n+            txOut = ptx;\n+            return true;\n+        }\n \n-    if (fTxIndex) {\n-        CDiskTxPos postx;\n-        if (pblocktree->ReadTxIndex(hash, postx)) {\n-            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-            if (file.IsNull())\n-                return error(\"%s: OpenBlockFile failed\", __func__);\n-            CBlockHeader header;\n-            try {\n-                file >> header;\n-                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                file >> txOut;\n-            } catch (const std::exception& e) {\n-                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+        if (fTxIndex) {\n+            CDiskTxPos postx;\n+            if (pblocktree->ReadTxIndex(hash, postx)) {\n+                CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n+                if (file.IsNull())\n+                    return error(\"%s: OpenBlockFile failed\", __func__);\n+                CBlockHeader header;\n+                try {\n+                    file >> header;\n+                    fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n+                    file >> txOut;\n+                } catch (const std::exception& e) {\n+                    return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+                }\n+                hashBlock = header.GetHash();\n+                if (txOut->GetHash() != hash)\n+                    return error(\"%s: txid mismatch\", __func__);\n+                return true;\n             }\n-            hashBlock = header.GetHash();\n-            if (txOut->GetHash() != hash)\n-                return error(\"%s: txid mismatch\", __func__);\n-            return true;\n         }\n-    }\n \n-    if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n-        const Coin& coin = AccessByTxid(*pcoinsTip, hash);\n-        if (!coin.IsSpent()) pindexSlow = chainActive[coin.nHeight];\n+        if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n+            const Coin& coin = AccessByTxid(*pcoinsTip, hash);\n+            if (!coin.IsSpent()) pindexSlow = chainActive[coin.nHeight];\n+        }\n     }\n \n     if (pindexSlow) {"
      },
      {
        "sha": "b291d9f12d743497ad397627a13df3e79b312a03",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aef4d255081190c01de8f4078560240c2075bb32/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aef4d255081190c01de8f4078560240c2075bb32/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=aef4d255081190c01de8f4078560240c2075bb32",
        "patch": "@@ -270,7 +270,7 @@ void ThreadScriptCheck();\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */\n-bool GetTransaction(const uint256 &hash, CTransactionRef &tx, const Consensus::Params& params, uint256 &hashBlock, bool fAllowSlow = false);\n+bool GetTransaction(const uint256& hash, CTransactionRef& tx, const Consensus::Params& params, uint256& hashBlock, bool fAllowSlow = false, CBlockIndex* blockIndex = nullptr);\n /** Find the best known block, and make it the tip of the block chain */\n bool ActivateBestChain(CValidationState& state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock = std::shared_ptr<const CBlock>());\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);"
      }
    ]
  },
  {
    "sha": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NDAxMjNmYjhjNzE5NmE3ZWUyMDk0OTVmMDJiMmY3YzBkZWFhMGJi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-08T04:24:32Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-25T01:14:29Z"
      },
      "message": "[test] Add tests for getrawtransaction with block hash.",
      "tree": {
        "sha": "0cb65b32c258391b2b59666b9f9dec5d14915d02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0cb65b32c258391b2b59666b9f9dec5d14915d02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlmfefUACgkQV692LbM1\nMyIDYhAAh3h/Ui1TV/jT1JS44BmjDlmUFa6jEVhkytzLEm6iEMNKVNMee/UMMB4x\nuNvap1zt8CEt58BUmI3iGzT0K/RRta5cEu76yB2zDOaVByT50BCe4bAIKPkImdwR\nR1G4L2cbHb4aIg4xxPtucjWTxUfSjTdNLSWmFepcMC4kZDAAxds6DqaSRYG+l8Xt\nF/RrsVGoIE4ykPwH4wXZC5kKvsxtXyVApD8yBrNk+CAXO7Ar7UmtZqQhqDaDPJfh\nilIYVoFYP1OlPg6G+L8i8i/r6JL5wt8+gRBHL6OdSpJ7L+uVWSaN5ijZOOBowdy8\nDgJ7nZqRzZnJkwNTIxz+j4nuuyn81eVKmKNHzHi/sDFPGWUHfAUDPS9gJ8f/4iXS\n08Gf2IzEtDcUkawWVP4LRPAHutxpr+mFQ8b9VfZEP6QVjv6WhOjP0Wr7HKjW2KcL\njzPWB0/wkDPfZxi4QsIaoTr3TMivZdE++Eb9WLuCUQF6T6KhBusaX7rPeyGwiE1K\nsKA7KhZ2FyNGWFmXCYGM+XAL4l5WcTHX9ju3ZjoEMyBgABE6Zoc13ygZ5rfDWrCH\nAvsTOB9qWkAKppfobE7MiGHhYdvFktw+q69ALwm03jeHC3hpG0iBC42mY5ji/ycG\ngtkNSNhcX1GUcMax8o87u3HDltWlhi11nuzUaxAEiM9yk4ZN5GU=\n=CHYS\n-----END PGP SIGNATURE-----",
        "payload": "tree 0cb65b32c258391b2b59666b9f9dec5d14915d02\nparent aef4d255081190c01de8f4078560240c2075bb32\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1494217472 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1503623669 +0900\n\n[test] Add tests for getrawtransaction with block hash.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/440123fb8c7196a7ee209495f02b2f7c0deaa0bb/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aef4d255081190c01de8f4078560240c2075bb32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aef4d255081190c01de8f4078560240c2075bb32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aef4d255081190c01de8f4078560240c2075bb32"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7d47951aaac83362f50866a3c521b1b2a6a8a3d2",
        "filename": "test/functional/rawtransactions.py",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/440123fb8c7196a7ee209495f02b2f7c0deaa0bb/test/functional/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/440123fb8c7196a7ee209495f02b2f7c0deaa0bb/test/functional/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rawtransactions.py?ref=440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
        "patch": "@@ -52,6 +52,20 @@ def run_test(self):\n         # This will raise an exception since there are missing inputs\n         assert_raises_jsonrpc(-25, \"Missing inputs\", self.nodes[2].sendrawtransaction, rawtx['hex'])\n \n+        ############################\n+        # getrawtx with block hash #\n+        ############################\n+\n+        # make a tx by sending then generate 2 blocks; block1 has the tx in it,\n+        # presumably\n+        tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        block1, block2 = self.nodes[2].generate(2)\n+        self.sync_all()\n+        # We should be able to get the raw transaction by providing the correct block\n+        assert_equal(self.nodes[0].getrawtransaction(tx, True, block1)['txid'], tx)\n+        # We should not get the tx if we provide an unrelated block\n+        assert_raises_jsonrpc(-5, \"No such\", self.nodes[0].getrawtransaction, tx, True, block2)\n+\n         #########################\n         # RAW TX MULTISIG TESTS #\n         #########################"
      }
    ]
  },
  {
    "sha": "e42d138273aa5964722a3f8560dfd4c37a4d369a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDJkMTM4MjczYWE1OTY0NzIyYTNmODU2MGRmZDRjMzdhNGQzNjlh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-09-01T14:27:42Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-09-01T14:27:45Z"
      },
      "message": "[trivial] fix getrawtransaction help\n\nAfter per-txout chainstate db, getrawtransaction no longer works for\ntransactions with unspent outputs (unless -txindex is being used)",
      "tree": {
        "sha": "98a9874c5668ff16f8e8fe78db01a8d390f8e4a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98a9874c5668ff16f8e8fe78db01a8d390f8e4a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e42d138273aa5964722a3f8560dfd4c37a4d369a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e42d138273aa5964722a3f8560dfd4c37a4d369a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e42d138273aa5964722a3f8560dfd4c37a4d369a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e42d138273aa5964722a3f8560dfd4c37a4d369a/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/440123fb8c7196a7ee209495f02b2f7c0deaa0bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/440123fb8c7196a7ee209495f02b2f7c0deaa0bb"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "347405102406da8c5114d68ca9241dfa46e0a1b2",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e42d138273aa5964722a3f8560dfd4c37a4d369a/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e42d138273aa5964722a3f8560dfd4c37a4d369a/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=e42d138273aa5964722a3f8560dfd4c37a4d369a",
        "patch": "@@ -70,7 +70,6 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"is known, its hash can be provided even for nodes without -txindex. Note that if a blockhash is\\n\"\n             \"provided, only that block will be searched and if the transaction is in the mempool or other\\n\"\n             \"blocks, or if this node does not have the given block available, the transaction will not be found.\\n\"\n-            \"DEPRECATED: for now, it also works for transactions with unspent outputs.\\n\"\n \n             \"\\nReturn the raw transaction data.\\n\"\n             \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\""
      }
    ]
  }
]