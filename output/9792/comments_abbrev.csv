gmaxwell,2017-02-18T03:14:57Z,"src/addrman.cpp:                nKBucket = (nKBucket + insecure_rand.rand32()) % ADDRMAN_TRIED_BUCKET_COUNT;\nsrc/addrman.cpp:                nKBucketPos = (nKBucketPos + insecure_rand.rand32()) % ADDRMAN_BUCKET_SIZE;\nsrc/addrman.cpp:                nUBucket = (nUBucket + insecure_rand.rand32()) % ADDRMAN_NEW_BUCKET_COUNT;\nsrc/addrman.cpp:                nUBucketPos = (nUBucketPos + insecure_",https://github.com/bitcoin/bitcoin/pull/9792#issuecomment-280817530,280817530,
jonasschnelli,2017-02-19T19:32:00Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/9792#issuecomment-280942180,280942180,
sipa,2017-02-20T06:48:51Z,Added `randrange` and the test vectors @jonasschnelli suggested.,https://github.com/bitcoin/bitcoin/pull/9792#issuecomment-281000914,281000914,
sipa,2017-02-25T20:41:42Z,"Added a wrapper for __builtin_clzl, added unit tests, and fixed a few edge cases.",https://github.com/bitcoin/bitcoin/pull/9792#issuecomment-282510944,282510944,
sipa,2017-03-29T18:31:23Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/9792#issuecomment-290182944,290182944,
TheBlueMatt,2017-04-14T22:22:54Z,"Looks good to me. I didnt re-verify the chacha code is correct, and dont know that the makefile changes are sane.",https://github.com/bitcoin/bitcoin/pull/9792#issuecomment-294247809,294247809,
laanwj,2017-04-24T12:28:42Z,utACK 4fd2d2f,https://github.com/bitcoin/bitcoin/pull/9792#issuecomment-296648106,296648106,
jonasschnelli,2017-02-19T19:31:27Z,Maybe add all test vectors (only 5) from the IEFT draft specs: https://github.com/jonasschnelli/chacha20poly1305/blob/master/tests.c#L35,https://github.com/bitcoin/bitcoin/pull/9792#discussion_r101926475,101926475,src/test/crypto_tests.cpp
TheBlueMatt,2017-02-22T18:22:10Z,Looks like this disabled a bunch of tests?,https://github.com/bitcoin/bitcoin/pull/9792#discussion_r102534620,102534620,src/test/prevector_tests.cpp
TheBlueMatt,2017-02-22T18:35:34Z,Hmm...is it definitely the case that all the compilers we support have this? Can we not have some fallback for those that do not?,https://github.com/bitcoin/bitcoin/pull/9792#discussion_r102537880,102537880,configure.ac
TheBlueMatt,2017-02-22T18:37:56Z,...except you never check requires_seed to do the actual seeding?,https://github.com/bitcoin/bitcoin/pull/9792#discussion_r102538430,102538430,src/random.h
gmaxwell,2017-02-23T18:12:43Z,"CLZ is undefined for 0, a range of 1 is dumb but might be mechanically generated in some case.  At a minimum there should be a comment that range must be greater than 1.",https://github.com/bitcoin/bitcoin/pull/9792#discussion_r102779174,102779174,src/random.h
sipa,2017-02-25T09:57:08Z,I don't know of any compilers that don't. I'd be happy to write a fallback if there is one that isn't.,https://github.com/bitcoin/bitcoin/pull/9792#discussion_r103075862,103075862,configure.ac
sipa,2017-02-25T09:57:21Z,"Oops, nice catch. Fixed.",https://github.com/bitcoin/bitcoin/pull/9792#discussion_r103075866,103075866,src/test/prevector_tests.cpp
sipa,2017-02-25T09:57:38Z,"Fixed, and added a test to catch that.",https://github.com/bitcoin/bitcoin/pull/9792#discussion_r103075873,103075873,src/random.h
laanwj,2017-02-25T10:13:59Z,I think MSVC doesn't.,https://github.com/bitcoin/bitcoin/pull/9792#discussion_r103076145,103076145,configure.ac
sipa,2017-02-25T20:42:08Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/9792#discussion_r103088001,103088001,src/random.h
gmaxwell,2017-02-28T21:44:41Z,"This needs a comment that points out that range returned will be [0..range) and that range _must not_ be zero.\n",https://github.com/bitcoin/bitcoin/pull/9792#discussion_r103558913,103558913,src/random.h
sipa,2017-03-29T18:31:17Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/9792#discussion_r108752590,108752590,src/random.h
