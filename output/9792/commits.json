[
  {
    "sha": "c21cbe61c6249bcfca098705df6f9b4baab9f296",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjFjYmU2MWM2MjQ5YmNmY2EwOTg3MDVkZjZmOWI0YmFhYjlmMjk2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-02-18T00:32:16Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-03-29T07:40:17Z"
      },
      "message": "Introduce FastRandomContext::randbool()",
      "tree": {
        "sha": "ddc52711d82709261d7fdfb541dee9a5f7e76079",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddc52711d82709261d7fdfb541dee9a5f7e76079"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c21cbe61c6249bcfca098705df6f9b4baab9f296",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c21cbe61c6249bcfca098705df6f9b4baab9f296",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c21cbe61c6249bcfca098705df6f9b4baab9f296",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c21cbe61c6249bcfca098705df6f9b4baab9f296/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bd0e9b90a39c5c6a016b83882ae44cb4d28f1f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bd0e9b90a39c5c6a016b83882ae44cb4d28f1f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bd0e9b90a39c5c6a016b83882ae44cb4d28f1f8"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "82886bec59b7db625133eb0a5aa40757d2c5073b",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c21cbe61c6249bcfca098705df6f9b4baab9f296/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c21cbe61c6249bcfca098705df6f9b4baab9f296/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=c21cbe61c6249bcfca098705df6f9b4baab9f296",
        "patch": "@@ -42,6 +42,10 @@ class FastRandomContext {\n         return (Rw << 16) + Rz;\n     }\n \n+    bool randbool() {\n+        return rand32() & 1;\n+    }\n+\n     uint32_t Rz;\n     uint32_t Rw;\n };"
      },
      {
        "sha": "2f9d47aa0f5481c2d432f2cb7d2a00fe593711a1",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c21cbe61c6249bcfca098705df6f9b4baab9f296/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c21cbe61c6249bcfca098705df6f9b4baab9f296/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c21cbe61c6249bcfca098705df6f9b4baab9f296",
        "patch": "@@ -2048,7 +2048,7 @@ static void ApproximateBestSubset(const std::vector<std::pair<CAmount, std::pair\n                 //that the rng is fast. We do not use a constant random sequence,\n                 //because there may be some privacy improvement by making\n                 //the selection random.\n-                if (nPass == 0 ? insecure_rand.rand32()&1 : !vfIncluded[i])\n+                if (nPass == 0 ? insecure_rand.randbool() : !vfIncluded[i])\n                 {\n                     nTotal += vValue[i].first;\n                     vfIncluded[i] = true;"
      }
    ]
  },
  {
    "sha": "663fbae7776b0c238f6f27d73811b4bc627d0b6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjNmYmFlNzc3NmIwYzIzOGY2ZjI3ZDczODExYjRiYzYyN2QwYjZi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-02-16T01:56:54Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-03-29T07:40:17Z"
      },
      "message": "FastRandom benchmark",
      "tree": {
        "sha": "4b7739bed2762f879f73c51adf3421255b24443e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b7739bed2762f879f73c51adf3421255b24443e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/663fbae7776b0c238f6f27d73811b4bc627d0b6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/663fbae7776b0c238f6f27d73811b4bc627d0b6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/663fbae7776b0c238f6f27d73811b4bc627d0b6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/663fbae7776b0c238f6f27d73811b4bc627d0b6b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c21cbe61c6249bcfca098705df6f9b4baab9f296",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c21cbe61c6249bcfca098705df6f9b4baab9f296",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c21cbe61c6249bcfca098705df6f9b4baab9f296"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5257e60e810db86673ba7b26c6b36ff9e9cde897",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/663fbae7776b0c238f6f27d73811b4bc627d0b6b/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/663fbae7776b0c238f6f27d73811b4bc627d0b6b/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=663fbae7776b0c238f6f27d73811b4bc627d0b6b",
        "patch": "@@ -7,6 +7,7 @@\n #include \"bench.h\"\n #include \"bloom.h\"\n #include \"hash.h\"\n+#include \"random.h\"\n #include \"uint256.h\"\n #include \"utiltime.h\"\n #include \"crypto/ripemd160.h\"\n@@ -69,10 +70,34 @@ static void SipHash_32b(benchmark::State& state)\n     }\n }\n \n+static void FastRandom_32bit(benchmark::State& state)\n+{\n+    FastRandomContext rng(true);\n+    uint32_t x;\n+    while (state.KeepRunning()) {\n+        for (int i = 0; i < 1000000; i++) {\n+            x += rng.rand32();\n+        }\n+    }\n+}\n+\n+static void FastRandom_1bit(benchmark::State& state)\n+{\n+    FastRandomContext rng(true);\n+    uint32_t x;\n+    while (state.KeepRunning()) {\n+        for (int i = 0; i < 1000000; i++) {\n+            x += rng.randbool();\n+        }\n+    }\n+}\n+\n BENCHMARK(RIPEMD160);\n BENCHMARK(SHA1);\n BENCHMARK(SHA256);\n BENCHMARK(SHA512);\n \n BENCHMARK(SHA256_32b);\n BENCHMARK(SipHash_32b);\n+BENCHMARK(FastRandom_32bit);\n+BENCHMARK(FastRandom_1bit);"
      }
    ]
  },
  {
    "sha": "e04326fe6652543dc26d90eba4a48fbdc935fd0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDQzMjZmZTY2NTI1NDNkYzI2ZDkwZWJhNGE0OGZiZGM5MzVmZDBj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-02-15T20:29:23Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-03-29T07:40:17Z"
      },
      "message": "Add ChaCha20",
      "tree": {
        "sha": "f918238064983b16c946d21f204a0be3888a54b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f918238064983b16c946d21f204a0be3888a54b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e04326fe6652543dc26d90eba4a48fbdc935fd0c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04326fe6652543dc26d90eba4a48fbdc935fd0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e04326fe6652543dc26d90eba4a48fbdc935fd0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04326fe6652543dc26d90eba4a48fbdc935fd0c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "663fbae7776b0c238f6f27d73811b4bc627d0b6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/663fbae7776b0c238f6f27d73811b4bc627d0b6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/663fbae7776b0c238f6f27d73811b4bc627d0b6b"
      }
    ],
    "stats": {
      "total": 253,
      "additions": 253,
      "deletions": 0
    },
    "files": [
      {
        "sha": "89dd4c8f7706be37e7822771117dbee0a5c0d1c7",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04326fe6652543dc26d90eba4a48fbdc935fd0c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04326fe6652543dc26d90eba4a48fbdc935fd0c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e04326fe6652543dc26d90eba4a48fbdc935fd0c",
        "patch": "@@ -242,6 +242,8 @@ crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/aes.cpp \\\n   crypto/aes.h \\\n+  crypto/chacha20.h \\\n+  crypto/chacha20.cpp \\\n   crypto/common.h \\\n   crypto/hmac_sha256.cpp \\\n   crypto/hmac_sha256.h \\"
      },
      {
        "sha": "816ae870e138aa54621b2cebd62052b36bf55c2f",
        "filename": "src/crypto/chacha20.cpp",
        "status": "added",
        "additions": 180,
        "deletions": 0,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04326fe6652543dc26d90eba4a48fbdc935fd0c/src/crypto/chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04326fe6652543dc26d90eba4a48fbdc935fd0c/src/crypto/chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.cpp?ref=e04326fe6652543dc26d90eba4a48fbdc935fd0c",
        "patch": "@@ -0,0 +1,180 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// Based on the public domain implementation 'merged' by D. J. Bernstein\n+// See https://cr.yp.to/chacha.html.\n+\n+#include \"crypto/common.h\"\n+#include \"crypto/chacha20.h\"\n+\n+#include <string.h>\n+\n+constexpr static inline uint32_t rotl32(uint32_t v, int c) { return (v << c) | (v >> (32 - c)); }\n+\n+#define QUARTERROUND(a,b,c,d) \\\n+  a += b; d = rotl32(d ^ a, 16); \\\n+  c += d; b = rotl32(b ^ c, 12); \\\n+  a += b; d = rotl32(d ^ a, 8); \\\n+  c += d; b = rotl32(b ^ c, 7);\n+\n+static const unsigned char sigma[] = \"expand 32-byte k\";\n+static const unsigned char tau[] = \"expand 16-byte k\";\n+\n+void ChaCha20::SetKey(const unsigned char* k, size_t keylen)\n+{\n+    const unsigned char *constants;\n+\n+    input[4] = ReadLE32(k + 0);\n+    input[5] = ReadLE32(k + 4);\n+    input[6] = ReadLE32(k + 8);\n+    input[7] = ReadLE32(k + 12);\n+    if (keylen == 32) { /* recommended */\n+        k += 16;\n+        constants = sigma;\n+    } else { /* keylen == 16 */\n+        constants = tau;\n+    }\n+    input[8] = ReadLE32(k + 0);\n+    input[9] = ReadLE32(k + 4);\n+    input[10] = ReadLE32(k + 8);\n+    input[11] = ReadLE32(k + 12);\n+    input[0] = ReadLE32(constants + 0);\n+    input[1] = ReadLE32(constants + 4);\n+    input[2] = ReadLE32(constants + 8);\n+    input[3] = ReadLE32(constants + 12);\n+    input[12] = 0;\n+    input[13] = 0;\n+    input[14] = 0;\n+    input[15] = 0;\n+}\n+\n+ChaCha20::ChaCha20()\n+{\n+    memset(input, 0, sizeof(input));\n+}\n+\n+ChaCha20::ChaCha20(const unsigned char* k, size_t keylen)\n+{\n+    SetKey(k, keylen);\n+}\n+\n+void ChaCha20::SetIV(uint64_t iv)\n+{\n+    input[14] = iv;\n+    input[15] = iv >> 32;\n+}\n+\n+void ChaCha20::Seek(uint64_t pos)\n+{\n+    input[12] = pos;\n+    input[13] = pos >> 32;\n+}\n+\n+void ChaCha20::Output(unsigned char* c, size_t bytes)\n+{\n+    uint32_t x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;\n+    uint32_t j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;\n+    unsigned char *ctarget = NULL;\n+    unsigned char tmp[64];\n+    unsigned int i;\n+\n+    if (!bytes) return;\n+\n+    j0 = input[0];\n+    j1 = input[1];\n+    j2 = input[2];\n+    j3 = input[3];\n+    j4 = input[4];\n+    j5 = input[5];\n+    j6 = input[6];\n+    j7 = input[7];\n+    j8 = input[8];\n+    j9 = input[9];\n+    j10 = input[10];\n+    j11 = input[11];\n+    j12 = input[12];\n+    j13 = input[13];\n+    j14 = input[14];\n+    j15 = input[15];\n+\n+    for (;;) {\n+        if (bytes < 64) {\n+            ctarget = c;\n+            c = tmp;\n+        }\n+        x0 = j0;\n+        x1 = j1;\n+        x2 = j2;\n+        x3 = j3;\n+        x4 = j4;\n+        x5 = j5;\n+        x6 = j6;\n+        x7 = j7;\n+        x8 = j8;\n+        x9 = j9;\n+        x10 = j10;\n+        x11 = j11;\n+        x12 = j12;\n+        x13 = j13;\n+        x14 = j14;\n+        x15 = j15;\n+        for (i = 20;i > 0;i -= 2) {\n+            QUARTERROUND( x0, x4, x8,x12)\n+            QUARTERROUND( x1, x5, x9,x13)\n+            QUARTERROUND( x2, x6,x10,x14)\n+            QUARTERROUND( x3, x7,x11,x15)\n+            QUARTERROUND( x0, x5,x10,x15)\n+            QUARTERROUND( x1, x6,x11,x12)\n+            QUARTERROUND( x2, x7, x8,x13)\n+            QUARTERROUND( x3, x4, x9,x14)\n+        }\n+        x0 += j0;\n+        x1 += j1;\n+        x2 += j2;\n+        x3 += j3;\n+        x4 += j4;\n+        x5 += j5;\n+        x6 += j6;\n+        x7 += j7;\n+        x8 += j8;\n+        x9 += j9;\n+        x10 += j10;\n+        x11 += j11;\n+        x12 += j12;\n+        x13 += j13;\n+        x14 += j14;\n+        x15 += j15;\n+\n+        ++j12;\n+        if (!j12) ++j13;\n+\n+        WriteLE32(c + 0, x0);\n+        WriteLE32(c + 4, x1);\n+        WriteLE32(c + 8, x2);\n+        WriteLE32(c + 12, x3);\n+        WriteLE32(c + 16, x4);\n+        WriteLE32(c + 20, x5);\n+        WriteLE32(c + 24, x6);\n+        WriteLE32(c + 28, x7);\n+        WriteLE32(c + 32, x8);\n+        WriteLE32(c + 36, x9);\n+        WriteLE32(c + 40, x10);\n+        WriteLE32(c + 44, x11);\n+        WriteLE32(c + 48, x12);\n+        WriteLE32(c + 52, x13);\n+        WriteLE32(c + 56, x14);\n+        WriteLE32(c + 60, x15);\n+\n+        if (bytes <= 64) {\n+            if (bytes < 64) {\n+                for (i = 0;i < bytes;++i) ctarget[i] = c[i];\n+            }\n+            input[12] = j12;\n+            input[13] = j13;\n+            return;\n+        }\n+        bytes -= 64;\n+        c += 64;\n+    }\n+}"
      },
      {
        "sha": "a305977bcd5f4027cbb83b27a16622bab6f0c4c3",
        "filename": "src/crypto/chacha20.h",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04326fe6652543dc26d90eba4a48fbdc935fd0c/src/crypto/chacha20.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04326fe6652543dc26d90eba4a48fbdc935fd0c/src/crypto/chacha20.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.h?ref=e04326fe6652543dc26d90eba4a48fbdc935fd0c",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CRYPTO_CHACHA20_H\n+#define BITCOIN_CRYPTO_CHACHA20_H\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+/** A PRNG class for ChaCha20. */\n+class ChaCha20\n+{\n+private:\n+    uint32_t input[16];\n+\n+public:\n+    ChaCha20();\n+    ChaCha20(const unsigned char* key, size_t keylen);\n+    void SetKey(const unsigned char* key, size_t keylen);\n+    void SetIV(uint64_t iv);\n+    void Seek(uint64_t pos);\n+    void Output(unsigned char* output, size_t bytes);\n+};\n+\n+#endif // BITCOIN_CRYPTO_CHACHA20_H"
      },
      {
        "sha": "a20182afb83f8494c3d46b930b24c6737ee48885",
        "filename": "src/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04326fe6652543dc26d90eba4a48fbdc935fd0c/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04326fe6652543dc26d90eba4a48fbdc935fd0c/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=e04326fe6652543dc26d90eba4a48fbdc935fd0c",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"crypto/aes.h\"\n+#include \"crypto/chacha20.h\"\n #include \"crypto/ripemd160.h\"\n #include \"crypto/sha1.h\"\n #include \"crypto/sha256.h\"\n@@ -187,6 +188,19 @@ void TestAES256CBC(const std::string &hexkey, const std::string &hexiv, bool pad\n     }\n }\n \n+void TestChaCha20(const std::string &hexkey, uint64_t nonce, uint64_t seek, const std::string& hexout)\n+{\n+    std::vector<unsigned char> key = ParseHex(hexkey);\n+    ChaCha20 rng(key.data(), key.size());\n+    rng.SetIV(nonce);\n+    rng.Seek(seek);\n+    std::vector<unsigned char> out = ParseHex(hexout);\n+    std::vector<unsigned char> outres;\n+    outres.resize(out.size());\n+    rng.Output(outres.data(), outres.size());\n+    BOOST_CHECK(out == outres);\n+}\n+\n std::string LongTestString(void) {\n     std::string ret;\n     for (int i=0; i<200000; i++) {\n@@ -439,4 +453,35 @@ BOOST_AUTO_TEST_CASE(aes_cbc_testvectors) {\n                   \"b2eb05e2c39be9fcda6c19078c6a9d1b3f461796d6b0d6b2e0c2a72b4d80e644\");\n }\n \n+\n+BOOST_AUTO_TEST_CASE(chacha20_testvector)\n+{\n+    // Test vector from RFC 7539\n+    TestChaCha20(\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x4a000000UL, 1,\n+                 \"224f51f3401bd9e12fde276fb8631ded8c131f823d2c06e27e4fcaec9ef3cf788a3b0aa372600a92b57974cded2b9334794cb\"\n+                 \"a40c63e34cdea212c4cf07d41b769a6749f3f630f4122cafe28ec4dc47e26d4346d70b98c73f3e9c53ac40c5945398b6eda1a\"\n+                 \"832c89c167eacd901d7e2bf363\");\n+\n+    // Test vectors from https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04#section-7\n+    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 0, 0,\n+                 \"76b8e0ada0f13d90405d6ae55386bd28bdd219b8a08ded1aa836efcc8b770dc7da41597c5157488d7724e03fb8d84a376a43b\"\n+                 \"8f41518a11cc387b669b2ee6586\");\n+    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000001\", 0, 0,\n+                 \"4540f05a9f1fb296d7736e7b208e3c96eb4fe1834688d2604f450952ed432d41bbe2a0b6ea7566d2a5d1e7e20d42af2c53d79\"\n+                 \"2b1c43fea817e9ad275ae546963\");\n+    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 0x0100000000000000ULL, 0,\n+                 \"de9cba7bf3d69ef5e786dc63973f653a0b49e015adbff7134fcb7df137821031e85a050278a7084527214f73efc7fa5b52770\"\n+                 \"62eb7a0433e445f41e3\");\n+    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 1, 0,\n+                 \"ef3fdfd6c61578fbf5cf35bd3dd33b8009631634d21e42ac33960bd138e50d32111e4caf237ee53ca8ad6426194a88545ddc4\"\n+                 \"97a0b466e7d6bbdb0041b2f586b\");\n+    TestChaCha20(\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x0706050403020100ULL, 0,\n+                 \"f798a189f195e66982105ffb640bb7757f579da31602fc93ec01ac56f85ac3c134a4547b733b46413042c9440049176905d3b\"\n+                 \"e59ea1c53f15916155c2be8241a38008b9a26bc35941e2444177c8ade6689de95264986d95889fb60e84629c9bd9a5acb1cc1\"\n+                 \"18be563eb9b3a4a472f82e09a7e778492b562ef7130e88dfe031c79db9d4f7c7a899151b9a475032b63fc385245fe054e3dd5\"\n+                 \"a97a5f576fe064025d3ce042c566ab2c507b138db853e3d6959660996546cc9c4a6eafdc777c040d70eaf46f76dad3979e5c5\"\n+                 \"360c3317166a1c894c94a371876a94df7628fe4eaaf2ccb27d5aaae0ad7ad0f9d4b6ad3b54098746d4524d38407a6deb3ab78\"\n+                 \"fab78c9\");\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "16329224e70d0525208f6b0ba00c5e1531a4f5ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNjMyOTIyNGU3MGQwNTI1MjA4ZjZiMGJhMDBjNWUxNTMxYTRmNWVh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-02-16T01:45:22Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-03-29T18:26:08Z"
      },
      "message": "Switch FastRandomContext to ChaCha20",
      "tree": {
        "sha": "8decd575cf1023486f2383e125c90085ebabd17a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8decd575cf1023486f2383e125c90085ebabd17a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16329224e70d0525208f6b0ba00c5e1531a4f5ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16329224e70d0525208f6b0ba00c5e1531a4f5ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16329224e70d0525208f6b0ba00c5e1531a4f5ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16329224e70d0525208f6b0ba00c5e1531a4f5ea/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e04326fe6652543dc26d90eba4a48fbdc935fd0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04326fe6652543dc26d90eba4a48fbdc935fd0c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e04326fe6652543dc26d90eba4a48fbdc935fd0c"
      }
    ],
    "stats": {
      "total": 169,
      "additions": 126,
      "deletions": 43
    },
    "files": [
      {
        "sha": "194fc0c2499c827403f1f25110a249f6c0dab34d",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -57,8 +57,8 @@ BITCOIN_TESTS =\\\n   test/policyestimator_tests.cpp \\\n   test/pow_tests.cpp \\\n   test/prevector_tests.cpp \\\n-  test/random_tests.cpp \\\n   test/raii_event_tests.cpp \\\n+  test/random_tests.cpp \\\n   test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\"
      },
      {
        "sha": "33a623c1f2c5350aa95639698aa453ea6096c16f",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -351,8 +351,8 @@ CAddrInfo CAddrMan::Select_(bool newOnly)\n             int nKBucket = RandomInt(ADDRMAN_TRIED_BUCKET_COUNT);\n             int nKBucketPos = RandomInt(ADDRMAN_BUCKET_SIZE);\n             while (vvTried[nKBucket][nKBucketPos] == -1) {\n-                nKBucket = (nKBucket + insecure_rand.rand32()) % ADDRMAN_TRIED_BUCKET_COUNT;\n-                nKBucketPos = (nKBucketPos + insecure_rand.rand32()) % ADDRMAN_BUCKET_SIZE;\n+                nKBucket = (nKBucket + insecure_rand.randbits(ADDRMAN_TRIED_BUCKET_COUNT_LOG2)) % ADDRMAN_TRIED_BUCKET_COUNT;\n+                nKBucketPos = (nKBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n             }\n             int nId = vvTried[nKBucket][nKBucketPos];\n             assert(mapInfo.count(nId) == 1);\n@@ -368,8 +368,8 @@ CAddrInfo CAddrMan::Select_(bool newOnly)\n             int nUBucket = RandomInt(ADDRMAN_NEW_BUCKET_COUNT);\n             int nUBucketPos = RandomInt(ADDRMAN_BUCKET_SIZE);\n             while (vvNew[nUBucket][nUBucketPos] == -1) {\n-                nUBucket = (nUBucket + insecure_rand.rand32()) % ADDRMAN_NEW_BUCKET_COUNT;\n-                nUBucketPos = (nUBucketPos + insecure_rand.rand32()) % ADDRMAN_BUCKET_SIZE;\n+                nUBucket = (nUBucket + insecure_rand.randbits(ADDRMAN_NEW_BUCKET_COUNT_LOG2)) % ADDRMAN_NEW_BUCKET_COUNT;\n+                nUBucketPos = (nUBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n             }\n             int nId = vvNew[nUBucket][nUBucketPos];\n             assert(mapInfo.count(nId) == 1);"
      },
      {
        "sha": "bb45ac91ea4058cb99a577a228579d197c818d92",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -136,13 +136,13 @@ class CAddrInfo : public CAddress\n  */\n \n //! total number of buckets for tried addresses\n-#define ADDRMAN_TRIED_BUCKET_COUNT 256\n+#define ADDRMAN_TRIED_BUCKET_COUNT_LOG2 8\n \n //! total number of buckets for new addresses\n-#define ADDRMAN_NEW_BUCKET_COUNT 1024\n+#define ADDRMAN_NEW_BUCKET_COUNT_LOG2 10\n \n //! maximum allowed number of entries in buckets for new and tried addresses\n-#define ADDRMAN_BUCKET_SIZE 64\n+#define ADDRMAN_BUCKET_SIZE_LOG2 6\n \n //! over how many buckets entries with tried addresses from a single group (/16 for IPv4) are spread\n #define ADDRMAN_TRIED_BUCKETS_PER_GROUP 8\n@@ -171,6 +171,11 @@ class CAddrInfo : public CAddress\n //! the maximum number of nodes to return in a getaddr call\n #define ADDRMAN_GETADDR_MAX 2500\n \n+//! Convenience\n+#define ADDRMAN_TRIED_BUCKET_COUNT (1 << ADDRMAN_TRIED_BUCKET_COUNT_LOG2)\n+#define ADDRMAN_NEW_BUCKET_COUNT (1 << ADDRMAN_NEW_BUCKET_COUNT_LOG2)\n+#define ADDRMAN_BUCKET_SIZE (1 << ADDRMAN_BUCKET_SIZE_LOG2)\n+\n /** \n  * Stochastical (IP) address manager \n  */"
      },
      {
        "sha": "c1e313cbde89777e8e571b5aadd091202604a861",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 15,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -240,22 +240,16 @@ uint256 GetRandHash()\n     return hash;\n }\n \n-FastRandomContext::FastRandomContext(bool fDeterministic)\n+void FastRandomContext::RandomSeed()\n {\n-    // The seed values have some unlikely fixed points which we avoid.\n-    if (fDeterministic) {\n-        Rz = Rw = 11;\n-    } else {\n-        uint32_t tmp;\n-        do {\n-            GetRandBytes((unsigned char*)&tmp, 4);\n-        } while (tmp == 0 || tmp == 0x9068ffffU);\n-        Rz = tmp;\n-        do {\n-            GetRandBytes((unsigned char*)&tmp, 4);\n-        } while (tmp == 0 || tmp == 0x464fffffU);\n-        Rw = tmp;\n-    }\n+    uint256 seed = GetRandHash();\n+    rng.SetKey(seed.begin(), 32);\n+    requires_seed = false;\n+}\n+\n+FastRandomContext::FastRandomContext(const uint256& seed) : requires_seed(false), bytebuf_size(0), bitbuf_size(0)\n+{\n+    rng.SetKey(seed.begin(), 32);\n }\n \n bool Random_SanityCheck()\n@@ -288,3 +282,12 @@ bool Random_SanityCheck()\n     } while (num_overwritten < NUM_OS_RANDOM_BYTES && tries < MAX_TRIES);\n     return (num_overwritten == NUM_OS_RANDOM_BYTES); /* If this failed, bailed out after too many tries */\n }\n+\n+FastRandomContext::FastRandomContext(bool fDeterministic) : requires_seed(!fDeterministic), bytebuf_size(0), bitbuf_size(0)\n+{\n+    if (!fDeterministic) {\n+        return;\n+    }\n+    uint256 seed;\n+    rng.SetKey(seed.begin(), 32);\n+}"
      },
      {
        "sha": "077f58c4d970786cd60f55271b1d16f68fdbac43",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 57,
        "deletions": 9,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_RANDOM_H\n #define BITCOIN_RANDOM_H\n \n+#include \"crypto/chacha20.h\"\n #include \"uint256.h\"\n \n #include <stdint.h>\n@@ -33,21 +34,68 @@ void GetStrongRandBytes(unsigned char* buf, int num);\n  * This class is not thread-safe.\n  */\n class FastRandomContext {\n+private:\n+    bool requires_seed;\n+    ChaCha20 rng;\n+\n+    unsigned char bytebuf[64];\n+    int bytebuf_size;\n+\n+    uint64_t bitbuf;\n+    int bitbuf_size;\n+\n+    void RandomSeed();\n+\n+    void FillByteBuffer()\n+    {\n+        if (requires_seed) {\n+            RandomSeed();\n+        }\n+        rng.Output(bytebuf, sizeof(bytebuf));\n+        bytebuf_size = sizeof(bytebuf);\n+    }\n+\n+    void FillBitBuffer()\n+    {\n+        bitbuf = rand64();\n+        bitbuf_size = 64;\n+    }\n+\n public:\n-    explicit FastRandomContext(bool fDeterministic=false);\n+    explicit FastRandomContext(bool fDeterministic = false);\n \n-    uint32_t rand32() {\n-        Rz = 36969 * (Rz & 65535) + (Rz >> 16);\n-        Rw = 18000 * (Rw & 65535) + (Rw >> 16);\n-        return (Rw << 16) + Rz;\n+    /** Initialize with explicit seed (only for testing) */\n+    explicit FastRandomContext(const uint256& seed);\n+\n+    /** Generate a random 64-bit integer. */\n+    uint64_t rand64()\n+    {\n+        if (bytebuf_size < 8) FillByteBuffer();\n+        uint64_t ret = ReadLE64(bytebuf + 64 - bytebuf_size);\n+        bytebuf_size -= 8;\n+        return ret;\n     }\n \n-    bool randbool() {\n-        return rand32() & 1;\n+    /** Generate a random (bits)-bit integer. */\n+    uint64_t randbits(int bits) {\n+        if (bits == 0) {\n+            return 0;\n+        } else if (bits > 32) {\n+            return rand64() >> (64 - bits);\n+        } else {\n+            if (bitbuf_size < bits) FillBitBuffer();\n+            uint64_t ret = bitbuf & (~(uint64_t)0 >> (64 - bits));\n+            bitbuf >>= bits;\n+            bitbuf_size -= bits;\n+            return ret;\n+        }\n     }\n \n-    uint32_t Rz;\n-    uint32_t Rw;\n+    /** Generate a random 32-bit integer. */\n+    uint32_t rand32() { return randbits(32); }\n+\n+    /** Generate a random boolean. */\n+    bool randbool() { return randbits(1); }\n };\n \n /* Number of random bytes returned by GetOSRand."
      },
      {
        "sha": "39fa381dd0f57274c3b8554e256de0acd7891e4e",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -203,10 +203,11 @@ BOOST_AUTO_TEST_CASE(addrman_select)\n     BOOST_CHECK(addrman.size() == 7);\n \n     // Test 12: Select pulls from new and tried regardless of port number.\n-    BOOST_CHECK(addrman.Select().ToString() == \"250.4.6.6:8333\");\n-    BOOST_CHECK(addrman.Select().ToString() == \"250.3.2.2:9999\");\n-    BOOST_CHECK(addrman.Select().ToString() == \"250.3.3.3:9999\");\n-    BOOST_CHECK(addrman.Select().ToString() == \"250.4.4.4:8333\");\n+    std::set<uint16_t> ports;\n+    for (int i = 0; i < 20; ++i) {\n+        ports.insert(addrman.Select().GetPort());\n+    }\n+    BOOST_CHECK_EQUAL(ports.size(), 3);\n }\n \n BOOST_AUTO_TEST_CASE(addrman_new_collisions)"
      },
      {
        "sha": "cfed5e347edfd14baad673835406448c52ca3f06",
        "filename": "src/test/prevector_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/prevector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/prevector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/prevector_tests.cpp?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -28,6 +28,7 @@ class prevector_tester {\n     typedef typename pretype::size_type Size;\n     bool passed = true;\n     FastRandomContext rand_cache;\n+    uint256 rand_seed;\n \n \n     template <typename A, typename B>\n@@ -183,13 +184,12 @@ class prevector_tester {\n     }\n \n     ~prevector_tester() {\n-        BOOST_CHECK_MESSAGE(passed, \"insecure_rand_Rz: \"\n-                << rand_cache.Rz\n-                << \", insecure_rand_Rw: \"\n-                << rand_cache.Rw);\n+        BOOST_CHECK_MESSAGE(passed, \"insecure_rand: \" + rand_seed.ToString());\n     }\n+\n     prevector_tester() {\n         seed_insecure_rand();\n+        rand_seed = insecure_rand_seed;\n         rand_cache = insecure_rand_ctx;\n     }\n };"
      },
      {
        "sha": "31b993cd382d416863701cd3b9f39ddb1b56f822",
        "filename": "src/test/random_tests.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 1,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/random_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/random_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/random_tests.cpp?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -15,5 +15,24 @@ BOOST_AUTO_TEST_CASE(osrandom_tests)\n     BOOST_CHECK(Random_SanityCheck());\n }\n \n-BOOST_AUTO_TEST_SUITE_END()\n+BOOST_AUTO_TEST_CASE(fastrandom_tests)\n+{\n+    // Check that deterministic FastRandomContexts are deterministic\n+    FastRandomContext ctx1(true);\n+    FastRandomContext ctx2(true);\n+\n+    BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n+    BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n+    BOOST_CHECK_EQUAL(ctx1.rand64(), ctx2.rand64());\n+    BOOST_CHECK_EQUAL(ctx1.randbits(3), ctx2.randbits(3));\n+    BOOST_CHECK_EQUAL(ctx1.randbits(7), ctx2.randbits(7));\n+    BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n+    BOOST_CHECK_EQUAL(ctx1.randbits(3), ctx2.randbits(3));\n \n+    // Check that a nondeterministic ones are not\n+    FastRandomContext ctx3;\n+    FastRandomContext ctx4;\n+    BOOST_CHECK(ctx3.rand64() != ctx4.rand64()); // extremely unlikely to be equal\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "48593f62d5fb6b863299629b79e6c9ce90f5ea87",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -27,7 +27,8 @@\n #include <boost/filesystem.hpp>\n #include <boost/thread.hpp>\n \n-FastRandomContext insecure_rand_ctx(true);\n+uint256 insecure_rand_seed = GetRandHash();\n+FastRandomContext insecure_rand_ctx(insecure_rand_seed);\n \n extern bool fPrintToConsole;\n extern void noui_connect();"
      },
      {
        "sha": "318c44df4dc8048f5df3a30716a8d109c26c69e0",
        "filename": "src/test/test_random.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/test_random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16329224e70d0525208f6b0ba00c5e1531a4f5ea/src/test/test_random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_random.h?ref=16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "patch": "@@ -8,11 +8,17 @@\n \n #include \"random.h\"\n \n+extern uint256 insecure_rand_seed;\n extern FastRandomContext insecure_rand_ctx;\n \n static inline void seed_insecure_rand(bool fDeterministic = false)\n {\n-    insecure_rand_ctx = FastRandomContext(fDeterministic);\n+    if (fDeterministic) {\n+        insecure_rand_seed = uint256();\n+    } else {\n+        insecure_rand_seed = GetRandHash();\n+    }\n+    insecure_rand_ctx = FastRandomContext(insecure_rand_seed);\n }\n \n static inline uint32_t insecure_rand(void)"
      }
    ]
  },
  {
    "sha": "4fd2d2fc97e21efceab849576e544160fd5e3e3d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmQyZDJmYzk3ZTIxZWZjZWFiODQ5NTc2ZTU0NDE2MGZkNWUzZTNk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-02-25T20:16:58Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-03-29T18:26:08Z"
      },
      "message": "Add a FastRandomContext::randrange and use it",
      "tree": {
        "sha": "4d36745b0b5a72bf51b2e54bfd13151920a2c57b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d36745b0b5a72bf51b2e54bfd13151920a2c57b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fd2d2fc97e21efceab849576e544160fd5e3e3d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fd2d2fc97e21efceab849576e544160fd5e3e3d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4fd2d2fc97e21efceab849576e544160fd5e3e3d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fd2d2fc97e21efceab849576e544160fd5e3e3d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16329224e70d0525208f6b0ba00c5e1531a4f5ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16329224e70d0525208f6b0ba00c5e1531a4f5ea"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 75,
      "deletions": 2
    },
    "files": [
      {
        "sha": "42b8448cfe49be5ea6b48ba2a3e5ae14834e2f50",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fd2d2fc97e21efceab849576e544160fd5e3e3d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fd2d2fc97e21efceab849576e544160fd5e3e3d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=4fd2d2fc97e21efceab849576e544160fd5e3e3d",
        "patch": "@@ -550,6 +550,8 @@ AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n                  #include <byteswap.h>\n                  #endif])\n \n+AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n+\n dnl Check for MSG_NOSIGNAL\n AC_MSG_CHECKING(for MSG_NOSIGNAL)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],"
      },
      {
        "sha": "88a2a570f93d2a83aae94700ea7b854426f54c9e",
        "filename": "src/bench/checkqueue.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/bench/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/bench/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkqueue.cpp?ref=4fd2d2fc97e21efceab849576e544160fd5e3e3d",
        "patch": "@@ -68,7 +68,7 @@ static void CCheckQueueSpeedPrevectorJob(benchmark::State& state)\n         PrevectorJob(){\n         }\n         PrevectorJob(FastRandomContext& insecure_rand){\n-            p.resize(insecure_rand.rand32() % (PREVECTOR_SIZE*2));\n+            p.resize(insecure_rand.randrange(PREVECTOR_SIZE*2));\n         }\n         bool operator()()\n         {"
      },
      {
        "sha": "bcca3d30ea7d686b4244049a3d63f28f50ca8d7c",
        "filename": "src/crypto/common.h",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/crypto/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/crypto/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/common.h?ref=4fd2d2fc97e21efceab849576e544160fd5e3e3d",
        "patch": "@@ -79,4 +79,25 @@ void static inline WriteBE64(unsigned char* ptr, uint64_t x)\n     memcpy(ptr, (char*)&v, 8);\n }\n \n+/** Return the smallest number n such that (x >> n) == 0 (or 64 if the highest bit in x is set. */\n+uint64_t static inline CountBits(uint64_t x)\n+{\n+#ifdef HAVE_DECL___BUILTIN_CLZL\n+    if (sizeof(unsigned long) >= sizeof(uint64_t)) {\n+        return x ? 8 * sizeof(unsigned long) - __builtin_clzl(x) : 0;\n+    }\n+#endif\n+#ifdef HAVE_DECL___BUILTIN_CLZLL\n+    if (sizeof(unsigned long long) >= sizeof(uint64_t)) {\n+        return x ? 8 * sizeof(unsigned long long) - __builtin_clzll(x) : 0;\n+    }\n+#endif\n+    int ret = 0;\n+    while (x) {\n+        x >>= 1;\n+        ++ret;\n+    }\n+    return ret;\n+}\n+\n #endif // BITCOIN_CRYPTO_COMMON_H"
      },
      {
        "sha": "c5360f9b586e3177953b531a7fc7727571b016ec",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=4fd2d2fc97e21efceab849576e544160fd5e3e3d",
        "patch": "@@ -760,7 +760,7 @@ class CNode\n         // after addresses were pushed.\n         if (_addr.IsValid() && !addrKnown.contains(_addr.GetKey())) {\n             if (vAddrToSend.size() >= MAX_ADDR_TO_SEND) {\n-                vAddrToSend[insecure_rand.rand32() % vAddrToSend.size()] = _addr;\n+                vAddrToSend[insecure_rand.randrange(vAddrToSend.size())] = _addr;\n             } else {\n                 vAddrToSend.push_back(_addr);\n             }"
      },
      {
        "sha": "9551e1c4613150fb0fe02a7e23eabb06bd626ea5",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=4fd2d2fc97e21efceab849576e544160fd5e3e3d",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_RANDOM_H\n \n #include \"crypto/chacha20.h\"\n+#include \"crypto/common.h\"\n #include \"uint256.h\"\n \n #include <stdint.h>\n@@ -91,6 +92,17 @@ class FastRandomContext {\n         }\n     }\n \n+    /** Generate a random integer in the range [0..range). */\n+    uint64_t randrange(uint64_t range)\n+    {\n+        --range;\n+        int bits = CountBits(range);\n+        while (true) {\n+            uint64_t ret = randbits(bits);\n+            if (ret <= range) return ret;\n+        }\n+    }\n+\n     /** Generate a random 32-bit integer. */\n     uint32_t rand32() { return randbits(32); }\n "
      },
      {
        "sha": "72e562808afebd5986686ad4f08b5693736c4bf7",
        "filename": "src/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=4fd2d2fc97e21efceab849576e544160fd5e3e3d",
        "patch": "@@ -10,6 +10,7 @@\n #include \"crypto/sha512.h\"\n #include \"crypto/hmac_sha256.h\"\n #include \"crypto/hmac_sha512.h\"\n+#include \"random.h\"\n #include \"utilstrencodings.h\"\n #include \"test/test_bitcoin.h\"\n #include \"test/test_random.h\"\n@@ -484,4 +485,26 @@ BOOST_AUTO_TEST_CASE(chacha20_testvector)\n                  \"fab78c9\");\n }\n \n+BOOST_AUTO_TEST_CASE(countbits_tests)\n+{\n+    FastRandomContext ctx;\n+    for (int i = 0; i <= 64; ++i) {\n+        if (i == 0) {\n+            // Check handling of zero.\n+            BOOST_CHECK_EQUAL(CountBits(0), 0);\n+        } else if (i < 10) {\n+            for (uint64_t j = 1 << (i - 1); (j >> i) == 0; ++j) {\n+                // Exhaustively test up to 10 bits\n+                BOOST_CHECK_EQUAL(CountBits(j), i);\n+            }\n+        } else {\n+            for (int k = 0; k < 1000; k++) {\n+                // Randomly test 1000 samples of each length above 10 bits.\n+                uint64_t j = ((uint64_t)1) << (i - 1) | ctx.randbits(i - 1);\n+                BOOST_CHECK_EQUAL(CountBits(j), i);\n+            }\n+        }\n+    }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "85967342263a433d6ab411de16ae455840aac7eb",
        "filename": "src/test/random_tests.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/test/random_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fd2d2fc97e21efceab849576e544160fd5e3e3d/src/test/random_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/random_tests.cpp?ref=4fd2d2fc97e21efceab849576e544160fd5e3e3d",
        "patch": "@@ -35,4 +35,19 @@ BOOST_AUTO_TEST_CASE(fastrandom_tests)\n     BOOST_CHECK(ctx3.rand64() != ctx4.rand64()); // extremely unlikely to be equal\n }\n \n+BOOST_AUTO_TEST_CASE(fastrandom_randbits)\n+{\n+    FastRandomContext ctx1;\n+    FastRandomContext ctx2;\n+    for (int bits = 0; bits < 63; ++bits) {\n+        for (int j = 0; j < 1000; ++j) {\n+            uint64_t rangebits = ctx1.randbits(bits);\n+            BOOST_CHECK_EQUAL(rangebits >> bits, 0);\n+            uint64_t range = ((uint64_t)1) << bits | rangebits;\n+            uint64_t rand = ctx2.randrange(range);\n+            BOOST_CHECK(rand < range);\n+        }\n+    }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]