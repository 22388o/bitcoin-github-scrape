[
  {
    "sha": "fa1433ac1be8481f08c1a0a311a6b87d8a874c6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE0MzNhYzFiZTg0ODFmMDhjMWEwYTMxMWE2Yjg3ZDhhODc0YzZh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-29T22:05:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-29T22:17:18Z"
      },
      "message": "rpc: Remove special case for unknown service flags",
      "tree": {
        "sha": "4f2b275c5103d54f1baf37a5530472be99a24832",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f2b275c5103d54f1baf37a5530472be99a24832"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1433ac1be8481f08c1a0a311a6b87d8a874c6a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi4ZwwApnSExHZaOladChAWIhz9dm+hmA5//eTy/e2gXYxMqlSfZAdmKnUTKaCt\nQQtsTijrv/YiUT2I87/b3SF6hIcrcJwhhDjK3SjZRbcZrGs5pUwr6HpdWb/l1JUl\n37HdtfZa7MJkyFdhUPB7fUHIBKPQPX22witOQmK5F2RdCYsknczXDvjaOzfhW56V\ntZLnz3M0Nwdx3clJrgBNJIUTwa1JaTb8s8tfvaQDP4xBq2q6v9GqA/jvAvEPMrEx\nWFBWurEGeUj3+MjliuyMOt5NbARHB9DEib5ZUIbE8KEqGz6dhiNm8MODDz4GM54b\nA5KsyDYfzNBCEkppujsqwaj5OrNCv6fq1Zp28vdd2hmCUkSdyvjF6+zbE4RyahYF\n2O+S1Ug7WYa9wpbMSOtK7L2FWzEZhpBUjGjOAAzzOB7utk7/EbQz0M7dJetTdpsL\nOejckDms2EhcfrMG65Cod5fa85PZZooAWrz1x3ixKnuQbp+g1u6qDuLJzXACZaN/\nB0GGlCo8\n=cpbz\n-----END PGP SIGNATURE-----",
        "payload": "tree 4f2b275c5103d54f1baf37a5530472be99a24832\nparent cb88de3e3d37842199a17ba3d36838fc69fbe573\nauthor MarcoFalke <falke.marco@gmail.com> 1590789940 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590790638 -0400\n\nrpc: Remove special case for unknown service flags\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1433ac1be8481f08c1a0a311a6b87d8a874c6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1433ac1be8481f08c1a0a311a6b87d8a874c6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1433ac1be8481f08c1a0a311a6b87d8a874c6a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb88de3e3d37842199a17ba3d36838fc69fbe573",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb88de3e3d37842199a17ba3d36838fc69fbe573",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb88de3e3d37842199a17ba3d36838fc69fbe573"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 11,
      "deletions": 6
    },
    "files": [
      {
        "sha": "5cddfaf052adc1a8b0f7185612bb41b3f53e3370",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1433ac1be8481f08c1a0a311a6b87d8a874c6a/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1433ac1be8481f08c1a0a311a6b87d8a874c6a/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=fa1433ac1be8481f08c1a0a311a6b87d8a874c6a",
        "patch": "@@ -5,8 +5,8 @@\n \n #include <protocol.h>\n \n-#include <util/system.h>\n #include <util/strencodings.h>\n+#include <util/system.h>\n \n #ifndef WIN32\n # include <arpa/inet.h>\n@@ -216,11 +216,7 @@ static std::string serviceFlagToStr(size_t bit)\n     std::ostringstream stream;\n     stream.imbue(std::locale::classic());\n     stream << \"UNKNOWN[\";\n-    if (bit < 8) {\n-        stream << service_flag;\n-    } else {\n-        stream << \"2^\" << bit;\n-    }\n+    stream << \"2^\" << bit;\n     stream << \"]\";\n     return stream.str();\n }"
      },
      {
        "sha": "58d8c4abe1b329b178034ecceeffbc5e8fa3a4e6",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1433ac1be8481f08c1a0a311a6b87d8a874c6a/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1433ac1be8481f08c1a0a311a6b87d8a874c6a/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=fa1433ac1be8481f08c1a0a311a6b87d8a874c6a",
        "patch": "@@ -28,6 +28,7 @@\n     NODE_WITNESS,\n )\n \n+\n def assert_net_servicesnames(servicesflag, servicenames):\n     \"\"\"Utility that checks if all flags are correctly decoded in\n     `getpeerinfo` and `getnetworkinfo`.\n@@ -40,6 +41,7 @@ def assert_net_servicesnames(servicesflag, servicenames):\n         servicesflag_generated |= getattr(test_framework.messages, 'NODE_' + servicename)\n     assert servicesflag_generated == servicesflag\n \n+\n class NetTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n@@ -57,6 +59,7 @@ def run_test(self):\n         self._test_getnetworkinfo()\n         self._test_getaddednodeinfo()\n         self._test_getpeerinfo()\n+        self.test_service_flags()\n         self._test_getnodeaddresses()\n \n     def _test_connection_count(self):\n@@ -139,6 +142,11 @@ def _test_getpeerinfo(self):\n         for info in peer_info:\n             assert_net_servicesnames(int(info[0][\"services\"], 0x10), info[0][\"servicesnames\"])\n \n+    def test_service_flags(self):\n+        self.nodes[0].add_p2p_connection(P2PInterface(), services=(1 << 4) | (1 << 63))\n+        assert_equal(['UNKNOWN[2^4]', 'UNKNOWN[2^63]'], self.nodes[0].getpeerinfo()[-1]['servicesnames'])\n+        self.nodes[0].disconnect_p2ps()\n+\n     def _test_getnodeaddresses(self):\n         self.nodes[0].add_p2p_connection(P2PInterface())\n \n@@ -174,5 +182,6 @@ def _test_getnodeaddresses(self):\n         node_addresses = self.nodes[0].getnodeaddresses(LARGE_REQUEST_COUNT)\n         assert_greater_than(LARGE_REQUEST_COUNT, len(node_addresses))\n \n+\n if __name__ == '__main__':\n     NetTest().main()"
      }
    ]
  }
]