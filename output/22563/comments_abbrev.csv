vasild,2021-07-27 14:51:43,"This is somewhat hackish, but a very small change, in case it is desired for 22.0.\n\nThe underlying problem is that `CNetAddr::GetGroup()` and the places where it is called are build around the assumption that it is easier to obtain addresses with common prefix (e.g. belonging to one IP subnet). However this assumption is not true for Tor, I2P and CJDNS addresses.\n\nFor example, we would avo",https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-887579571,887579571,
mzumsande,2021-07-27 15:31:21,"> The underlying problem is that CNetAddr::GetGroup() and the places where it is called are build around the assumption that it is easier to obtain addresses with common prefix (e.g. belonging to one IP subnet). \n\nDoesn't `CNetAddr::GetGroup()` in `netaddress.cpp` already have special casing for Tor/I2P/CJDNS  (`nBits = 4` , resulting in `num_bytes == 0` ) that would make this unnecessary (bec",https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-887612757,887612757,
vasild,2021-07-27 15:41:49,"I don't think so - currently `CNetAddr::GetGroup()` treats `aabcd.onion` and `aaxyz.onion` the same, but not the same as every other Tor address. The way I read it, `CNetAddr::GetGroup()` will return a vector of 2 bytes for a Tor address: the first byte will be `0x03` (`NET_ONION`), set here:\n\nhttps://github.com/bitcoin/bitcoin/blob/979f410e69a0350da8bf67f329f760d4dd3a4f44/src/netaddress.cpp#L",https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-887621152,887621152,
mzumsande,2021-07-27 16:02:40,"You are right, I missed the spot where the second byte is set.",https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-887637141,887637141,
vasild,2021-07-27 16:15:17,"Your eyes, on their own, decided to skip the line that contains `] | ((1 << (8 - nBits)) - 1));` (mine did) :exploding_head: :rofl: ",https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-887647228,887647228,
mzumsande,2021-07-27 20:23:05,"Yes, I wonder why :grinning:\n\nAnother question (still not sure I have completely understood the bucketing...): \nWouldn't this mean that addresses advertised to us by peers with a Tor address would always map to the same bucket/position, regardless of the source? And, as a result:\n1) if we only have Tor peers, we would only ever reach a multiplicity of one in the New tables, so that the `nR",https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-887809469,887809469,
vasild,2021-07-28 09:10:22,"The relevant code is [here](https://github.com/bitcoin/bitcoin/blob/be175cef24a0b4613d79d05156358841bf2bad98/src/addrman.cpp#L18-L43).\n\n_(talking about the ""new"" buckets)_\n\nCorrect. This PR makes all Tor sources be treated as a single source, so the same address received from different Tor sources will end up in the same bucket/position. Overall, all addresses received by Tor sources will ",https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-888147067,888147067,
jonatack,2021-07-28 16:35:00,"Concept ACK, will look more deeply.",https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-888453270,888453270,
DrahtBot,2021-09-07 22:44:03,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/22563#issuecomment-914674109,914674109,
