[
  {
    "sha": "0cc7dd74e0af735dddf7e786f4ed136c382a4ad5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowY2M3ZGQ3NGUwYWY3MzVkZGRmN2U3ODZmNGVkMTM2YzM4MmE0YWQ1",
    "commit": {
      "author": {
        "name": "soroosh-sdi",
        "email": "soroosh.sardari@gmail.com",
        "date": "2019-09-21T18:03:17Z"
      },
      "committer": {
        "name": "soroosh-sdi",
        "email": "soroosh.sardari@gmail.com",
        "date": "2019-09-27T12:36:34Z"
      },
      "message": "test: add unittests for CheckProofOfWork\n\nfollowing situations are covered:\n- negative target\n- overflow target\n- target easier then powLimit\n- invalid hash (hash > target)\n- zero target\n\nSigned-off-by: soroosh-sdi <soroosh.sardari@gmail.com>",
      "tree": {
        "sha": "86f81c8756d132fd0bc9d59d40a2e23e1bbb1817",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86f81c8756d132fd0bc9d59d40a2e23e1bbb1817"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0cc7dd74e0af735dddf7e786f4ed136c382a4ad5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cc7dd74e0af735dddf7e786f4ed136c382a4ad5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0cc7dd74e0af735dddf7e786f4ed136c382a4ad5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cc7dd74e0af735dddf7e786f4ed136c382a4ad5/comments",
    "author": {
      "login": "soroosh-sdi",
      "id": 4056691,
      "node_id": "MDQ6VXNlcjQwNTY2OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4056691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soroosh-sdi",
      "html_url": "https://github.com/soroosh-sdi",
      "followers_url": "https://api.github.com/users/soroosh-sdi/followers",
      "following_url": "https://api.github.com/users/soroosh-sdi/following{/other_user}",
      "gists_url": "https://api.github.com/users/soroosh-sdi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soroosh-sdi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soroosh-sdi/subscriptions",
      "organizations_url": "https://api.github.com/users/soroosh-sdi/orgs",
      "repos_url": "https://api.github.com/users/soroosh-sdi/repos",
      "events_url": "https://api.github.com/users/soroosh-sdi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soroosh-sdi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "soroosh-sdi",
      "id": 4056691,
      "node_id": "MDQ6VXNlcjQwNTY2OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4056691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soroosh-sdi",
      "html_url": "https://github.com/soroosh-sdi",
      "followers_url": "https://api.github.com/users/soroosh-sdi/followers",
      "following_url": "https://api.github.com/users/soroosh-sdi/following{/other_user}",
      "gists_url": "https://api.github.com/users/soroosh-sdi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soroosh-sdi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soroosh-sdi/subscriptions",
      "organizations_url": "https://api.github.com/users/soroosh-sdi/orgs",
      "repos_url": "https://api.github.com/users/soroosh-sdi/repos",
      "events_url": "https://api.github.com/users/soroosh-sdi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soroosh-sdi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a40ccbb195e87eb005eb266241efc71918e423fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a40ccbb195e87eb005eb266241efc71918e423fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a40ccbb195e87eb005eb266241efc71918e423fe"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 54,
      "deletions": 0
    },
    "files": [
      {
        "sha": "deac3498676b07eb8c4d14ba4c3b8691ab4aca4a",
        "filename": "src/test/pow_tests.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cc7dd74e0af735dddf7e786f4ed136c382a4ad5/src/test/pow_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cc7dd74e0af735dddf7e786f4ed136c382a4ad5/src/test/pow_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pow_tests.cpp?ref=0cc7dd74e0af735dddf7e786f4ed136c382a4ad5",
        "patch": "@@ -60,6 +60,60 @@ BOOST_AUTO_TEST_CASE(get_next_work_upper_limit_actual)\n     BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, chainParams->GetConsensus()), 0x1d00e1fdU);\n }\n \n+BOOST_AUTO_TEST_CASE(CheckProofOfWork_test_negative_target)\n+{\n+    const auto consensus = CreateChainParams(CBaseChainParams::MAIN)->GetConsensus();\n+    uint256 hash;\n+    unsigned int nBits;\n+    nBits = UintToArith256(consensus.powLimit).GetCompact(true);\n+    hash.SetHex(\"0x1\");\n+    BOOST_CHECK(!CheckProofOfWork(hash, nBits, consensus));\n+}\n+\n+BOOST_AUTO_TEST_CASE(CheckProofOfWork_test_overflow_target)\n+{\n+    const auto consensus = CreateChainParams(CBaseChainParams::MAIN)->GetConsensus();\n+    uint256 hash;\n+    unsigned int nBits = ~0x00800000;\n+    hash.SetHex(\"0x1\");\n+    BOOST_CHECK(!CheckProofOfWork(hash, nBits, consensus));\n+}\n+\n+BOOST_AUTO_TEST_CASE(CheckProofOfWork_test_too_easy_target)\n+{\n+    const auto consensus = CreateChainParams(CBaseChainParams::MAIN)->GetConsensus();\n+    uint256 hash;\n+    unsigned int nBits;\n+    arith_uint256 nBits_arith = UintToArith256(consensus.powLimit);\n+    nBits_arith *= 2;\n+    nBits = nBits_arith.GetCompact();\n+    hash.SetHex(\"0x1\");\n+    BOOST_CHECK(!CheckProofOfWork(hash, nBits, consensus));\n+}\n+\n+BOOST_AUTO_TEST_CASE(CheckProofOfWork_test_biger_hash_than_target)\n+{\n+    const auto consensus = CreateChainParams(CBaseChainParams::MAIN)->GetConsensus();\n+    uint256 hash;\n+    unsigned int nBits;\n+    arith_uint256 hash_arith = UintToArith256(consensus.powLimit);\n+    nBits = hash_arith.GetCompact();\n+    hash_arith *= 2; // hash > nBits\n+    hash = ArithToUint256(hash_arith);\n+    BOOST_CHECK(!CheckProofOfWork(hash, nBits, consensus));\n+}\n+\n+BOOST_AUTO_TEST_CASE(CheckProofOfWork_test_zero_target)\n+{\n+    const auto consensus = CreateChainParams(CBaseChainParams::MAIN)->GetConsensus();\n+    uint256 hash;\n+    unsigned int nBits;\n+    arith_uint256 hash_arith{0};\n+    nBits = hash_arith.GetCompact();\n+    hash = ArithToUint256(hash_arith);\n+    BOOST_CHECK(!CheckProofOfWork(hash, nBits, consensus));\n+}\n+\n BOOST_AUTO_TEST_CASE(GetBlockProofEquivalentTime_test)\n {\n     const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);"
      }
    ]
  }
]