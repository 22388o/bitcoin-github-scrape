LeandroRocha84,2018-07-16T17:27:59Z,There's also the possibility of emitting the shutdown signal from RPCExecutor destructor so we don't need a wrapper - that simplify the solution. I created the PR with the wrapper solution because it might be considered unsafe to emit signals from a destructor in a multi-threaded application. Would appreciate any input on this and I'll update the PR accordingly.,https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-405323678,405323678,
LeandroRocha84,2018-07-17T04:08:07Z,"Thanks for the suggestion @promag \nI've updated the PR to remove the unnecessary complexity. Aside from your suggested code, I've made a small change to bitcoingui.cpp so that the UI clientModel is not cleared until the RPCExecutor thread joins. Otherwise, network events, like a new connection, that trigger a UI update would raise exceptions.\n",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-405453406,405453406,
LeandroRocha84,2018-09-01T05:45:35Z,"Hi all, please let me know if there's anything that needs to be done to have this fix merged.\nThanks",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-417835170,417835170,
DrahtBot,2018-10-24T00:08:43Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15894](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15894.html) (Remove duplicated ""Error: "" prefix in logs ",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-432465354,432465354,
hebasto,2018-12-05T08:25:59Z,"tACK 18850903f803bba58d110d3994df18969992f383 (on Linux)\nWould you squash commits?",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-444399710,444399710,
LeandroRocha84,2018-12-06T07:06:01Z,All comments addressed. Commits squashed. Please let me know if there's anything.,https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-444770111,444770111,
hebasto,2018-12-06T19:22:18Z,"re-tACK abff36969da9998e36c72f2df7faf68564f0c8db (Linux, macOS 10.13.6)",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-444996683,444996683,
jonasschnelli,2019-04-16T07:54:11Z,"@LeandroRocha84 sorry for keeping this up so long...\ncan you rebase once and then we try to get this merged?",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-483552051,483552051,
LeandroRocha84,2019-04-17T06:18:39Z,"Thanks @jonasschnelli I'm working on solving the conflicts after the rebase.\nThe order change in fd6d499 breaks the solution in this PR as it makes the QEventLoop.exec returns right away. I've confirmed that the bug this PR intends to solve is still reproducible; the shutdown screen is frozen/blocked when we have a long running RPC command.\nI'm going to spend some time this weekend to find out",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-483952353,483952353,
LeandroRocha84,2019-04-20T06:18:36Z,"Conflicts resolved, rebase completed. I've tested the fix on linux.\n@jonasschnelli please let me know if there's anything else I can do to get this pull request completed.\nThank you.",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-485062401,485062401,
DrahtBot,2019-06-25T11:56:27Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-505412029,505412029,
DrahtBot,2019-09-30T13:02:32Z,"<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",https://github.com/bitcoin/bitcoin/pull/13674#issuecomment-536550543,536550543,
promag,2018-07-16T20:44:13Z,Remove commented code?,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r202818240,202818240,src/qt/rpcconsole.cpp
promag,2018-07-17T14:58:11Z,"Sorry, could use new connect syntax?\n```cpp\nconnect(&thread, &QThread::finished, &loop, &QEventLoop::quit)",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r203056751,203056751,src/qt/rpcconsole.cpp
LeandroRocha84,2018-07-18T18:49:01Z,"Sure thing. That's done.\nAnd rebased.",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r203490214,203490214,src/qt/rpcconsole.cpp
promag,2018-07-26T17:15:40Z,Rebase to remove this change.,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r205535493,205535493,src/qt/bitcoingui.cpp
promag,2018-07-26T17:15:48Z,Why this change? Should update `this->clientModel` event if `_clientModel` is null.,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r205535537,205535537,src/qt/bitcoingui.cpp
promag,2018-07-26T17:16:03Z,Same as above.,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r205535639,205535639,src/qt/bitcoingui.cpp
LeandroRocha84,2018-07-27T02:52:55Z,"Because now the main thread is not blocked, network events can trigger a GUI update. If the clientModel is set to 0 or null at the time, the application will crash.\nExample: When number of connections change, BitcoinGUI::updateNetworkState() gets invoked and this method assumes that clientModel is valid.\nWith this change  BitcoinGUI clientModel is cleared only after the RPCExecutor thread join",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r205655309,205655309,src/qt/bitcoingui.cpp
LeandroRocha84,2018-07-27T03:00:14Z,Done,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r205656056,205656056,src/qt/bitcoingui.cpp
LeandroRocha84,2018-07-27T03:00:22Z,Done!,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r205656066,205656066,src/qt/bitcoingui.cpp
hebasto,2018-09-22T19:37:33Z,"You're implicitly using `QueuedConnection` here: https://github.com/bitcoin/bitcoin/blob/9255963890f07f93646cc32703da935dcb24d454/src/qt/rpcconsole.cpp#L693\nTherefore,  the `thread.isFinished()` is called immediately after the `stopExecutor()` signal is emitted. If the `thread` is idle the value of `thread.isFinished()` may be unpredictable, IMO.",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r219680542,219680542,src/qt/rpcconsole.cpp
LeandroRocha84,2018-09-30T06:47:57Z,"If I understood your concern correctly, you're afraid that the thread.isFinished() result may be unpredictable and as a result, the QEventLoop may never quit since it is tied to the thread finished() signal.\n\nI don't see a problem considering how the QThread lifecycle works. As per documentation, the order is:\n* Thread quit() or exit() is called\n* As soon as exec completes, isFinished star",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r221449323,221449323,src/qt/rpcconsole.cpp
hebasto,2018-10-21T13:19:38Z,~`if (!thread.isFinished()) loop.exec();` is not atomic so the wrong order (`loop.quit()` then `loop.exec()`) is possible.~ See: https://github.com/bitcoin/bitcoin/pull/13674#discussion_r238215586,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r226862713,226862713,src/qt/rpcconsole.cpp
LeandroRocha84,2018-11-06T07:38:57Z,"As you noticed, we're using `QueuedConnection` implicitly here.\nThe EventLoop will only receive the thread finished event after we call `exec()`. I ran multiple tests locally to confirm that. Even when the thread finishes right away and we insert some long running process before the exec, it still exits successfully.\nThat would only be a problem if we were using Qt::DirectConnection.\n\n@pro",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r231021109,231021109,src/qt/rpcconsole.cpp
hebasto,2018-12-03T10:34:41Z,Agree: forcing event dispatching by means of a local event loop works as expected.,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r238215586,238215586,src/qt/rpcconsole.cpp
hebasto,2018-12-03T10:36:34Z,"```\nthis->clientModel = nullptr;\n```",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r238216215,238216215,src/qt/bitcoingui.cpp
LeandroRocha84,2018-12-05T08:02:51Z,"Done. Changed to nullptr.\nI had it set to 0 before because it is the current behavior in master. `BitcoinApplication::requestShutdown()` in bitcoin.cpp invokes `window->setClientModel(0)`",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r238962093,238962093,src/qt/bitcoingui.cpp
hebasto,2018-12-05T08:22:41Z,"[Developer Notes - Coding Style (General)](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-general):\n>  When writing patches, favor the new style over attempting to mimic the surrounding style, except for move-only commits.",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r238966825,238966825,src/qt/bitcoingui.cpp
promag,2019-04-20T10:40:42Z,"> BitcoinGUI::updateNetworkState() gets invoked and this method assumes that clientModel is valid.\n\nThen those need to be fixed IMO. With your change calling `setClientModel(nullptr)` on the `BitcoinGUI` instance is a noop.",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r277131238,277131238,src/qt/bitcoingui.cpp
promag,2019-04-20T10:42:13Z,Add braces `{`.,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r277131276,277131276,src/qt/rpcconsole.cpp
promag,2019-04-20T10:42:48Z,"Should be\n```cpp\nif (!closeEventRegistered) qApp->quit();\n```\nOr\n```cpp\nif (!closeEventRegistered) {\n    qApp->quit();\n}\n```\n",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r277131286,277131286,src/qt/bitcoingui.cpp
promag,2019-04-20T10:44:39Z,This is used to prevent calling `qApp->quit()` more than once. Is this a real problem - could this be removed?,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r277131319,277131319,src/qt/bitcoingui.h
LeandroRocha84,2019-04-20T15:18:43Z,Done.,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r277137727,277137727,src/qt/bitcoingui.cpp
LeandroRocha84,2019-04-20T15:34:36Z,"That's right. This is needed since the reordering in fd6d499. The second call to ```aApp-quit()``` would make the QEventLoop exit before the RPC executor thread finishes causing the application to crash.\nI've made sure that closing bitcoin QT by typing in 'stop' in the console still works as intended when this line was introduced in 9a2305a",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r277138122,277138122,src/qt/bitcoingui.h
promag,2019-04-24T19:39:41Z,Between `thread.isFinished()` and `loop.exec()` the thread can terminate and then `loop` won't quit.,https://github.com/bitcoin/bitcoin/pull/13674#discussion_r278286301,278286301,src/qt/rpcconsole.cpp
LeandroRocha84,2019-04-25T02:40:35Z,"As we're implicitly using QueuedConnection, the thread finished signal won't be produced until after ```loop.exec()``` is called, that's my understanding based on the docs. Please let me know if you think I'm wrong here - I've tested this a lot, including with varying delays between ```thread.isFinished()``` and ```loop.exec()```\nAnother comment I wrote on this PR in a thread with @hebasto : htt",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r278380529,278380529,src/qt/rpcconsole.cpp
promag,2019-04-25T08:29:24Z,"You are correct, I've verified `QThread::finished` signal is emitted from a different thread which defers the `QEventLoop::quit` execution.\n\nHowever, considering #15313, I'm not sure if nested event loops should be avoided. Sorry for suggesting this approach but #15313 raised some concerns in this regard.\n\nAn alternative is to expose a signal `RPCConsole::finished` to `BitcoinGUI`.",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r278445111,278445111,src/qt/rpcconsole.cpp
LeandroRocha84,2019-05-05T21:11:50Z,"I see the point. That's done, I've exposed the thread finished signal to ````BitcoinGUI````\nCan you please review?\nThanks,",https://github.com/bitcoin/bitcoin/pull/13674#discussion_r281038968,281038968,src/qt/rpcconsole.cpp
