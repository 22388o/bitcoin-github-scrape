LarryRuane,2021-06-27 15:19:31,"This is an alternative to #21603. That PR's motivation also applies to this PR:\n\n> A disk fill attack is an attack where an untrusted party (such as a peer) is able to cheaply make your node log to disk excessively. The excessive logging may fill your disk and thus make your node crash either cleanly (best case: if disk fill rate is relatively slow) or uncleanly (worst case: if disk fill rate ",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-869180173,869180173,
DrahtBot,2021-06-27 16:40:45,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23203](https://github.com/bitcoin/bitcoin/pull/23203) ([POC] build: static musl libc based bitcoind (with LTO) by fanqua",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-869191643,869191643,
dergoegge,2021-06-28 10:11:07,"I think this is an interesting approach and i like the concept of log rotation but this is a bigger behavior change than [#21603](https://github.com/bitcoin/bitcoin/pull/21603) and i am not sure if always dropping (old) logs should be the default behavior. \n \n > An advantage I see with this approach is that it addresses the [concern](https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-8",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-869557601,869557601,
LarryRuane,2021-07-06 02:15:43,"> Continuously dropping logs seems like an aggressive change to me because why drop the logs when there is no attack? I haven't had problems with logfile sizes in normal node operation. (maybe thats just me)\n\nI come from a storage system background, and dropping the oldest logs was standard practice. (This is why there's a `logrotate` facility on Unix and similar systems.) A general principle ",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-874410976,874410976,
LarryRuane,2021-07-06 18:12:54,"Added commit d885f0b3fad93b10cf400c596d57063687d05efb to address @luke-jr's review comments (aside from ""[What if I want to rotate, but never delete](https://github.com/bitcoin/bitcoin/pull/22350#discussion_r660854364)"" because I'm not sure which is the best approach). There are no tests or release notes, because still looking for approach or concept ACK.",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-874977115,874977115,
LarryRuane,2021-07-06 19:31:34,Force-pushed to fix CI failure (missing #include directive),https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-875026591,875026591,
LarryRuane,2021-07-09 02:34:36,"Force-pushed to fix CI failures, also added a functional test.",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-876868239,876868239,
LarryRuane,2021-08-08 21:56:13,"There doesn't seem to be much support for this PR, and at least part of the problem may be that it changes default behavior, and that could surprise some users. So I force-pushed a small change so that by default, there is no functional change (preserve existing behavior). If you want to enable log rotation, add lines like these to your `bitcoin.conf` file:\n```\ndebuglogrotatekeep=10\ndebuglog",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-894860956,894860956,
josibake,2021-08-11 15:18:59,"Concept ACK\n\nI strongly agree with the principle above:\n\n> A general principle is that any demon process that can run for an arbitrary amount of time should not use resources in proportion to how long it's been running. Yes, resource usage can increase quickly early, and after reaching ""steady-state"" can go up and down over time. But the system shouldn't, for example, gradually use more me",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-896917204,896917204,
theStack,2021-08-13 10:12:51,"Strong Concept ACK\n\nI think one of the main reasons why restricting unlimited growth of the log file was never seen as particularly problematic in Bitcoin Core is the fact that running bitcoind with default parameters (that is, w/o pruning) already consumes (potentially) infinite disk space over time. Having a growth rate of > 1 GB per week of the block chain on mainnet, one would hardly be wo",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-898350416,898350416,
LarryRuane,2021-08-13 23:32:42,"Thanks for the concept review, @theStack, I just force-pushed a new version that's a lot better, I think, and implements the suggestions here: https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687405694",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-898768311,898768311,
LarryRuane,2021-08-16 05:23:00,"Force-pushed a small change to ensure that rotated debug log files don't have partial lines. Each line is guaranteed to be a full line beginning with a timestamp. \n\nThis is an improvement over master, because with master (or with this PR without log rotation enabled), if the debug log file is larger than 11 MB when `bitcoind` starts, it will be truncated to exactly 10 MB, and this almost alway",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-899223185,899223185,
laanwj,2021-08-16 14:06:42,"Concept ~0 on this. We always used to be against integrating log rotation because it can be handled by external tools (sure, on some operating systems this is more difficult, but I'm sure there are solutions for WIndows too). We should avoid the case where `bitcoind` becomes a systemd-like project that absorbs any possible functionality of a system. It's a maintainance nightmare.",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-899539876,899539876,
LarryRuane,2021-08-16 16:59:43,"It seems to me bitcoind should manage _its own_ log file appropriately. In contrast, `systemd` supports _other_ components, outside itself. I also want to point out that the OS-specific calls added by this PR:\n\n- `fs::create_directories`\n- `fs::remove`\n- `fs::rename`\n\nare already being used elsewhere; we're not introducing any new dependencies on filesystem calls. So I don't know that ",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-899666761,899666761,
josibake,2021-08-16 17:20:51,"> It seems to me bitcoind should manage _its own_ log file appropriately\n\ni think it's also worth mentioning this isn't _only_ about log management and is (more importantly, imo) a solution to mitigate a disk fill attack\n\n> A disk fill attack is an attack where an untrusted party (such as a peer) is able to cheaply make your node log to disk excessively. The excessive logging may fill your",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-899681244,899681244,
fanquake,2021-08-17 03:07:59,"> are already being used elsewhere; we're not introducing any new dependencies on filesystem calls. So I don't know that maintenance would be more difficult.\n\nThe point is less about what filesystem calls might be used, but the higher level observation that `bitcoind` (and this repository in general) should not be a catch-all for code and functionality that actually has nothing to-do with bitc",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-899958509,899958509,
LarryRuane,2021-09-28 20:33:56,"Thanks, @fanquake and @laanwj! Very good points.\n\n> ... separation of the GUI ...\n\nYou've given me an idea, tell me what you think of this (also @jnewbery and @theStack) as an alternative to this PR:\n\nI just did a proof-of-concept experiment on Linux (I don't know if this would work on Windows):\n```\n$ mknod /tmp/bitcoind-log p # p means named pipe, super-user (root) permissions are",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-929604155,929604155,
DrahtBot,2021-10-15 09:39:56,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/22350#issuecomment-944151542,944151542,
LarryRuane,2021-06-27 15:26:58,"We're ignoring any error from `rename`, not sure that's right.",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r659337909,659337909,src/logging.cpp
LarryRuane,2021-06-27 15:36:20,"If `logrotate` is being used, sending a `SIGHUP` will continue to cause `debug.log` to be reopened (this PR doesn't change that behavior), but if the user wants to continue using that mechanism (`logrotate(8)`), they should disable this PR's log rotation (by setting `-debuglogrotatekeep=0` in the configuration). But if they forget (definitely need release notes on this), I _think_ it will be okay,",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r659339194,659339194,src/logging.cpp
luke-jr,2021-06-29 18:11:25,This should probably error if the user has configured rotation explicitly.,https://github.com/bitcoin/bitcoin/pull/22350#discussion_r660853801,660853801,src/logging.cpp
luke-jr,2021-06-29 18:12:15,"What if I want to rotate, but never delete?",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r660854364,660854364,src/logging.cpp
luke-jr,2021-06-29 18:13:13,"Again, error if the user has configured both",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r660854968,660854968,src/logging.cpp
LarryRuane,2021-07-06 01:50:30,"> What if I want to rotate, but never delete?\n\n`-debuglogrotatekeep=9999999` or is that ugly? Should there be a separate `-debuglogenable` boolean (default true; if set to false, behave as today), and then `-debuglogrotatekeep=0` could mean ""never delete"". Would that be preferable? Or something else? Thanks for the comments!",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r664184552,664184552,src/logging.cpp
narula,2021-07-14 17:18:03,"~To match current behavior, wouldn't you want `DEFAULT_DEBUGLOGMB` to be 10 and `DEFAULT_LOGROTATEKEEP` to be 1?~\n\nNevermind, that isn't current behavior either. Just curious about the constants.",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r669807029,669807029,src/logging.h
LarryRuane,2021-07-14 19:51:10,"Thanks, @narula, that's still a good question. The idea of those defaults is that between 10 MB and 11 MB of log messages would be retained (just after a log rotation, 10 MB because there'd be 10 rotated files at 1 MB each plus an empty `debug.log`; just before log rotation, 10 MB for the same reason plus a 1 MB `debug.log`. This matches the current disk usage if `bitcoind` is restarted often (if ",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r669907219,669907219,src/logging.h
josibake,2021-08-11 17:53:42,"previously when using `-debuglogfile=path`, i could specify any name for the file. now, if anything but `debug.log` is specified for the name, `bitcoind` fails to start without error (confirmed this while testing). \n\nimo, rotation should work regardless of the filename, but at the very least there should be an error if i don't specify `debug.log` with log rotation enabled",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687051595,687051595,doc/release-notes-22350.md
josibake,2021-08-11 18:05:01,"this output isn't showing (not sure why). i ran:\n\n```\n./src/bitcoind -daemon -debuglogrotatekeep=3 -debugloglimit=1 -debuglogfile=/home/josibake/bitcoin/j.log\n```\nand got ""Bitcoin Core Starting,"" but it fails to start without any errors.",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687059559,687059559,src/logging.cpp
josibake,2021-08-11 18:06:48,"i also got a silent failure trying to specify a logsize value < 1. i ran with `-debugloglimit=0.5`, got no errors, but the node failed to start. i also ran with `-debugloglimit=1.5` without issue so i dont think its the decimal",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687060618,687060618,src/logging.cpp
LarryRuane,2021-08-12 05:47:27,"Thanks so much for your comments; these are very useful.\n\n> ... rotation should work regardless of the filename ...\n\nI like your idea. After giving this more thought, perhaps the best approach is to let `-debuglogfile=path` to work as usual, but create a directory with a fixed name like `rotated-logs` (or `rotated-debug-logs`) and put all the _rotated_ log files within that directory. (The",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687405694,687405694,doc/release-notes-22350.md
LarryRuane,2021-08-12 05:47:35,"I think that's because you've started it with `-daemon`. It hasn't initialized the logging yet, so it has nowhere to write the error message. If you start without `-daemon` you should see the error.",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687405743,687405743,src/logging.cpp
LarryRuane,2021-08-12 05:47:40,"That's because it's parsing the argument as an integer, and when it gets to the decimal point, it stops parsing, interpreting the argument as zero. Specifying fractions of a megabyte is probably unnecessary, but maybe it should print a good error message. I'll see what I can do.",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687405780,687405780,src/logging.cpp
josibake,2021-08-12 08:59:57,"regarding many log files creating clutter in the root directory, i agree having a logs folder definitely makes sense. personally, i would prefer a `logs/` folder containing all the logs as this makes it clear to the user there is nothing special about the `debug.log` file vs what's in the logs directory. it also keeps things simple for concatenating and grepping. \n\nsince the debuglogfile custo",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687524387,687524387,doc/release-notes-22350.md
josibake,2021-08-12 09:06:54,"makes sense. i do think its important to throw an error when `-daemon` is used, else the user is likely to assume there node has started fine after seeing ""Bitcoin Core Starting."" for example, if i try to start my node with:\n\n```bash\n./src/bitcoind -datadir=foo -daemon\n```\ni will get:\n```\nError: Specified data directory ""foo"" does not exist.\n```",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687529537,687529537,src/logging.cpp
josibake,2021-08-12 09:12:04,"i went back and confirmed, even with 1.5 it is still rotating in 1mb chunks. might be worth adding something to the option help that debugloglimit is in MB and must be specified as an integer ",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r687533598,687533598,src/logging.cpp
LarryRuane,2021-08-13 23:17:37,"@josibake \n> i do think its important to throw an error when -daemon is used ...\n\nI looked into this more, and it's not trivial to fix. The problem is that bitcoind has already ""daemonized"" itself by the time it gets around to initializing the logging, which is later than when it tries to open the data directory. This problem happens without the current PR:\n```\n$ src/bitcoind -daemon -de",https://github.com/bitcoin/bitcoin/pull/22350#discussion_r688822931,688822931,src/logging.cpp
