[
  {
    "sha": "004685b6e6f7db8930fa95b37659a12dd86b5c64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDQ2ODViNmU2ZjdkYjg5MzBmYTk1YjM3NjU5YTEyZGQ4NmI1YzY0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-01-04T23:03:47Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-25T01:05:26Z"
      },
      "message": "Rename CKey::SetMaster to CKey::SetSeed",
      "tree": {
        "sha": "4fbb6eaf13388c5340a6b37fb25e4b94196f468d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4fbb6eaf13388c5340a6b37fb25e4b94196f468d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/004685b6e6f7db8930fa95b37659a12dd86b5c64",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqSC9YACgkQHrd2uwPH\nki07VA//b6FI0imA5mOOOidTZS/1oVJ2A3DvEaO/a12SL5gA9pbKcZwUPnL8judu\nhqiUAuGtB8nwsWcHRvclHun2OpOZ7XS9kla7zAgrZyw/oCGRAGwTpdaeEqeYH247\n1+1BPWwnfeGSWqDxZv360fFRErDCEVi0nf0fA4kuDL0OSQwnu5YxEtXLQxO5MXSa\n+KDJEVCSCIxveeIvI2wCmeNuxsgEOYx0xOG2hJ+E/XFAazJcKyuF1DMsOqVvIlC7\njwOl6RMv4ukxewmj3azbDs42yiFjW3jPKy5OG1xX997Duy/f/ITAYZtLgXPfLHD4\nv98VsCNec4MKFehKi+am/rNY2A3JomTwZ1Jxej9UAFZBf6YmM7wGWJFuy7ALF9St\n1zs9St39kt9ZSb3BBq0LG7ubugJXk/O0DCInmmIKgPtyvwptw1rRrvW2IX+yCOxd\n0Pfsaf4k2YRC7uyL7GYSLg+U8KMyU08EFcGK0fRPVhh4T5nBOL3q1hzZNnF4q2cC\nzzSSwEShdXAFK46W0x6pk5Ix42HFfTsPAu12B6/D+MpJ7AJHWfKeuhWjQ8OgUk3j\nv4d8PG4E7hhtQboV9BaqnoXoKIlh6jMbNT9W0fgZFYylzF4MgXIGFCKGWgp/JPfb\nhQm9KA++Lg9Gxg29xEFFALtbRx4k2gFXQKT0tJwVtBHFIlJ6vNk=\n=ssXA\n-----END PGP SIGNATURE-----",
        "payload": "tree 4fbb6eaf13388c5340a6b37fb25e4b94196f468d\nparent 07090c5339436f856e79a8036d1c85deeb453803\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1515107027 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519520726 +0800\n\nRename CKey::SetMaster to CKey::SetSeed\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/004685b6e6f7db8930fa95b37659a12dd86b5c64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/004685b6e6f7db8930fa95b37659a12dd86b5c64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/004685b6e6f7db8930fa95b37659a12dd86b5c64/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07090c5339436f856e79a8036d1c85deeb453803",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07090c5339436f856e79a8036d1c85deeb453803",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07090c5339436f856e79a8036d1c85deeb453803"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "97bd7df86dbca0632920a181b005bcd9f54c9a87",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=004685b6e6f7db8930fa95b37659a12dd86b5c64",
        "patch": "@@ -273,7 +273,7 @@ bool CExtKey::Derive(CExtKey &out, unsigned int _nChild) const {\n     return key.Derive(out.key, out.chaincode, _nChild, chaincode);\n }\n \n-void CExtKey::SetMaster(const unsigned char *seed, unsigned int nSeedLen) {\n+void CExtKey::SetSeed(const unsigned char *seed, unsigned int nSeedLen) {\n     static const unsigned char hashkey[] = {'B','i','t','c','o','i','n',' ','s','e','e','d'};\n     std::vector<unsigned char, secure_allocator<unsigned char>> vout(64);\n     CHMAC_SHA512(hashkey, sizeof(hashkey)).Write(seed, nSeedLen).Finalize(vout.data());"
      },
      {
        "sha": "f573a18a4ef480f96cf09e5b6808dee90f83b955",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=004685b6e6f7db8930fa95b37659a12dd86b5c64",
        "patch": "@@ -158,7 +158,7 @@ struct CExtKey {\n     void Decode(const unsigned char code[BIP32_EXTKEY_SIZE]);\n     bool Derive(CExtKey& out, unsigned int nChild) const;\n     CExtPubKey Neuter() const;\n-    void SetMaster(const unsigned char* seed, unsigned int nSeedLen);\n+    void SetSeed(const unsigned char* seed, unsigned int nSeedLen);\n     template <typename Stream>\n     void Serialize(Stream& s) const\n     {"
      },
      {
        "sha": "78baa583f9a7d9a609b888cee024b35e9e5388b3",
        "filename": "src/test/bip32_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=004685b6e6f7db8930fa95b37659a12dd86b5c64",
        "patch": "@@ -91,7 +91,7 @@ void RunTest(const TestVector &test) {\n     std::vector<unsigned char> seed = ParseHex(test.strHexMaster);\n     CExtKey key;\n     CExtPubKey pubkey;\n-    key.SetMaster(seed.data(), seed.size());\n+    key.SetSeed(seed.data(), seed.size());\n     pubkey = key.Neuter();\n     for (const TestDerivation &derive : test.vDerive) {\n         unsigned char data[74];"
      },
      {
        "sha": "6d423c4a77ecc7250c3e643529b074a23407197f",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=004685b6e6f7db8930fa95b37659a12dd86b5c64",
        "patch": "@@ -740,7 +740,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n         CKey key;\n         if (pwallet->GetKey(masterKeyID, key)) {\n             CExtKey masterKey;\n-            masterKey.SetMaster(key.begin(), key.size());\n+            masterKey.SetSeed(key.begin(), key.size());\n \n             CBitcoinExtKey b58extkey;\n             b58extkey.SetKey(masterKey);"
      },
      {
        "sha": "64b12749743aa1fd8407bb1e5d83fdf863a757b0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/004685b6e6f7db8930fa95b37659a12dd86b5c64/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=004685b6e6f7db8930fa95b37659a12dd86b5c64",
        "patch": "@@ -190,7 +190,7 @@ void CWallet::DeriveNewChildKey(CWalletDB &walletdb, CKeyMetadata& metadata, CKe\n     if (!GetKey(hdChain.masterKeyID, key))\n         throw std::runtime_error(std::string(__func__) + \": Master key not found\");\n \n-    masterKey.SetMaster(key.begin(), key.size());\n+    masterKey.SetSeed(key.begin(), key.size());\n \n     // derive m/0'\n     // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)"
      }
    ]
  },
  {
    "sha": "a4a55c241467d2226ebeb9d3d39faef988082280",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGE1NWMyNDE0NjdkMjIyNmViZWI5ZDNkMzlmYWVmOTg4MDgyMjgw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-01-04T23:11:42Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-27T01:54:39Z"
      },
      "message": "Rename CHDChain::masterKeyId to CHDChain::seedKeyID",
      "tree": {
        "sha": "f0a6d64216a05b118d2e69d7385e7165f61b0a4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0a6d64216a05b118d2e69d7385e7165f61b0a4d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4a55c241467d2226ebeb9d3d39faef988082280",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqUumMACgkQHrd2uwPH\nki1a/w//bkgVc4Jl201ort8eT5/tb8Cume8isyD6Uk6qkLeyP0fozeC6ooKRH+rv\nG6kGpELxzhMkndI9t/jI8WyWRdlCpkULZhkwNMQv8bqnQTZuRT70Vbwrtw4Y1kBm\nLCmY+ZsofdB5c6GNSd15B5TlO4RUsd9bWRRfAt3fSk2EKZrqbfh3P/h+JnUersHK\nsxpF7AkVNs1RzPnrhuyHkw2wyX89ze613Ui9xHqYUHB4z8KXUgzg7pSoOpi3OFvv\n9NET7dp2QTuu80mmPNUEndjP5HVQsxBptK8c9tPDTNW9n5SeK1banWyEviCJGN+M\nNWBPItByoIhbZuJ9GWO0aXD+Nocv7xHWd+XbldRP+MsUKsmaV+Ve4DJepCfHZLS8\ngvdi0P4bmNPVT2VKJAVwWKBMXQy6Ouw8aWsbkxaeri0Jtsr9dFRyklXF8As7SMzP\nHUynkZ83tUGaKs+7f23Nkn0EwqhvmIv3ym3LRHhue2yUG03E4r+T2CineAQKqPQQ\n1pyR5h4v38qPYHEwp33aNJydidYuNL0r1MahLQLNNQXBNNTY3gr2bGHpg/wkaUvf\n6vbsbvZ0hRws6tgeWs2YJndQydK8WImtMO3I/0eJkGZV/Bw7fQslV/PR9rWwcEFO\nT0Cjgv4wRIYTbL/If2mSJm3C87esDqBWchzpBBAAdBpVQo34XWA=\n=FbDB\n-----END PGP SIGNATURE-----",
        "payload": "tree f0a6d64216a05b118d2e69d7385e7165f61b0a4d\nparent 004685b6e6f7db8930fa95b37659a12dd86b5c64\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1515107502 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519696479 +0800\n\nRename CHDChain::masterKeyId to CHDChain::seedKeyID\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4a55c241467d2226ebeb9d3d39faef988082280",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4a55c241467d2226ebeb9d3d39faef988082280",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4a55c241467d2226ebeb9d3d39faef988082280/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "004685b6e6f7db8930fa95b37659a12dd86b5c64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/004685b6e6f7db8930fa95b37659a12dd86b5c64",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/004685b6e6f7db8930fa95b37659a12dd86b5c64"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 18,
      "deletions": 18
    },
    "files": [
      {
        "sha": "e909407d1b8a6f4cdeba96545717da1786954898",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4a55c241467d2226ebeb9d3d39faef988082280/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4a55c241467d2226ebeb9d3d39faef988082280/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a4a55c241467d2226ebeb9d3d39faef988082280",
        "patch": "@@ -734,11 +734,11 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     file << \"\\n\";\n \n     // add the base58check encoded extended master if the wallet uses HD\n-    CKeyID masterKeyID = pwallet->GetHDChain().masterKeyID;\n-    if (!masterKeyID.IsNull())\n+    CKeyID seedKeyID = pwallet->GetHDChain().seedKeyID;\n+    if (!seedKeyID.IsNull())\n     {\n         CKey key;\n-        if (pwallet->GetKey(masterKeyID, key)) {\n+        if (pwallet->GetKey(seedKeyID, key)) {\n             CExtKey masterKey;\n             masterKey.SetSeed(key.begin(), key.size());\n \n@@ -758,7 +758,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n             file << strprintf(\"%s %s \", CBitcoinSecret(key).ToString(), strTime);\n             if (GetWalletAddressesForKey(pwallet, keyid, strAddr, strLabel)) {\n                file << strprintf(\"label=%s\", strLabel);\n-            } else if (keyid == masterKeyID) {\n+            } else if (keyid == seedKeyID) {\n                 file << \"hdmaster=1\";\n             } else if (mapKeyPool.count(keyid)) {\n                 file << \"reserve=1\";"
      },
      {
        "sha": "55904acbc523cf22beb37b2e89d37b45cadbb7dd",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4a55c241467d2226ebeb9d3d39faef988082280/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4a55c241467d2226ebeb9d3d39faef988082280/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=a4a55c241467d2226ebeb9d3d39faef988082280",
        "patch": "@@ -2791,16 +2791,16 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n     obj.pushKV(\"txcount\",       (int)pwallet->mapWallet.size());\n     obj.pushKV(\"keypoololdest\", pwallet->GetOldestKeyPoolTime());\n     obj.pushKV(\"keypoolsize\", (int64_t)kpExternalSize);\n-    CKeyID masterKeyID = pwallet->GetHDChain().masterKeyID;\n-    if (!masterKeyID.IsNull() && pwallet->CanSupportFeature(FEATURE_HD_SPLIT)) {\n+    CKeyID masterKeyID = pwallet->GetHDChain().seedKeyID;\n+    if (!seedKeyID.IsNull() && pwallet->CanSupportFeature(FEATURE_HD_SPLIT)) {\n         obj.pushKV(\"keypoolsize_hd_internal\",   (int64_t)(pwallet->GetKeyPoolSize() - kpExternalSize));\n     }\n     if (pwallet->IsCrypted()) {\n         obj.pushKV(\"unlocked_until\", pwallet->nRelockTime);\n     }\n     obj.pushKV(\"paytxfee\",      ValueFromAmount(payTxFee.GetFeePerK()));\n-    if (!masterKeyID.IsNull())\n-         obj.pushKV(\"hdmasterkeyid\", masterKeyID.GetHex());\n+    if (!seedKeyID.IsNull())\n+         obj.pushKV(\"hdmasterkeyid\", seedKeyID.GetHex());\n     return obj;\n }\n "
      },
      {
        "sha": "37f23012991e104be788da5d12ef0d910108b587",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4a55c241467d2226ebeb9d3d39faef988082280/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4a55c241467d2226ebeb9d3d39faef988082280/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a4a55c241467d2226ebeb9d3d39faef988082280",
        "patch": "@@ -180,15 +180,15 @@ CPubKey CWallet::GenerateNewKey(CWalletDB &walletdb, bool internal)\n void CWallet::DeriveNewChildKey(CWalletDB &walletdb, CKeyMetadata& metadata, CKey& secret, bool internal)\n {\n     // for now we use a fixed keypath scheme of m/0'/0'/k\n-    CKey key;                      //master key seed (256bit)\n+    CKey key;                      //seed key (256bit)\n     CExtKey masterKey;             //hd master key\n     CExtKey accountKey;            //key at m/0'\n     CExtKey chainChildKey;         //key at m/0'/0' (external) or m/0'/1' (internal)\n     CExtKey childKey;              //key at m/0'/0'/<n>'\n \n-    // try to get the master key\n-    if (!GetKey(hdChain.masterKeyID, key))\n-        throw std::runtime_error(std::string(__func__) + \": Master key not found\");\n+    // try to get the seed key\n+    if (!GetKey(hdChain.seedKeyID, key))\n+        throw std::runtime_error(std::string(__func__) + \": Seed key not found\");\n \n     masterKey.SetSeed(key.begin(), key.size());\n \n@@ -217,7 +217,7 @@ void CWallet::DeriveNewChildKey(CWalletDB &walletdb, CKeyMetadata& metadata, CKe\n         }\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n     secret = childKey.key;\n-    metadata.hdMasterKeyID = hdChain.masterKeyID;\n+    metadata.hdMasterKeyID = hdChain.seedKeyID;\n     // update the chain model in the database\n     if (!walletdb.WriteHDChain(hdChain))\n         throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n@@ -1477,7 +1477,7 @@ bool CWallet::SetHDMasterKey(const CPubKey& pubkey)\n     // as a hdchain object\n     CHDChain newHdChain;\n     newHdChain.nVersion = CanSupportFeature(FEATURE_HD_SPLIT) ? CHDChain::VERSION_HD_CHAIN_SPLIT : CHDChain::VERSION_HD_BASE;\n-    newHdChain.masterKeyID = pubkey.GetID();\n+    newHdChain.seedKeyID = pubkey.GetID();\n     SetHDChain(newHdChain, false);\n \n     return true;\n@@ -1495,7 +1495,7 @@ bool CWallet::SetHDChain(const CHDChain& chain, bool memonly)\n \n bool CWallet::IsHDEnabled() const\n {\n-    return !hdChain.masterKeyID.IsNull();\n+    return !hdChain.seedKeyID.IsNull();\n }\n \n int64_t CWalletTx::GetTxTime() const"
      },
      {
        "sha": "804bbaa00ce729fcb0f6b134bc8a455c60b05a2e",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4a55c241467d2226ebeb9d3d39faef988082280/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4a55c241467d2226ebeb9d3d39faef988082280/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=a4a55c241467d2226ebeb9d3d39faef988082280",
        "patch": "@@ -62,7 +62,7 @@ class CHDChain\n public:\n     uint32_t nExternalChainCounter;\n     uint32_t nInternalChainCounter;\n-    CKeyID masterKeyID; //!< master key hash160\n+    CKeyID seedKeyID; //!< seed key hash160\n \n     static const int VERSION_HD_BASE        = 1;\n     static const int VERSION_HD_CHAIN_SPLIT = 2;\n@@ -76,7 +76,7 @@ class CHDChain\n     {\n         READWRITE(this->nVersion);\n         READWRITE(nExternalChainCounter);\n-        READWRITE(masterKeyID);\n+        READWRITE(seedKeyID);\n         if (this->nVersion >= VERSION_HD_CHAIN_SPLIT)\n             READWRITE(nInternalChainCounter);\n     }\n@@ -86,7 +86,7 @@ class CHDChain\n         nVersion = CHDChain::CURRENT_VERSION;\n         nExternalChainCounter = 0;\n         nInternalChainCounter = 0;\n-        masterKeyID.SetNull();\n+        seedKeyID.SetNull();\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "bb83659c790c3087595867be639da0e59de2bdde",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjgzNjU5Yzc5MGMzMDg3NTk1ODY3YmU2MzlkYTBlNTlkZTJiZGRl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-01-04T23:16:01Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-27T01:54:44Z"
      },
      "message": "Rename CWallet::SetHDMasterKey to CWallet::SetHDSeedKey",
      "tree": {
        "sha": "39dc66aa23e6d5f6ec1e30a64968271320ce9cbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39dc66aa23e6d5f6ec1e30a64968271320ce9cbd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb83659c790c3087595867be639da0e59de2bdde",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqUumQACgkQHrd2uwPH\nki2R2w//VyVVWVCYbEfj32AC//ruoOYoNaHuQsocOSxybuY4sPFjl8PG+IPt50nw\nbKIdBAg9+lHM68SNFhZqCbZRhuN7UWLbPN3pPzrYk3dbWVqp0+430n4L4zAKWW+o\nDLSuLUmzLhutwhJ3yxgKphAWPL4Y2D02GEMR98lZO1vjkWwrDab2Z21T5Zht0NUZ\nTtPOc9IaC+Vct7tFw0QF9FI2dUFHZMBTmAr4MCUk99k0JCOBC7j2aDphiKB3y2rk\nsFW+ZeT7mYycJhrDzfCVs5wpAtArLTT5HqZpby81PbwEVWqJjkBcqDQG/pDlzGTI\nHft4fsFYKnY6ScQs2r3QcpFWDl6t3w3OFuup9pS+gYdTVSlfOUNAaVKJ9TAiYXJO\n4I4UO9vUTk8liWIPK/ccuyc3OCrMJxTaZnm+scSgagTrp6AusNtkljW2MkWpfxtm\nWT6X333+q/Vj7NtuauA8NC8VwAZ+PdXsRSqjSIfcrxVSY5fHW53HUhiTYp4AMT/9\n6NxiBwH2kiNO+vU5GQs0ZMau+tSUOsZ1Tbwr6a75uKyzwwoOryVy23ftjUJlczDN\nYVc7/6N4kbdp5c94EehbUdPBi3VrMRWEXOjkE1FKEYnO+dKLoEefiOpmnuc6coZu\nMgNgxp49T1JzWG9DUvZAeLPh4Ry55tkVpdWAxep/3dUddMif+V4=\n=avAY\n-----END PGP SIGNATURE-----",
        "payload": "tree 39dc66aa23e6d5f6ec1e30a64968271320ce9cbd\nparent a4a55c241467d2226ebeb9d3d39faef988082280\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1515107761 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519696484 +0800\n\nRename CWallet::SetHDMasterKey to CWallet::SetHDSeedKey\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb83659c790c3087595867be639da0e59de2bdde",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb83659c790c3087595867be639da0e59de2bdde",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb83659c790c3087595867be639da0e59de2bdde/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4a55c241467d2226ebeb9d3d39faef988082280",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4a55c241467d2226ebeb9d3d39faef988082280",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4a55c241467d2226ebeb9d3d39faef988082280"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "d83f5850a855cf2d1ef98bdad1aa4ceb10bfb779",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb83659c790c3087595867be639da0e59de2bdde/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb83659c790c3087595867be639da0e59de2bdde/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=bb83659c790c3087595867be639da0e59de2bdde",
        "patch": "@@ -676,9 +676,9 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n         Lock();\n         Unlock(strWalletPassphrase);\n \n-        // if we are using HD, replace the HD master key (seed) with a new one\n+        // if we are using HD, replace the HD seed key with a new one\n         if (IsHDEnabled()) {\n-            if (!SetHDMasterKey(GenerateNewHDMasterKey())) {\n+            if (!SetHDSeedKey(GenerateNewHDMasterKey())) {\n                 return false;\n             }\n         }\n@@ -1469,7 +1469,7 @@ CPubKey CWallet::GenerateNewHDMasterKey()\n     return pubkey;\n }\n \n-bool CWallet::SetHDMasterKey(const CPubKey& pubkey)\n+bool CWallet::SetHDSeedKey(const CPubKey& pubkey)\n {\n     LOCK(cs_wallet);\n     // store the keyid (hash160) together with\n@@ -3985,10 +3985,10 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         }\n         walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-        // generate a new master key\n+        // generate a new HD seed key\n         CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-        if (!walletInstance->SetHDMasterKey(masterPubKey))\n-            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n+        if (!walletInstance->SetHDSeedKey(masterPubKey))\n+            throw std::runtime_error(std::string(__func__) + \": Storing HD seed key failed\");\n \n         // Top up the keypool\n         if (!walletInstance->TopUpKeyPool()) {"
      },
      {
        "sha": "5dfbbe28dd58095f8fbb6e74cae3d0036ecd9fa7",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb83659c790c3087595867be639da0e59de2bdde/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb83659c790c3087595867be639da0e59de2bdde/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=bb83659c790c3087595867be639da0e59de2bdde",
        "patch": "@@ -1135,11 +1135,11 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     /* Generates a new HD master key (will not be activated) */\n     CPubKey GenerateNewHDMasterKey();\n     \n-    /* Set the current HD master key (will reset the chain child index counters)\n-       Sets the master key's version based on the current wallet version (so the\n+    /* Set the current HD seed key (will reset the chain child index counters)\n+       Sets the hd chains version based on the current wallet version (so the\n        caller must ensure the current wallet version is correct before calling\n        this function). */\n-    bool SetHDMasterKey(const CPubKey& key);\n+    bool SetHDSeedKey(const CPubKey& key);\n \n     /**\n      * Blocks until the wallet state is up-to-date to /at least/ the current"
      }
    ]
  },
  {
    "sha": "b0afb720d9827a2314d515b9b12670c68353aeab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGFmYjcyMGQ5ODI3YTIzMTRkNTE1YjliMTI2NzBjNjgzNTNhZWFi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-01-04T23:20:25Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-27T01:54:44Z"
      },
      "message": "Rename CHDChain::hdMasterKeyID to CHDChain::hdSeedKeyID",
      "tree": {
        "sha": "988755908ed14145ead900bfab091d0ed95ae5da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/988755908ed14145ead900bfab091d0ed95ae5da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0afb720d9827a2314d515b9b12670c68353aeab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqUumQACgkQHrd2uwPH\nki2mhBAAogCpOD0G1RqNxZ2x/9kk+vaFHdCNRl5IwK0sF+n5QSEho7EimpmHrJzS\ni/r7J/68PUz7zpOn35DBB32jDELupG0U1SfFXOFOO3TUUpjUv4+TYt6qpZYYtYW6\ndfv21RrEB0b+K8vffjYZDW8HYXTSaDzeO17uHzUQ+ykbFsrDed8tq7mV/2t9DriO\ny50we4C1Ga2u8ub1/EWLPrdv2n9tAeP/uAz/NA+AXyjBmrZhUOjeBtA3/bUq45yZ\ngUSKuiiM3GwggXkn/1Y7jeyWTlWzTHB/5+0egshmovHRK46WYWUvxPjU66fMo6Eq\nuRVpmDXivtzTOyBeykVu3tVLGgCD/bwG6kwRg0GaGHe/TWx0a70J4sNbBUWFmOQo\nupac5NMHFh1S7OIUsvDMeo1goonTcpRfPlqf7bZmXVVoAcHy54xj4RY182vnLnc5\n0nfTIQCiMOFyL+cyO4FNZgS/rwFIDFr7fUeNAO3lqco7nKIvbm4hwSvx/beUfmDa\nxjXvyYYEZskBuuTd3Naw90MkMWE9GCrkAwh/Zvty4VWiffqYN6TJV0BvX9pwQpq4\nAx6X4zlWHX9MyKQ1fqaIEYX5j/7v8a6WZEzoFRiwOuHEjGnWJAQJXadD7efsgFRW\nktLFTuLT9MDAEhZw4n5kYA0VRgzFcF7J6RAKRt6kg9sD5qjzzzM=\n=pHX0\n-----END PGP SIGNATURE-----",
        "payload": "tree 988755908ed14145ead900bfab091d0ed95ae5da\nparent bb83659c790c3087595867be639da0e59de2bdde\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1515108025 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519696484 +0800\n\nRename CHDChain::hdMasterKeyID to CHDChain::hdSeedKeyID\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0afb720d9827a2314d515b9b12670c68353aeab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0afb720d9827a2314d515b9b12670c68353aeab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0afb720d9827a2314d515b9b12670c68353aeab/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb83659c790c3087595867be639da0e59de2bdde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb83659c790c3087595867be639da0e59de2bdde",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb83659c790c3087595867be639da0e59de2bdde"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "52a2e6f8ce868945648f36c7aa28e1f472ab479f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0afb720d9827a2314d515b9b12670c68353aeab/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0afb720d9827a2314d515b9b12670c68353aeab/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=b0afb720d9827a2314d515b9b12670c68353aeab",
        "patch": "@@ -2791,7 +2791,7 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n     obj.pushKV(\"txcount\",       (int)pwallet->mapWallet.size());\n     obj.pushKV(\"keypoololdest\", pwallet->GetOldestKeyPoolTime());\n     obj.pushKV(\"keypoolsize\", (int64_t)kpExternalSize);\n-    CKeyID masterKeyID = pwallet->GetHDChain().seedKeyID;\n+    CKeyID seedKeyID = pwallet->GetHDChain().seedKeyID;\n     if (!seedKeyID.IsNull() && pwallet->CanSupportFeature(FEATURE_HD_SPLIT)) {\n         obj.pushKV(\"keypoolsize_hd_internal\",   (int64_t)(pwallet->GetKeyPoolSize() - kpExternalSize));\n     }\n@@ -3782,7 +3782,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n         ret.pushKV(\"timestamp\", meta->nCreateTime);\n         if (!meta->hdKeypath.empty()) {\n             ret.pushKV(\"hdkeypath\", meta->hdKeypath);\n-            ret.pushKV(\"hdmasterkeyid\", meta->hdMasterKeyID.GetHex());\n+            ret.pushKV(\"hdmasterkeyid\", meta->hdSeedKeyID.GetHex());\n         }\n     }\n     return ret;"
      },
      {
        "sha": "c42b2b88a1b0f121b66b7db27baa61b8f007c444",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0afb720d9827a2314d515b9b12670c68353aeab/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0afb720d9827a2314d515b9b12670c68353aeab/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b0afb720d9827a2314d515b9b12670c68353aeab",
        "patch": "@@ -217,7 +217,7 @@ void CWallet::DeriveNewChildKey(CWalletDB &walletdb, CKeyMetadata& metadata, CKe\n         }\n     } while (HaveKey(childKey.key.GetPubKey().GetID()));\n     secret = childKey.key;\n-    metadata.hdMasterKeyID = hdChain.seedKeyID;\n+    metadata.hdSeedKeyID = hdChain.seedKeyID;\n     // update the chain model in the database\n     if (!walletdb.WriteHDChain(hdChain))\n         throw std::runtime_error(std::string(__func__) + \": Writing HD chain model failed\");\n@@ -1453,7 +1453,7 @@ CPubKey CWallet::GenerateNewHDMasterKey()\n \n     // set the hd keypath to \"m\" -> Master, refers the masterkeyid to itself\n     metadata.hdKeypath     = \"m\";\n-    metadata.hdMasterKeyID = pubkey.GetID();\n+    metadata.hdSeedKeyID = pubkey.GetID();\n \n     {\n         LOCK(cs_wallet);"
      },
      {
        "sha": "c463e4e116a75ec416fe67ed72df07864b20921c",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0afb720d9827a2314d515b9b12670c68353aeab/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0afb720d9827a2314d515b9b12670c68353aeab/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=b0afb720d9827a2314d515b9b12670c68353aeab",
        "patch": "@@ -99,7 +99,7 @@ class CKeyMetadata\n     int nVersion;\n     int64_t nCreateTime; // 0 means unknown\n     std::string hdKeypath; //optional HD/bip32 keypath\n-    CKeyID hdMasterKeyID; //id of the HD masterkey used to derive this key\n+    CKeyID hdSeedKeyID; //id of the HD seed key used to derive this key\n \n     CKeyMetadata()\n     {\n@@ -120,7 +120,7 @@ class CKeyMetadata\n         if (this->nVersion >= VERSION_WITH_HDDATA)\n         {\n             READWRITE(hdKeypath);\n-            READWRITE(hdMasterKeyID);\n+            READWRITE(hdSeedKeyID);\n         }\n     }\n \n@@ -129,7 +129,7 @@ class CKeyMetadata\n         nVersion = CKeyMetadata::CURRENT_VERSION;\n         nCreateTime = 0;\n         hdKeypath.clear();\n-        hdMasterKeyID.SetNull();\n+        hdSeedKeyID.SetNull();\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "99842532a96f2c077eee958ca18076e067a4e90e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTg0MjUzMmE5NmYyYzA3N2VlZTk1OGNhMTgwNzZlMDY3YTRlOTBl",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-01-04T23:24:06Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-27T01:54:45Z"
      },
      "message": "Rename CWallet::GenerateNewHDMasterKey to CWallet::GenerateNewHDSeedKey",
      "tree": {
        "sha": "fcb3a0a2797be376edcb2a41e291d042d976f402",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fcb3a0a2797be376edcb2a41e291d042d976f402"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99842532a96f2c077eee958ca18076e067a4e90e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqUumUACgkQHrd2uwPH\nki3P3Q/8DSdLtf9723XoVQQaljbSk68Zybp+uGgO515Su5u0aZ1xgHqRsO/FfT3R\nzqIp8PytlCYDstMyyg0V58p5V9knoMxvNAjLghCt1LZ9oRkde1zjmtcsO3nf0xLB\nam8fZgQZazuNljajtZsXsrnTB/kkjwuJ9VcbvHcKFKnKjHt0r/5Vh0AUC87/a2Hl\nWelNk+sdgdd65KPSGEjnB7IZePCUw/+rO4+MGnYDUrqAnx2pt5jegK2q8k4EnMnH\nQClHG5yBpusRAoN7PF73RYrtQvoMoGjH/wyEWXHnpsS79Hj7ycc2c38GrWB3tSNv\nE0yYTttWiwlc7zHjhVNv4Qmc3qpyNC2wudQfL1vJk3QHLXfCgy0EFQhzDMdK/yXS\nG46iWIQ+5mgzQz8XmFzcl+8rL9AYsXIiLVanvR8ekA7LyghkYpU05pkb1CW2qTT2\ngPs4LodSnlw7kcfUEPvY7XeOZ46MvHWXo9cMa6HiyL0HSVO6ZRW35zfX2AMAy6So\nf3qKvh9k747c4LNBnpr4zrk5S7j+o7NjYP+CSyoJG+1nPGuBZO6RwHBb3ClYiWxJ\n83vZbxiDtoAPJSkqVDcmXPmVf4FA+r/NFrzzlkgqSNhCeILA+Z/YlXdd5DZPyhSI\nQrd16cqnWUGsT2HJ8SKm6BJpqGNZkOVbD9Y1PkNjKiq0OXSAsD4=\n=VuAm\n-----END PGP SIGNATURE-----",
        "payload": "tree fcb3a0a2797be376edcb2a41e291d042d976f402\nparent b0afb720d9827a2314d515b9b12670c68353aeab\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1515108246 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519696485 +0800\n\nRename CWallet::GenerateNewHDMasterKey to CWallet::GenerateNewHDSeedKey\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99842532a96f2c077eee958ca18076e067a4e90e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99842532a96f2c077eee958ca18076e067a4e90e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99842532a96f2c077eee958ca18076e067a4e90e/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0afb720d9827a2314d515b9b12670c68353aeab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0afb720d9827a2314d515b9b12670c68353aeab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0afb720d9827a2314d515b9b12670c68353aeab"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "17a0486d76f69a6e701fcc69a71efef5a208a416",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99842532a96f2c077eee958ca18076e067a4e90e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99842532a96f2c077eee958ca18076e067a4e90e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=99842532a96f2c077eee958ca18076e067a4e90e",
        "patch": "@@ -678,7 +678,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n \n         // if we are using HD, replace the HD seed key with a new one\n         if (IsHDEnabled()) {\n-            if (!SetHDSeedKey(GenerateNewHDMasterKey())) {\n+            if (!SetHDSeedKey(GenerateNewHDSeedKey())) {\n                 return false;\n             }\n         }\n@@ -1439,7 +1439,7 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n-CPubKey CWallet::GenerateNewHDMasterKey()\n+CPubKey CWallet::GenerateNewHDSeedKey()\n {\n     CKey key;\n     key.MakeNewKey(true);\n@@ -1451,7 +1451,7 @@ CPubKey CWallet::GenerateNewHDMasterKey()\n     CPubKey pubkey = key.GetPubKey();\n     assert(key.VerifyPubKey(pubkey));\n \n-    // set the hd keypath to \"m\" -> Master, refers the masterkeyid to itself\n+    // set the hd keypath to \"m\" -> Seed, refers the hdSeedKeyID to itself\n     metadata.hdKeypath     = \"m\";\n     metadata.hdSeedKeyID = pubkey.GetID();\n \n@@ -3986,7 +3986,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n         // generate a new HD seed key\n-        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+        CPubKey masterPubKey = walletInstance->GenerateNewHDSeedKey();\n         if (!walletInstance->SetHDSeedKey(masterPubKey))\n             throw std::runtime_error(std::string(__func__) + \": Storing HD seed key failed\");\n "
      },
      {
        "sha": "7af32d12c0356b347968303a1c8e6fe2a1c7596b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99842532a96f2c077eee958ca18076e067a4e90e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99842532a96f2c077eee958ca18076e067a4e90e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=99842532a96f2c077eee958ca18076e067a4e90e",
        "patch": "@@ -1132,8 +1132,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     /* Returns true if HD is enabled */\n     bool IsHDEnabled() const;\n \n-    /* Generates a new HD master key (will not be activated) */\n-    CPubKey GenerateNewHDMasterKey();\n+    /* Generates a new HD seed key (will not be activated) */\n+    CPubKey GenerateNewHDSeedKey();\n     \n     /* Set the current HD seed key (will reset the chain child index counters)\n        Sets the hd chains version based on the current wallet version (so the"
      }
    ]
  },
  {
    "sha": "ef02669c1c14550fe2577f062b11271a3379f322",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjAyNjY5YzFjMTQ1NTBmZTI1NzdmMDYyYjExMjcxYTMzNzlmMzIy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-01-04T23:32:28Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-27T01:54:45Z"
      },
      "message": "RPC API change: Rename \"hdmasterkeyid\" to \"hdseedkeyid\"\nRename wallet dumps \"hdmaster\" to \"hdseed\"",
      "tree": {
        "sha": "5ecec211d06dfb02d80bcbcf73a7ec6e56f7c817",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ecec211d06dfb02d80bcbcf73a7ec6e56f7c817"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef02669c1c14550fe2577f062b11271a3379f322",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqUumUACgkQHrd2uwPH\nki3EUhAAspKy4dN22KaEfvLhKNyFHzJe7xm5T3109oqGAqBM0b/LvydLyowW9ZJn\n7rSc5Z6Nb/nYe9AHUsDZtaIGVGUt3nEa9dHHXAhoOEdSGugoyhChvQ5fVpzfrJAZ\nb8v2FO3cM5f64rERaziI+zqelp11d3cd5Pld+MWakEuSEX57RCi05KG/PhiNeTLy\n/ec9zy2QPmyZL/q1DuBvt38J+ljOdTg/muMFWaQXJ7vBpGCa11mYYpjRpGQdNyvf\ntlHfbcnt1jd1i/QSEP93vX15pbS1IG8YNabuWfH0TOCkgr78BdIj/+39zFqiL7MC\nB4IEAtsewPhJiA3jX7INF3dSJAnZdKzkP2GiKgCQavD7Cycj0pCsKUsahqkfuYfc\nGNShHpsaWfQ5CvvF2rnqWoNHWebADuMbeRbKTUlIf5TXvcjK6T8rJlPEjoxurxWo\njtqX8k//PnwXHCErZCqCmoZiahCgBywj58ukbbTKoSUdvqbq2sO2zFEq0AzAAlsr\nxTg7aqVGjXIFMOnDPSl/4YF06FagKYw+vP/J7L2OLAotxwJQQGYjZqqMNpMmQLEr\n8HM2cMaETGPyqal22phKkERb1qJ6CHZo4+J9a7sfI9sTRc9waVeKNGySJNTm+8Hx\nFcLZeJyd7XcZm+Plmj8fqPzFGo4tj+fgef0eBVC+GxHfCTN0o0Y=\n=5t0o\n-----END PGP SIGNATURE-----",
        "payload": "tree 5ecec211d06dfb02d80bcbcf73a7ec6e56f7c817\nparent 99842532a96f2c077eee958ca18076e067a4e90e\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1515108748 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519696485 +0800\n\nRPC API change: Rename \"hdmasterkeyid\" to \"hdseedkeyid\"\nRename wallet dumps \"hdmaster\" to \"hdseed\"\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef02669c1c14550fe2577f062b11271a3379f322",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef02669c1c14550fe2577f062b11271a3379f322",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef02669c1c14550fe2577f062b11271a3379f322/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99842532a96f2c077eee958ca18076e067a4e90e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99842532a96f2c077eee958ca18076e067a4e90e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99842532a96f2c077eee958ca18076e067a4e90e"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "64bd243312c98294203b092a1db8152a49e42f8f",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef02669c1c14550fe2577f062b11271a3379f322/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef02669c1c14550fe2577f062b11271a3379f322/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ef02669c1c14550fe2577f062b11271a3379f322",
        "patch": "@@ -759,11 +759,11 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n             if (GetWalletAddressesForKey(pwallet, keyid, strAddr, strLabel)) {\n                file << strprintf(\"label=%s\", strLabel);\n             } else if (keyid == seedKeyID) {\n-                file << \"hdmaster=1\";\n+                file << \"hdseed=1\";\n             } else if (mapKeyPool.count(keyid)) {\n                 file << \"reserve=1\";\n             } else if (pwallet->mapKeyMetadata[keyid].hdKeypath == \"m\") {\n-                file << \"inactivehdmaster=1\";\n+                file << \"inactivehdseed=1\";\n             } else {\n                 file << \"change=1\";\n             }"
      },
      {
        "sha": "23dce2c5a21f50752584e42e82480d6216c7f8f0",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef02669c1c14550fe2577f062b11271a3379f322/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef02669c1c14550fe2577f062b11271a3379f322/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ef02669c1c14550fe2577f062b11271a3379f322",
        "patch": "@@ -2765,7 +2765,7 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n             \"  \\\"keypoolsize_hd_internal\\\": xxxx, (numeric) how many new keys are pre-generated for internal use (used for change outputs, only appears if the wallet is using this feature, otherwise external keys are used)\\n\"\n             \"  \\\"unlocked_until\\\": ttt,           (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,              (numeric) the transaction fee configuration, set in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"hdmasterkeyid\\\": \\\"<hash160>\\\"     (string, optional) the Hash160 of the HD master pubkey (only present when HD is enabled)\\n\"\n+            \"  \\\"hdseedkeyid\\\": \\\"<hash160>\\\"       (string) the Hash160 of the HD seed pubkey (only present when HD is enabled)\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getwalletinfo\", \"\")\n@@ -2800,7 +2800,7 @@ UniValue getwalletinfo(const JSONRPCRequest& request)\n     }\n     obj.pushKV(\"paytxfee\",      ValueFromAmount(payTxFee.GetFeePerK()));\n     if (!seedKeyID.IsNull())\n-         obj.pushKV(\"hdmasterkeyid\", seedKeyID.GetHex());\n+         obj.pushKV(\"hdseedkeyid\", seedKeyID.GetHex());\n     return obj;\n }\n \n@@ -3732,7 +3732,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n             \"  \\\"account\\\" : \\\"account\\\"         (string) The account associated with the address, \\\"\\\" is the default account\\n\"\n             \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n             \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n-            \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n+            \"  \\\"hdseedkeyid\\\" : \\\"<hash160>\\\"   (string, optional) The Hash160 of the HD seed pubkey\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n@@ -3782,7 +3782,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n         ret.pushKV(\"timestamp\", meta->nCreateTime);\n         if (!meta->hdKeypath.empty()) {\n             ret.pushKV(\"hdkeypath\", meta->hdKeypath);\n-            ret.pushKV(\"hdmasterkeyid\", meta->hdSeedKeyID.GetHex());\n+            ret.pushKV(\"hdseedkeyid\", meta->hdSeedKeyID.GetHex());\n         }\n     }\n     return ret;"
      },
      {
        "sha": "9d15e1797f06635057400c48d3372b646d078f04",
        "filename": "test/functional/wallet_hd.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef02669c1c14550fe2577f062b11271a3379f322/test/functional/wallet_hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef02669c1c14550fe2577f062b11271a3379f322/test/functional/wallet_hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_hd.py?ref=ef02669c1c14550fe2577f062b11271a3379f322",
        "patch": "@@ -27,9 +27,9 @@ def run_test (self):\n         self.start_node(1)\n         connect_nodes_bi(self.nodes, 0, 1)\n \n-        # Make sure we use hd, keep masterkeyid\n-        masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n-        assert_equal(len(masterkeyid), 40)\n+        # Make sure we use hd, keep seedkeyid\n+        seedkeyid = self.nodes[1].getwalletinfo()['hdseedkeyid']\n+        assert_equal(len(seedkeyid), 40)\n \n         # create an internal key\n         change_addr = self.nodes[1].getrawchangeaddress()\n@@ -40,7 +40,7 @@ def run_test (self):\n         non_hd_add = self.nodes[0].getnewaddress()\n         self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(non_hd_add))\n \n-        # This should be enough to keep the master key and the non-HD key\n+        # This should be enough to keep the seed key and the non-HD key\n         self.nodes[1].backupwallet(tmpdir + \"/hd.bak\")\n         #self.nodes[1].dumpwallet(tmpdir + \"/hd.dump\")\n \n@@ -53,7 +53,7 @@ def run_test (self):\n             hd_add = self.nodes[1].getnewaddress()\n             hd_info = self.nodes[1].getaddressinfo(hd_add)\n             assert_equal(hd_info[\"hdkeypath\"], \"m/0'/0'/\"+str(i)+\"'\")\n-            assert_equal(hd_info[\"hdmasterkeyid\"], masterkeyid)\n+            assert_equal(hd_info[\"hdseedkeyid\"], seedkeyid)\n             self.nodes[0].sendtoaddress(hd_add, 1)\n             self.nodes[0].generate(1)\n         self.nodes[0].sendtoaddress(non_hd_add, 1)\n@@ -82,7 +82,7 @@ def run_test (self):\n             hd_add_2 = self.nodes[1].getnewaddress()\n             hd_info_2 = self.nodes[1].getaddressinfo(hd_add_2)\n             assert_equal(hd_info_2[\"hdkeypath\"], \"m/0'/0'/\"+str(_)+\"'\")\n-            assert_equal(hd_info_2[\"hdmasterkeyid\"], masterkeyid)\n+            assert_equal(hd_info_2[\"hdseedkeyid\"], seedkeyid)\n         assert_equal(hd_add, hd_add_2)\n         connect_nodes_bi(self.nodes, 0, 1)\n         self.sync_all()"
      },
      {
        "sha": "828518a76f034bbf659db92c276e8d682b69fed2",
        "filename": "test/functional/wallet_keypool.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef02669c1c14550fe2577f062b11271a3379f322/test/functional/wallet_keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef02669c1c14550fe2577f062b11271a3379f322/test/functional/wallet_keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_keypool.py?ref=ef02669c1c14550fe2577f062b11271a3379f322",
        "patch": "@@ -16,7 +16,7 @@ def run_test(self):\n         addr_before_encrypting = nodes[0].getnewaddress()\n         addr_before_encrypting_data = nodes[0].getaddressinfo(addr_before_encrypting)\n         wallet_info_old = nodes[0].getwalletinfo()\n-        assert(addr_before_encrypting_data['hdmasterkeyid'] == wallet_info_old['hdmasterkeyid'])\n+        assert(addr_before_encrypting_data['hdseedkeyid'] == wallet_info_old['hdseedkeyid'])\n         \n         # Encrypt wallet and wait to terminate\n         nodes[0].node_encrypt_wallet('test')\n@@ -26,8 +26,8 @@ def run_test(self):\n         addr = nodes[0].getnewaddress()\n         addr_data = nodes[0].getaddressinfo(addr)\n         wallet_info = nodes[0].getwalletinfo()\n-        assert(addr_before_encrypting_data['hdmasterkeyid'] != wallet_info['hdmasterkeyid'])\n-        assert(addr_data['hdmasterkeyid'] == wallet_info['hdmasterkeyid'])\n+        assert(addr_before_encrypting_data['hdseedkeyid'] != wallet_info['hdseedkeyid'])\n+        assert(addr_data['hdseedkeyid'] == wallet_info['hdseedkeyid'])\n         assert_raises_rpc_error(-12, \"Error: Keypool ran out, please call keypoolrefill first\", nodes[0].getnewaddress)\n \n         # put six (plus 2) new keys in the keypool (100% external-, +100% internal-keys, 1 in min)"
      }
    ]
  },
  {
    "sha": "d4f71db3e8c1f876ba147ef93715cdfe773f35f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNGY3MWRiM2U4YzFmODc2YmExNDdlZjkzNzE1Y2RmZTc3M2YzNWY4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-01-04T23:37:13Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-27T01:54:45Z"
      },
      "message": "Bugfix: use \"s\" instead of the incorrect \"m\" for the seed-key hd-keypath",
      "tree": {
        "sha": "a7c9815b226776f6cf9694c432649b807f7efa38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7c9815b226776f6cf9694c432649b807f7efa38"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4f71db3e8c1f876ba147ef93715cdfe773f35f8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqUumUACgkQHrd2uwPH\nki374A/+NvxtuvkStbbYQZ4GW6E6iIEOkNQlA+868tBryjMR/MEFWda1/GQFYs0N\n41YHGwC/SMAlpLIiq0D4bL9v7hZ2hENQ4vQ+XGSBxmws39P0eeEoEDjTqGeNTj2Q\nPoP2R4B4Z3UkPV+j/ymMJ8i8vMt9afwVT8UZ6wb6fBKprCqcCG0+gVHiiPJUOdwv\nr5RzAL6cax4V66h4f26lkmDe2aSsRkXXXlbfQbM/6UIgxBB0TQrN6oQax5plknaa\nVYQ+mwdg/bm9ukSJRRaGHpxPprAkXMkP6bXEnzrRZ288ledzSpSja/WZnpJuad1e\nvjpJhO6cEL8vFIJmME1NDu5o8eWZdMvxoJ2dPIQDat9haTikhVkRveTnryVqnF8f\nItwzDsBAiui7zWmhxAuxJuEIH6LfZLrzUFM+O3BEUPLkTS9T57+DcFo/aG+tglgQ\nubKjDu5pB3X8If8TN9VkGtLJDJmRrouuiQFxa310LJczsIeHONd2a03iVFZSpod7\nHhNRbQDWEL0A6pKDDNP+5QjacfbTXtnwwwFn4fOPMqzzu7pBjkFF+bO+OdCrmmF3\nEyvrF/BZ1bBZgMJZfJ4WPUpo4d0MOHerdQKSVcTkiSbaMa+JWsL0KA8RKh0+/lBj\numPGe4zLPf9yBcTeCnngSUehnVyp7slah8X3248szSTWgoEizeU=\n=+eB3\n-----END PGP SIGNATURE-----",
        "payload": "tree a7c9815b226776f6cf9694c432649b807f7efa38\nparent ef02669c1c14550fe2577f062b11271a3379f322\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1515109033 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519696485 +0800\n\nBugfix: use \"s\" instead of the incorrect \"m\" for the seed-key hd-keypath\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4f71db3e8c1f876ba147ef93715cdfe773f35f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4f71db3e8c1f876ba147ef93715cdfe773f35f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4f71db3e8c1f876ba147ef93715cdfe773f35f8/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef02669c1c14550fe2577f062b11271a3379f322",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef02669c1c14550fe2577f062b11271a3379f322",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef02669c1c14550fe2577f062b11271a3379f322"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "96fb836054b52eafc53656415bf92be5e6c22497",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4f71db3e8c1f876ba147ef93715cdfe773f35f8/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4f71db3e8c1f876ba147ef93715cdfe773f35f8/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=d4f71db3e8c1f876ba147ef93715cdfe773f35f8",
        "patch": "@@ -762,7 +762,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n                 file << \"hdseed=1\";\n             } else if (mapKeyPool.count(keyid)) {\n                 file << \"reserve=1\";\n-            } else if (pwallet->mapKeyMetadata[keyid].hdKeypath == \"m\") {\n+            } else if (pwallet->mapKeyMetadata[keyid].hdKeypath == \"s\") {\n                 file << \"inactivehdseed=1\";\n             } else {\n                 file << \"change=1\";"
      },
      {
        "sha": "a08b8cf06459646d931998e6729f3598a9fed4cf",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4f71db3e8c1f876ba147ef93715cdfe773f35f8/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4f71db3e8c1f876ba147ef93715cdfe773f35f8/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d4f71db3e8c1f876ba147ef93715cdfe773f35f8",
        "patch": "@@ -1451,8 +1451,8 @@ CPubKey CWallet::GenerateNewHDSeedKey()\n     CPubKey pubkey = key.GetPubKey();\n     assert(key.VerifyPubKey(pubkey));\n \n-    // set the hd keypath to \"m\" -> Seed, refers the hdSeedKeyID to itself\n-    metadata.hdKeypath     = \"m\";\n+    // set the hd keypath to \"s\" -> Seed, refers the hdSeedKeyID to itself\n+    metadata.hdKeypath     = \"s\";\n     metadata.hdSeedKeyID = pubkey.GetID();\n \n     {"
      }
    ]
  }
]