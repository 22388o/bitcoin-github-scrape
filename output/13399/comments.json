[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394792508",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-394792508",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 394792508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDc5MjUwOA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T17:23:35Z",
    "updated_at": "2018-08-13T23:02:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13945 (Refactoring CRPCCommand with enum category by isghe)\n* #13815 (util: Add [[nodiscard]] to all {Decode,Parse}[...](...) functions returning bool by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394792508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394793982",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-394793982",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 394793982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDc5Mzk4Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T17:27:58Z",
    "updated_at": "2018-06-05T17:27:58Z",
    "author_association": "MEMBER",
    "body": "Your OP is empty - can you provide rationale what this is to be used for?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394793982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394794918",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-394794918",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 394794918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDc5NDkxOA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T17:31:04Z",
    "updated_at": "2018-06-05T17:31:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I asked for this as a part of my BetterHash mining protocol work, however I've also wanted this at several points in order to be able to implement chain-sync logic outside of bitcoind over RPC. You'd need this or something like it to do headers-first sync in such a system.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394794918/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/398813907",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-398813907",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 398813907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODgxMzkwNw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T16:31:34Z",
    "updated_at": "2018-06-20T16:31:34Z",
    "author_association": "MEMBER",
    "body": "#13439 has been merged. Is this PR ready for rebase and rereview?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/398813907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/404966770",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-404966770",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 404966770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk2Njc3MA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T22:12:13Z",
    "updated_at": "2018-07-13T22:12:13Z",
    "author_association": "MEMBER",
    "body": "utACK fa7d7dd34cbd180ec9587c640078dfb7bf2ead04.\r\n\r\nHaving this functionality can't hurt, as it available with identical semantics via P2P anyway.\r\n\r\nI have no opinion about the test code style.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/404966770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/405038140",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-405038140",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 405038140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTAzODE0MA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T17:33:13Z",
    "updated_at": "2018-07-14T17:33:13Z",
    "author_association": "MEMBER",
    "body": "Please rename either the PR or the RPC method to match the other...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/405038140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/405051511",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-405051511",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 405051511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTA1MTUxMQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-14T21:37:43Z",
    "updated_at": "2018-07-14T21:37:43Z",
    "author_association": "MEMBER",
    "body": "utACK fa7d7dd.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/405051511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412619156",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-412619156",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 412619156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjYxOTE1Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T18:32:58Z",
    "updated_at": "2018-08-13T18:32:58Z",
    "author_association": "MEMBER",
    "body": "Rebased. Only conflict was in tests, no other changes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412619156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413242107",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-413242107",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13399",
    "id": 413242107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzI0MjEwNw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T15:51:46Z",
    "updated_at": "2018-08-15T15:51:46Z",
    "author_association": "MEMBER",
    "body": "utACK fa091b001605c4481fb4eca415929a98d3478549",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413242107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193158690",
    "pull_request_review_id": 126074219,
    "id": 193158690,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE1ODY5MA==",
    "diff_hunk": "@@ -234,7 +234,6 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  * (and possibly also) BlockChecked will have been called.\n  *\n  *\n- *",
    "path": "src/validation.h",
    "position": null,
    "original_position": 4,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "1c4268a500061f22499656deecaef12ff37719ef",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"rpc: Expose ProcessNewBlockHeaders\"\r\n\r\nThis should be in commit \"doc: Rewrite some validation doc to be machine-readable:\".",
    "created_at": "2018-06-05T17:34:35Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193158690",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193158690"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193158690"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193158690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 224,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193158756",
    "pull_request_review_id": 126074219,
    "id": 193158756,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE1ODc1Ng==",
    "diff_hunk": "@@ -245,8 +244,6 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n /**\n  * Process incoming block headers.\n  *\n- *",
    "path": "src/validation.h",
    "position": null,
    "original_position": 12,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "1c4268a500061f22499656deecaef12ff37719ef",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"rpc: Expose ProcessNewBlockHeaders\"\r\n\r\nThis should be in commit \"doc: Rewrite some validation doc to be machine-readable:\".",
    "created_at": "2018-06-05T17:34:50Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193158756",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193158756"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193158756"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193158756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 248,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193159384",
    "pull_request_review_id": 126074219,
    "id": 193159384,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE1OTM4NA==",
    "diff_hunk": "@@ -232,28 +232,25 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  *\n  * Note that we guarantee that either the proof-of-work is valid on pblock, or\n  * (and possibly also) BlockChecked will have been called.\n- * \n- * Call without cs_main held.\n+ *",
    "path": "src/validation.h",
    "position": null,
    "original_position": 6,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "7f619acaf04a88837029b709b740d107c0149241",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could be removed?",
    "created_at": "2018-06-05T17:36:59Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193159384",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193159384"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193159384"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/193159384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 224,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194330173",
    "pull_request_review_id": 127478873,
    "id": 194330173,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDMzMDE3Mw==",
    "diff_hunk": "@@ -131,5 +141,61 @@ def run_test(self):\n         bad_block.hashPrevBlock = 123\n         assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n \n+        self.log.info('submitheader tests')\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))",
    "path": "test/functional/mining_basic.py",
    "position": 36,
    "original_position": 39,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, could include the previous hash.",
    "created_at": "2018-06-11T08:45:32Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194330173",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194330173"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194330173"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194330173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 144,
    "original_line": 144,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194331921",
    "pull_request_review_id": 127478873,
    "id": 194331921,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDMzMTkyMQ==",
    "diff_hunk": "@@ -751,20 +748,51 @@ static UniValue submitblock(const JSONRPCRequest& request)\n \n     submitblock_StateCatcher sc(block.GetHash());\n     RegisterValidationInterface(&sc);\n-    bool fAccepted = ProcessNewBlock(Params(), blockptr, true, nullptr);\n+    ProcessNewBlock(Params(), blockptr, true, nullptr);\n     UnregisterValidationInterface(&sc);\n-    if (fBlockPresent) {\n-        if (fAccepted && !sc.found) {\n-            return \"duplicate-inconclusive\";\n-        }\n-        return \"duplicate\";\n-    }\n     if (!sc.found) {\n         return \"inconclusive\";\n     }\n     return BIP22ValidationResult(sc.state);\n }\n \n+static UniValue submitheader(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"submitheader \\\"hexdata\\\"\\n\"\n+            \"\\nDecode the given hexdata as a header and submit it as a candidate chain tip if valid.\"\n+            \"\\nThrows when the header is invalid.\\n\"\n+            \"\\nArguments\\n\"\n+            \"1. \\\"hexdata\\\"        (string, required) the hex-encoded block header data\\n\"\n+            \"\\nResult:\\n\"\n+            \"None\"\n+            \"\\nExamples:\\n\" +\n+            HelpExampleCli(\"submitheader\", \"\\\"aabbcc\\\"\") +\n+            HelpExampleRpc(\"submitheader\", \"\\\"aabbcc\\\"\"));\n+    }\n+\n+    CBlockHeader h;\n+    if (!DecodeHexBlockHeader(h, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block header decode failed\");\n+    }\n+    {\n+        LOCK(cs_main);\n+        if (LookupBlockIndex(h.GetHash())) return NullUniValue;",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "These verifications are done in `ProcessNewBlockHeaders` -> `CChainState::AcceptBlockHeader`. Could use `ProcessNewBlockHeaders` return value.",
    "created_at": "2018-06-11T08:51:42Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194331921",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194331921"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194331921"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194331921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 789,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194332068",
    "pull_request_review_id": 127478873,
    "id": 194332068,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDMzMjA2OA==",
    "diff_hunk": "@@ -751,20 +748,51 @@ static UniValue submitblock(const JSONRPCRequest& request)\n \n     submitblock_StateCatcher sc(block.GetHash());\n     RegisterValidationInterface(&sc);\n-    bool fAccepted = ProcessNewBlock(Params(), blockptr, true, nullptr);\n+    ProcessNewBlock(Params(), blockptr, true, nullptr);\n     UnregisterValidationInterface(&sc);\n-    if (fBlockPresent) {\n-        if (fAccepted && !sc.found) {\n-            return \"duplicate-inconclusive\";\n-        }\n-        return \"duplicate\";\n-    }\n     if (!sc.found) {\n         return \"inconclusive\";\n     }\n     return BIP22ValidationResult(sc.state);\n }\n \n+static UniValue submitheader(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"submitheader \\\"hexdata\\\"\\n\"\n+            \"\\nDecode the given hexdata as a header and submit it as a candidate chain tip if valid.\"\n+            \"\\nThrows when the header is invalid.\\n\"\n+            \"\\nArguments\\n\"\n+            \"1. \\\"hexdata\\\"        (string, required) the hex-encoded block header data\\n\"\n+            \"\\nResult:\\n\"\n+            \"None\"\n+            \"\\nExamples:\\n\" +\n+            HelpExampleCli(\"submitheader\", \"\\\"aabbcc\\\"\") +\n+            HelpExampleRpc(\"submitheader\", \"\\\"aabbcc\\\"\"));\n+    }\n+\n+    CBlockHeader h;\n+    if (!DecodeHexBlockHeader(h, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block header decode failed\");\n+    }\n+    {\n+        LOCK(cs_main);\n+        if (LookupBlockIndex(h.GetHash())) return NullUniValue;\n+        if (!LookupBlockIndex(h.hashPrevBlock)) {\n+            throw JSONRPCError(RPC_VERIFY_ERROR, \"Must submit previous header (\" + h.hashPrevBlock.GetHex() + \") first\");\n+        }\n+    }\n+\n+    CValidationState state;\n+    ProcessNewBlockHeaders({h}, state, Params(), /* ppindex */ nullptr, /* first_invalid */ nullptr);",
    "path": "src/rpc/mining.cpp",
    "position": 48,
    "original_position": 81,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since the lock is released above, there is a point where the block can be processed in between.",
    "created_at": "2018-06-11T08:52:06Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194332068",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194332068"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194332068"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194332068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 794,
    "original_line": 794,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194429120",
    "pull_request_review_id": 127599009,
    "id": 194429120,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDQyOTEyMA==",
    "diff_hunk": "@@ -232,28 +232,24 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  *\n  * Note that we guarantee that either the proof-of-work is valid on pblock, or\n  * (and possibly also) BlockChecked will have been called.\n- * ",
    "path": "src/validation.h",
    "position": null,
    "original_position": 4,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "supernit: you remove this text in commit _doc: Rewrite some validation doc to be machine-readable_, and then remove the lines in commit _rpc: Expose ProcessNewBlockHeaders_. Just remove the lines in the first commit.\r\n\r\nSame for `ProcessNewBlockHeaders` comment below.",
    "created_at": "2018-06-11T14:42:15Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194429120",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194429120"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194429120"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194429120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 235,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194429410",
    "pull_request_review_id": 127599009,
    "id": 194429410,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDQyOTQxMA==",
    "diff_hunk": "@@ -9,16 +9,26 @@\n - submitblock\"\"\"\n \n import copy\n-from binascii import b2a_hex\n from decimal import Decimal\n \n from test_framework.blocktools import create_coinbase\n-from test_framework.mininode import CBlock\n+from test_framework.messages import (\n+    CBlock,\n+    CBlockHeader,\n+)\n+from test_framework.mininode import (\n+    P2PDataStore,\n+    network_thread_start,\n+)\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+    bytes_to_hex_str,\n+)\n+\n+b2x = bytes_to_hex_str",
    "path": "test/functional/mining_basic.py",
    "position": null,
    "original_position": 25,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can just use:\r\n\r\n```python\r\nfrom test_framework.util import (\r\n    assert_equal,\r\n    assert_raises_rpc_error,\r\n    bytes_to_hex_str as b2x,\r\n+)\r\n```",
    "created_at": "2018-06-11T14:43:00Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194429410",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194429410"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194429410"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194429410/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194433216",
    "pull_request_review_id": 127599009,
    "id": 194433216,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDQzMzIxNg==",
    "diff_hunk": "@@ -131,5 +141,61 @@ def run_test(self):\n         bad_block.hashPrevBlock = 123\n         assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n \n+        self.log.info('submitheader tests')\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))\n+\n+        block.solve()\n+\n+        def chain_tip(b_hash, *, status='headers-only', branchlen=1):\n+            return {'hash': b_hash, 'height': 202, 'branchlen': branchlen, 'status': status}\n+\n+        assert chain_tip(block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(block.serialize()))\n+        assert chain_tip(block.hash) in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(block).serialize()))  # Noop\n+        assert chain_tip(block.hash) in node.getchaintips()\n+\n+        bad_block = copy.deepcopy(block)\n+        bad_block.hashMerkleRoot += 2\n+        bad_block.solve()\n+        assert chain_tip(bad_block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block).serialize()))\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+        # Should still reject invalid blocks, even if we have the header:\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block.serialize())), 'bad-txnmrklroot')\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+        # We know the header for this invalid block, so should just return early without error:\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block).serialize()))\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx[0].nLockTime = 2**32 - 1\n+        bad_block.vtx[0].rehash()\n+        bad_block.hashMerkleRoot = bad_block.calc_merkle_root()\n+        bad_block.solve()\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block.serialize())), 'bad-txns-nonfinal')\n+        # Build a \"good\" block on top of the submitted bad block\n+        bad_block2 = copy.deepcopy(block)\n+        bad_block2.hashPrevBlock = bad_block.sha256\n+        bad_block2.solve()\n+        assert_raises_rpc_error(-25, 'bad-prevblk', lambda: node.submitheader(hexdata=b2x(CBlockHeader(bad_block2).serialize())))",
    "path": "test/functional/mining_basic.py",
    "position": null,
    "original_position": 75,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Normal way we do this is:\r\n\r\n```python\r\n        assert_raises_rpc_error(-25, 'bad-prevblk', node.submitheader, b2x(CBlockHeader(bad_block2).serialize()))\r\n```\r\n\r\nAny reason you've chosen to use a lambda?",
    "created_at": "2018-06-11T14:53:15Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194433216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194433216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194433216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194433216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 180,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194442961",
    "pull_request_review_id": 127599009,
    "id": 194442961,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDQ0Mjk2MQ==",
    "diff_hunk": "@@ -751,20 +748,51 @@ static UniValue submitblock(const JSONRPCRequest& request)\n \n     submitblock_StateCatcher sc(block.GetHash());\n     RegisterValidationInterface(&sc);\n-    bool fAccepted = ProcessNewBlock(Params(), blockptr, true, nullptr);\n+    ProcessNewBlock(Params(), blockptr, true, nullptr);\n     UnregisterValidationInterface(&sc);\n-    if (fBlockPresent) {\n-        if (fAccepted && !sc.found) {\n-            return \"duplicate-inconclusive\";\n-        }\n-        return \"duplicate\";\n-    }\n     if (!sc.found) {\n         return \"inconclusive\";\n     }\n     return BIP22ValidationResult(sc.state);\n }\n \n+static UniValue submitheader(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"submitheader \\\"hexdata\\\"\\n\"\n+            \"\\nDecode the given hexdata as a header and submit it as a candidate chain tip if valid.\"\n+            \"\\nThrows when the header is invalid.\\n\"\n+            \"\\nArguments\\n\"\n+            \"1. \\\"hexdata\\\"        (string, required) the hex-encoded block header data\\n\"\n+            \"\\nResult:\\n\"\n+            \"None\"\n+            \"\\nExamples:\\n\" +\n+            HelpExampleCli(\"submitheader\", \"\\\"aabbcc\\\"\") +\n+            HelpExampleRpc(\"submitheader\", \"\\\"aabbcc\\\"\"));\n+    }\n+\n+    CBlockHeader h;\n+    if (!DecodeHexBlockHeader(h, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block header decode failed\");\n+    }\n+    {\n+        LOCK(cs_main);\n+        if (LookupBlockIndex(h.GetHash())) return NullUniValue;",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it'd be slightly nicer to have a return value passed to the user, if only to differentiate between whether the header was already in the block index or if it newly added to the block index.",
    "created_at": "2018-06-11T15:19:02Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194442961",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194442961"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194442961"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194442961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 789,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194446317",
    "pull_request_review_id": 127599009,
    "id": 194446317,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDQ0NjMxNw==",
    "diff_hunk": "@@ -131,5 +141,61 @@ def run_test(self):\n         bad_block.hashPrevBlock = 123\n         assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n \n+        self.log.info('submitheader tests')\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))\n+\n+        block.solve()\n+\n+        def chain_tip(b_hash, *, status='headers-only', branchlen=1):\n+            return {'hash': b_hash, 'height': 202, 'branchlen': branchlen, 'status': status}\n+\n+        assert chain_tip(block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(block.serialize()))\n+        assert chain_tip(block.hash) in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(block).serialize()))  # Noop\n+        assert chain_tip(block.hash) in node.getchaintips()\n+",
    "path": "test/functional/mining_basic.py",
    "position": 48,
    "original_position": 51,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "perhaps test submitting a block header that isn't the most-work tip (ie a fork from some earlier block)",
    "created_at": "2018-06-11T15:28:34Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194446317",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194446317"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194446317"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194446317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 156,
    "original_line": 156,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194451644",
    "pull_request_review_id": 127626362,
    "id": 194451644,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDQ1MTY0NA==",
    "diff_hunk": "@@ -131,5 +141,61 @@ def run_test(self):\n         bad_block.hashPrevBlock = 123\n         assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n \n+        self.log.info('submitheader tests')\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))\n+\n+        block.solve()\n+\n+        def chain_tip(b_hash, *, status='headers-only', branchlen=1):\n+            return {'hash': b_hash, 'height': 202, 'branchlen': branchlen, 'status': status}\n+\n+        assert chain_tip(block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(block.serialize()))\n+        assert chain_tip(block.hash) in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(block).serialize()))  # Noop\n+        assert chain_tip(block.hash) in node.getchaintips()\n+\n+        bad_block = copy.deepcopy(block)\n+        bad_block.hashMerkleRoot += 2\n+        bad_block.solve()\n+        assert chain_tip(bad_block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block).serialize()))\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+        # Should still reject invalid blocks, even if we have the header:\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block.serialize())), 'bad-txnmrklroot')\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+        # We know the header for this invalid block, so should just return early without error:\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block).serialize()))\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx[0].nLockTime = 2**32 - 1\n+        bad_block.vtx[0].rehash()\n+        bad_block.hashMerkleRoot = bad_block.calc_merkle_root()\n+        bad_block.solve()\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block.serialize())), 'bad-txns-nonfinal')\n+        # Build a \"good\" block on top of the submitted bad block\n+        bad_block2 = copy.deepcopy(block)\n+        bad_block2.hashPrevBlock = bad_block.sha256\n+        bad_block2.solve()\n+        assert_raises_rpc_error(-25, 'bad-prevblk', lambda: node.submitheader(hexdata=b2x(CBlockHeader(bad_block2).serialize())))",
    "path": "test/functional/mining_basic.py",
    "position": null,
    "original_position": 75,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I prefer to use named arguments",
    "created_at": "2018-06-11T15:43:44Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194451644",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194451644"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194451644"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194451644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 180,
    "side": "RIGHT",
    "in_reply_to_id": 194433216
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194454637",
    "pull_request_review_id": 127630048,
    "id": 194454637,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDQ1NDYzNw==",
    "diff_hunk": "@@ -131,5 +141,61 @@ def run_test(self):\n         bad_block.hashPrevBlock = 123\n         assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n \n+        self.log.info('submitheader tests')\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))\n+\n+        block.solve()\n+\n+        def chain_tip(b_hash, *, status='headers-only', branchlen=1):\n+            return {'hash': b_hash, 'height': 202, 'branchlen': branchlen, 'status': status}\n+\n+        assert chain_tip(block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(block.serialize()))\n+        assert chain_tip(block.hash) in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(block).serialize()))  # Noop\n+        assert chain_tip(block.hash) in node.getchaintips()\n+\n+        bad_block = copy.deepcopy(block)\n+        bad_block.hashMerkleRoot += 2\n+        bad_block.solve()\n+        assert chain_tip(bad_block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block).serialize()))\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+        # Should still reject invalid blocks, even if we have the header:\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block.serialize())), 'bad-txnmrklroot')\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+        # We know the header for this invalid block, so should just return early without error:\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block).serialize()))\n+        assert chain_tip(bad_block.hash) in node.getchaintips()\n+\n+        bad_block = copy.deepcopy(block)\n+        bad_block.vtx[0].nLockTime = 2**32 - 1\n+        bad_block.vtx[0].rehash()\n+        bad_block.hashMerkleRoot = bad_block.calc_merkle_root()\n+        bad_block.solve()\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block.serialize())), 'bad-txns-nonfinal')\n+        # Build a \"good\" block on top of the submitted bad block\n+        bad_block2 = copy.deepcopy(block)\n+        bad_block2.hashPrevBlock = bad_block.sha256\n+        bad_block2.solve()\n+        assert_raises_rpc_error(-25, 'bad-prevblk', lambda: node.submitheader(hexdata=b2x(CBlockHeader(bad_block2).serialize())))",
    "path": "test/functional/mining_basic.py",
    "position": null,
    "original_position": 75,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should work:\r\n```python\r\nassert_raises_rpc_error(-25, 'bad-prevblk', node.submitheader, hexdata=b2x(CBlockHeader(bad_block2).serialize()))\r\n```\r\n",
    "created_at": "2018-06-11T15:52:32Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194454637",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194454637"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194454637"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194454637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 180,
    "side": "RIGHT",
    "in_reply_to_id": 194433216
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194455315",
    "pull_request_review_id": 127630941,
    "id": 194455315,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDQ1NTMxNQ==",
    "diff_hunk": "@@ -751,20 +748,51 @@ static UniValue submitblock(const JSONRPCRequest& request)\n \n     submitblock_StateCatcher sc(block.GetHash());\n     RegisterValidationInterface(&sc);\n-    bool fAccepted = ProcessNewBlock(Params(), blockptr, true, nullptr);\n+    ProcessNewBlock(Params(), blockptr, true, nullptr);\n     UnregisterValidationInterface(&sc);\n-    if (fBlockPresent) {\n-        if (fAccepted && !sc.found) {\n-            return \"duplicate-inconclusive\";\n-        }\n-        return \"duplicate\";\n-    }\n     if (!sc.found) {\n         return \"inconclusive\";\n     }\n     return BIP22ValidationResult(sc.state);\n }\n \n+static UniValue submitheader(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"submitheader \\\"hexdata\\\"\\n\"\n+            \"\\nDecode the given hexdata as a header and submit it as a candidate chain tip if valid.\"\n+            \"\\nThrows when the header is invalid.\\n\"\n+            \"\\nArguments\\n\"\n+            \"1. \\\"hexdata\\\"        (string, required) the hex-encoded block header data\\n\"\n+            \"\\nResult:\\n\"\n+            \"None\"\n+            \"\\nExamples:\\n\" +\n+            HelpExampleCli(\"submitheader\", \"\\\"aabbcc\\\"\") +\n+            HelpExampleRpc(\"submitheader\", \"\\\"aabbcc\\\"\"));\n+    }\n+\n+    CBlockHeader h;\n+    if (!DecodeHexBlockHeader(h, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block header decode failed\");\n+    }\n+    {\n+        LOCK(cs_main);\n+        if (LookupBlockIndex(h.GetHash())) return NullUniValue;",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery do you see a use case for that?",
    "created_at": "2018-06-11T15:54:47Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194455315",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194455315"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194455315"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/194455315/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 789,
    "side": "RIGHT",
    "in_reply_to_id": 194442961
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201732451",
    "pull_request_review_id": 136291743,
    "id": 201732451,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTczMjQ1MQ==",
    "diff_hunk": "@@ -751,20 +748,51 @@ static UniValue submitblock(const JSONRPCRequest& request)\n \n     submitblock_StateCatcher sc(block.GetHash());\n     RegisterValidationInterface(&sc);\n-    bool fAccepted = ProcessNewBlock(Params(), blockptr, true, nullptr);\n+    ProcessNewBlock(Params(), blockptr, true, nullptr);\n     UnregisterValidationInterface(&sc);\n-    if (fBlockPresent) {\n-        if (fAccepted && !sc.found) {\n-            return \"duplicate-inconclusive\";\n-        }\n-        return \"duplicate\";\n-    }\n     if (!sc.found) {\n         return \"inconclusive\";\n     }\n     return BIP22ValidationResult(sc.state);\n }\n \n+static UniValue submitheader(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"submitheader \\\"hexdata\\\"\\n\"\n+            \"\\nDecode the given hexdata as a header and submit it as a candidate chain tip if valid.\"\n+            \"\\nThrows when the header is invalid.\\n\"\n+            \"\\nArguments\\n\"\n+            \"1. \\\"hexdata\\\"        (string, required) the hex-encoded block header data\\n\"\n+            \"\\nResult:\\n\"\n+            \"None\"\n+            \"\\nExamples:\\n\" +\n+            HelpExampleCli(\"submitheader\", \"\\\"aabbcc\\\"\") +\n+            HelpExampleRpc(\"submitheader\", \"\\\"aabbcc\\\"\"));\n+    }\n+\n+    CBlockHeader h;\n+    if (!DecodeHexBlockHeader(h, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block header decode failed\");\n+    }\n+    {\n+        LOCK(cs_main);\n+        if (LookupBlockIndex(h.GetHash())) return NullUniValue;",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See the docstring above: The result is always `None` and not the return value of PNBH",
    "created_at": "2018-07-11T15:20:45Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201732451",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201732451"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201732451"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201732451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 789,
    "side": "RIGHT",
    "in_reply_to_id": 194331921
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201735402",
    "pull_request_review_id": 136295134,
    "id": 201735402,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTczNTQwMg==",
    "diff_hunk": "@@ -751,20 +748,51 @@ static UniValue submitblock(const JSONRPCRequest& request)\n \n     submitblock_StateCatcher sc(block.GetHash());\n     RegisterValidationInterface(&sc);\n-    bool fAccepted = ProcessNewBlock(Params(), blockptr, true, nullptr);\n+    ProcessNewBlock(Params(), blockptr, true, nullptr);\n     UnregisterValidationInterface(&sc);\n-    if (fBlockPresent) {\n-        if (fAccepted && !sc.found) {\n-            return \"duplicate-inconclusive\";\n-        }\n-        return \"duplicate\";\n-    }\n     if (!sc.found) {\n         return \"inconclusive\";\n     }\n     return BIP22ValidationResult(sc.state);\n }\n \n+static UniValue submitheader(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 1) {\n+        throw std::runtime_error(\n+            \"submitheader \\\"hexdata\\\"\\n\"\n+            \"\\nDecode the given hexdata as a header and submit it as a candidate chain tip if valid.\"\n+            \"\\nThrows when the header is invalid.\\n\"\n+            \"\\nArguments\\n\"\n+            \"1. \\\"hexdata\\\"        (string, required) the hex-encoded block header data\\n\"\n+            \"\\nResult:\\n\"\n+            \"None\"\n+            \"\\nExamples:\\n\" +\n+            HelpExampleCli(\"submitheader\", \"\\\"aabbcc\\\"\") +\n+            HelpExampleRpc(\"submitheader\", \"\\\"aabbcc\\\"\"));\n+    }\n+\n+    CBlockHeader h;\n+    if (!DecodeHexBlockHeader(h, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block header decode failed\");\n+    }\n+    {\n+        LOCK(cs_main);\n+        if (LookupBlockIndex(h.GetHash())) return NullUniValue;\n+        if (!LookupBlockIndex(h.hashPrevBlock)) {\n+            throw JSONRPCError(RPC_VERIFY_ERROR, \"Must submit previous header (\" + h.hashPrevBlock.GetHex() + \") first\");\n+        }\n+    }\n+\n+    CValidationState state;\n+    ProcessNewBlockHeaders({h}, state, Params(), /* ppindex */ nullptr, /* first_invalid */ nullptr);",
    "path": "src/rpc/mining.cpp",
    "position": 48,
    "original_position": 81,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That race shouldn't affect the return value.",
    "created_at": "2018-07-11T15:27:16Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201735402",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201735402"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201735402"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201735402/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 794,
    "original_line": 794,
    "side": "RIGHT",
    "in_reply_to_id": 194332068
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201748049",
    "pull_request_review_id": 136309759,
    "id": 201748049,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTc0ODA0OQ==",
    "diff_hunk": "@@ -131,5 +141,61 @@ def run_test(self):\n         bad_block.hashPrevBlock = 123\n         assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n \n+        self.log.info('submitheader tests')\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))\n+\n+        block.solve()\n+\n+        def chain_tip(b_hash, *, status='headers-only', branchlen=1):\n+            return {'hash': b_hash, 'height': 202, 'branchlen': branchlen, 'status': status}\n+\n+        assert chain_tip(block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(block.serialize()))\n+        assert chain_tip(block.hash) in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(block).serialize()))  # Noop\n+        assert chain_tip(block.hash) in node.getchaintips()\n+",
    "path": "test/functional/mining_basic.py",
    "position": 48,
    "original_position": 51,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "2595028d97fc08ea0d27c3133c44d63f3e8bbc0f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done at the end of this function",
    "created_at": "2018-07-11T15:56:45Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201748049",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201748049"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201748049"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201748049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 156,
    "original_line": 156,
    "side": "RIGHT",
    "in_reply_to_id": 194446317
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202520817",
    "pull_request_review_id": 137244133,
    "id": 202520817,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjUyMDgxNw==",
    "diff_hunk": "@@ -131,5 +138,67 @@ def run_test(self):\n         bad_block.hashPrevBlock = 123\n         assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n \n+        self.log.info('submitheader tests')\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))\n+\n+        block.solve()\n+\n+        def chain_tip(b_hash, *, status='headers-only', branchlen=1):\n+            return {'hash': b_hash, 'height': 202, 'branchlen': branchlen, 'status': status}\n+\n+        assert chain_tip(block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(block.serialize()))\n+        assert chain_tip(block.hash) in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(block).serialize()))  # Noop\n+        assert chain_tip(block.hash) in node.getchaintips()\n+\n+        bad_block_root = copy.deepcopy(block)\n+        bad_block_root.hashMerkleRoot += 2\n+        bad_block_root.solve()\n+        assert chain_tip(bad_block_root.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block_root).serialize()))\n+        assert chain_tip(bad_block_root.hash) in node.getchaintips()\n+        # Should still reject invalid blocks, even if we have the header:\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block_root.serialize())), 'invalid')\n+        assert chain_tip(bad_block_root.hash) in node.getchaintips()\n+        # We know the header for this invalid block, so should just return early without error:\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block_root).serialize()))\n+        assert chain_tip(bad_block_root.hash) in node.getchaintips()\n+\n+        bad_block_lock = copy.deepcopy(block)\n+        bad_block_lock.vtx[0].nLockTime = 2**32 - 1\n+        bad_block_lock.vtx[0].rehash()\n+        bad_block_lock.hashMerkleRoot = bad_block_lock.calc_merkle_root()\n+        bad_block_lock.solve()\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block_lock.serialize())), 'invalid')",
    "path": "test/functional/mining_basic.py",
    "position": 67,
    "original_position": 67,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "fa7d7dd34cbd180ec9587c640078dfb7bf2ead04",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does master have a bug? This should be returning \"bad-txns-nonfinal\", not \"invalid\"...",
    "created_at": "2018-07-14T17:32:39Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r202520817",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202520817"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r202520817"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202520817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 175,
    "original_line": 175,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202522722",
    "pull_request_review_id": 137246000,
    "id": 202522722,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjUyMjcyMg==",
    "diff_hunk": "@@ -131,5 +138,67 @@ def run_test(self):\n         bad_block.hashPrevBlock = 123\n         assert_template(node, bad_block, 'inconclusive-not-best-prevblk')\n \n+        self.log.info('submitheader tests')\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='xx' * 80))\n+        assert_raises_rpc_error(-22, 'Block header decode failed', lambda: node.submitheader(hexdata='ff' * 78))\n+        assert_raises_rpc_error(-25, 'Must submit previous header', lambda: node.submitheader(hexdata='ff' * 80))\n+\n+        block.solve()\n+\n+        def chain_tip(b_hash, *, status='headers-only', branchlen=1):\n+            return {'hash': b_hash, 'height': 202, 'branchlen': branchlen, 'status': status}\n+\n+        assert chain_tip(block.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(block.serialize()))\n+        assert chain_tip(block.hash) in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(block).serialize()))  # Noop\n+        assert chain_tip(block.hash) in node.getchaintips()\n+\n+        bad_block_root = copy.deepcopy(block)\n+        bad_block_root.hashMerkleRoot += 2\n+        bad_block_root.solve()\n+        assert chain_tip(bad_block_root.hash) not in node.getchaintips()\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block_root).serialize()))\n+        assert chain_tip(bad_block_root.hash) in node.getchaintips()\n+        # Should still reject invalid blocks, even if we have the header:\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block_root.serialize())), 'invalid')\n+        assert chain_tip(bad_block_root.hash) in node.getchaintips()\n+        # We know the header for this invalid block, so should just return early without error:\n+        node.submitheader(hexdata=b2x(CBlockHeader(bad_block_root).serialize()))\n+        assert chain_tip(bad_block_root.hash) in node.getchaintips()\n+\n+        bad_block_lock = copy.deepcopy(block)\n+        bad_block_lock.vtx[0].nLockTime = 2**32 - 1\n+        bad_block_lock.vtx[0].rehash()\n+        bad_block_lock.hashMerkleRoot = bad_block_lock.calc_merkle_root()\n+        bad_block_lock.solve()\n+        assert_equal(node.submitblock(hexdata=b2x(bad_block_lock.serialize())), 'invalid')",
    "path": "test/functional/mining_basic.py",
    "position": 67,
    "original_position": 67,
    "commit_id": "fa091b001605c4481fb4eca415929a98d3478549",
    "original_commit_id": "fa7d7dd34cbd180ec9587c640078dfb7bf2ead04",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See the TODO https://github.com/bitcoin/bitcoin/blob/8803c9132a78d8182bd828a29f7051fc7688f934/src/rpc/mining.cpp#L756",
    "created_at": "2018-07-14T18:57:45Z",
    "updated_at": "2018-08-13T18:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r202522722",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202522722"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13399#discussion_r202522722"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13399"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202522722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 175,
    "original_line": 175,
    "side": "RIGHT",
    "in_reply_to_id": 202520817
  }
]