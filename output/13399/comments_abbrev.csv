DrahtBot,2018-06-05T17:23:35Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13945 (Refactoring CRPCCommand with enum category by isghe)\n* #13815 (util: Add [[nodiscard]] to all {Decode,Parse}[...](...) functions returning bool by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideall",https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-394792508,394792508,
laanwj,2018-06-05T17:27:58Z,Your OP is empty - can you provide rationale what this is to be used for?,https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-394793982,394793982,
TheBlueMatt,2018-06-05T17:31:04Z,"I asked for this as a part of my BetterHash mining protocol work, however I've also wanted this at several points in order to be able to implement chain-sync logic outside of bitcoind over RPC. You'd need this or something like it to do headers-first sync in such a system.",https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-394794918,394794918,
jnewbery,2018-06-20T16:31:34Z,#13439 has been merged. Is this PR ready for rebase and rereview?,https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-398813907,398813907,
sipa,2018-07-13T22:12:13Z,"utACK fa7d7dd34cbd180ec9587c640078dfb7bf2ead04.\n\nHaving this functionality can't hurt, as it available with identical semantics via P2P anyway.\n\nI have no opinion about the test code style.",https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-404966770,404966770,
luke-jr,2018-07-14T17:33:13Z,Please rename either the PR or the RPC method to match the other...,https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-405038140,405038140,
promag,2018-07-14T21:37:43Z,utACK fa7d7dd.,https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-405051511,405051511,
MarcoFalke,2018-08-13T18:32:58Z,"Rebased. Only conflict was in tests, no other changes.",https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-412619156,412619156,
laanwj,2018-08-15T15:51:46Z,utACK fa091b001605c4481fb4eca415929a98d3478549,https://github.com/bitcoin/bitcoin/pull/13399#issuecomment-413242107,413242107,
promag,2018-06-05T17:34:35Z,"Commit ""rpc: Expose ProcessNewBlockHeaders""\n\nThis should be in commit ""doc: Rewrite some validation doc to be machine-readable:"".",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193158690,193158690,src/validation.h
promag,2018-06-05T17:34:50Z,"Commit ""rpc: Expose ProcessNewBlockHeaders""\n\nThis should be in commit ""doc: Rewrite some validation doc to be machine-readable:"".",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193158756,193158756,src/validation.h
promag,2018-06-05T17:36:59Z,Could be removed?,https://github.com/bitcoin/bitcoin/pull/13399#discussion_r193159384,193159384,src/validation.h
promag,2018-06-11T08:45:32Z,"nit, could include the previous hash.",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194330173,194330173,test/functional/mining_basic.py
promag,2018-06-11T08:51:42Z,These verifications are done in `ProcessNewBlockHeaders` -> `CChainState::AcceptBlockHeader`. Could use `ProcessNewBlockHeaders` return value.,https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194331921,194331921,src/rpc/mining.cpp
promag,2018-06-11T08:52:06Z,"Since the lock is released above, there is a point where the block can be processed in between.",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194332068,194332068,src/rpc/mining.cpp
jnewbery,2018-06-11T14:42:15Z,"supernit: you remove this text in commit _doc: Rewrite some validation doc to be machine-readable_, and then remove the lines in commit _rpc: Expose ProcessNewBlockHeaders_. Just remove the lines in the first commit.\n\nSame for `ProcessNewBlockHeaders` comment below.",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194429120,194429120,src/validation.h
jnewbery,2018-06-11T14:43:00Z,"Can just use:\n\n```python\nfrom test_framework.util import (\n    assert_equal,\n    assert_raises_rpc_error,\n    bytes_to_hex_str as b2x,\n+)\n```",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194429410,194429410,test/functional/mining_basic.py
jnewbery,2018-06-11T14:53:15Z,"Normal way we do this is:\n\n```python\n        assert_raises_rpc_error(-25, 'bad-prevblk', node.submitheader, b2x(CBlockHeader(bad_block2).serialize()))\n```\n\nAny reason you've chosen to use a lambda?",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194433216,194433216,test/functional/mining_basic.py
jnewbery,2018-06-11T15:19:02Z,"I think it'd be slightly nicer to have a return value passed to the user, if only to differentiate between whether the header was already in the block index or if it newly added to the block index.",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194442961,194442961,src/rpc/mining.cpp
jnewbery,2018-06-11T15:28:34Z,perhaps test submitting a block header that isn't the most-work tip (ie a fork from some earlier block),https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194446317,194446317,test/functional/mining_basic.py
MarcoFalke,2018-06-11T15:43:44Z,I prefer to use named arguments,https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194451644,194451644,test/functional/mining_basic.py
promag,2018-06-11T15:52:32Z,"This should work:\n```python\nassert_raises_rpc_error(-25, 'bad-prevblk', node.submitheader, hexdata=b2x(CBlockHeader(bad_block2).serialize()))\n```\n",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194454637,194454637,test/functional/mining_basic.py
promag,2018-06-11T15:54:47Z,@jnewbery do you see a use case for that?,https://github.com/bitcoin/bitcoin/pull/13399#discussion_r194455315,194455315,src/rpc/mining.cpp
MarcoFalke,2018-07-11T15:20:45Z,See the docstring above: The result is always `None` and not the return value of PNBH,https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201732451,201732451,src/rpc/mining.cpp
MarcoFalke,2018-07-11T15:27:16Z,That race shouldn't affect the return value.,https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201735402,201735402,src/rpc/mining.cpp
MarcoFalke,2018-07-11T15:56:45Z,Done at the end of this function,https://github.com/bitcoin/bitcoin/pull/13399#discussion_r201748049,201748049,test/functional/mining_basic.py
luke-jr,2018-07-14T17:32:39Z,"Does master have a bug? This should be returning ""bad-txns-nonfinal"", not ""invalid""...",https://github.com/bitcoin/bitcoin/pull/13399#discussion_r202520817,202520817,test/functional/mining_basic.py
MarcoFalke,2018-07-14T18:57:45Z,See the TODO https://github.com/bitcoin/bitcoin/blob/8803c9132a78d8182bd828a29f7051fc7688f934/src/rpc/mining.cpp#L756,https://github.com/bitcoin/bitcoin/pull/13399#discussion_r202522722,202522722,test/functional/mining_basic.py
