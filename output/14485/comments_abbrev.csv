meshcollider,2018-10-15T12:33:54Z,"Concept ACK, would be good to hear from @eklitzke why the original was closed though",https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-429835730,429835730,
laanwj,2018-10-18T10:16:17Z,"Concept ACK though I'd really like to see benchmarks for changes like this, to know if this has any impact in practice worth making the risk/complication of the change.",https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-430954777,430954777,
jgarzik,2018-10-18T13:37:25Z,"Probably worthing having -- rough concept ACK -- however:\n\n* The double-lseek will be slower than fstat() on some networked or detachable filesystems.\n\n* If close-and-uncache is used on just-written-to files, this action is a no-op unless a sync (fdatasync etc.) preceded it.\n\n* Definitely worth benchmarking on multiple filesystems to see the positive or negative value of this change.",https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-431011401,431011401,
luke-jr,2019-02-11T15:33:49Z,Rebased and addressed @laanwj's function rename request.,https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-462371380,462371380,
DrahtBot,2019-03-23T07:11:17Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20839 (fuzz: Avoid extraneous copy of input data, using Span<> by MarcoFalke)\n* #20464 (refactor: Treat CDataStream byte",https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-475846565,475846565,
DrahtBot,2019-09-30T12:54:46Z,"<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-536547749,536547749,
luke-jr,2019-10-13T22:24:23Z,Rebased,https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-541465570,541465570,
luke-jr,2020-05-07T21:09:26Z,Rebased & comments addressed,https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-625498985,625498985,
DrahtBot,2021-02-01T15:17:04Z,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-770931891,770931891,
practicalswift,2021-02-01T15:22:27Z,"Adding to the three previous requests for benchmarks:\n\nDo we have any benchmarks showing the practical gains in swiftness? :)",https://github.com/bitcoin/bitcoin/pull/14485#issuecomment-770935958,770935958,
laanwj,2018-10-18T10:15:23Z,"""discard"" sounds to me as if writes to the file will be discarded, too\nmaybe `CloseAndUncache`?",https://github.com/bitcoin/bitcoin/pull/14485#discussion_r226248490,226248490,src/util.h
practicalswift,2019-02-13T10:57:47Z,Move `close:` inside `#if ‚Ä¶ #endif`?,https://github.com/bitcoin/bitcoin/pull/14485#discussion_r256344052,256344052,src/util/system.cpp
luke-jr,2019-10-13T17:17:15Z,Replaced goto with nested ifs.,https://github.com/bitcoin/bitcoin/pull/14485#discussion_r334286955,334286955,src/util/system.cpp
vasild,2020-03-27T14:15:40Z,"I think we shouldn't remove this. We are setting `_POSIX_C_SOURCE` in order to ask the system to provide the functions. [feature_test_macros(7)](https://linux.die.net/man/7/feature_test_macros) explains that indeed we are supposed to set it ourselves (not just observe its default value). And, of course, set it before including the system headers.\n\nFurther, we should consider OSes that will not",https://github.com/bitcoin/bitcoin/pull/14485#discussion_r399295319,399295319,src/util/system.cpp
vasild,2020-03-27T14:19:53Z,"We can avoid seeking to the end of the file and back just to get the file size. Supplying `0` as the 3rd argument will suffice. From [posix_fadvise(2)](https://linux.die.net/man/2/posix_fadvise):\n\n> ... for len bytes (or until the end of the file if len is 0)",https://github.com/bitcoin/bitcoin/pull/14485#discussion_r399298167,399298167,src/util/system.cpp
vasild,2020-03-27T14:24:05Z,"nit: I like the `const`, but it is missing from variables in `AdviseSequential()`, maybe add it there too?",https://github.com/bitcoin/bitcoin/pull/14485#discussion_r399301118,399301118,src/util/system.cpp
vasild,2020-03-27T14:34:35Z,"The typecast is not needed as `off_t` is ""[extended signed integral](https://pubs.opengroup.org/onlinepubs/7908799/xsh/systypes.h.html)"".",https://github.com/bitcoin/bitcoin/pull/14485#discussion_r399308963,399308963,src/util/system.cpp
luke-jr,2020-05-07T21:05:22Z,Prefer to stick to the manpage.,https://github.com/bitcoin/bitcoin/pull/14485#discussion_r421793753,421793753,src/util/system.cpp
