[
  {
    "sha": "a7d7a77c7c070108b19f980010858f77954b7194",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2Q3YTc3YzdjMDcwMTA4YjE5Zjk4MDAxMDg1OGY3Nzk1NGI3MTk0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-04-29T17:44:42Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:45:11Z"
      },
      "message": "Drop OpenSSL PRNG, always use OS entropy",
      "tree": {
        "sha": "e4b3de74d64f1e1f3843d332894a2be6029ba683",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4b3de74d64f1e1f3843d332894a2be6029ba683"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7d7a77c7c070108b19f980010858f77954b7194",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7d7a77c7c070108b19f980010858f77954b7194",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7d7a77c7c070108b19f980010858f77954b7194",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7d7a77c7c070108b19f980010858f77954b7194/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c5e6c94caf40395e031fbde44a0cca46fdd76ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c5e6c94caf40395e031fbde44a0cca46fdd76ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c5e6c94caf40395e031fbde44a0cca46fdd76ec"
      }
    ],
    "stats": {
      "total": 95,
      "additions": 39,
      "deletions": 56
    },
    "files": [
      {
        "sha": "e5a45d63be47609357bb9f368afc7574747939e8",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 52,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d7a77c7c070108b19f980010858f77954b7194/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d7a77c7c070108b19f980010858f77954b7194/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=a7d7a77c7c070108b19f980010858f77954b7194",
        "patch": "@@ -32,8 +32,8 @@\n #include <sys/sysctl.h>\n #endif\n \n-#include <openssl/err.h>\n-#include <openssl/rand.h>\n+#include <thread>\n+#include <mutex>\n \n static void RandFailure()\n {\n@@ -54,54 +54,6 @@ static inline int64_t GetPerformanceCounter()\n     return nCounter;\n }\n \n-void RandAddSeed()\n-{\n-    // Seed with CPU performance counter\n-    int64_t nCounter = GetPerformanceCounter();\n-    RAND_add(&nCounter, sizeof(nCounter), 1.5);\n-    memory_cleanse((void*)&nCounter, sizeof(nCounter));\n-}\n-\n-static void RandAddSeedPerfmon()\n-{\n-    RandAddSeed();\n-\n-#ifdef WIN32\n-    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n-    // Seed with the entire set of perfmon data\n-\n-    // This can take up to 2 seconds, so only do it every 10 minutes\n-    static int64_t nLastPerfmon;\n-    if (GetTime() < nLastPerfmon + 10 * 60)\n-        return;\n-    nLastPerfmon = GetTime();\n-\n-    std::vector<unsigned char> vData(250000, 0);\n-    long ret = 0;\n-    unsigned long nSize = 0;\n-    const size_t nMaxSize = 10000000; // Bail out at more than 10MB of performance data\n-    while (true) {\n-        nSize = vData.size();\n-        ret = RegQueryValueExA(HKEY_PERFORMANCE_DATA, \"Global\", NULL, NULL, vData.data(), &nSize);\n-        if (ret != ERROR_MORE_DATA || vData.size() >= nMaxSize)\n-            break;\n-        vData.resize(std::max((vData.size() * 3) / 2, nMaxSize)); // Grow size of buffer exponentially\n-    }\n-    RegCloseKey(HKEY_PERFORMANCE_DATA);\n-    if (ret == ERROR_SUCCESS) {\n-        RAND_add(vData.data(), nSize, nSize / 100.0);\n-        memory_cleanse(vData.data(), nSize);\n-        LogPrint(BCLog::RAND, \"%s: %lu bytes\\n\", __func__, nSize);\n-    } else {\n-        static bool warned = false; // Warn only once\n-        if (!warned) {\n-            LogPrintf(\"%s: Warning: RegQueryValueExA(HKEY_PERFORMANCE_DATA) failed with code %i\\n\", __func__, ret);\n-            warned = true;\n-        }\n-    }\n-#endif\n-}\n-\n #ifndef WIN32\n /** Fallback: get 32 bytes of system entropy from /dev/urandom. The most\n  * compatible way to get cryptographic randomness on UNIX-ish platforms.\n@@ -185,11 +137,45 @@ void GetOSRand(unsigned char *ent32)\n #endif\n }\n \n+static unsigned char entropy[32] = {0};\n+static std::mutex cs_entropy;\n+\n void GetRandBytes(unsigned char* buf, int num)\n {\n-    if (RAND_bytes(buf, num) != 1) {\n-        RandFailure();\n+    unsigned char seed32[32];\n+\n+    // Entropy sources\n+    int64_t counter = GetPerformanceCounter(); // Time\n+    int64_t* pcounter = &counter; // Stack frame pointer (thread specific)\n+    unsigned char os_entropy[NUM_OS_RANDOM_BYTES]; // OS entropy\n+    GetOSRand(os_entropy);\n+\n+    // Process entropy\n+    CSHA512 hasher;\n+    hasher.Write(os_entropy, NUM_OS_RANDOM_BYTES);\n+    memory_cleanse(os_entropy, NUM_OS_RANDOM_BYTES);\n+    hasher.Write((const unsigned char*)&counter, sizeof(counter));\n+    hasher.Write((const unsigned char*)&pcounter, sizeof(pcounter));\n+\n+    {\n+        // Mix in global entropy, and update it.\n+        std::unique_lock<std::mutex> lock(cs_entropy);\n+        hasher.Write(entropy, 32);\n+        unsigned char out[64];\n+        hasher.Finalize(out);\n+        memcpy(seed32, out, 32);\n+        memcpy(entropy, out + 32, 32);\n+        memory_cleanse(out, 64);\n+    }\n+\n+    // Produce output\n+    if (num <= 32) {\n+        memcpy(buf, seed32, num);\n+    } else {\n+       ChaCha20 prng(seed32, 32);\n+       prng.Output(buf, num);\n     }\n+    memory_cleanse(seed32, 32);\n }\n \n void GetStrongRandBytes(unsigned char* out, int num)"
      },
      {
        "sha": "de47dc3bf68632580a6e85cd1927c9429ddc868c",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d7a77c7c070108b19f980010858f77954b7194/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d7a77c7c070108b19f980010858f77954b7194/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=a7d7a77c7c070108b19f980010858f77954b7194",
        "patch": "@@ -12,11 +12,8 @@\n \n #include <stdint.h>\n \n-/* Seed OpenSSL PRNG with additional entropy data */\n-void RandAddSeed();\n-\n /**\n- * Functions to gather random data via the OpenSSL PRNG\n+ * Functions to gather secure random data.\n  */\n void GetRandBytes(unsigned char* buf, int num);\n uint64_t GetRand(uint64_t nMax);"
      }
    ]
  },
  {
    "sha": "27c183253e9f23921f7cdfce712d5ed522a4d795",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2MxODMyNTNlOWYyMzkyMWY3Y2RmY2U3MTJkNWVkNTIyYTRkNzk1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-04-29T17:43:56Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:45:11Z"
      },
      "message": "Drop GetStrongRandBytes, use GetRandBytes everywhere",
      "tree": {
        "sha": "d3f7926b7b9e8799ece8097bdbd307b84e1fe43b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3f7926b7b9e8799ece8097bdbd307b84e1fe43b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27c183253e9f23921f7cdfce712d5ed522a4d795",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27c183253e9f23921f7cdfce712d5ed522a4d795",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27c183253e9f23921f7cdfce712d5ed522a4d795",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27c183253e9f23921f7cdfce712d5ed522a4d795/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7d7a77c7c070108b19f980010858f77954b7194",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7d7a77c7c070108b19f980010858f77954b7194",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7d7a77c7c070108b19f980010858f77954b7194"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 3,
      "deletions": 30
    },
    "files": [
      {
        "sha": "2986e1a2e1b5f65342297c0ef11283974e4d3683",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27c183253e9f23921f7cdfce712d5ed522a4d795/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27c183253e9f23921f7cdfce712d5ed522a4d795/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=27c183253e9f23921f7cdfce712d5ed522a4d795",
        "patch": "@@ -125,7 +125,7 @@ bool CKey::Check(const unsigned char *vch) {\n \n void CKey::MakeNewKey(bool fCompressedIn) {\n     do {\n-        GetStrongRandBytes(keydata.data(), keydata.size());\n+        GetRandBytes(keydata.data(), keydata.size());\n     } while (!Check(keydata.data()));\n     fValid = true;\n     fCompressed = fCompressedIn;"
      },
      {
        "sha": "c82097b37e622e6eadf6ff710ae301078bcf143d",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27c183253e9f23921f7cdfce712d5ed522a4d795/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27c183253e9f23921f7cdfce712d5ed522a4d795/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=27c183253e9f23921f7cdfce712d5ed522a4d795",
        "patch": "@@ -178,27 +178,6 @@ void GetRandBytes(unsigned char* buf, int num)\n     memory_cleanse(seed32, 32);\n }\n \n-void GetStrongRandBytes(unsigned char* out, int num)\n-{\n-    assert(num <= 32);\n-    CSHA512 hasher;\n-    unsigned char buf[64];\n-\n-    // First source: OpenSSL's RNG\n-    RandAddSeedPerfmon();\n-    GetRandBytes(buf, 32);\n-    hasher.Write(buf, 32);\n-\n-    // Second source: OS RNG\n-    GetOSRand(buf);\n-    hasher.Write(buf, 32);\n-\n-    // Produce output\n-    hasher.Finalize(buf);\n-    memcpy(out, buf, num);\n-    memory_cleanse(buf, 64);\n-}\n-\n uint64_t GetRand(uint64_t nMax)\n {\n     if (nMax == 0)"
      },
      {
        "sha": "0bd733a9dc5aca066aba31cd37a2a5de969b7cfa",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27c183253e9f23921f7cdfce712d5ed522a4d795/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27c183253e9f23921f7cdfce712d5ed522a4d795/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=27c183253e9f23921f7cdfce712d5ed522a4d795",
        "patch": "@@ -20,12 +20,6 @@ uint64_t GetRand(uint64_t nMax);\n int GetRandInt(int nMax);\n uint256 GetRandHash();\n \n-/**\n- * Function to gather random data from multiple sources, failing whenever any\n- * of those source fail to provide a result.\n- */\n-void GetStrongRandBytes(unsigned char* buf, int num);\n-\n /**\n  * Fast randomness source. This is seeded once with secure random data, but\n  * is completely deterministic and insecure after that."
      },
      {
        "sha": "c3ada7107747ed636257cb4379ef3ffe1bcb4eb1",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27c183253e9f23921f7cdfce712d5ed522a4d795/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27c183253e9f23921f7cdfce712d5ed522a4d795/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=27c183253e9f23921f7cdfce712d5ed522a4d795",
        "patch": "@@ -556,12 +556,12 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n     CKeyingMaterial _vMasterKey;\n \n     _vMasterKey.resize(WALLET_CRYPTO_KEY_SIZE);\n-    GetStrongRandBytes(&_vMasterKey[0], WALLET_CRYPTO_KEY_SIZE);\n+    GetRandBytes(&_vMasterKey[0], WALLET_CRYPTO_KEY_SIZE);\n \n     CMasterKey kMasterKey;\n \n     kMasterKey.vchSalt.resize(WALLET_CRYPTO_SALT_SIZE);\n-    GetStrongRandBytes(&kMasterKey.vchSalt[0], WALLET_CRYPTO_SALT_SIZE);\n+    GetRandBytes(&kMasterKey.vchSalt[0], WALLET_CRYPTO_SALT_SIZE);\n \n     CCrypter crypter;\n     int64_t nStartTime = GetTimeMillis();"
      }
    ]
  },
  {
    "sha": "783d01d34119bd78ceb1f7335050fea831164fc8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODNkMDFkMzQxMTliZDc4Y2ViMWY3MzM1MDUwZmVhODMxMTY0ZmM4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-04-29T17:45:12Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:45:12Z"
      },
      "message": "Use explicit zeroing instead of OpenSSL cleanse",
      "tree": {
        "sha": "3c9a54e37142a3176916ef97e47dabfa6dd86f7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c9a54e37142a3176916ef97e47dabfa6dd86f7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/783d01d34119bd78ceb1f7335050fea831164fc8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/783d01d34119bd78ceb1f7335050fea831164fc8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/783d01d34119bd78ceb1f7335050fea831164fc8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/783d01d34119bd78ceb1f7335050fea831164fc8/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27c183253e9f23921f7cdfce712d5ed522a4d795",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27c183253e9f23921f7cdfce712d5ed522a4d795",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27c183253e9f23921f7cdfce712d5ed522a4d795"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7e0a8696340c5b3aafa2c2ed80560a3dc86134e6",
        "filename": "src/support/cleanse.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/783d01d34119bd78ceb1f7335050fea831164fc8/src/support/cleanse.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/783d01d34119bd78ceb1f7335050fea831164fc8/src/support/cleanse.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/cleanse.cpp?ref=783d01d34119bd78ceb1f7335050fea831164fc8",
        "patch": "@@ -4,10 +4,10 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"cleanse.h\"\n-\n-#include <openssl/crypto.h>\n+#include <string.h>\n \n void memory_cleanse(void *ptr, size_t len)\n {\n-    OPENSSL_cleanse(ptr, len);\n+    void *(*volatile const volatile_memset)(void *, int, size_t) = memset;\n+    volatile_memset(ptr, 0, len);\n }"
      }
    ]
  },
  {
    "sha": "ef53113b2ed60bf7d36a406968762227bde87c5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjUzMTEzYjJlZDYwYmY3ZDM2YTQwNjk2ODc2MjIyN2JkZTg3YzVh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-04-29T17:45:25Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:45:12Z"
      },
      "message": "Remove OpenSSL initialization",
      "tree": {
        "sha": "9050fe85a5f43f8bd66b642cc61f375d09381ece",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9050fe85a5f43f8bd66b642cc61f375d09381ece"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef53113b2ed60bf7d36a406968762227bde87c5a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef53113b2ed60bf7d36a406968762227bde87c5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef53113b2ed60bf7d36a406968762227bde87c5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef53113b2ed60bf7d36a406968762227bde87c5a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "783d01d34119bd78ceb1f7335050fea831164fc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/783d01d34119bd78ceb1f7335050fea831164fc8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/783d01d34119bd78ceb1f7335050fea831164fc8"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 0,
      "deletions": 51
    },
    "files": [
      {
        "sha": "94d12caa216dbb7a51217a28b4ca597d716ad0ad",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 51,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef53113b2ed60bf7d36a406968762227bde87c5a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef53113b2ed60bf7d36a406968762227bde87c5a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=ef53113b2ed60bf7d36a406968762227bde87c5a",
        "patch": "@@ -84,9 +84,6 @@\n #include <boost/program_options/detail/config_file.hpp>\n #include <boost/program_options/parsers.hpp>\n #include <boost/thread.hpp>\n-#include <openssl/crypto.h>\n-#include <openssl/rand.h>\n-#include <openssl/conf.h>\n \n \n const char * const BITCOIN_CONF_FILENAME = \"bitcoin.conf\";\n@@ -108,54 +105,6 @@ CTranslationInterface translationInterface;\n /** Log categories bitfield. */\n std::atomic<uint32_t> logCategories(0);\n \n-/** Init OpenSSL library multithreading support */\n-static std::unique_ptr<CCriticalSection[]> ppmutexOpenSSL;\n-void locking_callback(int mode, int i, const char* file, int line) NO_THREAD_SAFETY_ANALYSIS\n-{\n-    if (mode & CRYPTO_LOCK) {\n-        ENTER_CRITICAL_SECTION(ppmutexOpenSSL[i]);\n-    } else {\n-        LEAVE_CRITICAL_SECTION(ppmutexOpenSSL[i]);\n-    }\n-}\n-\n-// Singleton for wrapping OpenSSL setup/teardown.\n-class CInit\n-{\n-public:\n-    CInit()\n-    {\n-        // Init OpenSSL library multithreading support\n-        ppmutexOpenSSL.reset(new CCriticalSection[CRYPTO_num_locks()]);\n-        CRYPTO_set_locking_callback(locking_callback);\n-\n-        // OpenSSL can optionally load a config file which lists optional loadable modules and engines.\n-        // We don't use them so we don't require the config. However some of our libs may call functions\n-        // which attempt to load the config file, possibly resulting in an exit() or crash if it is missing\n-        // or corrupt. Explicitly tell OpenSSL not to try to load the file. The result for our libs will be\n-        // that the config appears to have been loaded and there are no modules/engines available.\n-        OPENSSL_no_config();\n-\n-#ifdef WIN32\n-        // Seed OpenSSL PRNG with current contents of the screen\n-        RAND_screen();\n-#endif\n-\n-        // Seed OpenSSL PRNG with performance counter\n-        RandAddSeed();\n-    }\n-    ~CInit()\n-    {\n-        // Securely erase the memory used by the PRNG\n-        RAND_cleanup();\n-        // Shutdown OpenSSL library multithreading support\n-        CRYPTO_set_locking_callback(NULL);\n-        // Clear the set of locks now to maintain symmetry with the constructor.\n-        ppmutexOpenSSL.reset();\n-    }\n-}\n-instance_of_cinit;\n-\n /**\n  * LogPrintf() has been broken a couple of times now\n  * by well-meaning people adding mutexes in the most straightforward way."
      }
    ]
  },
  {
    "sha": "ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2U0ZjIxMWQ4ZjA0M2ZhOGFmM2UxNjkxZTllMzdiNDNlNjk4ZWMx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:04:31Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:45:12Z"
      },
      "message": "Add FastRandomContext::rand256()",
      "tree": {
        "sha": "21cb1d83ece8be9ab8ff97ac96550002d50f8080",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21cb1d83ece8be9ab8ff97ac96550002d50f8080"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace4f211d8f043fa8af3e1691e9e37b43e698ec1/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef53113b2ed60bf7d36a406968762227bde87c5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef53113b2ed60bf7d36a406968762227bde87c5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef53113b2ed60bf7d36a406968762227bde87c5a"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78167a76ec3371f7cdf61f4aacf8fb7d8e16a8c3",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace4f211d8f043fa8af3e1691e9e37b43e698ec1/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace4f211d8f043fa8af3e1691e9e37b43e698ec1/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
        "patch": "@@ -212,6 +212,17 @@ void FastRandomContext::RandomSeed()\n     requires_seed = false;\n }\n \n+uint256 FastRandomContext::rand256()\n+{\n+    if (bytebuf_size < 32) {\n+        FillByteBuffer();\n+    }\n+    uint256 ret;\n+    memcpy(ret.begin(), bytebuf + 64 - bytebuf_size, 32);\n+    bytebuf_size -= 32;\n+    return ret;\n+}\n+\n FastRandomContext::FastRandomContext(const uint256& seed) : requires_seed(false), bytebuf_size(0), bitbuf_size(0)\n {\n     rng.SetKey(seed.begin(), 32);"
      },
      {
        "sha": "c3acb6f8fe79c8b7c4514a3cf95cc0a76ba4e071",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace4f211d8f043fa8af3e1691e9e37b43e698ec1/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace4f211d8f043fa8af3e1691e9e37b43e698ec1/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
        "patch": "@@ -97,6 +97,9 @@ class FastRandomContext {\n     /** Generate a random 32-bit integer. */\n     uint32_t rand32() { return randbits(32); }\n \n+    /** generate a random uint256. */\n+    uint256 rand256();\n+\n     /** Generate a random boolean. */\n     bool randbool() { return randbits(1); }\n };"
      },
      {
        "sha": "b969644f1c1f0a6ab6a184b7dbc73adac1e2004e",
        "filename": "src/test/random_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace4f211d8f043fa8af3e1691e9e37b43e698ec1/src/test/random_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace4f211d8f043fa8af3e1691e9e37b43e698ec1/src/test/random_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/random_tests.cpp?ref=ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
        "patch": "@@ -25,14 +25,17 @@ BOOST_AUTO_TEST_CASE(fastrandom_tests)\n     BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n     BOOST_CHECK_EQUAL(ctx1.rand64(), ctx2.rand64());\n     BOOST_CHECK_EQUAL(ctx1.randbits(3), ctx2.randbits(3));\n+    BOOST_CHECK(ctx1.rand256() == ctx2.rand256());\n     BOOST_CHECK_EQUAL(ctx1.randbits(7), ctx2.randbits(7));\n     BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n     BOOST_CHECK_EQUAL(ctx1.randbits(3), ctx2.randbits(3));\n+    BOOST_CHECK(ctx1.rand256() == ctx2.rand256());\n \n     // Check that a nondeterministic ones are not\n     FastRandomContext ctx3;\n     FastRandomContext ctx4;\n     BOOST_CHECK(ctx3.rand64() != ctx4.rand64()); // extremely unlikely to be equal\n+    BOOST_CHECK(ctx3.rand256() != ctx4.rand256());\n }\n \n BOOST_AUTO_TEST_CASE(fastrandom_randbits)"
      }
    ]
  },
  {
    "sha": "810926850ddc6f236a07ba420acec340064032d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTA5MjY4NTBkZGM2ZjIzNmEwN2JhNDIwYWNlYzM0MDA2NDAzMmQ3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:26:15Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:45:12Z"
      },
      "message": "Add FastRandomContext::randbytes()",
      "tree": {
        "sha": "9d9895da44111e79c7de68c54f038ca5f342bdd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d9895da44111e79c7de68c54f038ca5f342bdd6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/810926850ddc6f236a07ba420acec340064032d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/810926850ddc6f236a07ba420acec340064032d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/810926850ddc6f236a07ba420acec340064032d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/810926850ddc6f236a07ba420acec340064032d7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace4f211d8f043fa8af3e1691e9e37b43e698ec1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ace4f211d8f043fa8af3e1691e9e37b43e698ec1"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "25270b743f4d6f23ee94ed5c9090b46b74031331",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/810926850ddc6f236a07ba420acec340064032d7/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/810926850ddc6f236a07ba420acec340064032d7/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=810926850ddc6f236a07ba420acec340064032d7",
        "patch": "@@ -94,6 +94,9 @@ class FastRandomContext {\n         }\n     }\n \n+    /** Generate random bytes. */\n+    void randbytes(unsigned char* out, size_t len) { rng.Output(out, len); }\n+\n     /** Generate a random 32-bit integer. */\n     uint32_t rand32() { return randbits(32); }\n "
      }
    ]
  },
  {
    "sha": "365f352e499f1a51f6099015439655259504e217",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjVmMzUyZTQ5OWYxYTUxZjYwOTkwMTU0Mzk2NTUyNTk1MDRlMjE3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:18:41Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-05-02T18:45:12Z"
      },
      "message": "Switch all tests to FastRandomContext\n\nNo need for real OS randomness in general in tests.",
      "tree": {
        "sha": "547d89164bba0d20f6e217724799ebb23624dfc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/547d89164bba0d20f6e217724799ebb23624dfc8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/365f352e499f1a51f6099015439655259504e217",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/365f352e499f1a51f6099015439655259504e217",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/365f352e499f1a51f6099015439655259504e217",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/365f352e499f1a51f6099015439655259504e217/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "810926850ddc6f236a07ba420acec340064032d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/810926850ddc6f236a07ba420acec340064032d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/810926850ddc6f236a07ba420acec340064032d7"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 46,
      "deletions": 37
    },
    "files": [
      {
        "sha": "1469537336230eacffc67526467d821648120f48",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -15,6 +15,7 @@\n #include \"validation.h\"\n \n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n \n #include <stdint.h>\n \n@@ -129,7 +130,7 @@ BOOST_AUTO_TEST_CASE(DoS_bantime)\n CTransactionRef RandomOrphan()\n {\n     std::map<uint256, COrphanTx>::iterator it;\n-    it = mapOrphanTransactions.lower_bound(GetRandHash());\n+    it = mapOrphanTransactions.lower_bound(insecure_rand_ctx.rand256());\n     if (it == mapOrphanTransactions.end())\n         it = mapOrphanTransactions.begin();\n     return it->second.tx;\n@@ -148,7 +149,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         CMutableTransaction tx;\n         tx.vin.resize(1);\n         tx.vin[0].prevout.n = 0;\n-        tx.vin[0].prevout.hash = GetRandHash();\n+        tx.vin[0].prevout.hash = insecure_rand_ctx.rand256();\n         tx.vin[0].scriptSig << OP_1;\n         tx.vout.resize(1);\n         tx.vout[0].nValue = 1*CENT;"
      },
      {
        "sha": "88a2fb72a190da52811fcf35c9ece77e9ca1c707",
        "filename": "src/test/blockencodings_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/blockencodings_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/blockencodings_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockencodings_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -8,6 +8,7 @@\n #include \"random.h\"\n \n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n \n #include <boost/test/unit_test.hpp>\n \n@@ -30,16 +31,16 @@ static CBlock BuildBlockTestCase() {\n     block.vtx.resize(3);\n     block.vtx[0] = MakeTransactionRef(tx);\n     block.nVersion = 42;\n-    block.hashPrevBlock = GetRandHash();\n+    block.hashPrevBlock = insecure_rand_ctx.rand256();\n     block.nBits = 0x207fffff;\n \n-    tx.vin[0].prevout.hash = GetRandHash();\n+    tx.vin[0].prevout.hash = insecure_rand_ctx.rand256();\n     tx.vin[0].prevout.n = 0;\n     block.vtx[1] = MakeTransactionRef(tx);\n \n     tx.vin.resize(10);\n     for (size_t i = 0; i < tx.vin.size(); i++) {\n-        tx.vin[i].prevout.hash = GetRandHash();\n+        tx.vin[i].prevout.hash = insecure_rand_ctx.rand256();\n         tx.vin[i].prevout.n = 0;\n     }\n     block.vtx[2] = MakeTransactionRef(tx);\n@@ -283,7 +284,7 @@ BOOST_AUTO_TEST_CASE(EmptyBlockRoundTripTest)\n     block.vtx.resize(1);\n     block.vtx[0] = MakeTransactionRef(std::move(coinbase));\n     block.nVersion = 42;\n-    block.hashPrevBlock = GetRandHash();\n+    block.hashPrevBlock = insecure_rand_ctx.rand256();\n     block.nBits = 0x207fffff;\n \n     bool mutated;\n@@ -316,7 +317,7 @@ BOOST_AUTO_TEST_CASE(EmptyBlockRoundTripTest)\n \n BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BlockTransactionsRequest req1;\n-    req1.blockhash = GetRandHash();\n+    req1.blockhash = insecure_rand_ctx.rand256();\n     req1.indexes.resize(4);\n     req1.indexes[0] = 0;\n     req1.indexes[1] = 1;"
      },
      {
        "sha": "5184cf1ebb798375c44eccf57689ca07c9975ad0",
        "filename": "src/test/bloom_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/bloom_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/bloom_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bloom_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -15,6 +15,7 @@\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n \n #include <vector>\n \n@@ -463,7 +464,7 @@ BOOST_AUTO_TEST_CASE(merkle_block_4_test_update_none)\n \n static std::vector<unsigned char> RandomData()\n {\n-    uint256 r = GetRandHash();\n+    uint256 r = insecure_rand_ctx.rand256();\n     return std::vector<unsigned char>(r.begin(), r.end());\n }\n "
      },
      {
        "sha": "1db6fbba934345b5a4240cbf5b645e3ed4f9c3ff",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -7,6 +7,7 @@\n #include \"validation.h\"\n \n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n #include \"checkqueue.h\"\n #include <boost/test/unit_test.hpp>\n #include <boost/thread.hpp>\n@@ -160,7 +161,7 @@ void Correct_Queue_range(std::vector<size_t> range)\n         FakeCheckCheckCompletion::n_calls = 0;\n         CCheckQueueControl<FakeCheckCheckCompletion> control(small_queue.get());\n         while (total) {\n-            vChecks.resize(std::min(total, (size_t) GetRand(10)));\n+            vChecks.resize(std::min(total, (size_t)insecure_rand_ctx.randrange(10)));\n             total -= vChecks.size();\n             control.Add(vChecks);\n         }\n@@ -204,7 +205,7 @@ BOOST_AUTO_TEST_CASE(test_CheckQueue_Correct_Random)\n {\n     std::vector<size_t> range;\n     range.reserve(100000/1000);\n-    for (size_t i = 2; i < 100000; i += std::max((size_t)1, (size_t)GetRand(std::min((size_t)1000, ((size_t)100000) - i))))\n+    for (size_t i = 2; i < 100000; i += std::max((size_t)1, (size_t)insecure_rand_ctx.randrange(std::min((size_t)1000, ((size_t)100000) - i))))\n         range.push_back(i);\n     Correct_Queue_range(range);\n }\n@@ -224,7 +225,7 @@ BOOST_AUTO_TEST_CASE(test_CheckQueue_Catches_Failure)\n         CCheckQueueControl<FailingCheck> control(fail_queue.get());\n         size_t remaining = i;\n         while (remaining) {\n-            size_t r = GetRand(10);\n+            size_t r = insecure_rand_ctx.randrange(10);\n \n             std::vector<FailingCheck> vChecks;\n             vChecks.reserve(r);\n@@ -286,7 +287,7 @@ BOOST_AUTO_TEST_CASE(test_CheckQueue_UniqueCheck)\n     {\n         CCheckQueueControl<UniqueCheck> control(queue.get());\n         while (total) {\n-            size_t r = GetRand(10);\n+            size_t r = insecure_rand_ctx.randrange(10);\n             std::vector<UniqueCheck> vChecks;\n             for (size_t k = 0; k < r && total; k++)\n                 vChecks.emplace_back(--total);\n@@ -320,7 +321,7 @@ BOOST_AUTO_TEST_CASE(test_CheckQueue_Memory)\n         {\n             CCheckQueueControl<MemoryCheck> control(queue.get());\n             while (total) {\n-                size_t r = GetRand(10);\n+                size_t r = insecure_rand_ctx.randrange(10);\n                 std::vector<MemoryCheck> vChecks;\n                 for (size_t k = 0; k < r && total; k++) {\n                     total--;"
      },
      {
        "sha": "b53f2f8ed98ec09eab24e98dc373856e40ad75b5",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -126,7 +126,7 @@ BOOST_AUTO_TEST_CASE(coins_cache_simulation_test)\n     std::vector<uint256> txids;\n     txids.resize(NUM_SIMULATION_ITERATIONS / 8);\n     for (unsigned int i = 0; i < txids.size(); i++) {\n-        txids[i] = GetRandHash();\n+        txids[i] = insecure_rand_ctx.rand256();\n     }\n \n     for (unsigned int i = 0; i < NUM_SIMULATION_ITERATIONS; i++) {\n@@ -223,7 +223,7 @@ std::map<uint256, TxData> alltxs;\n \n TxData &FindRandomFrom(const std::set<uint256> &txidset) {\n     assert(txidset.size());\n-    std::set<uint256>::iterator txIt = txidset.lower_bound(GetRandHash());\n+    std::set<uint256>::iterator txIt = txidset.lower_bound(insecure_rand_ctx.rand256());\n     if (txIt == txidset.end()) {\n         txIt = txidset.begin();\n     }"
      },
      {
        "sha": "f769f8bbc295fe4a3e9d220d751f1634b2d761af",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -6,6 +6,7 @@\n #include \"uint256.h\"\n #include \"random.h\"\n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n \n #include <boost/assign/std/vector.hpp> // for 'operator+=()'\n #include <boost/assert.hpp>\n@@ -31,7 +32,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper)\n         fs::path ph = fs::temp_directory_path() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n         char key = 'k';\n-        uint256 in = GetRandHash();\n+        uint256 in = insecure_rand_ctx.rand256();\n         uint256 res;\n \n         // Ensure that we're doing real obfuscation when obfuscate=true\n@@ -53,11 +54,11 @@ BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         char key = 'i';\n-        uint256 in = GetRandHash();\n+        uint256 in = insecure_rand_ctx.rand256();\n         char key2 = 'j';\n-        uint256 in2 = GetRandHash();\n+        uint256 in2 = insecure_rand_ctx.rand256();\n         char key3 = 'k';\n-        uint256 in3 = GetRandHash();\n+        uint256 in3 = insecure_rand_ctx.rand256();\n \n         uint256 res;\n         CDBBatch batch(dbw);\n@@ -91,10 +92,10 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n \n         // The two keys are intentionally chosen for ordering\n         char key = 'j';\n-        uint256 in = GetRandHash();\n+        uint256 in = insecure_rand_ctx.rand256();\n         BOOST_CHECK(dbw.Write(key, in));\n         char key2 = 'k';\n-        uint256 in2 = GetRandHash();\n+        uint256 in2 = insecure_rand_ctx.rand256();\n         BOOST_CHECK(dbw.Write(key2, in2));\n \n         std::unique_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n@@ -132,7 +133,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n     // Set up a non-obfuscated wrapper to write some initial data.\n     CDBWrapper* dbw = new CDBWrapper(ph, (1 << 10), false, false, false);\n     char key = 'k';\n-    uint256 in = GetRandHash();\n+    uint256 in = insecure_rand_ctx.rand256();\n     uint256 res;\n \n     BOOST_CHECK(dbw->Write(key, in));\n@@ -155,7 +156,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n     BOOST_CHECK(!odbw.IsEmpty()); // There should be existing data\n     BOOST_CHECK(is_null_key(dbwrapper_private::GetObfuscateKey(odbw))); // The key should be an empty string\n \n-    uint256 in2 = GetRandHash();\n+    uint256 in2 = insecure_rand_ctx.rand256();\n     uint256 res3;\n  \n     // Check that we can write successfully\n@@ -174,7 +175,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n     // Set up a non-obfuscated wrapper to write some initial data.\n     CDBWrapper* dbw = new CDBWrapper(ph, (1 << 10), false, false, false);\n     char key = 'k';\n-    uint256 in = GetRandHash();\n+    uint256 in = insecure_rand_ctx.rand256();\n     uint256 res;\n \n     BOOST_CHECK(dbw->Write(key, in));\n@@ -193,7 +194,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n     BOOST_CHECK(!odbw.Read(key, res2));\n     BOOST_CHECK(!is_null_key(dbwrapper_private::GetObfuscateKey(odbw)));\n \n-    uint256 in2 = GetRandHash();\n+    uint256 in2 = insecure_rand_ctx.rand256();\n     uint256 res3;\n  \n     // Check that we can write successfully"
      },
      {
        "sha": "168b59e81991f9587d8b033b359ba40b8405af1a",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -18,6 +18,7 @@\n #include \"utilstrencodings.h\"\n \n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n \n #include <memory>\n \n@@ -370,7 +371,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     while (chainActive.Tip()->nHeight < 209999) {\n         CBlockIndex* prev = chainActive.Tip();\n         CBlockIndex* next = new CBlockIndex();\n-        next->phashBlock = new uint256(GetRandHash());\n+        next->phashBlock = new uint256(insecure_rand_ctx.rand256());\n         pcoinsTip->SetBestBlock(next->GetBlockHash());\n         next->pprev = prev;\n         next->nHeight = prev->nHeight + 1;\n@@ -382,7 +383,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     while (chainActive.Tip()->nHeight < 210000) {\n         CBlockIndex* prev = chainActive.Tip();\n         CBlockIndex* next = new CBlockIndex();\n-        next->phashBlock = new uint256(GetRandHash());\n+        next->phashBlock = new uint256(insecure_rand_ctx.rand256());\n         pcoinsTip->SetBestBlock(next->GetBlockHash());\n         next->pprev = prev;\n         next->nHeight = prev->nHeight + 1;"
      },
      {
        "sha": "558581504f7b71276ef2f67c2b70ad9f5cc3bd12",
        "filename": "src/test/pow_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/pow_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/pow_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pow_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -8,6 +8,7 @@\n #include \"random.h\"\n #include \"util.h\"\n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n \n #include <boost/test/unit_test.hpp>\n \n@@ -84,9 +85,9 @@ BOOST_AUTO_TEST_CASE(GetBlockProofEquivalentTime_test)\n     }\n \n     for (int j = 0; j < 1000; j++) {\n-        CBlockIndex *p1 = &blocks[GetRand(10000)];\n-        CBlockIndex *p2 = &blocks[GetRand(10000)];\n-        CBlockIndex *p3 = &blocks[GetRand(10000)];\n+        CBlockIndex *p1 = &blocks[insecure_rand_ctx.randrange(10000)];\n+        CBlockIndex *p2 = &blocks[insecure_rand_ctx.randrange(10000)];\n+        CBlockIndex *p3 = &blocks[insecure_rand_ctx.randrange(10000)];\n \n         int64_t tdiff = GetBlockProofEquivalentTime(*p1, *p2, *p3, params);\n         BOOST_CHECK_EQUAL(tdiff, p1->GetBlockTime() - p2->GetBlockTime());"
      },
      {
        "sha": "ef9dcd18432bf2f01a6ecd5e1cab11fc998a6340",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -105,7 +105,7 @@ void static RandomTransaction(CMutableTransaction &tx, bool fSingle) {\n     for (int in = 0; in < ins; in++) {\n         tx.vin.push_back(CTxIn());\n         CTxIn &txin = tx.vin.back();\n-        txin.prevout.hash = GetRandHash();\n+        txin.prevout.hash = insecure_rand_ctx.rand256();\n         txin.prevout.n = insecure_rand() % 4;\n         RandomScript(txin.scriptSig);\n         txin.nSequence = (insecure_rand() % 2) ? insecure_rand() : (unsigned int)-1;"
      },
      {
        "sha": "d426503cbe8da48a269650c74b1f55d2d1beadca",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -59,7 +59,7 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n \n         RegisterAllCoreRPCCommands(tableRPC);\n         ClearDatadirCache();\n-        pathTemp = GetTempPath() / strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(GetRand(100000)));\n+        pathTemp = GetTempPath() / strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(insecure_rand_ctx.randrange(100000)));\n         fs::create_directories(pathTemp);\n         ForceSetArg(\"-datadir\", pathTemp.string());\n         mempool.setSanityCheck(1.0);"
      },
      {
        "sha": "f2981d62fe329f2e33f073721f2ddff86dd282d6",
        "filename": "src/wallet/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/wallet/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/wallet/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/crypto_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -5,6 +5,7 @@\n #include \"test/test_random.h\"\n #include \"utilstrencodings.h\"\n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n #include \"wallet/crypter.h\"\n \n #include <vector>\n@@ -190,9 +191,9 @@ BOOST_AUTO_TEST_CASE(passphrase) {\n                                 ParseHex(\"fc7aba077ad5f4c3a0988d8daa4810d0d4a0e3bcb53af662998898f33df0556a\"), \\\n                                 ParseHex(\"cf2f2691526dd1aa220896fb8bf7c369\"));\n \n-    std::string hash(GetRandHash().ToString());\n+    std::string hash(insecure_rand_ctx.rand256().ToString());\n     std::vector<unsigned char> vchSalt(8);\n-    GetRandBytes(&vchSalt[0], vchSalt.size());\n+    insecure_rand_ctx.randbytes(&vchSalt[0], vchSalt.size());\n     uint32_t rounds = insecure_rand();\n     if (rounds > 30000)\n         rounds = 30000;\n@@ -208,7 +209,7 @@ BOOST_AUTO_TEST_CASE(encrypt) {\n \n     for (int i = 0; i != 100; i++)\n     {\n-        uint256 hash(GetRandHash());\n+        uint256 hash(insecure_rand_ctx.rand256());\n         TestCrypter::TestEncrypt(crypt, std::vector<unsigned char>(hash.begin(), hash.end()));\n     }\n \n@@ -230,7 +231,7 @@ BOOST_AUTO_TEST_CASE(decrypt) {\n \n     for (int i = 0; i != 100; i++)\n     {\n-        uint256 hash(GetRandHash());\n+        uint256 hash(insecure_rand_ctx.rand256());\n         TestCrypter::TestDecrypt(crypt, std::vector<unsigned char>(hash.begin(), hash.end()));\n     }\n }"
      },
      {
        "sha": "ecd14056dc5dd9b5a176ff32309cfb1310620638",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365f352e499f1a51f6099015439655259504e217/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365f352e499f1a51f6099015439655259504e217/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=365f352e499f1a51f6099015439655259504e217",
        "patch": "@@ -11,6 +11,7 @@\n \n #include \"rpc/server.h\"\n #include \"test/test_bitcoin.h\"\n+#include \"test/test_random.h\"\n #include \"validation.h\"\n #include \"wallet/test/wallet_test_fixture.h\"\n \n@@ -469,7 +470,7 @@ static int64_t AddTx(CWallet& wallet, uint32_t lockTime, int64_t mockTime, int64\n     SetMockTime(mockTime);\n     CBlockIndex* block = nullptr;\n     if (blockTime > 0) {\n-        auto inserted = mapBlockIndex.emplace(GetRandHash(), new CBlockIndex);\n+        auto inserted = mapBlockIndex.emplace(insecure_rand_ctx.rand256(), new CBlockIndex);\n         assert(inserted.second);\n         const uint256& hash = inserted.first->first;\n         block = inserted.first->second;"
      }
    ]
  }
]