[
  {
    "sha": "0ed9675be4a28b6240e10c0d3fdb81373bd56bbc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZWQ5Njc1YmU0YTI4YjYyNDBlMTBjMGQzZmRiODEzNzNiZDU2YmJj",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-11-01T23:43:31Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-11-19T15:04:53Z"
      },
      "message": "[Wallet] Add global boolean whether to send free transactions (default=true)",
      "tree": {
        "sha": "3c0738c8b4f6eb9bf97ffb56ec2634c87ab01620",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c0738c8b4f6eb9bf97ffb56ec2634c87ab01620"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c4185338001b8ba3ef247b09fb63afb65961c10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c4185338001b8ba3ef247b09fb63afb65961c10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c4185338001b8ba3ef247b09fb63afb65961c10"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1b8e387e446615de293982bdadd1b3fe1bb6aaab",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=0ed9675be4a28b6240e10c0d3fdb81373bd56bbc",
        "patch": "@@ -28,6 +28,7 @@ using namespace std;\n CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = 1;\n bool bSpendZeroConfChange = true;\n+bool fSendFreeTransactions = true;\n \n /** \n  * Fees smaller than this (in satoshi) are considered zero fee (for transaction creation) \n@@ -1502,7 +1503,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n                     break; // Done, enough fee included.\n \n                 // Too big to send for free? Include more fee and try again:\n-                if (nBytes > MAX_FREE_TRANSACTION_CREATE_SIZE)\n+                if (!fSendFreeTransactions || nBytes > MAX_FREE_TRANSACTION_CREATE_SIZE)\n                 {\n                     nFeeRet = nFeeNeeded;\n                     continue;"
      },
      {
        "sha": "ebe52d4ab9481fa74f597398a4794daf710a3ef3",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=0ed9675be4a28b6240e10c0d3fdb81373bd56bbc",
        "patch": "@@ -32,6 +32,7 @@\n extern CFeeRate payTxFee;\n extern unsigned int nTxConfirmTarget;\n extern bool bSpendZeroConfChange;\n+extern bool fSendFreeTransactions;\n \n //! -paytxfee default\n static const CAmount DEFAULT_TRANSACTION_FEE = 0;"
      }
    ]
  },
  {
    "sha": "ed3e5e468c5b7973d71efe51c90c3a301d570e27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDNlNWU0NjhjNWI3OTczZDcxZWZlNTFjOTBjM2EzMDFkNTcwZTI3",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-11-01T23:47:39Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-11-19T15:04:53Z"
      },
      "message": "[Wallet] Add global boolean whether to pay at least the custom fee (default=true)",
      "tree": {
        "sha": "768af625bf6637f7685dda3abd78fcc75f7b6e3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/768af625bf6637f7685dda3abd78fcc75f7b6e3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed3e5e468c5b7973d71efe51c90c3a301d570e27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed3e5e468c5b7973d71efe51c90c3a301d570e27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed3e5e468c5b7973d71efe51c90c3a301d570e27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed3e5e468c5b7973d71efe51c90c3a301d570e27/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ed9675be4a28b6240e10c0d3fdb81373bd56bbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ed9675be4a28b6240e10c0d3fdb81373bd56bbc"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f1cf1049742571fe4b737a5a476eb1c32f69e0d3",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed3e5e468c5b7973d71efe51c90c3a301d570e27/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed3e5e468c5b7973d71efe51c90c3a301d570e27/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=ed3e5e468c5b7973d71efe51c90c3a301d570e27",
        "patch": "@@ -29,6 +29,7 @@ CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = 1;\n bool bSpendZeroConfChange = true;\n bool fSendFreeTransactions = true;\n+bool fPayAtLeastCustomFee = true;\n \n /** \n  * Fees smaller than this (in satoshi) are considered zero fee (for transaction creation) \n@@ -1383,7 +1384,10 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n     {\n         LOCK2(cs_main, cs_wallet);\n         {\n-            nFeeRet = payTxFee.GetFeePerK();\n+            if (fPayAtLeastCustomFee)\n+                nFeeRet = payTxFee.GetFeePerK();\n+            else\n+                nFeeRet = 0;\n             while (true)\n             {\n                 txNew.vin.clear();"
      },
      {
        "sha": "0244ce2368025c557cc02483c57445b2077f2bb7",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed3e5e468c5b7973d71efe51c90c3a301d570e27/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed3e5e468c5b7973d71efe51c90c3a301d570e27/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=ed3e5e468c5b7973d71efe51c90c3a301d570e27",
        "patch": "@@ -33,6 +33,7 @@ extern CFeeRate payTxFee;\n extern unsigned int nTxConfirmTarget;\n extern bool bSpendZeroConfChange;\n extern bool fSendFreeTransactions;\n+extern bool fPayAtLeastCustomFee;\n \n //! -paytxfee default\n static const CAmount DEFAULT_TRANSACTION_FEE = 0;"
      }
    ]
  },
  {
    "sha": "e7876b297901a4b49daafc9ccd2b5c34a6214039",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzg3NmIyOTc5MDFhNGI0OWRhYWZjOWNjZDJiNWMzNGE2MjE0MDM5",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-11-02T17:28:43Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-11-19T15:04:53Z"
      },
      "message": "[Wallet] Prevent user from paying a non-sense fee",
      "tree": {
        "sha": "56d4ec3933332a6e51ebb74f853a9ff948d9d37c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56d4ec3933332a6e51ebb74f853a9ff948d9d37c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7876b297901a4b49daafc9ccd2b5c34a6214039",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7876b297901a4b49daafc9ccd2b5c34a6214039",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7876b297901a4b49daafc9ccd2b5c34a6214039",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7876b297901a4b49daafc9ccd2b5c34a6214039/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed3e5e468c5b7973d71efe51c90c3a301d570e27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed3e5e468c5b7973d71efe51c90c3a301d570e27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed3e5e468c5b7973d71efe51c90c3a301d570e27"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2d59506baba9104b3a2db928a6f138f4d26432fc",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7876b297901a4b49daafc9ccd2b5c34a6214039/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7876b297901a4b49daafc9ccd2b5c34a6214039/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=e7876b297901a4b49daafc9ccd2b5c34a6214039",
        "patch": "@@ -1633,6 +1633,9 @@ CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarge\n {\n     // payTxFee is user-set \"I want to pay this much\"\n     CAmount nFeeNeeded = payTxFee.GetFee(nTxBytes);\n+    // prevent user from paying a non-sense fee (like 1 satoshi): 0 < fee < minRelayFee\n+    if (nFeeNeeded > 0 && nFeeNeeded < ::minRelayTxFee.GetFee(nTxBytes))\n+        nFeeNeeded = ::minRelayTxFee.GetFee(nTxBytes);\n     // User didn't set: use -txconfirmtarget to estimate...\n     if (nFeeNeeded == 0)\n         nFeeNeeded = pool.estimateFee(nConfirmTarget).GetFee(nTxBytes);"
      }
    ]
  },
  {
    "sha": "c1c9d5b415fda7d1310c23857e57d98ac14c3063",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWM5ZDViNDE1ZmRhN2QxMzEwYzIzODU3ZTU3ZDk4YWMxNGMzMDYz",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-11-01T23:14:47Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-11-19T15:04:53Z"
      },
      "message": "[Qt] Add Smartfee to GUI",
      "tree": {
        "sha": "8d56d76ed4b19a0a5689a5ec5c866c489ed62c78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d56d76ed4b19a0a5689a5ec5c866c489ed62c78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1c9d5b415fda7d1310c23857e57d98ac14c3063",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1c9d5b415fda7d1310c23857e57d98ac14c3063",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1c9d5b415fda7d1310c23857e57d98ac14c3063",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1c9d5b415fda7d1310c23857e57d98ac14c3063/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7876b297901a4b49daafc9ccd2b5c34a6214039",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7876b297901a4b49daafc9ccd2b5c34a6214039",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7876b297901a4b49daafc9ccd2b5c34a6214039"
      }
    ],
    "stats": {
      "total": 1071,
      "additions": 904,
      "deletions": 167
    },
    "files": [
      {
        "sha": "4a9982a1cdeff432b5d4a1f3909ec6d83f3d0bbb",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -290,6 +290,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -paytxfee=<amt>        \" + strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())) + \"\\n\";\n     strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\") + \"\\n\";\n     strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -sendfreetransactions  \" + strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0) + \"\\n\";\n     strUsage += \"  -spendzeroconfchange   \" + strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1) + \"\\n\";\n     strUsage += \"  -txconfirmtarget=<n>   \" + strprintf(_(\"If paytxfee is not set, include enough fee so transactions are confirmed on average within n blocks (default: %u)\"), 1) + \"\\n\";\n     strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\") + \"\\n\";\n@@ -704,6 +705,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     }\n     nTxConfirmTarget = GetArg(\"-txconfirmtarget\", 1);\n     bSpendZeroConfChange = GetArg(\"-spendzeroconfchange\", true);\n+    fSendFreeTransactions = GetArg(\"-sendfreetransactions\", false);\n \n     std::string strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n #endif // ENABLE_WALLET"
      },
      {
        "sha": "5b8ab23b26a7eca760e076788012b9e02924d04e",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -221,6 +221,12 @@ void BitcoinAmountField::clear()\n     unit->setCurrentIndex(0);\n }\n \n+void BitcoinAmountField::setEnabled(bool fEnabled)\n+{\n+    amount->setEnabled(fEnabled);\n+    unit->setEnabled(fEnabled);\n+}\n+\n bool BitcoinAmountField::validate()\n {\n     bool valid = false;"
      },
      {
        "sha": "1bad8ce1b8ccc46a3cbb06fa006cb69e0423e57f",
        "filename": "src/qt/bitcoinamountfield.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/bitcoinamountfield.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/bitcoinamountfield.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.h?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -48,6 +48,9 @@ class BitcoinAmountField: public QWidget\n     /** Make field empty and ready for new input. */\n     void clear();\n \n+    /** Enable/Disable. */\n+    void setEnabled(bool fEnabled);\n+\n     /** Qt messes up the tab chain by default in some cases (issue https://bugreports.qt-project.org/browse/QTBUG-10907),\n         in these cases we have to set it up manually.\n     */"
      },
      {
        "sha": "85b43b7b1f58e5cee368b049733628f4a086b7be",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 41,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -24,6 +24,7 @@\n #include <QDialogButtonBox>\n #include <QFlags>\n #include <QIcon>\n+#include <QSettings>\n #include <QString>\n #include <QTreeWidget>\n #include <QTreeWidgetItem>\n@@ -130,10 +131,22 @@ CoinControlDialog::CoinControlDialog(QWidget *parent) :\n \n     // default view is sorted by amount desc\n     sortView(COLUMN_AMOUNT_INT64, Qt::DescendingOrder);\n+\n+    // restore list mode and sortorder as a convenience feature\n+    QSettings settings;\n+    if (settings.contains(\"nCoinControlMode\") && !settings.value(\"nCoinControlMode\").toBool())\n+        ui->radioTreeMode->click();\n+    if (settings.contains(\"nCoinControlSortColumn\") && settings.contains(\"nCoinControlSortOrder\"))\n+        sortView(settings.value(\"nCoinControlSortColumn\").toInt(), ((Qt::SortOrder)settings.value(\"nCoinControlSortOrder\").toInt()));\n }\n \n CoinControlDialog::~CoinControlDialog()\n {\n+    QSettings settings;\n+    settings.setValue(\"nCoinControlMode\", ui->radioListMode->isChecked());\n+    settings.setValue(\"nCoinControlSortColumn\", sortColumn);\n+    settings.setValue(\"nCoinControlSortOrder\", (int)sortOrder);\n+\n     delete ui;\n }\n \n@@ -290,19 +303,19 @@ void CoinControlDialog::clipboardAmount()\n // copy label \"Fee\" to clipboard\n void CoinControlDialog::clipboardFee()\n {\n-    GUIUtil::setClipboard(ui->labelCoinControlFee->text().left(ui->labelCoinControlFee->text().indexOf(\" \")));\n+    GUIUtil::setClipboard(ui->labelCoinControlFee->text().left(ui->labelCoinControlFee->text().indexOf(\" \")).replace(\"~\", \"\"));\n }\n \n // copy label \"After fee\" to clipboard\n void CoinControlDialog::clipboardAfterFee()\n {\n-    GUIUtil::setClipboard(ui->labelCoinControlAfterFee->text().left(ui->labelCoinControlAfterFee->text().indexOf(\" \")));\n+    GUIUtil::setClipboard(ui->labelCoinControlAfterFee->text().left(ui->labelCoinControlAfterFee->text().indexOf(\" \")).replace(\"~\", \"\"));\n }\n \n // copy label \"Bytes\" to clipboard\n void CoinControlDialog::clipboardBytes()\n {\n-    GUIUtil::setClipboard(ui->labelCoinControlBytes->text());\n+    GUIUtil::setClipboard(ui->labelCoinControlBytes->text().replace(\"~\", \"\"));\n }\n \n // copy label \"Priority\" to clipboard\n@@ -320,7 +333,7 @@ void CoinControlDialog::clipboardLowOutput()\n // copy label \"Change\" to clipboard\n void CoinControlDialog::clipboardChange()\n {\n-    GUIUtil::setClipboard(ui->labelCoinControlChange->text().left(ui->labelCoinControlChange->text().indexOf(\" \")));\n+    GUIUtil::setClipboard(ui->labelCoinControlChange->text().left(ui->labelCoinControlChange->text().indexOf(\" \")).replace(\"~\", \"\"));\n }\n \n // treeview: sort\n@@ -402,26 +415,22 @@ void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n }\n \n // return human readable label for priority number\n-QString CoinControlDialog::getPriorityLabel(const CTxMemPool& pool, double dPriority)\n+QString CoinControlDialog::getPriorityLabel(double dPriority, double mempoolEstimatePriority)\n {\n-    // confirmations -> textual description\n-    typedef std::map<unsigned int, QString> PriorityDescription;\n-    const static PriorityDescription priorityDescriptions = boost::assign::map_list_of\n-        (1, tr(\"highest\"))(2, tr(\"higher\"))(3, tr(\"high\"))\n-        (5, tr(\"medium-high\"))(6, tr(\"medium\"))\n-        (10, tr(\"low-medium\"))(15, tr(\"low\"))\n-        (20, tr(\"lower\"));\n-\n-    BOOST_FOREACH(const PriorityDescription::value_type& i, priorityDescriptions)\n-    {\n-        double p = mempool.estimatePriority(i.first);\n-        if (p > 0 && dPriority >= p) return i.second;\n-    }\n-    // Note: if mempool hasn't accumulated enough history (estimatePriority\n-    // returns -1) we're conservative and classify as \"lowest\"\n-    if (mempool.estimatePriority(nTxConfirmTarget) <= 0 && AllowFree(dPriority))\n-        return \">=\" + tr(\"medium\");\n-    return tr(\"lowest\");\n+    double dPriorityMedium = mempoolEstimatePriority;\n+\n+    if (dPriorityMedium <= 0)\n+        dPriorityMedium = AllowFreeThreshold(); // not enough data, back to hard-coded\n+\n+    if      (dPriority / 1000000 > dPriorityMedium) return tr(\"highest\");\n+    else if (dPriority / 100000 > dPriorityMedium)  return tr(\"higher\");\n+    else if (dPriority / 10000 > dPriorityMedium)   return tr(\"high\");\n+    else if (dPriority / 1000 > dPriorityMedium)    return tr(\"medium-high\");\n+    else if (dPriority > dPriorityMedium)           return tr(\"medium\");\n+    else if (dPriority * 10 > dPriorityMedium)      return tr(\"low-medium\");\n+    else if (dPriority * 100 > dPriorityMedium)     return tr(\"low\");\n+    else if (dPriority * 1000 > dPriorityMedium)    return tr(\"lower\");\n+    else                                            return tr(\"lowest\");\n }\n \n // shows count of locked unspent outputs\n@@ -470,6 +479,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     double dPriorityInputs      = 0;\n     unsigned int nQuantity      = 0;\n     int nQuantityUncompressed   = 0;\n+    bool fAllowFree             = false;\n \n     vector<COutPoint> vCoinControl;\n     vector<COutput>   vOutputs;\n@@ -522,24 +532,22 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         nBytes = nBytesInputs + ((CoinControlDialog::payAmounts.size() > 0 ? CoinControlDialog::payAmounts.size() + 1 : 2) * 34) + 10; // always assume +1 output for change here\n \n         // Priority\n+        double mempoolEstimatePriority = mempool.estimatePriority(nTxConfirmTarget);\n         dPriority = dPriorityInputs / (nBytes - nBytesInputs + (nQuantityUncompressed * 29)); // 29 = 180 - 151 (uncompressed public keys are over the limit. max 151 bytes of the input are ignored for priority)\n-        sPriorityLabel = CoinControlDialog::getPriorityLabel(mempool, dPriority);\n+        sPriorityLabel = CoinControlDialog::getPriorityLabel(dPriority, mempoolEstimatePriority);\n \n-        // Voluntary Fee\n-        nPayFee = payTxFee.GetFee(max((unsigned int)1000, nBytes));\n+        // Fee\n+        nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, mempool);\n \n-        // Min Fee\n-        if (nPayFee == 0)\n-        {\n-            nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, mempool);\n-\n-            double dPriorityNeeded = mempool.estimatePriority(nTxConfirmTarget);\n-            if (dPriorityNeeded <= 0 && !AllowFree(dPriority)) // not enough mempool history: never send free\n-                dPriorityNeeded = std::numeric_limits<double>::max();\n+        // Allow free?\n+        double dPriorityNeeded = mempoolEstimatePriority;\n+        if (dPriorityNeeded <= 0)\n+            dPriorityNeeded = AllowFreeThreshold(); // not enough data, back to hard-coded\n+        fAllowFree = (dPriority >= dPriorityNeeded);\n \n-            if (nBytes <= MAX_FREE_TRANSACTION_CREATE_SIZE && dPriority >= dPriorityNeeded)\n+        if (fSendFreeTransactions)\n+            if (fAllowFree && nBytes <= MAX_FREE_TRANSACTION_CREATE_SIZE)\n                 nPayFee = 0;\n-        }\n \n         if (nPayAmount > 0)\n         {\n@@ -595,7 +603,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l6->setText(sPriorityLabel);                                             // Priority\n     l7->setText(fDust ? tr(\"yes\") : tr(\"no\"));                               // Dust\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n-    if (nPayFee > 0)\n+    if (nPayFee > 0 && !(payTxFee.GetFeePerK() > 0 && fPayAtLeastCustomFee && nBytes < 1000))\n     {\n         l3->setText(\"~\" + l3->text());\n         l4->setText(\"~\" + l4->text());\n@@ -605,7 +613,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // turn labels \"red\"\n     l5->setStyleSheet((nBytes >= MAX_FREE_TRANSACTION_CREATE_SIZE) ? \"color:red;\" : \"\");// Bytes >= 1000\n-    l6->setStyleSheet((dPriority > 0 && !AllowFree(dPriority)) ? \"color:red;\" : \"\");    // Priority < \"medium\"\n+    l6->setStyleSheet((dPriority > 0 && !fAllowFree) ? \"color:red;\" : \"\");              // Priority < \"medium\"\n     l7->setStyleSheet((fDust) ? \"color:red;\" : \"\");                                     // Dust = \"yes\"\n \n     // tool tips\n@@ -620,7 +628,11 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n-    double dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), std::max(payTxFee.GetFeePerK(), mempool.estimateFee(nTxConfirmTarget).GetFeePerK())) / 1000;\n+    double dFeeVary;\n+    if (payTxFee.GetFeePerK() > 0)\n+        dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), payTxFee.GetFeePerK()) / 1000;\n+    else\n+        dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), mempool.estimateFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n     QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n \n     l3->setToolTip(toolTip4);\n@@ -656,6 +668,7 @@ void CoinControlDialog::updateView()\n     QFlags<Qt::ItemFlag> flgTristate = Qt::ItemIsSelectable | Qt::ItemIsEnabled | Qt::ItemIsUserCheckable | Qt::ItemIsTristate;\n \n     int nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n+    double mempoolEstimatePriority = mempool.estimatePriority(nTxConfirmTarget);\n \n     map<QString, vector<COutput> > mapCoins;\n     model->listCoins(mapCoins);\n@@ -745,7 +758,7 @@ void CoinControlDialog::updateView()\n \n             // priority\n             double dPriority = ((double)out.tx->vout[out.i].nValue  / (nInputSize + 78)) * (out.nDepth+1); // 78 = 2 * 34 + 10\n-            itemOutput->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(mempool, dPriority));\n+            itemOutput->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(dPriority, mempoolEstimatePriority));\n             itemOutput->setText(COLUMN_PRIORITY_INT64, strPad(QString::number((int64_t)dPriority), 20, \" \"));\n             dPrioritySum += (double)out.tx->vout[out.i].nValue  * (out.nDepth+1);\n             nInputSum    += nInputSize;\n@@ -778,7 +791,7 @@ void CoinControlDialog::updateView()\n             itemWalletAddress->setText(COLUMN_CHECKBOX, \"(\" + QString::number(nChildren) + \")\");\n             itemWalletAddress->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, nSum));\n             itemWalletAddress->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(nSum), 15, \" \"));\n-            itemWalletAddress->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(mempool, dPrioritySum));\n+            itemWalletAddress->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(dPrioritySum, mempoolEstimatePriority));\n             itemWalletAddress->setText(COLUMN_PRIORITY_INT64, strPad(QString::number((int64_t)dPrioritySum), 20, \" \"));\n         }\n     }"
      },
      {
        "sha": "bd4f5d7f1ed6b2283ef5bbe885e90ae1839753c0",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -37,7 +37,7 @@ class CoinControlDialog : public QDialog\n \n     // static because also called from sendcoinsdialog\n     static void updateLabels(WalletModel*, QDialog*);\n-    static QString getPriorityLabel(const CTxMemPool& pool, double);\n+    static QString getPriorityLabel(double dPriority, double mempoolEstimatePriority);\n \n     static QList<CAmount> payAmounts;\n     static CCoinControl *coinControl;"
      },
      {
        "sha": "3446cf5c331386eadb82b99bda23b6f21119ef04",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 13,
        "deletions": 65,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -137,65 +137,6 @@\n        <string>W&amp;allet</string>\n       </attribute>\n       <layout class=\"QVBoxLayout\" name=\"verticalLayout_Wallet\">\n-       <item>\n-        <widget class=\"QLabel\" name=\"transactionFeeInfoLabel\">\n-         <property name=\"text\">\n-          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</string>\n-         </property>\n-         <property name=\"textFormat\">\n-          <enum>Qt::PlainText</enum>\n-         </property>\n-         <property name=\"wordWrap\">\n-          <bool>true</bool>\n-         </property>\n-        </widget>\n-       </item>\n-       <item>\n-        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_1_Wallet\">\n-         <item>\n-          <widget class=\"QLabel\" name=\"transactionFeeLabel\">\n-           <property name=\"text\">\n-            <string>Pay transaction &amp;fee</string>\n-           </property>\n-           <property name=\"textFormat\">\n-            <enum>Qt::PlainText</enum>\n-           </property>\n-           <property name=\"buddy\">\n-            <cstring>transactionFee</cstring>\n-           </property>\n-          </widget>\n-         </item>\n-         <item>\n-          <widget class=\"BitcoinAmountField\" name=\"transactionFee\"/>\n-         </item>\n-         <item>\n-          <spacer name=\"horizontalSpacer_1_Wallet\">\n-           <property name=\"orientation\">\n-            <enum>Qt::Horizontal</enum>\n-           </property>\n-           <property name=\"sizeHint\" stdset=\"0\">\n-            <size>\n-             <width>40</width>\n-             <height>20</height>\n-            </size>\n-           </property>\n-          </spacer>\n-         </item>\n-        </layout>\n-       </item>\n-       <item>\n-        <spacer name=\"verticalSpacer_Wallet\">\n-         <property name=\"orientation\">\n-          <enum>Qt::Vertical</enum>\n-         </property>\n-         <property name=\"sizeHint\" stdset=\"0\">\n-          <size>\n-           <width>20</width>\n-           <height>40</height>\n-          </size>\n-         </property>\n-        </spacer>\n-       </item>\n        <item>\n         <widget class=\"QGroupBox\" name=\"groupBox\">\n          <property name=\"title\">\n@@ -225,6 +166,19 @@\n          </layout>\n         </widget>\n        </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Wallet\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n       </layout>\n      </widget>\n      <widget class=\"QWidget\" name=\"tabNetwork\">\n@@ -632,12 +586,6 @@\n   </layout>\n  </widget>\n  <customwidgets>\n-  <customwidget>\n-   <class>BitcoinAmountField</class>\n-   <extends>QLineEdit</extends>\n-   <header>bitcoinamountfield.h</header>\n-   <container>1</container>\n-  </customwidget>\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>"
      },
      {
        "sha": "0bf04c75eb37ac44618e5380104e599a94417615",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 597,
        "deletions": 3,
        "changes": 600,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -7,13 +7,13 @@\n     <x>0</x>\n     <y>0</y>\n     <width>850</width>\n-    <height>400</height>\n+    <height>526</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n    <string>Send Coins</string>\n   </property>\n-  <layout class=\"QVBoxLayout\" name=\"verticalLayout\" stretch=\"0,1,0\">\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\" stretch=\"0,1,0,0\">\n    <property name=\"bottomMargin\">\n     <number>8</number>\n    </property>\n@@ -617,7 +617,7 @@\n         <x>0</x>\n         <y>0</y>\n         <width>830</width>\n-        <height>178</height>\n+        <height>68</height>\n        </rect>\n       </property>\n       <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\" stretch=\"0,1\">\n@@ -657,6 +657,590 @@\n      </widget>\n     </widget>\n    </item>\n+   <item>\n+    <widget class=\"QFrame\" name=\"frameFee\">\n+     <property name=\"sizePolicy\">\n+      <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n+       <horstretch>0</horstretch>\n+       <verstretch>0</verstretch>\n+      </sizepolicy>\n+     </property>\n+     <property name=\"maximumSize\">\n+      <size>\n+       <width>16777215</width>\n+       <height>16777215</height>\n+      </size>\n+     </property>\n+     <property name=\"frameShape\">\n+      <enum>QFrame::StyledPanel</enum>\n+     </property>\n+     <property name=\"frameShadow\">\n+      <enum>QFrame::Sunken</enum>\n+     </property>\n+     <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee1\">\n+      <property name=\"spacing\">\n+       <number>0</number>\n+      </property>\n+      <property name=\"leftMargin\">\n+       <number>0</number>\n+      </property>\n+      <property name=\"topMargin\">\n+       <number>0</number>\n+      </property>\n+      <property name=\"rightMargin\">\n+       <number>0</number>\n+      </property>\n+      <property name=\"bottomMargin\">\n+       <number>0</number>\n+      </property>\n+      <item>\n+       <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee2\" stretch=\"0,0,0\">\n+        <property name=\"spacing\">\n+         <number>0</number>\n+        </property>\n+        <property name=\"leftMargin\">\n+         <number>10</number>\n+        </property>\n+        <property name=\"topMargin\">\n+         <number>0</number>\n+        </property>\n+        <item>\n+         <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee1\">\n+          <property name=\"bottomMargin\">\n+           <number>0</number>\n+          </property>\n+          <item>\n+           <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee7\">\n+            <property name=\"spacing\">\n+             <number>0</number>\n+            </property>\n+            <item>\n+             <spacer name=\"verticalSpacerSmartFee\">\n+              <property name=\"orientation\">\n+               <enum>Qt::Vertical</enum>\n+              </property>\n+              <property name=\"sizeType\">\n+               <enum>QSizePolicy::Fixed</enum>\n+              </property>\n+              <property name=\"sizeHint\" stdset=\"0\">\n+               <size>\n+                <width>1</width>\n+                <height>4</height>\n+               </size>\n+              </property>\n+             </spacer>\n+            </item>\n+            <item>\n+             <layout class=\"QHBoxLayout\" name=\"horizontalLayoutSmartFee\">\n+              <property name=\"spacing\">\n+               <number>10</number>\n+              </property>\n+              <item>\n+               <widget class=\"QLabel\" name=\"labelFeeHeadline\">\n+                <property name=\"sizePolicy\">\n+                 <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Maximum\">\n+                  <horstretch>0</horstretch>\n+                  <verstretch>0</verstretch>\n+                 </sizepolicy>\n+                </property>\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"styleSheet\">\n+                 <string notr=\"true\">font-weight:bold;</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string>Transaction Fee:</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <widget class=\"QLabel\" name=\"labelFeeMinimized\">\n+                <property name=\"text\">\n+                 <string/>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <widget class=\"QPushButton\" name=\"buttonChooseFee\">\n+                <property name=\"text\">\n+                 <string>Choose...</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <widget class=\"QPushButton\" name=\"buttonMinimizeFee\">\n+                <property name=\"toolTip\">\n+                 <string>collapse fee-settings</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string>Minimize</string>\n+                </property>\n+               </widget>\n+              </item>\n+             </layout>\n+            </item>\n+            <item>\n+             <spacer name=\"verticalSpacer_5\">\n+              <property name=\"orientation\">\n+               <enum>Qt::Vertical</enum>\n+              </property>\n+              <property name=\"sizeHint\" stdset=\"0\">\n+               <size>\n+                <width>1</width>\n+                <height>1</height>\n+               </size>\n+              </property>\n+             </spacer>\n+            </item>\n+           </layout>\n+          </item>\n+          <item>\n+           <spacer name=\"horizontalSpacer_4\">\n+            <property name=\"orientation\">\n+             <enum>Qt::Horizontal</enum>\n+            </property>\n+            <property name=\"sizeHint\" stdset=\"0\">\n+             <size>\n+              <width>40</width>\n+              <height>20</height>\n+             </size>\n+            </property>\n+           </spacer>\n+          </item>\n+         </layout>\n+        </item>\n+        <item>\n+         <widget class=\"QFrame\" name=\"frameFeeSelection\">\n+          <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee12\">\n+           <property name=\"spacing\">\n+            <number>0</number>\n+           </property>\n+           <property name=\"leftMargin\">\n+            <number>0</number>\n+           </property>\n+           <property name=\"topMargin\">\n+            <number>0</number>\n+           </property>\n+           <property name=\"rightMargin\">\n+            <number>0</number>\n+           </property>\n+           <property name=\"bottomMargin\">\n+            <number>0</number>\n+           </property>\n+           <item>\n+            <layout class=\"QGridLayout\" name=\"gridLayoutFee\">\n+             <property name=\"topMargin\">\n+              <number>10</number>\n+             </property>\n+             <property name=\"bottomMargin\">\n+              <number>4</number>\n+             </property>\n+             <property name=\"horizontalSpacing\">\n+              <number>10</number>\n+             </property>\n+             <property name=\"verticalSpacing\">\n+              <number>4</number>\n+             </property>\n+             <item row=\"1\" column=\"1\">\n+              <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee8\">\n+               <property name=\"spacing\">\n+                <number>6</number>\n+               </property>\n+               <item>\n+                <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee13\">\n+                 <item>\n+                  <widget class=\"QRadioButton\" name=\"radioCustomPerKilobyte\">\n+                   <property name=\"toolTip\">\n+                    <string>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 satoshis in fee, while &quot;at least&quot; pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</string>\n+                   </property>\n+                   <property name=\"text\">\n+                    <string>per kilobyte</string>\n+                   </property>\n+                   <property name=\"checked\">\n+                    <bool>true</bool>\n+                   </property>\n+                   <attribute name=\"buttonGroup\">\n+                    <string notr=\"true\">groupCustomFee</string>\n+                   </attribute>\n+                  </widget>\n+                 </item>\n+                 <item>\n+                  <widget class=\"QRadioButton\" name=\"radioCustomAtLeast\">\n+                   <property name=\"toolTip\">\n+                    <string>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 satoshis in fee, while &quot;total at least&quot; pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</string>\n+                   </property>\n+                   <property name=\"text\">\n+                    <string>total at least</string>\n+                   </property>\n+                   <attribute name=\"buttonGroup\">\n+                    <string notr=\"true\">groupCustomFee</string>\n+                   </attribute>\n+                  </widget>\n+                 </item>\n+                 <item>\n+                  <widget class=\"BitcoinAmountField\" name=\"customFee\"/>\n+                 </item>\n+                 <item>\n+                  <spacer name=\"horizontalSpacer_6\">\n+                   <property name=\"orientation\">\n+                    <enum>Qt::Horizontal</enum>\n+                   </property>\n+                   <property name=\"sizeHint\" stdset=\"0\">\n+                    <size>\n+                     <width>1</width>\n+                     <height>1</height>\n+                    </size>\n+                   </property>\n+                  </spacer>\n+                 </item>\n+                </layout>\n+               </item>\n+               <item>\n+                <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee8\">\n+                 <item>\n+                  <widget class=\"QCheckBox\" name=\"checkBoxMinimumFee\">\n+                   <property name=\"toolTip\">\n+                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n+                   </property>\n+                   <property name=\"text\">\n+                    <string/>\n+                   </property>\n+                  </widget>\n+                 </item>\n+                 <item>\n+                  <widget class=\"QLabel\" name=\"labelMinFeeWarning\">\n+                   <property name=\"enabled\">\n+                    <bool>true</bool>\n+                   </property>\n+                   <property name=\"toolTip\">\n+                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n+                   </property>\n+                   <property name=\"text\">\n+                    <string>(read the tooltip)</string>\n+                   </property>\n+                   <property name=\"margin\">\n+                    <number>5</number>\n+                   </property>\n+                  </widget>\n+                 </item>\n+                 <item>\n+                  <spacer name=\"horizontalSpacer_2\">\n+                   <property name=\"orientation\">\n+                    <enum>Qt::Horizontal</enum>\n+                   </property>\n+                   <property name=\"sizeHint\" stdset=\"0\">\n+                    <size>\n+                     <width>1</width>\n+                     <height>1</height>\n+                    </size>\n+                   </property>\n+                  </spacer>\n+                 </item>\n+                </layout>\n+               </item>\n+              </layout>\n+             </item>\n+             <item row=\"0\" column=\"0\">\n+              <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee4\" stretch=\"0,1\">\n+               <item>\n+                <widget class=\"QRadioButton\" name=\"radioSmartFee\">\n+                 <property name=\"text\">\n+                  <string>Recommended:</string>\n+                 </property>\n+                 <property name=\"checked\">\n+                  <bool>true</bool>\n+                 </property>\n+                 <attribute name=\"buttonGroup\">\n+                  <string notr=\"true\">groupFee</string>\n+                 </attribute>\n+                </widget>\n+               </item>\n+               <item>\n+                <spacer name=\"verticalSpacer_2\">\n+                 <property name=\"orientation\">\n+                  <enum>Qt::Vertical</enum>\n+                 </property>\n+                 <property name=\"sizeHint\" stdset=\"0\">\n+                  <size>\n+                   <width>1</width>\n+                   <height>1</height>\n+                  </size>\n+                 </property>\n+                </spacer>\n+               </item>\n+              </layout>\n+             </item>\n+             <item row=\"1\" column=\"0\">\n+              <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee9\" stretch=\"0,1\">\n+               <item>\n+                <widget class=\"QRadioButton\" name=\"radioCustomFee\">\n+                 <property name=\"text\">\n+                  <string>Custom:</string>\n+                 </property>\n+                 <attribute name=\"buttonGroup\">\n+                  <string notr=\"true\">groupFee</string>\n+                 </attribute>\n+                </widget>\n+               </item>\n+               <item>\n+                <spacer name=\"verticalSpacer_6\">\n+                 <property name=\"orientation\">\n+                  <enum>Qt::Vertical</enum>\n+                 </property>\n+                 <property name=\"sizeHint\" stdset=\"0\">\n+                  <size>\n+                   <width>1</width>\n+                   <height>1</height>\n+                  </size>\n+                 </property>\n+                </spacer>\n+               </item>\n+              </layout>\n+             </item>\n+             <item row=\"0\" column=\"1\">\n+              <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee3\" stretch=\"0,0,1\">\n+               <property name=\"spacing\">\n+                <number>6</number>\n+               </property>\n+               <property name=\"topMargin\">\n+                <number>2</number>\n+               </property>\n+               <item>\n+                <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee12\">\n+                 <item>\n+                  <widget class=\"QLabel\" name=\"labelSmartFee\">\n+                   <property name=\"text\">\n+                    <string/>\n+                   </property>\n+                   <property name=\"margin\">\n+                    <number>2</number>\n+                   </property>\n+                  </widget>\n+                 </item>\n+                 <item>\n+                  <widget class=\"QLabel\" name=\"labelFeeEstimation\">\n+                   <property name=\"text\">\n+                    <string/>\n+                   </property>\n+                  </widget>\n+                 </item>\n+                 <item>\n+                  <widget class=\"QLabel\" name=\"labelSmartFee2\">\n+                   <property name=\"text\">\n+                    <string>(Smart fee not initialized yet. This usually takes a few blocks...)</string>\n+                   </property>\n+                   <property name=\"margin\">\n+                    <number>2</number>\n+                   </property>\n+                  </widget>\n+                 </item>\n+                 <item>\n+                  <spacer name=\"horizontalSpacer_5\">\n+                   <property name=\"orientation\">\n+                    <enum>Qt::Horizontal</enum>\n+                   </property>\n+                   <property name=\"sizeHint\" stdset=\"0\">\n+                    <size>\n+                     <width>1</width>\n+                     <height>1</height>\n+                    </size>\n+                   </property>\n+                  </spacer>\n+                 </item>\n+                </layout>\n+               </item>\n+               <item>\n+                <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee9\">\n+                 <item>\n+                  <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee6\">\n+                   <item>\n+                    <widget class=\"QLabel\" name=\"labelSmartFee3\">\n+                     <property name=\"text\">\n+                      <string>Confirmation time:</string>\n+                     </property>\n+                     <property name=\"margin\">\n+                      <number>2</number>\n+                     </property>\n+                    </widget>\n+                   </item>\n+                   <item>\n+                    <spacer name=\"verticalSpacer_3\">\n+                     <property name=\"orientation\">\n+                      <enum>Qt::Vertical</enum>\n+                     </property>\n+                     <property name=\"sizeHint\" stdset=\"0\">\n+                      <size>\n+                       <width>1</width>\n+                       <height>1</height>\n+                      </size>\n+                     </property>\n+                    </spacer>\n+                   </item>\n+                  </layout>\n+                 </item>\n+                 <item>\n+                  <layout class=\"QVBoxLayout\" name=\"verticalLayoutFee5\">\n+                   <property name=\"rightMargin\">\n+                    <number>30</number>\n+                   </property>\n+                   <item>\n+                    <widget class=\"QSlider\" name=\"sliderSmartFee\">\n+                     <property name=\"minimum\">\n+                      <number>0</number>\n+                     </property>\n+                     <property name=\"maximum\">\n+                      <number>24</number>\n+                     </property>\n+                     <property name=\"pageStep\">\n+                      <number>1</number>\n+                     </property>\n+                     <property name=\"value\">\n+                      <number>0</number>\n+                     </property>\n+                     <property name=\"orientation\">\n+                      <enum>Qt::Horizontal</enum>\n+                     </property>\n+                     <property name=\"invertedAppearance\">\n+                      <bool>false</bool>\n+                     </property>\n+                     <property name=\"invertedControls\">\n+                      <bool>false</bool>\n+                     </property>\n+                     <property name=\"tickPosition\">\n+                      <enum>QSlider::NoTicks</enum>\n+                     </property>\n+                    </widget>\n+                   </item>\n+                   <item>\n+                    <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee10\">\n+                     <item>\n+                      <widget class=\"QLabel\" name=\"labelSmartFeeNormal\">\n+                       <property name=\"text\">\n+                        <string>normal</string>\n+                       </property>\n+                      </widget>\n+                     </item>\n+                     <item>\n+                      <spacer name=\"horizontalSpacer_3\">\n+                       <property name=\"orientation\">\n+                        <enum>Qt::Horizontal</enum>\n+                       </property>\n+                       <property name=\"sizeHint\" stdset=\"0\">\n+                        <size>\n+                         <width>40</width>\n+                         <height>20</height>\n+                        </size>\n+                       </property>\n+                      </spacer>\n+                     </item>\n+                     <item>\n+                      <widget class=\"QLabel\" name=\"labelSmartFeeFast\">\n+                       <property name=\"text\">\n+                        <string>fast</string>\n+                       </property>\n+                      </widget>\n+                     </item>\n+                    </layout>\n+                   </item>\n+                  </layout>\n+                 </item>\n+                </layout>\n+               </item>\n+               <item>\n+                <spacer name=\"verticalSpacer_4\">\n+                 <property name=\"orientation\">\n+                  <enum>Qt::Vertical</enum>\n+                 </property>\n+                 <property name=\"sizeHint\" stdset=\"0\">\n+                  <size>\n+                   <width>1</width>\n+                   <height>1</height>\n+                  </size>\n+                 </property>\n+                </spacer>\n+               </item>\n+              </layout>\n+             </item>\n+            </layout>\n+           </item>\n+           <item>\n+            <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee5\" stretch=\"0,0,0\">\n+             <property name=\"spacing\">\n+              <number>8</number>\n+             </property>\n+             <property name=\"bottomMargin\">\n+              <number>4</number>\n+             </property>\n+             <item>\n+              <widget class=\"QCheckBox\" name=\"checkBoxFreeTx\">\n+               <property name=\"text\">\n+                <string>Send as zero-fee transaction if possible</string>\n+               </property>\n+              </widget>\n+             </item>\n+             <item>\n+              <widget class=\"QLabel\" name=\"labelFreeTx\">\n+               <property name=\"text\">\n+                <string>(confirmation may take longer)</string>\n+               </property>\n+               <property name=\"margin\">\n+                <number>5</number>\n+               </property>\n+              </widget>\n+             </item>\n+             <item>\n+              <spacer name=\"horizontalSpacerFee5\">\n+               <property name=\"orientation\">\n+                <enum>Qt::Horizontal</enum>\n+               </property>\n+               <property name=\"sizeHint\" stdset=\"0\">\n+                <size>\n+                 <width>1</width>\n+                 <height>1</height>\n+                </size>\n+               </property>\n+              </spacer>\n+             </item>\n+            </layout>\n+           </item>\n+           <item>\n+            <spacer name=\"verticalSpacerFee2\">\n+             <property name=\"orientation\">\n+              <enum>Qt::Vertical</enum>\n+             </property>\n+             <property name=\"sizeHint\" stdset=\"0\">\n+              <size>\n+               <width>1</width>\n+               <height>1</height>\n+              </size>\n+             </property>\n+            </spacer>\n+           </item>\n+          </layout>\n+         </widget>\n+        </item>\n+        <item>\n+         <spacer name=\"verticalSpacerFee\">\n+          <property name=\"orientation\">\n+           <enum>Qt::Vertical</enum>\n+          </property>\n+          <property name=\"sizeHint\" stdset=\"0\">\n+           <size>\n+            <width>800</width>\n+            <height>1</height>\n+           </size>\n+          </property>\n+         </spacer>\n+        </item>\n+       </layout>\n+      </item>\n+     </layout>\n+    </widget>\n+   </item>\n    <item>\n     <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n      <item>\n@@ -787,9 +1371,19 @@\n    <extends>QLineEdit</extends>\n    <header>qvalidatedlineedit.h</header>\n   </customwidget>\n+  <customwidget>\n+   <class>BitcoinAmountField</class>\n+   <extends>QLineEdit</extends>\n+   <header>bitcoinamountfield.h</header>\n+   <container>1</container>\n+  </customwidget>\n  </customwidgets>\n  <resources>\n   <include location=\"../bitcoin.qrc\"/>\n  </resources>\n  <connections/>\n+ <buttongroups>\n+  <buttongroup name=\"groupFee\"/>\n+  <buttongroup name=\"groupCustomFee\"/>\n+ </buttongroups>\n </ui>"
      },
      {
        "sha": "069080219e24bbdc6e78feebd9007364cbee898b",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -105,9 +105,6 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #endif\n \n     ui->unit->setModel(new BitcoinUnits(this));\n-#ifdef ENABLE_WALLET\n-    ui->transactionFee->setSingleStep(CWallet::minTxFee.GetFeePerK());\n-#endif\n \n     /* Widget-to-option mapper */\n     mapper = new QDataWidgetMapper(this);\n@@ -139,16 +136,11 @@ void OptionsDialog::setModel(OptionsModel *model)\n             strLabel = tr(\"none\");\n         ui->overriddenByCommandLineLabel->setText(strLabel);\n \n-        connect(model, SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n-\n         mapper->setModel(model);\n         setMapper();\n         mapper->toFirst();\n     }\n \n-    /* update the display unit, to not use the default (\"BTC\") */\n-    updateDisplayUnit();\n-\n     /* warn when one of the following settings changes by user action (placed here so init via mapper doesn't trigger them) */\n \n     /* Main */\n@@ -172,7 +164,6 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->databaseCache, OptionsModel::DatabaseCache);\n \n     /* Wallet */\n-    mapper->addMapping(ui->transactionFee, OptionsModel::Fee);\n     mapper->addMapping(ui->spendZeroConfChange, OptionsModel::SpendZeroConfChange);\n     mapper->addMapping(ui->coinControlFeatures, OptionsModel::CoinControlFeatures);\n \n@@ -264,15 +255,6 @@ void OptionsDialog::clearStatusLabel()\n     ui->statusLabel->clear();\n }\n \n-void OptionsDialog::updateDisplayUnit()\n-{\n-    if(model)\n-    {\n-        /* Update transactionFee with the current unit */\n-        ui->transactionFee->setDisplayUnit(model->getDisplayUnit());\n-    }\n-}\n-\n void OptionsDialog::doProxyIpChecks(QValidatedLineEdit *pUiProxyIp, int nProxyPort)\n {\n     Q_UNUSED(nProxyPort);"
      },
      {
        "sha": "511719f53c58b0c19cfe3bcfaf3f3ee30a44a5ce",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -46,7 +46,6 @@ private slots:\n \n     void showRestartWarning(bool fPersistent = false);\n     void clearStatusLabel();\n-    void updateDisplayUnit();\n     void doProxyIpChecks(QValidatedLineEdit *pUiProxyIp, int nProxyPort);\n \n signals:"
      },
      {
        "sha": "7054509fe6f58db8186670a1cc90e2b438db74ed",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -90,12 +90,6 @@ void OptionsModel::Init()\n \n     // Wallet\n #ifdef ENABLE_WALLET\n-    if (!settings.contains(\"nTransactionFee\"))\n-        settings.setValue(\"nTransactionFee\", (qint64)DEFAULT_TRANSACTION_FEE);\n-    payTxFee = CFeeRate(settings.value(\"nTransactionFee\").toLongLong()); // if -paytxfee is set, this will be overridden later in init.cpp\n-    if (mapArgs.count(\"-paytxfee\"))\n-        addOverriddenOption(\"-paytxfee\");\n-\n     if (!settings.contains(\"bSpendZeroConfChange\"))\n         settings.setValue(\"bSpendZeroConfChange\", true);\n     if (!SoftSetBoolArg(\"-spendzeroconfchange\", settings.value(\"bSpendZeroConfChange\").toBool()))\n@@ -185,16 +179,6 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         }\n \n #ifdef ENABLE_WALLET\n-        case Fee: {\n-            // Attention: Init() is called before payTxFee is set in AppInit2()!\n-            // To ensure we can change the fee on-the-fly update our QSetting when\n-            // opening OptionsDialog, which queries Fee via the mapper.\n-            if (!(payTxFee == CFeeRate(settings.value(\"nTransactionFee\").toLongLong(), 1000)))\n-                settings.setValue(\"nTransactionFee\", (qint64)payTxFee.GetFeePerK());\n-            // Todo: Consider to revert back to use just payTxFee here, if we don't want\n-            // -paytxfee to update our QSettings!\n-            return settings.value(\"nTransactionFee\");\n-        }\n         case SpendZeroConfChange:\n             return settings.value(\"bSpendZeroConfChange\");\n #endif\n@@ -276,14 +260,6 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         }\n         break;\n #ifdef ENABLE_WALLET\n-        case Fee: { // core option - can be changed on-the-fly\n-            // Todo: Add is valid check  and warn via message, if not\n-            CAmount nTransactionFee(value.toLongLong());\n-            payTxFee = CFeeRate(nTransactionFee, 1000);\n-            settings.setValue(\"nTransactionFee\", qint64(nTransactionFee));\n-            emit transactionFeeChanged(nTransactionFee);\n-            break;\n-        }\n         case SpendZeroConfChange:\n             if (settings.value(\"bSpendZeroConfChange\") != value) {\n                 settings.setValue(\"bSpendZeroConfChange\", value);"
      },
      {
        "sha": "84fd49a7b8bfae181d86f74690f1d769558059eb",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -34,7 +34,6 @@ class OptionsModel : public QAbstractListModel\n         ProxyUse,               // bool\n         ProxyIP,                // QString\n         ProxyPort,              // int\n-        Fee,                    // qint64\n         DisplayUnit,            // BitcoinUnits::Unit\n         ThirdPartyTxUrls,       // QString\n         Language,               // QString\n@@ -84,7 +83,6 @@ class OptionsModel : public QAbstractListModel\n \n signals:\n     void displayUnitChanged(int unit);\n-    void transactionFeeChanged(const CAmount&);\n     void coinControlFeaturesChanged(bool);\n };\n "
      },
      {
        "sha": "ff39829b95d8ccb49838f4f370e8fe398d28a6cf",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 191,
        "deletions": 5,
        "changes": 196,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -7,10 +7,12 @@\n \n #include \"addresstablemodel.h\"\n #include \"bitcoinunits.h\"\n+#include \"clientmodel.h\"\n #include \"coincontroldialog.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n #include \"sendcoinsentry.h\"\n+#include \"wallet.h\"\n #include \"walletmodel.h\"\n \n #include \"base58.h\"\n@@ -19,6 +21,7 @@\n \n #include <QMessageBox>\n #include <QScrollBar>\n+#include <QSettings>\n #include <QTextDocument>\n \n SendCoinsDialog::SendCoinsDialog(QWidget *parent) :\n@@ -72,9 +75,46 @@ SendCoinsDialog::SendCoinsDialog(QWidget *parent) :\n     ui->labelCoinControlLowOutput->addAction(clipboardLowOutputAction);\n     ui->labelCoinControlChange->addAction(clipboardChangeAction);\n \n+    // init transaction fee section\n+    QSettings settings;\n+    if (!settings.contains(\"fFeeSectionMinimized\"))\n+        settings.setValue(\"fFeeSectionMinimized\", true);\n+    if (!settings.contains(\"nFeeRadio\") && settings.contains(\"nTransactionFee\") && settings.value(\"nTransactionFee\").toLongLong() > 0) // compatibility\n+        settings.setValue(\"nFeeRadio\", 1); // custom\n+    if (!settings.contains(\"nFeeRadio\"))\n+        settings.setValue(\"nFeeRadio\", 0); // recommended\n+    if (!settings.contains(\"nCustomFeeRadio\") && settings.contains(\"nTransactionFee\") && settings.value(\"nTransactionFee\").toLongLong() > 0) // compatibility\n+        settings.setValue(\"nCustomFeeRadio\", 1); // total at least\n+    if (!settings.contains(\"nCustomFeeRadio\"))\n+        settings.setValue(\"nCustomFeeRadio\", 0); // per kilobyte\n+    if (!settings.contains(\"nSmartFeeSliderPosition\"))\n+        settings.setValue(\"nSmartFeeSliderPosition\", 0);\n+    if (!settings.contains(\"nTransactionFee\"))\n+        settings.setValue(\"nTransactionFee\", (qint64)DEFAULT_TRANSACTION_FEE);\n+    if (!settings.contains(\"fPayOnlyMinFee\"))\n+        settings.setValue(\"fPayOnlyMinFee\", false);\n+    if (!settings.contains(\"fSendFreeTransactions\"))\n+        settings.setValue(\"fSendFreeTransactions\", false);\n+    ui->groupFee->setId(ui->radioSmartFee, 0);\n+    ui->groupFee->setId(ui->radioCustomFee, 1);\n+    ui->groupFee->button((int)std::max(0, std::min(1, settings.value(\"nFeeRadio\").toInt())))->setChecked(true);\n+    ui->groupCustomFee->setId(ui->radioCustomPerKilobyte, 0);\n+    ui->groupCustomFee->setId(ui->radioCustomAtLeast, 1);\n+    ui->groupCustomFee->button((int)std::max(0, std::min(1, settings.value(\"nCustomFeeRadio\").toInt())))->setChecked(true);\n+    ui->sliderSmartFee->setValue(settings.value(\"nSmartFeeSliderPosition\").toInt());\n+    ui->customFee->setValue(settings.value(\"nTransactionFee\").toLongLong());\n+    ui->checkBoxMinimumFee->setChecked(settings.value(\"fPayOnlyMinFee\").toBool());\n+    ui->checkBoxFreeTx->setChecked(settings.value(\"fSendFreeTransactions\").toBool());\n+    minimizeFeeSection(settings.value(\"fFeeSectionMinimized\").toBool());\n+\n     fNewRecipientAllowed = true;\n }\n \n+void SendCoinsDialog::setClientModel(ClientModel *clientModel)\n+{\n+    this->clientModel = clientModel;\n+}\n+\n void SendCoinsDialog::setModel(WalletModel *model)\n {\n     this->model = model;\n@@ -94,18 +134,51 @@ void SendCoinsDialog::setModel(WalletModel *model)\n                    model->getWatchBalance(), model->getWatchUnconfirmedBalance(), model->getWatchImmatureBalance());\n         connect(model, SIGNAL(balanceChanged(CAmount,CAmount,CAmount,CAmount,CAmount,CAmount)), this, SLOT(setBalance(CAmount,CAmount,CAmount,CAmount,CAmount,CAmount)));\n         connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+        updateDisplayUnit();\n \n         // Coin Control\n         connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(coinControlUpdateLabels()));\n         connect(model->getOptionsModel(), SIGNAL(coinControlFeaturesChanged(bool)), this, SLOT(coinControlFeatureChanged(bool)));\n-        connect(model->getOptionsModel(), SIGNAL(transactionFeeChanged(CAmount)), this, SLOT(coinControlUpdateLabels()));\n         ui->frameCoinControl->setVisible(model->getOptionsModel()->getCoinControlFeatures());\n         coinControlUpdateLabels();\n+\n+        // fee section\n+        connect(clientModel, SIGNAL(numBlocksChanged(int)), this, SLOT(updateSmartFeeLabel()));\n+        connect(ui->sliderSmartFee, SIGNAL(valueChanged(int)), this, SLOT(updateSmartFeeLabel()));\n+        connect(ui->sliderSmartFee, SIGNAL(valueChanged(int)), this, SLOT(updateGlobalFeeVariables()));\n+        connect(ui->sliderSmartFee, SIGNAL(valueChanged(int)), this, SLOT(coinControlUpdateLabels()));\n+        connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(updateFeeSectionControls()));\n+        connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(updateGlobalFeeVariables()));\n+        connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(coinControlUpdateLabels()));\n+        connect(ui->groupCustomFee, SIGNAL(buttonClicked(int)), this, SLOT(updateGlobalFeeVariables()));\n+        connect(ui->groupCustomFee, SIGNAL(buttonClicked(int)), this, SLOT(coinControlUpdateLabels()));\n+        connect(ui->customFee, SIGNAL(valueChanged()), this, SLOT(updateGlobalFeeVariables()));\n+        connect(ui->customFee, SIGNAL(valueChanged()), this, SLOT(coinControlUpdateLabels()));\n+        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(setMinimumFee()));\n+        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(updateFeeSectionControls()));\n+        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(updateGlobalFeeVariables()));\n+        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n+        connect(ui->checkBoxFreeTx, SIGNAL(stateChanged(int)), this, SLOT(updateGlobalFeeVariables()));\n+        connect(ui->checkBoxFreeTx, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n+        ui->customFee->setSingleStep(CWallet::minTxFee.GetFeePerK());\n+        updateFeeSectionControls();\n+        updateMinFeeLabel();\n+        updateSmartFeeLabel();\n+        updateGlobalFeeVariables();\n     }\n }\n \n SendCoinsDialog::~SendCoinsDialog()\n {\n+    QSettings settings;\n+    settings.setValue(\"fFeeSectionMinimized\", fFeeMinimized);\n+    settings.setValue(\"nFeeRadio\", ui->groupFee->checkedId());\n+    settings.setValue(\"nCustomFeeRadio\", ui->groupCustomFee->checkedId());\n+    settings.setValue(\"nSmartFeeSliderPosition\", ui->sliderSmartFee->value());\n+    settings.setValue(\"nTransactionFee\", (qint64)ui->customFee->value());\n+    settings.setValue(\"fPayOnlyMinFee\", ui->checkBoxMinimumFee->isChecked());\n+    settings.setValue(\"fSendFreeTransactions\", ui->checkBoxFreeTx->isChecked());\n+\n     delete ui;\n }\n \n@@ -214,6 +287,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n         questionString.append(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), txFee));\n         questionString.append(\"</span> \");\n         questionString.append(tr(\"added as transaction fee\"));\n+\n+        // append transaction size\n+        questionString.append(\" (\" + QString::number((double)currentTransaction.getTransactionSize() / 1000) + \" kB)\");\n     }\n \n     // add total amount in all subdivision units\n@@ -402,6 +478,9 @@ void SendCoinsDialog::setBalance(const CAmount& balance, const CAmount& unconfir\n void SendCoinsDialog::updateDisplayUnit()\n {\n     setBalance(model->getBalance(), 0, 0, 0, 0, 0);\n+    ui->customFee->setDisplayUnit(model->getOptionsModel()->getDisplayUnit());\n+    updateMinFeeLabel();\n+    updateSmartFeeLabel();\n }\n \n void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn &sendCoinsReturn, const QString &msgArg)\n@@ -438,6 +517,9 @@ void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn\n         msgParams.first = tr(\"The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\");\n         msgParams.second = CClientUIInterface::MSG_ERROR;\n         break;\n+    case WalletModel::InsaneFee:\n+        msgParams.first = tr(\"A fee higher than %1 is considered an insanely high fee.\").arg(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), 10000000));\n+        break;\n     // included to prevent a compiler warning.\n     case WalletModel::OK:\n     default:\n@@ -447,6 +529,110 @@ void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn\n     emit message(tr(\"Send Coins\"), msgParams.first, msgParams.second);\n }\n \n+void SendCoinsDialog::minimizeFeeSection(bool fMinimize)\n+{\n+    ui->labelFeeMinimized->setVisible(fMinimize);\n+    ui->buttonChooseFee  ->setVisible(fMinimize);\n+    ui->buttonMinimizeFee->setVisible(!fMinimize);\n+    ui->frameFeeSelection->setVisible(!fMinimize);\n+    ui->horizontalLayoutSmartFee->setContentsMargins(0, (fMinimize ? 0 : 6), 0, 0);\n+    fFeeMinimized = fMinimize;\n+}\n+\n+void SendCoinsDialog::on_buttonChooseFee_clicked()\n+{\n+    minimizeFeeSection(false);\n+}\n+\n+void SendCoinsDialog::on_buttonMinimizeFee_clicked()\n+{\n+    updateFeeMinimizedLabel();\n+    minimizeFeeSection(true);\n+}\n+\n+void SendCoinsDialog::setMinimumFee()\n+{\n+    ui->radioCustomPerKilobyte->setChecked(true);\n+    ui->customFee->setValue(CWallet::minTxFee.GetFeePerK());\n+}\n+\n+void SendCoinsDialog::updateFeeSectionControls()\n+{\n+    ui->sliderSmartFee          ->setEnabled(ui->radioSmartFee->isChecked());\n+    ui->labelSmartFee           ->setEnabled(ui->radioSmartFee->isChecked());\n+    ui->labelSmartFee2          ->setEnabled(ui->radioSmartFee->isChecked());\n+    ui->labelSmartFee3          ->setEnabled(ui->radioSmartFee->isChecked());\n+    ui->labelFeeEstimation      ->setEnabled(ui->radioSmartFee->isChecked());\n+    ui->labelSmartFeeNormal     ->setEnabled(ui->radioSmartFee->isChecked());\n+    ui->labelSmartFeeFast       ->setEnabled(ui->radioSmartFee->isChecked());\n+    ui->checkBoxMinimumFee      ->setEnabled(ui->radioCustomFee->isChecked());\n+    ui->labelMinFeeWarning      ->setEnabled(ui->radioCustomFee->isChecked());\n+    ui->radioCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n+    ui->radioCustomAtLeast      ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n+    ui->customFee               ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n+}\n+\n+void SendCoinsDialog::updateGlobalFeeVariables()\n+{\n+    if (ui->radioSmartFee->isChecked())\n+    {\n+        nTxConfirmTarget = (int)25 - (int)std::max(0, std::min(24, ui->sliderSmartFee->value()));\n+        payTxFee = CFeeRate(0);\n+    }\n+    else\n+    {\n+        nTxConfirmTarget = 25;\n+        payTxFee = CFeeRate(ui->customFee->value());\n+        fPayAtLeastCustomFee = ui->radioCustomAtLeast->isChecked();\n+    }\n+\n+    fSendFreeTransactions = ui->checkBoxFreeTx->isChecked();\n+}\n+\n+void SendCoinsDialog::updateFeeMinimizedLabel()\n+{\n+    if(!model || !model->getOptionsModel())\n+        return;\n+\n+    if (ui->radioSmartFee->isChecked())\n+        ui->labelFeeMinimized->setText(ui->labelSmartFee->text());\n+    else {\n+        ui->labelFeeMinimized->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), ui->customFee->value()) +\n+            ((ui->radioCustomPerKilobyte->isChecked()) ? \"/kB\" : \"\"));\n+    }\n+}\n+\n+void SendCoinsDialog::updateMinFeeLabel()\n+{\n+    if (model && model->getOptionsModel())\n+        ui->checkBoxMinimumFee->setText(tr(\"Pay only the minimum fee of %1\").arg(\n+            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::minTxFee.GetFeePerK()) + \"/kB\")\n+        );\n+}\n+\n+void SendCoinsDialog::updateSmartFeeLabel()\n+{\n+    if(!model || !model->getOptionsModel())\n+        return;\n+\n+    int nBlocksToConfirm = (int)25 - (int)std::max(0, std::min(24, ui->sliderSmartFee->value()));\n+    CFeeRate feeRate = mempool.estimateFee(nBlocksToConfirm);\n+    if (feeRate <= CFeeRate(0)) // not enough data => minfee\n+    {\n+        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::minTxFee.GetFeePerK()) + \"/kB\");\n+        ui->labelSmartFee2->show(); // (Smart fee not initialized yet. This usually takes a few blocks...)\n+        ui->labelFeeEstimation->setText(\"\");\n+    }\n+    else\n+    {\n+        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), feeRate.GetFeePerK()) + \"/kB\");\n+        ui->labelSmartFee2->hide();\n+        ui->labelFeeEstimation->setText(tr(\"Estimated to begin confirmation within %1 block(s).\").arg(nBlocksToConfirm));\n+    }\n+\n+    updateFeeMinimizedLabel();\n+}\n+\n // Coin Control: copy label \"Quantity\" to clipboard\n void SendCoinsDialog::coinControlClipboardQuantity()\n {\n@@ -462,19 +648,19 @@ void SendCoinsDialog::coinControlClipboardAmount()\n // Coin Control: copy label \"Fee\" to clipboard\n void SendCoinsDialog::coinControlClipboardFee()\n {\n-    GUIUtil::setClipboard(ui->labelCoinControlFee->text().left(ui->labelCoinControlFee->text().indexOf(\" \")));\n+    GUIUtil::setClipboard(ui->labelCoinControlFee->text().left(ui->labelCoinControlFee->text().indexOf(\" \")).replace(\"~\", \"\"));\n }\n \n // Coin Control: copy label \"After fee\" to clipboard\n void SendCoinsDialog::coinControlClipboardAfterFee()\n {\n-    GUIUtil::setClipboard(ui->labelCoinControlAfterFee->text().left(ui->labelCoinControlAfterFee->text().indexOf(\" \")));\n+    GUIUtil::setClipboard(ui->labelCoinControlAfterFee->text().left(ui->labelCoinControlAfterFee->text().indexOf(\" \")).replace(\"~\", \"\"));\n }\n \n // Coin Control: copy label \"Bytes\" to clipboard\n void SendCoinsDialog::coinControlClipboardBytes()\n {\n-    GUIUtil::setClipboard(ui->labelCoinControlBytes->text());\n+    GUIUtil::setClipboard(ui->labelCoinControlBytes->text().replace(\"~\", \"\"));\n }\n \n // Coin Control: copy label \"Priority\" to clipboard\n@@ -492,7 +678,7 @@ void SendCoinsDialog::coinControlClipboardLowOutput()\n // Coin Control: copy label \"Change\" to clipboard\n void SendCoinsDialog::coinControlClipboardChange()\n {\n-    GUIUtil::setClipboard(ui->labelCoinControlChange->text().left(ui->labelCoinControlChange->text().indexOf(\" \")));\n+    GUIUtil::setClipboard(ui->labelCoinControlChange->text().left(ui->labelCoinControlChange->text().indexOf(\" \")).replace(\"~\", \"\"));\n }\n \n // Coin Control: settings menu - coin control enabled/disabled by user"
      },
      {
        "sha": "15d39782a1ed65c6488350e04b38218431a7c68c",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -10,6 +10,7 @@\n #include <QDialog>\n #include <QString>\n \n+class ClientModel;\n class OptionsModel;\n class SendCoinsEntry;\n class SendCoinsRecipient;\n@@ -31,6 +32,7 @@ class SendCoinsDialog : public QDialog\n     explicit SendCoinsDialog(QWidget *parent = 0);\n     ~SendCoinsDialog();\n \n+    void setClientModel(ClientModel *clientModel);\n     void setModel(WalletModel *model);\n \n     /** Set up the tab chain manually, as Qt messes up the tab chain by default in some cases (issue https://bugreports.qt-project.org/browse/QTBUG-10907).\n@@ -52,16 +54,22 @@ public slots:\n \n private:\n     Ui::SendCoinsDialog *ui;\n+    ClientModel *clientModel;\n     WalletModel *model;\n     bool fNewRecipientAllowed;\n+    bool fFeeMinimized;\n \n     // Process WalletModel::SendCoinsReturn and generate a pair consisting\n     // of a message and message flags for use in emit message().\n     // Additional parameter msgArg can be used via .arg(msgArg).\n     void processSendCoinsReturn(const WalletModel::SendCoinsReturn &sendCoinsReturn, const QString &msgArg = QString());\n+    void minimizeFeeSection(bool fMinimize);\n+    void updateFeeMinimizedLabel();\n \n private slots:\n     void on_sendButton_clicked();\n+    void on_buttonChooseFee_clicked();\n+    void on_buttonMinimizeFee_clicked();\n     void removeEntry(SendCoinsEntry* entry);\n     void updateDisplayUnit();\n     void coinControlFeatureChanged(bool);\n@@ -77,6 +85,11 @@ private slots:\n     void coinControlClipboardPriority();\n     void coinControlClipboardLowOutput();\n     void coinControlClipboardChange();\n+    void setMinimumFee();\n+    void updateFeeSectionControls();\n+    void updateMinFeeLabel();\n+    void updateSmartFeeLabel();\n+    void updateGlobalFeeVariables();\n \n signals:\n     // Fired when a message should be reported to the user"
      },
      {
        "sha": "b20465794d0a7abbd53fadeaa80c1e0a757dd79e",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -277,6 +277,10 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n                          CClientUIInterface::MSG_ERROR);\n             return TransactionCreationFailed;\n         }\n+\n+        // reject insane fee > 0.1 bitcoin\n+        if (nFeeRequired > 10000000)\n+            return InsaneFee;\n     }\n \n     return SendCoinsReturn(OK);"
      },
      {
        "sha": "d7e391f8d16dda1352e9b252813df3a6252e9b94",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -110,7 +110,8 @@ class WalletModel : public QObject\n         AmountWithFeeExceedsBalance,\n         DuplicateAddress,\n         TransactionCreationFailed, // Error returned when wallet is still locked\n-        TransactionCommitFailed\n+        TransactionCommitFailed,\n+        InsaneFee\n     };\n \n     enum EncryptionStatus"
      },
      {
        "sha": "e9e20c7d51921503d1f8b1b7da48677a518a3ad0",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -31,6 +31,11 @@ CWalletTx *WalletModelTransaction::getTransaction()\n     return walletTransaction;\n }\n \n+unsigned int WalletModelTransaction::getTransactionSize()\n+{\n+    return (!walletTransaction ? 0 : (::GetSerializeSize(*(CTransaction*)walletTransaction, SER_NETWORK, PROTOCOL_VERSION)));\n+}\n+\n CAmount WalletModelTransaction::getTransactionFee()\n {\n     return fee;"
      },
      {
        "sha": "4272529abe02641a0edd6e2838289eb025d19be6",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -25,6 +25,7 @@ class WalletModelTransaction\n     QList<SendCoinsRecipient> getRecipients();\n \n     CWalletTx *getTransaction();\n+    unsigned int getTransactionSize();\n \n     void setTransactionFee(const CAmount& newFee);\n     CAmount getTransactionFee();"
      },
      {
        "sha": "9bab180108c4dbb2405789d71bb4b66b5235d96e",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -101,6 +101,7 @@ void WalletView::setClientModel(ClientModel *clientModel)\n     this->clientModel = clientModel;\n \n     overviewPage->setClientModel(clientModel);\n+    sendCoinsPage->setClientModel(clientModel);\n }\n \n void WalletView::setWalletModel(WalletModel *walletModel)"
      },
      {
        "sha": "e68b2181542f5594d97012aa283f4a52f444f64a",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -15,11 +15,16 @@\n \n class CAutoFile;\n \n+inline double AllowFreeThreshold()\n+{\n+    return COIN * 144 / 250;\n+}\n+\n inline bool AllowFree(double dPriority)\n {\n     // Large (in bytes) low-priority (new, small-coin) transactions\n     // need a fee.\n-    return dPriority > COIN * 144 / 250;\n+    return dPriority > AllowFreeThreshold();\n }\n \n /** Fake height value used in CCoins to signify they are only in the memory pool (since 0.8) */"
      },
      {
        "sha": "5aea9881cd592dabef9a5354bde8d621786c7369",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1c9d5b415fda7d1310c23857e57d98ac14c3063/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=c1c9d5b415fda7d1310c23857e57d98ac14c3063",
        "patch": "@@ -28,7 +28,7 @@ using namespace std;\n CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = 1;\n bool bSpendZeroConfChange = true;\n-bool fSendFreeTransactions = true;\n+bool fSendFreeTransactions = false;\n bool fPayAtLeastCustomFee = true;\n \n /** \n@@ -1384,10 +1384,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n     {\n         LOCK2(cs_main, cs_wallet);\n         {\n-            if (fPayAtLeastCustomFee)\n-                nFeeRet = payTxFee.GetFeePerK();\n-            else\n-                nFeeRet = 0;\n+            nFeeRet = 0;\n             while (true)\n             {\n                 txNew.vin.clear();\n@@ -1636,6 +1633,9 @@ CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarge\n     // prevent user from paying a non-sense fee (like 1 satoshi): 0 < fee < minRelayFee\n     if (nFeeNeeded > 0 && nFeeNeeded < ::minRelayTxFee.GetFee(nTxBytes))\n         nFeeNeeded = ::minRelayTxFee.GetFee(nTxBytes);\n+    // user selected total at least (default=true)\n+    if (fPayAtLeastCustomFee && nFeeNeeded > 0 && nFeeNeeded < payTxFee.GetFeePerK())\n+        nFeeNeeded = payTxFee.GetFeePerK();\n     // User didn't set: use -txconfirmtarget to estimate...\n     if (nFeeNeeded == 0)\n         nFeeNeeded = pool.estimateFee(nConfirmTarget).GetFee(nTxBytes);"
      }
    ]
  }
]