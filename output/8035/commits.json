[
  {
    "sha": "f19025106de47a92396f9fb98e6d3bbc568c40b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTkwMjUxMDZkZTQ3YTkyMzk2ZjlmYjk4ZTZkM2JiYzU2OGM0MGI1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-01-02T11:34:08Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-05-31T12:47:00Z"
      },
      "message": "[Wallet] Add simplest BIP32/deterministic key generation implementation",
      "tree": {
        "sha": "54d64f8e6aad10ec6866e5f25cad88d65dd3b4ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54d64f8e6aad10ec6866e5f25cad88d65dd3b4ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f19025106de47a92396f9fb98e6d3bbc568c40b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXTYfFAAoJECnUvLZBb1PsghUQAJjAGn9ZirtBxRSdh28hhP9I\nVL4PfcO8U88bwcOXZQNT3G7HMCH3GAmr+NH6UpqW7pUAOhX/OhRtMm72BY7T3xSI\nknuNThhKgwtGdBkoh6cp4W2J3Q+0Ezd2m/aU79lJ7nAK3x9PlImf17pqWntwndHE\nCtvhNyI0Bjcjpaqsj/eizlQNjJUC7nZP6GJH02KsKYcQ2JdgP8Ez3IqcKYIL41r+\nZTHg4M4dvvD3IXir9sbJJLWbXhkSENh0WAbzSLxwspMtM/oW7KKi+ZtohEEOeo5P\nbtAinuf84iv74J775SRAo5vGCCGtplfL9lbjXcOOj3JilF5ATglqqtvS19LQ41l6\nGs9G1awXVMYkAwvzcmdfldlj5GghMtpYEiycS8xULSYk6khaVDDI06gvXmr/8k1K\n2oYiJWsOUONX76yuA4kzNugE97SUeWKyOAZ0RDJKReLY2ACxHUnhLN1S4Hdf7V6g\n+yXXgZbbPbVyRZPhZYBIwynV3ZpTflIHcpcMFRcj5hRWbsnBZtD23vXAFeOfUIQi\nUNmYa2VBDUCv15IBz9e/MofRTX7W8muTNA/yo1yyKJw9l/qMoKGg5APBkOGLdxyc\nnHK80pwkae+DlDMdMZYULZdm6Y4UZMQMpe1uSnZtOSqXjXxb39HhlWismGqyIMk1\nayac6EvonU1CLnLc9jjy\n=WeQr\n-----END PGP SIGNATURE-----",
        "payload": "tree 54d64f8e6aad10ec6866e5f25cad88d65dd3b4ab\nparent 950be19727a581970591d8f8138dfe4725750382\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1451734448 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1464698820 +0200\n\n[Wallet] Add simplest BIP32/deterministic key generation implementation\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f19025106de47a92396f9fb98e6d3bbc568c40b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f19025106de47a92396f9fb98e6d3bbc568c40b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f19025106de47a92396f9fb98e6d3bbc568c40b5/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "950be19727a581970591d8f8138dfe4725750382",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/950be19727a581970591d8f8138dfe4725750382",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/950be19727a581970591d8f8138dfe4725750382"
      }
    ],
    "stats": {
      "total": 147,
      "additions": 143,
      "deletions": 4
    },
    "files": [
      {
        "sha": "fdb46472a83a1e6f7611f39765d12637ff8277dc",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 82,
        "deletions": 4,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f19025106de47a92396f9fb98e6d3bbc568c40b5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f19025106de47a92396f9fb98e6d3bbc568c40b5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=f19025106de47a92396f9fb98e6d3bbc568c40b5",
        "patch": "@@ -91,7 +91,48 @@ CPubKey CWallet::GenerateNewKey()\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     CKey secret;\n-    secret.MakeNewKey(fCompressed);\n+\n+    // Create new metadata\n+    int64_t nCreationTime = GetTime();\n+    CKeyMetadata metadata(nCreationTime);\n+\n+    // use HD key derivation if HD was enabled during wallet creation\n+    if (!hdChain.masterKeyID.IsNull()) {\n+        // for now we use a fixed keypath scheme of m/0'/0'/k\n+        CKey key;                      //master key seed (256bit)\n+        CExtKey masterKey;             //hd master key\n+        CExtKey accountKey;            //key at m/0'\n+        CExtKey externalChainChildKey; //key at m/0'/0'\n+        CExtKey childKey;              //key at m/0'/0'/<n>'\n+\n+        // try to get the master key\n+        if (!GetKey(hdChain.masterKeyID, key))\n+            throw std::runtime_error(\"CWallet::GenerateNewKey(): Master key not found\");\n+\n+        masterKey.SetMaster(key.begin(), key.size());\n+\n+        // derive m/0'\n+        // use hardened derivation (child keys > 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, 0 | 0x80000000);\n+\n+        // derive m/0'/0'\n+        accountKey.Derive(externalChainChildKey, 0 | 0x80000000);\n+\n+        // derive child key at next index, skip keys already known to the wallet\n+        do\n+        {\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | 0x80000000);\n+            // increment childkey index\n+            hdChain.nExternalChainCounter++;\n+        } while(HaveKey(childKey.key.GetPubKey().GetID()));\n+        secret = childKey.key;\n+\n+        // update the chain model in the database\n+        if (!CWalletDB(strWalletFile).WriteHDChain(hdChain))\n+            throw std::runtime_error(\"CWallet::GenerateNewKey(): Writing HD chain model failed\");\n+    } else {\n+        secret.MakeNewKey(fCompressed);\n+    }\n \n     // Compressed public keys were introduced in version 0.6.0\n     if (fCompressed)\n@@ -100,9 +141,7 @@ CPubKey CWallet::GenerateNewKey()\n     CPubKey pubkey = secret.GetPubKey();\n     assert(secret.VerifyPubKey(pubkey));\n \n-    // Create new metadata\n-    int64_t nCreationTime = GetTime();\n-    mapKeyMetadata[pubkey.GetID()] = CKeyMetadata(nCreationTime);\n+    mapKeyMetadata[pubkey.GetID()] = metadata;\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n \n@@ -1049,6 +1088,37 @@ CAmount CWallet::GetChange(const CTransaction& tx) const\n     return nChange;\n }\n \n+bool CWallet::SetHDMasterKey(const CKey& key)\n+{\n+    LOCK(cs_wallet);\n+\n+    // store the key as normal \"key\"/\"ckey\" object\n+    // in the database\n+    // key metadata is not required\n+    CPubKey pubkey = key.GetPubKey();\n+    if (!AddKeyPubKey(key, pubkey))\n+        throw std::runtime_error(\"CWallet::GenerateNewKey(): AddKey failed\");\n+\n+    // store the keyid (hash160) together with\n+    // the child index counter in the database\n+    // as a hdchain object\n+    CHDChain newHdChain;\n+    newHdChain.masterKeyID = pubkey.GetID();\n+    SetHDChain(newHdChain, false);\n+\n+    return true;\n+}\n+\n+bool CWallet::SetHDChain(const CHDChain& chain, bool memonly)\n+{\n+    LOCK(cs_wallet);\n+    if (!memonly && !CWalletDB(strWalletFile).WriteHDChain(chain))\n+        throw runtime_error(\"AddHDChain(): writing chain failed\");\n+\n+    hdChain = chain;\n+    return true;\n+}\n+\n int64_t CWalletTx::GetTxTime() const\n {\n     int64_t n = nTimeSmart;\n@@ -3058,6 +3128,7 @@ std::string CWallet::GetWalletHelpString(bool showDebug)\n         strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), DEFAULT_SEND_FREE_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), DEFAULT_SPEND_ZEROCONF_CHANGE));\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-usehd\", _(\"Use hierarchical deterministic key generation (HD) after bip32. Only has effect during wallet creation/first start\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_USE_HD_WALLET));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));\n     strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_WALLETBROADCAST));\n@@ -3145,6 +3216,13 @@ bool CWallet::InitLoadWallet()\n     if (fFirstRun)\n     {\n         // Create new keyUser and set as default key\n+        if (GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET)) {\n+            // generate a new master key\n+            CKey key;\n+            key.MakeNewKey(true);\n+            if (!walletInstance->SetHDMasterKey(key))\n+                throw std::runtime_error(\"CWallet::GenerateNewKey(): Storing master key failed\");\n+        }\n         CPubKey newDefaultKey;\n         if (walletInstance->GetKeyFromPool(newDefaultKey)) {\n             walletInstance->SetDefaultKey(newDefaultKey);"
      },
      {
        "sha": "a819c03266e5e77fea385aa80ddc97ef8d662db0",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f19025106de47a92396f9fb98e6d3bbc568c40b5/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f19025106de47a92396f9fb98e6d3bbc568c40b5/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=f19025106de47a92396f9fb98e6d3bbc568c40b5",
        "patch": "@@ -57,6 +57,9 @@ static const unsigned int DEFAULT_TX_CONFIRM_TARGET = 2;\n static const unsigned int MAX_FREE_TRANSACTION_CREATE_SIZE = 1000;\n static const bool DEFAULT_WALLETBROADCAST = true;\n \n+//! if set, all keys will be derived by using BIP32\n+static const bool DEFAULT_USE_HD_WALLET = true;\n+\n extern const char * DEFAULT_WALLET_DAT;\n \n class CBlockIndex;\n@@ -574,6 +577,9 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     void SyncMetaData(std::pair<TxSpends::iterator, TxSpends::iterator>);\n \n+    /* the hd chain data model (external chain counters) */\n+    CHDChain hdChain;\n+\n public:\n     /*\n      * Main wallet lock.\n@@ -887,6 +893,12 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     static bool ParameterInteraction();\n \n     bool BackupWallet(const std::string& strDest);\n+\n+    /* Set the hd chain model (chain child index counters) */\n+    bool SetHDChain(const CHDChain& chain, bool memonly);\n+\n+    /* Set the current hd master key (will reset the chain child index counters) */\n+    bool SetHDMasterKey(const CKey& key);\n };\n \n /** A key allocated from the key pool. */"
      },
      {
        "sha": "7bfd4909506f33e62d15dcf2d9cf47fccf5fed2c",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f19025106de47a92396f9fb98e6d3bbc568c40b5/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f19025106de47a92396f9fb98e6d3bbc568c40b5/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=f19025106de47a92396f9fb98e6d3bbc568c40b5",
        "patch": "@@ -599,6 +599,16 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 return false;\n             }\n         }\n+        else if (strType == \"hdchain\")\n+        {\n+            CHDChain chain;\n+            ssValue >> chain;\n+            if (!pwallet->SetHDChain(chain, true))\n+            {\n+                strErr = \"Error reading wallet database: SetHDChain failed\";\n+                return false;\n+            }\n+        }\n     } catch (...)\n     {\n         return false;\n@@ -1003,3 +1013,10 @@ bool CWalletDB::EraseDestData(const std::string &address, const std::string &key\n     nWalletDBUpdated++;\n     return Erase(std::make_pair(std::string(\"destdata\"), std::make_pair(address, key)));\n }\n+\n+\n+bool CWalletDB::WriteHDChain(const CHDChain& chain)\n+{\n+    nWalletDBUpdated++;\n+    return Write(std::string(\"hdchain\"), chain);\n+}"
      },
      {
        "sha": "71b0ff26db1734f4e93f3945a6e0a32314dc4b8d",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f19025106de47a92396f9fb98e6d3bbc568c40b5/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f19025106de47a92396f9fb98e6d3bbc568c40b5/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=f19025106de47a92396f9fb98e6d3bbc568c40b5",
        "patch": "@@ -40,6 +40,35 @@ enum DBErrors\n     DB_NEED_REWRITE\n };\n \n+/* simple hd chain data model */\n+class CHDChain\n+{\n+public:\n+    uint32_t nExternalChainCounter;\n+    CKeyID masterKeyID; //!< master key hash160\n+\n+    static const int CURRENT_VERSION = 1;\n+    int nVersion;\n+\n+    CHDChain() { SetNull(); }\n+    ADD_SERIALIZE_METHODS;\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion)\n+    {\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n+        READWRITE(nExternalChainCounter);\n+        READWRITE(masterKeyID);\n+    }\n+\n+    void SetNull()\n+    {\n+        nVersion = CHDChain::CURRENT_VERSION;\n+        nExternalChainCounter = 0;\n+        masterKeyID.SetNull();\n+    }\n+};\n+\n class CKeyMetadata\n {\n public:\n@@ -134,6 +163,9 @@ class CWalletDB : public CDB\n     static bool Recover(CDBEnv& dbenv, const std::string& filename, bool fOnlyKeys);\n     static bool Recover(CDBEnv& dbenv, const std::string& filename);\n \n+    //! write the hdchain model (external chain child index counter)\n+    bool WriteHDChain(const CHDChain& chain);\n+\n private:\n     CWalletDB(const CWalletDB&);\n     void operator=(const CWalletDB&);"
      }
    ]
  },
  {
    "sha": "c022e5b15dd0b26bb6ef77a382279987c2efa93f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDIyZTViMTVkZDBiMjZiYjZlZjc3YTM4MjI3OTk4N2MyZWZhOTNm",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-01T18:29:39Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-01T18:29:39Z"
      },
      "message": "[Wallet] use constant for bip32 hardened key limit",
      "tree": {
        "sha": "a4820df4e21e399c36865d47c043f42bb069efe7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4820df4e21e399c36865d47c043f42bb069efe7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c022e5b15dd0b26bb6ef77a382279987c2efa93f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXTympAAoJECnUvLZBb1PssRIP/RaUrxe1fYWG7B+WtA3ins1i\nVkqBfxQd2l8HF4uk7o+m2ApJGlYIIi6KdfkaLVj60G8yOX4wrAZeGNYEmBlAv2Le\n8SFrEEwejkraAsyiBb9ayMR4jeCD5NYYz8UkdmPdLUHglRLGLnYjJaERXg9e4yEs\ntvIS0IVbPzpHfOF3pQAWZp7eh72akQUfP8+XulZi3DnnQjrF8wAjd8su+5VedEiA\n5dEl1isKZLs+R31+J7CED5VMiUNNnaskDZQtikrmteOVcgEecTJ2acWreWdf9sDl\nsuS5WJup4ESAg5+iBnMroPO5JllppBc6XuCBGGUoHFW7JypRRAKyw3vGM3mQqsag\nxJFcaOpGbo9U0nQjy64IQZQsQUiLy44NAZSfj+xOINIa4pJRSzJSakI/0KAOU1Rh\nb2T2gXajw3/bVojJ7vHtiKrTIpGiv0SIwcmh1U8hs9o5Tyr0qg9NVooRaMAHydjX\nwJZMmvlKI8dd+88QZM7GXEWXhDNrjhcqaiaDK9Ttyuf5OxL2tuoXc9q5BWTkYOTp\nP4sP9xdlhcxwRoMxNxEi27lA/SESr0KF9sfOAWUJtIXopJkok301ie3JPlbkngaM\npFUBxmw9yNOgNEiYOy9OGvyW9oUX51jLFP+qjElglGEqxqhkMJwviqC3X+VhGl3u\nA2yeD0Z7p6U7jhzHSVhW\n=6+Pi\n-----END PGP SIGNATURE-----",
        "payload": "tree a4820df4e21e399c36865d47c043f42bb069efe7\nparent f19025106de47a92396f9fb98e6d3bbc568c40b5\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1464805779 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1464805779 +0200\n\n[Wallet] use constant for bip32 hardened key limit\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c022e5b15dd0b26bb6ef77a382279987c2efa93f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c022e5b15dd0b26bb6ef77a382279987c2efa93f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c022e5b15dd0b26bb6ef77a382279987c2efa93f/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f19025106de47a92396f9fb98e6d3bbc568c40b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f19025106de47a92396f9fb98e6d3bbc568c40b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f19025106de47a92396f9fb98e6d3bbc568c40b5"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "1c212d01476dd9585ca86e0370797e0fd58d9c43",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c022e5b15dd0b26bb6ef77a382279987c2efa93f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c022e5b15dd0b26bb6ef77a382279987c2efa93f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c022e5b15dd0b26bb6ef77a382279987c2efa93f",
        "patch": "@@ -42,6 +42,7 @@ bool bSpendZeroConfChange = DEFAULT_SPEND_ZEROCONF_CHANGE;\n bool fSendFreeTransactions = DEFAULT_SEND_FREE_TRANSACTIONS;\n \n const char * DEFAULT_WALLET_DAT = \"wallet.dat\";\n+const uint32_t BIP32_HARDENED_KEY_LIMIT = 0x80000000;\n \n /**\n  * Fees smaller than this (in satoshi) are considered zero fee (for transaction creation)\n@@ -112,16 +113,19 @@ CPubKey CWallet::GenerateNewKey()\n         masterKey.SetMaster(key.begin(), key.size());\n \n         // derive m/0'\n-        // use hardened derivation (child keys > 0x80000000 are hardened after bip32)\n-        masterKey.Derive(accountKey, 0 | 0x80000000);\n+        // use hardened derivation (child keys >= 0x80000000 are hardened after bip32)\n+        masterKey.Derive(accountKey, BIP32_HARDENED_KEY_LIMIT);\n \n         // derive m/0'/0'\n-        accountKey.Derive(externalChainChildKey, 0 | 0x80000000);\n+        accountKey.Derive(externalChainChildKey, BIP32_HARDENED_KEY_LIMIT);\n \n         // derive child key at next index, skip keys already known to the wallet\n         do\n         {\n-            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | 0x80000000);\n+            // always derive hardened keys\n+            // childIndex | BIP32_HARDENED_KEY_LIMIT = derive childIndex in hardened child-index-range\n+            // example: 1 | BIP32_HARDENED_KEY_LIMIT == 0x80000001 == 2147483649\n+            externalChainChildKey.Derive(childKey, hdChain.nExternalChainCounter | BIP32_HARDENED_KEY_LIMIT);\n             // increment childkey index\n             hdChain.nExternalChainCounter++;\n         } while(HaveKey(childKey.key.GetPubKey().GetID()));"
      }
    ]
  },
  {
    "sha": "17c0131fad62bfc966da93b7e42c7f0e07948b51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2MwMTMxZmFkNjJiZmM5NjZkYTkzYjdlNDJjN2YwZTA3OTQ4YjUx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-10T09:04:16Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-10T09:30:13Z"
      },
      "message": "[Docs] Add release notes and bip update for Bip32/HD wallets",
      "tree": {
        "sha": "d2286b10dd74214f132f49faa114c26603afdcb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2286b10dd74214f132f49faa114c26603afdcb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17c0131fad62bfc966da93b7e42c7f0e07948b51",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWoimAAoJECnUvLZBb1PsjRkP/jMfnA1V/jFdXJS+nY6G8Mj/\nPLE3q3lL/JclwqEcxeWM24SQ9O3g5qhbgiqkkcLYTJgmM1TSLzBdRncNw3wHQ4dx\nBVctBqBCtJvr3gWpE7OQFAlO6qFuPljJ9rEQMfZjno7EDh2iEmngy3Ixy92AmcKt\nTPt8l9gGOMPoNWumzMzmCOA5PXNoJ5+zQoyRVyVWWN7/rYEFA5cwNRxdVo5eCXpw\nsOyNGP0hTOOjNVRTzI5HcX47TcXWAczhXYdxeAvvSVlqcyqXLRbd5yqOyXC48MBa\nDY7yExB/xLAa2A1FVvEw7Ffdd+yN4/xiqT+FMlIyc+9GKTLj+ky7ZEVLiBPP/JCS\nkWHvRhO40cgEKXKGCD2vd0Us21twWlcuWbPetMXCAEIAiMrF8f0sX06eWZAuIWuH\nD/+ACY37V59ZaiRYZam73SI3N134+yz78K/TPuQRaqhKLedaFJ3Ys2rMADtAGHAN\naai7i5SCOhp6jVcy3JsRbywM8CVsY1T23lzZYyDhi5Z/yobx3IhvyYVgncxobsI/\n0CR9ATgavPmqbVBAYsY1MHHX58eyhkqi3PimOIx6CLpYbSwRJRL2mRwRY2jBMRuZ\nRiEqsO8r1uawWVTJD2sytUkC1A/z3bFIR8PQ8St5GW04nXclgAfQsTLQIBN/cR6V\nWaavHhlqurTs3kOfTRDX\n=PfLM\n-----END PGP SIGNATURE-----",
        "payload": "tree d2286b10dd74214f132f49faa114c26603afdcb4\nparent c022e5b15dd0b26bb6ef77a382279987c2efa93f\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1465549456 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1465551013 +0200\n\n[Docs] Add release notes and bip update for Bip32/HD wallets\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17c0131fad62bfc966da93b7e42c7f0e07948b51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17c0131fad62bfc966da93b7e42c7f0e07948b51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17c0131fad62bfc966da93b7e42c7f0e07948b51/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c022e5b15dd0b26bb6ef77a382279987c2efa93f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c022e5b15dd0b26bb6ef77a382279987c2efa93f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c022e5b15dd0b26bb6ef77a382279987c2efa93f"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "266544d7ac96d5894b1edd1146c436c20c18ad4f",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c0131fad62bfc966da93b7e42c7f0e07948b51/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c0131fad62bfc966da93b7e42c7f0e07948b51/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=17c0131fad62bfc966da93b7e42c7f0e07948b51",
        "patch": "@@ -9,6 +9,7 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.12.0**):\n * [`BIP 23`](https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/bitcoin/bitcoin/pull/1816)).\n * [`BIP 30`](https://github.com/bitcoin/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/bitcoin/bitcoin/pull/915)).\n * [`BIP 31`](https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/bitcoin/bitcoin/pull/1081)).\n+* [`BIP 32`](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki): Hierarchical Deterministic Wallets has been implemented since **v0.13.0** ([PR #8035](https://github.com/bitcoin/bitcoin/pull/8035)).\n * [`BIP 34`](https://github.com/bitcoin/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/bitcoin/bitcoin/pull/1526)).\n * [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)).\n * [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795))."
      },
      {
        "sha": "72f69446f8f238ad020d1106e40b850fa34d4faf",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c0131fad62bfc966da93b7e42c7f0e07948b51/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c0131fad62bfc966da93b7e42c7f0e07948b51/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=17c0131fad62bfc966da93b7e42c7f0e07948b51",
        "patch": "@@ -112,6 +112,24 @@ feerate. [BIP 133](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawik\n \n ### Wallet\n \n+Hierarchical Deterministic Key Generation\n+-----------------------------------------\n+Newly created wallets will use hierarchical deterministic key generation\n+according to BIP32 (keypath m/0'/0'/k').\n+Existing wallets will still use traditional key generation.\n+\n+Backups of HD wallets, regardless of when they have been created, can\n+therefore be used to re-generate all possible private keys, even the\n+ones which haven't already been generated during the time of the backup.\n+\n+HD key generation for new wallets can be disabled by `-usehd=0`. Keep in\n+mind that this flag only has affect on newly created wallets.\n+You can't disable HD key generation once you have created a HD wallet.\n+\n+There is no distinction between internal (change) and external keys.\n+\n+[Pull request](https://github.com/bitcoin/bitcoin/pull/8035/files), [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n+\n ### GUI\n \n ### Tests"
      }
    ]
  },
  {
    "sha": "afcd77e17936f7ec9bbf7b47f55a211eccc08364",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmNkNzdlMTc5MzZmN2VjOWJiZjdiNDdmNTVhMjExZWNjYzA4MzY0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-13T14:27:41Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-14T06:56:01Z"
      },
      "message": "Detect -usehd mismatches when wallet.dat already exists",
      "tree": {
        "sha": "aa6eec9a2994cf365b4140097adc09ed80e165d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa6eec9a2994cf365b4140097adc09ed80e165d3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afcd77e17936f7ec9bbf7b47f55a211eccc08364",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXX6qBAAoJECnUvLZBb1Psh+oP/iII2ReiimeEvq6Gdl77Uw4N\nWI05nImleUcqN3CX9Ys5uuQJdYlZfHyEQ21zB7/4F7wOvxhfN48LWgdKOuxeC4h0\n5P+NQIGoJ4PjKhXKrD45Ft4TRZVa2uFkatCQTBUctbWIsaCRAnSszOxKHOzB914m\n/FrCVQy03miYv/u905q57nDnxRPA0n4rY9XbG0VOlf4HSDuU4JlOKa6KDrXKLKAs\nzWaZxQdOfTt9kHTrzpJjhZBIHsmuHD+xWoUmMs4pEpjG38cGxBJxh6o8GhFHI12m\n8+asRotSeEBSFIjLf51qMKJi4ZFY59vVBP0DYAtY1HTFjLAxnWYSy2NQVCix+3z8\nwHtrdYqD+6gv52k5oXZJxNkw7s8ezrZzFk4jbw1Kk5d5kY95W28nAU+jleZnhYqy\nbk+dV0OLzTATtsW8eK00ajgmCa3QYAU0LsoicYvy2amwTvhSBLJU670izxgbfKQ/\nYLzQIuQcvKwDr2vipZMztE/kvZsifWZNpcbfJ1bfv+oq4rzl4d02EtMhRv4qk14x\nggPNDKikqXN+uNdm2zrlR7ke2ZhWv6euisWeP+pgDix4zRnWIzQUe9nsMvlrS6+r\nOrJLT6k/OwX/ZNVSsUqXrSlHJOMfmACRxvw7CcpEz+5qvpQcwX/IKugUzLZmk9r9\nqZ35EsV3KFzBPRcwn/xC\n=dm/L\n-----END PGP SIGNATURE-----",
        "payload": "tree aa6eec9a2994cf365b4140097adc09ed80e165d3\nparent 17c0131fad62bfc966da93b7e42c7f0e07948b51\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1465828061 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1465887361 +0200\n\nDetect -usehd mismatches when wallet.dat already exists\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afcd77e17936f7ec9bbf7b47f55a211eccc08364",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/afcd77e17936f7ec9bbf7b47f55a211eccc08364",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afcd77e17936f7ec9bbf7b47f55a211eccc08364/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "17c0131fad62bfc966da93b7e42c7f0e07948b51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17c0131fad62bfc966da93b7e42c7f0e07948b51",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17c0131fad62bfc966da93b7e42c7f0e07948b51"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a4ffdfdb5299ea7ea7ca0215a57aec5e3c21bc2b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afcd77e17936f7ec9bbf7b47f55a211eccc08364/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afcd77e17936f7ec9bbf7b47f55a211eccc08364/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=afcd77e17936f7ec9bbf7b47f55a211eccc08364",
        "patch": "@@ -3236,6 +3236,13 @@ bool CWallet::InitLoadWallet()\n \n         walletInstance->SetBestChain(chainActive.GetLocator());\n     }\n+    else if (mapArgs.count(\"-usehd\")) {\n+        bool useHD = GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET);\n+        if (!walletInstance->hdChain.masterKeyID.IsNull() && !useHD)\n+            return InitError(strprintf(_(\"Error loading %s: You can't disable HD on a already existing HD wallet\"), walletFile));\n+        if (walletInstance->hdChain.masterKeyID.IsNull() && useHD)\n+            return InitError(strprintf(_(\"Error loading %s: You can't enable HD on a already existing non-HD wallet\"), walletFile));\n+    }\n \n     LogPrintf(\" wallet      %15dms\\n\", GetTimeMillis() - nStart);\n "
      }
    ]
  }
]