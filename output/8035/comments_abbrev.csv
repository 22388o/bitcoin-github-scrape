slush0,2016-05-10T10:06:40Z,"Nice minimalistic PR. One question though. Why to use m/0'/0'/i instead of something more standard? BIP32 proposes m/0'/0/i for external chains (I suppose Core in current implementation does not need internal/change chain). Or even better - use m/0/i, which is forward compatible with BIP44 (maybe Core will make it somedays). m/0/i is subset of BIP44 - an account.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218114283,218114283,
paveljanik,2016-05-10T10:25:15Z,"Concept ACK\n\nNice, small, elegant 👍 \n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218118237,218118237,
paveljanik,2016-05-10T10:52:06Z,What should RPC `dumpwallet` dump after this?\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218123738,218123738,
paveljanik,2016-05-10T10:56:40Z,Some import path needed then.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218124694,218124694,
laanwj,2016-05-10T11:02:02Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218125757,218125757,
jonasschnelli,2016-05-10T13:18:03Z,"@slush0: One reason for the current keypath is the use hardened-only key derivation.\nI personally think people overestimate the switch-wallet feature. Importing a bip32 master key together with a given keypath can be tricky (lookup window).\n\nBut I agree.\nIf and once this PR gets merged into master, next thing I would do is writing a PR that would make the keypath flexible.\n\nWe could discuss ",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218154051,218154051,
jonasschnelli,2016-05-10T13:56:03Z,Fixed @paveljanik nits.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218164667,218164667,
slush0,2016-05-10T14:19:33Z,"> I personally think people overestimate the switch-wallet feature.\n\n@jonasschnelli It's actually quite useful feature, and it may be even for Core. I can imagine somebody who'll have Qt wallet awfully out of sync and will need to get his funds ASAP. Then loading the backup to some other software like Multibit HD will do the job. BIP44 is actually being used by most of current wallets so heading",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218171888,218171888,
jonasschnelli,2016-05-10T18:12:40Z,Force push fixed @paveljanik nits. Formatted some of the code with clang-format.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218243036,218243036,
achow101,2016-05-11T12:17:48Z,"Concept ACK\n\nSo as I understand this, it won't affect the keys already in the wallet, right? It just generates all new keys using the HD master key?\n\nAlso there should be an RPC command to dump the master private key.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218442297,218442297,
jonasschnelli,2016-05-11T12:20:54Z,"@achow101:\nfor now (this PR), HD will only be enabled when you create a new wallet (first start).\n\n> Also there should be an RPC command to dump the master private key.\n\nI agree. Have a look at #6265 and #7273.\nThis is my third try to get HD into Cores wallet. I think the way to go is this extremely simple basic step.\nWe can add RPC/API changes later.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218442964,218442964,
instagibbs,2016-05-12T15:14:17Z,utACK https://github.com/bitcoin/bitcoin/pull/8035/commits/cc1df8fa6f4849b65187f60a3cb4c83da3d16788\n\nGlad to see a really simple PR. Baby steps better than no steps.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218788961,218788961,
jonasschnelli,2016-05-12T18:56:32Z,Added a squash me commit with some non-code nit fixes.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-218852532,218852532,
jonasschnelli,2016-05-17T07:42:52Z,Added another squash-me commit with minor nit fixes.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-219642847,219642847,
sipa,2016-05-17T07:55:33Z,"@jonasschnelli clang-format does not reject anything, it just reformats.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-219645472,219645472,
jonasschnelli,2016-05-17T08:11:10Z,@sipa: right! Sorry. I meant it didn't reformat the `else` part.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-219648708,219648708,
sipa,2016-05-17T08:13:45Z,"@jonasschnelli It can't reformat it, because all it does is change whitespace. What we want here is more than just changing whitespace, but there is no way to make clang do that (and also not make it yell about it). Just because a whitespace formatting tool accepts the code, doesn't mean it satisfies all our style guidelines. For example, it also does not check consistency of variable names.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-219649367,219649367,
jonasschnelli,2016-05-17T11:07:28Z,Amend force pushed last squash-me commit with the `else` + bracket change.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-219686978,219686978,
jtimon,2016-05-22T10:21:40Z,"I still have limited knowledge of the wallet, but thanks to this being so simple I was able to review it and everything looks good.\nsomething-between-concept-and-ut ACK\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-220824867,220824867,
arowser,2016-05-25T08:43:38Z,Can one of the admins verify this patch?\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-221510428,221510428,
jonasschnelli,2016-05-31T08:45:58Z,Rebased. Squashed squash-me commits.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-222628091,222628091,
fanquake,2016-05-31T08:57:28Z,This needs to be added to doc/bips.md. I can add it to #8121 if you'd rather not add additional commits.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-222630620,222630620,
paveljanik,2016-05-31T11:44:01Z,"Doesn't build here:\n\n```\nwallet/wallet.cpp:3219:9: error: use of undeclared identifier 'RandAddSeedPerfmon'\n```\n\nSee #7891, it should be enough to remove it.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-222664829,222664829,
MarcoFalke,2016-05-31T11:50:01Z,"I don't think this should be added to doc/bips.md, as this pull does not add any interface at all. Though, the release notes should be updated.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-222666001,222666001,
jonasschnelli,2016-05-31T12:47:35Z,Fixed and force pushed the rebase issue `RandAddSeedPerfmon` (#7891).\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-222677814,222677814,
sipa,2016-06-01T17:03:30Z,"utACK, will test. There are a few nits left to address.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-223058733,223058733,
jonasschnelli,2016-06-01T18:33:08Z,Added a commit that...\n- ... uses a constant for 0x80000000 (hardened child index range limit)\n- ... extend the source code comment\n- ... simplify `0 | 0x80000000` in `0x80000000` (and is now a const)\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-223084234,223084234,
laanwj,2016-06-09T08:24:15Z,This is a high-profile feature. Definitely needs mention in release notes.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-224830592,224830592,
jonasschnelli,2016-06-09T08:24:57Z,Okay. I'll write something for the release notes.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-224830743,224830743,
jonasschnelli,2016-06-10T09:09:47Z,Added a part in the `release-notes.md` (thanks for lang review).\nUpdated the `bips.md`.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225131334,225131334,
sipa,2016-06-11T14:40:56Z,"I prefer `-usehd`, but adding a check that if it is given in case there already exists a wallet, we verify that it matches that wallet. That way you won't ever get any surprises, just set `-usehd`, and you're sure you'll always use HD derivation, set `-usehd=0` and you're sure you'll never.\n\nThat's similar to how `-txindex` works: if given, it must match the existing tree.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225366630,225366630,
MarcoFalke,2016-06-12T10:51:16Z,"@sipa If you add the check that your wallet must match with `-usehd` you can't set the default to true, I assume. Otherwise the a user switching from 0.12.1 to 0.13 would see a InitError or InitWarning pop up on every start.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225426103,225426103,
sipa,2016-06-12T10:55:43Z,"If -usehd is not explicitly given, default to whatever is the current\nwallet (or true for new wallets). if it is explicitly given, it must match\nthe existing wallet.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225426266,225426266,
MarcoFalke,2016-06-12T11:35:42Z,"Ok makes sense. (But that is different from txindex, as I remember you can't set -txindex=1 once and then remove it, to make it default to true. I may be mistaken but I should better not hijack this pull's discussion.)\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225427804,225427804,
instagibbs,2016-06-12T11:39:46Z,"@MarcoFalke it's slightly different, yes, but txindex behavior wouldn't make sense since you can't ""reindex"" your HD wallet to legacy.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225427944,225427944,
jonasschnelli,2016-06-13T14:30:38Z,Added a commit.\nNow the PR detects if a user likes to disabled hd (with `-usehd=0`) when using a hd wallet.dat file.\nThe PR also detects if a user likes to enable hd (with `-usehd=1`) when using a non hd wallet.dat file.\n\nThe node will shutdown/stop init in a such mismatch situation.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225598299,225598299,
MarcoFalke,2016-06-13T15:45:07Z,utACK 71ff55fcc2245e03c786d7e0312755e812d9de8e\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225621461,225621461,
laanwj,2016-06-14T09:44:18Z,"utACK afcd77e\n\nEven though this wallet change is reasonably risky, I think this has received enough review for correctness, and it should be merged now to make sure it gets more actual testing.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-225831832,225831832,
gmaxwell,2016-06-15T09:40:19Z,Post merge utACK. Will also test.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-226138316,226138316,
schildbach,2016-06-15T18:22:39Z,Just found out about this PR. Would like to clarify the keypath: It's purpose number is `0'` not `0`? (`(m/0'/0'/k')` not `(m/0/0'/k')`)\n\nI'm asking because otherwise it could be incompatible to how bitcoinj derives addresses.\n,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-226275624,226275624,
jonasschnelli,2016-06-17T14:12:32Z,"@schildbach: We have decided to go with a ""hardened only derivation"" version for the first implementation. Using `m/0/0'/k'` would introduce the risk of revealing extended pubkey `m/0` together with a non extended child privatekey resulting in revealing the whole chain of keys.\n\nOn top of that, I personally think importing a xpriv into another wallet in order to ""reconstruct everything"" is not a",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-226779483,226779483,
schildbach,2016-06-17T19:42:18Z,"@jonasschnelli Yes that's fine. I just wanted to make sure there is no ""partial overlap"" with the bitcoinj impl.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-226863839,226863839,
rebroad,2016-06-25T15:54:49Z,"So, how does one import a BIP32 master key into an existing wallet?\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-228551932,228551932,
diegoviola,2016-06-25T16:10:31Z,"I'm switching to Core (from Electrum) after this lands in 0.13, thanks for your efforts.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-228553045,228553045,
laanwj,2016-06-27T12:27:01Z,"> So, how does one import a BIP32 master key into an existing wallet?\n\nThat functionality currently doesn't exist. Please read the OP: this is the smallest possible change to introduce BIP32 into Bitcoin Core. This made it realistic to get it reviewed and merged in a small timespan. More functionality can be added later.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-228731246,228731246,
TheBlueMatt,2016-07-19T01:48:44Z,"Post-merge review comments, sorry :/ (continued from IRC):\nThere is also a comment on #8324 and other related PRs here.\n- The use of an ECDSA private key (stored as such) as the master seed is somewhat strange...While not strictly an issue, I'm concerned about the ability of users to dump this as a regular key, potentially causing some interesting behavior.\n- The way I read the current code, ev",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-233508913,233508913,
jonasschnelli,2016-07-19T05:32:11Z,"Thanks for the post-merge review Matt.\n\n> The use of an ECDSA private key (stored as such) as the master seed is somewhat strange...While not strictly an issue, I'm concerned about the ability of users to dump this as a regular key, potentially causing some interesting behavior.\n\nYes. Agree. This was done after two of my former PR did not made it into the master (https://github.com/bitcoin/bit",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-233536242,233536242,
TheBlueMatt,2016-07-19T23:51:11Z,"re: GenerateNewKey(): Not sure what your response was about (seems to be communication failure there), but it was pointed out to me that I missed the save line and was incorrect.\n",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-233800543,233800543,
zihad944,2018-08-11T21:10:58Z,I foget my sceond wallet passwor. Thats why i cant get backup. I need help  ,https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-412301835,412301835,
jeandudey,2018-08-11T21:16:09Z,"@zihad944 what problem do you have specifically, what do you mean by ""my second wallet password""? ",https://github.com/bitcoin/bitcoin/pull/8035#issuecomment-412302075,412302075,
paveljanik,2016-05-10T10:15:42Z,No need for `strprintf`. See previous line.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62645694,62645694,src/wallet/wallet.cpp
paveljanik,2016-05-10T10:17:31Z,s/AddChain/SetHDChain/\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62645945,62645945,src/wallet/walletdb.cpp
paveljanik,2016-05-10T10:20:47Z,"Repeating `""hdchain""` several times reminds me there was some patch redefining these as constants...\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62646344,62646344,src/wallet/walletdb.cpp
laanwj,2016-05-10T11:02:45Z,"Which one? We did the redefine-magic-strings-as-constants it in other places, but also for the wallet?\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62651748,62651748,src/wallet/walletdb.cpp
paveljanik,2016-05-10T11:12:46Z,"Yes, because some of them are repeated several times in the file. But maybe I'm remembering some other patch.\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62653035,62653035,src/wallet/walletdb.cpp
paveljanik,2016-05-10T11:15:34Z,"Ah, it probably was #5707.\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62653333,62653333,src/wallet/walletdb.cpp
jonasschnelli,2016-05-10T13:09:20Z,Yes. I did refactor out these stings into constants serval times. But this should be done in another PR and hopefully after this has been merged.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62667509,62667509,src/wallet/walletdb.cpp
jonasschnelli,2016-05-10T13:11:57Z,"Hmm... I have looked at `walletbroadcast`, there `strprintf` is also used. Isn't more flexible for the translation then?\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62667901,62667901,src/wallet/wallet.cpp
MarcoFalke,2016-05-10T13:31:29Z,"I think you want to `strprintf(_(string))` the whole string and not two separate stings, as other languages might have different grammar. but consider it a nit.\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62671064,62671064,src/wallet/wallet.cpp
paveljanik,2016-05-10T17:23:14Z,the the\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62714441,62714441,src/wallet/wallet.cpp
paveljanik,2016-05-10T17:24:10Z,derived\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62714610,62714610,src/wallet/wallet.h
paveljanik,2016-05-10T17:24:44Z,"Definitely not for this PR, of course.\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62714724,62714724,src/wallet/walletdb.cpp
paveljanik,2016-05-10T17:25:28Z,two spaces\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62714844,62714844,src/wallet/walletdb.h
MarcoFalke,2016-05-10T17:30:25Z,Maybe just clang-format the diff?\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62715716,62715716,src/wallet/walletdb.h
sipa,2016-05-10T18:13:12Z,"I think you should check whether the derived key already exists in the keystore, and if so, try the next chaincounter. Otheriwse you'll give out the same keys twice after a backup restore.\n\nEDIT: nevermind, that's not going to work. we'll also need to make keypool entries be regenerated when one is encountered in the blockchain or mempool. I think we can defer that...\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62723177,62723177,src/wallet/wallet.cpp
jonasschnelli,2016-05-11T12:32:05Z,I added a loop to derive the next key as long as its not known by the wallet. I think this is required otherwise we might run into an exception if someone restores a backup or has imported a derived key of a higher child index.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r62838900,62838900,src/wallet/wallet.cpp
instagibbs,2016-05-12T14:50:59Z,external only for now? (and in the other 2 places in the PR)\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63034009,63034009,src/wallet/wallet.h
instagibbs,2016-05-12T14:53:16Z,s/Has only affect/Only has effect/\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63034380,63034380,src/wallet/wallet.cpp
MarcoFalke,2016-05-12T14:59:59Z,Nit: I think you want to use `//!<` when placing a trailing comment.\n\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#doxygen-comments\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63035718,63035718,src/wallet/walletdb.h
instagibbs,2016-05-12T15:03:58Z,"~~nit: simply calling AddKey should work here~~ nevermind, wrong function\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63036439,63036439,src/wallet/wallet.cpp
pstratem,2016-05-17T05:36:33Z,Why is this an assertion but missing the master key is an exception?\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63466646,63466646,src/wallet/wallet.cpp
pstratem,2016-05-17T05:37:33Z,Needs comment about hardened derivation.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63466697,63466697,src/wallet/wallet.cpp
pstratem,2016-05-17T05:42:02Z,Please add braces here for the else block.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63466976,63466976,src/wallet/wallet.cpp
jonasschnelli,2016-05-17T05:43:08Z,I agree. This assertion should be removed.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63467081,63467081,src/wallet/wallet.cpp
jonasschnelli,2016-05-17T07:40:40Z,our clang format script accepted that.\nWhat's wrong with it? :-)\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63476458,63476458,src/wallet/wallet.cpp
MarcoFalke,2016-05-17T08:17:42Z,I think that is what clang-tidy is supposed to do ;)\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r63481179,63481179,src/wallet/wallet.cpp
jtimon,2016-05-22T09:46:35Z,"Sorry, I don't understand this `| 0x80000000` from the comments...\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r64147195,64147195,src/wallet/wallet.cpp
instagibbs,2016-05-22T10:05:32Z,"Hardened keys are >= 0x80000000, not > according to bip32\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r64147377,64147377,src/wallet/wallet.cpp
jonasschnelli,2016-05-22T10:06:10Z,"It's specified here:\nhttps://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions\n\nYou can derive 2^32 key, child keys <= 2147483648 (<=0x80000000) are non-hardened key. Derived child keys > 2147483648 are hardened keys.\n\nThis line:\n`masterKey.Derive(accountKey, 0 | 0x80000000);`\n.. is equal to ..\n`masterKey.Derive(accountKey, 0 + 2147483648)`\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r64147389,64147389,src/wallet/wallet.cpp
MarcoFalke,2016-05-22T10:09:09Z,I think the comment has a typo?\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r64147425,64147425,src/wallet/wallet.cpp
jtimon,2016-05-22T10:27:39Z,"Oh, I forgot about this, thanks. IIRC, pycoin (what I've used for bip32 so far) used an asterisk in its interface for hardened keys. I wouldn't complain if the link was added to the comment, but maybe an appropriately named constant for  0x80000000 would be enough.\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r64147696,64147696,src/wallet/wallet.cpp
MarcoFalke,2016-05-31T11:51:17Z,comment-nit: It is >= 0x80000000\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r65167230,65167230,src/wallet/wallet.cpp
sipa,2016-06-01T16:49:27Z,Agree about adding a named constant.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r65399174,65399174,src/wallet/wallet.cpp
sipa,2016-06-01T16:56:17Z,"I'd like to know why this comment does not apply.\n\nEDIT: because you need pubkey below anyway, ok!\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r65400352,65400352,src/wallet/wallet.cpp
MarcoFalke,2016-06-10T09:26:58Z,"Nit: Let's call it ""Backups of HD wallets""?\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r66585229,66585229,doc/release-notes.md
MarcoFalke,2016-06-10T09:28:01Z,"""even the ones **which haven't** already""?\n",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r66585346,66585346,doc/release-notes.md
MarcoFalke,2016-06-10T09:31:12Z,Nit: Might as well call this `-createhdwallet` or similar. Using a lengthy and more verbose option does not hurt if it is expected to be changed from its default only very rarely.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r66585657,66585657,src/wallet/wallet.cpp
jonasschnelli,2016-06-10T09:32:07Z,Agree that `-createhdwallet` would make more sense.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r66585755,66585755,src/wallet/wallet.cpp
laanwj,2016-06-14T06:45:36Z,"Can be simplified a bit:\n\n```\nelse if (mapArgs.count(""-usehd"")) {\n    bool useHd = GetBoolArg(""-usehd"", DEFAULT_USEHD);\n    if (!walletInstance->hdChain.masterKeyID.IsNull() && !useHD)\n        return InitError(strprintf(_(""Error loading %s: You can't disable HD on a already existing HD wallet""), walletFile));\n    if (walletInstance->hdChain.masterKeyID.IsNull() && useHD)\n        return Ini",https://github.com/bitcoin/bitcoin/pull/8035#discussion_r66916247,66916247,src/wallet/wallet.cpp
jonasschnelli,2016-06-14T06:56:30Z,Thanks. Much simpler.\nForce push updated last commit.\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r66917220,66917220,src/wallet/wallet.cpp
MarcoFalke,2016-07-08T17:20:34Z,Nit: Wrong function name\n,https://github.com/bitcoin/bitcoin/pull/8035#discussion_r70108857,70108857,src/wallet/wallet.cpp
