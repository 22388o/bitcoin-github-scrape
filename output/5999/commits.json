[
  {
    "sha": "e8e8904ddae09ef9dc444bcdd2955109c9e9ce64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGU4OTA0ZGRhZTA5ZWY5ZGM0NDRiY2RkMjk1NTEwOWM5ZTljZTY0",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-10T16:35:09Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-13T16:39:53Z"
      },
      "message": "Chainparams: Cleanup: Delete CChainParams getters to attributes from Consensus::Params",
      "tree": {
        "sha": "5d5d252d7ba327c04c9c69519617a51cb990ee54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d5d252d7ba327c04c9c69519617a51cb990ee54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9125c08f3468928eba004636bd95494a94e1a82b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9125c08f3468928eba004636bd95494a94e1a82b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9125c08f3468928eba004636bd95494a94e1a82b"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 5,
      "deletions": 7
    },
    "files": [
      {
        "sha": "d604c1d76e659eff2ec33936c1ce7514f65f5e2b",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=e8e8904ddae09ef9dc444bcdd2955109c9e9ce64",
        "patch": "@@ -44,7 +44,6 @@ class CChainParams\n     const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n     const std::vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n     int GetDefaultPort() const { return nDefaultPort; }\n-    const uint256& ProofOfWorkLimit() const { return consensus.powLimit; }\n     int SubsidyHalvingInterval() const { return consensus.nSubsidyHalvingInterval; }\n     int EnforceBlockUpgradeMajority() const { return consensus.nMajorityEnforceBlockUpgrade; }\n     int RejectBlockOutdatedMajority() const { return consensus.nMajorityRejectBlockOutdated; }\n@@ -62,9 +61,6 @@ class CChainParams\n     bool AllowMinDifficultyBlocks() const { return consensus.fPowAllowMinDifficultyBlocks; }\n     /** Make standard checks */\n     bool RequireStandard() const { return fRequireStandard; }\n-    int64_t TargetTimespan() const { return consensus.nPowTargetTimespan; }\n-    int64_t TargetSpacing() const { return consensus.nPowTargetSpacing; }\n-    int64_t DifficultyAdjustmentInterval() const { return consensus.nPowTargetTimespan / consensus.nPowTargetSpacing; }\n     /** Make miner stop after a block is found. In RPC, don't return until nGenProcLimit blocks are generated */\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     /** In the future use NetworkIDString() for RPC fields */"
      },
      {
        "sha": "5878d3dc079f336f840b70f8d49c556830495253",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e8e8904ddae09ef9dc444bcdd2955109c9e9ce64",
        "patch": "@@ -3577,6 +3577,7 @@ void static ProcessGetData(CNode* pfrom)\n \n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv, int64_t nTimeReceived)\n {\n+    const CChainParams& chainparams = Params();\n     RandAddSeedPerfmon();\n     LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->id);\n     if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n@@ -3836,7 +3837,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     // not a direct successor.\n                     pfrom->PushMessage(\"getheaders\", chainActive.GetLocator(pindexBestHeader), inv.hash);\n                     CNodeState *nodestate = State(pfrom->GetId());\n-                    if (chainActive.Tip()->GetBlockTime() > GetAdjustedTime() - Params().TargetSpacing() * 20 &&\n+                    if (chainActive.Tip()->GetBlockTime() > GetAdjustedTime() - chainparams.GetConsensus().nPowTargetSpacing * 20 &&\n                         nodestate->nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n                         vToFetch.push_back(inv);\n                         // Mark block as in flight already, even though the actual \"getdata\" message only goes out\n@@ -4499,6 +4500,7 @@ bool ProcessMessages(CNode* pfrom)\n \n bool SendMessages(CNode* pto, bool fSendTrickle)\n {\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n     {\n         // Don't send anything until we get their version message\n         if (pto->nVersion == 0)\n@@ -4686,7 +4688,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // timeout. We compensate for in-flight blocks to prevent killing off peers due to our own downstream link\n         // being saturated. We only count validated in-flight blocks so peers can't advertize nonexisting block hashes\n         // to unreasonably increase our timeout.\n-        if (!pto->fDisconnect && state.vBlocksInFlight.size() > 0 && state.vBlocksInFlight.front().nTime < nNow - 500000 * Params().TargetSpacing() * (4 + state.vBlocksInFlight.front().nValidatedQueuedBefore)) {\n+        if (!pto->fDisconnect && state.vBlocksInFlight.size() > 0 && state.vBlocksInFlight.front().nTime < nNow - 500000 * consensusParams.nPowTargetSpacing * (4 + state.vBlocksInFlight.front().nValidatedQueuedBefore)) {\n             LogPrintf(\"Timeout downloading block %s from peer=%d, disconnecting\\n\", state.vBlocksInFlight.front().hash.ToString(), pto->id);\n             pto->fDisconnect = true;\n         }"
      },
      {
        "sha": "f8cd8791c575ec4ac6bdca7a8e6cff82256a4d0f",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8e8904ddae09ef9dc444bcdd2955109c9e9ce64/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=e8e8904ddae09ef9dc444bcdd2955109c9e9ce64",
        "patch": "@@ -45,7 +45,7 @@ Value GetNetworkHashPS(int lookup, int height) {\n \n     // If lookup is -1, then use blocks since last difficulty change.\n     if (lookup <= 0)\n-        lookup = pb->nHeight % Params().DifficultyAdjustmentInterval() + 1;\n+        lookup = pb->nHeight % Params().GetConsensus().DifficultyAdjustmentInterval() + 1;\n \n     // If lookup is larger than chain, then set it to chain length.\n     if (lookup > pb->nHeight)"
      }
    ]
  }
]