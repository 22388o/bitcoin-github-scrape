[
  {
    "sha": "fb26bf0ea3822638b10a783f054c280fc053a2b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjI2YmYwZWEzODIyNjM4YjEwYTc4M2YwNTRjMjgwZmMwNTNhMmI1",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-04-24T05:21:52Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-04-24T08:30:47Z"
      },
      "message": "CAddrMan::Deserialize handle corrupt serializations better.",
      "tree": {
        "sha": "1b6e5fd2fac54fa186c10e4fa028753d220ed37a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b6e5fd2fac54fa186c10e4fa028753d220ed37a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb26bf0ea3822638b10a783f054c280fc053a2b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb26bf0ea3822638b10a783f054c280fc053a2b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb26bf0ea3822638b10a783f054c280fc053a2b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb26bf0ea3822638b10a783f054c280fc053a2b5/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04a29373571d44be36bd099c3b3ec3cda89e99d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04a29373571d44be36bd099c3b3ec3cda89e99d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04a29373571d44be36bd099c3b3ec3cda89e99d1"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "308545045047447e69e0788c4cb06a3de5660be7",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb26bf0ea3822638b10a783f054c280fc053a2b5/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb26bf0ea3822638b10a783f054c280fc053a2b5/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=fb26bf0ea3822638b10a783f054c280fc053a2b5",
        "patch": "@@ -350,6 +350,14 @@ class CAddrMan\n             nUBuckets ^= (1 << 30);\n         }\n \n+        if (nNew > ADDRMAN_NEW_BUCKET_COUNT * ADDRMAN_BUCKET_SIZE) {\n+            throw std::ios_base::failure(\"Corrupt CAddrMan serialization, nNew exceeds limit.\");\n+        }\n+\n+        if (nTried > ADDRMAN_TRIED_BUCKET_COUNT * ADDRMAN_BUCKET_SIZE) {\n+            throw std::ios_base::failure(\"Corrupt CAddrMan serialization, nTried exceeds limit.\");\n+        }\n+\n         // Deserialize entries from the new table.\n         for (int n = 0; n < nNew; n++) {\n             CAddrInfo &info = mapInfo[n];"
      }
    ]
  },
  {
    "sha": "9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTBiOGI5YmJmNWIwNDdhMmRhOWZjMTNlN2U2ZDI1YTNkNzQyYzJm",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-04-22T22:19:33Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-04-24T10:01:40Z"
      },
      "message": "Simple fuzzing framework.",
      "tree": {
        "sha": "d561253a36da0e15405faf1126382d1e225c2adf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d561253a36da0e15405faf1126382d1e225c2adf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb26bf0ea3822638b10a783f054c280fc053a2b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb26bf0ea3822638b10a783f054c280fc053a2b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb26bf0ea3822638b10a783f054c280fc053a2b5"
      }
    ],
    "stats": {
      "total": 257,
      "additions": 256,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e9a455e2984dfa4c24f66ccbf5896198723b9dd5",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
        "patch": "@@ -5,6 +5,7 @@ src/bitcoin\n src/bitcoind\n src/bitcoin-cli\n src/bitcoin-tx\n+src/bitcoin-fuzzy\n src/test/test_bitcoin\n src/qt/test/test_bitcoin-qt\n "
      },
      {
        "sha": "ce56b172d17bce00bc3ff18f5d8db59d358bfbf2",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
        "patch": "@@ -80,7 +80,7 @@ if BUILD_BITCOIND\n endif\n \n if BUILD_BITCOIN_UTILS\n-  bin_PROGRAMS += bitcoin-cli bitcoin-tx\n+  bin_PROGRAMS += bitcoin-cli bitcoin-tx bitcoin-fuzzy\n endif\n \n .PHONY: FORCE check-symbols check-security\n@@ -414,6 +414,24 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-fuzzy binary #\n+bitcoin_fuzzy_SOURCES = bitcoin-fuzzy.cpp\n+bitcoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+bitcoin_fuzzy_LDADD = \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBSECP256K1)\n+\n+bitcoin_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+#\n+\n # bitcoinconsensus library #\n if BUILD_BITCOIN_LIBS\n include_HEADERS = script/bitcoinconsensus.h"
      },
      {
        "sha": "9fca0494a4d2d60412c8a0c9e705041299fe408e",
        "filename": "src/bitcoin-fuzzy.cpp",
        "status": "added",
        "additions": 236,
        "deletions": 0,
        "changes": 236,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f/src/bitcoin-fuzzy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f/src/bitcoin-fuzzy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-fuzzy.cpp?ref=9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
        "patch": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include \"consensus/merkle.h\"\n+#include \"primitives/block.h\"\n+#include \"script/script.h\"\n+#include \"addrman.h\"\n+#include \"chain.h\"\n+#include \"coins.h\"\n+#include \"compressor.h\"\n+#include \"net.h\"\n+#include \"protocol.h\"\n+#include \"streams.h\"\n+#include \"undo.h\"\n+#include \"version.h\"\n+\n+#include <stdint.h>\n+#include <unistd.h>\n+\n+#include <algorithm>\n+#include <vector>\n+\n+enum TEST_ID {\n+    CBLOCK_DESERIALIZE=0,\n+    CTRANSACTION_DESERIALIZE,\n+    CBLOCKLOCATOR_DESERIALIZE,\n+    CBLOCKMERKLEROOT,\n+    CADDRMAN_DESERIALIZE,\n+    CBLOCKHEADER_DESERIALIZE,\n+    CBANENTRY_DESERIALIZE,\n+    CTXUNDO_DESERIALIZE,\n+    CBLOCKUNDO_DESERIALIZE,\n+    CCOINS_DESERIALIZE,\n+    CNETADDR_DESERIALIZE,\n+    CSERVICE_DESERIALIZE,\n+    CMESSAGEHEADER_DESERIALIZE,\n+    CADDRESS_DESERIALIZE,\n+    CINV_DESERIALIZE,\n+    CBLOOMFILTER_DESERIALIZE,\n+    CDISKBLOCKINDEX_DESERIALIZE,\n+    CTXOUTCOMPRESSOR_DESERIALIZE,\n+    TEST_ID_END\n+};\n+\n+bool read_stdin(std::vector<char> &data) {\n+    char buffer[1024];\n+    ssize_t length=0;\n+    while((length = read(STDIN_FILENO, buffer, 1024)) > 0) {\n+        data.insert(data.end(), buffer, buffer+length);\n+        \n+        if (data.size() > (1<<20)) return false;\n+    }\n+    return length==0;\n+}\n+\n+int main(int argc, char **argv)\n+{\n+    std::vector<char> buffer;\n+    if (!read_stdin(buffer)) return 0;\n+    \n+    if (buffer.size() < sizeof(uint32_t)) return 0;\n+    \n+    uint32_t test_id = 0xffffffff;\n+    memcpy(&test_id, &buffer[0], sizeof(uint32_t));\n+    buffer.erase(buffer.begin(), buffer.begin() + sizeof(uint32_t));\n+    \n+    if (test_id >= TEST_ID_END) return 0;\n+    \n+    CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n+    try {\n+        ds.ReadVersion();\n+    } catch (const std::ios_base::failure& e) {\n+        return 0;\n+    }\n+    \n+    switch(test_id) {\n+        case CBLOCK_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CBlock block;\n+                ds >> block;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CTRANSACTION_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CTransaction tx;\n+                ds >> tx;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CBLOCKLOCATOR_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CBlockLocator bl;\n+                ds >> bl;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CBLOCKMERKLEROOT:\n+        {\n+            try\n+            {\n+                CBlock block;\n+                ds >> block;\n+                bool mutated;\n+                BlockMerkleRoot(block, &mutated);\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CADDRMAN_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CAddrMan am;\n+                ds >> am;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CBLOCKHEADER_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CBlockHeader bh;\n+                ds >> bh;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CBANENTRY_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CBanEntry be;\n+                ds >> be;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CTXUNDO_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CTxUndo tu;\n+                ds >> tu;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CBLOCKUNDO_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CBlockUndo bu;\n+                ds >> bu;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CCOINS_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CCoins block;\n+                ds >> block;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CNETADDR_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CNetAddr na;\n+                ds >> na;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CSERVICE_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CService s;\n+                ds >> s;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CMESSAGEHEADER_DESERIALIZE:\n+        {\n+            CMessageHeader::MessageStartChars pchMessageStart = {0x00, 0x00, 0x00, 0x00};\n+            try\n+            {\n+                CMessageHeader mh(pchMessageStart);\n+                ds >> mh;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CADDRESS_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CAddress a;\n+                ds >> a;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CINV_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CInv i;\n+                ds >> i;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CBLOOMFILTER_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CBloomFilter bf;\n+                ds >> bf;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CDISKBLOCKINDEX_DESERIALIZE:\n+        {\n+            try\n+            {\n+                CDiskBlockIndex dbi;\n+                ds >> dbi;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+        }\n+        case CTXOUTCOMPRESSOR_DESERIALIZE:\n+        {\n+            CTxOut to;\n+            try\n+            {\n+                ds >> to;\n+            } catch (const std::ios_base::failure& e) {return 0;}\n+            \n+            CTxOutCompressor toc(to);\n+        }\n+        default:\n+            return 0;\n+    }\n+    return 0;\n+}\n+"
      }
    ]
  },
  {
    "sha": "882f9965100de1701d5e24cbe34da17dff5b0d89",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODJmOTk2NTEwMGRlMTcwMWQ1ZTI0Y2JlMzRkYTE3ZGZmNWIwZDg5",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-04-24T10:29:03Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-04-24T10:29:03Z"
      },
      "message": "break!",
      "tree": {
        "sha": "14621f4d9d6070b7023f12f8c8e07e087cc05914",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14621f4d9d6070b7023f12f8c8e07e087cc05914"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/882f9965100de1701d5e24cbe34da17dff5b0d89",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/882f9965100de1701d5e24cbe34da17dff5b0d89",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/882f9965100de1701d5e24cbe34da17dff5b0d89",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/882f9965100de1701d5e24cbe34da17dff5b0d89/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e0b8b9bbf5b047a2da9fc13e7e6d25a3d742c2f"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ace858ae18d0aa8fa7ed76df07bc98b4cb0f24d9",
        "filename": "src/bitcoin-fuzzy.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/882f9965100de1701d5e24cbe34da17dff5b0d89/src/bitcoin-fuzzy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/882f9965100de1701d5e24cbe34da17dff5b0d89/src/bitcoin-fuzzy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-fuzzy.cpp?ref=882f9965100de1701d5e24cbe34da17dff5b0d89",
        "patch": "@@ -86,6 +86,7 @@ int main(int argc, char **argv)\n                 CBlock block;\n                 ds >> block;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CTRANSACTION_DESERIALIZE:\n         {\n@@ -94,6 +95,7 @@ int main(int argc, char **argv)\n                 CTransaction tx;\n                 ds >> tx;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CBLOCKLOCATOR_DESERIALIZE:\n         {\n@@ -102,6 +104,7 @@ int main(int argc, char **argv)\n                 CBlockLocator bl;\n                 ds >> bl;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CBLOCKMERKLEROOT:\n         {\n@@ -112,6 +115,7 @@ int main(int argc, char **argv)\n                 bool mutated;\n                 BlockMerkleRoot(block, &mutated);\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CADDRMAN_DESERIALIZE:\n         {\n@@ -120,6 +124,7 @@ int main(int argc, char **argv)\n                 CAddrMan am;\n                 ds >> am;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CBLOCKHEADER_DESERIALIZE:\n         {\n@@ -128,6 +133,7 @@ int main(int argc, char **argv)\n                 CBlockHeader bh;\n                 ds >> bh;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CBANENTRY_DESERIALIZE:\n         {\n@@ -136,6 +142,7 @@ int main(int argc, char **argv)\n                 CBanEntry be;\n                 ds >> be;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CTXUNDO_DESERIALIZE:\n         {\n@@ -144,6 +151,7 @@ int main(int argc, char **argv)\n                 CTxUndo tu;\n                 ds >> tu;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CBLOCKUNDO_DESERIALIZE:\n         {\n@@ -152,6 +160,7 @@ int main(int argc, char **argv)\n                 CBlockUndo bu;\n                 ds >> bu;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CCOINS_DESERIALIZE:\n         {\n@@ -160,6 +169,7 @@ int main(int argc, char **argv)\n                 CCoins block;\n                 ds >> block;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CNETADDR_DESERIALIZE:\n         {\n@@ -168,6 +178,7 @@ int main(int argc, char **argv)\n                 CNetAddr na;\n                 ds >> na;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CSERVICE_DESERIALIZE:\n         {\n@@ -176,6 +187,7 @@ int main(int argc, char **argv)\n                 CService s;\n                 ds >> s;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CMESSAGEHEADER_DESERIALIZE:\n         {\n@@ -185,6 +197,7 @@ int main(int argc, char **argv)\n                 CMessageHeader mh(pchMessageStart);\n                 ds >> mh;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CADDRESS_DESERIALIZE:\n         {\n@@ -193,6 +206,7 @@ int main(int argc, char **argv)\n                 CAddress a;\n                 ds >> a;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CINV_DESERIALIZE:\n         {\n@@ -201,6 +215,7 @@ int main(int argc, char **argv)\n                 CInv i;\n                 ds >> i;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CBLOOMFILTER_DESERIALIZE:\n         {\n@@ -209,6 +224,7 @@ int main(int argc, char **argv)\n                 CBloomFilter bf;\n                 ds >> bf;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CDISKBLOCKINDEX_DESERIALIZE:\n         {\n@@ -217,6 +233,7 @@ int main(int argc, char **argv)\n                 CDiskBlockIndex dbi;\n                 ds >> dbi;\n             } catch (const std::ios_base::failure& e) {return 0;}\n+            break;\n         }\n         case CTXOUTCOMPRESSOR_DESERIALIZE:\n         {\n@@ -227,6 +244,7 @@ int main(int argc, char **argv)\n             } catch (const std::ios_base::failure& e) {return 0;}\n             \n             CTxOutCompressor toc(to);\n+            break;\n         }\n         default:\n             return 0;"
      }
    ]
  }
]