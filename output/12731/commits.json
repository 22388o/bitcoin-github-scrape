[
  {
    "sha": "818dc74ba2745872fd68d2158380fc8bd331210e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MThkYzc0YmEyNzQ1ODcyZmQ2OGQyMTU4MzgwZmM4YmQzMzEyMTBl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-07-07T23:06:56Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-03-21T00:08:06Z"
      },
      "message": "Support serialization as another type without casting\n\nThis adds a READWRITEAS(type, obj) macro which serializes obj as if it\nwere casted to (const type&) when const, and to (type&) when non-const.\n\nThis makes it usable in serialization code that uses a single\nimplementation for both serialization and deserializing, which doesn't\nknow the constness of the object involved.",
      "tree": {
        "sha": "f72178344d09e88a312da73abed27f1716b8cfdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f72178344d09e88a312da73abed27f1716b8cfdd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/818dc74ba2745872fd68d2158380fc8bd331210e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/818dc74ba2745872fd68d2158380fc8bd331210e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/818dc74ba2745872fd68d2158380fc8bd331210e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/818dc74ba2745872fd68d2158380fc8bd331210e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ee5c7b747171e335793c74cd9d2f7491da58164",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ee5c7b747171e335793c74cd9d2f7491da58164",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ee5c7b747171e335793c74cd9d2f7491da58164"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 13,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3f163dab65f32fa158c2742165155c8b6eda448e",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/818dc74ba2745872fd68d2158380fc8bd331210e/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/818dc74ba2745872fd68d2158380fc8bd331210e/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=818dc74ba2745872fd68d2158380fc8bd331210e",
        "patch": "@@ -59,7 +59,7 @@ class CAddrInfo : public CAddress\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(*static_cast<CAddress*>(this));\n+        READWRITEAS(CAddress, *this);\n         READWRITE(source);\n         READWRITE(nLastSuccess);\n         READWRITE(nAttempts);"
      },
      {
        "sha": "1fca55d91043537522f592771d4081637f24a0ca",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/818dc74ba2745872fd68d2158380fc8bd331210e/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/818dc74ba2745872fd68d2158380fc8bd331210e/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=818dc74ba2745872fd68d2158380fc8bd331210e",
        "patch": "@@ -93,7 +93,7 @@ class CBlock : public CBlockHeader\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(*static_cast<CBlockHeader*>(this));\n+        READWRITEAS(CBlockHeader, *this);\n         READWRITE(vtx);\n     }\n "
      },
      {
        "sha": "b8deacb5f43d7d336e4c11fc5103d9fadd5c4448",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/818dc74ba2745872fd68d2158380fc8bd331210e/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/818dc74ba2745872fd68d2158380fc8bd331210e/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=818dc74ba2745872fd68d2158380fc8bd331210e",
        "patch": "@@ -349,7 +349,7 @@ class CAddress : public CService\n         uint64_t nServicesInt = nServices;\n         READWRITE(nServicesInt);\n         nServices = static_cast<ServiceFlags>(nServicesInt);\n-        READWRITE(*static_cast<CService*>(this));\n+        READWRITEAS(CService, *this);\n     }\n \n     // TODO: make private (improves encapsulation)"
      },
      {
        "sha": "8e5a792c7d32c71f5a6249c26456ea7369fddadb",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/818dc74ba2745872fd68d2158380fc8bd331210e/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/818dc74ba2745872fd68d2158380fc8bd331210e/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=818dc74ba2745872fd68d2158380fc8bd331210e",
        "patch": "@@ -415,7 +415,7 @@ class CScript : public CScriptBase\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(static_cast<CScriptBase&>(*this));\n+        READWRITEAS(CScriptBase, *this);\n     }\n \n     CScript& operator+=(const CScript& b)"
      },
      {
        "sha": "341a138e8b418fc4728afa28ebb16dd4ddf3447c",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/818dc74ba2745872fd68d2158380fc8bd331210e/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/818dc74ba2745872fd68d2158380fc8bd331210e/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=818dc74ba2745872fd68d2158380fc8bd331210e",
        "patch": "@@ -148,7 +148,12 @@ enum\n     SER_GETHASH         = (1 << 2),\n };\n \n-#define READWRITE(...)      (::SerReadWriteMany(s, ser_action, __VA_ARGS__))\n+//! Convert the reference base type to X, without changing constness or reference type.\n+template<typename X> X& ReadWriteAsHelper(X& x) { return x; }\n+template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n+\n+#define READWRITE(...) (::SerReadWriteMany(s, ser_action, __VA_ARGS__))\n+#define READWRITEAS(type, obj) (::SerReadWriteMany(s, ser_action, ReadWriteAsHelper<type>(obj)))\n \n /** \n  * Implement three methods for serializable objects. These are actually wrappers over"
      },
      {
        "sha": "830b65a3223cfda108ce31981c8545f1837e6411",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/818dc74ba2745872fd68d2158380fc8bd331210e/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/818dc74ba2745872fd68d2158380fc8bd331210e/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=818dc74ba2745872fd68d2158380fc8bd331210e",
        "patch": "@@ -46,7 +46,7 @@ struct CDiskTxPos : public CDiskBlockPos\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(*static_cast<CDiskBlockPos*>(this));\n+        READWRITEAS(CDiskBlockPos, *this);\n         READWRITE(VARINT(nTxOffset));\n     }\n "
      },
      {
        "sha": "ae94d534011d2d8253423133b1023750b481974e",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/818dc74ba2745872fd68d2158380fc8bd331210e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/818dc74ba2745872fd68d2158380fc8bd331210e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=818dc74ba2745872fd68d2158380fc8bd331210e",
        "patch": "@@ -395,7 +395,7 @@ class CWalletTx : public CMerkleTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        s << *static_cast<const CMerkleTx*>(this);\n+        s << static_cast<const CMerkleTx&>(*this);\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n         s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n     }\n@@ -406,7 +406,7 @@ class CWalletTx : public CMerkleTx\n         Init(nullptr);\n         char fSpent;\n \n-        s >> *static_cast<CMerkleTx*>(this);\n+        s >> static_cast<CMerkleTx&>(*this);\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n         s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n "
      }
    ]
  }
]