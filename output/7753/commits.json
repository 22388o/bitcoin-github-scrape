[
  {
    "sha": "8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjIwNWRkNmZhZjI4NGJkNmE5YzFiMTI1MTM2MGYyOGE1NmI4NWY3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-26T15:44:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-12T10:15:08Z"
      },
      "message": "mempool: add notification for added/removed entries\n\nAdd notification signals to make it possible to subscribe to mempool\nchanges:\n\n- NotifyEntryAdded(const CTxMemPoolEntry &)>\n- NotifyEntryRemoved(const CTxMemPoolEntry &, MemPoolRemovalReason)>\n\nAlso add a mempool removal reason enumeration, which is passed to the\nremoved notification based on why the transaction was removed from\nthe mempool.",
      "tree": {
        "sha": "afb3044adf4f70c2a1700a40138d49b15467ba2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afb3044adf4f70c2a1700a40138d49b15467ba2b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b205dd6faf284bd6a9c1b1251360f28a56b85f7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c8558da362fda976eaef44bb0fbb63ae3082d17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c8558da362fda976eaef44bb0fbb63ae3082d17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c8558da362fda976eaef44bb0fbb63ae3082d17"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 37,
      "deletions": 18
    },
    "files": [
      {
        "sha": "67a74f369b2d6bdeed0b9b44dfe53e19c930d86f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b205dd6faf284bd6a9c1b1251360f28a56b85f7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b205dd6faf284bd6a9c1b1251360f28a56b85f7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
        "patch": "@@ -1402,7 +1402,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n                     FormatMoney(nModifiedFees - nConflictingFees),\n                     (int)nSize - (int)nConflictingSize);\n         }\n-        pool.RemoveStaged(allConflicting, false);\n+        pool.RemoveStaged(allConflicting, false, MemPoolRemovalReason::REPLACED);\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n@@ -2652,7 +2652,7 @@ bool static DisconnectTip(CValidationState& state, const CChainParams& chainpara\n         list<CTransaction> removed;\n         CValidationState stateDummy;\n         if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL, NULL, true)) {\n-            mempool.removeRecursive(tx, removed);\n+            mempool.removeRecursive(tx, removed, MemPoolRemovalReason::REORG);\n         } else if (mempool.exists(tx.GetHash())) {\n             vHashUpdate.push_back(tx.GetHash());\n         }"
      },
      {
        "sha": "849eaad62dc7404b231edd4995ea3b4c51c8282f",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b205dd6faf284bd6a9c1b1251360f28a56b85f7/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b205dd6faf284bd6a9c1b1251360f28a56b85f7/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
        "patch": "@@ -388,6 +388,7 @@ void CTxMemPool::AddTransactionsUpdated(unsigned int n)\n \n bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate)\n {\n+    NotifyEntryAdded(entry);\n     // Add to memory pool without checking anything.\n     // Used by main.cpp AcceptToMemoryPool(), which DOES do\n     // all the appropriate checks.\n@@ -441,8 +442,9 @@ bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry,\n     return true;\n }\n \n-void CTxMemPool::removeUnchecked(txiter it)\n+void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n {\n+    NotifyEntryRemoved(*it, reason);\n     const uint256 hash = it->GetTx().GetHash();\n     BOOST_FOREACH(const CTxIn& txin, it->GetTx().vin)\n         mapNextTx.erase(txin.prevout);\n@@ -485,7 +487,7 @@ void CTxMemPool::CalculateDescendants(txiter entryit, setEntries &setDescendants\n     }\n }\n \n-void CTxMemPool::removeRecursive(const CTransaction &origTx, std::list<CTransaction>& removed)\n+void CTxMemPool::removeRecursive(const CTransaction &origTx, std::list<CTransaction>& removed, MemPoolRemovalReason reason)\n {\n     // Remove transaction from memory pool\n     {\n@@ -515,7 +517,7 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, std::list<CTransact\n         BOOST_FOREACH(txiter it, setAllRemoves) {\n             removed.push_back(it->GetTx());\n         }\n-        RemoveStaged(setAllRemoves, false);\n+        RemoveStaged(setAllRemoves, false, reason);\n     }\n }\n \n@@ -551,11 +553,11 @@ void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMem\n     }\n     BOOST_FOREACH(const CTransaction& tx, transactionsToRemove) {\n         list<CTransaction> removed;\n-        removeRecursive(tx, removed);\n+        removeRecursive(tx, removed, MemPoolRemovalReason::REORG);\n     }\n }\n \n-void CTxMemPool::removeConflicts(const CTransaction &tx, std::list<CTransaction>& removed)\n+void CTxMemPool::removeConflicts(const CTransaction &tx, std::list<CTransaction>& removed, MemPoolRemovalReason reason)\n {\n     // Remove transactions which depend on inputs of tx, recursively\n     list<CTransaction> result;\n@@ -566,7 +568,7 @@ void CTxMemPool::removeConflicts(const CTransaction &tx, std::list<CTransaction>\n             const CTransaction &txConflict = *it->second.ptx;\n             if (txConflict != tx)\n             {\n-                removeRecursive(txConflict, removed);\n+                removeRecursive(txConflict, removed, reason);\n                 ClearPrioritisation(txConflict.GetHash());\n             }\n         }\n@@ -595,9 +597,9 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n         if (it != mapTx.end()) {\n             setEntries stage;\n             stage.insert(it);\n-            RemoveStaged(stage, true);\n+            RemoveStaged(stage, true, MemPoolRemovalReason::BLOCK);\n         }\n-        removeConflicts(tx, conflicts);\n+        removeConflicts(tx, conflicts, MemPoolRemovalReason::BLOCK);\n         ClearPrioritisation(tx.GetHash());\n     }\n     // After the txs in the new block have been removed from the mempool, update policy estimates\n@@ -936,11 +938,11 @@ size_t CTxMemPool::DynamicMemoryUsage() const {\n     return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 15 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + cachedInnerUsage;\n }\n \n-void CTxMemPool::RemoveStaged(setEntries &stage, bool updateDescendants) {\n+void CTxMemPool::RemoveStaged(setEntries &stage, bool updateDescendants, MemPoolRemovalReason reason) {\n     AssertLockHeld(cs);\n     UpdateForRemoveFromMempool(stage, updateDescendants);\n     BOOST_FOREACH(const txiter& it, stage) {\n-        removeUnchecked(it);\n+        removeUnchecked(it, reason);\n     }\n }\n \n@@ -956,7 +958,7 @@ int CTxMemPool::Expire(int64_t time) {\n     BOOST_FOREACH(txiter removeit, toremove) {\n         CalculateDescendants(removeit, stage);\n     }\n-    RemoveStaged(stage, false);\n+    RemoveStaged(stage, false, MemPoolRemovalReason::EXPIRY);\n     return stage.size();\n }\n \n@@ -1065,7 +1067,7 @@ void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<uint256>* pvNoSpendsRe\n             BOOST_FOREACH(txiter it, stage)\n                 txn.push_back(it->GetTx());\n         }\n-        RemoveStaged(stage, false);\n+        RemoveStaged(stage, false, MemPoolRemovalReason::SIZELIMIT);\n         if (pvNoSpendsRemaining) {\n             BOOST_FOREACH(const CTransaction& tx, txn) {\n                 BOOST_FOREACH(const CTxIn& txin, tx.vin) {"
      },
      {
        "sha": "3d61fc7e6cc6f6421eebbd259ada9e6f13dba203",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 21,
        "deletions": 4,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b205dd6faf284bd6a9c1b1251360f28a56b85f7/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b205dd6faf284bd6a9c1b1251360f28a56b85f7/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
        "patch": "@@ -18,6 +18,8 @@\n #include \"boost/multi_index_container.hpp\"\n #include \"boost/multi_index/ordered_index.hpp\"\n \n+#include <boost/signals2/signal.hpp>\n+\n class CAutoFile;\n class CBlockIndex;\n \n@@ -319,6 +321,18 @@ class CInPoint\n     size_t DynamicMemoryUsage() const { return 0; }\n };\n \n+/** Reason why a transaction was removed from the mempool,\n+ * this is passed to the notification signal.\n+ */\n+enum class MemPoolRemovalReason {\n+    UNKNOWN = 0, //! Manually removed or unknown reason\n+    EXPIRY,      //! Expired from mempool\n+    SIZELIMIT,   //! Removed in size limiting\n+    REORG,       //! Removed for reorganization\n+    BLOCK,       //! Removed for block\n+    REPLACED     //! Removed for conflict (replaced)\n+};\n+\n /**\n  * CTxMemPool stores valid-according-to-the-current-best-chain\n  * transactions that may be included in the next block.\n@@ -504,9 +518,9 @@ class CTxMemPool\n     bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate = true);\n     bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate = true);\n \n-    void removeRecursive(const CTransaction &tx, std::list<CTransaction>& removed);\n+    void removeRecursive(const CTransaction &tx, std::list<CTransaction>& removed, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN);\n     void removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight, int flags);\n-    void removeConflicts(const CTransaction &tx, std::list<CTransaction>& removed);\n+    void removeConflicts(const CTransaction &tx, std::list<CTransaction>& removed, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN);\n     void removeForBlock(const std::vector<CTransaction>& vtx, unsigned int nBlockHeight,\n                         std::list<CTransaction>& conflicts, bool fCurrentEstimate = true);\n     void clear();\n@@ -535,7 +549,7 @@ class CTxMemPool\n      *  Set updateDescendants to true when removing a tx that was in a block, so\n      *  that any in-mempool descendants have their ancestor state updated.\n      */\n-    void RemoveStaged(setEntries &stage, bool updateDescendants);\n+    void RemoveStaged(setEntries &stage, bool updateDescendants, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN);\n \n     /** When adding transactions from a disconnected block back to the mempool,\n      *  new mempool entries may have children in the mempool (which is generally\n@@ -627,6 +641,9 @@ class CTxMemPool\n \n     size_t DynamicMemoryUsage() const;\n \n+    boost::signals2::signal<void (const CTxMemPoolEntry &)> NotifyEntryAdded;\n+    boost::signals2::signal<void (const CTxMemPoolEntry &, MemPoolRemovalReason)> NotifyEntryRemoved;\n+\n private:\n     /** UpdateForDescendants is used by UpdateTransactionsFromBlock to update\n      *  the descendants for a single transaction that has been added to the\n@@ -663,7 +680,7 @@ class CTxMemPool\n      *  transactions in a chain before we've updated all the state for the\n      *  removal.\n      */\n-    void removeUnchecked(txiter entry);\n+    void removeUnchecked(txiter entry, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN);\n };\n \n /** "
      }
    ]
  },
  {
    "sha": "dad857f8cd334d71a8758ada61d5868fd5be8f38",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYWQ4NTdmOGNkMzM0ZDcxYTg3NThhZGE2MWQ1ODY4ZmQ1YmU4ZjM4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-26T17:42:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-12T10:15:08Z"
      },
      "message": "zmq: refactor initialization\n\nReplace factories list with calls to a function.\n\nThis simplifies the code (every notifier is only created once anyway),\nand makes it possible to pass arguments to notifier contructors.",
      "tree": {
        "sha": "517e026bb2dd97e6c1b692dea886c01d8eb651da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/517e026bb2dd97e6c1b692dea886c01d8eb651da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dad857f8cd334d71a8758ada61d5868fd5be8f38",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dad857f8cd334d71a8758ada61d5868fd5be8f38",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dad857f8cd334d71a8758ada61d5868fd5be8f38",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dad857f8cd334d71a8758ada61d5868fd5be8f38/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b205dd6faf284bd6a9c1b1251360f28a56b85f7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b205dd6faf284bd6a9c1b1251360f28a56b85f7"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 19,
      "deletions": 27
    },
    "files": [
      {
        "sha": "067fc235e82b3f97137853eff5babb9883fd3cfe",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dad857f8cd334d71a8758ada61d5868fd5be8f38/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dad857f8cd334d71a8758ada61d5868fd5be8f38/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=dad857f8cd334d71a8758ada61d5868fd5be8f38",
        "patch": "@@ -10,20 +10,12 @@\n class CBlockIndex;\n class CZMQAbstractNotifier;\n \n-typedef CZMQAbstractNotifier* (*CZMQNotifierFactory)();\n-\n class CZMQAbstractNotifier\n {\n public:\n     CZMQAbstractNotifier() : psocket(0) { }\n     virtual ~CZMQAbstractNotifier();\n \n-    template <typename T>\n-    static CZMQAbstractNotifier* Create()\n-    {\n-        return new T();\n-    }\n-\n     std::string GetType() const { return type; }\n     void SetType(const std::string &t) { type = t; }\n     std::string GetAddress() const { return address; }"
      },
      {
        "sha": "cf030d833bb4c31a8fb92b1d77eba09a33607116",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dad857f8cd334d71a8758ada61d5868fd5be8f38/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dad857f8cd334d71a8758ada61d5868fd5be8f38/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=dad857f8cd334d71a8758ada61d5868fd5be8f38",
        "patch": "@@ -29,30 +29,30 @@ CZMQNotificationInterface::~CZMQNotificationInterface()\n     }\n }\n \n+/** Conditionally add notifier, if the right arguments are provided */\n+static void addNotifier(const std::map<std::string, std::string> &args, std::list<CZMQAbstractNotifier*> &notifiers, const std::string &name, CZMQAbstractNotifier* notifier)\n+{\n+    std::map<std::string, std::string>::const_iterator j = args.find(\"-zmq\" + name);\n+    if (j!=args.end())\n+    {\n+        std::string address = j->second;\n+        notifier->SetType(name);\n+        notifier->SetAddress(address);\n+        notifiers.push_back(notifier);\n+    } else {\n+        delete notifier;\n+    }\n+}\n+\n CZMQNotificationInterface* CZMQNotificationInterface::CreateWithArguments(const std::map<std::string, std::string> &args)\n {\n     CZMQNotificationInterface* notificationInterface = NULL;\n-    std::map<std::string, CZMQNotifierFactory> factories;\n     std::list<CZMQAbstractNotifier*> notifiers;\n \n-    factories[\"pubhashblock\"] = CZMQAbstractNotifier::Create<CZMQPublishHashBlockNotifier>;\n-    factories[\"pubhashtx\"] = CZMQAbstractNotifier::Create<CZMQPublishHashTransactionNotifier>;\n-    factories[\"pubrawblock\"] = CZMQAbstractNotifier::Create<CZMQPublishRawBlockNotifier>;\n-    factories[\"pubrawtx\"] = CZMQAbstractNotifier::Create<CZMQPublishRawTransactionNotifier>;\n-\n-    for (std::map<std::string, CZMQNotifierFactory>::const_iterator i=factories.begin(); i!=factories.end(); ++i)\n-    {\n-        std::map<std::string, std::string>::const_iterator j = args.find(\"-zmq\" + i->first);\n-        if (j!=args.end())\n-        {\n-            CZMQNotifierFactory factory = i->second;\n-            std::string address = j->second;\n-            CZMQAbstractNotifier *notifier = factory();\n-            notifier->SetType(i->first);\n-            notifier->SetAddress(address);\n-            notifiers.push_back(notifier);\n-        }\n-    }\n+    addNotifier(args, notifiers, \"pubhashblock\", new CZMQPublishHashBlockNotifier());\n+    addNotifier(args, notifiers, \"pubhashtx\", new CZMQPublishHashTransactionNotifier());\n+    addNotifier(args, notifiers, \"pubrawblock\", new CZMQPublishRawBlockNotifier());\n+    addNotifier(args, notifiers, \"pubrawtx\", new CZMQPublishRawTransactionNotifier());\n \n     if (!notifiers.empty())\n     {"
      }
    ]
  },
  {
    "sha": "fc18de13c87081da2ee0113f3216a6fe38b87b76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzE4ZGUxM2M4NzA4MWRhMmVlMDExM2YzMjE2YTZmZTM4Yjg3Yjc2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-26T18:57:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-12T10:15:08Z"
      },
      "message": "zmq: add mempool notifications\n\nAdd notifications when transactions enter or leave the mempool.\n\nThese can be enabled with `pubmempool`:\n\n- `mempooladded`: a transaction was added to the mempool\n- `mempoolremoved`: a transaction was removed from the mempool\n\nThis allows third-party software to keep track of what is in the mempool\nin real time.",
      "tree": {
        "sha": "0c1c2e3cb74058255fee5fdd9f1f29594b45e844",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c1c2e3cb74058255fee5fdd9f1f29594b45e844"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc18de13c87081da2ee0113f3216a6fe38b87b76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc18de13c87081da2ee0113f3216a6fe38b87b76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc18de13c87081da2ee0113f3216a6fe38b87b76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc18de13c87081da2ee0113f3216a6fe38b87b76/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dad857f8cd334d71a8758ada61d5868fd5be8f38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dad857f8cd334d71a8758ada61d5868fd5be8f38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dad857f8cd334d71a8758ada61d5868fd5be8f38"
      }
    ],
    "stats": {
      "total": 118,
      "additions": 109,
      "deletions": 9
    },
    "files": [
      {
        "sha": "481b5173befca02454220d618515737f38605fa3",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc18de13c87081da2ee0113f3216a6fe38b87b76/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc18de13c87081da2ee0113f3216a6fe38b87b76/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=fc18de13c87081da2ee0113f3216a6fe38b87b76",
        "patch": "@@ -13,8 +13,13 @@\n zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawblock\")\n zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawtx\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"mempooladded\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"mempoolremoved\")\n zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n \n+# Reasons for removal of transaction from mempool\n+MPR_REASONS = {0:'UNKNOWN', 1:'EXPIRY', 2:'SIZELIMIT', 3:'REORG', 4:'BLOCK', 5:'REPLACED'}\n+\n try:\n     while True:\n         msg = zmqSubSocket.recv_multipart()\n@@ -36,6 +41,14 @@\n         elif topic == \"rawtx\":\n             print '- RAW TX ('+sequence+') -'\n             print binascii.hexlify(body)\n+        elif topic == 'mempooladded':\n+            print '- MEMPOOL ADDED -'\n+            (hash, fee, size) = struct.unpack('<32sQI', body)\n+            print '%s fee=%i size=%i' % (binascii.hexlify(hash), fee, size)\n+        elif topic == 'mempoolremoved':\n+            print '- MEMPOOL REMOVED -'\n+            (hash, reason) = struct.unpack('<32sB', body)\n+            print '%s reason=%s' % (binascii.hexlify(hash), MPR_REASONS.get(reason, 'UNKNOWN %i' % reason))\n \n except KeyboardInterrupt:\n     zmqContext.destroy()"
      },
      {
        "sha": "f9368f6718de4b946184e468ad6fa0a90aa9456f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fc18de13c87081da2ee0113f3216a6fe38b87b76",
        "patch": "@@ -1145,7 +1145,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         AddOneShot(strDest);\n \n #if ENABLE_ZMQ\n-    pzmqNotificationInterface = CZMQNotificationInterface::CreateWithArguments(mapArgs);\n+    pzmqNotificationInterface = CZMQNotificationInterface::CreateWithArguments(mapArgs, &mempool);\n \n     if (pzmqNotificationInterface) {\n         RegisterValidationInterface(pzmqNotificationInterface);"
      },
      {
        "sha": "b65eca127906cd9bf95e58ac82300c57625b4c20",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=fc18de13c87081da2ee0113f3216a6fe38b87b76",
        "patch": "@@ -44,7 +44,7 @@ static void addNotifier(const std::map<std::string, std::string> &args, std::lis\n     }\n }\n \n-CZMQNotificationInterface* CZMQNotificationInterface::CreateWithArguments(const std::map<std::string, std::string> &args)\n+CZMQNotificationInterface* CZMQNotificationInterface::CreateWithArguments(const std::map<std::string, std::string> &args, CTxMemPool *mempool)\n {\n     CZMQNotificationInterface* notificationInterface = NULL;\n     std::list<CZMQAbstractNotifier*> notifiers;\n@@ -53,6 +53,8 @@ CZMQNotificationInterface* CZMQNotificationInterface::CreateWithArguments(const\n     addNotifier(args, notifiers, \"pubhashtx\", new CZMQPublishHashTransactionNotifier());\n     addNotifier(args, notifiers, \"pubrawblock\", new CZMQPublishRawBlockNotifier());\n     addNotifier(args, notifiers, \"pubrawtx\", new CZMQPublishRawTransactionNotifier());\n+    if (mempool)\n+        addNotifier(args, notifiers, \"pubmempool\", new CZMQPublishMempoolNotifier(mempool));\n \n     if (!notifiers.empty())\n     {"
      },
      {
        "sha": "86b3caef699b567e1fd98c1c0039a511d0cb21ad",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=fc18de13c87081da2ee0113f3216a6fe38b87b76",
        "patch": "@@ -11,13 +11,14 @@\n \n class CBlockIndex;\n class CZMQAbstractNotifier;\n+class CTxMemPool;\n \n class CZMQNotificationInterface : public CValidationInterface\n {\n public:\n     virtual ~CZMQNotificationInterface();\n \n-    static CZMQNotificationInterface* CreateWithArguments(const std::map<std::string, std::string> &args);\n+    static CZMQNotificationInterface* CreateWithArguments(const std::map<std::string, std::string> &args, CTxMemPool *mempool);\n \n protected:\n     bool Initialize();"
      },
      {
        "sha": "38e9fc476fde1f1aa0ee3559b70a9f069d8ad3a6",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 76,
        "deletions": 6,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=fc18de13c87081da2ee0113f3216a6fe38b87b76",
        "patch": "@@ -6,13 +6,16 @@\n #include \"zmqpublishnotifier.h\"\n #include \"main.h\"\n #include \"util.h\"\n+#include \"crypto/common.h\"\n \n static std::multimap<std::string, CZMQAbstractPublishNotifier*> mapPublishNotifiers;\n \n static const char *MSG_HASHBLOCK = \"hashblock\";\n static const char *MSG_HASHTX    = \"hashtx\";\n static const char *MSG_RAWBLOCK  = \"rawblock\";\n static const char *MSG_RAWTX     = \"rawtx\";\n+static const char *MSG_MEMPOOLADDED = \"mempooladded\";\n+static const char *MSG_MEMPOOLREMOVED = \"mempoolremoved\";\n \n // Internal function to send multipart message\n static int zmq_send_multipart(void *sock, const void* data, size_t size, ...)\n@@ -140,23 +143,28 @@ bool CZMQAbstractPublishNotifier::SendMessage(const char *command, const void* d\n     return true;\n }\n \n+/** Write 256-bit hash to buffer reversed format */\n+static void ZMQWriteHash(unsigned char *ptr, const uint256 &hash)\n+{\n+    for (unsigned int i = 0; i < 32; i++)\n+        ptr[31 - i] = hash.begin()[i];\n+}\n+\n bool CZMQPublishHashBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n     uint256 hash = pindex->GetBlockHash();\n     LogPrint(\"zmq\", \"zmq: Publish hashblock %s\\n\", hash.GetHex());\n-    char data[32];\n-    for (unsigned int i = 0; i < 32; i++)\n-        data[31 - i] = hash.begin()[i];\n+    uint8_t data[32];\n+    ZMQWriteHash(data, hash);\n     return SendMessage(MSG_HASHBLOCK, data, 32);\n }\n \n bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n {\n     uint256 hash = transaction.GetHash();\n     LogPrint(\"zmq\", \"zmq: Publish hashtx %s\\n\", hash.GetHex());\n-    char data[32];\n-    for (unsigned int i = 0; i < 32; i++)\n-        data[31 - i] = hash.begin()[i];\n+    uint8_t data[32];\n+    ZMQWriteHash(data, hash);\n     return SendMessage(MSG_HASHTX, data, 32);\n }\n \n@@ -189,3 +197,65 @@ bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &tr\n     ss << transaction;\n     return SendMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n }\n+\n+CZMQPublishMempoolNotifier::CZMQPublishMempoolNotifier(CTxMemPool *mempoolIn):\n+    mempool(mempoolIn)\n+{\n+    mempool->NotifyEntryAdded.connect(boost::bind(&CZMQPublishMempoolNotifier::NotifyEntryAdded, this, _1));\n+    mempool->NotifyEntryRemoved.connect(boost::bind(&CZMQPublishMempoolNotifier::NotifyEntryRemoved, this, _1, _2));\n+}\n+\n+CZMQPublishMempoolNotifier::~CZMQPublishMempoolNotifier()\n+{\n+    mempool->NotifyEntryAdded.disconnect(boost::bind(&CZMQPublishMempoolNotifier::NotifyEntryAdded, this, _1));\n+    mempool->NotifyEntryRemoved.disconnect(boost::bind(&CZMQPublishMempoolNotifier::NotifyEntryRemoved, this, _1, _2));\n+}\n+\n+void CZMQPublishMempoolNotifier::NotifyEntryAdded(const CTxMemPoolEntry &entry)\n+{\n+    LogPrint(\"zmq\", \"zmq: mempool entry added: %s fee=%i size=%i\\n\", entry.GetTx().GetHash().ToString(),\n+            entry.GetFee(), entry.GetTxSize());\n+    uint8_t data[32 + 8 + 4];\n+    ZMQWriteHash(&data[0], entry.GetTx().GetHash());\n+    WriteLE64(&data[32], entry.GetFee());\n+    WriteLE32(&data[40], entry.GetTxSize());\n+    SendMessage(MSG_MEMPOOLADDED, data, sizeof(data));\n+}\n+\n+/**\n+ * Removal reason on ZMQ notification protocol.\n+ * Keep this up to date with the documentation in doc/zmq.md\n+ */\n+enum class ZMQMempoolRemovalReason: uint8_t {\n+    UNKNOWN = 0,   //! Manually removed or unknown reason\n+    EXPIRY = 1,    //! Expired from mempool\n+    SIZELIMIT = 2, //! Removed in size limiting\n+    REORG = 3,     //! Removed for reorganization\n+    BLOCK = 4,     //! Removed for block\n+    REPLACED = 5   //! Removed for conflict (replaced)\n+};\n+\n+ZMQMempoolRemovalReason MapRemovalReasonToZMQ(MemPoolRemovalReason reason)\n+{\n+    switch(reason)\n+    {\n+    case MemPoolRemovalReason::UNKNOWN: return ZMQMempoolRemovalReason::UNKNOWN;\n+    case MemPoolRemovalReason::EXPIRY: return ZMQMempoolRemovalReason::EXPIRY;\n+    case MemPoolRemovalReason::SIZELIMIT: return ZMQMempoolRemovalReason::SIZELIMIT;\n+    case MemPoolRemovalReason::REORG: return ZMQMempoolRemovalReason::REORG;\n+    case MemPoolRemovalReason::BLOCK: return ZMQMempoolRemovalReason::BLOCK;\n+    case MemPoolRemovalReason::REPLACED: return ZMQMempoolRemovalReason::REPLACED;\n+    // No default clause: we want a warning here if not all values are covered.\n+    }\n+    return ZMQMempoolRemovalReason::UNKNOWN;\n+}\n+\n+void CZMQPublishMempoolNotifier::NotifyEntryRemoved(const CTxMemPoolEntry &entry, MemPoolRemovalReason reason)\n+{\n+    LogPrint(\"zmq\", \"zmq: mempool entry removed: %s, reason %i\\n\", entry.GetTx().GetHash().ToString(), (int)reason);\n+    uint8_t data[32 + 1];\n+    ZMQWriteHash(&data[0], entry.GetTx().GetHash());\n+    data[32] = static_cast<uint8_t>(MapRemovalReasonToZMQ(reason));\n+    SendMessage(MSG_MEMPOOLREMOVED, data, sizeof(data));\n+}\n+"
      },
      {
        "sha": "cc8aed1ef8f2f7862513c6b68c41061289d3705b",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc18de13c87081da2ee0113f3216a6fe38b87b76/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=fc18de13c87081da2ee0113f3216a6fe38b87b76",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H\n \n #include \"zmqabstractnotifier.h\"\n+#include \"txmempool.h\"\n \n class CBlockIndex;\n \n@@ -52,4 +53,17 @@ class CZMQPublishRawTransactionNotifier : public CZMQAbstractPublishNotifier\n     bool NotifyTransaction(const CTransaction &transaction);\n };\n \n+class CZMQPublishMempoolNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    CZMQPublishMempoolNotifier(CTxMemPool *mempoolIn);\n+    ~CZMQPublishMempoolNotifier();\n+\n+    void NotifyEntryAdded(const CTxMemPoolEntry &entry);\n+    void NotifyEntryRemoved(const CTxMemPoolEntry &entry, MemPoolRemovalReason reason);\n+\n+private:\n+    CTxMemPool *mempool;\n+};\n+\n #endif // BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H"
      }
    ]
  },
  {
    "sha": "2bb2e402d701c7e08c4864e77b3bc1ee691795aa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYmIyZTQwMmQ3MDFjN2UwOGM0ODY0ZTc3YjNiYzFlZTY5MTc5NWFh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-27T16:16:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-12T10:15:08Z"
      },
      "message": "doc: Add documentation for zmq mempool notifications",
      "tree": {
        "sha": "6823ed722e3a2a34c26cfe1f0a1a73b4496fca92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6823ed722e3a2a34c26cfe1f0a1a73b4496fca92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bb2e402d701c7e08c4864e77b3bc1ee691795aa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bb2e402d701c7e08c4864e77b3bc1ee691795aa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bb2e402d701c7e08c4864e77b3bc1ee691795aa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bb2e402d701c7e08c4864e77b3bc1ee691795aa/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc18de13c87081da2ee0113f3216a6fe38b87b76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc18de13c87081da2ee0113f3216a6fe38b87b76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc18de13c87081da2ee0113f3216a6fe38b87b76"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 80,
      "deletions": 0
    },
    "files": [
      {
        "sha": "680268e038750ef9ddfe552c3860661d7564620a",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 80,
        "deletions": 0,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bb2e402d701c7e08c4864e77b3bc1ee691795aa/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bb2e402d701c7e08c4864e77b3bc1ee691795aa/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=2bb2e402d701c7e08c4864e77b3bc1ee691795aa",
        "patch": "@@ -60,6 +60,7 @@ Currently, the following notifications are supported:\n     -zmqpubhashblock=address\n     -zmqpubrawblock=address\n     -zmqpubrawtx=address\n+    -zmqpubmempool=address\n \n The socket type is PUB and the address must be a valid ZeroMQ socket\n address. The same address can be used in more than one notification.\n@@ -85,6 +86,85 @@ ZMQ_SUBSCRIBE option set to one or either of these prefixes (for\n instance, just `hash`); without doing so will result in no messages\n arriving. Please see `contrib/zmq/zmq_sub.py` for a working example.\n \n+## Notification types\n+\n+### hashtx\n+\n+`hashtx` (enabled by `-zmqpubhashtx`) is broadcasted on every incoming,\n+accepted transaction.\n+\n+The body is 32 bytes, and contains the binary hash of the transaction.\n+\n+### hashblock\n+\n+`hashblock` (enabled by `-zmqpubhashblock`) is broadcasted on every incoming,\n+accepted block.\n+\n+The body is 32 bytes, and contains the binary hash of the block.\n+\n+### rawtx\n+\n+`rawtx` (enabled by `-zmqpubrawtx`) is broadcasted on every incoming, accepted\n+transaction.\n+\n+The body has a variable length, and contains the raw binary data of the transaction.\n+\n+### rawblock\n+\n+`rawblock` (enabled by `-zmqpubrawblock`) is broadcasted on every incoming,\n+accepted block.\n+\n+The body has a variable length, and contains the raw binary data of the block.\n+\n+### mempooladd\n+\n+`mempooladd` (enabled by `-zmqpubmempool`) is broadcasted on every transaction\n+that is added to the mempool.\n+\n+The body is 44 bytes.\n+\n+| Offset  | Type (size)   | Description  |\n+| -------:|:------------- |:------------ |\n+| 0       | hash (32)     | Hash of the transaction |\n+| 32      | uint64 (8)    | Fee posted with transaction (absolute, not per kB) |\n+| 40      | uint32 (4)    | Size of transaction |\n+\n+Values are in little-endian, independent of the platform.\n+\n+### mempoolremove\n+\n+`mempoolremove` (enabled by `-zmqpubmempool`) is broadcasted on every\n+transaction that is removed from the mempool.\n+\n+The body is 33 bytes.\n+\n+| Offset  | Type (size)   | Description  |\n+| -------:|:------------- |:------------ |\n+| 0       | hash (32)     | Hash of the transaction |\n+| 32      | enum (1)      | Reason for removal (see below) |\n+\n+The reason can have the following values:\n+\n+| Enum    | Id            | Description  |\n+| -------:|:------------- |:------------ |\n+| 0       | `UNKNOWN`     | Manually removed or unknown reason |\n+| 1       | `EXPIRY`      | Expired from mempool |\n+| 2       | `SIZELIMIT`   | Removed in size limiting |\n+| 3       | `REORG`       | Removed for reorganization |\n+| 4       | `BLOCK`       | Removed for block |\n+| 5       | `REPLACED`    | Removed for conflict (replaced) |\n+\n+Note that future versions may add further removal reasons, so it is\n+recommended to treat any unknown value as `UNKNOWN`.\n+\n+## Note about transaction and block hashes\n+\n+The 32-byte transaction and block hashes in notifications are byte-by-byte\n+reversed compared to their in-memory representation.\n+\n+They match the order of the hexadecimal representation as used in the debug log\n+as well as RPC.\n+\n ## Remarks\n \n From the perspective of bitcoind, the ZeroMQ socket is write-only; PUB"
      }
    ]
  },
  {
    "sha": "1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmJlMzY2MGFkOWEzNzVlMmQyYmI4YzdmYThmMzgxMzI3NzRiNjU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-04-19T14:05:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-12T10:15:09Z"
      },
      "message": "zmq: refactor to make all notifiers register themselves\n\nMake the registration process less circuitous by making\nthe notifiers listen to their appropriate events themselves",
      "tree": {
        "sha": "3f813e97fd891f83034db9a549f2c2b5ebbc04be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f813e97fd891f83034db9a549f2c2b5ebbc04be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2bb2e402d701c7e08c4864e77b3bc1ee691795aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bb2e402d701c7e08c4864e77b3bc1ee691795aa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2bb2e402d701c7e08c4864e77b3bc1ee691795aa"
      }
    ],
    "stats": {
      "total": 114,
      "additions": 41,
      "deletions": 73
    },
    "files": [
      {
        "sha": "242b268aa56cf9a0d34c8a20c48351e9ae593a43",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
        "patch": "@@ -227,7 +227,6 @@ void Shutdown()\n \n #if ENABLE_ZMQ\n     if (pzmqNotificationInterface) {\n-        UnregisterValidationInterface(pzmqNotificationInterface);\n         delete pzmqNotificationInterface;\n         pzmqNotificationInterface = NULL;\n     }\n@@ -1146,10 +1145,6 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n #if ENABLE_ZMQ\n     pzmqNotificationInterface = CZMQNotificationInterface::CreateWithArguments(mapArgs, &mempool);\n-\n-    if (pzmqNotificationInterface) {\n-        RegisterValidationInterface(pzmqNotificationInterface);\n-    }\n #endif\n     if (mapArgs.count(\"-maxuploadtarget\")) {\n         CNode::SetMaxOutboundTarget(GetArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET)*1024*1024);"
      },
      {
        "sha": "12a596a10fe6967565f2bcd017c78346a4189bad",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
        "patch": "@@ -11,12 +11,3 @@ CZMQAbstractNotifier::~CZMQAbstractNotifier()\n     assert(!psocket);\n }\n \n-bool CZMQAbstractNotifier::NotifyBlock(const CBlockIndex * /*CBlockIndex*/)\n-{\n-    return true;\n-}\n-\n-bool CZMQAbstractNotifier::NotifyTransaction(const CTransaction &/*transaction*/)\n-{\n-    return true;\n-}"
      },
      {
        "sha": "78ddd0e54132081556254f284a6858afc355d6c5",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
        "patch": "@@ -24,9 +24,6 @@ class CZMQAbstractNotifier\n     virtual bool Initialize(void *pcontext) = 0;\n     virtual void Shutdown() = 0;\n \n-    virtual bool NotifyBlock(const CBlockIndex *pindex);\n-    virtual bool NotifyTransaction(const CTransaction &transaction);\n-\n protected:\n     void *psocket;\n     std::string type;"
      },
      {
        "sha": "ae42e80080d2fc75818c2ea78e0fb9e8b37bc8bc",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
        "patch": "@@ -125,37 +125,3 @@ void CZMQNotificationInterface::Shutdown()\n         pcontext = 0;\n     }\n }\n-\n-void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindex)\n-{\n-    for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n-    {\n-        CZMQAbstractNotifier *notifier = *i;\n-        if (notifier->NotifyBlock(pindex))\n-        {\n-            i++;\n-        }\n-        else\n-        {\n-            notifier->Shutdown();\n-            i = notifiers.erase(i);\n-        }\n-    }\n-}\n-\n-void CZMQNotificationInterface::SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, const CBlock* pblock)\n-{\n-    for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n-    {\n-        CZMQAbstractNotifier *notifier = *i;\n-        if (notifier->NotifyTransaction(tx))\n-        {\n-            i++;\n-        }\n-        else\n-        {\n-            notifier->Shutdown();\n-            i = notifiers.erase(i);\n-        }\n-    }\n-}"
      },
      {
        "sha": "f8f239e163ceca7665c0096002197eab9d568703",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
        "patch": "@@ -13,7 +13,7 @@ class CBlockIndex;\n class CZMQAbstractNotifier;\n class CTxMemPool;\n \n-class CZMQNotificationInterface : public CValidationInterface\n+class CZMQNotificationInterface\n {\n public:\n     virtual ~CZMQNotificationInterface();\n@@ -24,10 +24,6 @@ class CZMQNotificationInterface : public CValidationInterface\n     bool Initialize();\n     void Shutdown();\n \n-    // CValidationInterface\n-    void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, const CBlock* pblock);\n-    void UpdatedBlockTip(const CBlockIndex *pindex);\n-\n private:\n     CZMQNotificationInterface();\n "
      },
      {
        "sha": "1fc79e4890180ef4387fead42a78ad42cff5822c",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
        "patch": "@@ -143,32 +143,42 @@ bool CZMQAbstractPublishNotifier::SendMessage(const char *command, const void* d\n     return true;\n }\n \n+CZMQValidationPublishNotifier::CZMQValidationPublishNotifier()\n+{\n+    RegisterValidationInterface(this);\n+}\n+\n+CZMQValidationPublishNotifier::~CZMQValidationPublishNotifier()\n+{\n+    UnregisterValidationInterface(this);\n+}\n+\n /** Write 256-bit hash to buffer reversed format */\n static void ZMQWriteHash(unsigned char *ptr, const uint256 &hash)\n {\n     for (unsigned int i = 0; i < 32; i++)\n         ptr[31 - i] = hash.begin()[i];\n }\n \n-bool CZMQPublishHashBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n+void CZMQPublishHashBlockNotifier::UpdatedBlockTip(const CBlockIndex *pindex)\n {\n     uint256 hash = pindex->GetBlockHash();\n     LogPrint(\"zmq\", \"zmq: Publish hashblock %s\\n\", hash.GetHex());\n     uint8_t data[32];\n     ZMQWriteHash(data, hash);\n-    return SendMessage(MSG_HASHBLOCK, data, 32);\n+    SendMessage(MSG_HASHBLOCK, data, 32);\n }\n \n-bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n+void CZMQPublishHashTransactionNotifier::SyncTransaction(const CTransaction& transaction, const CBlockIndex * /*pindex*/, const CBlock* /*pblock*/)\n {\n     uint256 hash = transaction.GetHash();\n     LogPrint(\"zmq\", \"zmq: Publish hashtx %s\\n\", hash.GetHex());\n     uint8_t data[32];\n     ZMQWriteHash(data, hash);\n-    return SendMessage(MSG_HASHTX, data, 32);\n+    SendMessage(MSG_HASHTX, data, 32);\n }\n \n-bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n+void CZMQPublishRawBlockNotifier::UpdatedBlockTip(const CBlockIndex *pindex)\n {\n     LogPrint(\"zmq\", \"zmq: Publish rawblock %s\\n\", pindex->GetBlockHash().GetHex());\n \n@@ -180,22 +190,22 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n         if(!ReadBlockFromDisk(block, pindex, consensusParams))\n         {\n             zmqError(\"Can't read block from disk\");\n-            return false;\n+            return;\n         }\n \n         ss << block;\n     }\n \n-    return SendMessage(MSG_RAWBLOCK, &(*ss.begin()), ss.size());\n+    SendMessage(MSG_RAWBLOCK, &(*ss.begin()), ss.size());\n }\n \n-bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n+void CZMQPublishRawTransactionNotifier::SyncTransaction(const CTransaction& transaction, const CBlockIndex * /*pindex*/, const CBlock* /*pblock*/)\n {\n     uint256 hash = transaction.GetHash();\n     LogPrint(\"zmq\", \"zmq: Publish rawtx %s\\n\", hash.GetHex());\n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     ss << transaction;\n-    return SendMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n+    SendMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n }\n \n CZMQPublishMempoolNotifier::CZMQPublishMempoolNotifier(CTxMemPool *mempoolIn):"
      },
      {
        "sha": "7b2450e76c89f4f774bca48702ae60b7e2965210",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 21,
        "deletions": 8,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bbe3660ad9a375e2d2bb8c7fa8f38132774b656/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=1bbe3660ad9a375e2d2bb8c7fa8f38132774b656",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H\n \n #include \"zmqabstractnotifier.h\"\n+#include \"validationinterface.h\"\n #include \"txmempool.h\"\n \n class CBlockIndex;\n@@ -29,28 +30,40 @@ class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n     void Shutdown();\n };\n \n-class CZMQPublishHashBlockNotifier : public CZMQAbstractPublishNotifier\n+//! Publish notifier that listens to validation events\n+class CZMQValidationPublishNotifier : public CZMQAbstractPublishNotifier, public CValidationInterface\n {\n public:\n-    bool NotifyBlock(const CBlockIndex *pindex);\n+    CZMQValidationPublishNotifier();\n+    ~CZMQValidationPublishNotifier();\n+\n+    // Child classes should override one or more of these from CValidationInterface:\n+    // void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, const CBlock* pblock);\n+    // void UpdatedBlockTip(const CBlockIndex *pindex);\n+};\n+\n+class CZMQPublishHashBlockNotifier : public CZMQValidationPublishNotifier\n+{\n+public:\n+    void UpdatedBlockTip(const CBlockIndex *pindex);\n };\n \n-class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n+class CZMQPublishHashTransactionNotifier : public CZMQValidationPublishNotifier\n {\n public:\n-    bool NotifyTransaction(const CTransaction &transaction);\n+    void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, const CBlock* pblock);\n };\n \n-class CZMQPublishRawBlockNotifier : public CZMQAbstractPublishNotifier\n+class CZMQPublishRawBlockNotifier : public CZMQValidationPublishNotifier\n {\n public:\n-    bool NotifyBlock(const CBlockIndex *pindex);\n+    void UpdatedBlockTip(const CBlockIndex *pindex);\n };\n \n-class CZMQPublishRawTransactionNotifier : public CZMQAbstractPublishNotifier\n+class CZMQPublishRawTransactionNotifier : public CZMQValidationPublishNotifier\n {\n public:\n-    bool NotifyTransaction(const CTransaction &transaction);\n+    void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, const CBlock* pblock);\n };\n \n class CZMQPublishMempoolNotifier : public CZMQAbstractPublishNotifier"
      }
    ]
  }
]