[
  {
    "sha": "373b6810568d343eefbc05df036d16345b5af04a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzNiNjgxMDU2OGQzNDNlZWZiYzA1ZGYwMzZkMTYzNDViNWFmMDRh",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-03-03T03:36:31Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-03-28T05:15:50Z"
      },
      "message": "Hide vpwallets behind wallet/init.cpp",
      "tree": {
        "sha": "51c68564f502ea1473642a6152c401978d335a3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51c68564f502ea1473642a6152c401978d335a3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/373b6810568d343eefbc05df036d16345b5af04a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlq7JQYACgkQHrd2uwPH\nki0NeQ//dGhZOWY/8SNQaa5VWE5Zg0gKDVnTay0W6XrC1B2UIQ0ZwiiNg5HGP+y4\nU10PqiW5/CO94MjJwdRtf7KLxb7AzF+BXEufjQVWuswBA1mSXesj4z2Wz6Ic2a4m\nlnCR36nhaXuRoJt9ytlLSt1C91/z/1namLrnjMbAq9SXS6cptQfYbhB4ZL9kuDl7\nswaPzCE/gUrH8f4RMdIUXof0yZUDi+zzT36nu/3/W0C00ajQfIk1D9q7Ih9GLOW+\n+UNgL3ohjjO+Siw08sXNABFv7/TCjn6IQljv+giliTpj+xnr4qwA6p+voNr4ZBXe\nD479DYT9a7OSPYccX4nBj5IJexiRdP05YJp36W/bPBYFFIQzcWUpG4Mm1AeZkzit\nSwv5onnwh16tJasx8n0e9VZ8O3RLPs4xmiYy5/21UZwVeQejvrybz6ZNfiOl9yu8\nnjZicF1mUsBpF2ngfD4Nhr8aFppFY496ejFMErP0mwiZ3CvpqZ6jxww200aPy76S\nMHlHItMdnCSlYbbdjlTsahX9VbaN/EVp+CifJJO0DaN4kHmz3kuRqKm/219X9D55\n/IsaGxWy1TyTsfuJjAXzN6ZbyKBh71ZRXH8XPIqt1LNePBhYmsEA444rbITXSDqe\nobFzBGzyCprVJpAeK+9VQgDBkVWcyRerKObs1tFDJyxg6BfktaA=\n=pIlM\n-----END PGP SIGNATURE-----",
        "payload": "tree 51c68564f502ea1473642a6152c401978d335a3e\nparent 68484d64fd79f3ef7b32d0785fc94f97eb87c60b\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1520048191 +0800\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1522214150 +0700\n\nHide vpwallets behind wallet/init.cpp\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373b6810568d343eefbc05df036d16345b5af04a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/373b6810568d343eefbc05df036d16345b5af04a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373b6810568d343eefbc05df036d16345b5af04a/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68484d64fd79f3ef7b32d0785fc94f97eb87c60b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68484d64fd79f3ef7b32d0785fc94f97eb87c60b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68484d64fd79f3ef7b32d0785fc94f97eb87c60b"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 81,
      "deletions": 25
    },
    "files": [
      {
        "sha": "bcbed6f716ec36dc8661c026d9903eca86fd6f9d",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -34,6 +34,7 @@\n #include <warnings.h>\n \n #ifdef ENABLE_WALLET\n+#include <wallet/init.h>\n #include <wallet/wallet.h>\n #endif\n \n@@ -484,9 +485,8 @@ void BitcoinApplication::initializeResult(bool success)\n \n #ifdef ENABLE_WALLET\n         bool fFirstWallet = true;\n-        for (CWalletRef pwallet : vpwallets) {\n+        ForEachWallet([this, &fFirstWallet](CWallet *pwallet) {\n             WalletModel * const walletModel = new WalletModel(platformStyle, pwallet, optionsModel);\n-\n             window->addWallet(walletModel);\n             if (fFirstWallet) {\n                 window->setCurrentWallet(walletModel->getWalletName());\n@@ -497,7 +497,7 @@ void BitcoinApplication::initializeResult(bool success)\n                              paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n \n             m_wallet_models.push_back(walletModel);\n-        }\n+        });\n #endif\n \n         // If -min option passed, start window minimized."
      },
      {
        "sha": "0b3c071416da4e2f3b436188c94f1e3b8ec9146d",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -20,6 +20,7 @@\n #include <util.h>\n #include <utilstrencodings.h>\n #ifdef ENABLE_WALLET\n+#include <wallet/init.h>\n #include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n #include <wallet/walletdb.h>\n@@ -69,7 +70,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     {\n \n #ifdef ENABLE_WALLET\n-        if (!::vpwallets.empty() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n+        if (HasWallets() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n             ret.pushKVs(getaddressinfo(request));\n         }\n #endif"
      },
      {
        "sha": "58e8775848062eb275f6ebdcc8e84a561c8e8b1c",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -14,6 +14,8 @@\n #include <wallet/wallet.h>\n #include <wallet/walletutil.h>\n \n+std::vector<CWalletRef> vpwallets;\n+\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n@@ -310,3 +312,32 @@ void CloseWallets() {\n     }\n     vpwallets.clear();\n }\n+\n+void AddWallet(CWallet *wallet) {\n+    vpwallets.insert(vpwallets.begin(), wallet);\n+}\n+\n+void DeallocWallet(unsigned int pos) {\n+    vpwallets.erase(vpwallets.begin()+pos);\n+}\n+\n+bool HasWallets() {\n+    return !vpwallets.empty();\n+}\n+\n+CWallet * GetWalletAtPos(int pos) {\n+    return vpwallets[pos];\n+}\n+\n+unsigned int CountWallets() {\n+    return vpwallets.size();\n+}\n+\n+CWallet* FindWalletByName(const std::string &name) {\n+    for (CWalletRef pwallet : ::vpwallets) {\n+        if (pwallet->GetName() == name) {\n+            return pwallet;\n+        }\n+    }\n+    return nullptr;\n+}"
      },
      {
        "sha": "418a7c16d2958226cb51e5e0f26bc223a315f3b0",
        "filename": "src/wallet/init.h",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.h?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_WALLET_INIT_H\n \n #include <string>\n+#include <wallet/wallet.h>\n \n class CRPCTable;\n class CScheduler;\n@@ -25,6 +26,9 @@ void RegisterWalletRPC(CRPCTable &tableRPC);\n //  being loaded (WalletParameterInteraction forbids -salvagewallet, -zapwallettxes or -upgradewallet with multiwallet).\n bool VerifyWallets();\n \n+typedef CWallet* CWalletRef;\n+extern std::vector<CWalletRef> vpwallets;\n+\n //! Load wallet databases.\n bool OpenWallets();\n \n@@ -40,4 +44,23 @@ void StopWallets();\n //! Close all wallets.\n void CloseWallets();\n \n+void AddWallet(CWallet *wallet);\n+void DeallocWallet(unsigned int pos);\n+\n+bool HasWallets();\n+\n+unsigned int CountWallets();\n+\n+template<typename Callable>\n+void ForEachWallet(Callable&& func)\n+{\n+    for (auto&& wallet : vpwallets) {\n+        func(wallet);\n+    }\n+};\n+\n+CWallet* GetWalletAtPos(int pos);\n+\n+CWallet* FindWalletByName(const std::string &name);\n+\n #endif // BITCOIN_WALLET_INIT_H"
      },
      {
        "sha": "d21ebcc6f7997fb0be8d17e3a037b96d3e7289b9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -26,6 +26,7 @@\n #include <utilmoneystr.h>\n #include <wallet/coincontrol.h>\n #include <wallet/feebumper.h>\n+#include <wallet/init.h>\n #include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n #include <wallet/walletdb.h>\n@@ -43,15 +44,13 @@ CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n {\n     if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n         // wallet endpoint was used\n-        std::string requestedWallet = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\n-        for (CWalletRef pwallet : ::vpwallets) {\n-            if (pwallet->GetName() == requestedWallet) {\n-                return pwallet;\n-            }\n+        CWallet *wallet = FindWalletByName(urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size())));\n+        if (wallet) {\n+            return wallet;\n         }\n         throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n     }\n-    return ::vpwallets.size() == 1 || (request.fHelp && ::vpwallets.size() > 0) ? ::vpwallets[0] : nullptr;\n+    return CountWallets() == 1 || (request.fHelp && CountWallets() > 0) ? GetWalletAtPos(0) : nullptr;\n }\n \n std::string HelpRequiringPassphrase(CWallet * const pwallet)\n@@ -65,7 +64,7 @@ bool EnsureWalletIsAvailable(CWallet * const pwallet, bool avoidException)\n {\n     if (pwallet) return true;\n     if (avoidException) return false;\n-    if (::vpwallets.empty()) {\n+    if (!HasWallets()) {\n         // Note: It isn't currently possible to trigger this error because\n         // wallet RPC methods aren't registered unless a wallet is loaded. But\n         // this error is being kept as a precaution, because it's possible in\n@@ -2845,18 +2844,19 @@ UniValue listwallets(const JSONRPCRequest& request)\n \n     UniValue obj(UniValue::VARR);\n \n-    for (CWalletRef pwallet : vpwallets) {\n-\n+    bool not_available_found = false;\n+    ForEachWallet([&not_available_found, &request,&obj](CWallet *pwallet) {\n         if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n-            return NullUniValue;\n+            not_available_found = true;\n+            return;\n         }\n \n         LOCK(pwallet->cs_wallet);\n \n         obj.push_back(pwallet->GetName());\n-    }\n+    });\n \n-    return obj;\n+    return not_available_found ? NullUniValue : obj;\n }\n \n UniValue resendwallettransactions(const JSONRPCRequest& request)"
      },
      {
        "sha": "ff479cbd835a4507db1d105750f1249eecf4d035",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -14,6 +14,7 @@\n #include <test/test_bitcoin.h>\n #include <validation.h>\n #include <wallet/coincontrol.h>\n+#include <wallet/init.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n@@ -73,7 +74,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n     // after.\n     {\n         CWallet wallet(\"dummy\", CWalletDBWrapper::CreateDummy());\n-        vpwallets.insert(vpwallets.begin(), &wallet);\n+        AddWallet(&wallet);\n         UniValue keys;\n         keys.setArray();\n         UniValue key;\n@@ -104,7 +105,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n                       \"downloading and rescanning the relevant blocks (see -reindex and -rescan \"\n                       \"options).\\\"}},{\\\"success\\\":true}]\",\n                               0, oldTip->GetBlockTimeMax(), TIMESTAMP_WINDOW));\n-        vpwallets.erase(vpwallets.begin());\n+        DeallocWallet(0);\n     }\n }\n \n@@ -139,7 +140,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back((pathTemp / \"wallet.backup\").string());\n-        vpwallets.insert(vpwallets.begin(), &wallet);\n+        AddWallet(&wallet);\n         ::dumpwallet(request);\n     }\n \n@@ -151,7 +152,8 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back((pathTemp / \"wallet.backup\").string());\n-        vpwallets[0] = &wallet;\n+        DeallocWallet(0);\n+        AddWallet(&wallet);\n         ::importwallet(request);\n \n         LOCK(wallet.cs_wallet);\n@@ -165,7 +167,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n     }\n \n     SetMockTime(0);\n-    vpwallets.erase(vpwallets.begin());\n+    DeallocWallet(0);\n }\n \n // Check that GetImmatureCredit() returns a newly calculated value instead of"
      },
      {
        "sha": "9e367ae7a55bdda6d6e3177ec9ae1eb84ffa990e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -36,7 +36,6 @@\n \n #include <boost/algorithm/string/replace.hpp>\n \n-std::vector<CWalletRef> vpwallets;\n /** Transaction fee set by the user */\n CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;"
      },
      {
        "sha": "b655f7afbc3d0b92c07ea81efaee15c9dc858b80",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -32,7 +32,6 @@\n #include <vector>\n \n typedef CWallet* CWalletRef;\n-extern std::vector<CWalletRef> vpwallets;\n \n /**\n  * Settings"
      },
      {
        "sha": "f5c2b6baaf5e3a7371816c51233ebe1463cf04ed",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373b6810568d343eefbc05df036d16345b5af04a/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=373b6810568d343eefbc05df036d16345b5af04a",
        "patch": "@@ -14,6 +14,7 @@\n #include <sync.h>\n #include <util.h>\n #include <utiltime.h>\n+#include <wallet/init.h>\n #include <wallet/wallet.h>\n \n #include <atomic>\n@@ -748,7 +749,7 @@ void MaybeCompactWalletDB()\n         return;\n     }\n \n-    for (CWalletRef pwallet : vpwallets) {\n+    ForEachWallet([](CWallet* pwallet) {\n         CWalletDBWrapper& dbh = pwallet->GetDBHandle();\n \n         unsigned int nUpdateCounter = dbh.nUpdateCounter;\n@@ -763,7 +764,7 @@ void MaybeCompactWalletDB()\n                 dbh.nLastFlushed = nUpdateCounter;\n             }\n         }\n-    }\n+    });\n \n     fOneThread = false;\n }"
      }
    ]
  },
  {
    "sha": "d5b9d9a964f9a9f59ea451375640a3a4826b4484",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWI5ZDlhOTY0ZjlhOWY1OWVhNDUxMzc1NjQwYTNhNDgyNmI0NDg0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-03-03T03:52:16Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-03-28T05:16:21Z"
      },
      "message": "Move multiwallet handling to walletmanager.cpp/.h",
      "tree": {
        "sha": "36446ee0ebd07fb1379100717bf2d2eba4969bd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36446ee0ebd07fb1379100717bf2d2eba4969bd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5b9d9a964f9a9f59ea451375640a3a4826b4484",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlq7JSUACgkQHrd2uwPH\nki3+TRAAlOmZ0gl8kfspwmo5yKKAtHdCmnEpXt1fhBGRzz7zROEOJ4u6FuJ3++nq\n1cQP+CU1lDNR/4ZgOPYAek26QYa0K5RBtZofxuxm+CEEukiCjyavqd7L4rljZi9d\nUSUkzui4L9dPItYAWp9GEhCCCzPFNuIcAsbnOMkfoY9cP6l6AjsX0fUIPNL5f5J6\ntEe38K8kZggJAU6mtvfhnnlqV/2H/e6wY9AOJfEVr/96DS4oBFRxDHp434zVUcTO\nBq9IDrUha+om1BvQCdoM6RMxqUJwF6JCv4rZxybJBkNeK+/w5Nh7Jtslm9aL8ApP\nyvVCfZLS/ksg0GF/rgDvtXPfZ7qN7ZoSEUpJJtEvh0SSpqTjrPcuFAfWrArwjdHg\nvxXcptBdOeYrwYFeHSUCBwVYZ5x82hwPVJltJloKYvoH0CmHj7X+/88hE7G/wMSY\nnGWCOTjthtGUd3PjxjKy0MHdzlfDIiz1TYeb0wT4hL0hjElhCUqvT9wZgTUONxNR\nMk5UocPVqEw+wRVHaGIRRIj0lu4avO6+qfOqTFMCxVsmv+XvRxUc0Td0bKtU+kH9\nialUgT+yT2W7lDCoa3Kldn+9kUlrqOaZ62vX0W3X9J+kmIGj3wWJPfRmPFWqGgBb\ntThGity3vGzkeJMXvshpm5IAsxVp+Q7kSWT3YNdc9O+NFLSXius=\n=yUHP\n-----END PGP SIGNATURE-----",
        "payload": "tree 36446ee0ebd07fb1379100717bf2d2eba4969bd3\nparent 373b6810568d343eefbc05df036d16345b5af04a\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1520049136 +0800\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1522214181 +0700\n\nMove multiwallet handling to walletmanager.cpp/.h\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5b9d9a964f9a9f59ea451375640a3a4826b4484",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5b9d9a964f9a9f59ea451375640a3a4826b4484",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5b9d9a964f9a9f59ea451375640a3a4826b4484/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "373b6810568d343eefbc05df036d16345b5af04a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373b6810568d343eefbc05df036d16345b5af04a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/373b6810568d343eefbc05df036d16345b5af04a"
      }
    ],
    "stats": {
      "total": 260,
      "additions": 139,
      "deletions": 121
    },
    "files": [
      {
        "sha": "f9f5de042adb020e09b5bbf56502c8cc137ab32e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -171,6 +171,7 @@ BITCOIN_CORE_H = \\\n   wallet/rpcwallet.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n+  wallet/walletmanager.h \\\n   wallet/walletutil.h \\\n   wallet/coinselection.h \\\n   warnings.h \\\n@@ -252,6 +253,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n+  wallet/walletmanager.cpp \\\n   wallet/walletdb.cpp \\\n   wallet/walletutil.cpp \\\n   wallet/coinselection.cpp \\"
      },
      {
        "sha": "5286f2f53deb375aa47fb8046b5c0f3b41ccaee7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -45,6 +45,7 @@\n #include <validationinterface.h>\n #ifdef ENABLE_WALLET\n #include <wallet/init.h>\n+#include <wallet/walletmanager.h>\n #endif\n #include <warnings.h>\n #include <stdint.h>"
      },
      {
        "sha": "ad78670a0d4baf380800fe085e60444e44ad09bc",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -34,8 +34,7 @@\n #include <warnings.h>\n \n #ifdef ENABLE_WALLET\n-#include <wallet/init.h>\n-#include <wallet/wallet.h>\n+#include <wallet/walletmanager.h>\n #endif\n \n #include <stdint.h>"
      },
      {
        "sha": "4ba589146235f460c99fe7099b342f5463187bf0",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -20,10 +20,9 @@\n #include <util.h>\n #include <utilstrencodings.h>\n #ifdef ENABLE_WALLET\n-#include <wallet/init.h>\n #include <wallet/rpcwallet.h>\n-#include <wallet/wallet.h>\n #include <wallet/walletdb.h>\n+#include <wallet/walletmanager.h>\n #endif\n #include <warnings.h>\n "
      },
      {
        "sha": "49931eba466a5de533912847ffe37bd08635b5be",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -14,8 +14,6 @@\n #include <wallet/wallet.h>\n #include <wallet/walletutil.h>\n \n-std::vector<CWalletRef> vpwallets;\n-\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n@@ -269,75 +267,3 @@ bool VerifyWallets()\n \n     return true;\n }\n-\n-bool OpenWallets()\n-{\n-    if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n-        LogPrintf(\"Wallet disabled!\\n\");\n-        return true;\n-    }\n-\n-    for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n-        CWallet * const pwallet = CWallet::CreateWalletFromFile(walletFile, fs::absolute(walletFile, GetWalletDir()));\n-        if (!pwallet) {\n-            return false;\n-        }\n-        vpwallets.push_back(pwallet);\n-    }\n-\n-    return true;\n-}\n-\n-void StartWallets(CScheduler& scheduler) {\n-    for (CWalletRef pwallet : vpwallets) {\n-        pwallet->postInitProcess(scheduler);\n-    }\n-}\n-\n-void FlushWallets() {\n-    for (CWalletRef pwallet : vpwallets) {\n-        pwallet->Flush(false);\n-    }\n-}\n-\n-void StopWallets() {\n-    for (CWalletRef pwallet : vpwallets) {\n-        pwallet->Flush(true);\n-    }\n-}\n-\n-void CloseWallets() {\n-    for (CWalletRef pwallet : vpwallets) {\n-        delete pwallet;\n-    }\n-    vpwallets.clear();\n-}\n-\n-void AddWallet(CWallet *wallet) {\n-    vpwallets.insert(vpwallets.begin(), wallet);\n-}\n-\n-void DeallocWallet(unsigned int pos) {\n-    vpwallets.erase(vpwallets.begin()+pos);\n-}\n-\n-bool HasWallets() {\n-    return !vpwallets.empty();\n-}\n-\n-CWallet * GetWalletAtPos(int pos) {\n-    return vpwallets[pos];\n-}\n-\n-unsigned int CountWallets() {\n-    return vpwallets.size();\n-}\n-\n-CWallet* FindWalletByName(const std::string &name) {\n-    for (CWalletRef pwallet : ::vpwallets) {\n-        if (pwallet->GetName() == name) {\n-            return pwallet;\n-        }\n-    }\n-    return nullptr;\n-}"
      },
      {
        "sha": "ba6fe9b17c5eb18a875b1cd508200efab405765d",
        "filename": "src/wallet/init.h",
        "status": "modified",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.h?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -7,7 +7,6 @@\n #define BITCOIN_WALLET_INIT_H\n \n #include <string>\n-#include <wallet/wallet.h>\n \n class CRPCTable;\n class CScheduler;\n@@ -26,41 +25,4 @@ void RegisterWalletRPC(CRPCTable &tableRPC);\n //  being loaded (WalletParameterInteraction forbids -salvagewallet, -zapwallettxes or -upgradewallet with multiwallet).\n bool VerifyWallets();\n \n-typedef CWallet* CWalletRef;\n-extern std::vector<CWalletRef> vpwallets;\n-\n-//! Load wallet databases.\n-bool OpenWallets();\n-\n-//! Complete startup of wallets.\n-void StartWallets(CScheduler& scheduler);\n-\n-//! Flush all wallets in preparation for shutdown.\n-void FlushWallets();\n-\n-//! Stop all wallets. Wallets will be flushed first.\n-void StopWallets();\n-\n-//! Close all wallets.\n-void CloseWallets();\n-\n-void AddWallet(CWallet *wallet);\n-void DeallocWallet(unsigned int pos);\n-\n-bool HasWallets();\n-\n-unsigned int CountWallets();\n-\n-template<typename Callable>\n-void ForEachWallet(Callable&& func)\n-{\n-    for (auto&& wallet : vpwallets) {\n-        func(wallet);\n-    }\n-};\n-\n-CWallet* GetWalletAtPos(int pos);\n-\n-CWallet* FindWalletByName(const std::string &name);\n-\n #endif // BITCOIN_WALLET_INIT_H"
      },
      {
        "sha": "68dabca9634f8fcb1092d0616bc152cd7031a38c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -26,10 +26,9 @@\n #include <utilmoneystr.h>\n #include <wallet/coincontrol.h>\n #include <wallet/feebumper.h>\n-#include <wallet/init.h>\n #include <wallet/rpcwallet.h>\n-#include <wallet/wallet.h>\n #include <wallet/walletdb.h>\n+#include <wallet/walletmanager.h>\n #include <wallet/walletutil.h>\n \n #include <init.h>  // For StartShutdown"
      },
      {
        "sha": "d1fdd0f7eee6af5efa101f0414dbe2837bc03d3d",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -14,8 +14,8 @@\n #include <test/test_bitcoin.h>\n #include <validation.h>\n #include <wallet/coincontrol.h>\n-#include <wallet/init.h>\n #include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/walletmanager.h>\n \n #include <boost/test/unit_test.hpp>\n #include <univalue.h>"
      },
      {
        "sha": "e7e75d3e9d2185103d7ce8a3334ff37a4bbcc9de",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -14,8 +14,7 @@\n #include <sync.h>\n #include <util.h>\n #include <utiltime.h>\n-#include <wallet/init.h>\n-#include <wallet/wallet.h>\n+#include <wallet/walletmanager.h>\n \n #include <atomic>\n "
      },
      {
        "sha": "ee6f72cd6983fc93cf0fb78dc7582a0d4bb2a5ab",
        "filename": "src/wallet/walletmanager.cpp",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/walletmanager.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/walletmanager.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletmanager.cpp?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -0,0 +1,81 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <wallet/wallet.h>\n+#include <wallet/walletmanager.h>\n+#include <wallet/walletutil.h>\n+\n+std::vector<CWalletRef> vpwallets;\n+\n+bool OpenWallets()\n+{\n+    if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n+        LogPrintf(\"Wallet disabled!\\n\");\n+        return true;\n+    }\n+\n+    for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n+        CWallet * const pwallet = CWallet::CreateWalletFromFile(walletFile, fs::absolute(walletFile, GetWalletDir()));\n+        if (!pwallet) {\n+            return false;\n+        }\n+        vpwallets.push_back(pwallet);\n+    }\n+\n+    return true;\n+}\n+\n+void StartWallets(CScheduler& scheduler) {\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->postInitProcess(scheduler);\n+    }\n+}\n+\n+void FlushWallets() {\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->Flush(false);\n+    }\n+}\n+\n+void StopWallets() {\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->Flush(true);\n+    }\n+}\n+\n+void CloseWallets() {\n+    for (CWalletRef pwallet : vpwallets) {\n+        delete pwallet;\n+    }\n+    vpwallets.clear();\n+}\n+\n+void AddWallet(CWallet *wallet) {\n+    vpwallets.insert(vpwallets.begin(), wallet);\n+}\n+\n+void DeallocWallet(unsigned int pos) {\n+    vpwallets.erase(vpwallets.begin()+pos);\n+}\n+\n+bool HasWallets() {\n+    return !vpwallets.empty();\n+}\n+\n+CWallet * GetWalletAtPos(int pos) {\n+    return vpwallets[pos];\n+}\n+\n+unsigned int CountWallets() {\n+    return vpwallets.size();\n+}\n+\n+CWallet* FindWalletByName(const std::string &name) {\n+    for (CWalletRef pwallet : ::vpwallets) {\n+        if (pwallet->GetName() == name) {\n+            return pwallet;\n+        }\n+    }\n+    return nullptr;\n+}"
      },
      {
        "sha": "1838008b28d34ad9e62173784226281cef3f30d8",
        "filename": "src/wallet/walletmanager.h",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/walletmanager.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5b9d9a964f9a9f59ea451375640a3a4826b4484/src/wallet/walletmanager.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletmanager.h?ref=d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "patch": "@@ -0,0 +1,50 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_WALLETMANAGER_H\n+#define BITCOIN_WALLET_WALLETMANAGER_H\n+\n+#include <wallet/wallet.h>\n+\n+#include <vector>\n+#include <util.h>\n+\n+typedef CWallet* CWalletRef;\n+extern std::vector<CWalletRef> vpwallets;\n+\n+//! Load wallet databases.\n+bool OpenWallets();\n+\n+//! Complete startup of wallets.\n+void StartWallets(CScheduler& scheduler);\n+\n+//! Flush all wallets in preparation for shutdown.\n+void FlushWallets();\n+\n+//! Stop all wallets. Wallets will be flushed first.\n+void StopWallets();\n+\n+//! Close all wallets.\n+void CloseWallets();\n+\n+void AddWallet(CWallet *wallet);\n+void DeallocWallet(unsigned int pos);\n+\n+bool HasWallets();\n+\n+unsigned int CountWallets();\n+\n+template<typename Callable>\n+void ForEachWallet(Callable&& func)\n+{\n+    for (auto&& wallet : vpwallets) {\n+        func(wallet);\n+    }\n+};\n+\n+CWallet* GetWalletAtPos(int pos);\n+\n+CWallet* FindWalletByName(const std::string &name);\n+\n+#endif // BITCOIN_WALLET_WALLETMANAGER_H"
      }
    ]
  },
  {
    "sha": "ed16e969cef1daa5381f872d5d2b23c3696df709",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDE2ZTk2OWNlZjFkYWE1MzgxZjg3MmQ1ZDJiMjNjMzY5NmRmNzA5",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-03-03T05:05:22Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-03-28T05:20:49Z"
      },
      "message": "Classify the wallet manager",
      "tree": {
        "sha": "1c4d6f18a7813db1046e9f553fbed0bfaad34164",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c4d6f18a7813db1046e9f553fbed0bfaad34164"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed16e969cef1daa5381f872d5d2b23c3696df709",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlq7JjEACgkQHrd2uwPH\nki3KqBAArr11jZAKfT2+2HR9Awh8oCjDv/Xzf0d+1QCFyGBe3shg6WswQNxrLeqK\nd33sBEgvzcbh43RtE2sIcLst8oBYU56cgEWFSqKy55X6FyCA5vWq8LySZ6W3eg9I\nNRxoVlQ84Us42xWz6RRY1O++ieA+Kt+GCNa81m7QavyFCUOFJEyav77+Y+O4X13b\nQ9M/1d/Rigzdp+SvUZs4fNesUHEswIG8ch7XzUtArkseF5thMSIzjaD9KIh7AlUX\nDtqVZ0AY1ZtIazzkR9yifgSoHQeslUBSQvetJ2KaBR4FJTjV6ljMYkoyXzW9daOv\nKAahTbcq9JrKw3qQ5JQelkq6FCpcyQIqVUqe5pqlfHj8KhOuelmty+XSm1ndTAJp\n0M7pAKw3Qgbu3VqITTFAkg1GQztXcThQfadKX8Lcrp4/flfD5mjz5Lxx5c+3OrnO\nl+vMAQr9XBl6xO4F/7NLAhzhA/6YEBeCMTOy/V1164fDSzCLHq4P7a4FS5sdpABx\nCc99Vugj75a02ruuERWrkuUNaGcV1Wb4VdilB1081oeOJ4wGGF1hek46v4jPebIe\nro9JtuzCkhOYaybt/6/CTMmk27G7zeUzpVYviVVBvZOqK4KjbiM7PdFlfYrv4K5/\nnAF67NNZZjCy2+AUPGqYp7d+8PKUsRARijH2bxl1BSzt7Crxz+U=\n=hGmT\n-----END PGP SIGNATURE-----",
        "payload": "tree 1c4d6f18a7813db1046e9f553fbed0bfaad34164\nparent d5b9d9a964f9a9f59ea451375640a3a4826b4484\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1520053522 +0800\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1522214449 +0700\n\nClassify the wallet manager\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed16e969cef1daa5381f872d5d2b23c3696df709",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed16e969cef1daa5381f872d5d2b23c3696df709",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed16e969cef1daa5381f872d5d2b23c3696df709/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5b9d9a964f9a9f59ea451375640a3a4826b4484",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d5b9d9a964f9a9f59ea451375640a3a4826b4484"
      }
    ],
    "stats": {
      "total": 141,
      "additions": 74,
      "deletions": 67
    },
    "files": [
      {
        "sha": "680ec92abaf1346ffa726845274911f484474414",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -191,7 +191,7 @@ void Shutdown()\n     StopRPC();\n     StopHTTPServer();\n #ifdef ENABLE_WALLET\n-    FlushWallets();\n+    g_wallet_manager->FlushWallets();\n #endif\n     StopMapPort();\n \n@@ -251,7 +251,7 @@ void Shutdown()\n         pblocktree.reset();\n     }\n #ifdef ENABLE_WALLET\n-    StopWallets();\n+    g_wallet_manager->StopWallets();\n #endif\n \n #if ENABLE_ZMQ\n@@ -273,7 +273,7 @@ void Shutdown()\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n     GetMainSignals().UnregisterWithMempoolSignals(mempool);\n #ifdef ENABLE_WALLET\n-    CloseWallets();\n+    g_wallet_manager->CloseWallets();\n #endif\n     globalVerifyHandle.reset();\n     ECC_Stop();\n@@ -1593,7 +1593,7 @@ bool AppInitMain()\n \n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n-    if (!OpenWallets())\n+    if (!g_wallet_manager->OpenWallets())\n         return false;\n #else\n     LogPrintf(\"No wallet support compiled in!\\n\");\n@@ -1744,7 +1744,7 @@ bool AppInitMain()\n     uiInterface.InitMessage(_(\"Done loading\"));\n \n #ifdef ENABLE_WALLET\n-    StartWallets(scheduler);\n+    g_wallet_manager->StartWallets(scheduler);\n #endif\n \n     return true;"
      },
      {
        "sha": "fdef554e739c7d67f4073149fd3d455487302509",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -484,7 +484,7 @@ void BitcoinApplication::initializeResult(bool success)\n \n #ifdef ENABLE_WALLET\n         bool fFirstWallet = true;\n-        ForEachWallet([this, &fFirstWallet](CWallet *pwallet) {\n+        g_wallet_manager->ForEachWallet([this, &fFirstWallet](CWallet *pwallet) {\n             WalletModel * const walletModel = new WalletModel(platformStyle, pwallet, optionsModel);\n             window->addWallet(walletModel);\n             if (fFirstWallet) {"
      },
      {
        "sha": "ba2bd13fb900482cee626634e46ee065145e8a1d",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -69,7 +69,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     {\n \n #ifdef ENABLE_WALLET\n-        if (HasWallets() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n+        if (g_wallet_manager->HasWallets() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n             ret.pushKVs(getaddressinfo(request));\n         }\n #endif"
      },
      {
        "sha": "e963693086489893af0336466b3d1eba59ca2f61",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -43,13 +43,13 @@ CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n {\n     if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\n         // wallet endpoint was used\n-        CWallet *wallet = FindWalletByName(urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size())));\n+        CWallet *wallet = g_wallet_manager->FindWalletByName(urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size())));\n         if (wallet) {\n             return wallet;\n         }\n         throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Requested wallet does not exist or is not loaded\");\n     }\n-    return CountWallets() == 1 || (request.fHelp && CountWallets() > 0) ? GetWalletAtPos(0) : nullptr;\n+    return g_wallet_manager->CountWallets() == 1 || (request.fHelp && g_wallet_manager->CountWallets() > 0) ? g_wallet_manager->GetWalletAtPos(0) : nullptr;\n }\n \n std::string HelpRequiringPassphrase(CWallet * const pwallet)\n@@ -63,7 +63,7 @@ bool EnsureWalletIsAvailable(CWallet * const pwallet, bool avoidException)\n {\n     if (pwallet) return true;\n     if (avoidException) return false;\n-    if (!HasWallets()) {\n+    if (!g_wallet_manager->HasWallets()) {\n         // Note: It isn't currently possible to trigger this error because\n         // wallet RPC methods aren't registered unless a wallet is loaded. But\n         // this error is being kept as a precaution, because it's possible in\n@@ -2844,7 +2844,7 @@ UniValue listwallets(const JSONRPCRequest& request)\n     UniValue obj(UniValue::VARR);\n \n     bool not_available_found = false;\n-    ForEachWallet([&not_available_found, &request,&obj](CWallet *pwallet) {\n+    g_wallet_manager->ForEachWallet([&not_available_found, &request,&obj](CWallet *pwallet) {\n         if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n             not_available_found = true;\n             return;"
      },
      {
        "sha": "544e21d94dbc8781dc2ed7f4f40a8d0dbf6ea1e5",
        "filename": "src/wallet/test/wallet_test_fixture.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/test/wallet_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/test/wallet_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_test_fixture.cpp?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -6,7 +6,7 @@\n \n #include <rpc/server.h>\n #include <wallet/db.h>\n-#include <wallet/wallet.h>\n+#include <wallet/walletmanager.h>\n \n WalletTestingSetup::WalletTestingSetup(const std::string& chainName):\n     TestingSetup(chainName), m_wallet(\"mock\", CWalletDBWrapper::CreateMock())"
      },
      {
        "sha": "6d82c8b03c535f8f42bc196bbc04b9a4db37b3c8",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -74,7 +74,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n     // after.\n     {\n         CWallet wallet(\"dummy\", CWalletDBWrapper::CreateDummy());\n-        AddWallet(&wallet);\n+        g_wallet_manager->AddWallet(&wallet);\n         UniValue keys;\n         keys.setArray();\n         UniValue key;\n@@ -105,7 +105,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n                       \"downloading and rescanning the relevant blocks (see -reindex and -rescan \"\n                       \"options).\\\"}},{\\\"success\\\":true}]\",\n                               0, oldTip->GetBlockTimeMax(), TIMESTAMP_WINDOW));\n-        DeallocWallet(0);\n+        g_wallet_manager->DeallocWallet(0);\n     }\n }\n \n@@ -140,7 +140,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back((pathTemp / \"wallet.backup\").string());\n-        AddWallet(&wallet);\n+        g_wallet_manager->AddWallet(&wallet);\n         ::dumpwallet(request);\n     }\n \n@@ -152,8 +152,8 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back((pathTemp / \"wallet.backup\").string());\n-        DeallocWallet(0);\n-        AddWallet(&wallet);\n+        g_wallet_manager->DeallocWallet(0);\n+        g_wallet_manager->AddWallet(&wallet);\n         ::importwallet(request);\n \n         LOCK(wallet.cs_wallet);\n@@ -167,7 +167,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n     }\n \n     SetMockTime(0);\n-    DeallocWallet(0);\n+    g_wallet_manager->DeallocWallet(0);\n }\n \n // Check that GetImmatureCredit() returns a newly calculated value instead of"
      },
      {
        "sha": "3b827930569d59ed8b333544da7f06a4aa8c0e4e",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -748,7 +748,7 @@ void MaybeCompactWalletDB()\n         return;\n     }\n \n-    ForEachWallet([](CWallet* pwallet) {\n+    g_wallet_manager->ForEachWallet([](CWallet* pwallet) {\n         CWalletDBWrapper& dbh = pwallet->GetDBHandle();\n \n         unsigned int nUpdateCounter = dbh.nUpdateCounter;"
      },
      {
        "sha": "07f7f2af94b5ea4ba64fecf0692741a92c2516a9",
        "filename": "src/wallet/walletmanager.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/walletmanager.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/walletmanager.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletmanager.cpp?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -6,9 +6,9 @@\n #include <wallet/walletmanager.h>\n #include <wallet/walletutil.h>\n \n-std::vector<CWalletRef> vpwallets;\n+std::unique_ptr<CWalletManager> g_wallet_manager = std::unique_ptr<CWalletManager>(new CWalletManager());;\n \n-bool OpenWallets()\n+bool CWalletManager::OpenWallets()\n {\n     if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n         LogPrintf(\"Wallet disabled!\\n\");\n@@ -20,59 +20,59 @@ bool OpenWallets()\n         if (!pwallet) {\n             return false;\n         }\n-        vpwallets.push_back(pwallet);\n+        m_vpwallets.push_back(pwallet);\n     }\n \n     return true;\n }\n \n-void StartWallets(CScheduler& scheduler) {\n-    for (CWalletRef pwallet : vpwallets) {\n+void CWalletManager::StartWallets(CScheduler& scheduler) {\n+    for (CWalletRef pwallet : m_vpwallets) {\n         pwallet->postInitProcess(scheduler);\n     }\n }\n \n-void FlushWallets() {\n-    for (CWalletRef pwallet : vpwallets) {\n+void CWalletManager::FlushWallets() {\n+    for (CWalletRef pwallet : m_vpwallets) {\n         pwallet->Flush(false);\n     }\n }\n \n-void StopWallets() {\n-    for (CWalletRef pwallet : vpwallets) {\n+void CWalletManager::StopWallets() {\n+    for (CWalletRef pwallet : m_vpwallets) {\n         pwallet->Flush(true);\n     }\n }\n \n-void CloseWallets() {\n-    for (CWalletRef pwallet : vpwallets) {\n+void CWalletManager::CloseWallets() {\n+    for (CWalletRef pwallet : m_vpwallets) {\n         delete pwallet;\n     }\n-    vpwallets.clear();\n+    m_vpwallets.clear();\n }\n \n-void AddWallet(CWallet *wallet) {\n-    vpwallets.insert(vpwallets.begin(), wallet);\n+void CWalletManager::AddWallet(CWallet *wallet) {\n+    m_vpwallets.insert(m_vpwallets.begin(), wallet);\n }\n \n-void DeallocWallet(unsigned int pos) {\n-    vpwallets.erase(vpwallets.begin()+pos);\n+void CWalletManager::DeallocWallet(unsigned int pos) {\n+    m_vpwallets.erase(m_vpwallets.begin()+pos);\n }\n \n-bool HasWallets() {\n-    return !vpwallets.empty();\n+bool CWalletManager::HasWallets() {\n+    return !m_vpwallets.empty();\n }\n \n-CWallet * GetWalletAtPos(int pos) {\n-    return vpwallets[pos];\n+CWallet * CWalletManager::GetWalletAtPos(int pos) {\n+    return m_vpwallets[pos];\n }\n \n-unsigned int CountWallets() {\n-    return vpwallets.size();\n+unsigned int CWalletManager::CountWallets() {\n+    return m_vpwallets.size();\n }\n \n-CWallet* FindWalletByName(const std::string &name) {\n-    for (CWalletRef pwallet : ::vpwallets) {\n+CWallet* CWalletManager::FindWalletByName(const std::string &name) {\n+    for (CWalletRef pwallet : m_vpwallets) {\n         if (pwallet->GetName() == name) {\n             return pwallet;\n         }"
      },
      {
        "sha": "3df8b9b9b1417a7e582404bac51cf9f82e8c4a83",
        "filename": "src/wallet/walletmanager.h",
        "status": "modified",
        "additions": 31,
        "deletions": 24,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/walletmanager.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed16e969cef1daa5381f872d5d2b23c3696df709/src/wallet/walletmanager.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletmanager.h?ref=ed16e969cef1daa5381f872d5d2b23c3696df709",
        "patch": "@@ -11,40 +11,47 @@\n #include <util.h>\n \n typedef CWallet* CWalletRef;\n-extern std::vector<CWalletRef> vpwallets;\n \n-//! Load wallet databases.\n-bool OpenWallets();\n+class CWalletManager {\n+private:\n+    std::vector<CWalletRef> m_vpwallets;\n \n-//! Complete startup of wallets.\n-void StartWallets(CScheduler& scheduler);\n+public:\n+    //! Load wallet databases.\n+    bool OpenWallets();\n \n-//! Flush all wallets in preparation for shutdown.\n-void FlushWallets();\n+    //! Complete startup of wallets.\n+    void StartWallets(CScheduler& scheduler);\n \n-//! Stop all wallets. Wallets will be flushed first.\n-void StopWallets();\n+    //! Flush all wallets in preparation for shutdown.\n+    void FlushWallets();\n \n-//! Close all wallets.\n-void CloseWallets();\n+    //! Stop all wallets. Wallets will be flushed first.\n+    void StopWallets();\n \n-void AddWallet(CWallet *wallet);\n-void DeallocWallet(unsigned int pos);\n+    //! Close all wallets.\n+    void CloseWallets();\n \n-bool HasWallets();\n+    void AddWallet(CWallet *wallet);\n+    void DeallocWallet(unsigned int pos);\n \n-unsigned int CountWallets();\n+    bool HasWallets();\n \n-template<typename Callable>\n-void ForEachWallet(Callable&& func)\n-{\n-    for (auto&& wallet : vpwallets) {\n-        func(wallet);\n-    }\n-};\n+    unsigned int CountWallets();\n+\n+    template<typename Callable>\n+    void ForEachWallet(Callable&& func)\n+    {\n+        for (auto&& wallet : m_vpwallets) {\n+            func(wallet);\n+        }\n+    };\n \n-CWallet* GetWalletAtPos(int pos);\n+    CWallet* GetWalletAtPos(int pos);\n+    CWallet* FindWalletByName(const std::string &name);\n+};\n \n-CWallet* FindWalletByName(const std::string &name);\n+// global wallet manager instance\n+extern std::unique_ptr<CWalletManager> g_wallet_manager;\n \n #endif // BITCOIN_WALLET_WALLETMANAGER_H"
      }
    ]
  },
  {
    "sha": "d7523a9c1822911d7cf08403e9f6c69cd5bfa578",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzUyM2E5YzE4MjI5MTFkN2NmMDg0MDNlOWY2YzY5Y2Q1YmZhNTc4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-03-03T05:09:59Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-03-28T05:20:50Z"
      },
      "message": "Revert CWalletRef\nPrepare for a better pointer handling",
      "tree": {
        "sha": "6296fc156e56ca9123ab67030dd152dd23583133",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6296fc156e56ca9123ab67030dd152dd23583133"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7523a9c1822911d7cf08403e9f6c69cd5bfa578",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlq7JjIACgkQHrd2uwPH\nki0yyQ//ST1B7axRIZHNunpo5oIvfn92bqzWMOdeMT9WW2CjEKTKUFaGqwRdt402\nIM+Y18744UuUTMFp9MzofW3fRwBI8Dci7CCIlqEUtCThjT07Yz2cQpjZlU1iMaII\nx23QHYZkPpG25/56EhydThIQGiFUQ0q6Yq2kpVluwFQg9ixsOGHQJbPVcB8q45sH\nDXpX2XWgc2WPDQ3vlVGwQUAH3A87OFTcW8gZuVTD9ZsXtNzPobe8+ff4K/UDVosn\nkDr6C6BFGTOVXXGaG5v0uS45d227KPhQLZxlFiE5GIMt+/r2wC/9yXj98V9vaa4o\n+j3T45b2u9F1Vatc+LSar0O1/CgQCrGf+K8XNXDKhfKUiBPsWjoXPbcuK9ux0YRb\nq98gPn4PMXc2GWwZrEGzAXnpXLbFN+V1m315qOPUWXsMzx/lteJJIZltIsigKE4v\nLk9Hm8PtwqrQrq+hgiU0Ueoc5WKCGO6O3ojbO/pgnkcSHMgcqlcryjrxGcTn1F3N\nxuW6rjXknRA6js4z7OGaDeYjKg1UTzxPxxUrzoPkF94HnWDIOeiGRMR9xOk1LDii\nyu+x1Lb6fZ+Blf96CU2ta9zdmT2412pQrIP7Bs9wFAU41NtsaMPQQfg6cf3uZJCq\nW+TvxIgVQH684MaE6sCZlsfta1mQUen7KuEQeyewa/gRTIGuxkY=\n=Hb5g\n-----END PGP SIGNATURE-----",
        "payload": "tree 6296fc156e56ca9123ab67030dd152dd23583133\nparent ed16e969cef1daa5381f872d5d2b23c3696df709\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1520053799 +0800\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1522214450 +0700\n\nRevert CWalletRef\nPrepare for a better pointer handling\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7523a9c1822911d7cf08403e9f6c69cd5bfa578",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d7523a9c1822911d7cf08403e9f6c69cd5bfa578",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7523a9c1822911d7cf08403e9f6c69cd5bfa578/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed16e969cef1daa5381f872d5d2b23c3696df709",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed16e969cef1daa5381f872d5d2b23c3696df709",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed16e969cef1daa5381f872d5d2b23c3696df709"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 8,
      "deletions": 12
    },
    "files": [
      {
        "sha": "a3e67d9cc234a601fcb7a68d68aeb8e68d0bbd96",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7523a9c1822911d7cf08403e9f6c69cd5bfa578/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7523a9c1822911d7cf08403e9f6c69cd5bfa578/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d7523a9c1822911d7cf08403e9f6c69cd5bfa578",
        "patch": "@@ -31,8 +31,6 @@\n #include <utility>\n #include <vector>\n \n-typedef CWallet* CWalletRef;\n-\n /**\n  * Settings\n  */\n@@ -1246,10 +1244,10 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key);\n class WalletRescanReserver\n {\n private:\n-    CWalletRef m_wallet;\n+    CWallet* m_wallet;\n     bool m_could_reserve;\n public:\n-    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+    explicit WalletRescanReserver(CWallet* w) : m_wallet(w), m_could_reserve(false) {}\n \n     bool reserve()\n     {"
      },
      {
        "sha": "b2988d2f9eab57ee97aa5198a3cfa3aa67be4d20",
        "filename": "src/wallet/walletmanager.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7523a9c1822911d7cf08403e9f6c69cd5bfa578/src/wallet/walletmanager.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7523a9c1822911d7cf08403e9f6c69cd5bfa578/src/wallet/walletmanager.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletmanager.cpp?ref=d7523a9c1822911d7cf08403e9f6c69cd5bfa578",
        "patch": "@@ -27,25 +27,25 @@ bool CWalletManager::OpenWallets()\n }\n \n void CWalletManager::StartWallets(CScheduler& scheduler) {\n-    for (CWalletRef pwallet : m_vpwallets) {\n+    for (CWallet* pwallet : m_vpwallets) {\n         pwallet->postInitProcess(scheduler);\n     }\n }\n \n void CWalletManager::FlushWallets() {\n-    for (CWalletRef pwallet : m_vpwallets) {\n+    for (CWallet* pwallet : m_vpwallets) {\n         pwallet->Flush(false);\n     }\n }\n \n void CWalletManager::StopWallets() {\n-    for (CWalletRef pwallet : m_vpwallets) {\n+    for (CWallet* pwallet : m_vpwallets) {\n         pwallet->Flush(true);\n     }\n }\n \n void CWalletManager::CloseWallets() {\n-    for (CWalletRef pwallet : m_vpwallets) {\n+    for (CWallet* pwallet : m_vpwallets) {\n         delete pwallet;\n     }\n     m_vpwallets.clear();\n@@ -72,7 +72,7 @@ unsigned int CWalletManager::CountWallets() {\n }\n \n CWallet* CWalletManager::FindWalletByName(const std::string &name) {\n-    for (CWalletRef pwallet : m_vpwallets) {\n+    for (CWallet* pwallet : m_vpwallets) {\n         if (pwallet->GetName() == name) {\n             return pwallet;\n         }"
      },
      {
        "sha": "8a6df1b77613b2b790b4e47ed4fac1d188bf39bc",
        "filename": "src/wallet/walletmanager.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7523a9c1822911d7cf08403e9f6c69cd5bfa578/src/wallet/walletmanager.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7523a9c1822911d7cf08403e9f6c69cd5bfa578/src/wallet/walletmanager.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletmanager.h?ref=d7523a9c1822911d7cf08403e9f6c69cd5bfa578",
        "patch": "@@ -10,11 +10,9 @@\n #include <vector>\n #include <util.h>\n \n-typedef CWallet* CWalletRef;\n-\n class CWalletManager {\n private:\n-    std::vector<CWalletRef> m_vpwallets;\n+    std::vector<CWallet*> m_vpwallets;\n \n public:\n     //! Load wallet databases."
      }
    ]
  }
]