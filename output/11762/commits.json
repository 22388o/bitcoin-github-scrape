[
  {
    "sha": "01a06d66869054dc94ffc1c02515f27873087b90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWEwNmQ2Njg2OTA1NGRjOTRmZmMxYzAyNTE1ZjI3ODczMDg3Yjkw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-22T21:16:54Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-07-21T17:46:04Z"
      },
      "message": "Avoid locking mutexes that are already held by the same thread",
      "tree": {
        "sha": "ec7043396c90bf011e190bb4a54ae5d502de0d3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec7043396c90bf011e190bb4a54ae5d502de0d3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01a06d66869054dc94ffc1c02515f27873087b90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01a06d66869054dc94ffc1c02515f27873087b90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01a06d66869054dc94ffc1c02515f27873087b90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01a06d66869054dc94ffc1c02515f27873087b90/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07ce278455757fb46dab95fb9b97a3f6b1b84faf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07ce278455757fb46dab95fb9b97a3f6b1b84faf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07ce278455757fb46dab95fb9b97a3f6b1b84faf"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "56f9f34c9bbb6033df6b1f22903522a205d093d8",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01a06d66869054dc94ffc1c02515f27873087b90/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01a06d66869054dc94ffc1c02515f27873087b90/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=01a06d66869054dc94ffc1c02515f27873087b90",
        "patch": "@@ -542,7 +542,7 @@ void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMem\n void CTxMemPool::removeConflicts(const CTransaction &tx)\n {\n     // Remove transactions which depend on inputs of tx, recursively\n-    LOCK(cs);\n+    AssertLockHeld(cs);\n     for (const CTxIn &txin : tx.vin) {\n         auto it = mapNextTx.find(txin.prevout);\n         if (it != mapNextTx.end()) {"
      },
      {
        "sha": "784d5453b2f99833da3a5225e2e204dca6fa4cae",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01a06d66869054dc94ffc1c02515f27873087b90/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01a06d66869054dc94ffc1c02515f27873087b90/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=01a06d66869054dc94ffc1c02515f27873087b90",
        "patch": "@@ -544,7 +544,7 @@ class CTxMemPool\n \n     void removeRecursive(const CTransaction &tx, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN);\n     void removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight, int flags);\n-    void removeConflicts(const CTransaction &tx);\n+    void removeConflicts(const CTransaction &tx) EXCLUSIVE_LOCKS_REQUIRED(cs);\n     void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight);\n \n     void clear();"
      }
    ]
  }
]