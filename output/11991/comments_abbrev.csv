Sjors,2017-12-22T14:55:58Z,"I haven't tried, but this should work with or without #11937.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-353613425,353613425,
gmaxwell,2017-12-24T00:58:25Z,"Sounds like a good idea to me, when updating the PR you might want to fix the spelling in the commit message: reveice -> receive.  utACK",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-353758254,353758254,
sipa,2017-12-24T13:02:40Z,Concept ACK. Needs rebase. ,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-353783132,353783132,
Sjors,2017-12-24T13:25:43Z,"Rebased on top of 5d92439 (and fixed typo in commit message).\n\nBy the way, I generally use `git commit --amend --date ""$(date)""` to keep the commit timestamps fresh each time I rebase or change something. Any strong opinions against that?",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-353784185,353784185,
jb55,2017-12-29T22:48:49Z,"@Sjors what do think about aligning this next to the units dropdown instead of centered? Not sure if this is intended to look like this:\n\n![dec29-144346](https://user-images.githubusercontent.com/45598/34448878-e4329a54-eca6-11e7-8f35-80934a2f5e7b.png)\n\nAlso needs rebase\n",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-354509432,354509432,
Sjors,2017-12-29T22:56:34Z,"I'll rebase after the SegWit stuff is merged.\n\n@jb55 good catch, it doesn't look like that on OSX (see my own screenshot). It should be more or less attached to the currency dropdown, definitely not centered.\n\nI'm guessing you're on Ubuntu? I'll try to reproduce. What happens when you make the window a little less wide?\n\nI notice it shows ""bits"" for you, so you've somehow combined this",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-354510038,354510038,
jb55,2017-12-30T00:12:32Z,"> I'm guessing you're on Ubuntu? I'll try to reproduce. What happens when you make the window a little less wide?\n\nI'm using nixos with a tiling window manager (xmonad), allowing me to resize it to any size.\n\nIt gets closer to the dropdown when I make it shorter.\n\n> I notice it shows ""bits"" for you, so you've somehow combined this with your own PR? That's probably not related though.\n\nYeah",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-354515471,354515471,
Sjors,2017-12-31T15:38:15Z,"I noticed the same behavior on Ubuntu 17.04. It's fine with the default window size:\n<img width=""789"" alt=""normal size"" src=""https://user-images.githubusercontent.com/10217/34462636-8b38279a-ee48-11e7-80f0-6a78f90ef294.png"">\n\nBut misbehaves when you make it wider:\n<img width=""944"" alt=""wider"" src=""https://user-images.githubusercontent.com/10217/34462637-8b4f911e-ee48-11e7-90fe-b9e2453e2941",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-354610197,354610197,
Sjors,2018-01-02T11:18:45Z,Rebased. Horizontally expanding the window now behaves.,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-354746567,354746567,
jb55,2018-01-02T15:43:34Z,Tested ACK 4dc35c6c2677a470ee2189c11fa16aedc2b8df56\n,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-354795010,354795010,
molxyz,2018-01-04T05:13:05Z,"I compiled this PR for windows to test but the checkbox is not there. I guess right now this PR is only for linux?  \n  ",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-355200666,355200666,
Sjors,2018-01-04T16:16:01Z,"@molxyz QT is cross-platform, so if the check-box is missing on Windows that's either a bug or something went wrong when you compiled it. I'll try it in my own VM once I have that setup.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-355325021,355325021,
Sjors,2018-01-05T10:52:47Z,@promag when launched with `-addresstype=bech32` unchecking the check box still produces a bech32 address. I'll fix that.,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-355527098,355527098,
promag,2018-01-05T11:00:40Z,"> @promag when launched with -addresstype=bech32 unchecking the check box still produces a bech32 address. I'll fix that.\n\nRight, either the checkbox should be hidden or disabled? ",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-355528647,355528647,
Sjors,2018-01-05T11:24:05Z,@promag I'll disable it. ,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-355532963,355532963,
Sjors,2018-01-05T11:51:10Z,"Rebased on top of 06cdb1d, which means I also updated the call to `LearnRelatedScripts` (not sure if that's needed).\n\nCheckbox is now checked and disabled when launched with `-addresstype=bech32`. \n  ",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-355537524,355537524,
Sjors,2018-01-05T13:32:46Z,`address_types.py` fails on Travis but passes on my machine.,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-355555411,355555411,
Sjors,2018-01-06T13:26:40Z,"@molxyz it took me a bit of effort to compile QT on Windows, but the bech32 check box is there:\n<img width=""442"" alt=""schermafbeelding 2018-01-06 om 14 22 41"" src=""https://user-images.githubusercontent.com/10217/34640146-899a8e4c-f2ed-11e7-894f-2ef000205f25.png"">\n",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-355746951,355746951,
promag,2018-01-10T16:06:56Z,"2nd round ðŸ˜„ \n\nAre we going to remove the checkbox in the future? If so I don't think this is a great solution.\n\nMaybe just add a new line:\n```\nLabel: [input]\nAmount: [input] [combo]\nAddress type: [combo]            -- defaults to `g_address_type`\nMessage: [input]\n```",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356648926,356648926,
Sjors,2018-01-10T16:18:41Z,"@promag I suspect it will be _long_ time before all wallets support bech32. Best we can hope for in the near term is to be able to check it by default.\n\n> If so I don't think this is a great solution.\n\nWhy?\n\nI think an address type combo is needlessly intimating, especially if we also add legacy address support. If the choice is only between bech32 and segwit-p2sh fallback, a check box",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356652837,356652837,
promag,2018-01-10T16:25:28Z,"It must be possible to request a payment for p2sh, think of older wallets.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356655103,356655103,
Sjors,2018-01-10T17:31:53Z,"@promag that was my point. In other words, if at some point we make bech32 the default, we'd have the same check-box, but checked (and not disabled) by default.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356676261,356676261,
promag,2018-01-10T17:44:41Z,Currently it's not possible to request payment to p2sh if -addresstype=bech32 or am I wrong?,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356679991,356679991,
Sjors,2018-01-11T07:55:37Z,"> Currently it's not possible to request payment to p2sh if -addresstype=bech32 or am I wrong?\n\nThat's correct. I haven't bothered to solve that, because I don't see a good reason why a user would go through the trouble of launching QT with `-addresstype=bech32` and then not use bech32.\n\nHowever, once we decide to make bech32 the default, then obviously the checkbox needs to be uncheckable",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356854551,356854551,
Sjors,2018-01-11T08:37:04Z,"Decided not to kick the can down the road and changed the checkbox behavior a bit:\n* disabled when launched with `-addresstype=legacy`\n* checkbox toggles between `bech32` and `p2sh-segwit`\n\nAlso rebased.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356863442,356863442,
promag,2018-01-11T10:07:34Z,It's not intuitive it will use `p2sh-segwit` when running with `-addresstype=bech32`.,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356887090,356887090,
flack,2018-01-11T10:30:31Z,"Couldn't the checkbox be always unchecked and say ""use Bech32 address"" when started with `-addresstype=p2sh-segwit` and say ""use P2SH-Segwit address"" (or ideally something more comprehensible like ""use backwards-compatible address"") when started with `-addresstype=bech32`?",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356893090,356893090,
promag,2018-01-11T10:58:49Z,"@flack IMHO changing a UI element is not ideal. Users may expect the same thing every time?\n\n@Sjors There could be a new option in the ""Expert"" panel to show the address type selector?\n\n<img width=""590"" alt=""screen shot 2018-01-11 at 10 55 15"" src=""https://user-images.githubusercontent.com/3534524/34822187-f04f8a10-f6bd-11e7-908d-1deec7b5e026.png"">",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356900358,356900358,
Sjors,2018-01-11T11:16:41Z,"> It's not intuitive it will use p2sh-segwit when running with -addresstype=bech32.\n\nIt doesn't do that.  When launched with `-addresstype=bech32` it will use bech32. Unless the user unchecks the ""bech32"" box, in which case it uses `p2sh-segwit`. I don't think the UI needs to account for scenarios where a user launches with a parameter; at that point I assume they know what they're doing. I'm ",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356904813,356904813,
promag,2018-01-11T11:21:03Z,"> When launched with -addresstype=bech32 it will use bech32. Unless the user unchecks the ""bech32"" box, in which case it uses p2sh-segwit.\n\nThat's my point, why would the user assume it would be p2sh-segwit in that case? There is nothing indicating that.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356905738,356905738,
Sjors,2018-01-11T14:30:45Z,"@promag I can change the tooltip in case the wallet is launched with `-addresstype=bech32`? It would explain the downgrade behavior if the user deselects it. This seems less disruptive than changing the label and more user friendly than a dropdown with two technical terms. Even if the user is still confused, the behavior would be quite obvious once they see the generated address.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356950319,356950319,
promag,2018-01-11T14:43:53Z,"First and foremost, I agree that the UI must be simple and clean and avoid technical terms.\n\nSo with that in mind:\n - 99% of the time the checkbox will be ""visual trash"" as it will have the correct state.\n - Even the combo box will be visual trash like the checkbox.\n - IMHO a checkbox + tooltip hammering is not the right UI solution for a simple yet technical choice.\n\nSo my suggestio",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356954340,356954340,
flack,2018-01-11T15:37:42Z,"Since all the fields in the form are optional, you could almost say that they're visual trash, too :-) At least in the sense that normally, you just want an address to paste somewhere.\n\nBut since we're really scrutinizing this: Strictly speaking, it's a bit strange that the checkbox is on the same line as Amount. There's not really any logical connection between the amount you request and the ",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356964703,356964703,
Sjors,2018-01-11T18:28:49Z,"@promag:\n> 99% of the time the checkbox will be ""visual trash"" \n\nI don't think this is true. We don't know how many users will be using bech32 and how often they're able to use it. They might have some customers / friends / exchanges with a bech32 compatible wallet and others that don't.\n\n> So my suggestion is to add an option to enable the technical side of this UI and then present a co",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357018206,357018206,
Sjors,2018-01-11T19:31:21Z,I can't reproduce this Travis failure on MacOS or Ubuntu 14.04 (I didn't use the depends system).,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357035926,357035926,
jonasschnelli,2018-01-11T19:42:42Z,"Address is not showing correctly in the QRCode windows (macOS, QT5.10).\n<img width=""323"" alt=""bildschirmfoto 2018-01-11 um 09 41 51"" src=""https://user-images.githubusercontent.com/178464/34843818-b5c89b34-f6b3-11e7-9c1e-3165fd85c753.png"">\n",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357039103,357039103,
Sjors,2018-01-11T19:51:04Z,"@jonasschnelli  what do you mean by not correctly? It's cutting off the text below, or something else?",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357041799,357041799,
jonasschnelli,2018-01-11T19:52:06Z,"See the screenshot above,.. text is cutted off left and right.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357042074,357042074,
Sjors,2018-01-11T20:09:07Z,"@jonasschnelli technically that's a bug in #11403 (when you launch with `-addresstype=bech32`) :-) \n\nI'll try to fix it here.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357046691,357046691,
Sjors,2018-01-12T17:43:22Z,"I moved `enum OutputType` to `key.h` in hopes of pleasing Travis. Let me know if that's a bad place.\n\nI removed the privacy remark from the tooltip and instead point out the P2SH-SegWit fallback.\n\nbech32 address now fits in the QR code, which I made slightly wider and with a slightly larger font for improved readability. I don't know why we want to render text inside a QR code image though",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357306248,357306248,
jonasschnelli,2018-01-12T21:39:03Z,"One little conceptual thing.\nThe checkbox is currently on the level where the amount and denomination is, is that ideal?\nI would suggest moving the checkbox down to the button row (or to an extra row?).\nMaybe before of after the Buttons...",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357361575,357361575,
Sjors,2018-01-13T14:03:59Z,"@jonasschnelli developers often use very large monitors. I don't think it's worth sacrificing a full row of address history. We'd also have to change the label, because ""Use bech32 address"" doesn't fit in the left margin, and that row would look quite empty with only a checkbox, leading to ever more bike-shedding. I prefer to change this later if at all, preferably as part of larger UI cleanup.\n",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357437838,357437838,
sipa,2018-01-15T10:41:21Z,"I haven't looked at the code, but inside QR codes it's advantageous to use uppercase Bech32 (it will result in a smaller QR encoding).",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357645836,357645836,
jonasschnelli,2018-01-16T07:17:01Z,utACK 11a563ac81a95307c097a15a4243b079f7e45973 modulo style nits.,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357873090,357873090,
Sjors,2018-01-16T10:47:05Z,`address_types.py` failed on Travis. I doubt me adding 8 spaces caused that.,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357922664,357922664,
promag,2018-01-16T10:52:33Z,@Sjors restarted the failing job. Not the 1st time I see that test failing. Seems that `sync_mempools` sometimes doesn't sync.. ,https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-357923967,357923967,
Sjors,2018-01-16T20:10:45Z,"* hiding the checkbox if `-addresstype=legacy`\n* ""Generate Bech32 address"" instead of ""Use Bech32 address""\n\nTodo, though can probably be merged without:\n- [ ] unit test coverage\n- [ ] consider new tooltip wording\n\nLeaving for future PRs:\n\n>  address type were shown in requested payments details popup\n\n> `-defaultaddresstype` would be clearer name than `-addresstype`\n\nArgu",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-358089294,358089294,
Sjors,2018-01-16T20:25:06Z,"Pff, not sure how to avoid turning the tooltip into War & Peace. How about:\n\n> This will generate an address that begins with bc1 instead of 1 or 3 and will result in lower transaction fees in the future (BIP-173). bc1 style addresses are not accepted everywhere yet. If the sending party says your address is invalid, turn off this option to use a P2SH wrapped SegWit address.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-358093432,358093432,
flack,2018-01-16T20:59:19Z,"Here's my stab at a slightly shorter version (270 chars insted of 359):\n\n> Generate an address that begins with bc1, which will lower your fees when you spend it (BIP173). These addresses are not accepted everywhere yet. If the sender says your address is invalid, turn off this option to generate a P2SH wrapped SegWit address beginning with 3.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-358103350,358103350,
flack,2018-01-16T21:24:04Z,"> sounds like something magical about the letters ""bc1"" lowers the fees.\n\nWell, it is Magical Internet Money after all :-)\n\non a slightly more serious note: I actually had to scratch my head for a minute  when reading\n\n> This (...) will result in lower transaction fees in the future\n\nbecause it's not immediately obvious that the lower transaction fees only apply when you actually u",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-358110905,358110905,
ryanofsky,2018-01-16T21:49:52Z,"> on a slightly more serious note: I actually had to scratch my head for a minute when reading\n> This (...) will result in lower transaction fees in the future\n\nYes, definitely. I liked the part of your suggestion that says this ""will lower your fees when you spend it."" I was going to mention this but forgot.",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-358118894,358118894,
makomk,2018-01-16T23:44:26Z,">  flack's version is also ok, but I think yours is better because his kind of sounds like something magical about the letters ""bc1"" lowers the fees.\n\nPerhaps it would be better worded as ""an address that begins with bc1 and will lower your fees when you spend from it""?",https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-358145695,358145695,
promag,2017-12-28T14:31:12Z,Expose address type instead `getDefaultAddressType()`?,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r158950824,158950824,src/qt/walletmodel.h
Sjors,2018-01-02T10:36:35Z,Done,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159202774,159202774,src/qt/walletmodel.h
Sjors,2018-01-02T10:49:34Z,"Although it introduces a compiler warning:\n\n```\nqt/receivecoinsdialog.cpp:45:62: warning: comparison of constant 'OUTPUT_TYPE_BECH32' (3)\nwith expression of type 'bool' is always false [-Wtautological-constant-out-of-range-compare]\nui->bech32->setCheckState(model->getDefaultAddressType() == OUTPUT_TYPE_BECH32 ? Qt::Checked : Qt::Unchecked)\n```",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159204712,159204712,src/qt/walletmodel.h
Sjors,2018-01-02T10:52:22Z,"Nvm, I broke it.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159205150,159205150,src/qt/walletmodel.h
promag,2018-01-02T15:54:11Z,"Nit, `use_bech32_checkbox` or similar? Just `bech32` is a weak name IMO.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159253293,159253293,src/qt/forms/receivecoinsdialog.ui
promag,2018-01-02T15:55:46Z,Is this necessary?,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159253667,159253667,src/qt/forms/receivecoinsdialog.ui
promag,2018-01-02T15:57:44Z,Could receive `OutputType type` instead of `bool bech32`? Just pass that to `AddDestinationForKey` below.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159254107,159254107,src/qt/addresstablemodel.cpp
promag,2018-01-02T15:59:25Z,Remove comment? Return type is enough.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159254479,159254479,src/qt/walletmodel.h
promag,2018-01-02T16:00:33Z,"Nit, `assert(g_address_type != OUTPUT_TYPE_NONE)` ping @sipa.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159254736,159254736,src/qt/walletmodel.cpp
Sjors,2018-01-04T16:15:02Z,"The horizontal resize UI glitch I encountered above seems be caused by the input field and dropdown menu having a really large maximum width. In case of the currency dropdown, this causes the whitespace around the dropdown to stretch, which in turn causes it to be separated from the bech32 checkbox. I'm not sure if there's another way to prevent that. I also don't know if this max size plays well ",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159691201,159691201,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-04T20:31:47Z,"This feature doesn't really care if OUTPUT_TYPE_NONE Is returned though; the checkbox would be unchecked. So is this really the place for an assert? If so, I'm happy to add it.\n  ",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159748475,159748475,src/qt/walletmodel.cpp
Sjors,2018-01-05T11:02:39Z,I'll rename to `useBech32`.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159852999,159852999,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-05T11:35:32Z,"I think a boolean makes more sense here, because the check-box can only tell that `OUTPUT_TYPE_BECH32` should be used. If it's unchecked,  it doesn't know if the fallback is `OUTPUT_TYPE_P2SH` or `OUTPUT_TYPE_LEGACY`. ",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159857969,159857969,src/qt/addresstablemodel.cpp
Sjors,2018-01-05T11:44:44Z,"It's not causing any problems with German: :-)\n<img width=""1059"" alt=""schermafbeelding 2018-01-05 om 12 44 07"" src=""https://user-images.githubusercontent.com/10217/34607925-2c2b449a-f216-11e7-9d2c-4325eda468c0.png"">\n",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r159859345,159859345,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-11T08:37:15Z,Update: it now uses `OutputType`.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r160891175,160891175,src/qt/addresstablemodel.cpp
jonasschnelli,2018-01-11T19:36:02Z,Is this intentional? Could this cause the current travis issue?,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161054691,161054691,src/wallet/wallet.cpp
Sjors,2018-01-11T19:50:14Z,@jonasschnelli I moved it to `wallet.h` because `OutputType` is needed in the header. My C++ is a bit rusty; do I need to keep it in the cpp file? My local machine doesn't care.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161058115,161058115,src/wallet/wallet.cpp
jb55,2018-01-11T19:57:44Z,Perhaps a forward declaration would suffice?,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161059876,161059876,src/wallet/wallet.cpp
instagibbs,2018-01-11T20:26:30Z,"I think this is likely the travis issue.\n\nHas a similar error in Elements project that was exactly including `wallet.h` in a new file, we had to def guard it, may not be appropriate here.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161066475,161066475,src/wallet/wallet.cpp
achow101,2018-01-11T21:16:12Z,Can this also say that not checking this will use the default address type (default or from bitcoin.conf/command line options) and what that address type is?,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161077402,161077402,src/qt/forms/receivecoinsdialog.ui
instagibbs,2018-01-11T21:19:10Z,"@achow101  it's going to become a bit of a mouthful. I propose taking out the language about privacy(not really actionable information imo), and more information about functional behavior as you said.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161078180,161078180,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-11T21:29:56Z,"@achow101 my idea was to show change the tooltip depending on what the wallet default is: https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-356950319 That should keep it short enough.\n\n> Can this also say that not checking this will use the default address type (default or from bitcoin.conf/command line options) and what that address type is\n\nThat's not what it does. It's bech32 w",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161080770,161080770,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-11T21:32:44Z,"@instagibbs I can leave out the privacy remark, but I do think it's actionable: people can google ""bech32 privacy"" (and find nothing for the moment...). I think it's useful to point out that being the first to use a new address format makes you stand out.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161081398,161081398,src/qt/forms/receivecoinsdialog.ui
instagibbs,2018-01-11T21:47:21Z,"Probably best in release notes, imo. This information could quickly become false, depending on uptake.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161084683,161084683,src/qt/forms/receivecoinsdialog.ui
achow101,2018-01-11T21:50:48Z,@Sjors I don't think it is clear that it will be using p2sh-segwit when unchecked. It's trivial to just add a note to the tooltip indicating as such.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161085503,161085503,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-12T12:02:09Z,"I'll remove the privacy note and add something about p2sh-segwit.\n\nJust bear in mind the current wallet doesn't tell the user what p2sh-segwit is either. The use of SegWit is essentially hidden from the user. It ""just works"".  It's bech32 that needs explaining, not the default behavior. I think the reason people may want to turn it on or off is because ""they told me [not] to give them a bech32",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161205563,161205563,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-12T16:43:22Z,@jb55 sadly `ISO C++ forbids forward references to 'enum' types`.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161270199,161270199,src/wallet/wallet.cpp
ryanofsky,2018-01-12T18:21:47Z,"> @jb55 sadly ISO C++ forbids forward references to 'enum' types.\n\nThis is only true for enums that don't specify a width. If you define an enum like `enum MyEnum : int {...};`, you can forward declare it with `enum MyEnum : int;`. So you could add `: int` to the `OutputType` definition in wallet.h in order to be able to forward declare it other places. Moving it seems fine, too, though.\n",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161292407,161292407,src/wallet/wallet.cpp
jonasschnelli,2018-01-12T20:55:00Z,"I think that won't solve the problem...\nI'll open a PR for a ""long term"" fix.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161323030,161323030,src/qt/receiverequestdialog.cpp
Sjors,2018-01-12T21:10:07Z,"I forgot to upload the screenshot, but it worked for me on OSX.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161325892,161325892,src/qt/receiverequestdialog.cpp
jonasschnelli,2018-01-12T21:37:31Z,"Didn't worked for me.\nSee #12173 which should fix it regardless of the use font / font-system.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161331271,161331271,src/qt/receiverequestdialog.cpp
laanwj,2018-01-15T08:45:04Z,"I don't think this belongs in `key.h`. `OutputType` is only ever used as part of wallet code.\nThere's already potential confusion with `txnouttype` in `script/standard.h`, which is not your fault, but the confusion would become worse if `OutputType` is no longer wallet specific.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161455136,161455136,src/key.h
Sjors,2018-01-15T15:33:09Z,@laanwj I switched to @ryanofsky's `enum MyEnum : int` approach and moved the enum back to `wallet.h`.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161550135,161550135,src/key.h
laanwj,2018-01-15T15:40:43Z,Thanks,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161552145,161552145,src/key.h
jonasschnelli,2018-01-16T07:14:31Z,nit: 2 spaces rather then 4 spaces indentation? Not sure if that is after the guidelines...,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161674214,161674214,src/qt/receivecoinsdialog.cpp
Sjors,2018-01-16T10:01:56Z,"It's not, it's my editor misbehaving. Fixed (in four places). ",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161708274,161708274,src/qt/receivecoinsdialog.cpp
sipa,2018-01-16T14:50:24Z,I think this is fine. NONE will be caught if it's passed down and actually used somewhere.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161778716,161778716,src/qt/walletmodel.cpp
ryanofsky,2018-01-16T16:23:16Z,Could declare g_address_type as extern if you wanted to remove this.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161809750,161809750,src/qt/editaddressdialog.cpp
ryanofsky,2018-01-16T16:25:56Z,Might want to call setenabled unconditionally (`ui->useBech32->setEnabled(model->getDefaultAddressType() == OUTPUT_TYPE_LEGACY))`) in case we want to support changing default address type in the ui in the future.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161810611,161810611,src/qt/receivecoinsdialog.cpp
ryanofsky,2018-01-16T16:27:42Z,Maybe use model->getDefaultAddressType() here instead of g_address_type to be more consistent.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161811162,161811162,src/qt/receivecoinsdialog.cpp
instagibbs,2018-01-16T18:59:16Z,s/PS2SH /P2SH-/,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161853772,161853772,src/qt/forms/receivecoinsdialog.ui
instagibbs,2018-01-16T19:04:09Z,yes then perhaps next line only use `address_type` for comparison.,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161855170,161855170,src/qt/receivecoinsdialog.cpp
Sjors,2018-01-16T20:09:50Z,Fixed,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161872888,161872888,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-16T20:09:54Z,Done,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161872898,161872898,src/qt/receivecoinsdialog.cpp
Sjors,2018-01-16T20:09:56Z,Done,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161872910,161872910,src/qt/receivecoinsdialog.cpp
Sjors,2018-01-16T20:09:59Z,"Done, but wasn't able to do this in receivecoinsdialog (`undeclared identifier 'OUTPUT_TYPE_BECH32`, etc).",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161872925,161872925,src/qt/editaddressdialog.cpp
jonasschnelli,2018-01-17T06:42:50Z,"Can also be done in a follow up PR, but directly accessing the underlaying non QT system should be avoided. This should be accessed via WalletModel.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161967228,161967228,src/qt/editaddressdialog.cpp
jonasschnelli,2018-01-17T06:43:13Z,Whats the reason for changing the height?,https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161967270,161967270,src/qt/forms/receivecoinsdialog.ui
jonasschnelli,2018-01-17T06:44:03Z,"I guess it's QT Creators magic... I guess others do usually edit those files ""by hand"" to avoid such ""larger"" unnecessary changes.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161967355,161967355,src/qt/forms/receivecoinsdialog.ui
Sjors,2018-01-17T09:12:01Z,"It was magic. Didn't seem worth tweaking with so many other changes in that file, but will keep in mind.",https://github.com/bitcoin/bitcoin/pull/11991#discussion_r161990832,161990832,src/qt/forms/receivecoinsdialog.ui
