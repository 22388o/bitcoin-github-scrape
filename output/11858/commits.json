[
  {
    "sha": "faefd2923a00e82be794f090b4bd861c5c58c95a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVmZDI5MjNhMDBlODJiZTc5NGYwOTBiNGJkODYxYzVjNThjOTVh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-12-09T23:39:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-01-24T20:52:07Z"
      },
      "message": "qa: Prepare functional tests for Windows\n\n* Pass `sys.executable` when calling a python script via the subprocess\n  module\n* Don't remove the log file while it is still open and written to\n* Properly use os.pathsep and os.path.sep when modifying the PATH\n  environment variable\n* util-tests: Use os.path.join for Windows compatibility",
      "tree": {
        "sha": "4d151dcc68a8bcb8e3617b1c4084d0bdfe9d1dd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d151dcc68a8bcb8e3617b1c4084d0bdfe9d1dd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faefd2923a00e82be794f090b4bd861c5c58c95a",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABAgAGBQJaaPH3AAoJEM4rdWl+aaVIbqgMAJI9r07JygO3Z69B0UUKvXvb\n4ITa+2aPw/J1vgglJu9ip0R/Sdrmd3gouN253PfYjdikO3GZO04nxWlGfVLg4GiA\nK+SXH9vT2v686bn11Zu+JKmVdq5xnmn+GZvPst9uNlhmBrOsHUFk9qHUmoaY3CcB\nWA0bg/v7HEyFHfMqehsqc0AxBf/Oi58QxaoBPuDeRkXQVtXBRw7PduEGvyYpJEvm\nW9UVZOQ0suLuL7ekpc1ykxZ6FyVGDs3j/ubBOftENVyE+Px7f7azC96o4Y5M92Hi\nfKq6Fumyb+YPZggoniWhqs0aAHWW+GMhTEWRYWL6N8sq8F29UAvD1YzM3bIpbjlL\ne5NSih8+X+RE9LT6ugS5hL3voEhB48F2nEaVkl0XLp9b/l4iQMJvc2iJ5LupTtI7\n83T7Wf8WOPJTMCXrB1xRVizDiezdZ2wSuQLoqQZZiXLk9obUucP/veb2f8suguqh\nAf8UD24xz+r4FYFzR7AcSGrt+ZOKS0/OIJ0/UTnR+A==\n=oLXC\n-----END PGP SIGNATURE-----",
        "payload": "tree 4d151dcc68a8bcb8e3617b1c4084d0bdfe9d1dd7\nparent 7abb0f0929bd2cd413087f602f9bb5cebab898f8\nauthor MarcoFalke <falke.marco@gmail.com> 1512862746 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1516827127 -0500\n\nqa: Prepare functional tests for Windows\n\n* Pass `sys.executable` when calling a python script via the subprocess\n  module\n* Don't remove the log file while it is still open and written to\n* Properly use os.pathsep and os.path.sep when modifying the PATH\n  environment variable\n* util-tests: Use os.path.join for Windows compatibility\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faefd2923a00e82be794f090b4bd861c5c58c95a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faefd2923a00e82be794f090b4bd861c5c58c95a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faefd2923a00e82be794f090b4bd861c5c58c95a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7abb0f0929bd2cd413087f602f9bb5cebab898f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7abb0f0929bd2cd413087f602f9bb5cebab898f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7abb0f0929bd2cd413087f602f9bb5cebab898f8"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 13,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a5e66bd9593d9d8366286fd0c661422558903c26",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faefd2923a00e82be794f090b4bd861c5c58c95a/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faefd2923a00e82be794f090b4bd861c5c58c95a/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=faefd2923a00e82be794f090b4bd861c5c58c95a",
        "patch": "@@ -99,7 +99,9 @@ def main(self):\n \n         PortSeed.n = self.options.port_seed\n \n-        os.environ['PATH'] = self.options.srcdir + \":\" + self.options.srcdir + \"/qt:\" + os.environ['PATH']\n+        os.environ['PATH'] = self.options.srcdir + os.pathsep + \\\n+                             self.options.srcdir + os.path.sep + \"qt\" + os.pathsep + \\\n+                             os.environ['PATH']\n \n         check_json_precision()\n \n@@ -148,10 +150,11 @@ def main(self):\n             self.log.info(\"Note: bitcoinds were not stopped and may still be running\")\n \n         if not self.options.nocleanup and not self.options.noshutdown and success != TestStatus.FAILED:\n-            self.log.info(\"Cleaning up\")\n-            shutil.rmtree(self.options.tmpdir)\n+            self.log.info(\"Cleaning up {} on exit\".format(self.options.tmpdir))\n+            cleanup_tree_on_exit = True\n         else:\n             self.log.warning(\"Not cleaning up dir %s\" % self.options.tmpdir)\n+            cleanup_tree_on_exit = False\n \n         if success == TestStatus.PASSED:\n             self.log.info(\"Tests successful\")\n@@ -164,6 +167,8 @@ def main(self):\n             self.log.error(\"Hint: Call {} '{}' to consolidate all logs\".format(os.path.normpath(os.path.dirname(os.path.realpath(__file__)) + \"/../combine_logs.py\"), self.options.tmpdir))\n             exit_code = TEST_EXIT_FAILED\n         logging.shutdown()\n+        if cleanup_tree_on_exit:\n+            shutil.rmtree(self.options.tmpdir)\n         sys.exit(exit_code)\n \n     # Methods to override in subclass test scripts."
      },
      {
        "sha": "ba4d06000903243fda7d5c350d9bb71488676018",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faefd2923a00e82be794f090b4bd861c5c58c95a/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faefd2923a00e82be794f090b4bd861c5c58c95a/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=faefd2923a00e82be794f090b4bd861c5c58c95a",
        "patch": "@@ -268,7 +268,7 @@ def main():\n     if args.help:\n         # Print help for test_runner.py, then print help of the first script (with args removed) and exit.\n         parser.print_help()\n-        subprocess.check_call([(config[\"environment\"][\"SRCDIR\"] + '/test/functional/' + test_list[0].split()[0])] + ['-h'])\n+        subprocess.check_call([sys.executable, os.path.join(config[\"environment\"][\"SRCDIR\"], 'test', 'functional', test_list[0].split()[0]), '-h'])\n         sys.exit(0)\n \n     check_script_list(config[\"environment\"][\"SRCDIR\"])\n@@ -312,7 +312,7 @@ def run_tests(test_list, src_dir, build_dir, exeext, tmpdir, jobs=1, enable_cove\n     if len(test_list) > 1 and jobs > 1:\n         # Populate cache\n         try:\n-            subprocess.check_output([tests_dir + 'create_cache.py'] + flags + [\"--tmpdir=%s/cache\" % tmpdir])\n+            subprocess.check_output([sys.executable, tests_dir + 'create_cache.py'] + flags + [\"--tmpdir=%s/cache\" % tmpdir])\n         except subprocess.CalledProcessError as e:\n             sys.stdout.buffer.write(e.output)\n             raise\n@@ -342,7 +342,7 @@ def run_tests(test_list, src_dir, build_dir, exeext, tmpdir, jobs=1, enable_cove\n                 print('\\n============')\n                 print('{}Combined log for {}:{}'.format(BOLD[1], testdir, BOLD[0]))\n                 print('============\\n')\n-                combined_logs, _ = subprocess.Popen([os.path.join(tests_dir, 'combine_logs.py'), '-c', testdir], universal_newlines=True, stdout=subprocess.PIPE).communicate()\n+                combined_logs, _ = subprocess.Popen([sys.executble, os.path.join(tests_dir, 'combine_logs.py'), '-c', testdir], universal_newlines=True, stdout=subprocess.PIPE).communicate()\n                 print(\"\\n\".join(deque(combined_logs.splitlines(), combined_logs_len)))\n \n     print_results(test_results, max_len_name, (int(time.time() - time0)))\n@@ -412,7 +412,7 @@ def get_next(self):\n             tmpdir_arg = [\"--tmpdir={}\".format(testdir)]\n             self.jobs.append((t,\n                               time.time(),\n-                              subprocess.Popen([self.tests_dir + test_argv[0]] + test_argv[1:] + self.flags + portseed_arg + tmpdir_arg,\n+                              subprocess.Popen([sys.executable, self.tests_dir + test_argv[0]] + test_argv[1:] + self.flags + portseed_arg + tmpdir_arg,\n                                                universal_newlines=True,\n                                                stdout=log_stdout,\n                                                stderr=log_stderr),"
      },
      {
        "sha": "30bd13d0dc47d07a944d57f686bea20c1d20de2b",
        "filename": "test/util/bitcoin-util-test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faefd2923a00e82be794f090b4bd861c5c58c95a/test/util/bitcoin-util-test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faefd2923a00e82be794f090b4bd861c5c58c95a/test/util/bitcoin-util-test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/bitcoin-util-test.py?ref=faefd2923a00e82be794f090b4bd861c5c58c95a",
        "patch": "@@ -44,7 +44,7 @@ def main():\n     # Add the format/level to the logger\n     logging.basicConfig(format=formatter, level=level)\n \n-    bctester(os.path.join(env_conf[\"SRCDIR\"], \"test/util/data\"), \"bitcoin-util-test.json\", env_conf)\n+    bctester(os.path.join(env_conf[\"SRCDIR\"], \"test\", \"util\", \"data\"), \"bitcoin-util-test.json\", env_conf)\n \n def bctester(testDir, input_basename, buildenv):\n     \"\"\" Loads and parses the input file, runs all tests and reports results\"\"\""
      }
    ]
  }
]