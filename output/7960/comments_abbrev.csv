theuni,2016-04-27T19:55:58Z,May as well skip in the fBlocksOnly case too?\n,https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-215209064,215209064,
laanwj,2016-04-28T12:05:39Z,"> May as well skip in the fBlocksOnly case too?\n\nAgree, seems to be no reason to add it to AddInventoryKnown in that case.\n",https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-215402999,215402999,
laanwj,2016-04-28T12:05:47Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-215403023,215403023,
sdaftuar,2016-04-28T17:13:26Z,"Yeah, I think that makes sense.  I thought at first that maybe we'd want `filterInventoryKnown` to be as correct as possible even in the `fBlocksOnly` case, since we might still relay transactions to that peer (eg if we have a whitelisted peer and `-whitelistrelay` is on), but given that it's a protocol violation this seems like a silly thing to worry about.\n\nI was thinking we could probably use",https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-215498509,215498509,
sipa,2016-05-05T17:02:03Z,utACK 383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e\n,https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-217211149,217211149,
gmaxwell,2016-05-17T05:34:34Z,"utACK.\n\nI think blocks only will later be generalized to more degrees than just literally blocks only yes or no, and we probably shouldn't go around adding too much specialization in the codebase for a global blocks only mode unless it's a pretty big win. (and maybe saving the memory of ever allocating some transaction related filters in the first place might be... but insertions? not so much)\n",https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-219623613,219623613,
sdaftuar,2016-05-18T16:59:35Z,Ok I'll leave this alone then.\n,https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-220091580,220091580,
sipa,2016-05-25T14:27:21Z,"Given that the scope of AddInventoryKnown changes, perhaps it should be renamed to AddInventoryTxKnown, and only take a uint256 rather than a CInv? That may reduce confusion in upcoming refactors.\n",https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-221593354,221593354,
sipa,2016-05-31T17:32:29Z,"Lightly tested ACK. Setup: two mainnet full nodes with this patch (A publicly reachable, B -connect'ed to A) and a lightweight node C (connected to the public network). Tested block synchronization/relay of B from A, relay of transactions to from A to B, relay of newly created transactions by B and C through A. Nothing unusual.\n",https://github.com/bitcoin/bitcoin/pull/7960#issuecomment-222761285,222761285,
