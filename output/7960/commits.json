[
  {
    "sha": "383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODNmYzEwZWJiOGU5ZmZlODhjMWI5ZTJlYTcwNmM3NmU1YTYzNDNl",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2016-04-27T13:57:02Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2016-04-27T13:57:02Z"
      },
      "message": "Only use AddInventoryKnown for transactions\n\nfilterInventoryKnown is only used when relaying transactions,\nso stop adding block hashes to the filter.",
      "tree": {
        "sha": "8b00c04741a399d5eafa6b85a98c3323c71a66b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b00c04741a399d5eafa6b85a98c3323c71a66b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e26b62093ae21e89ed7d36a24a6b863f38ec631d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e26b62093ae21e89ed7d36a24a6b863f38ec631d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e26b62093ae21e89ed7d36a24a6b863f38ec631d"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 4,
      "deletions": 9
    },
    "files": [
      {
        "sha": "90db9de14eed7632b3368d50e32d2be278cbb9bb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=383fc10ebb8e9ffe88c1b9e2ea706c76e5a6343e",
        "patch": "@@ -4765,7 +4765,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             const CInv &inv = vInv[nInv];\n \n             boost::this_thread::interruption_point();\n-            pfrom->AddInventoryKnown(inv);\n \n             bool fAlreadyHave = AlreadyHave(inv);\n             LogPrint(\"net\", \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom->id);\n@@ -4795,6 +4794,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             }\n             else\n             {\n+                pfrom->AddInventoryKnown(inv);\n                 if (fBlocksOnly)\n                     LogPrint(\"net\", \"transaction (%s) inv sent in violation of protocol peer=%d\\n\", inv.hash.ToString(), pfrom->id);\n                 else if (!fAlreadyHave && !fImporting && !fReindex && !IsInitialBlockDownload())\n@@ -5173,10 +5173,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         CBlock block;\n         vRecv >> block;\n \n-        CInv inv(MSG_BLOCK, block.GetHash());\n-        LogPrint(\"net\", \"received block %s peer=%d\\n\", inv.hash.ToString(), pfrom->id);\n-\n-        pfrom->AddInventoryKnown(inv);\n+        LogPrint(\"net\", \"received block %s peer=%d\\n\", block.GetHash().ToString(), pfrom->id);\n \n         CValidationState state;\n         // Process all blocks from whitelisted peers, even if not requested,\n@@ -5189,7 +5186,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         if (state.IsInvalid(nDoS)) {\n             assert (state.GetRejectCode() < REJECT_INTERNAL); // Blocks are never rejected with internal reject codes\n             pfrom->PushMessage(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n-                               state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), inv.hash);\n+                               state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), block.GetHash());\n             if (nDoS > 0) {\n                 LOCK(cs_main);\n                 Misbehaving(pfrom->GetId(), nDoS);\n@@ -5769,9 +5766,7 @@ bool SendMessages(CNode* pto)\n                             hashToAnnounce.ToString(), chainActive.Tip()->GetBlockHash().ToString());\n                     }\n \n-                    // If the peer announced this block to us, don't inv it back.\n-                    // (Since block announcements may not be via inv's, we can't solely rely on\n-                    // setInventoryKnown to track this.)\n+                    // If the peer's chain has this block, don't inv it back.\n                     if (!PeerHasHeader(&state, pindex)) {\n                         pto->PushInventory(CInv(MSG_BLOCK, hashToAnnounce));\n                         LogPrint(\"net\", \"%s: sending inv peer=%d hash=%s\\n\", __func__,"
      }
    ]
  }
]