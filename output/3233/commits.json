[
  {
    "sha": "eb12a14da777341e19035947f41c3e08470acd44",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjEyYTE0ZGE3NzczNDFlMTkwMzU5NDdmNDFjM2UwODQ3MGFjZDQ0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2013-09-09T02:02:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-11T08:57:28Z"
      },
      "message": "configure: Simplify common AM_CPPFLAGS and AM_LDFLAGS to a Makefile.common",
      "tree": {
        "sha": "6ecbe6298f518eec14000177b257ce30e5a49209",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ecbe6298f518eec14000177b257ce30e5a49209"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb12a14da777341e19035947f41c3e08470acd44",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb12a14da777341e19035947f41c3e08470acd44",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb12a14da777341e19035947f41c3e08470acd44",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb12a14da777341e19035947f41c3e08470acd44/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb4a31a26c5fbbedf6f67a24f4c6ad3dba70f7f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb4a31a26c5fbbedf6f67a24f4c6ad3dba70f7f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb4a31a26c5fbbedf6f67a24f4c6ad3dba70f7f5"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 21,
      "deletions": 24
    },
    "files": [
      {
        "sha": "24a95eed8483d29d1373d49114e7d1a1a7b0e7cc",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb12a14da777341e19035947f41c3e08470acd44/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb12a14da777341e19035947f41c3e08470acd44/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=eb12a14da777341e19035947f41c3e08470acd44",
        "patch": "@@ -1,8 +1,7 @@\n include Makefile.include\n-AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n-  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src/leveldb/helpers \\\n-  -I$(builddir) $(BOOST_INCLUDES) $(BDB_CPPFLAGS)\n-AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+\n+AM_CPPFLAGS += -I$(top_srcdir)/src/leveldb/helpers/memenv \\\n+  -I$(builddir)\n \n noinst_LIBRARIES = libbitcoin.a\n "
      },
      {
        "sha": "8c2274a287a1b13bb920eef28a9df20947771451",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb12a14da777341e19035947f41c3e08470acd44/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb12a14da777341e19035947f41c3e08470acd44/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=eb12a14da777341e19035947f41c3e08470acd44",
        "patch": "@@ -1,5 +1,9 @@\n-# Helper for rules and subdir Makefiles to find parent targets.\n-# Flags and other non-target variables should not be set here.\n+AM_CPPFLAGS =  $(INCLUDES) \\\n+  -I$(top_builddir)/src/obj \\\n+  -I$(top_srcdir)/src/leveldb/include \\\n+  $(BDB_CPPFLAGS) \\\n+  $(BOOST_INCLUDES)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n \n LIBBITCOIN=$(top_builddir)/src/libbitcoin.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a"
      },
      {
        "sha": "aff1ec0283652234c133f81e792681f7b0be8794",
        "filename": "src/leveldbwrapper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb12a14da777341e19035947f41c3e08470acd44/src/leveldbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb12a14da777341e19035947f41c3e08470acd44/src/leveldbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.cpp?ref=eb12a14da777341e19035947f41c3e08470acd44",
        "patch": "@@ -10,7 +10,7 @@\n #include <leveldb/cache.h>\n #include <leveldb/env.h>\n #include <leveldb/filter_policy.h>\n-#include <memenv/memenv.h>\n+#include <memenv.h>\n \n void HandleError(const leveldb::Status &status) throw(leveldb_error) {\n     if (status.ok())"
      },
      {
        "sha": "3ede99dfa352079fe27cc096ddc42686949c734f",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb12a14da777341e19035947f41c3e08470acd44/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb12a14da777341e19035947f41c3e08470acd44/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=eb12a14da777341e19035947f41c3e08470acd44",
        "patch": "@@ -1,11 +1,10 @@\n include $(top_srcdir)/src/Makefile.include\n \n-AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n-  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src \\\n-  -I$(top_srcdir)/src/leveldb/helpers -I$(top_builddir)/src/qt \\\n-  -I$(top_builddir)/src/qt/forms $(BOOST_INCLUDES) $(PROTOBUF_CFLAGS) \\\n-  $(QR_CFLAGS) $(BDB_CPPFLAGS)\n-AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+AM_CPPFLAGS += -I$(top_srcdir)/src \\\n+  -I$(top_builddir)/src/qt \\\n+  -I$(top_builddir)/src/qt/forms \\\n+  $(PROTOBUF_CFLAGS) \\\n+  $(QR_CFLAGS)\n bin_PROGRAMS = bitcoin-qt\n noinst_LIBRARIES = libbitcoinqt.a\n SUBDIRS = $(BUILD_TEST_QT)"
      },
      {
        "sha": "7891c3e97564fe6b48b836f6dc510b34d507267f",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb12a14da777341e19035947f41c3e08470acd44/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb12a14da777341e19035947f41c3e08470acd44/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=eb12a14da777341e19035947f41c3e08470acd44",
        "patch": "@@ -1,11 +1,10 @@\n include $(top_srcdir)/src/Makefile.include\n \n-AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n-  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src \\\n-  -I$(top_srcdir)/src/leveldb/helpers -I$(top_srcdir)/src/qt \\\n-  -I$(top_builddir)/src/qt $(BOOST_INCLUDES) $(PROTOBUF_CFLAGS) \\\n-    $(QR_CFLAGS) $(BDB_CPPFLAGS)\n-AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+AM_CPPFLAGS += -I$(top_srcdir)/src \\\n+  -I$(top_srcdir)/src/qt \\\n+  -I$(top_builddir)/src/qt \\\n+  $(PROTOBUF_CFLAGS) \\\n+    $(QR_CFLAGS)\n bin_PROGRAMS = test_bitcoin-qt\n TESTS = test_bitcoin-qt\n "
      },
      {
        "sha": "180fd7effa41a238e044c1c85915af88bbcfb249",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb12a14da777341e19035947f41c3e08470acd44/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb12a14da777341e19035947f41c3e08470acd44/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=eb12a14da777341e19035947f41c3e08470acd44",
        "patch": "@@ -1,10 +1,6 @@\n include $(top_srcdir)/src/Makefile.include\n \n-AM_CPPFLAGS =  $(INCLUDES) -I$(top_builddir)/src/obj \\\n-  -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src/leveldb/helpers \\\n-  -I$(top_srcdir)/src $(BOOST_INCLUDES) $(BDB_CPPFLAGS)\n-\n-AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+AM_CPPFLAGS += -I$(top_srcdir)/src\n \n bin_PROGRAMS = test_bitcoin\n "
      }
    ]
  },
  {
    "sha": "fcfbf547d32640ee786f9161545061cdcd244a72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmY2ZiZjU0N2QzMjY0MGVlNzg2ZjkxNjE1NDUwNjFjZGNkMjQ0YTcy",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2013-09-07T21:01:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-11T12:09:59Z"
      },
      "message": "configure: Automatically disable bitcoin-qt by default, if dependencies are not met",
      "tree": {
        "sha": "da9fc6b1d06ce4bba9ec649e043f4eb39ac9b784",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da9fc6b1d06ce4bba9ec649e043f4eb39ac9b784"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcfbf547d32640ee786f9161545061cdcd244a72",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcfbf547d32640ee786f9161545061cdcd244a72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fcfbf547d32640ee786f9161545061cdcd244a72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcfbf547d32640ee786f9161545061cdcd244a72/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eb12a14da777341e19035947f41c3e08470acd44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb12a14da777341e19035947f41c3e08470acd44",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb12a14da777341e19035947f41c3e08470acd44"
      }
    ],
    "stats": {
      "total": 120,
      "additions": 68,
      "deletions": 52
    },
    "files": [
      {
        "sha": "4e105629e82e3caadd7d99405a0d8473684996e2",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 68,
        "deletions": 52,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcfbf547d32640ee786f9161545061cdcd244a72/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcfbf547d32640ee786f9161545061cdcd244a72/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fcfbf547d32640ee786f9161545061cdcd244a72",
        "patch": "@@ -61,7 +61,32 @@ AC_ARG_WITH([qt],\n   [AS_HELP_STRING([--with-qt],\n   [enable qt (default is yes)])],\n   [use_qt=$withval],\n-  [use_qt=yes])\n+  [use_qt=auto])\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$use_qt\" = \"xauto\"; then\n+    AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+    use_qt=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$use_qt\" != \"xno\"; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    AC_PATH_PROGS($1,$2,$3,$4)\n+    if test \"x$$1\" = \"x\"; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n \n AC_ARG_ENABLE(tests,\n     AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n@@ -136,12 +161,12 @@ AC_PATH_PROG(LCOV, lcov)\n AC_PATH_PROG(JAVA, java)\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n-AC_PATH_PROGS([MOC], [moc-qt4 moc4 moc],, $qt_bin_path:$PATH)\n-AC_PATH_PROGS([UIC], [uic-qt4 uic4 uic],, $qt_bin_path:$PATH)\n-AC_PATH_PROGS([RCC], [rcc-qt4 rcc4 rcc],, $qt_bin_path:$PATH)\n-AC_PATH_PROGS([LRELEASE], [lrelease-qt4 lrelease4 lrelease],, $qt_bin_path:$PATH)\n-AC_PATH_PROGS([LUPDATE], [lupdate-qt4 lupdate4 lupdate],, $qt_bin_path:$PATH)\n-AC_PATH_PROG([PROTOC], [protoc],, $protoc_bin_path:$PATH)\n+BITCOIN_QT_PATH_PROGS([MOC], [moc-qt4 moc4 moc],, $qt_bin_path:$PATH)\n+BITCOIN_QT_PATH_PROGS([UIC], [uic-qt4 uic4 uic],, $qt_bin_path:$PATH)\n+BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt4 rcc4 rcc],, $qt_bin_path:$PATH)\n+BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt4 lrelease4 lrelease],, $qt_bin_path:$PATH)\n+BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt4 lupdate4 lupdate],, $qt_bin_path:$PATH)\n+BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],, $protoc_bin_path:$PATH)\n AC_PATH_PROG(CCACHE,ccache)\n AC_PATH_PROG(XGETTEXT,xgettext)\n AC_PATH_PROG(HEXDUMP,hexdump)\n@@ -222,11 +247,11 @@ case $host in\n        fi\n      fi\n \n-     if test x$use_qt = xyes; then\n+     BITCOIN_QT_CHECK([\n        MOC_DEFS=\"-DQ_OS_MAC\"\n        base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n        AX_CHECK_LINK_FLAG([[$base_frameworks]],[LIBS=\"$LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     fi\n+     ])\n \n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n      TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n@@ -427,8 +452,11 @@ if test x$use_pkgconfig = xyes; then\n       PKG_CHECK_MODULES([SSL], [libssl], [INCLUDES=\"$INCLUDES $SSL_CFLAGS\"; LIBS=\"$LIBS $SSL_LIBS\"], [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto], [INCLUDES=\"$INCLUDES $CRYPTO_CFLAGS\"; LIBS=\"$LIBS $CRYPTO_LIBS\"], [AC_MSG_ERROR(libcrypto  not found.)])\n \n-      if test x$use_qt = xyes; then\n-        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+      BITCOIN_QT_CHECK([\n+        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[\n+          have_qt=no\n+          BITCOIN_QT_FAIL([Qt dependencies not found])\n+        ])\n         if test x$use_tests = xyes; then\n           PKG_CHECK_MODULES([QT_TEST], [QtTest], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n         fi\n@@ -439,7 +467,7 @@ if test x$use_pkgconfig = xyes; then\n           PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])\n         fi\n         PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [AC_MSG_ERROR(libprotobuf not found.)])\n-      fi\n+      ])\n     ]\n   )\n else\n@@ -449,7 +477,7 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR(libssl missing))\n \n-  if test x$use_qt = xyes; then\n+  BITCOIN_QT_CHECK([\n     TEMP_LIBS=\"$LIBS\"\n     LIBS=\n     if test x$qt_lib_path != x; then\n@@ -462,22 +490,25 @@ else\n     fi\n \n     if test x$TARGET_OS == xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, AC_MSG_ERROR(libimm32 not found. Install it or use --without-qt.))\n+      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n     fi\n+  ])\n \n     #TODO: These are only needed when they're linked directly to parent libs. It really has nothing to do with windows.\n     #Instead, check for missing functions in parent libs and assume static if they're absent.\n     if test x$TARGET_OS == xwindows; then\n-      AC_CHECK_LIB([qcncodecs],      [main],, AC_MSG_ERROR(libqcncodecs not found. Install it or use --without-qt.))\n-      AC_CHECK_LIB([qjpcodecs],      [main],, AC_MSG_ERROR(libqjpcodecs not found. Install it or use --without-qt.))\n-      AC_CHECK_LIB([qkrcodecs],      [main],, AC_MSG_ERROR(libqkrcodecs not found. Install it or use --without-qt.))\n-      AC_CHECK_LIB([qtwcodecs],      [main],, AC_MSG_ERROR(libqtwcodecs not found. Install it or use --without-qt.))\n+      BITCOIN_QT_CHECK(AC_CHECK_LIB([qcncodecs],[main],,BITCOIN_QT_FAIL(libqcncodecs not found)))\n+      BITCOIN_QT_CHECK(AC_CHECK_LIB([qjpcodecs],[main],,BITCOIN_QT_FAIL(libqjpcodecs not found)))\n+      BITCOIN_QT_CHECK(AC_CHECK_LIB([qkrcodecs],[main],,BITCOIN_QT_FAIL(libqkrcodecs not found)))\n+      BITCOIN_QT_CHECK(AC_CHECK_LIB([qtwcodecs],[main],,BITCOIN_QT_FAIL(libqtwcodecs not found)))\n     fi\n \n-    AC_CHECK_LIB([QtCore],      [main],, AC_MSG_ERROR(libQtCore not found. Install it or use --without-qt.))\n-    AC_CHECK_LIB([QtGui],      [main],, AC_MSG_ERROR(libQtGui not found. Install it or use --without-qt.))\n-    AC_CHECK_LIB([QtNetwork],      [main],, AC_MSG_ERROR(libQtNetwork not found. Install it or use --without-qt.))\n-    AC_CHECK_LIB([protobuf],      [main],, AC_MSG_ERROR(libprotobuf not found. Install it or use --without-qt.))\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtCore]   ,[main],,BITCOIN_QT_FAIL(libQtCore not found)))\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtGui]    ,[main],,BITCOIN_QT_FAIL(libQtGui not found)))\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtNetwork],[main],,BITCOIN_QT_FAIL(libQtNetwork not found)))\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],,BITCOIN_QT_FAIL(libprotobuf not found)))\n+\n+  BITCOIN_QT_CHECK([\n     QT_LIBS=\"$LIBS\"\n     LIBS=\"$TEMP_LIBS\"\n \n@@ -486,10 +517,13 @@ else\n       QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n       CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n     fi\n-    AC_CHECK_HEADER([QtPlugin],, AC_MSG_ERROR(QtCore headers missing. Install them or use --without-qt.),)\n-    AC_CHECK_HEADER([QApplication],, AC_MSG_ERROR(QtGUI headers missing. Install them or use --without-qt.),)\n-    AC_CHECK_HEADER([QLocalSocket],, AC_MSG_ERROR(QtNetwork headers missing. Install them or use --without-qt.),)\n+  ])\n+\n+    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing),))\n+    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing),))\n+    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing),))\n \n+  BITCOIN_QT_CHECK([\n     if test x$use_tests = xyes; then\n       TEMP_LIBS=\"$LIBS\"\n       LIBS=\n@@ -517,7 +551,7 @@ else\n       AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])\n       AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)\n     fi\n-  fi\n+  ])\n fi\n \n if test x$use_ipv6 = xyes; then\n@@ -604,47 +638,29 @@ fi\n \n dnl enable qt support\n AC_MSG_CHECKING([if qt should be enabled])\n-if test x$use_qt = xyes; then\n-  if test x$have_qt = xno; then\n-     AC_MSG_ERROR(\"qt support requested but qt could not be located. use --without-qt\")\n-  fi\n-  if test x$MOC = x; then\n-    AC_MSG_ERROR(\"qt support requested but moc was not found. use --without-qt\")\n-  fi\n-  if test x$PROTOC = x; then\n-    AC_MSG_ERROR(\"qt support requested but protoc was not found. use --without-qt\")\n-  fi\n-  if test x$UIC = x; then\n-    AC_MSG_ERROR(\"qt support requested but uic was not found. use --without-qt\")\n-  fi\n-  if test x$RCC = x; then\n-    AC_MSG_ERROR(\"qt support requested but rcc was not found. use --without-qt\")\n-  fi\n-  if test x$LRELEASE = x; then\n-    AC_MSG_ERROR(\"qt support requested but lrelease was not found. use --without-qt\")\n-  fi\n+BITCOIN_QT_CHECK([\n+  use_qt=yes\n+  BUILD_QT=qt\n   if test x$use_tests = xyes; then\n     if test x$have_qt_test = xno; then\n       AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --without-qt.\")\n     fi\n   fi\n   if test x$have_qt_dbus = xno;  then\n-    use_dbus=no\n     if test x$use_dbus = xyes; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Use --without-qtdbus.\")\n+      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n     fi\n+    use_dbus=no\n   fi\n   if test x$XGETTEXT == x; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n   fi\n   if test x$LUPDATE == x; then\n     AC_MSG_WARN(\"lupdate is required to update qt translations\")\n   fi\n-\n-  BUILD_QT=qt\n-else\n+],[\n   use_qt=no\n-fi\n+])\n \n AC_MSG_RESULT($use_qt)\n \n@@ -678,7 +694,7 @@ if test x$use_qt = xyes; then\n     fi\n   fi\n \n-  if test x$use_tests = xyes; then\n+  if test x$use_tests$have_qt_test = xyesyes; then\n     BUILD_TEST_QT=\"test\"\n   fi\n fi"
      }
    ]
  }
]