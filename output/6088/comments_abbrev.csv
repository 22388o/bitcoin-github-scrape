sipa,2015-05-01T12:45:32Z,"Could we have a DummySignatureCreator, instead of passing a dummy boolean to TransactionSignatureCreator?\n",https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98126060,98126060,
sipa,2015-05-01T12:50:28Z,I had to read the source code to guess what 'fAllowOtherInputs' means. Can you add a comment?\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98126565,98126565,
jonasschnelli,2015-05-01T12:52:36Z,"@sipa: I tried this (""DummySignatorCreator""). But somehow i stopped it because it was getting a inheritance mess. I can't actually remember why exactly.\n",https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98127418,98127418,
sipa,2015-05-01T12:55:38Z,@jonasschnelli Let me hack something up.\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98127664,98127664,
sipa,2015-05-01T13:24:09Z,See https://github.com/sipa/bitcoin/commits/dummysig\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98132453,98132453,
jonasschnelli,2015-05-01T14:11:22Z,@sipa: are you sure this would work also for P2SH Multisig inputs?\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98141535,98141535,
sipa,2015-05-01T14:19:43Z,"@jonasschnelli pretty sure, it should.\n\nBaseSignatureCreator is about creating individual (DER+nHashType) signatures, and is called by ProduceSignature wherever necessary. For multisig/P2SH, it will be called multiple times as necessary.\n",https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98143020,98143020,
jonasschnelli,2015-05-01T17:05:51Z,@sipa: Right. I would do so. To make use of https://github.com/sipa/bitcoin/commit/134090be5a0aaad27981ed4d4fe52a843fce337b it would need some adaptation and some changes within `SignSignature()`. I just tried but had some compiling/casting issues with the `DummySignatureChecker` class.\n\nBut the current solution (as it is in this PR) without a DummySignatorCreator class works well and basically ,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98178692,98178692,
sipa,2015-05-01T17:18:35Z,I'm fine with fixing it up afterwards.\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98180999,98180999,
jgarzik,2015-05-02T16:02:35Z,Concept ACK - the dummy sig stuff is ugly and poops all over several function/method sigs\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-98373798,98373798,
laanwj,2015-05-06T08:07:26Z,"The dummy sig business may be ugly, but it was introduced to avoid even uglier solutions to compute signature sizes: either having parallel byte accounting functioning (lots of duplicate hard-to-crosscheck code), or doing real signing then throwing away the result (requires wallet to be unlocked and is just wrong).\n",https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-99367352,99367352,
jonasschnelli,2015-05-18T13:45:22Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-103065549,103065549,
luke-jr,2015-06-02T03:15:05Z,"Dummy sign may be ugly, but it also would enable prompting the user with fee etc prior to passphrase being entered...\n",https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-107785127,107785127,
TheBlueMatt,2015-06-11T06:58:12Z,"So it turns out the watch-only signing never worked anyway (it used the constant ""0"" for the public key when calculating size of pay-to-pubkey-hash txn), so I walked that back and watchonly-supporting fundrawtransaction will be a separate pull.\n",https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-111017144,111017144,
btcdrak,2015-06-23T22:57:03Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-114666937,114666937,
laanwj,2015-06-24T05:14:52Z,Tested ACK (which I forgot to post)\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-114729518,114729518,
jonasschnelli,2015-06-24T06:39:20Z,Post merge ACK\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-114748384,114748384,
sipa,2015-06-24T21:03:24Z,Posthumous untested ACK.\n,https://github.com/bitcoin/bitcoin/pull/6088#issuecomment-115011771,115011771,
luke-jr,2015-06-02T03:16:39Z,This seems nonsensical. What is the use case?\n,https://github.com/bitcoin/bitcoin/pull/6088#discussion_r31490598,31490598,src/wallet/rpcdump.cpp
sipa,2015-06-24T20:34:02Z,"Any reason for trying to guess the changes made by CreateTransaction, and applying those on the original, rather than just using the constructed result?\n",https://github.com/bitcoin/bitcoin/pull/6088#discussion_r33192562,33192562,src/wallet/wallet.cpp
