Sjors,2018-08-09T19:24:18Z,"* cc @TheBlueMatt who wrote the function in #11531 (and #12138)\n* cc @jamesob who wrote the current comment in #13012",https://github.com/bitcoin/bitcoin/pull/13930#issuecomment-411868826,411868826,
jamesob,2018-08-10T15:47:33Z,"Nice improvement on the doc. \n\nutACK https://github.com/bitcoin/bitcoin/pull/13930/commits/e99f3d9b0c2ba7f787eab1ae3724e738ff050e01",https://github.com/bitcoin/bitcoin/pull/13930#issuecomment-412124082,412124082,
Sjors,2018-08-10T16:53:54Z,"Responding here, so it doesn't disappear when I rebase.\n\n@jamesob wrote:\n\n> Is this true because `ConnectTip` was never called on D3, meaning it was never added to `m_failed_blocks` by way of `InvalidBlockFound`? If that is the case, it may be worth making a more detailed note of that on this line; took me a few minutes of digging in the code to evaluate this claim.\n\nThat's how I under",https://github.com/bitcoin/bitcoin/pull/13930#issuecomment-412141997,412141997,
sdaftuar,2018-08-10T17:30:35Z,"utACK, thanks for improving this comment.\n\nIf you want to explain things even further, you could note that the reason we bypass this logic when pindexPrev has been validated up to BLOCK_VALID_SCRIPTS is just a performance optimization, so that in the common case of adding a new block to the tip, we don't have to iterate over the failed blocks list.\n\nAlso to be totally pedantic, while D3 wo",https://github.com/bitcoin/bitcoin/pull/13930#issuecomment-412151696,412151696,
Sjors,2018-09-04T08:51:31Z,Expanded the comment to take the above into account.,https://github.com/bitcoin/bitcoin/pull/13930#issuecomment-418291230,418291230,
TheBlueMatt,2018-11-30T17:41:03Z,ACK,https://github.com/bitcoin/bitcoin/pull/13930#issuecomment-443281404,443281404,
jamesob,2018-08-10T15:47:07Z,"Is this true because ConnectTip was never called on D3, meaning it was never added to `m_failed_blocks` by way of InvalidBlockFound? If that is the case, it may be worth making a more detailed note of that on this line; took me a few minutes of digging in the code to evaluate this claim.",https://github.com/bitcoin/bitcoin/pull/13930#discussion_r209303825,209303825,src/validation.cpp
