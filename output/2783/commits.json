[
  {
    "sha": "067a6092ac33b503a645af6b65c400ee1e7e0e4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjdhNjA5MmFjMzNiNTAzYTY0NWFmNmI2NWM0MDBlZTFlN2UwZTRh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-06-22T14:03:11Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-06-22T14:14:26Z"
      },
      "message": "Initialize database before checking changed txindex\n\nIn case no database exists yet, and -txindex(=1) is passed, we currently first\ncheck whether fTxIndex differs from -txindex (and ask the user to reindex in\nthat case), and only afterwards initialize the database. By swapping these\naround (the initialization is a no-op in case the database already exists),\nwe allow it to be born in txindex mode, without warning.\n\nThat also means we don't need to check -reindex anymore, as the wiping/reinit\nof the databases happens before checking.",
      "tree": {
        "sha": "9f6d53234bfca320dfc7d81a18b4559f5ecb553a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f6d53234bfca320dfc7d81a18b4559f5ecb553a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/067a6092ac33b503a645af6b65c400ee1e7e0e4a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/067a6092ac33b503a645af6b65c400ee1e7e0e4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/067a6092ac33b503a645af6b65c400ee1e7e0e4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/067a6092ac33b503a645af6b65c400ee1e7e0e4a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "905738a15aa68c39e32bc5b9bbde53a9610dc818",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/905738a15aa68c39e32bc5b9bbde53a9610dc818",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/905738a15aa68c39e32bc5b9bbde53a9610dc818"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "53c2703d2626beb62aa02e6c6f99939404537199",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/067a6092ac33b503a645af6b65c400ee1e7e0e4a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/067a6092ac33b503a645af6b65c400ee1e7e0e4a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=067a6092ac33b503a645af6b65c400ee1e7e0e4a",
        "patch": "@@ -744,18 +744,18 @@ bool AppInit2(boost::thread_group& threadGroup)\n                 if (!mapBlockIndex.empty() && pindexGenesisBlock == NULL)\n                     return InitError(_(\"Incorrect or no genesis block found. Wrong datadir for network?\"));\n \n-                // Check for changed -txindex state (only necessary if we are not reindexing anyway)\n-                if (!fReindex && fTxIndex != GetBoolArg(\"-txindex\", false)) {\n-                    strLoadError = _(\"You need to rebuild the database using -reindex to change -txindex\");\n-                    break;\n-                }\n-\n                 // Initialize the block index (no-op if non-empty database was already loaded)\n                 if (!InitBlockIndex()) {\n                     strLoadError = _(\"Error initializing block database\");\n                     break;\n                 }\n \n+                // Check for changed -txindex state\n+                if (fTxIndex != GetBoolArg(\"-txindex\", false)) {\n+                    strLoadError = _(\"You need to rebuild the database using -reindex to change -txindex\");\n+                    break;\n+                }\n+\n                 uiInterface.InitMessage(_(\"Verifying blocks...\"));\n                 if (!VerifyDB()) {\n                     strLoadError = _(\"Corrupted block database detected\");"
      }
    ]
  }
]