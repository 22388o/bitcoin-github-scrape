[
  {
    "sha": "d71bedb95a812becb4cc0269fb7412ab5a69f60a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzFiZWRiOTVhODEyYmVjYjRjYzAyNjlmYjc0MTJhYjVhNjlmNjBh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-03-27T23:24:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-03-27T23:49:54Z"
      },
      "message": "qa: Fix function names in feature_blocksdir",
      "tree": {
        "sha": "4b732a0bb61d4f9ce7173e4d586c6a50daa040dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b732a0bb61d4f9ce7173e4d586c6a50daa040dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d71bedb95a812becb4cc0269fb7412ab5a69f60a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d71bedb95a812becb4cc0269fb7412ab5a69f60a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d71bedb95a812becb4cc0269fb7412ab5a69f60a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d71bedb95a812becb4cc0269fb7412ab5a69f60a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "534b8fa560a700c0641e2700b92e40dc1a0066aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/534b8fa560a700c0641e2700b92e40dc1a0066aa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/534b8fa560a700c0641e2700b92e40dc1a0066aa"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 12,
      "deletions": 9
    },
    "files": [
      {
        "sha": "a77014a5247d17a3fa065a582190c52ef5ef1744",
        "filename": "test/functional/feature_blocksdir.py",
        "status": "modified",
        "additions": 12,
        "deletions": 9,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d71bedb95a812becb4cc0269fb7412ab5a69f60a/test/functional/feature_blocksdir.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d71bedb95a812becb4cc0269fb7412ab5a69f60a/test/functional/feature_blocksdir.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_blocksdir.py?ref=d71bedb95a812becb4cc0269fb7412ab5a69f60a",
        "patch": "@@ -5,10 +5,12 @@\n \"\"\"Test the blocksdir option.\n \"\"\"\n \n+import os\n+import re\n+import shutil\n+\n from test_framework.test_framework import BitcoinTestFramework, initialize_datadir\n \n-import shutil\n-import os\n \n class BlocksdirTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -17,18 +19,19 @@ def set_test_params(self):\n \n     def run_test(self):\n         self.stop_node(0)\n-        node0path = os.path.join(self.options.tmpdir, \"node0\")\n-        shutil.rmtree(node0path)\n+        shutil.rmtree(self.nodes[0].datadir)\n         initialize_datadir(self.options.tmpdir, 0)\n         self.log.info(\"Starting with non exiting blocksdir ...\")\n-        self.assert_start_raises_init_error(0, [\"-blocksdir=\"+self.options.tmpdir+ \"/blocksdir\"], \"Specified blocks director\")\n-        os.mkdir(self.options.tmpdir+ \"/blocksdir\")\n+        blocksdir_path = os.path.join(self.options.tmpdir, 'blocksdir')\n+        self.nodes[0].assert_start_raises_init_error([\"-blocksdir=\" + blocksdir_path], re.escape('Error: Specified blocks directory \"{}\" does not exist.'.format(blocksdir_path)))\n+        os.mkdir(blocksdir_path)\n         self.log.info(\"Starting with exiting blocksdir ...\")\n-        self.start_node(0, [\"-blocksdir=\"+self.options.tmpdir+ \"/blocksdir\"])\n+        self.start_node(0, [\"-blocksdir=\" + blocksdir_path])\n         self.log.info(\"mining blocks..\")\n         self.nodes[0].generate(10)\n-        assert(os.path.isfile(os.path.join(self.options.tmpdir, \"blocksdir\", \"regtest\", \"blocks\", \"blk00000.dat\")))\n-        assert(os.path.isdir(os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"blocks\", \"index\")))\n+        assert os.path.isfile(os.path.join(blocksdir_path, \"regtest\", \"blocks\", \"blk00000.dat\"))\n+        assert os.path.isdir(os.path.join(self.nodes[0].datadir, \"regtest\", \"blocks\", \"index\"))\n+\n \n if __name__ == '__main__':\n     BlocksdirTest().main()"
      }
    ]
  }
]