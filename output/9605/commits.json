[
  {
    "sha": "73296f54d6f0b38fcac627882d2e9480a2bad14a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzI5NmY1NGQ2ZjBiMzhmY2FjNjI3ODgyZDJlOTQ4MGEyYmFkMTRh",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-20T20:36:13Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-06T23:33:50Z"
      },
      "message": "CScheduler boost->std::function, use millisecs for times, not secs",
      "tree": {
        "sha": "48be0c7e220bd652f941e7cd209c3c85bac304c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48be0c7e220bd652f941e7cd209c3c85bac304c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73296f54d6f0b38fcac627882d2e9480a2bad14a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73296f54d6f0b38fcac627882d2e9480a2bad14a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73296f54d6f0b38fcac627882d2e9480a2bad14a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73296f54d6f0b38fcac627882d2e9480a2bad14a/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72fb5158b1c8bd85c2bccc87ba814170a0095d34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72fb5158b1c8bd85c2bccc87ba814170a0095d34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72fb5158b1c8bd85c2bccc87ba814170a0095d34"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "6ff63d47309eceac05691d0a5903de9c6536fb82",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73296f54d6f0b38fcac627882d2e9480a2bad14a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73296f54d6f0b38fcac627882d2e9480a2bad14a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=73296f54d6f0b38fcac627882d2e9480a2bad14a",
        "patch": "@@ -2288,7 +2288,7 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n     threadMessageHandler = std::thread(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n \n     // Dump network addresses\n-    scheduler.scheduleEvery(boost::bind(&CConnman::DumpData, this), DUMP_ADDRESSES_INTERVAL);\n+    scheduler.scheduleEvery(std::bind(&CConnman::DumpData, this), DUMP_ADDRESSES_INTERVAL * 1000);\n \n     return true;\n }"
      },
      {
        "sha": "861c1a0220317636c521679a8e46aecfe0ea62ff",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73296f54d6f0b38fcac627882d2e9480a2bad14a/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73296f54d6f0b38fcac627882d2e9480a2bad14a/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=73296f54d6f0b38fcac627882d2e9480a2bad14a",
        "patch": "@@ -104,20 +104,20 @@ void CScheduler::schedule(CScheduler::Function f, boost::chrono::system_clock::t\n     newTaskScheduled.notify_one();\n }\n \n-void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaSeconds)\n+void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSeconds)\n {\n-    schedule(f, boost::chrono::system_clock::now() + boost::chrono::seconds(deltaSeconds));\n+    schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n-static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaSeconds)\n+static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaMilliSeconds)\n {\n     f();\n-    s->scheduleFromNow(boost::bind(&Repeat, s, f, deltaSeconds), deltaSeconds);\n+    s->scheduleFromNow(boost::bind(&Repeat, s, f, deltaMilliSeconds), deltaMilliSeconds);\n }\n \n-void CScheduler::scheduleEvery(CScheduler::Function f, int64_t deltaSeconds)\n+void CScheduler::scheduleEvery(CScheduler::Function f, int64_t deltaMilliSeconds)\n {\n-    scheduleFromNow(boost::bind(&Repeat, this, f, deltaSeconds), deltaSeconds);\n+    scheduleFromNow(boost::bind(&Repeat, this, f, deltaMilliSeconds), deltaMilliSeconds);\n }\n \n size_t CScheduler::getQueueInfo(boost::chrono::system_clock::time_point &first,"
      },
      {
        "sha": "613fc1653fdffca545fb8e6d52e0e66b96793edc",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73296f54d6f0b38fcac627882d2e9480a2bad14a/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73296f54d6f0b38fcac627882d2e9480a2bad14a/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=73296f54d6f0b38fcac627882d2e9480a2bad14a",
        "patch": "@@ -10,7 +10,6 @@\n // boost::thread / boost::function / boost::chrono should be ported to\n // std::thread / std::function / std::chrono when we support C++11.\n //\n-#include <boost/function.hpp>\n #include <boost/chrono/chrono.hpp>\n #include <boost/thread.hpp>\n #include <map>\n@@ -23,7 +22,7 @@\n //\n // CScheduler* s = new CScheduler();\n // s->scheduleFromNow(doSomething, 11); // Assuming a: void doSomething() { }\n-// s->scheduleFromNow(boost::bind(Class::func, this, argument), 3);\n+// s->scheduleFromNow(std::bind(Class::func, this, argument), 3);\n // boost::thread* t = new boost::thread(boost::bind(CScheduler::serviceQueue, s));\n //\n // ... then at program shutdown, clean up the thread running serviceQueue:\n@@ -39,20 +38,20 @@ class CScheduler\n     CScheduler();\n     ~CScheduler();\n \n-    typedef boost::function<void(void)> Function;\n+    typedef std::function<void(void)> Function;\n \n     // Call func at/after time t\n     void schedule(Function f, boost::chrono::system_clock::time_point t);\n \n     // Convenience method: call f once deltaSeconds from now\n-    void scheduleFromNow(Function f, int64_t deltaSeconds);\n+    void scheduleFromNow(Function f, int64_t deltaMilliSeconds);\n \n     // Another convenience method: call f approximately\n     // every deltaSeconds forever, starting deltaSeconds from now.\n     // To be more precise: every time f is finished, it\n     // is rescheduled to run deltaSeconds later. If you\n     // need more accurate scheduling, don't use this method.\n-    void scheduleEvery(Function f, int64_t deltaSeconds);\n+    void scheduleEvery(Function f, int64_t deltaMilliSeconds);\n \n     // To keep things as simple as possible, there is no unschedule.\n "
      }
    ]
  },
  {
    "sha": "735d9b5362aeca34c0e62006986fe9d82c24ca08",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzVkOWI1MzYyYWVjYTM0YzBlNjIwMDY5ODZmZTlkODJjMjRjYTA4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-08T18:19:18Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-06T23:35:19Z"
      },
      "message": "Use CScheduler for wallet flushing, remove ThreadFlushWalletDB",
      "tree": {
        "sha": "25e2a8ba6b29162ba94520e67f60b9f805e51f7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25e2a8ba6b29162ba94520e67f60b9f805e51f7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/735d9b5362aeca34c0e62006986fe9d82c24ca08",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/735d9b5362aeca34c0e62006986fe9d82c24ca08",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/735d9b5362aeca34c0e62006986fe9d82c24ca08",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/735d9b5362aeca34c0e62006986fe9d82c24ca08/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73296f54d6f0b38fcac627882d2e9480a2bad14a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73296f54d6f0b38fcac627882d2e9480a2bad14a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73296f54d6f0b38fcac627882d2e9480a2bad14a"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 30,
      "deletions": 34
    },
    "files": [
      {
        "sha": "280793c72b68070616e6c0f38ad193fbb697eff5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=735d9b5362aeca34c0e62006986fe9d82c24ca08",
        "patch": "@@ -1639,7 +1639,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n #ifdef ENABLE_WALLET\n     if (pwalletMain)\n-        pwalletMain->postInitProcess(threadGroup);\n+        pwalletMain->postInitProcess(scheduler);\n #endif\n \n     return !fRequestShutdown;"
      },
      {
        "sha": "88dbb77ab5df37618a3b7e0bd0992f5f040c0f5b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=735d9b5362aeca34c0e62006986fe9d82c24ca08",
        "patch": "@@ -20,6 +20,7 @@\n #include \"primitives/transaction.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n+#include \"scheduler.h\"\n #include \"timedata.h\"\n #include \"txmempool.h\"\n #include \"util.h\"\n@@ -3754,17 +3755,17 @@ bool CWallet::InitLoadWallet()\n     return true;\n }\n \n-std::atomic<bool> CWallet::fFlushThreadRunning(false);\n+std::atomic<bool> CWallet::fFlushScheduled(false);\n \n-void CWallet::postInitProcess(boost::thread_group& threadGroup)\n+void CWallet::postInitProcess(CScheduler& scheduler)\n {\n     // Add wallet transactions that aren't already in a block to mempool\n     // Do this here as mempool requires genesis block to be loaded\n     ReacceptWalletTransactions();\n \n     // Run a thread to flush wallet periodically\n-    if (!CWallet::fFlushThreadRunning.exchange(true)) {\n-        threadGroup.create_thread(ThreadFlushWalletDB);\n+    if (!CWallet::fFlushScheduled.exchange(true)) {\n+        scheduler.scheduleEvery(MaybeFlushWalletDB, 500);\n     }\n }\n "
      },
      {
        "sha": "1007934909b96448a7bfecf7a0102b80e9b3d966",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=735d9b5362aeca34c0e62006986fe9d82c24ca08",
        "patch": "@@ -29,7 +29,6 @@\n #include <vector>\n \n #include <boost/shared_ptr.hpp>\n-#include <boost/thread.hpp>\n \n extern CWallet* pwalletMain;\n \n@@ -79,6 +78,7 @@ class CCoinControl;\n class COutput;\n class CReserveKey;\n class CScript;\n+class CScheduler;\n class CTxMemPool;\n class CWalletTx;\n \n@@ -593,7 +593,7 @@ class CAccountingEntry\n class CWallet : public CCryptoKeyStore, public CValidationInterface\n {\n private:\n-    static std::atomic<bool> fFlushThreadRunning;\n+    static std::atomic<bool> fFlushScheduled;\n \n     /**\n      * Select a set of coins such that nValueRet >= nTargetValue and at least\n@@ -1001,7 +1001,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * Wallet post-init setup\n      * Gives the wallet a chance to register repetitive tasks and complete post-init tasks\n      */\n-    void postInitProcess(boost::thread_group& threadGroup);\n+    void postInitProcess(CScheduler& scheduler);\n \n     /* Wallets parameter interaction */\n     static bool ParameterInteraction();"
      },
      {
        "sha": "ae95fc4f29c52755181304fd16189eeb22b36d50",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 25,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=735d9b5362aeca34c0e62006986fe9d82c24ca08",
        "patch": "@@ -777,38 +777,33 @@ DBErrors CWalletDB::ZapWalletTx(vector<CWalletTx>& vWtx)\n     return DB_LOAD_OK;\n }\n \n-void ThreadFlushWalletDB()\n+void MaybeFlushWalletDB()\n {\n-    // Make this thread recognisable as the wallet flushing thread\n-    RenameThread(\"bitcoin-wallet\");\n-\n-    static bool fOneThread;\n-    if (fOneThread)\n+    static std::atomic<bool> fOneThread;\n+    if (fOneThread.exchange(true)) {\n         return;\n-    fOneThread = true;\n-    if (!GetBoolArg(\"-flushwallet\", DEFAULT_FLUSHWALLET))\n+    }\n+    if (!GetBoolArg(\"-flushwallet\", DEFAULT_FLUSHWALLET)) {\n         return;\n+    }\n \n-    unsigned int nLastSeen = CWalletDB::GetUpdateCounter();\n-    unsigned int nLastFlushed = CWalletDB::GetUpdateCounter();\n-    int64_t nLastWalletUpdate = GetTime();\n-    while (true)\n-    {\n-        MilliSleep(500);\n+    static unsigned int nLastSeen = CWalletDB::GetUpdateCounter();\n+    static unsigned int nLastFlushed = CWalletDB::GetUpdateCounter();\n+    static int64_t nLastWalletUpdate = GetTime();\n \n-        if (nLastSeen != CWalletDB::GetUpdateCounter())\n-        {\n-            nLastSeen = CWalletDB::GetUpdateCounter();\n-            nLastWalletUpdate = GetTime();\n-        }\n+    if (nLastSeen != CWalletDB::GetUpdateCounter())\n+    {\n+        nLastSeen = CWalletDB::GetUpdateCounter();\n+        nLastWalletUpdate = GetTime();\n+    }\n \n-        if (nLastFlushed != CWalletDB::GetUpdateCounter() && GetTime() - nLastWalletUpdate >= 2)\n-        {\n-            const std::string& strFile = pwalletMain->strWalletFile;\n-            if (CDB::PeriodicFlush(strFile))\n-                nLastFlushed = CWalletDB::GetUpdateCounter();\n-        }\n+    if (nLastFlushed != CWalletDB::GetUpdateCounter() && GetTime() - nLastWalletUpdate >= 2)\n+    {\n+        const std::string& strFile = pwalletMain->strWalletFile;\n+        if (CDB::PeriodicFlush(strFile))\n+            nLastFlushed = CWalletDB::GetUpdateCounter();\n     }\n+    fOneThread = false;\n }\n \n //"
      },
      {
        "sha": "85364c134debd628c6a4fd1192576cd1d1cc8b95",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/735d9b5362aeca34c0e62006986fe9d82c24ca08/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=735d9b5362aeca34c0e62006986fe9d82c24ca08",
        "patch": "@@ -193,6 +193,6 @@ class CWalletDB : public CDB\n     void operator=(const CWalletDB&);\n };\n \n-void ThreadFlushWalletDB();\n+void MaybeFlushWalletDB();\n \n #endif // BITCOIN_WALLET_WALLETDB_H"
      }
    ]
  },
  {
    "sha": "0235be1e7aa84ceb2c882c33fc279d4593e14968",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjM1YmUxZTdhYTg0Y2ViMmM4ODJjMzNmYzI3OWQ0NTkzZTE0OTY4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-23T14:27:59Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-06T23:35:20Z"
      },
      "message": "Rename FlushWalletDB -> CompactWalletDB, add function description",
      "tree": {
        "sha": "2225ae11bd76d7a24044601b29ca9707f4845283",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2225ae11bd76d7a24044601b29ca9707f4845283"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0235be1e7aa84ceb2c882c33fc279d4593e14968",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0235be1e7aa84ceb2c882c33fc279d4593e14968",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0235be1e7aa84ceb2c882c33fc279d4593e14968",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0235be1e7aa84ceb2c882c33fc279d4593e14968/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "735d9b5362aeca34c0e62006986fe9d82c24ca08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/735d9b5362aeca34c0e62006986fe9d82c24ca08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/735d9b5362aeca34c0e62006986fe9d82c24ca08"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "04d5ea6effb89473f1b12d117a16382274ee589c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0235be1e7aa84ceb2c882c33fc279d4593e14968/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0235be1e7aa84ceb2c882c33fc279d4593e14968/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0235be1e7aa84ceb2c882c33fc279d4593e14968",
        "patch": "@@ -3765,7 +3765,7 @@ void CWallet::postInitProcess(CScheduler& scheduler)\n \n     // Run a thread to flush wallet periodically\n     if (!CWallet::fFlushScheduled.exchange(true)) {\n-        scheduler.scheduleEvery(MaybeFlushWalletDB, 500);\n+        scheduler.scheduleEvery(MaybeCompactWalletDB, 500);\n     }\n }\n "
      },
      {
        "sha": "5ba9f150a8e707373bab0dc613cb1dc5c658fa47",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0235be1e7aa84ceb2c882c33fc279d4593e14968/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0235be1e7aa84ceb2c882c33fc279d4593e14968/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=0235be1e7aa84ceb2c882c33fc279d4593e14968",
        "patch": "@@ -777,7 +777,7 @@ DBErrors CWalletDB::ZapWalletTx(vector<CWalletTx>& vWtx)\n     return DB_LOAD_OK;\n }\n \n-void MaybeFlushWalletDB()\n+void MaybeCompactWalletDB()\n {\n     static std::atomic<bool> fOneThread;\n     if (fOneThread.exchange(true)) {"
      },
      {
        "sha": "2e9899acc6fe3c4222a5953d7b1a8cc4e5302f29",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0235be1e7aa84ceb2c882c33fc279d4593e14968/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0235be1e7aa84ceb2c882c33fc279d4593e14968/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=0235be1e7aa84ceb2c882c33fc279d4593e14968",
        "patch": "@@ -193,6 +193,7 @@ class CWalletDB : public CDB\n     void operator=(const CWalletDB&);\n };\n \n-void MaybeFlushWalletDB();\n+//! Compacts BDB state so that wallet.dat is self-contained (if there are changes)\n+void MaybeCompactWalletDB();\n \n #endif // BITCOIN_WALLET_WALLETDB_H"
      }
    ]
  }
]