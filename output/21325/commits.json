[
  {
    "sha": "fbbb2d4fc13971c98c83a51635166ac532e71a32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmJiMmQ0ZmMxMzk3MWM5OGM4M2E1MTYzNTE2NmFjNTMyZTcxYTMy",
    "commit": {
      "author": {
        "name": "fyquah",
        "email": "fyquah@protonmail.com",
        "date": "2021-03-01T15:24:19Z"
      },
      "committer": {
        "name": "fyquah",
        "email": "fyquah@protonmail.com",
        "date": "2021-03-01T15:24:28Z"
      },
      "message": "lint: Fix spelling errors in comments",
      "tree": {
        "sha": "0af321eb5e48a5a38194bdfff1ea5b102a9c2165",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0af321eb5e48a5a38194bdfff1ea5b102a9c2165"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbbb2d4fc13971c98c83a51635166ac532e71a32",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbbb2d4fc13971c98c83a51635166ac532e71a32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbbb2d4fc13971c98c83a51635166ac532e71a32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbbb2d4fc13971c98c83a51635166ac532e71a32/comments",
    "author": {
      "login": "fyquah",
      "id": 6006469,
      "node_id": "MDQ6VXNlcjYwMDY0Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6006469?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fyquah",
      "html_url": "https://github.com/fyquah",
      "followers_url": "https://api.github.com/users/fyquah/followers",
      "following_url": "https://api.github.com/users/fyquah/following{/other_user}",
      "gists_url": "https://api.github.com/users/fyquah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fyquah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fyquah/subscriptions",
      "organizations_url": "https://api.github.com/users/fyquah/orgs",
      "repos_url": "https://api.github.com/users/fyquah/repos",
      "events_url": "https://api.github.com/users/fyquah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fyquah/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fyquah",
      "id": 6006469,
      "node_id": "MDQ6VXNlcjYwMDY0Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6006469?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fyquah",
      "html_url": "https://github.com/fyquah",
      "followers_url": "https://api.github.com/users/fyquah/followers",
      "following_url": "https://api.github.com/users/fyquah/following{/other_user}",
      "gists_url": "https://api.github.com/users/fyquah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fyquah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fyquah/subscriptions",
      "organizations_url": "https://api.github.com/users/fyquah/orgs",
      "repos_url": "https://api.github.com/users/fyquah/repos",
      "events_url": "https://api.github.com/users/fyquah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fyquah/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad89812c70a9b88be642fceffb970859f6fdcba2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad89812c70a9b88be642fceffb970859f6fdcba2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad89812c70a9b88be642fceffb970859f6fdcba2"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b92d3f917d605f6b11f42df62386516d875c781c",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbbb2d4fc13971c98c83a51635166ac532e71a32/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbbb2d4fc13971c98c83a51635166ac532e71a32/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=fbbb2d4fc13971c98c83a51635166ac532e71a32",
        "patch": "@@ -3,7 +3,7 @@ export LC_ALL=C\n set -e -o pipefail\n export TZ=UTC\n \n-# Althought Guix _does_ set umask when building its own packages (in our case,\n+# Although Guix _does_ set umask when building its own packages (in our case,\n # this is all packages in manifest.scm), it does not set it for `guix\n # environment`. It does make sense for at least `guix environment --container`\n # to set umask, so if that change gets merged upstream and we bump the"
      },
      {
        "sha": "6cbaf2dc0c7c08c4f0a1a28a248162e88a8fee8f",
        "filename": "contrib/verifybinaries/verify.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbbb2d4fc13971c98c83a51635166ac532e71a32/contrib/verifybinaries/verify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbbb2d4fc13971c98c83a51635166ac532e71a32/contrib/verifybinaries/verify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.py?ref=fbbb2d4fc13971c98c83a51635166ac532e71a32",
        "patch": "@@ -51,7 +51,7 @@ def download_with_wget(remote_file, local_file=None):\n     if local_file:\n         wget_args = ['wget', '-O', local_file, remote_file]\n     else:\n-        # use timestamping mechanism if local filename is not explicitely set\n+        # use timestamping mechanism if local filename is not explicitly set\n         wget_args = ['wget', '-N', remote_file]\n \n     result = subprocess.run(wget_args,\n@@ -85,7 +85,7 @@ def main(args):\n         print(\"Error: need to specify a version on the command line\")\n         return 3\n \n-    # determine remote dir dependend on provided version string\n+    # determine remote dir dependent on provided version string\n     version_base, version_rc, os_filter = parse_version_string(args[0])\n     remote_dir = f\"/bin/{VERSIONPREFIX}{version_base}/\"\n     if version_rc:"
      }
    ]
  }
]