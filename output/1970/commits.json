[
  {
    "sha": "8986a1369f572e2d4f50da91ddb172dc37e83abf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTg2YTEzNjlmNTcyZTJkNGY1MGRhOTFkZGIxNzJkYzM3ZTgzYWJm",
    "commit": {
      "author": {
        "name": "Arnav Singh",
        "email": "arnavion@gmail.com",
        "date": "2012-11-01T15:29:17Z"
      },
      "committer": {
        "name": "Arnav Singh",
        "email": "arnavion@gmail.com",
        "date": "2012-11-01T15:29:17Z"
      },
      "message": "Fixed making leveldb with custom CFLAGS/CXXFLAGS in the same way as makefile.unix",
      "tree": {
        "sha": "b69699d4293086d4870a50ac8e31737fe359f9a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b69699d4293086d4870a50ac8e31737fe359f9a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8986a1369f572e2d4f50da91ddb172dc37e83abf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8986a1369f572e2d4f50da91ddb172dc37e83abf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8986a1369f572e2d4f50da91ddb172dc37e83abf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8986a1369f572e2d4f50da91ddb172dc37e83abf/comments",
    "author": {
      "login": "Arnavion",
      "id": 1096010,
      "node_id": "MDQ6VXNlcjEwOTYwMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1096010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arnavion",
      "html_url": "https://github.com/Arnavion",
      "followers_url": "https://api.github.com/users/Arnavion/followers",
      "following_url": "https://api.github.com/users/Arnavion/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arnavion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arnavion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arnavion/subscriptions",
      "organizations_url": "https://api.github.com/users/Arnavion/orgs",
      "repos_url": "https://api.github.com/users/Arnavion/repos",
      "events_url": "https://api.github.com/users/Arnavion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arnavion/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Arnavion",
      "id": 1096010,
      "node_id": "MDQ6VXNlcjEwOTYwMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1096010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arnavion",
      "html_url": "https://github.com/Arnavion",
      "followers_url": "https://api.github.com/users/Arnavion/followers",
      "following_url": "https://api.github.com/users/Arnavion/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arnavion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arnavion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arnavion/subscriptions",
      "organizations_url": "https://api.github.com/users/Arnavion/orgs",
      "repos_url": "https://api.github.com/users/Arnavion/repos",
      "events_url": "https://api.github.com/users/Arnavion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arnavion/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4f758b72c9ad99831821c8ca48309fbbb7f58e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4f758b72c9ad99831821c8ca48309fbbb7f58e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4f758b72c9ad99831821c8ca48309fbbb7f58e7"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 32,
      "deletions": 32
    },
    "files": [
      {
        "sha": "14e494f3ce303322b798a659487cfe996efec05f",
        "filename": "src/leveldb/Makefile",
        "status": "modified",
        "additions": 32,
        "deletions": 32,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8986a1369f572e2d4f50da91ddb172dc37e83abf/src/leveldb/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8986a1369f572e2d4f50da91ddb172dc37e83abf/src/leveldb/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/Makefile?ref=8986a1369f572e2d4f50da91ddb172dc37e83abf",
        "patch": "@@ -19,10 +19,10 @@ $(shell ./build_detect_platform build_config.mk)\n # this file is generated by the previous line to set build flags and sources\n include build_config.mk\n \n-CFLAGS += -I. -I./include $(PLATFORM_CCFLAGS) $(OPT)\n-CXXFLAGS += -I. -I./include $(PLATFORM_CXXFLAGS) $(OPT)\n+xCFLAGS = -I. -I./include $(PLATFORM_CCFLAGS) $(OPT) $(CFLAGS)\n+xCXXFLAGS = -I. -I./include $(PLATFORM_CXXFLAGS) $(OPT) $(CXXFLAGS)\n \n-LDFLAGS += $(PLATFORM_LDFLAGS)\n+xLDFLAGS = $(PLATFORM_LDFLAGS) $(LDFLAGS)\n \n LIBOBJECTS = $(SOURCES:.cc=.o)\n MEMENVOBJECTS = $(MEMENV_SOURCES:.cc=.o)\n@@ -82,7 +82,7 @@ $(SHARED2): $(SHARED3)\n endif\n \n $(SHARED3):\n-\t$(CXX) $(LDFLAGS) $(PLATFORM_SHARED_LDFLAGS)$(SHARED2) $(CXXFLAGS) $(PLATFORM_SHARED_CFLAGS) $(SOURCES) $(PLATFORM_EXTRALIBS) -o $(SHARED3)\n+\t$(CXX) $(xLDFLAGS) $(PLATFORM_SHARED_LDFLAGS)$(SHARED2) $(xCXXFLAGS) $(PLATFORM_SHARED_CFLAGS) $(SOURCES) $(PLATFORM_EXTRALIBS) -o $(SHARED3)\n \n endif  # PLATFORM_SHARED_EXT\n \n@@ -100,74 +100,74 @@ $(LIBRARY): $(LIBOBJECTS)\n \t$(AR) -rs $@ $(LIBOBJECTS)\n \n db_bench: db/db_bench.o $(LIBOBJECTS) $(TESTUTIL)\n-\t$(CXX) db/db_bench.o $(LIBOBJECTS) $(TESTUTIL) -o $@  $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/db_bench.o $(LIBOBJECTS) $(TESTUTIL) -o $@  $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n db_bench_sqlite3: doc/bench/db_bench_sqlite3.o $(LIBOBJECTS) $(TESTUTIL)\n-\t$(CXX) doc/bench/db_bench_sqlite3.o $(LIBOBJECTS) $(TESTUTIL) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS) -lsqlite3\n+\t$(CXX) doc/bench/db_bench_sqlite3.o $(LIBOBJECTS) $(TESTUTIL) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS) -lsqlite3\n \n db_bench_tree_db: doc/bench/db_bench_tree_db.o $(LIBOBJECTS) $(TESTUTIL)\n-\t$(CXX) doc/bench/db_bench_tree_db.o $(LIBOBJECTS) $(TESTUTIL) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS) -lkyotocabinet\n+\t$(CXX) doc/bench/db_bench_tree_db.o $(LIBOBJECTS) $(TESTUTIL) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS) -lkyotocabinet\n \n arena_test: util/arena_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) util/arena_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) util/arena_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n bloom_test: util/bloom_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) util/bloom_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) util/bloom_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n c_test: db/c_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/c_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/c_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n cache_test: util/cache_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) util/cache_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) util/cache_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n coding_test: util/coding_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) util/coding_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) util/coding_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n corruption_test: db/corruption_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/corruption_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/corruption_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n crc32c_test: util/crc32c_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) util/crc32c_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) util/crc32c_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n db_test: db/db_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/db_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/db_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n dbformat_test: db/dbformat_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/dbformat_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/dbformat_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n env_test: util/env_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) util/env_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) util/env_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n filename_test: db/filename_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/filename_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/filename_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n filter_block_test: table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n log_test: db/log_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/log_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/log_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n table_test: table/table_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) table/table_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) table/table_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n skiplist_test: db/skiplist_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/skiplist_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/skiplist_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n version_edit_test: db/version_edit_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/version_edit_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/version_edit_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n version_set_test: db/version_set_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/version_set_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/version_set_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n write_batch_test: db/write_batch_test.o $(LIBOBJECTS) $(TESTHARNESS)\n-\t$(CXX) db/write_batch_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) db/write_batch_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n $(MEMENVLIBRARY) : $(MEMENVOBJECTS)\n \trm -f $@\n \t$(AR) -rs $@ $(MEMENVOBJECTS)\n \n memenv_test : helpers/memenv/memenv_test.o $(MEMENVLIBRARY) $(LIBRARY) $(TESTHARNESS)\n-\t$(CXX) helpers/memenv/memenv_test.o $(MEMENVLIBRARY) $(LIBRARY) $(TESTHARNESS) -o $@ $(LDFLAGS) $(PLATFORM_EXTRALIBS)\n+\t$(CXX) helpers/memenv/memenv_test.o $(MEMENVLIBRARY) $(LIBRARY) $(TESTHARNESS) -o $@ $(xLDFLAGS) $(PLATFORM_EXTRALIBS)\n \n ifeq ($(PLATFORM), IOS)\n # For iOS, create universal object files to be used on both the simulator and\n@@ -179,22 +179,22 @@ IOSVERSION=$(shell defaults read $(PLATFORMSROOT)/iPhoneOS.platform/version CFBu\n \n .cc.o:\n \tmkdir -p ios-x86/$(dir $@)\n-\t$(SIMULATORROOT)/usr/bin/$(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n+\t$(SIMULATORROOT)/usr/bin/$(CXX) $(xCXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n \tmkdir -p ios-arm/$(dir $@)\n-\t$(DEVICEROOT)/usr/bin/$(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n+\t$(DEVICEROOT)/usr/bin/$(CXX) $(xCXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n \tlipo ios-x86/$@ ios-arm/$@ -create -output $@\n \n .c.o:\n \tmkdir -p ios-x86/$(dir $@)\n-\t$(SIMULATORROOT)/usr/bin/$(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n+\t$(SIMULATORROOT)/usr/bin/$(CC) $(xCFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n \tmkdir -p ios-arm/$(dir $@)\n-\t$(DEVICEROOT)/usr/bin/$(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n+\t$(DEVICEROOT)/usr/bin/$(CC) $(xCFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n \tlipo ios-x86/$@ ios-arm/$@ -create -output $@\n \n else\n .cc.o:\n-\t$(CXX) $(CXXFLAGS) -c $< -o $@\n+\t$(CXX) $(xCXXFLAGS) -c $< -o $@\n \n .c.o:\n-\t$(CC) $(CFLAGS) -c $< -o $@\n+\t$(CC) $(xCFLAGS) -c $< -o $@\n endif"
      }
    ]
  }
]