[
  {
    "sha": "e3e1a5631e2456bb40844862ef35c07c1d1c47b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2UxYTU2MzFlMjQ1NmJiNDA4NDQ4NjJlZjM1YzA3YzFkMWM0N2Iw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-15T11:54:29Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-19T07:53:51Z"
      },
      "message": "[test] functional: set cwd of nodes to tmpdir",
      "tree": {
        "sha": "8a5bde4c685d0d89f4d37b090c79c2600349e37f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a5bde4c685d0d89f4d37b090c79c2600349e37f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3e1a5631e2456bb40844862ef35c07c1d1c47b0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlxrthUACgkQV/+b28ww\nEAlONRAAkszOcKxI6md5HZ7B3Y0Kj3G/uCD6RKCJo9LTOGsYOCAsHWSccRQuhgM5\nPPamRx1zqxmdoHzvglNknQVE5m8MCXcMXzRIZ66uQWOe7ZJib0QSLdSrNPngirWR\nlIjnCMc2oMunDIeDFMS0FI+7Knp0OKWS27Os4uC5mPRVzDkqwe8nlHZpeV4/Pd7A\nssOmx+w3lCWp3n/nsEXRqM86Ntz3hYEeMJzGFr/GkjFSQFn+XkLK4WOlvbF9DhlE\n/u2U/Pv0asmOGloA4kaX/Yt0+cBvitCu9axX3ZBXsqa8AoEkwmPlRa5cSKkk3TQO\n7V4vPLrUeSosIC+NunnMLCYBoNFRSY5zoOVTK5vPshNrkRguwWe5g2mGeljnsNXA\nJaBSn480yycV8EutqEMB+FZBEyUy+MZLihsf9j3jQnRo8Y5gVHv/icehFory91KG\nxUupgINP+CWiur2btwT3Lud9JVrRgUQ7JPPgdOPe4A05v2FpyFdrwrGiM3F0eJCJ\nFhuLnVUMcA3RAR19tPXKQxoo0KxNFqQ/HqAteJp0aXwwN/vJ8R0PiMlv7Peltudb\njoXfWuo0BMcDjMQjrenO44979bKUFfUgANV7Rk1Z3AFVSgcFq0LIEWw3CQFDrD64\nD7urFWOgVrqE0NTmjUDSCZVlg/aGSdigQFhjXCW4tPCZVpbr17E=\n=DgVG\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a5bde4c685d0d89f4d37b090c79c2600349e37f\nparent c576979b78b541bf3b4a7cbeee989b55d268e3e1\nauthor Sjors Provoost <sjors@sprovoost.nl> 1550231669 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1550562831 +0100\n\n[test] functional: set cwd of nodes to tmpdir\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3e1a5631e2456bb40844862ef35c07c1d1c47b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3e1a5631e2456bb40844862ef35c07c1d1c47b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3e1a5631e2456bb40844862ef35c07c1d1c47b0/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c576979b78b541bf3b4a7cbeee989b55d268e3e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c576979b78b541bf3b4a7cbeee989b55d268e3e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c576979b78b541bf3b4a7cbeee989b55d268e3e1"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "869b36673e755371321b92985a11f789767cf106",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3e1a5631e2456bb40844862ef35c07c1d1c47b0/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3e1a5631e2456bb40844862ef35c07c1d1c47b0/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=e3e1a5631e2456bb40844862ef35c07c1d1c47b0",
        "patch": "@@ -318,6 +318,7 @@ def add_nodes(self, num_nodes, extra_args=None, *, rpchost=None, binary=None):\n                 bitcoin_cli=self.options.bitcoincli,\n                 mocktime=self.mocktime,\n                 coverage_dir=self.options.coveragedir,\n+                cwd=self.options.tmpdir,\n                 extra_conf=extra_confs[i],\n                 extra_args=extra_args[i],\n                 use_cli=self.options.usecli,\n@@ -469,6 +470,7 @@ def _initialize_chain(self):\n                     bitcoin_cli=self.options.bitcoincli,\n                     mocktime=self.mocktime,\n                     coverage_dir=None,\n+                    cwd=self.options.tmpdir,\n                 ))\n                 self.nodes[i].args = args\n                 self.start_node(i)"
      },
      {
        "sha": "352774914d884dc1c51e617ac15e613dcd18a380",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3e1a5631e2456bb40844862ef35c07c1d1c47b0/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3e1a5631e2456bb40844862ef35c07c1d1c47b0/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=e3e1a5631e2456bb40844862ef35c07c1d1c47b0",
        "patch": "@@ -61,7 +61,7 @@ class TestNode():\n     To make things easier for the test writer, any unrecognised messages will\n     be dispatched to the RPC connection.\"\"\"\n \n-    def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mocktime, coverage_dir, extra_conf=None, extra_args=None, use_cli=False, start_perf=False):\n+    def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mocktime, coverage_dir, cwd, extra_conf=None, extra_args=None, use_cli=False, start_perf=False):\n         \"\"\"\n         Kwargs:\n             start_perf (bool): If True, begin profiling the node with `perf` as soon as\n@@ -76,6 +76,7 @@ def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mock\n         self.rpc_timeout = timewait\n         self.binary = bitcoind\n         self.coverage_dir = coverage_dir\n+        self.cwd = cwd\n         if extra_conf is not None:\n             append_config(datadir, extra_conf)\n         # Most callers will just need to add extra args to the standard list below.\n@@ -171,7 +172,7 @@ def __getattr__(self, name):\n             assert self.rpc_connected and self.rpc is not None, self._node_msg(\"Error: no RPC connection\")\n             return getattr(self.rpc, name)\n \n-    def start(self, extra_args=None, *, stdout=None, stderr=None, **kwargs):\n+    def start(self, extra_args=None, *, cwd=None, stdout=None, stderr=None, **kwargs):\n         \"\"\"Start the node.\"\"\"\n         if extra_args is None:\n             extra_args = self.extra_args\n@@ -184,6 +185,9 @@ def start(self, extra_args=None, *, stdout=None, stderr=None, **kwargs):\n         self.stderr = stderr\n         self.stdout = stdout\n \n+        if cwd is None:\n+            cwd = self.cwd\n+\n         # Delete any existing cookie file -- if such a file exists (eg due to\n         # unclean shutdown), it will get overwritten anyway by bitcoind, and\n         # potentially interfere with our attempt to authenticate\n@@ -192,7 +196,7 @@ def start(self, extra_args=None, *, stdout=None, stderr=None, **kwargs):\n         # add environment variable LIBC_FATAL_STDERR_=1 so that libc errors are written to stderr and not the terminal\n         subp_env = dict(os.environ, LIBC_FATAL_STDERR_=\"1\")\n \n-        self.process = subprocess.Popen(self.args + extra_args, env=subp_env, stdout=stdout, stderr=stderr, **kwargs)\n+        self.process = subprocess.Popen(self.args + extra_args, env=subp_env, stdout=stdout, stderr=stderr, cwd=cwd, **kwargs)\n \n         self.running = True\n         self.log.debug(\"bitcoind started, waiting for RPC to come up\")"
      }
    ]
  }
]