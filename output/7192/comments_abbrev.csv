btcdrak,2015-12-09T11:51:56Z,Good.\n\nutACK\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-163199753,163199753,
jonasschnelli,2015-12-09T12:53:19Z,Nice!\nConcept ACK.\nWill test soon.\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-163220817,163220817,
jonasschnelli,2015-12-10T07:45:47Z,Currently fails windows: https://bitcoin.jonasschnelli.ch/pulls/7192/build-win.log i'm happy to test this if windows issues are solved.\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-163525807,163525807,
laanwj,2015-12-10T11:47:10Z,Concept ACK (for 0.13 - due to translation changes this is too late for 0.12)\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-163588724,163588724,
luke-jr,2015-12-11T08:15:51Z,"Added a second commit reworking the binary blobs used for Mac-deploy. Haven't rebased yet pending completion/testing.\n\n@laanwj I am probably going to need to do the translation updates for Bitcoin LJR anyway, so let me know and I can see about doing it in Transifex for 0.12 if that'd be preferable.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-163871818,163871818,
pstratem,2015-12-11T10:05:16Z,"concept ACK 0898436e860f695028b3fc6b612074712bbdcbc6\n(reviewed the code also, but don't know anything about qt/autotools)\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-163896866,163896866,
luke-jr,2015-12-13T05:59:46Z,"Ok, I believe I have addressed all previous requests, but also introduced [a packaging FIXME](https://github.com/bitcoin/bitcoin/pull/7192/files#diff-2bf50096db55445178e7238c402f2e5cR32) which I hope @theuni can help out with...\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-164230205,164230205,
luke-jr,2015-12-14T07:25:09Z,"Travis is happy with it now, and I've confirmed the Mac DMG background image is rendered correctly in gitian. Only thing left is the depends/ stuff I need @theuni 's guidance on... But this is possibly ""good enough to merge"" without that, even if not perfect (which is the enemy of the good).\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-164367067,164367067,
MarcoFalke,2015-12-14T08:45:08Z,"Looks like there are current binaries for testing at https://bitcoin.jonasschnelli.ch/pulls/7192/\n\nHad a quick look at the linux binaries and it looks ok. Haven't checked OS X, though.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-164379490,164379490,
jonasschnelli,2015-12-14T09:03:18Z,"> Looks like there are current binaries for testing at https://bitcoin.jonasschnelli.ch/pulls/7192/\n\nYes. Just built.\n\n@luke-jr: Somethings wrong with the background. I don't get one.\n\n![bildschirmfoto 2015-12-14 um 09 45 46](https://cloud.githubusercontent.com/assets/178464/11776456/8fa0a702-a247-11e5-8d15-b496892fcdfe.png)\n\nDid you made sure, that both resolutions are in the tiff file? N",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-164382671,164382671,
jonasschnelli,2015-12-14T09:21:37Z,"On linux, you probably need a tool like this: http://linux.die.net/man/1/tiffcp\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-164386480,164386480,
luke-jr,2015-12-14T09:58:19Z,"Ok, try this one.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-164395097,164395097,
jonasschnelli,2015-12-14T12:14:17Z,"Build error on osx:\n\n``` shell\n/usr/bin/tiffcp -c none dpi36.background.tiff dpi72.background.tiff dist/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt dist/.background/background.tiff\ndist/Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt: Not a TIFF or MDI file, bad magic number 64207 (0xfacf).\nmake: *** [dist/.background/background.tiff] Error 253\n```\n\nI guess the output file is wrong:\nIt's `dist/Bitc",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-164422240,164422240,
luke-jr,2015-12-16T08:51:59Z,"@jonasschnelli Can you minimally modify the generated DS_Store to work, and post me the working file? (Not on your broken SSL server...)\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-165035926,165035926,
jonasschnelli,2015-12-17T09:07:07Z,DMG including background.tiff and DS_Store looks good now. Well done!\n![bildschirmfoto 2015-12-17 um 10 06 02](https://cloud.githubusercontent.com/assets/178464/11865662/ca602682-a4a5-11e5-9d61-7d033281ed2b.png)\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-165389194,165389194,
luke-jr,2015-12-22T09:39:02Z,"I believe this is ready for merging.\n\n@laanwj Let me know if you would like me to prepare a 0.12 backport. Again, I am willing to fixup the translations for it. I will need to make it anyway for Bitcoin LJR, so might as well benefit Core in the process.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-166567699,166567699,
maaku,2015-12-22T09:53:26Z,Nice! Concept ACK. I was just about to implement the same thing when I figured I'd check the PR history and found this pleasant surprise :)\n\nWill test soon.\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-166569953,166569953,
luke-jr,2015-12-22T12:34:10Z,"Following further discussion of the copyright notice matter on IRC, I have separated the copyright notice code so that it instead uses independent COPYRIGHT_HOLDERS and COPYRIGHT_HOLDERS_SUBSTITUTION variables, so it is harder to accidentally modify them, yet when modified, translations get preserved as much as possible.\n\n(also fixed the incorrect copyright years on the DMG background image temp",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-166607303,166607303,
btcdrak,2015-12-22T18:55:05Z,Tested ACK 4d5a3df\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-166702710,166702710,
jtimon,2015-12-22T19:03:49Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-166704655,166704655,
jonasschnelli,2015-12-23T08:15:19Z,Tested ACK 4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-166831647,166831647,
maaku,2015-12-23T08:29:36Z,"Tested ACK\nOn Dec 23, 2015 4:16 PM, ""Jonas Schnelli"" notifications@github.com wrote:\n\n> Tested ACK 4d5a3df\n> https://github.com/bitcoin/bitcoin/commit/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-166831647.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-166832992,166832992,
luke-jr,2015-12-26T08:11:31Z,"Update on 0.12: Too many languages unfortunately do _not_ have common translations of ""Bitcoin Core"", so it is impractical to try to include this for 0.12.0.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167294357,167294357,
jtimon,2015-12-26T10:09:08Z,"I still don't see why ""Bitcoin Core"" needs to be translated in the first place: it's a proper name.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167306829,167306829,
MarcoFalke,2015-12-26T10:12:43Z,I think we wanted to keep it because it was already translated in some places... What about not translating it after 0.13?\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167306915,167306915,
jtimon,2015-12-26T10:28:49Z,What about not translating it from 0.12?\nI'm sure I wouldn't translate it to spanish. Why some languages translate it and others don't?\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167311223,167311223,
btcdrak,2015-12-26T14:44:53Z,"@luke-jr \n\n> Too many languages unfortunately do not have common translations of ""Bitcoin Core""\n\nProduct names are not translated. ""Windows"" is ""Windows"", even in China, Japan and Korea. Look at this as an example http://www.microsoft.com/zh-cn\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167328921,167328921,
sipa,2015-12-26T14:50:55Z,"This may be a cultural thing, but I would personally find a translation of\n""Bitcoin Core"" to Dutch quite silly.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167329083,167329083,
luke-jr,2015-12-26T21:11:07Z,"No opinion on whether Bitcoin Core ought to be translated or not, but it would de facto be a change in translations, which is too late for 0.12.0 as I understand it. I would think at the very least, however, transliteration would be desirable for non-Latin languages.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167363732,167363732,
btcdrak,2015-12-26T22:35:28Z,"@luke-jr Even for non-Latin languages, the practice is not to translate/transliterate.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167369468,167369468,
MarcoFalke,2015-12-26T22:44:39Z,It would make sense to translate if we had some different flavors to offer like Ubuntu Kylin for instance but I can't see where this happens.\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167369738,167369738,
luke-jr,2015-12-26T23:02:58Z,"Anyhow, whether or not to translate the name is out-of-scope for this PR.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167370607,167370607,
maaku,2015-12-27T03:51:50Z,"Translation is complicated. I'm not 100% sure that that Luke-Jr meant the\nname was actually being changed in translation. It is also the case that in\nsome languages even a proper name might be inflected or have grammatical\nparticles attached based on context which would require a native speaker to\nreview, and would have prevented Luke-Jr's search-and-replace strategy.\nBut even if you decide o",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167377701,167377701,
dexX7,2015-12-27T14:41:40Z,"utACK -- this seems very useful for ""customized"" Bitcoin Core versions.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167418311,167418311,
MarcoFalke,2015-12-27T14:46:33Z,Concept ACK 4d5a3df\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-167418461,167418461,
laanwj,2016-01-20T12:49:36Z,"Isn't the ""whether to translate Bitcoin Core"" discussion irrelevant to this pull? It just factors it out, doesn't make it untranslatable right?\n\nAlso: needs conflicts resolved\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-173194905,173194905,
luke-jr,2016-01-20T17:24:00Z,"> Isn't the ""whether to translate Bitcoin Core"" discussion irrelevant to this pull? It just factors it out, doesn't make it untranslatable right?\n\nRight, it's a tangent discussion. If it's decided to make it untranslatable, someone would need to open a new PR - it's outside the scope of this one, which maintains the status quo of ""translatable"".\n\nMerged master (conflicts resolved).\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-173286418,173286418,
jtimon,2016-01-21T11:45:12Z,"@laanwj I thought this was out of 0.12 because of the translation (and things like ""bitcoin kern"" sound incredibly stupid as translations to me), but I didn't thought about languages that don't use the latin alphabet.\nMy apologies, let's leave that out of this PR.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-173546677,173546677,
MarcoFalke,2016-01-21T11:51:51Z,"This was left out of 0.12 because it would _change_ some translations after translation freeze. The changes are necessary due to the refactoring and I think @luke-jr already applied the refactoring to the translations on trasifex accordingly? (If so, this could go into 0.12.1)\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-173547745,173547745,
laanwj,2016-01-22T15:22:51Z,"This gives me an empty translation string in `bitcoinstrings.cpp`, the output of GNU gettext:\n\n```\n+QT_TRANSLATE_NOOP(""bitcoin-core"", """"),\n```\n\nI'm not sure where it comes from - I can't find any direct `_("""")` in the code. But it indicates something is wrong, maybe a _() that gets passed a macro or variable.\n\n*_Note: *_ after merging this, need to re-run `autogen.sh` and `configure` other",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-173948689,173948689,
laanwj,2016-01-25T14:36:24Z,"@luke-jr It had nothing to do with what I thought above. You can apply the following diff to prevent adding an empty translation string:\n\n``` patch\ndiff --git a/share/qt/extract_strings_qt.py b/share/qt/extract_strings_qt.py\nindex 2a6e4b9..cd76fab 100755\n--- a/share/qt/extract_strings_qt.py\n+++ b/share/qt/extract_strings_qt.py\n@@ -72,7 +72,7 @@ f.write(""""""\n f.write('static const char UNUSE",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-174524997,174524997,
luke-jr,2016-01-25T17:20:18Z,Why would those variables ever be undefined or empty? :/\n,https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-174592100,174592100,
laanwj,2016-01-27T09:34:58Z,"As said, COPYRIGHT_HOLDERS_SUBSTITUTION ends up empty in my tests, resulting in an empty translation string. If this is not the intention something else must be going wrong.\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-175510714,175510714,
luke-jr,2016-01-28T04:58:54Z,"@laanwj Ok, fixed that.\n\nAlso fixed the text sizing logic in splashscreen to be more flexible with unexpected fonts and/or name lengths; and moved PACKAGE_URL from setup.nsi.in to configure.ac's AC_INIT (note that it uses the old bitcoin.org URL in the commit itself, and updated in the merge with master).\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-175977486,175977486,
laanwj,2016-02-04T12:36:41Z,"```\nBitcoin Core Daemon version v0.12.99.0-b204181-dirty\nCopyright (C) 2009-2016 The Shitcoin Core developers\nCopyright (C) 2009-2016 The Bitcoin Core developers\n```\n\n(could nit on the years, probably derived software will have a different year range for their own development, but it's good enough for a fallback)\nACK a68bb9f\n",https://github.com/bitcoin/bitcoin/pull/7192#issuecomment-179807668,179807668,
MarcoFalke,2015-12-09T12:04:54Z,"As you are touching this translation anyway. Is there any language that translates 2009 into something other than 2009? If so, this should be changed  as well.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47082179,47082179,src/init.cpp
jonasschnelli,2015-12-09T12:53:04Z,Hmm... seems not to work on windows:\nhttps://travis-ci.org/bitcoin/bitcoin/jobs/95785144#L2082\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47086008,47086008,src/clientversion.h
laanwj,2015-12-10T11:45:20Z,"Agree, makes sense to parametrize both years, even though the first one will never change\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47216754,47216754,src/init.cpp
laanwj,2015-12-10T11:46:14Z,"This won't work. And you _don't_ want the `tr`. Just use:\n\n```\nQString windowTitle = QString(PACKAGE_NAME) + "" - "";\n```\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47216821,47216821,src/qt/bitcoingui.cpp
luke-jr,2015-12-10T11:57:44Z,But then it won't be translated? I don't mean to change that status quo in this PR...\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47217717,47217717,src/qt/bitcoingui.cpp
laanwj,2015-12-10T12:06:36Z,"Oh, right, does this work then? Does qtranslate pick up the string out of `tr(PACKAGE_NAME)`, even though it's a macro? Same for `_(PACKAGE_NAME)` in gettext? I thought only literal strings could be input to translation.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47218414,47218414,src/qt/bitcoingui.cpp
luke-jr,2015-12-10T12:09:29Z,I doubt it. I imagine there's some way to explicitly tell it? :/\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47218669,47218669,src/qt/bitcoingui.cpp
MarcoFalke,2015-12-10T17:51:43Z,Needs rebase to at least 5940cf33b35fb70979a7baa3046107a9b72d8f0f\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47259218,47259218,src/qt/forms/debugwindow.ui
theuni,2015-12-17T18:19:51Z,"This should go in ""install"". Also, should depend on the host being OSX, not on the OSX_SDK availability.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47940649,47940649,.travis.yml
luke-jr,2015-12-17T19:21:54Z,"How is host==OSX determined here, besides OSX_SDK availability?\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r47948611,47948611,.travis.yml
luke-jr,2015-12-22T09:14:51Z,I believe this has been addressed [here](https://github.com/bitcoin/bitcoin/pull/7192/files#diff-7dbd14e796e6175513dfdc05c68a5b39R73).\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48234440,48234440,src/qt/bitcoingui.cpp
maaku,2015-12-22T10:05:25Z,"As a separate issue from Jonas, are we sure the copyright name is something we want to change? I've had to deal with this as maintainer of Freicoin .. changing the product name would result in ""Copyright 2009-2015 The Freicoin Core Developers"" which would certainly not be okay (or legal?).\n\nIt would be nice to detect if PACKAGE_NAME is changed from the default, and if so add a another copyright ",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48238911,48238911,src/clientversion.h
fanquake,2015-12-22T10:12:05Z,"Concept ACK, haven't had a chance to test.\n\nOn Tuesday, 22 December 2015, Mark Friedenbach notifications@github.com\nwrote:\n\n> In src/clientversion.h\n> https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48238911:\n> \n> > @@ -38,7 +38,7 @@\n> >  #define DO_STRINGIZE(X) #X\n> > \n> >  //! Copyright string used in Windows .rc files\n> > -#define COPYRIGHT_STR ""2009-"" STRINGIZE(COPYRIGHT_Y",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48239486,48239486,src/clientversion.h
MarcoFalke,2015-12-22T10:16:05Z,@maaku Good catch! I also don't think this is legal.\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48239763,48239763,src/clientversion.h
MarcoFalke,2015-12-22T10:24:43Z,"This one as well: The copyright is held by ""The Bitcoin Core developers"", so please leave as is or add another line.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48240462,48240462,share/qt/Info.plist.in
MarcoFalke,2015-12-22T10:27:39Z,As above: https://github.com/bitcoin/bitcoin/pull/7192/files#r48240462\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48240722,48240722,src/init.cpp
MarcoFalke,2015-12-22T10:28:02Z,as above: https://github.com/bitcoin/bitcoin/pull/7192/files#r48240462\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48240757,48240757,src/qt/splashscreen.cpp
luke-jr,2015-12-22T10:31:26Z,"There is no legal entity ""The Bitcoin Core developers"", it is just a term used to indicate that each developer retains his own copyright. Replacing the package name in it doesn't change that.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48241035,48241035,src/clientversion.h
MarcoFalke,2015-12-22T10:43:30Z,"IANAL but for instance ""The MF Core developers"" would just be me whereas ""The Bitcoin Core developers"" are something like https://github.com/bitcoin/bitcoin/graphs/contributors. Otherwise you wouldn't need the multiline headers such as https://github.com/dogecoin/dogecoin/blob/bb4b082c086689434d67490a15224c42fefdfd13/src/main.cpp#L3?\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48242002,48242002,src/clientversion.h
luke-jr,2015-12-22T10:51:16Z,"Why would ""The MF Core developers"" not similarly be https://github.com/MarcoFalke/bitcoin/graphs/contributors ?\n\n> Otherwise you wouldn't need the multiline headers such as https://github.com/dogecoin/dogecoin/blob/bb4b082c086689434d67490a15224c42fefdfd13/src/main.cpp#L3?\n\nI don't know that they actually do.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48242536,48242536,src/clientversion.h
jonasschnelli,2015-12-22T11:44:23Z,nit: 2015\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48246159,48246159,contrib/macdeploy/background.svg
jonasschnelli,2015-12-22T11:51:48Z,This looks still a bit hackish.\n\nWhy not use alias = `Alias.for_file(path_in_image)`? Check: http://nullege.com/codes/show/src@d@m@dmgbuild-1.0.0@dmgbuild@core.py/337/biplist.Data\n\nThe whole byte-fiddling might break soon.\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48246602,48246602,contrib/macdeploy/custom_dsstore.py
jonasschnelli,2015-12-22T11:57:02Z,"I think this change is acceptable. Because it does not change the copyright of the source file header itself. The copyright informations within the GUI application may be different (additional assets attributions, libraries, etc.).\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48246907,48246907,src/qt/splashscreen.cpp
luke-jr,2015-12-22T11:57:29Z,> Why not use alias = Alias.for_file(path_in_image)?\n\nIt only works on Mac...\n\n> The whole byte-fiddling might break soon.\n\n???\n,https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48246941,48246941,contrib/macdeploy/custom_dsstore.py
jonasschnelli,2015-12-22T12:02:44Z,"After thinking about this in detail, I kind of agree with @luke-jr: this line does not change the copyright of the sources itself. It's just a information string that will be transported to the user over package informations and it's under the responsibility of the package-/project-mainteiner(s).\n\nIf this (string) needs to fit all legal constraints, then it would probably require to add ""LevelDB",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48247266,48247266,src/clientversion.h
jonasschnelli,2015-12-22T12:05:03Z,"> It only works on Mac...\n\nOkay. Thats a point.\n\n> The whole byte-fiddling might break soon.\n\nI was trying to say, that the hex construct at L31 will very likely break with upcoming OSX updates.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48247432,48247432,contrib/macdeploy/custom_dsstore.py
luke-jr,2015-12-22T12:12:02Z,"> I was trying to say, that the hex construct at L31 will very likely break with upcoming OSX updates.\n\nWhy is that? Nothing we can do here if so...\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48247856,48247856,contrib/macdeploy/custom_dsstore.py
jonasschnelli,2015-12-22T12:15:15Z,"> Why is that? Nothing we can do here if so...\n\nI just think, if we could let the OS or a OS near function create the byte-stream for the alias, this might help for future compatibility. But as you said, this only runs on mac...\n\nACK how it is in this PR right now.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48248033,48248033,contrib/macdeploy/custom_dsstore.py
MarcoFalke,2015-12-22T12:31:12Z,"> and it's under the responsibility of the package-/project-mainteiner(s).\n\nRight, but at least let's not reuse the variable. Someone in IRC mentioned to split the two constants (one for package name and the other for copyright).\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48248859,48248859,src/clientversion.h
fanquake,2015-12-25T12:46:50Z,"nit: Do we need this line, looks like a text-editor flag?\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48439745,48439745,contrib/macdeploy/background.svg
MarcoFalke,2016-01-06T00:26:13Z,"@luke-jr `reference_datetime` was accidentally changed in master. Thus, this needs rebase. :(\n\nAlternatively, it should be sufficient to move the `python*` packages up a bit.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r48915192,48915192,contrib/gitian-descriptors/gitian-osx.yml
laanwj,2016-01-28T09:49:00Z,"Won't this make it much to easy to 'steal' copyright, by just changing this value?\nWe discussed something about only making it possible to _add_ copyright holders this way, not replace the current ones.\nOr am I misunderstanding how this works and this is true already?\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51100113,51100113,configure.ac
luke-jr,2016-01-28T16:12:01Z,"It was always easy to 'steal'. This simply makes it easy to extend without stealing: changing the package name itself (in AC_INIT) won't automatically change the substitution here (as with the original PR), and it can be easily amended to ""The %s and FooCoin developers"".\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51143474,51143474,configure.ac
laanwj,2016-01-29T12:18:16Z,"Yes, it's easy to do anyway, if you really want to, but it should be as hard as possible to do so _accidentally_.\nE.g. I strongly feel it should at least involve changing the source code, not just the build metadata.\n_Adding_ potential copyright holders in the build metadata is fine with me, although those in turn may have the same concern.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51254736,51254736,configure.ac
luke-jr,2016-01-29T18:10:43Z,"How about moving _COPYRIGHT_HOLDERS_SUBSTITUTION out of the top, down to the AC_SUBST area below?\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51293877,51293877,configure.ac
jtimon,2016-01-29T19:04:34Z,"This suggestion may sound stupid...but how about repeating the line if %s != ""Bitcoin Core"" (or just always repeating the line if that's too complicated)?\nThat way, when someone uses the code and wants to add something to the copyright, ""The Bitcoin Core Developers"" will be maintained first, before the modified one, which is what forks of this project should always do. \n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51300839,51300839,configure.ac
laanwj,2016-02-01T10:59:45Z,"Moving it doesn't solve my issue; to be clear: having the copyright in a autoconf variable means it is passed to the compiler as a `-D...` flag. I think this is ridiculous. Copyright should be in the code, not something that can be varied by changing a compiler argument.\n\n@jtimon's solution sounds somewhat better to me. It needs to be impossible to get rid of our copyright by just changing build",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51404444,51404444,configure.ac
luke-jr,2016-02-01T18:53:40Z,"The problem with simply moving this to the code, is that the copyright notice appears outside of code also (typically in single-line format).\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51462310,51462310,configure.ac
laanwj,2016-02-02T11:49:04Z,"OK, fair enough. In this case I only care about the copyright instance in the code (which will be shown with `--version` and in the about box) that should be resilient to change of compiler arguments.\n\nIf there are other ones that are also in metadata, having them be modifiable in other metadata doesn't bother me.\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51558067,51558067,configure.ac
luke-jr,2016-02-03T05:43:34Z,"Ok, how's this look now?\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51680925,51680925,configure.ac
laanwj,2016-02-04T12:05:52Z,"Looks good to me now, going to test\n",https://github.com/bitcoin/bitcoin/pull/7192#discussion_r51864015,51864015,configure.ac
