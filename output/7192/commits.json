[
  {
    "sha": "d5f46832de900cee0801ca40bba743c9564cccb8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWY0NjgzMmRlOTAwY2VlMDgwMWNhNDBiYmE3NDNjOTU2NGNjY2I4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-09T10:53:12Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-14T02:11:10Z"
      },
      "message": "Unify package name to as few places as possible without major changes",
      "tree": {
        "sha": "6cf53662ecd4e95a8803e7e51d6fe59f3e321708",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cf53662ecd4e95a8803e7e51d6fe59f3e321708"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5f46832de900cee0801ca40bba743c9564cccb8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5f46832de900cee0801ca40bba743c9564cccb8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5f46832de900cee0801ca40bba743c9564cccb8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5f46832de900cee0801ca40bba743c9564cccb8/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "348b281f8a672e02c066b452793f22231010fac1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/348b281f8a672e02c066b452793f22231010fac1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/348b281f8a672e02c066b452793f22231010fac1"
      }
    ],
    "stats": {
      "total": 164,
      "additions": 106,
      "deletions": 58
    },
    "files": [
      {
        "sha": "2aa493a6af6b48537cdc2c0601a601a9c03fef1f",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -38,7 +38,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n   done\n   if test \"x$bdbpath\" = \"xX\"; then\n     AC_MSG_RESULT([no])\n-    AC_MSG_ERROR([libdb_cxx headers missing, Bitcoin Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n   elif test \"x$bdb48path\" = \"xX\"; then\n     BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n     AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n@@ -60,7 +60,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     ])\n   done\n   if test \"x$BDB_LIBS\" = \"x\"; then\n-      AC_MSG_ERROR([libdb_cxx missing, Bitcoin Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+      AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n   fi\n   AC_SUBST(BDB_LIBS)\n ])"
      },
      {
        "sha": "5fe12fda9bb8e4ab5b8a3387e7a36099fe67b4db",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -220,7 +220,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n \n \n   dnl enable qt support\n-  AC_MSG_CHECKING(whether to build Bitcoin Core GUI)\n+  AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n   BITCOIN_QT_CHECK([\n     bitcoin_enable_qt=yes\n     bitcoin_enable_qt_test=yes"
      },
      {
        "sha": "eb920c47eb521e5e42f3cff196c92627015e6dc7",
        "filename": "libbitcoinconsensus.pc.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/libbitcoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/libbitcoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libbitcoinconsensus.pc.in?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -3,7 +3,7 @@ exec_prefix=@exec_prefix@\n libdir=@libdir@\n includedir=@includedir@\n \n-Name: Bitcoin Core consensus library\n+Name: @PACKAGE_NAME@ consensus library\n Description: Library for the Bitcoin consensus protocol.\n Version: @PACKAGE_VERSION@\n Libs: -L${libdir} -lbitcoinconsensus"
      },
      {
        "sha": "d1a9ed704026674c872692c021fd6242fb0d68a3",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -17,7 +17,7 @@\n   <string>APPL</string>\n \n   <key>CFBundleGetInfoString</key>\n-  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The Bitcoin Core developers</string>\n+  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The @PACKAGE_NAME@ developers</string>\n \n   <key>CFBundleShortVersionString</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@</string>"
      },
      {
        "sha": "045eb27f47dd509de591dc886f351ee1d889331c",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -70,6 +70,7 @@ def parse_po(text):\n #endif\n \"\"\")\n f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n+f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('PACKAGE_NAME'),))\n messages.sort(key=operator.itemgetter(0))\n for (msgid, msgstr) in messages:\n     if msgid != EMPTY:"
      },
      {
        "sha": "26d3822747e669bb00182a60f75231a707a29edf",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -6,7 +6,7 @@ SetCompressor /SOLID lzma\n # General Symbol Definitions\n !define REGKEY \"SOFTWARE\\$(^Name)\"\n !define VERSION @CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@\n-!define COMPANY \"Bitcoin Core project\"\n+!define COMPANY \"@PACKAGE_NAME@ project\"\n !define URL http://www.bitcoin.org/\n \n # MUI Symbol Definitions\n@@ -59,7 +59,7 @@ XPStyle on\n BrandingText \" \"\n ShowInstDetails show\n VIProductVersion ${VERSION}.@CLIENT_VERSION_BUILD@\n-VIAddVersionKey ProductName \"Bitcoin Core\"\n+VIAddVersionKey ProductName \"@PACKAGE_NAME@\"\n VIAddVersionKey ProductVersion \"${VERSION}\"\n VIAddVersionKey CompanyName \"${COMPANY}\"\n VIAddVersionKey CompanyWebsite \"${URL}\""
      },
      {
        "sha": "959eef8a23bb2921920024cccb4e99e1b9ef443e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -448,7 +448,8 @@ clean-local:\n \n .rc.o:\n \t@test -f $(WINDRES)\n-\t$(AM_V_GEN) $(WINDRES) -DWINDRES_PREPROC -i $< -o $@\n+\t## FIXME: How to get the appropriate modulename_CPPFLAGS in here?\n+\t$(AM_V_GEN) $(WINDRES) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) -DWINDRES_PREPROC -i $< -o $@\n \n .mm.o:\n \t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\"
      },
      {
        "sha": "c93667038fcb78b1ca56a062c1348c4581a57998",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -382,7 +382,7 @@ SECONDARY: $(QT_QM)\n \n qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) ../share/qt/extract_strings_qt.py $^\n+\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME=\"$(PACKAGE_NAME)\" ../share/qt/extract_strings_qt.py $^\n \n translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\""
      },
      {
        "sha": "58f8f1e8a23f956ced390a835192c214142958be",
        "filename": "src/bitcoin-cli-res.rc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/bitcoin-cli-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/bitcoin-cli-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli-res.rc?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -17,7 +17,7 @@ BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n             VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"bitcoin-cli (JSON-RPC client for Bitcoin Core)\"\n+            VALUE \"FileDescription\",    \"bitcoin-cli (JSON-RPC client for \" PACKAGE_NAME \")\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n             VALUE \"InternalName\",       \"bitcoin-cli\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR"
      },
      {
        "sha": "f8e3880ea295a464c111c0d6009ce3d8b69ff353",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -3,6 +3,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"chainparamsbase.h\"\n #include \"clientversion.h\"\n #include \"rpcclient.h\"\n@@ -68,10 +72,10 @@ static bool AppInitRPC(int argc, char* argv[])\n     //\n     ParseParameters(argc, argv);\n     if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-h\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\")) {\n-        std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";\n+        std::string strUsage = strprintf(_(\"%s RPC client version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\";\n         if (!mapArgs.count(\"-version\")) {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoin-cli [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] <command> [params]  \" + strprintf(_(\"Send command to %s\"), _(PACKAGE_NAME)) + \"\\n\" +\n                   \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n                   \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n "
      },
      {
        "sha": "aaa2ef128f4bb497c336b09512cefe8d728fc449",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"base58.h\"\n #include \"clientversion.h\"\n #include \"coins.h\"\n@@ -47,7 +51,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n     if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-h\") || mapArgs.count(\"-help\"))\n     {\n         // First part of help message is specific to this utility\n-        std::string strUsage = _(\"Bitcoin Core bitcoin-tx utility version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+        std::string strUsage = strprintf(_(\"%s bitcoin-tx utility version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n             _(\"Usage:\") + \"\\n\" +\n               \"  bitcoin-tx [options] <hex-tx> [commands]  \" + _(\"Update hex-encoded bitcoin transaction\") + \"\\n\" +\n               \"  bitcoin-tx [options] -create [commands]   \" + _(\"Create hex-encoded bitcoin transaction\") + \"\\n\" +"
      },
      {
        "sha": "440356aa8043abc6651864175ed908058ce76af9",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -3,6 +3,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"chainparams.h\"\n #include \"clientversion.h\"\n #include \"rpcserver.h\"\n@@ -74,7 +78,7 @@ bool AppInit(int argc, char* argv[])\n     // Process help and version before taking care about datadir\n     if (mapArgs.count(\"-?\") || mapArgs.count(\"-h\") ||  mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n-        std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n+        std::string strUsage = strprintf(_(\"%s Daemon\"), _(PACKAGE_NAME)) + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n \n         if (mapArgs.count(\"-version\"))\n         {\n@@ -83,7 +87,7 @@ bool AppInit(int argc, char* argv[])\n         else\n         {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoind [options]                     \" + _(\"Start Bitcoin Core Daemon\") + \"\\n\";\n+                  \"  bitcoind [options]                     \" + strprintf(_(\"Start %s Daemon\"), _(PACKAGE_NAME)) + \"\\n\";\n \n             strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n         }"
      },
      {
        "sha": "ba15ebf3bd370b03ed7a2f10c9f165cf0eec55e5",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -38,7 +38,7 @@\n #define DO_STRINGIZE(X) #X\n \n //! Copyright string used in Windows .rc files\n-#define COPYRIGHT_STR \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin Core Developers\"\n+#define COPYRIGHT_STR \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The \" PACKAGE_NAME \" Developers\"\n \n /**\n  * bitcoind-res.rc includes this file, but it cannot cope with real c++ code."
      },
      {
        "sha": "8d44f833a28994c826805778b2d0fc69447af2de",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -513,7 +513,7 @@ std::string HelpMessage(HelpMessageMode mode)\n std::string LicenseInfo()\n {\n     // todo: remove urls from translations on next change\n-    return FormatParagraph(strprintf(_(\"Copyright (C) 2009-%i The Bitcoin Core Developers\"), COPYRIGHT_YEAR)) + \"\\n\" +\n+    return FormatParagraph(strprintf(_(\"Copyright (C) 2009-%i The %s Developers\"), COPYRIGHT_YEAR, _(PACKAGE_NAME))) + \"\\n\" +\n            \"\\n\" +\n            FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +\n            \"\\n\" +\n@@ -997,7 +997,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // Sanity check\n     if (!InitSanityCheck())\n-        return InitError(_(\"Initialization sanity check failed. Bitcoin Core is shutting down.\"));\n+        return InitError(strprintf(_(\"Initialization sanity check failed. %s is shutting down.\"), _(PACKAGE_NAME)));\n \n     std::string strDataDir = GetDataDir().string();\n #ifdef ENABLE_WALLET\n@@ -1013,9 +1013,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     try {\n         static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n         if (!lock.try_lock())\n-            return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+            return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. %s is probably already running.\"), strDataDir, _(PACKAGE_NAME)));\n     } catch(const boost::interprocess::interprocess_exception& e) {\n-        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\") + \" %s.\", strDataDir, e.what()));\n+        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. %s is probably already running.\") + \" %s.\", strDataDir, _(PACKAGE_NAME), e.what()));\n     }\n \n #ifndef WIN32\n@@ -1423,10 +1423,10 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                              \" or address book entries might be missing or incorrect.\"));\n             }\n             else if (nLoadWalletRet == DB_TOO_NEW)\n-                strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\") << \"\\n\";\n+                strErrors << strprintf(_(\"Error loading wallet.dat: Wallet requires newer version of %s\"), _(PACKAGE_NAME)) << \"\\n\";\n             else if (nLoadWalletRet == DB_NEED_REWRITE)\n             {\n-                strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin Core to complete\") << \"\\n\";\n+                strErrors << strprintf(_(\"Wallet needed to be rewritten: restart %s to complete\"), _(PACKAGE_NAME)) << \"\\n\";\n                 LogPrintf(\"%s\", strErrors.str());\n                 return InitError(strErrors.str());\n             }"
      },
      {
        "sha": "2b804b0b44cd3a2e69b82e4c3d28beb8b2ec0c4d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -1849,7 +1849,7 @@ bool BindListenPort(const CService &addrBind, string& strError, bool fWhiteliste\n     {\n         int nErr = WSAGetLastError();\n         if (nErr == WSAEADDRINUSE)\n-            strError = strprintf(_(\"Unable to bind to %s on this computer. Bitcoin Core is probably already running.\"), addrBind.ToString());\n+            strError = strprintf(_(\"Unable to bind to %s on this computer. %s is probably already running.\"), addrBind.ToString(), _(PACKAGE_NAME));\n         else\n             strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %s)\"), addrBind.ToString(), NetworkErrorString(nErr));\n         LogPrintf(\"%s\\n\", strError);"
      },
      {
        "sha": "e8e5825d1ab85e17ae3e6d1c8ee44a8f2753e3b6",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"askpassphrasedialog.h\"\n #include \"ui_askpassphrasedialog.h\"\n \n@@ -119,9 +123,9 @@ void AskPassphraseDialog::accept()\n                 {\n                     QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n                                          \"<qt>\" +\n-                                         tr(\"Bitcoin Core will close now to finish the encryption process. \"\n+                                         tr(\"%1 will close now to finish the encryption process. \"\n                                          \"Remember that encrypting your wallet cannot fully protect \"\n-                                         \"your bitcoins from being stolen by malware infecting your computer.\") +\n+                                         \"your bitcoins from being stolen by malware infecting your computer.\").arg(tr(PACKAGE_NAME)) +\n                                          \"<br><br><b>\" +\n                                          tr(\"IMPORTANT: Any previous backups you have made of your wallet file \"\n                                          \"should be replaced with the newly generated, encrypted wallet file. \""
      },
      {
        "sha": "e108c84e39529ac896e35e488439b20588c670df",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -578,14 +578,14 @@ int main(int argc, char *argv[])\n     /// - Do not call GetDataDir(true) before this step finishes\n     if (!boost::filesystem::is_directory(GetDataDir(false)))\n     {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"),\n+        QMessageBox::critical(0, QObject::tr(PACKAGE_NAME),\n                               QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(mapArgs[\"-datadir\"])));\n         return 1;\n     }\n     try {\n         ReadConfigFile(mapArgs, mapMultiArgs);\n     } catch (const std::exception& e) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"),\n+        QMessageBox::critical(0, QObject::tr(PACKAGE_NAME),\n                               QObject::tr(\"Error: Cannot parse configuration file: %1. Only use key=value syntax.\").arg(e.what()));\n         return false;\n     }\n@@ -600,7 +600,7 @@ int main(int argc, char *argv[])\n     try {\n         SelectParams(ChainNameFromCommandLine());\n     } catch(std::exception &e) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: %1\").arg(e.what()));\n+        QMessageBox::critical(0, QObject::tr(PACKAGE_NAME), QObject::tr(\"Error: %1\").arg(e.what()));\n         return 1;\n     }\n #ifdef ENABLE_WALLET\n@@ -658,7 +658,7 @@ int main(int argc, char *argv[])\n         app.createWindow(networkStyle.data());\n         app.requestInitialize();\n #if defined(Q_OS_WIN) && QT_VERSION >= 0x050000\n-        WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"Bitcoin Core didn't yet exit safely...\"), (HWND)app.getMainWinId());\n+        WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(QObject::tr(PACKAGE_NAME)), (HWND)app.getMainWinId());\n #endif\n         app.exec();\n         app.requestShutdown();"
      },
      {
        "sha": "811f27f97bd431a79897c534e2631ae4e541615a",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"bitcoingui.h\"\n \n #include \"bitcoinunits.h\"\n@@ -105,7 +109,7 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *n\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n-    QString windowTitle = tr(\"Bitcoin Core\") + \" - \";\n+    QString windowTitle = tr(PACKAGE_NAME) + \" - \";\n #ifdef ENABLE_WALLET\n     /* if compiled with wallet support, -disablewallet can still disable the wallet */\n     enableWallet = !GetBoolArg(\"-disablewallet\", false);\n@@ -303,14 +307,14 @@ void BitcoinGUI::createActions()\n     quitAction->setStatusTip(tr(\"Quit application\"));\n     quitAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_Q));\n     quitAction->setMenuRole(QAction::QuitRole);\n-    aboutAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&About Bitcoin Core\"), this);\n-    aboutAction->setStatusTip(tr(\"Show information about Bitcoin Core\"));\n+    aboutAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&About %1\").arg(tr(PACKAGE_NAME)), this);\n+    aboutAction->setStatusTip(tr(\"Show information about %1\").arg(tr(PACKAGE_NAME)));\n     aboutAction->setMenuRole(QAction::AboutRole);\n     aboutQtAction = new QAction(platformStyle->TextColorIcon(\":/icons/about_qt\"), tr(\"About &Qt\"), this);\n     aboutQtAction->setStatusTip(tr(\"Show information about Qt\"));\n     aboutQtAction->setMenuRole(QAction::AboutQtRole);\n     optionsAction = new QAction(platformStyle->TextColorIcon(\":/icons/options\"), tr(\"&Options...\"), this);\n-    optionsAction->setStatusTip(tr(\"Modify configuration options for Bitcoin Core\"));\n+    optionsAction->setStatusTip(tr(\"Modify configuration options for %1\").arg(tr(PACKAGE_NAME)));\n     optionsAction->setMenuRole(QAction::PreferencesRole);\n     toggleHideAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&Show / Hide\"), this);\n     toggleHideAction->setStatusTip(tr(\"Show or hide the main Window\"));\n@@ -340,7 +344,7 @@ void BitcoinGUI::createActions()\n \n     showHelpMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n-    showHelpMessageAction->setStatusTip(tr(\"Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options\"));\n+    showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(tr(PACKAGE_NAME)));\n \n     connect(quitAction, SIGNAL(triggered()), qApp, SLOT(quit()));\n     connect(aboutAction, SIGNAL(triggered()), this, SLOT(aboutClicked()));\n@@ -518,7 +522,7 @@ void BitcoinGUI::createTrayIcon(const NetworkStyle *networkStyle)\n {\n #ifndef Q_OS_MAC\n     trayIcon = new QSystemTrayIcon(this);\n-    QString toolTip = tr(\"Bitcoin Core client\") + \" \" + networkStyle->getTitleAddText();\n+    QString toolTip = tr(\"%1 client\").arg(tr(PACKAGE_NAME)) + \" \" + networkStyle->getTitleAddText();\n     trayIcon->setToolTip(toolTip);\n     trayIcon->setIcon(networkStyle->getTrayAndWindowIcon());\n     trayIcon->show();"
      },
      {
        "sha": "7a3d29417ee1a0e1858253458d29d871c25aee63",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -415,7 +415,7 @@\n          <item>\n           <widget class=\"QPushButton\" name=\"openDebugLogfileButton\">\n            <property name=\"toolTip\">\n-            <string>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</string>\n+            <string>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</string>\n            </property>\n            <property name=\"text\">\n             <string>&amp;Open</string>"
      },
      {
        "sha": "b7f941f70b46cda07f7a60cf4e32c3f1dff822b7",
        "filename": "src/qt/forms/helpmessagedialog.ui",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/forms/helpmessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/forms/helpmessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/helpmessagedialog.ui?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -10,9 +10,6 @@\n     <height>400</height>\n    </rect>\n   </property>\n-  <property name=\"windowTitle\">\n-   <string notr=\"true\">Bitcoin Core - Command-line options</string>\n-  </property>\n   <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n    <property name=\"spacing\">\n     <number>0</number>"
      },
      {
        "sha": "e4ff3da1abadb16bae6b0f50e4a61645875a09dc",
        "filename": "src/qt/forms/intro.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -15,12 +15,12 @@\n   </property>\n   <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n    <item>\n-    <widget class=\"QLabel\" name=\"label_2\">\n+    <widget class=\"QLabel\" name=\"welcomeLabel\">\n      <property name=\"styleSheet\">\n       <string notr=\"true\">QLabel { font-style:italic; }</string>\n      </property>\n      <property name=\"text\">\n-      <string>Welcome to Bitcoin Core.</string>\n+      <string>Welcome to %1.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n@@ -44,9 +44,9 @@\n     </spacer>\n    </item>\n    <item>\n-    <widget class=\"QLabel\" name=\"label_4\">\n+    <widget class=\"QLabel\" name=\"storageLabel\">\n      <property name=\"text\">\n-      <string>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</string>\n+      <string>As this is the first time the program is launched, you can choose where %1 will store its data.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n@@ -56,7 +56,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n      <property name=\"text\">\n-      <string>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n+      <string>%1 will download and store a copy of the Bitcoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>"
      },
      {
        "sha": "c712e6ea017936155bcd69516e6862ec34be01d6",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -30,10 +30,10 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"bitcoinAtStartup\">\n          <property name=\"toolTip\">\n-          <string>Automatically start Bitcoin Core after logging in to the system.</string>\n+          <string>Automatically start %1 after logging in to the system.</string>\n          </property>\n          <property name=\"text\">\n-          <string>&amp;Start Bitcoin Core on system login</string>\n+          <string>&amp;Start %1 on system login</string>\n          </property>\n         </widget>\n        </item>\n@@ -562,7 +562,7 @@\n          <item>\n           <widget class=\"QValueComboBox\" name=\"lang\">\n            <property name=\"toolTip\">\n-            <string>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</string>\n+            <string>The user interface language can be set here. This setting will take effect after restarting %1.</string>\n            </property>\n           </widget>\n          </item>"
      },
      {
        "sha": "8d1dc349db93b1c39254f698f6b011d1e9b11874",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"intro.h\"\n #include \"ui_intro.h\"\n \n@@ -112,7 +116,9 @@ Intro::Intro(QWidget *parent) :\n     signalled(false)\n {\n     ui->setupUi(this);\n-    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    ui->welcomeLabel->setText(ui->welcomeLabel->text().arg(tr(PACKAGE_NAME)));\n+    ui->storageLabel->setText(ui->storageLabel->text().arg(tr(PACKAGE_NAME)));\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(tr(PACKAGE_NAME)).arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n     startThread();\n }\n \n@@ -181,7 +187,7 @@ void Intro::pickDataDirectory()\n                 TryCreateDirectory(GUIUtil::qstringToBoostPath(dataDir));\n                 break;\n             } catch (const fs::filesystem_error&) {\n-                QMessageBox::critical(0, tr(\"Bitcoin Core\"),\n+                QMessageBox::critical(0, tr(PACKAGE_NAME),\n                     tr(\"Error: Specified data directory \\\"%1\\\" cannot be created.\").arg(dataDir));\n                 /* fall through, back to choosing screen */\n             }"
      },
      {
        "sha": "79a74061290748c0b2b0f9cad98020a97eec8c6e",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -80,6 +80,11 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n \n     /* Display elements init */\n     QDir translations(\":translations\");\n+\n+    ui->bitcoinAtStartup->setToolTip(ui->bitcoinAtStartup->toolTip().arg(tr(PACKAGE_NAME)));\n+    ui->bitcoinAtStartup->setText(ui->bitcoinAtStartup->text().arg(tr(PACKAGE_NAME)));\n+\n+    ui->lang->setToolTip(ui->lang->toolTip().arg(tr(PACKAGE_NAME)));\n     ui->lang->addItem(QString(\"(\") + tr(\"default\") + QString(\")\"), QVariant(\"\"));\n     Q_FOREACH(const QString &langStr, translations.entryList())\n     {"
      },
      {
        "sha": "19c3d5d97d6568362325748a8b66fd4783502e24",
        "filename": "src/qt/res/bitcoin-qt-res.rc",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/res/bitcoin-qt-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/res/bitcoin-qt-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt-res.rc?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -19,13 +19,13 @@ BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n             VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"Bitcoin Core (GUI node for Bitcoin)\"\n+            VALUE \"FileDescription\",    PACKAGE_NAME \" (GUI node for Bitcoin)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n             VALUE \"InternalName\",       \"bitcoin-qt\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n             VALUE \"OriginalFilename\",   \"bitcoin-qt.exe\"\n-            VALUE \"ProductName\",        \"Bitcoin Core\"\n+            VALUE \"ProductName\",        PACKAGE_NAME\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "b60aa00f13092594f04b33e56cd7440027acf08c",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"rpcconsole.h\"\n #include \"ui_debugwindow.h\"\n \n@@ -250,6 +254,8 @@ RPCConsole::RPCConsole(const PlatformStyle *platformStyle, QWidget *parent) :\n     ui->setupUi(this);\n     GUIUtil::restoreWindowGeometry(\"nRPCConsoleWindow\", this->size(), this);\n \n+    ui->openDebugLogfileButton->setToolTip(ui->openDebugLogfileButton->toolTip().arg(tr(PACKAGE_NAME)));\n+\n     if (platformStyle->getImagesOnButtons()) {\n         ui->openDebugLogfileButton->setIcon(platformStyle->SingleColorIcon(\":/icons/export\"));\n     }\n@@ -478,7 +484,7 @@ void RPCConsole::clear()\n             ).arg(fixedFontInfo.family(), ptSize)\n         );\n \n-    message(CMD_REPLY, (tr(\"Welcome to the Bitcoin Core RPC console.\") + \"<br>\" +\n+    message(CMD_REPLY, (tr(\"Welcome to the %1 RPC console.\").arg(tr(PACKAGE_NAME)) + \"<br>\" +\n                         tr(\"Use up and down arrows to navigate history, and <b>Ctrl-L</b> to clear screen.\") + \"<br>\" +\n                         tr(\"Type <b>help</b> for an overview of available commands.\")), true);\n }"
      },
      {
        "sha": "339b684426718c148d64ef4793346e07915ad405",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"splashscreen.h\"\n \n #include \"networkstyle.h\"\n@@ -38,9 +42,9 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n #endif\n \n     // define text to place\n-    QString titleText       = tr(\"Bitcoin Core\");\n+    QString titleText       = tr(PACKAGE_NAME);\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n-    QString copyrightText   = QChar(0xA9)+QString(\" 2009-%1 \").arg(COPYRIGHT_YEAR) + QString(tr(\"The Bitcoin Core developers\"));\n+    QString copyrightText   = QChar(0xA9)+QString(\" 2009-%1 \").arg(COPYRIGHT_YEAR) + QString(tr(\"The %1 developers\").arg(tr(PACKAGE_NAME)));\n     QString titleAddText    = networkStyle->getTitleAddText();\n \n     QString font            = QApplication::font().toString();"
      },
      {
        "sha": "3e96f26b3ab0fb6de55fb7127ed837a1c1d1fb82",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"utilitydialog.h\"\n \n #include \"ui_helpmessagedialog.h\"\n@@ -30,7 +34,7 @@ HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool about) :\n {\n     ui->setupUi(this);\n \n-    QString version = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n+    QString version = tr(PACKAGE_NAME) + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n     /* On x86 add a bit specifier to the version so that users can distinguish between\n      * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambigious.\n      */\n@@ -42,7 +46,7 @@ HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool about) :\n \n     if (about)\n     {\n-        setWindowTitle(tr(\"About Bitcoin Core\"));\n+        setWindowTitle(tr(\"About %1\").arg(tr(PACKAGE_NAME)));\n \n         /// HTML-format the license message from the core\n         QString licenseInfo = QString::fromStdString(LicenseInfo());\n@@ -144,7 +148,7 @@ ShutdownWindow::ShutdownWindow(QWidget *parent, Qt::WindowFlags f):\n {\n     QVBoxLayout *layout = new QVBoxLayout();\n     layout->addWidget(new QLabel(\n-        tr(\"Bitcoin Core is shutting down...\") + \"<br /><br />\" +\n+        tr(\"%1 is shutting down...\").arg(tr(PACKAGE_NAME)) + \"<br /><br />\" +\n         tr(\"Do not shut down the computer until this window disappears.\")));\n     setLayout(layout);\n }"
      },
      {
        "sha": "2eaa9e4c815121f51d6a72d3a595156dfb3f50cc",
        "filename": "src/timedata.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f46832de900cee0801ca40bba743c9564cccb8/src/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f46832de900cee0801ca40bba743c9564cccb8/src/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.cpp?ref=d5f46832de900cee0801ca40bba743c9564cccb8",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include \"timedata.h\"\n \n #include \"netbase.h\"\n@@ -99,7 +103,7 @@ void AddTimeData(const CNetAddr& ip, int64_t nOffsetSample)\n                 if (!fMatch)\n                 {\n                     fDone = true;\n-                    string strMessage = _(\"Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.\");\n+                    string strMessage = strprintf(_(\"Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.\"), _(PACKAGE_NAME));\n                     strMiscWarning = strMessage;\n                     uiInterface.ThreadSafeMessageBox(strMessage, \"\", CClientUIInterface::MSG_WARNING);\n                 }"
      }
    ]
  },
  {
    "sha": "1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTZjNjdjOGY1MDdhZDY5MThiNmEyN2NhYjllYjczNGNjMWQ0YmQ0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-13T05:54:21Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-18T12:36:10Z"
      },
      "message": "Parameterise 2009 in translatable copyright strings",
      "tree": {
        "sha": "3414d777abc4e569b71ba9c444098ef147ccf8b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3414d777abc4e569b71ba9c444098ef147ccf8b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d5f46832de900cee0801ca40bba743c9564cccb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5f46832de900cee0801ca40bba743c9564cccb8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d5f46832de900cee0801ca40bba743c9564cccb8"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4bcf8ec78b110198fda7a1424f54bfb9154e5226",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
        "patch": "@@ -513,7 +513,7 @@ std::string HelpMessage(HelpMessageMode mode)\n std::string LicenseInfo()\n {\n     // todo: remove urls from translations on next change\n-    return FormatParagraph(strprintf(_(\"Copyright (C) 2009-%i The %s Developers\"), COPYRIGHT_YEAR, _(PACKAGE_NAME))) + \"\\n\" +\n+    return FormatParagraph(strprintf(_(\"Copyright (C) %i-%i The %s Developers\"), 2009, COPYRIGHT_YEAR, _(PACKAGE_NAME))) + \"\\n\" +\n            \"\\n\" +\n            FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +\n            \"\\n\" +"
      },
      {
        "sha": "ad8d7b3f236ced19a706b557308cdac2153c30f5",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
        "patch": "@@ -44,7 +44,7 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n     // define text to place\n     QString titleText       = tr(PACKAGE_NAME);\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n-    QString copyrightText   = QChar(0xA9)+QString(\" 2009-%1 \").arg(COPYRIGHT_YEAR) + QString(tr(\"The %1 developers\").arg(tr(PACKAGE_NAME)));\n+    QString copyrightText   = QChar(0xA9)+QString(\" %1-%2 \").arg(2009).arg(COPYRIGHT_YEAR) + QString(tr(\"The %1 developers\").arg(tr(PACKAGE_NAME)));\n     QString titleAddText    = networkStyle->getTitleAddText();\n \n     QString font            = QApplication::font().toString();"
      }
    ]
  },
  {
    "sha": "63bcdc5227578015870c1eedc8c59861e9734971",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2JjZGM1MjI3NTc4MDE1ODcwYzFlZWRjOGM1OTg2MWU5NzM0OTcx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-10T21:49:27Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T03:24:21Z"
      },
      "message": "More complicated package name substitution for Mac deployment",
      "tree": {
        "sha": "4ddf406502f60c293bb8a29d3e680e5891910401",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ddf406502f60c293bb8a29d3e680e5891910401"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63bcdc5227578015870c1eedc8c59861e9734971",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63bcdc5227578015870c1eedc8c59861e9734971",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63bcdc5227578015870c1eedc8c59861e9734971",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63bcdc5227578015870c1eedc8c59861e9734971/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4"
      }
    ],
    "stats": {
      "total": 179,
      "additions": 156,
      "deletions": 23
    },
    "files": [
      {
        "sha": "673a0d0a5961295a9982bc9e997239e140a073ba",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -41,14 +41,15 @@ matrix:\n     - compiler: \": No wallet\"\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n-      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n+      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev libz-dev libbz2-dev libffi-dev libtiff-tools python-dev python-pip\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n   exclude:\n     - compiler: gcc\n install:\n     - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n     - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n+    - if [[ \"$HOST\" =~ apple ]]; then pip install --user cairosvg mac_alias ds_store; export PATH=\"$HOME/.local/bin:$PATH\"; ( wget 'https://bitbucket.org/al45tair/ds_store/get/c80c23706eae.tar.gz' && tar -xzvpf c80c23706eae.tar.gz && cd al45tair-ds_store-c80c23706eae/ && python setup.py install --user; ) fi\n before_script:\n     - unset CC; unset CXX\n     - mkdir -p depends/SDKs depends/sdk-sources"
      },
      {
        "sha": "f9fca357c55cf65573030094313e214c5eca6d51",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 26,
        "deletions": 13,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -14,12 +14,18 @@ BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n BITCOIN_CLI_BIN=$(top_builddir)/src/bitcoin-cli$(EXEEXT)\n BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n \n+empty :=\n+space := $(empty) $(empty)\n+\n OSX_APP=Bitcoin-Qt.app\n-OSX_DMG=Bitcoin-Core.dmg\n+OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n+OSX_DMG = $(OSX_VOLNAME).dmg\n+OSX_BACKGROUND_SVG=background.svg\n OSX_BACKGROUND_IMAGE=background.tiff\n+OSX_BACKGROUND_IMAGE_DPIS=36 72\n+OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_BASE_LPROJ_DIR=$(top_srcdir)/contrib/macdeploy/Base.lproj/InfoPlist.strings\n OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n@@ -31,9 +37,9 @@ WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n   $(top_srcdir)/doc/README_windows.txt\n \n-OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) $(OSX_BASE_LPROJ_DIR) \\\n-  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_IMAGE) \\\n-  $(top_srcdir)/contrib/macdeploy/DS_Store \\\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n+  $(OSX_DSSTORE_GEN) \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n@@ -87,17 +93,20 @@ $(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n-$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings: $(OSX_BASE_LPROJ_DIR)\n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n+\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n   $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n   $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n+osx_volname:\n+\techo $(OSX_VOLNAME) >$@\n+\n if BUILD_DARWIN\n $(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2\n+\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n \n deploydir: $(OSX_DMG)\n else\n@@ -111,13 +120,17 @@ $(APP_DIST_DIR)/Applications:\n $(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"Bitcoin-Core\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n \n-$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_IMAGE)\n+dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(CAIROSVG) -fpng -d$* - | $(IMAGEMAGICK_CONVERT) - $@\n+OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n+$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n \t$(MKDIR_P) $(@D)\n-\t$(INSTALL) $< $@\n-$(APP_DIST_DIR)/.DS_Store: contrib/macdeploy/DS_Store\n-\t$(INSTALL) $< $@\n+\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n+\n+$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n+\t$< \"$@\" \"$(OSX_VOLNAME)\"\n \n $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n \tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2"
      },
      {
        "sha": "732f550be29e446c30b8b1ecbbc7d2d8c69de5a3",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -314,6 +314,9 @@ case $host in\n            AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n            AC_PATH_TOOL([OTOOL], [otool], otool)\n            AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n+           AC_PATH_PROGS([CAIROSVG], [cairosvg cairosvg-py3 cairosvg-py2],cairosvg)\n+           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n+           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n \n            dnl libtool will try to strip the static lib, which is a problem for\n            dnl cross-builds because strip attempts to call a hard-coded ld,"
      },
      {
        "sha": "d349a13dd23576a52ba004eec789dbe2ef3a419a",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -33,6 +33,7 @@ script: |\n   SIGNED=bitcoin-osx-signed.dmg\n \n   tar -xf ${UNSIGNED}\n+  OSX_VOLNAME=\"$(cat osx_volname)\"\n   ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"Bitcoin-Core\" -no-pad -r -apple -o uncompressed.dmg signed-app\n+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -apple -o uncompressed.dmg signed-app\n   ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "13dbe890c98abb56306fbc9f8180b52520b67f67",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -10,21 +10,33 @@ packages:\n - \"git-core\"\n - \"pkg-config\"\n - \"autoconf\"\n+- \"libffi-dev\"\n+- \"libtiff-tools\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n - \"cmake\"\n+- \"imagemagick\"\n - \"libcap-dev\"\n+- \"libxslt-dev\"\n - \"libz-dev\"\n - \"libbz2-dev\"\n+- \"python-cairo\"\n+- \"python-dev\"\n+- \"python-pip\"\n+- \"fonts-tuffy\"\n reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n - \"MacOSX10.9.sdk.tar.gz\"\n script: |\n+  # FIXME: We should probably install these in some other (cachable) way, but the depends system doesn't appear to make native packages available to Core's build system itself?\n+  pip install --user mac_alias ds_store cairosvg cssselect tinycss lxml\n+  export PATH=\"$HOME/.local/bin:$PATH\"\n+\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-apple-darwin11\"\n   CONFIGFLAGS=\"--enable-reduce-exports GENISOIMAGE=$WRAP_DIR/genisoimage\"\n@@ -107,8 +119,11 @@ script: |\n     make ${MAKEOPTS}\n     make install-strip\n \n+    make osx_volname\n     make deploydir\n+    OSX_VOLNAME=\"$(cat osx_volname)\"\n     mkdir -p unsigned-app-${i}\n+    cp osx_volname unsigned-app-${i}/\n     cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n     cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n     cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n@@ -120,7 +135,7 @@ script: |\n     popd\n \n     make deploy\n-    ${WRAP_DIR}/dmg dmg Bitcoin-Core.dmg ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n+    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n \n     cd installed\n     find . -name \"lib*.la\" -delete"
      },
      {
        "sha": "b259ea141c00afdddd95c9c78df1b856d5b86f2d",
        "filename": "contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/Base.lproj/InfoPlist.strings",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/Base.lproj/InfoPlist.strings?ref=1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4",
        "patch": "@@ -1 +0,0 @@\n-{\tCFBundleDisplayName = \"Bitcoin Core\"; CFBundleName = \"Bitcoin Core\"; }"
      },
      {
        "sha": "db9d16f1d700f18b64edafa0f8d981a680567b4d",
        "filename": "contrib/macdeploy/DS_Store",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/DS_Store",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/DS_Store",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/DS_Store?ref=1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4"
      },
      {
        "sha": "f88a2ae74bdb33afc2806b6403ea8c0191b096ca",
        "filename": "contrib/macdeploy/background.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/background.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/background.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.png?ref=1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4"
      },
      {
        "sha": "fdc4f4ca4a07ea4c6082ee1357b6ec7e8db99d72",
        "filename": "contrib/macdeploy/background.psd",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/background.psd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/background.psd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.psd?ref=1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4"
      },
      {
        "sha": "6ab6a23e637ab004b35276be1f2efa826831b1fa",
        "filename": "contrib/macdeploy/background.svg",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n+ \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n+<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n+\t<!-- kate: space-indent off;\n+\tCopyright (c) 2011-2013 The Bitcoin Core developers\n+\tDistributed under the MIT software license, see the accompanying\n+\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\t-->\n+\t<style type=\"text/css\"><![CDATA[\n+\t\ttext {\n+\t\t\tfont-family: \"Tuffy\";\n+\t\t\tfont-size: 86px;\n+\t\t\tfill: gray;\n+\t\t\ttext-anchor: middle;\n+\t\t}\n+\t]]></style>\n+\t<defs>\n+\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n+\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n+\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n+\t\t</linearGradient>\n+\t</defs>\n+\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n+\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n+\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n+\t</g>\n+\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n+\tfill=\"#000000\" stroke=\"none\">\n+\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n+\t</g>\n+</svg>"
      },
      {
        "sha": "4b44ac672e627be82bb9b74dac0016057b11c126",
        "filename": "contrib/macdeploy/background.tiff",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/background.tiff",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/background.tiff",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.tiff?ref=1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4"
      },
      {
        "sha": "4858183f75c382a9b8d75ae4fb8a74abd830615f",
        "filename": "contrib/macdeploy/background@2x.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/background@2x.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4/contrib/macdeploy/background@2x.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background@2x.png?ref=1a6c67c8f507ad6918b6a27cab9eb734cc1d4bd4"
      },
      {
        "sha": "8481e903a0d12e1791981230e89894577c2d8e09",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2013-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import biplist\n+from ds_store import DSStore\n+from mac_alias import Alias\n+import sys\n+\n+output_file = sys.argv[1]\n+package_name_ns = sys.argv[2]\n+\n+ds = DSStore.open(output_file, 'w+')\n+ds['.']['bwsp'] = {\n+    'ShowStatusBar': False,\n+    'WindowBounds': '{{300, 280}, {500, 343}}',\n+    'ContainerShowSidebar': False,\n+    'SidebarWidth': 0,\n+    'ShowTabView': False,\n+    'PreviewPaneVisibility': False,\n+    'ShowToolbar': False,\n+    'ShowSidebar': False,\n+    'ShowPathbar': True\n+}\n+\n+icvp = {\n+    'gridOffsetX': 0.0,\n+    'textSize': 12.0,\n+    'viewOptionsVersion': 1,\n+    'backgroundImageAlias': '\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundColorBlue': 1.0,\n+    'iconSize': 96.0,\n+    'backgroundColorGreen': 1.0,\n+    'arrangeBy': 'none',\n+    'showIconPreview': True,\n+    'gridSpacing': 100.0,\n+    'gridOffsetY': 0.0,\n+    'showItemInfo': False,\n+    'labelOnBottom': True,\n+    'backgroundType': 2,\n+    'backgroundColorRed': 1.0\n+}\n+alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n+alias.volume.name = package_name_ns\n+alias.volume.posix_path = '/Volumes/' + package_name_ns\n+alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n+icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n+ds['.']['icvp'] = icvp\n+\n+ds['.']['vSrn'] = ('long', 1)\n+\n+ds['Applications']['Iloc'] = (370, 156)\n+ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+\n+ds.flush()\n+ds.close()"
      },
      {
        "sha": "7e6270c743e3f00a0571a28847e5d40f882a2887",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -495,6 +495,7 @@ ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fan\n ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n+ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n \n config = ap.parse_args()\n \n@@ -596,6 +597,13 @@ if os.path.exists(\"dist\"):\n \n # ------------------------------------------------\n \n+if len(config.volname) == 1:\n+    volname = config.volname[0]\n+else:\n+    volname = app_bundle_name\n+\n+# ------------------------------------------------\n+\n target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n \n if verbose >= 2:\n@@ -757,7 +765,7 @@ if config.dmg is not None:\n     \n     if fancy is None:\n         try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=\"Bitcoin-Core\", ov=True)\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n     else:\n@@ -772,7 +780,7 @@ if config.dmg is not None:\n         if verbose >= 3:\n             print \"Creating temp image for modification...\"\n         try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=\"Bitcoin-Core\", ov=True)\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n@@ -837,7 +845,7 @@ if config.dmg is not None:\n                 items_positions.append(itemscript.substitute(params))\n \n         params = {\n-            \"disk\" : \"Bitcoin-Core\",\n+            \"disk\" : volname,\n             \"window_bounds\" : \"300,300,800,620\",\n             \"icon_size\" : \"96\",\n             \"background_commands\" : \"\","
      },
      {
        "sha": "c13efaa145c833e693004a245f7ad1d66d1d293d",
        "filename": "doc/README_osx.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63bcdc5227578015870c1eedc8c59861e9734971/doc/README_osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63bcdc5227578015870c1eedc8c59861e9734971/doc/README_osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.txt?ref=63bcdc5227578015870c1eedc8c59861e9734971",
        "patch": "@@ -63,9 +63,8 @@ functionality is broken. Only the compression feature is currently used.\n Ideally, the creation could be fixed and genisoimage would no longer be necessary.\n \n Background images and other features can be added to DMG files by inserting a\n-.DS_Store before creation. The easiest way to create this file is to build a\n-DMG without one, move it to a device running OS X, customize the layout, then\n-grab the .DS_Store file for later use. That is the approach taken here.\n+.DS_Store before creation. This is generated by the script\n+contrib/macdeploy/custom_dsstore.py.\n \n As of OS X Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n requirement in order to satisfy the new Gatekeeper requirements. Because this"
      }
    ]
  },
  {
    "sha": "e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjExYjZlMzI5MGVlMDhiNWM3N2I2ZDY4ZjkwNmNlNDhjYzU3MzFk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-17T20:40:05Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T04:37:45Z"
      },
      "message": "macdeploy: Use rsvg-convert rather than cairosvg",
      "tree": {
        "sha": "45c6dca9e9bab44e892894386dd9f0f8a46cb76d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45c6dca9e9bab44e892894386dd9f0f8a46cb76d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63bcdc5227578015870c1eedc8c59861e9734971",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63bcdc5227578015870c1eedc8c59861e9734971",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63bcdc5227578015870c1eedc8c59861e9734971"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 6,
      "deletions": 8
    },
    "files": [
      {
        "sha": "28dcfad0b8bff88dd2926acf7b4a1ff687fe503c",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
        "patch": "@@ -41,15 +41,15 @@ matrix:\n     - compiler: \": No wallet\"\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n-      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev libz-dev libbz2-dev libffi-dev libtiff-tools python-dev python-pip\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n+      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python-pip\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n   exclude:\n     - compiler: gcc\n install:\n     - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n     - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n-    - if [[ \"$HOST\" =~ apple ]]; then pip install --user cairosvg mac_alias ds_store; export PATH=\"$HOME/.local/bin:$PATH\"; ( wget 'https://bitbucket.org/al45tair/ds_store/get/c80c23706eae.tar.gz' && tar -xzvpf c80c23706eae.tar.gz && cd al45tair-ds_store-c80c23706eae/ && python setup.py install --user; ) fi\n+    - if [[ \"$HOST\" =~ apple ]]; then pip install --user mac_alias ds_store; export PATH=\"$HOME/.local/bin:$PATH\"; ( wget 'https://bitbucket.org/al45tair/ds_store/get/c80c23706eae.tar.gz' && tar -xzvpf c80c23706eae.tar.gz && cd al45tair-ds_store-c80c23706eae/ && python setup.py install --user; ) fi\n before_script:\n     - unset CC; unset CXX\n     - mkdir -p depends/SDKs depends/sdk-sources"
      },
      {
        "sha": "45227849712027136ff4311c875c172162525ff1",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
        "patch": "@@ -123,7 +123,7 @@ $(OSX_DMG): $(APP_DIST_EXTRAS)\n \t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n \n dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(CAIROSVG) -fpng -d$* - | $(IMAGEMAGICK_CONVERT) - $@\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n \t$(MKDIR_P) $(@D)"
      },
      {
        "sha": "b555b11ff908d026c6010dee9d1ba28ff6ead1d6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
        "patch": "@@ -314,7 +314,7 @@ case $host in\n            AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n            AC_PATH_TOOL([OTOOL], [otool], otool)\n            AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n-           AC_PATH_PROGS([CAIROSVG], [cairosvg cairosvg-py3 cairosvg-py2],cairosvg)\n+           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n            AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n            AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n "
      },
      {
        "sha": "f7b68739e715b6d1bedc97f07fd82c577bed5f89",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e611b6e3290ee08b5c77b6d68f906ce48cc5731d/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
        "patch": "@@ -10,7 +10,7 @@ packages:\n - \"git-core\"\n - \"pkg-config\"\n - \"autoconf\"\n-- \"libffi-dev\"\n+- \"librsvg2-bin\"\n - \"libtiff-tools\"\n - \"libtool\"\n - \"automake\"\n@@ -19,10 +19,8 @@ packages:\n - \"cmake\"\n - \"imagemagick\"\n - \"libcap-dev\"\n-- \"libxslt-dev\"\n - \"libz-dev\"\n - \"libbz2-dev\"\n-- \"python-cairo\"\n - \"python-dev\"\n - \"python-pip\"\n - \"fonts-tuffy\"\n@@ -34,7 +32,7 @@ files:\n - \"MacOSX10.9.sdk.tar.gz\"\n script: |\n   # FIXME: We should probably install these in some other (cachable) way, but the depends system doesn't appear to make native packages available to Core's build system itself?\n-  pip install --user mac_alias ds_store cairosvg cssselect tinycss lxml\n+  pip install --user mac_alias ds_store\n   export PATH=\"$HOME/.local/bin:$PATH\"\n \n   WRAP_DIR=$HOME/wrapped"
      }
    ]
  },
  {
    "sha": "de619a37fd18a17225c8a10b828fc61958abe4cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTYxOWEzN2ZkMThhMTcyMjVjOGExMGI4MjhmYzYxOTU4YWJlNGNm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-12-17T21:43:56Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T04:37:46Z"
      },
      "message": "depends: Pass PYTHONPATH along to configure",
      "tree": {
        "sha": "a300b9c044e341dc632ca8e311adc2479ced12dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a300b9c044e341dc632ca8e311adc2479ced12dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de619a37fd18a17225c8a10b828fc61958abe4cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de619a37fd18a17225c8a10b828fc61958abe4cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de619a37fd18a17225c8a10b828fc61958abe4cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de619a37fd18a17225c8a10b828fc61958abe4cf/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e611b6e3290ee08b5c77b6d68f906ce48cc5731d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e611b6e3290ee08b5c77b6d68f906ce48cc5731d"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e293e4fc347d7427959005e07472d940855019f0",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de619a37fd18a17225c8a10b828fc61958abe4cf/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de619a37fd18a17225c8a10b828fc61958abe4cf/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=de619a37fd18a17225c8a10b828fc61958abe4cf",
        "patch": "@@ -3,6 +3,7 @@ SUBDIRS = src\n .PHONY: deploy FORCE\n \n GZIP_ENV=\"-9n\"\n+export PYTHONPATH\n \n if BUILD_BITCOIN_LIBS\n pkgconfigdir = $(libdir)/pkgconfig"
      },
      {
        "sha": "1aa6aac4bf16a0da050fc7f1cf586356b45e1382",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de619a37fd18a17225c8a10b828fc61958abe4cf/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de619a37fd18a17225c8a10b828fc61958abe4cf/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=de619a37fd18a17225c8a10b828fc61958abe4cf",
        "patch": "@@ -65,6 +65,8 @@ AC_PATH_PROG(CCACHE,ccache)\n AC_PATH_PROG(XGETTEXT,xgettext)\n AC_PATH_PROG(HEXDUMP,hexdump)\n \n+AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n+\n dnl pkg-config check.\n PKG_PROG_PKG_CONFIG\n "
      },
      {
        "sha": "984ddb1e62b01dfc6dad664b75ffa7887e5439d8",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de619a37fd18a17225c8a10b828fc61958abe4cf/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de619a37fd18a17225c8a10b828fc61958abe4cf/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=de619a37fd18a17225c8a10b828fc61958abe4cf",
        "patch": "@@ -66,6 +66,7 @@ CXX=\"@CXX@\"\n OBJC=\"${CC}\"\n OBJCXX=\"${CXX}\"\n CCACHE=$prefix/native/bin/ccache\n+PYTHONPATH=$prefix/native/lib/python/dist-packages:$PYTHONPATH\n \n if test -n \"@AR@\"; then\n   AR=@AR@"
      }
    ]
  },
  {
    "sha": "82a2d98d9a824242197fbd9ceca4bc66b487a457",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MmEyZDk4ZDlhODI0MjQyMTk3ZmJkOWNlY2E0YmM2NmI0ODdhNDU3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-12-17T21:43:56Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T04:37:46Z"
      },
      "message": "depends: Add ds_store to depends",
      "tree": {
        "sha": "26bcb0bacc9b68e9f9cd497ea6ae7a55c9fd2c47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26bcb0bacc9b68e9f9cd497ea6ae7a55c9fd2c47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82a2d98d9a824242197fbd9ceca4bc66b487a457",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82a2d98d9a824242197fbd9ceca4bc66b487a457",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/82a2d98d9a824242197fbd9ceca4bc66b487a457",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82a2d98d9a824242197fbd9ceca4bc66b487a457/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de619a37fd18a17225c8a10b828fc61958abe4cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de619a37fd18a17225c8a10b828fc61958abe4cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de619a37fd18a17225c8a10b828fc61958abe4cf"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 35,
      "deletions": 1
    },
    "files": [
      {
        "sha": "eb8672d556a9cd03b57cb3b6e11d706183345c80",
        "filename": "depends/packages/native_biplist.mk",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82a2d98d9a824242197fbd9ceca4bc66b487a457/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82a2d98d9a824242197fbd9ceca4bc66b487a457/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=82a2d98d9a824242197fbd9ceca4bc66b487a457",
        "patch": "@@ -0,0 +1,15 @@\n+package=native_biplist\n+$(package)_version=0.9\n+$(package)_download_path=https://pypi.python.org/packages/source/b/biplist\n+$(package)_file_name=biplist-$($(package)_version).tar.gz\n+$(package)_sha256_hash=b57cadfd26e4754efdf89e9e37de87885f9b5c847b2615688ca04adfaf6ca604\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "8e902af1b6e9af0f5c4cb91cf075365c0815f828",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82a2d98d9a824242197fbd9ceca4bc66b487a457/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82a2d98d9a824242197fbd9ceca4bc66b487a457/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=82a2d98d9a824242197fbd9ceca4bc66b487a457",
        "patch": "@@ -0,0 +1,17 @@\n+package=native_ds_store\n+$(package)_version=c80c23706eae\n+$(package)_download_path=https://bitbucket.org/al45tair/ds_store/get\n+$(package)_download_file=$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=ce1aa412211610c63d567bbe3e06213006a2d5ba5d76d89399c151b5472cb0da\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+$(package)_dependencies=native_biplist\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "d2b09ef0a4ce7bb8a527dadfdab237aab6e100be",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82a2d98d9a824242197fbd9ceca4bc66b487a457/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82a2d98d9a824242197fbd9ceca4bc66b487a457/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=82a2d98d9a824242197fbd9ceca4bc66b487a457",
        "patch": "@@ -15,6 +15,8 @@ wallet_packages=bdb\n \n upnp_packages=miniupnpc\n \n+darwin_native_packages = native_biplist native_ds_store\n+\n ifneq ($(build_os),darwin)\n-darwin_native_packages=native_cctools native_cdrkit native_libdmg-hfsplus\n+darwin_native_packages += native_cctools native_cdrkit native_libdmg-hfsplus\n endif"
      }
    ]
  },
  {
    "sha": "902ccde85e7464363a94d8492b3e6c49ab755058",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDJjY2RlODVlNzQ2NDM2M2E5NGQ4NDkyYjNlNmM0OWFiNzU1MDU4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-18T12:27:26Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T04:37:46Z"
      },
      "message": "depends: Add mac_alias to depends",
      "tree": {
        "sha": "cd3cb7426293e9681a4890fe14ac02f3e25c6a74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd3cb7426293e9681a4890fe14ac02f3e25c6a74"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/902ccde85e7464363a94d8492b3e6c49ab755058",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/902ccde85e7464363a94d8492b3e6c49ab755058",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/902ccde85e7464363a94d8492b3e6c49ab755058",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/902ccde85e7464363a94d8492b3e6c49ab755058/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "82a2d98d9a824242197fbd9ceca4bc66b487a457",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82a2d98d9a824242197fbd9ceca4bc66b487a457",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/82a2d98d9a824242197fbd9ceca4bc66b487a457"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 17,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d117c1c9a3f6884ba37e21f7fef6798cd1e0c62e",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/902ccde85e7464363a94d8492b3e6c49ab755058/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/902ccde85e7464363a94d8492b3e6c49ab755058/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=902ccde85e7464363a94d8492b3e6c49ab755058",
        "patch": "@@ -0,0 +1,16 @@\n+package=native_mac_alias\n+$(package)_version=1.1.0\n+$(package)_download_path=https://bitbucket.org/al45tair/mac_alias/get\n+$(package)_download_file=v$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=87ad827e66790028361e43fc754f68ed041a9bdb214cca03c853f079b04fb120\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "59b009b66a27b3cd8083bb1e31f10abfa92b2486",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/902ccde85e7464363a94d8492b3e6c49ab755058/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/902ccde85e7464363a94d8492b3e6c49ab755058/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=902ccde85e7464363a94d8492b3e6c49ab755058",
        "patch": "@@ -15,7 +15,7 @@ wallet_packages=bdb\n \n upnp_packages=miniupnpc\n \n-darwin_native_packages = native_biplist native_ds_store\n+darwin_native_packages = native_biplist native_ds_store native_mac_alias\n \n ifneq ($(build_os),darwin)\n darwin_native_packages += native_cctools native_cdrkit native_libdmg-hfsplus"
      }
    ]
  },
  {
    "sha": "c39a6fffd789cb3591ae859c1464703c5fa7f668",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzlhNmZmZmQ3ODljYjM1OTFhZTg1OWMxNDY0NzAzYzVmYTdmNjY4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-18T12:27:49Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T04:37:47Z"
      },
      "message": "Travis & gitian-osx: Use depends for ds_store and mac_alias modules",
      "tree": {
        "sha": "7cfc897af2d1dffd9de2074b022006b09356ee9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7cfc897af2d1dffd9de2074b022006b09356ee9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c39a6fffd789cb3591ae859c1464703c5fa7f668",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c39a6fffd789cb3591ae859c1464703c5fa7f668",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c39a6fffd789cb3591ae859c1464703c5fa7f668",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c39a6fffd789cb3591ae859c1464703c5fa7f668/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "902ccde85e7464363a94d8492b3e6c49ab755058",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/902ccde85e7464363a94d8492b3e6c49ab755058",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/902ccde85e7464363a94d8492b3e6c49ab755058"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 1,
      "deletions": 7
    },
    "files": [
      {
        "sha": "cedd8bdf95c233c1e2991992119a1311aa938e33",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c39a6fffd789cb3591ae859c1464703c5fa7f668/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c39a6fffd789cb3591ae859c1464703c5fa7f668/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=c39a6fffd789cb3591ae859c1464703c5fa7f668",
        "patch": "@@ -41,15 +41,14 @@ matrix:\n     - compiler: \": No wallet\"\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n-      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python-pip\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n+      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n   exclude:\n     - compiler: gcc\n install:\n     - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n     - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n-    - if [[ \"$HOST\" =~ apple ]]; then pip install --user mac_alias ds_store; export PATH=\"$HOME/.local/bin:$PATH\"; ( wget 'https://bitbucket.org/al45tair/ds_store/get/c80c23706eae.tar.gz' && tar -xzvpf c80c23706eae.tar.gz && cd al45tair-ds_store-c80c23706eae/ && python setup.py install --user; ) fi\n before_script:\n     - unset CC; unset CXX\n     - mkdir -p depends/SDKs depends/sdk-sources"
      },
      {
        "sha": "50b914ab6f91a675737cb942f50614b134660b8d",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c39a6fffd789cb3591ae859c1464703c5fa7f668/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c39a6fffd789cb3591ae859c1464703c5fa7f668/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=c39a6fffd789cb3591ae859c1464703c5fa7f668",
        "patch": "@@ -22,7 +22,6 @@ packages:\n - \"libz-dev\"\n - \"libbz2-dev\"\n - \"python-dev\"\n-- \"python-pip\"\n - \"fonts-tuffy\"\n reference_datetime: \"2015-06-01 00:00:00\"\n remotes:\n@@ -31,10 +30,6 @@ remotes:\n files:\n - \"MacOSX10.9.sdk.tar.gz\"\n script: |\n-  # FIXME: We should probably install these in some other (cachable) way, but the depends system doesn't appear to make native packages available to Core's build system itself?\n-  pip install --user mac_alias ds_store\n-  export PATH=\"$HOME/.local/bin:$PATH\"\n-\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-apple-darwin11\"\n   CONFIGFLAGS=\"--enable-reduce-exports GENISOIMAGE=$WRAP_DIR/genisoimage\""
      }
    ]
  },
  {
    "sha": "917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTdiMWQwM2NmM2FmYTY5MzkxMTNlMmZiMGJmODlkYmZkOWRiMmQ3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T12:29:13Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T12:29:18Z"
      },
      "message": "Set copyright holders displayed in notices separately from the package name\n\nThis helps avoid accidental removal of upstream copyright names",
      "tree": {
        "sha": "3a432549bdbbd012b9e2442f605aab8851992b31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a432549bdbbd012b9e2442f605aab8851992b31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c39a6fffd789cb3591ae859c1464703c5fa7f668",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c39a6fffd789cb3591ae859c1464703c5fa7f668",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c39a6fffd789cb3591ae859c1464703c5fa7f668"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 22,
      "deletions": 5
    },
    "files": [
      {
        "sha": "5d4468e51b20bf32d10dcbe48d08b7ce1710d846",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -6,6 +6,8 @@ define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n define(_COPYRIGHT_YEAR, 2015)\n+define(_COPYRIGHT_HOLDERS,[The %s developers])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[Bitcoin Core])\n AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin])\n AC_CONFIG_SRCDIR([src/main.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n@@ -912,12 +914,17 @@ AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n+define(_COPYRIGHT_HOLDERS_FINAL, patsubst(_COPYRIGHT_HOLDERS, [%s], [AC_PACKAGE_NAME]))\n+AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n+AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n \n AC_SUBST(RELDFLAGS)\n AC_SUBST(HARDENED_CXXFLAGS)"
      },
      {
        "sha": "6a34d64cd5323de433a9274e559fb3cb52090e0b",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -17,7 +17,7 @@\n   <string>APPL</string>\n \n   <key>CFBundleGetInfoString</key>\n-  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The @PACKAGE_NAME@ developers</string>\n+  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ @COPYRIGHT_HOLDERS_FINAL@</string>\n \n   <key>CFBundleShortVersionString</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@</string>"
      },
      {
        "sha": "470d1f2b4928ff8ff385830a49e36a20e7b5d987",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -71,6 +71,7 @@ def parse_po(text):\n \"\"\")\n f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('PACKAGE_NAME'),))\n+f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS'),))\n messages.sort(key=operator.itemgetter(0))\n for (msgid, msgstr) in messages:\n     if msgid != EMPTY:"
      },
      {
        "sha": "2d5e715ee5fa56bca3f0526ddf85f0350f7e2386",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -382,7 +382,7 @@ SECONDARY: $(QT_QM)\n \n qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME=\"$(PACKAGE_NAME)\" ../share/qt/extract_strings_qt.py $^\n+\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME=\"$(PACKAGE_NAME)\" COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" ../share/qt/extract_strings_qt.py $^\n \n translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\""
      },
      {
        "sha": "6157423f065d5251fab9649c88c95c86cf2ea345",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -38,7 +38,7 @@\n #define DO_STRINGIZE(X) #X\n \n //! Copyright string used in Windows .rc files\n-#define COPYRIGHT_STR \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The \" PACKAGE_NAME \" Developers\"\n+#define COPYRIGHT_STR \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" \" COPYRIGHT_HOLDERS_FINAL\n \n /**\n  * bitcoind-res.rc includes this file, but it cannot cope with real c++ code."
      },
      {
        "sha": "8a9cc6d960dcb293b3922618a3fb99b2c18d0ceb",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -513,7 +513,7 @@ std::string HelpMessage(HelpMessageMode mode)\n std::string LicenseInfo()\n {\n     // todo: remove urls from translations on next change\n-    return FormatParagraph(strprintf(_(\"Copyright (C) %i-%i The %s Developers\"), 2009, COPYRIGHT_YEAR, _(PACKAGE_NAME))) + \"\\n\" +\n+    return FormatParagraph(strprintf(_(\"Copyright (C) %i-%i %s\"), 2009, COPYRIGHT_YEAR, CopyrightHolders())) + \"\\n\" +\n            \"\\n\" +\n            FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +\n            \"\\n\" +"
      },
      {
        "sha": "facee62ea1b792d59e314dd3e9a40627a1037b84",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -44,7 +44,7 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n     // define text to place\n     QString titleText       = tr(PACKAGE_NAME);\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n-    QString copyrightText   = QChar(0xA9)+QString(\" %1-%2 \").arg(2009).arg(COPYRIGHT_YEAR) + QString(tr(\"The %1 developers\").arg(tr(PACKAGE_NAME)));\n+    QString copyrightText   = QChar(0xA9)+QString(\" %1-%2 \").arg(2009).arg(COPYRIGHT_YEAR) + QString::fromStdString(CopyrightHolders());\n     QString titleAddText    = networkStyle->getTitleAddText();\n \n     QString font            = QApplication::font().toString();"
      },
      {
        "sha": "66dd45dc8c020e7238e59a5d36c8ddb55f64db83",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -834,3 +834,10 @@ int GetNumCores()\n #endif\n }\n \n+std::string CopyrightHolders()\n+{\n+    std::string strCopyrightHolders = _(COPYRIGHT_HOLDERS);\n+    if (strCopyrightHolders.find(\"%s\") == strCopyrightHolders.npos)\n+        return strCopyrightHolders;\n+    return strprintf(strCopyrightHolders, _(PACKAGE_NAME));\n+}"
      },
      {
        "sha": "88e1fe9fb32afc5389f8cde2296e00bec57526de",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "patch": "@@ -242,4 +242,6 @@ template <typename Callable> void TraceThread(const char* name,  Callable func)\n     }\n }\n \n+std::string CopyrightHolders();\n+\n #endif // BITCOIN_UTIL_H"
      }
    ]
  },
  {
    "sha": "e4ab5e5f432c11101ff6ef5a54180781222b75a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNGFiNWU1ZjQzMmMxMTEwMWZmNmVmNWE1NDE4MDc4MTIyMmI3NWE1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T12:31:33Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T12:31:33Z"
      },
      "message": "Bugfix: Correct copyright year in Mac DMG background image",
      "tree": {
        "sha": "734fb65bb8031133c71c0663165bb93ed1e26629",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/734fb65bb8031133c71c0663165bb93ed1e26629"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4ab5e5f432c11101ff6ef5a54180781222b75a5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4ab5e5f432c11101ff6ef5a54180781222b75a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4ab5e5f432c11101ff6ef5a54180781222b75a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4ab5e5f432c11101ff6ef5a54180781222b75a5/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/917b1d03cf3afa6939113e2fb0bf89dbfd9db2d7"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4ab5e5f432c11101ff6ef5a54180781222b75a5/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4ab5e5f432c11101ff6ef5a54180781222b75a5/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=e4ab5e5f432c11101ff6ef5a54180781222b75a5",
        "patch": "@@ -3,7 +3,7 @@\n  \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n \t<!-- kate: space-indent off;\n-\tCopyright (c) 2011-2013 The Bitcoin Core developers\n+\tCopyright (c) 2015 The Bitcoin Core developers\n \tDistributed under the MIT software license, see the accompanying\n \tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n \t-->"
      }
    ]
  },
  {
    "sha": "4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDVhM2RmOWQ0ZWE5MjBiYjJjNjNlMTdhMDQ0ZDE0ZjNlYjBmZTkw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T13:27:22Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-22T13:27:26Z"
      },
      "message": "Bugfix: gitian-descriptors: Add missing python-setuptools requirement for OS X (biplist module)",
      "tree": {
        "sha": "8591aa07bf3335c533f8d18028366392643c82d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8591aa07bf3335c533f8d18028366392643c82d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e4ab5e5f432c11101ff6ef5a54180781222b75a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4ab5e5f432c11101ff6ef5a54180781222b75a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4ab5e5f432c11101ff6ef5a54180781222b75a5"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0eb97d6a76e5938d07cc5f63fe0f8ba890b80030",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90",
        "patch": "@@ -22,6 +22,7 @@ packages:\n - \"libz-dev\"\n - \"libbz2-dev\"\n - \"python-dev\"\n+- \"python-setuptools\"\n - \"fonts-tuffy\"\n reference_datetime: \"2015-06-01 00:00:00\"\n remotes:"
      }
    ]
  },
  {
    "sha": "3cae14056a1cd8f01dc4943fa0b78315734d741a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2FlMTQwNTZhMWNkOGYwMWRjNDk0M2ZhMGI3ODMxNTczNGQ3NDFh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-19T08:42:05Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-19T08:42:05Z"
      },
      "message": "Bugfix: Actually use _COPYRIGHT_HOLDERS_SUBSTITUTION everywhere",
      "tree": {
        "sha": "dc5adad1ac1de73b8a8fd2e9f2564530909d01a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc5adad1ac1de73b8a8fd2e9f2564530909d01a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cae14056a1cd8f01dc4943fa0b78315734d741a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cae14056a1cd8f01dc4943fa0b78315734d741a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3cae14056a1cd8f01dc4943fa0b78315734d741a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cae14056a1cd8f01dc4943fa0b78315734d741a/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d5a3df9d4ea920bb2c63e17a044d14f3eb0fe90"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c90187845c0393d1bfb4dfb0c6060d433369c03b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cae14056a1cd8f01dc4943fa0b78315734d741a/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cae14056a1cd8f01dc4943fa0b78315734d741a/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=3cae14056a1cd8f01dc4943fa0b78315734d741a",
        "patch": "@@ -915,7 +915,8 @@ AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n-define(_COPYRIGHT_HOLDERS_FINAL, patsubst(_COPYRIGHT_HOLDERS, [%s], [AC_PACKAGE_NAME]))\n+AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n+define(_COPYRIGHT_HOLDERS_FINAL, patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION]))\n AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)"
      },
      {
        "sha": "2a6e4b930cb2086b2ad7446244894a4fd8575bfc",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cae14056a1cd8f01dc4943fa0b78315734d741a/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cae14056a1cd8f01dc4943fa0b78315734d741a/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=3cae14056a1cd8f01dc4943fa0b78315734d741a",
        "patch": "@@ -72,6 +72,8 @@ def parse_po(text):\n f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('PACKAGE_NAME'),))\n f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS'),))\n+if os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION') != os.getenv('PACKAGE_NAME'):\n+    f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION'),))\n messages.sort(key=operator.itemgetter(0))\n for (msgid, msgstr) in messages:\n     if msgid != EMPTY:"
      },
      {
        "sha": "c2ecaa787681e1120a9c55cc314140fc2113411b",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cae14056a1cd8f01dc4943fa0b78315734d741a/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cae14056a1cd8f01dc4943fa0b78315734d741a/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=3cae14056a1cd8f01dc4943fa0b78315734d741a",
        "patch": "@@ -382,7 +382,7 @@ SECONDARY: $(QT_QM)\n \n qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME=\"$(PACKAGE_NAME)\" COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" ../share/qt/extract_strings_qt.py $^\n+\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME=\"$(PACKAGE_NAME)\" COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" COPYRIGHT_HOLDERS_SUBSTITUTION=\"$(COPYRIGHT_HOLDERS_SUBSTITUTION)\" ../share/qt/extract_strings_qt.py $^\n \n translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\""
      },
      {
        "sha": "0439ead47656c78e97eefe81c2036dcb7e647818",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cae14056a1cd8f01dc4943fa0b78315734d741a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cae14056a1cd8f01dc4943fa0b78315734d741a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3cae14056a1cd8f01dc4943fa0b78315734d741a",
        "patch": "@@ -839,5 +839,5 @@ std::string CopyrightHolders()\n     std::string strCopyrightHolders = _(COPYRIGHT_HOLDERS);\n     if (strCopyrightHolders.find(\"%s\") == strCopyrightHolders.npos)\n         return strCopyrightHolders;\n-    return strprintf(strCopyrightHolders, _(PACKAGE_NAME));\n+    return strprintf(strCopyrightHolders, _(COPYRIGHT_HOLDERS_SUBSTITUTION));\n }"
      }
    ]
  },
  {
    "sha": "78ec83ddfe0e49d18c572b37681e60b9435b2ab4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGVjODNkZGZlMGU0OWQxOGM1NzJiMzc2ODFlNjBiOTQzNWIyYWI0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-27T20:28:04Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-27T20:29:18Z"
      },
      "message": "splashscreen: Resize text to fit exactly",
      "tree": {
        "sha": "55125e7106e254df6924afa0624937d5078edde3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55125e7106e254df6924afa0624937d5078edde3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78ec83ddfe0e49d18c572b37681e60b9435b2ab4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78ec83ddfe0e49d18c572b37681e60b9435b2ab4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78ec83ddfe0e49d18c572b37681e60b9435b2ab4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78ec83ddfe0e49d18c572b37681e60b9435b2ab4/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cae14056a1cd8f01dc4943fa0b78315734d741a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cae14056a1cd8f01dc4943fa0b78315734d741a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cae14056a1cd8f01dc4943fa0b78315734d741a"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4d745088ac3f00c96b75d5d67ec54dea3574aea5",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78ec83ddfe0e49d18c572b37681e60b9435b2ab4/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78ec83ddfe0e49d18c572b37681e60b9435b2ab4/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=78ec83ddfe0e49d18c572b37681e60b9435b2ab4",
        "patch": "@@ -79,10 +79,9 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n     // check font size and drawing with\n     pixPaint.setFont(QFont(font, 33*fontFactor));\n     QFontMetrics fm = pixPaint.fontMetrics();\n-    int titleTextWidth  = fm.width(titleText);\n-    if(titleTextWidth > 160) {\n-        // strange font rendering, Arial probably not found\n-        fontFactor = 0.75;\n+    int titleTextWidth = fm.width(titleText);\n+    if (titleTextWidth > 176) {\n+        fontFactor = fontFactor * 176 / titleTextWidth;\n     }\n \n     pixPaint.setFont(QFont(font, 33*fontFactor));"
      }
    ]
  },
  {
    "sha": "29598e41a51ab7c5c98aa8b9af7941e8ceaaf644",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTU5OGU0MWE1MWFiN2M1Yzk4YWE4YjlhZjc5NDFlOGNlYWFmNjQ0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-28T04:37:34Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-28T04:37:34Z"
      },
      "message": "Move PACKAGE_URL to configure.ac",
      "tree": {
        "sha": "9cd2bdf1f0b920a4d61175b1350a17468eb82189",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cd2bdf1f0b920a4d61175b1350a17468eb82189"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78ec83ddfe0e49d18c572b37681e60b9435b2ab4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78ec83ddfe0e49d18c572b37681e60b9435b2ab4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78ec83ddfe0e49d18c572b37681e60b9435b2ab4"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9cd5ff5f300ea070da4cbf54bd674a4411069455",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=29598e41a51ab7c5c98aa8b9af7941e8ceaaf644",
        "patch": "@@ -8,7 +8,7 @@ define(_CLIENT_VERSION_IS_RELEASE, false)\n define(_COPYRIGHT_YEAR, 2015)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[Bitcoin Core])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin])\n+AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[http://bitcoin.org/])\n AC_CONFIG_SRCDIR([src/main.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])"
      },
      {
        "sha": "e553a5ae882750cd99bc55e512ac0bf9831c7b68",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=29598e41a51ab7c5c98aa8b9af7941e8ceaaf644",
        "patch": "@@ -7,7 +7,7 @@ SetCompressor /SOLID lzma\n !define REGKEY \"SOFTWARE\\$(^Name)\"\n !define VERSION @CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@.@CLIENT_VERSION_REVISION@\n !define COMPANY \"@PACKAGE_NAME@ project\"\n-!define URL http://www.bitcoin.org/\n+!define URL @PACKAGE_URL@\n \n # MUI Symbol Definitions\n !define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/bitcoin.ico\""
      }
    ]
  },
  {
    "sha": "cddffaf5e60f638b2acf4d33a4eb43c984825bba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGRmZmFmNWU2MGY2MzhiMmFjZjRkMzNhNGViNDNjOTg0ODI1YmJh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-28T04:52:52Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-28T04:52:52Z"
      },
      "message": "Bugfix: Include COPYRIGHT_HOLDERS_SUBSTITUTION in Makefile substitutions so it gets passed to extract-strings correctly",
      "tree": {
        "sha": "63848b27d42ef733e8e0e850601238240eb14258",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63848b27d42ef733e8e0e850601238240eb14258"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cddffaf5e60f638b2acf4d33a4eb43c984825bba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cddffaf5e60f638b2acf4d33a4eb43c984825bba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cddffaf5e60f638b2acf4d33a4eb43c984825bba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cddffaf5e60f638b2acf4d33a4eb43c984825bba/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29598e41a51ab7c5c98aa8b9af7941e8ceaaf644",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29598e41a51ab7c5c98aa8b9af7941e8ceaaf644"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1ddb1f4a842c84a6ba0841ac9d14a2b9f7cee1b1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cddffaf5e60f638b2acf4d33a4eb43c984825bba/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cddffaf5e60f638b2acf4d33a4eb43c984825bba/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=cddffaf5e60f638b2acf4d33a4eb43c984825bba",
        "patch": "@@ -925,6 +925,7 @@ AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n+AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n \n AC_SUBST(RELDFLAGS)"
      }
    ]
  },
  {
    "sha": "cc2095ecae3f4ff57d3981b5992e032e564ba65d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzIwOTVlY2FlM2Y0ZmY1N2QzOTgxYjU5OTJlMDMyZTU2NGJhNjVk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-03T05:16:49Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-03T05:38:43Z"
      },
      "message": "Rewrite FormatParagraph to handle newlines within input strings correctly",
      "tree": {
        "sha": "2e56a00c71225539366255f67cd64b3945cfeec3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e56a00c71225539366255f67cd64b3945cfeec3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc2095ecae3f4ff57d3981b5992e032e564ba65d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc2095ecae3f4ff57d3981b5992e032e564ba65d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc2095ecae3f4ff57d3981b5992e032e564ba65d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc2095ecae3f4ff57d3981b5992e032e564ba65d/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cddffaf5e60f638b2acf4d33a4eb43c984825bba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cddffaf5e60f638b2acf4d33a4eb43c984825bba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cddffaf5e60f638b2acf4d33a4eb43c984825bba"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 49,
      "deletions": 28
    },
    "files": [
      {
        "sha": "1bbd497f78a3e2b0c9b244cf7a768f07b0cfdc02",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc2095ecae3f4ff57d3981b5992e032e564ba65d/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc2095ecae3f4ff57d3981b5992e032e564ba65d/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=cc2095ecae3f4ff57d3981b5992e032e564ba65d",
        "patch": "@@ -399,12 +399,27 @@ BOOST_AUTO_TEST_CASE(test_FormatParagraph)\n {\n     BOOST_CHECK_EQUAL(FormatParagraph(\"\", 79, 0), \"\");\n     BOOST_CHECK_EQUAL(FormatParagraph(\"test\", 79, 0), \"test\");\n-    BOOST_CHECK_EQUAL(FormatParagraph(\" test\", 79, 0), \"test\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\" test\", 79, 0), \" test\");\n     BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 79, 0), \"test test\");\n     BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 4, 0), \"test\\ntest\");\n-    BOOST_CHECK_EQUAL(FormatParagraph(\"testerde test \", 4, 0), \"testerde\\ntest\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"testerde test\", 4, 0), \"testerde\\ntest\");\n     BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 4, 4), \"test\\n    test\");\n-    BOOST_CHECK_EQUAL(FormatParagraph(\"This is a very long test string. This is a second sentence in the very long test string.\"), \"This is a very long test string. This is a second sentence in the very long\\ntest string.\");\n+\n+    // Make sure we don't indent a fully-new line following a too-long line ending\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test test\\nabc\", 4, 4), \"test\\n    test\\nabc\");\n+\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"This_is_a_very_long_test_string_without_any_spaces_so_it_should_just_get_returned_as_is_despite_the_length until it gets here\", 79), \"This_is_a_very_long_test_string_without_any_spaces_so_it_should_just_get_returned_as_is_despite_the_length\\nuntil it gets here\");\n+\n+    // Test wrap length is exact\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"a b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 a b c de f g h i j k l m n o p\", 79), \"a b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 a b c de\\nf g h i j k l m n o p\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"x\\na b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 a b c de f g h i j k l m n o p\", 79), \"x\\na b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 a b c de\\nf g h i j k l m n o p\");\n+    // Indent should be included in length of lines\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"x\\na b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 a b c de f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 a b c d e fg h i j k\", 79, 4), \"x\\na b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 a b c de\\n    f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 a b c d e fg\\n    h i j k\");\n+\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"This is a very long test string. This is a second sentence in the very long test string.\", 79), \"This is a very long test string. This is a second sentence in the very long\\ntest string.\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"This is a very long test string.\\nThis is a second sentence in the very long test string. This is a third sentence in the very long test string.\", 79), \"This is a very long test string.\\nThis is a second sentence in the very long test string. This is a third\\nsentence in the very long test string.\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"This is a very long test string.\\n\\nThis is a second sentence in the very long test string. This is a third sentence in the very long test string.\", 79), \"This is a very long test string.\\n\\nThis is a second sentence in the very long test string. This is a third\\nsentence in the very long test string.\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"Testing that normal newlines do not get indented.\\nLike here.\", 79), \"Testing that normal newlines do not get indented.\\nLike here.\");\n }\n \n BOOST_AUTO_TEST_CASE(test_FormatSubVersion)"
      },
      {
        "sha": "a098c3e0a62f566cde0a980ea4f1296926419c63",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 25,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc2095ecae3f4ff57d3981b5992e032e564ba65d/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc2095ecae3f4ff57d3981b5992e032e564ba65d/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=cc2095ecae3f4ff57d3981b5992e032e564ba65d",
        "patch": "@@ -478,34 +478,40 @@ bool ParseDouble(const std::string& str, double *out)\n std::string FormatParagraph(const std::string& in, size_t width, size_t indent)\n {\n     std::stringstream out;\n-    size_t col = 0;\n     size_t ptr = 0;\n-    while(ptr < in.size())\n+    size_t indented = 0;\n+    while (ptr < in.size())\n     {\n-        // Find beginning of next word\n-        ptr = in.find_first_not_of(' ', ptr);\n-        if (ptr == std::string::npos)\n-            break;\n-        // Find end of next word\n-        size_t endword = in.find_first_of(' ', ptr);\n-        if (endword == std::string::npos)\n-            endword = in.size();\n-        // Add newline and indentation if this wraps over the allowed width\n-        if (col > 0)\n-        {\n-            if ((col + endword - ptr) > width)\n-            {\n-                out << '\\n';\n-                for(size_t i=0; i<indent; ++i)\n-                    out << ' ';\n-                col = 0;\n-            } else\n-                out << ' ';\n+        size_t lineend = in.find_first_of('\\n', ptr);\n+        if (lineend == std::string::npos) {\n+            lineend = in.size();\n+        }\n+        const size_t linelen = lineend - ptr;\n+        const size_t rem_width = width - indented;\n+        if (linelen <= rem_width) {\n+            out << in.substr(ptr, linelen + 1);\n+            ptr = lineend + 1;\n+            indented = 0;\n+        } else {\n+            size_t finalspace = in.find_last_of(\" \\n\", ptr + rem_width);\n+            if (finalspace == std::string::npos || finalspace < ptr) {\n+                // No place to break; just include the entire word and move on\n+                finalspace = in.find_first_of(\"\\n \", ptr);\n+                if (finalspace == std::string::npos) {\n+                    // End of the string, just add it and break\n+                    out << in.substr(ptr);\n+                    break;\n+                }\n+            }\n+            out << in.substr(ptr, finalspace - ptr) << \"\\n\";\n+            if (in[finalspace] == '\\n') {\n+                indented = 0;\n+            } else if (indent) {\n+                out << std::string(indent, ' ');\n+                indented = indent;\n+            }\n+            ptr = finalspace + 1;\n         }\n-        // Append word\n-        out << in.substr(ptr, endword - ptr);\n-        col += endword - ptr + 1;\n-        ptr = endword;\n     }\n     return out.str();\n }"
      }
    ]
  },
  {
    "sha": "027fdb83b41ae9e9125cf61f6460c03ab34e5961",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjdmZGI4M2I0MWFlOWU5MTI1Y2Y2MWY2NDYwYzAzYWIzNGU1OTYx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-03T05:38:27Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-03T05:38:51Z"
      },
      "message": "When/if the copyright line does not mention Bitcoin Core developers, add a second line to copyrights in -version, About dialog, and splash screen",
      "tree": {
        "sha": "4f7ac912c5344c1361cda2046e453e5b69f344fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f7ac912c5344c1361cda2046e453e5b69f344fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/027fdb83b41ae9e9125cf61f6460c03ab34e5961",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/027fdb83b41ae9e9125cf61f6460c03ab34e5961",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/027fdb83b41ae9e9125cf61f6460c03ab34e5961",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/027fdb83b41ae9e9125cf61f6460c03ab34e5961/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc2095ecae3f4ff57d3981b5992e032e564ba65d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc2095ecae3f4ff57d3981b5992e032e564ba65d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc2095ecae3f4ff57d3981b5992e032e564ba65d"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 25,
      "deletions": 16
    },
    "files": [
      {
        "sha": "9ad5a4786904f155d7e7b1612fafdf3afc59ce9a",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -17,6 +17,7 @@\n #include \"httpserver.h\"\n #include \"httprpc.h\"\n #include \"rpcserver.h\"\n+#include \"utilstrencodings.h\"\n \n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/filesystem.hpp>\n@@ -82,7 +83,7 @@ bool AppInit(int argc, char* argv[])\n \n         if (mapArgs.count(\"-version\"))\n         {\n-            strUsage += LicenseInfo();\n+            strUsage += FormatParagraph(LicenseInfo());\n         }\n         else\n         {"
      },
      {
        "sha": "5746fb51208662238da49557601e98d180587e55",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -33,7 +33,6 @@\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n-#include \"utilstrencodings.h\"\n #include \"validationinterface.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet/db.h\"\n@@ -513,13 +512,13 @@ std::string HelpMessage(HelpMessageMode mode)\n std::string LicenseInfo()\n {\n     // todo: remove urls from translations on next change\n-    return FormatParagraph(strprintf(_(\"Copyright (C) %i-%i %s\"), 2009, COPYRIGHT_YEAR, CopyrightHolders())) + \"\\n\" +\n+    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\"), 2009, COPYRIGHT_YEAR) + \" \") + \"\\n\" +\n            \"\\n\" +\n-           FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +\n+           _(\"This is experimental software.\") + \"\\n\" +\n            \"\\n\" +\n-           FormatParagraph(_(\"Distributed under the MIT software license, see the accompanying file COPYING or <http://www.opensource.org/licenses/mit-license.php>.\")) + \"\\n\" +\n+           _(\"Distributed under the MIT software license, see the accompanying file COPYING or <http://www.opensource.org/licenses/mit-license.php>.\") + \"\\n\" +\n            \"\\n\" +\n-           FormatParagraph(_(\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.\")) +\n+           _(\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.\") +\n            \"\\n\";\n }\n "
      },
      {
        "sha": "21dab957f37b6af4b1edc684c4ef6fa306d80ec6",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -44,7 +44,7 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n     // define text to place\n     QString titleText       = tr(PACKAGE_NAME);\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n-    QString copyrightText   = QChar(0xA9)+QString(\" %1-%2 \").arg(2009).arg(COPYRIGHT_YEAR) + QString::fromStdString(CopyrightHolders());\n+    QString copyrightText   = QString::fromUtf8(CopyrightHolders(strprintf(\"\\xc2\\xA9 %u-%u \", 2009, COPYRIGHT_YEAR)).c_str());\n     QString titleAddText    = networkStyle->getTitleAddText();\n \n     QString font            = QApplication::font().toString();\n@@ -101,8 +101,13 @@ SplashScreen::SplashScreen(Qt::WindowFlags f, const NetworkStyle *networkStyle)\n     pixPaint.drawText(pixmap.width()/devicePixelRatio-titleTextWidth-paddingRight+2,paddingTop+titleVersionVSpace,versionText);\n \n     // draw copyright stuff\n-    pixPaint.setFont(QFont(font, 10*fontFactor));\n-    pixPaint.drawText(pixmap.width()/devicePixelRatio-titleTextWidth-paddingRight,paddingTop+titleCopyrightVSpace,copyrightText);\n+    {\n+        pixPaint.setFont(QFont(font, 10*fontFactor));\n+        const int x = pixmap.width()/devicePixelRatio-titleTextWidth-paddingRight;\n+        const int y = paddingTop+titleCopyrightVSpace;\n+        QRect copyrightRect(x, y, pixmap.width() - x - paddingRight, pixmap.height() - y);\n+        pixPaint.drawText(copyrightRect, Qt::AlignLeft | Qt::AlignTop | Qt::TextWordWrap, copyrightText);\n+    }\n \n     // draw additional text if special network\n     if(!titleAddText.isEmpty()) {"
      },
      {
        "sha": "5fafa57598b641f0c0dd2683828e9b52f36078aa",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -56,7 +56,7 @@ HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool about) :\n         uri.setMinimal(true); // use non-greedy matching\n         licenseInfoHTML.replace(uri, \"<a href=\\\"\\\\1\\\">\\\\1</a>\");\n         // Replace newlines with HTML breaks\n-        licenseInfoHTML.replace(\"\\n\\n\", \"<br><br>\");\n+        licenseInfoHTML.replace(\"\\n\", \"<br>\");\n \n         ui->aboutMessage->setTextFormat(Qt::RichText);\n         ui->scrollArea->setVerticalScrollBarPolicy(Qt::ScrollBarAsNeeded);"
      },
      {
        "sha": "1f6b84119a5276f1d603c63e5858be07678831c3",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -834,10 +834,14 @@ int GetNumCores()\n #endif\n }\n \n-std::string CopyrightHolders()\n+std::string CopyrightHolders(const std::string& strPrefix)\n {\n-    std::string strCopyrightHolders = _(COPYRIGHT_HOLDERS);\n-    if (strCopyrightHolders.find(\"%s\") == strCopyrightHolders.npos)\n-        return strCopyrightHolders;\n-    return strprintf(strCopyrightHolders, _(COPYRIGHT_HOLDERS_SUBSTITUTION));\n+    std::string strCopyrightHolders = strPrefix + _(COPYRIGHT_HOLDERS);\n+    if (strCopyrightHolders.find(\"%s\") != strCopyrightHolders.npos) {\n+        strCopyrightHolders = strprintf(strCopyrightHolders, _(COPYRIGHT_HOLDERS_SUBSTITUTION));\n+    }\n+    if (strCopyrightHolders.find(\"Bitcoin Core developers\") == strCopyrightHolders.npos) {\n+        strCopyrightHolders += \"\\n\" + strPrefix + \"The Bitcoin Core developers\";\n+    }\n+    return strCopyrightHolders;\n }"
      },
      {
        "sha": "5a948c6a9cfcc2ede19807a30b9513136c210f3c",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -242,6 +242,6 @@ template <typename Callable> void TraceThread(const char* name,  Callable func)\n     }\n }\n \n-std::string CopyrightHolders();\n+std::string CopyrightHolders(const std::string& strPrefix);\n \n #endif // BITCOIN_UTIL_H"
      }
    ]
  },
  {
    "sha": "a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjhiYjlmNWU3ZWYxZGE1YzA0NDkwN2RjM2ExZDNkNGE0ZGJjMmNj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-03T05:41:13Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-03T05:41:13Z"
      },
      "message": "Merge branch 'master' into single_prodname",
      "tree": {
        "sha": "7e3932c75353499d6659b4f5a94b40e07e64c364",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e3932c75353499d6659b4f5a94b40e07e64c364"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/027fdb83b41ae9e9125cf61f6460c03ab34e5961"
      },
      {
        "sha": "fd13fe7ca01b6104ce591af2b90ee6951ccc5a16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd13fe7ca01b6104ce591af2b90ee6951ccc5a16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd13fe7ca01b6104ce591af2b90ee6951ccc5a16"
      }
    ],
    "stats": {
      "total": 33649,
      "additions": 26116,
      "deletions": 7533
    },
    "files": [
      {
        "sha": "54ae74fd3c77ac4432f5ba9c2e6d9c309bb6a1f2",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -2,7 +2,7 @@\n # - A travis bug causes caches to trample eachother when using the same\n #   compiler key (which we don't use anyway). This is worked around for now by\n #   replacing the \"compilers\" with a build name prefixed by the no-op \":\"\n-#   command. See: https://github.com/travis-ci/casher/issues/6\n+#   command. See: https://github.com/travis-ci/travis-ci/issues/4393\n \n os: linux\n language: cpp\n@@ -64,6 +64,7 @@ script:\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n     - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make distdir PACKAGE=bitcoin VERSION=$HOST\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then contrib/devtools/check-doc.py; fi\n     - cd bitcoin-$HOST\n     - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )"
      },
      {
        "sha": "53d6527d407188f13bf139dd05b8b50feeb82351",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -95,6 +95,8 @@ Anyone may participate in peer review which is expressed by comments in the pull\n   - Concept ACK means \"I agree in the general principle of this pull request\";\n   - Nit refers to trivial, often non-blocking issues.\n \n+Reviewers should include the commit hash which they reviewed in their comments.\n+\n Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n \n Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code."
      },
      {
        "sha": "c6be8e5470890cecdc7156030e54527d267338eb",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,6 +1,6 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2015 The Bitcoin Core developers\n+Copyright (c) 2009-2016 The Bitcoin Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "d6cbd7cb1221caa09ae90a4003cf16fc9ea19d4a",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -33,6 +33,9 @@ OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n \n+BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n+\n WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n@@ -227,7 +230,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      },
      {
        "sha": "b568978f05111d4e36f7b87d4304a6ff3d5ece17",
        "filename": "README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -3,7 +3,7 @@ Bitcoin Core integration/staging tree\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n \n-https://www.bitcoin.org\n+https://bitcoincore.org\n \n What is Bitcoin?\n ----------------\n@@ -15,13 +15,14 @@ out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://www.bitcoin.org/en/download.\n+the Bitcoin Core software, see https://www.bitcoin.org/en/download, or read the\n+[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n -------\n \n Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see http://opensource.org/licenses/MIT.\n+information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n@@ -48,7 +49,7 @@ lots of money.\n \n ### Automated Testing\n \n-Developers are strongly encouraged to write unit tests for new code, and to\n+Developers are strongly encouraged to write [unit tests](/doc/unit-tests.md) for new code, and to\n submit new unit tests for old code. Unit tests can be compiled and run\n (assuming they weren't disabled in configure) with: `make check`\n "
      },
      {
        "sha": "15350b197a5bed5a7a5ba3fa92143a8e51ebf543",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 48,
        "deletions": 6,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,14 +1,14 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 11)\n+define(_CLIENT_VERSION_MINOR, 12)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2015)\n+define(_COPYRIGHT_YEAR, 2016)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[Bitcoin Core])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[http://bitcoin.org/])\n+AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n AC_CONFIG_SRCDIR([src/main.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n@@ -66,6 +66,8 @@ AC_PATH_PROG([GIT], [git])\n AC_PATH_PROG(CCACHE,ccache)\n AC_PATH_PROG(XGETTEXT,xgettext)\n AC_PATH_PROG(HEXDUMP,hexdump)\n+AC_PATH_TOOL(READELF, readelf)\n+AC_PATH_TOOL(CPPFILT, c++filt)\n \n AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n \n@@ -416,6 +418,10 @@ AX_GCC_FUNC_ATTRIBUTE([dllimport])\n \n if test x$use_glibc_compat != xno; then\n \n+  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n+  #in anyway for back-compat.\n+  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n+\n   #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n   # See which one is present here.\n   AC_MSG_CHECKING(__fdelt_chk type)\n@@ -429,7 +435,8 @@ if test x$use_glibc_compat != xno; then\n     [ fdelt_type=\"long int\"])\n   AC_MSG_RESULT($fdelt_type)\n   AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n-\n+else\n+  AC_SEARCH_LIBS([clock_gettime],[rt])\n fi\n \n if test x$TARGET_OS != xwindows; then\n@@ -496,8 +503,6 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n-AC_SEARCH_LIBS([clock_gettime],[rt])\n-\n AC_MSG_CHECKING([for visibility attribute])\n AC_LINK_IFELSE([AC_LANG_SOURCE([\n   int foo_def( void ) __attribute__((visibility(\"default\")));\n@@ -626,6 +631,42 @@ if test x$use_boost = xyes; then\n \n BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n \n+\n+dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n+dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\n+dnl the abi. This was fixed in 1.57.\n+\n+dnl When building against that installed version using c++11, the headers pick up\n+dnl on the native c++11 scoped enum support and enable it, however it will fail to\n+dnl link. This can be worked around by disabling c++11 scoped enums if linking will\n+dnl fail.\n+dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\n+\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include \"boost/config.hpp\"\n+  #include \"boost/version.hpp\"\n+  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n+  #define BOOST_NO_SCOPED_ENUMS\n+  #define BOOST_NO_CXX11_SCOPED_ENUMS\n+  #define CHECK\n+  #endif\n+  #include \"boost/filesystem.hpp\"\n+  ]],[[\n+  #if defined(CHECK)\n+    boost::filesystem::copy_file(\"foo\", \"bar\");\n+  #else\n+    choke;\n+  #endif\n+  ]])],\n+  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n dnl a working version is available, else fall back to sleep. sleep was removed\n@@ -907,6 +948,7 @@ AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n+AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])"
      },
      {
        "sha": "b6e572102acb755511bee394f438c669d48dce2f",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -11,10 +11,10 @@ Repository Tools\n \n ### [Developer tools](/contrib/devtools) ###\n Specific tools for developers working on this repository.\n-Contains the script `github-merge.sh` for merging github pull requests securely and signing them using GPG.\n+Contains the script `github-merge.py` for merging github pull requests securely and signing them using GPG.\n \n ### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the above `github-merge.sh` script.\n+Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n \n ### [Linearize](/contrib/linearize) ###\n Construct a linear, no-fork, best version of the blockchain."
      },
      {
        "sha": "fce6bc0118f177cd58369825ec129bcd1fed819d",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -23,7 +23,7 @@ Build-Depends: debhelper,\n  libprotobuf-dev, protobuf-compiler,\n  python\n Standards-Version: 3.9.2\n-Homepage: https://www.bitcoin.org/\n+Homepage: https://bitcoincore.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git\n Vcs-Browser: https://github.com/bitcoin/bitcoin\n "
      },
      {
        "sha": "c039a7bae5861de9d682c76327c25fa6e52f77e5",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -5,7 +5,7 @@ Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2015, Bitcoin Core Developers\n+Copyright: 2009-2016, Bitcoin Core Developers\n License: Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n@@ -21,6 +21,7 @@ License: GPL-3+\n \n Files: src/qt/res/icons/add.png\n        src/qt/res/icons/address-book.png\n+       src/qt/res/icons/chevron.png\n        src/qt/res/icons/configure.png\n        src/qt/res/icons/debugwindow.png\n        src/qt/res/icons/edit.png\n@@ -56,6 +57,8 @@ Comment: Inspired by Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/mine.svg\n+       src/qt/res/icons/fontbigger.png\n+       src/qt/res/icons/fontsmaller.png\n Copyright: Jonas Schnelli\n License: Expat\n Comment:"
      },
      {
        "sha": "16c338dd3e51115c67439c5c1651e8465a3547d3",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "modified",
        "additions": 2,
        "deletions": 26,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-.TH BITCOIN-CLI \"1\" \"February 2015\" \"bitcoin-cli 0.10\" \n+.TH BITCOIN-CLI \"1\" \"February 2016\" \"bitcoin-cli 0.12\"\n .SH NAME\n bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n .SH SYNOPSIS\n@@ -11,31 +11,7 @@ This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client\n .SH OPTIONS\n .TP\n \\fB\\-?\\fR\n-Show the help message.\n-.TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf).\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory.\n-.TP\n-\\fB\\-testnet\\fR\n-Connect to a Bitcoin Core instance running in testnet mode.\n-.TP\n-\\fB\\-regtest\\fR\n-Connect to a Bitcoin Core instance running in regtest mode (see documentation for -regtest on bitcoind).\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections.\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections.\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332).\n-.TP\n-\\fB\\-rpcconnect=\\fR<ip>\n-Send commands to node running on <ip> (default: 127.0.0.1).\n+Show possible options.\n \n .SH \"SEE ALSO\"\n \\fBbitcoind\\fP, \\fBbitcoin.conf\\fP"
      },
      {
        "sha": "685a282080e2b664006a27c64c8f09f5b2afed49",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 4,
        "deletions": 182,
        "changes": 186,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-.TH BITCOIN-QT \"1\" \"April 2013\" \"bitcoin-qt 1\"\n+.TH BITCOIN-QT \"1\" \"February 2016\" \"bitcoin-qt 0.12\"\n .SH NAME\n bitcoin-qt \\- peer-to-peer network based digital currency\n .SH DESCRIPTION\n@@ -8,184 +8,6 @@ bitcoin\\-qt [command\\-line options]\n .SH OPTIONS\n .TP\n \\-?\n-This help message\n-.TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n-.TP\n-\\fB\\-pid=\\fR<file>\n-Specify pid file (default: bitcoind.pid)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-dbcache=\\fR<n>\n-Set database cache size in megabytes (default: 25)\n-.TP\n-\\fB\\-timeout=\\fR<n>\n-Specify connection timeout in milliseconds (default: 5000)\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through SOCKS5 proxy\n-.TP\n-\\fB\\-tor=\\fR<ip:port>\n-Use proxy to reach tor hidden services (default: same as \\fB\\-proxy\\fR)\n-.TP\n-\\fB\\-dns\\fR\n-Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR\n-.TP\n-\\fB\\-port=\\fR<port>\n-Listen for connections on <port> (default: 8333 or testnet: 18333)\n-.TP\n-\\fB\\-maxconnections=\\fR<n>\n-Maintain at most <n> connections to peers (default: 125)\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to and attempt to keep the connection open\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node(s)\n-.TP\n-\\fB\\-seednode=\\fR<ip>\n-Connect to a node to retrieve peer addresses, and disconnect\n-.TP\n-\\fB\\-externalip=\\fR<ip>\n-Specify your own public address\n-.TP\n-\\fB\\-onlynet=\\fR<net>\n-Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\n-.TP\n-\\fB\\-discover\\fR\n-Discover own IP address (default: 1 when listening and no \\fB\\-externalip\\fR)\n-.TP\n-\\fB\\-checkpoints\\fR\n-Only accept block chain matching built\\-in checkpoints (default: 1)\n-.TP\n-\\fB\\-listen\\fR\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n-.TP\n-\\fB\\-bind=\\fR<addr>\n-Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-.TP\n-\\fB\\-dnsseed\\fR\n-Find peers using DNS lookup (default: 1 unless \\fB\\-connect\\fR)\n-.TP\n-\\fB\\-banscore=\\fR<n>\n-Threshold for disconnecting misbehaving peers (default: 100)\n-.TP\n-\\fB\\-bantime=\\fR<n>\n-Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\n-.TP\n-\\fB\\-maxreceivebuffer=\\fR<n>\n-Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n-.TP\n-\\fB\\-maxsendbuffer=\\fR<n>\n-Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n-.TP\n-\\fB\\-upnp\\fR\n-Use UPnP to map the listening port (default: 1 when listening)\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-debug\\fR\n-Output extra debugging information. Implies all other \\fB\\-debug\\fR* options\n-.TP\n-\\fB\\-debugnet\\fR\n-Output extra network debugging information\n-.TP\n-\\fB\\-logtimestamps\\fR\n-Prepend debug output with timestamp\n-.TP\n-\\fB\\-shrinkdebugfile\\fR\n-Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n-.TP\n-\\fB\\-printtoconsole\\fR\n-Send trace/debug info to console instead of debug.log file\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332)\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcthreads=\\fR<n>\n-Set the number of threads to service RPC calls (default: 4)\n-.TP\n-\\fB\\-blocknotify=\\fR<cmd>\n-Execute command when the best block changes (%s in cmd is replaced by block hash)\n-.TP\n-\\fB\\-walletnotify=\\fR<cmd>\n-Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\n-.TP\n-\\fB\\-alertnotify=\\fR<cmd>\n-Execute command when a relevant alert is received (%s in cmd is replaced by message)\n-.TP\n-\\fB\\-upgradewallet\\fR\n-Upgrade wallet to latest format\n-.TP\n-\\fB\\-keypool=\\fR<n>\n-Set key pool size to <n> (default: 100)\n-.TP\n-\\fB\\-rescan\\fR\n-Rescan the block chain for missing wallet transactions\n-.TP\n-\\fB\\-salvagewallet\\fR\n-Attempt to recover private keys from a corrupt wallet.dat\n-.TP\n-\\fB\\-checkblocks=\\fR<n>\n-How many blocks to check at startup (default: 288, 0 = all)\n-.TP\n-\\fB\\-checklevel=\\fR<n>\n-How thorough the block verification is (0\\-4, default: 3)\n-.TP\n-\\fB\\-txindex\\fR\n-Maintain a full transaction index (default: 0)\n-.TP\n-\\fB\\-loadblock=\\fR<file>\n-Imports blocks from external blk000??.dat file\n-.TP\n-\\fB\\-reindex\\fR\n-Rebuild block chain index from current blk000??.dat files\n-.TP\n-\\fB\\-par=\\fR<n>\n-Set the number of script verification threads (1\\-16, 0=auto, default: 0)\n-.SS \"Block creation options:\"\n-.TP\n-\\fB\\-blockminsize=\\fR<n>\n-Set minimum block size in bytes (default: 0)\n-.TP\n-\\fB\\-blockmaxsize=\\fR<n>\n-Set maximum block size in bytes (default: 250000)\n-.HP\n-\\fB\\-blockprioritysize=\\fR<n> Set maximum size of high\\-priority/low\\-fee transactions in bytes (default: 27000)\n-.PP\n-Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n-.SS \"UI options:\"\n-.TP\n-\\fB\\-lang=\\fR<lang>\n-Set language, for example \"de_DE\" (default: system locale)\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-splash\\fR\n-Show splash screen on startup (default: 1)\n+List options.\n+.SH \"SEE ALSO\"\n+bitcoind(1)"
      },
      {
        "sha": "839dc26c1aa57da476d26eab3e4271c604540582",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "modified",
        "additions": 3,
        "deletions": 63,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,75 +1,15 @@\n-.TH BITCOIN.CONF \"5\" \"January 2011\" \"bitcoin.conf 3.19\"\n+.TH BITCOIN.CONF \"5\" \"February 2016\" \"bitcoin.conf 0.12\"\n .SH NAME\n bitcoin.conf \\- bitcoin configuration file\n .SH SYNOPSIS\n All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n .TP\n-The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n+The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character. Please refer to bitcoind(1) for a up to date list of valid options.\n .TP\n The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, bitcoind(1) will look for a file named bitcoin.conf(5) in the bitcoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n .SH LOCATION\n bitcoin.conf should be located in $HOME/.bitcoin\n-.SH NETWORK-RELATED SETTINGS\n-.TP\n-.TP\n-\\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Enable or disable run on the test network instead of the real *bitcoin* network.\n-.TP\n-\\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n-Connect via a socks4 proxy.\n-.TP\n-\\fBaddnode=\\fR\\fI'10.0.0.2:8333'\\fR\n-Use as many *addnode=* settings as you like to connect to specific peers.\n-.TP\n-\\fBconnect=\\fR\\fI'10.0.0.1:8333'\\fR\n-Use as many *connect=* settings as you like to connect ONLY to specific peers.\n-.TP\n-\\fRmaxconnections=\\fR\\fI'value'\\fR\n-Maximum number of inbound+outbound connections.\n-.SH JSON-RPC OPTIONS\n-.TP\n-\\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Tells *bitcoin* to accept or not accept JSON-RPC commands.\n-.TP\n-\\fBrpcuser=\\fR\\fI'username'\\fR\n-You must set *rpcuser* to secure the JSON-RPC api.\n-.TP\n-\\fBrpcpassword=\\fR\\fI'password'\\fR\n-You must set *rpcpassword* to secure the JSON-RPC api.\n-.TP\n-\\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n-By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n-.TP\n-\\fBrpcport=\\fR\\fI'8332'\\fR\n-Listen for RPC connections on this TCP port.\n-.TP\n-\\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n-You can use *bitcoin* or *bitcoind(1)* to send commands to *bitcoin*/*bitcoind(1)* running on another host using this option.\n-.TP\n-.SH MISCELLANEOUS OPTIONS\n-.TP\n-\\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable attempt to generate bitcoins.\n-.TP\n-\\fB4way=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable use SSE instructions to try to generate bitcoins faster.\n-.TP\n-\\fBkeypool=\\fR\\fI'100'\\fR\n-Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n-.TP\n-\\fBpaytxfee=\\fR\\fI'0.00'\\fR\n-Pay an optional transaction fee every time you send bitcoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n-.TP\n-\\fBallowreceivebyip=\\fR\\fI'1'\\fR\n-Allow direct connections for the 'pay via IP address' feature.\n-.TP\n-.SH USER INTERFACE OPTIONS\n-.TP\n-\\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable start bitcoind minimized.\n-.TP\n-\\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable minimize to the system tray.\n+\n .SH \"SEE ALSO\"\n bitcoind(1)\n .SH AUTHOR"
      },
      {
        "sha": "5c3e52f441e9ef8eb7ae2261b31f677bcb86cd2d",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 6,
        "deletions": 171,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,190 +1,25 @@\n-.TH BITCOIND \"1\" \"January 2011\" \"bitcoind 3.19\" \n+.TH BITCOIND \"1\" \"February 2016\" \"bitcoind 0.12\"\n .SH NAME\n bitcoind \\- peer-to-peer network based digital currency\n .SH SYNOPSIS\n bitcoin [options] <command> [params]  \n .TP\n bitcoin [options] help <command> \\- Get help for a command\n .SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n-\n-Bitcoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Bitcoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n+This  manual page documents the bitcoind program. Bitcoin is an experimental new digital currency that enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Bitcoin Core is the name of open source software which enables the use of this currency.\n \n .SH OPTIONS\n .TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through SOCKS5 proxy\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-daemon\\fR\n-Run in the background as a daemon and accept commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port>\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcconnect=\\fR<ip>\n-Send commands to node running on <ip>\n-.TP\n \\-?\n-This help message\n+List of possible options.\n .SH COMMANDS\n .TP\n-\\fBbackupwallet 'destination'\\fR\n-Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n-.TP\n-\\fBgetaccount 'bitcoinaddress'\\fR\n-DEPRECATED. Returns the account associated with the given address.\n-.TP\n-\\fBsetaccount 'bitcoinaddress' ['account']\\fR\n-DEPRECATED. Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n-.TP\n-\\fBgetaccountaddress 'account'\\fR\n-DEPRECATED. Returns a new bitcoin address for 'account'.\n-.TP\n-\\fBgetaddressesbyaccount 'account'\\fR\n-DEPRECATED. Returns the list of addresses associated with the given 'account'.\n-.TP\n-\\fBgetbalance 'account'\\fR\n-Returns the server's available balance, or the balance for 'account' (accounts are deprecated).\n-.TP\n-\\fBgetblockcount\\fR\n-Returns the number of blocks in the longest block chain.\n-.TP\n-\\fBgetblocknumber\\fR\n-Returns the block number of the latest block in the longest block chain.\n-.TP\n-\\fBgetconnectioncount\\fR\n-Returns the number of connections to other nodes.\n-.TP\n-\\fBgetdifficulty\\fR\n-Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n-.TP\n-\\fBgetgenerate\\fR\n-Returns boolean true if server is trying to generate bitcoins, false otherwise.\n-.TP\n-\\fBsetgenerate 'generate' ['genproclimit']\\fR\n-Generation is limited to ['genproclimit'] processors, \\-1 is unlimited.\n-.TP\n-\\fBgethashespersec\\fR\n-Returns a recent hashes per second performance measurement while generating.\n-.TP\n-\\fBgetinfo\\fR\n-Returns an object containing server information.\n-.TP\n-\\fBgetnewaddress 'account'\\fR\n-Returns a new bitcoin address for receiving payments. If 'account' is specified (deprecated), it is added to the address book so payments received with the address will be credited to 'account'.\n-.TP\n-\\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n-DEPRECATED. Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgetreceivedbyaddress 'bitcoinaddress' ['minconf=1']\\fR\n-Returns the total amount received by 'bitcoinaddress' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgettransaction 'txid'\\fR\n-Returns information about a specific transaction, given hexadecimal transaction ID.\n-.TP\n-\\fBgetwork 'data'\\fR\n-If 'data' is specified, tries to solve the block and returns true if it was successful. If 'data' is not specified, returns formatted hash 'data' to work on:\n+\\fBhelp\\fR\n+List commands.\n \n-    \"midstate\" : precomputed hash state after hashing the first half of the data.\n-    \"data\"     : block data.\n-    \"hash1\"    : formatted hash buffer for second hash.\n-    \"target\"   : little endian hash target.\n .TP\n \\fBhelp 'command'\\fR\n-List commands, or get help for a command.\n-.TP\n-\\fBlistaccounts ['minconf=1']\\fR\n-DEPRECATED. List accounts and their current balances.\n-     *note: requires bitcoin 0.3.20 or later.\n-.TP\n-\\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"account\"       : DEPRECATED. the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"address\"       : receiving address.\n-    \"account\"       : DEPRECATED. the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlisttransactions 'account' ['count=10']\\fR\n-Returns a list of the last ['count'] transactions for 'account' \\- for all accounts if 'account' is not specified or is \"*\". Each entry in the list may contain:\n-\n-    \"category\"      : will be generate, send, receive, or move.\n-    \"amount\"        : amount of transaction.\n-    \"fee\"           : Fee (if any) paid (only for send transactions).\n-    \"confirmations\" : number of confirmations (only for generate/send/receive).\n-    \"txid\"          : transaction ID (only for generate/send/receive).\n-    \"otheraccount\"  : account funds were moved to or from (only for move).\n-    \"message\"       : message associated with transaction (only for send).\n-    \"to\"            : message-to associated with transaction (only for send).\n-\n-    *note: requires bitcoin 0.3.20 or later.\n-.TP\n-\\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n-DEPRECATED. Moves funds between accounts.\n-.TP\n-\\fBsendfrom* <'account'> <'bitcoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n-DEPRECATED. Sends amount from account's balance to 'bitcoinaddress'. This method will fail if there is less than amount bitcoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n-.TP     \n-\\fBsendtoaddress 'bitcoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n-Sends amount from the server's available balance to 'bitcoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n-.TP    \n-\\fBstop\\fR\n-Stops the bitcoin server.\n-.TP    \n-\\fBvalidateaddress 'bitcoinaddress'\\fR\n-Checks that 'bitcoinaddress' looks like a proper bitcoin address. Returns an object containing:\n-\n-    \"isvalid\" : true or false.\n-    \"ismine\"  : true if the address is in the server's wallet.\n-    \"address\" : bitcoinaddress.\n-\n-    *note: ismine and address are only returned if the address is valid.\n+Get help for a command.\n \n .SH \"SEE ALSO\"\n bitcoin.conf(5)"
      },
      {
        "sha": "1103ca86c5e82a719bee3b6fa58cee9b53394f3b",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 51,
        "deletions": 32,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -2,19 +2,68 @@ Contents\n ========\n This directory contains tools for developers working on this repository.\n \n+check-doc.py\n+============\n+\n+Check if all command line args are documented. The return value indicates the\n+number of undocumented args.\n+\n clang-format.py\n ===============\n \n A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n \n-github-merge.sh\n+clang-format-diff.py\n+===================\n+\n+A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n+\n+For instance, to format the last commit with 0 lines of context,\n+the script should be called from the git root folder as follows.\n+\n+```\n+git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n+```\n+\n+fix-copyright-headers.py\n+========================\n+\n+Every year newly updated files need to have its copyright headers updated to reflect the current year.\n+If you run this script from the root folder it will automatically update the year on the copyright header for all\n+source files if these have a git commit from the current year.\n+\n+For example a file changed in 2015 (with 2015 being the current year):\n+\n+```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n+\n+would be changed to:\n+\n+```// Copyright (c) 2009-2015 The Bitcoin Core developers```\n+\n+git-subtree-check.sh\n+====================\n+\n+Run this script from the root of the repository to verify that a subtree matches the contents of\n+the commit it claims to have been updated to.\n+\n+To use, make sure that you have fetched the upstream repository branch in which the subtree is\n+maintained:\n+* for `src/secp256k1`: https://github.com/bitcoin/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n+* for `src/univalue`: https://github.com/bitcoin/univalue.git (branch master)\n+\n+Usage: `git-subtree-check.sh DIR COMMIT`\n+\n+`COMMIT` may be omitted, in which case `HEAD` is used.\n+\n+github-merge.py\n ===============\n \n A small script to automate merging pull-requests securely and sign them with GPG.\n \n For example:\n \n-  ./github-merge.sh bitcoin/bitcoin 3077\n+  ./github-merge.py 3077\n \n (in any git repository) will help you merge pull request #3077 for the\n bitcoin/bitcoin repository.\n@@ -41,21 +90,6 @@ Configuring the github-merge tool for the bitcoin repository is done in the foll\n     git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n-fix-copyright-headers.py\n-========================\n-\n-Every year newly updated files need to have its copyright headers updated to reflect the current year.\n-If you run this script from src/ it will automatically update the year on the copyright header for all\n-.cpp and .h files if these have a git commit from the current year.\n-\n-For example a file changed in 2014 (with 2014 being the current year):\n-\n-```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n-\n-would be changed to:\n-\n-```// Copyright (c) 2009-2014 The Bitcoin Core developers```\n-\n optimize-pngs.py\n ================\n \n@@ -98,18 +132,3 @@ It will do the following automatically:\n - add missing translations to the build system (TODO)\n \n See doc/translation-process.md for more information.\n-\n-git-subtree-check.sh\n-====================\n-\n-Run this script from the root of the repository to verify that a subtree matches the contents of\n-the commit it claims to have been updated to.\n-\n-To use, make sure that you have fetched the upstream repository branch in which the subtree is\n-maintained:\n-* for src/secp256k1: https://github.com/bitcoin/secp256k1.git (branch master)\n-* for sec/leveldb: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n-\n-Usage: git-subtree-check.sh DIR COMMIT\n-\n-COMMIT may be omitted, in which case HEAD is used."
      },
      {
        "sha": "8c73cf1e8a735daf9eb1180e86ea164ac224b0f0",
        "filename": "contrib/devtools/check-doc.py",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+'''\n+This checks if all command line args are documented.\n+Return value is 0 to indicate no error.\n+\n+Author: @MarcoFalke\n+'''\n+\n+from subprocess import check_output\n+import re\n+\n+FOLDER_GREP = 'src'\n+FOLDER_TEST = 'src/test/'\n+CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n+CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n+CMD_GREP_DOCS = r\"egrep -r -I 'HelpMessageOpt\\(\\\"\\-[^\\\"=]+?(=|\\\")' %s\" % (CMD_ROOT_DIR)\n+REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n+REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n+# list unsupported, deprecated and duplicate args as they need no documentation\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay'])\n+\n+def main():\n+  used = check_output(CMD_GREP_ARGS, shell=True)\n+  docd = check_output(CMD_GREP_DOCS, shell=True)\n+\n+  args_used = set(re.findall(REGEX_ARG,used))\n+  args_docd = set(re.findall(REGEX_DOC,docd)).union(SET_DOC_OPTIONAL)\n+  args_need_doc = args_used.difference(args_docd)\n+  args_unknown = args_docd.difference(args_used)\n+\n+  print \"Args used        : %s\" % len(args_used)\n+  print \"Args documented  : %s\" % len(args_docd)\n+  print \"Args undocumented: %s\" % len(args_need_doc)\n+  print args_need_doc\n+  print \"Args unknown     : %s\" % len(args_unknown)\n+  print args_unknown\n+\n+  exit(len(args_need_doc))\n+\n+if __name__ == \"__main__\":\n+    main()"
      },
      {
        "sha": "13d2573b9ff874e0c536e246b6f94310b7c7587f",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "added",
        "additions": 164,
        "deletions": 0,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python\n+#\n+#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n+#\n+#                     The LLVM Compiler Infrastructure\n+#\n+# This file is distributed under the University of Illinois Open Source\n+# License.\n+#\n+#           ============================================================\n+#\n+# University of Illinois/NCSA\n+# Open Source License\n+#\n+# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n+# All rights reserved.\n+#\n+# Developed by:\n+#\n+#     LLVM Team\n+#\n+#     University of Illinois at Urbana-Champaign\n+#\n+#     http://llvm.org\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy of\n+# this software and associated documentation files (the \"Software\"), to deal with\n+# the Software without restriction, including without limitation the rights to\n+# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n+# of the Software, and to permit persons to whom the Software is furnished to do\n+# so, subject to the following conditions:\n+#\n+#     * Redistributions of source code must retain the above copyright notice,\n+#       this list of conditions and the following disclaimers.\n+#\n+#     * Redistributions in binary form must reproduce the above copyright notice,\n+#       this list of conditions and the following disclaimers in the\n+#       documentation and/or other materials provided with the distribution.\n+#\n+#     * Neither the names of the LLVM Team, University of Illinois at\n+#       Urbana-Champaign, nor the names of its contributors may be used to\n+#       endorse or promote products derived from this Software without specific\n+#       prior written permission.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n+# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n+# SOFTWARE.\n+#\n+#           ============================================================\n+#\n+#===------------------------------------------------------------------------===#\n+\n+r\"\"\"\n+ClangFormat Diff Reformatter\n+============================\n+\n+This script reads input from a unified diff and reformats all the changed\n+lines. This is useful to reformat all the lines touched by a specific patch.\n+Example usage for git/svn users:\n+\n+  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n+  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n+\n+\"\"\"\n+\n+import argparse\n+import difflib\n+import re\n+import string\n+import subprocess\n+import StringIO\n+import sys\n+\n+\n+# Change this to the full path if clang-format is not on the path.\n+binary = 'clang-format'\n+\n+\n+def main():\n+  parser = argparse.ArgumentParser(description=\n+                                   'Reformat changed lines in diff. Without -i '\n+                                   'option just output the diff that would be '\n+                                   'introduced.')\n+  parser.add_argument('-i', action='store_true', default=False,\n+                      help='apply edits to files instead of displaying a diff')\n+  parser.add_argument('-p', metavar='NUM', default=0,\n+                      help='strip the smallest prefix containing P slashes')\n+  parser.add_argument('-regex', metavar='PATTERN', default=None,\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case sensitive, overrides -iregex)')\n+  parser.add_argument('-iregex', metavar='PATTERN', default=\n+                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n+                      r'|protodevel|java)',\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case insensitive, overridden by -regex)')\n+  parser.add_argument('-sort-includes', action='store_true', default=False,\n+                      help='let clang-format sort include blocks')\n+  parser.add_argument('-v', '--verbose', action='store_true',\n+                      help='be more verbose, ineffective without -i')\n+  args = parser.parse_args()\n+\n+  # Extract changed lines for each file.\n+  filename = None\n+  lines_by_file = {}\n+  for line in sys.stdin:\n+    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    if match:\n+      filename = match.group(2)\n+    if filename == None:\n+      continue\n+\n+    if args.regex is not None:\n+      if not re.match('^%s$' % args.regex, filename):\n+        continue\n+    else:\n+      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n+        continue\n+\n+    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    if match:\n+      start_line = int(match.group(1))\n+      line_count = 1\n+      if match.group(3):\n+        line_count = int(match.group(3))\n+      if line_count == 0:\n+        continue\n+      end_line = start_line + line_count - 1;\n+      lines_by_file.setdefault(filename, []).extend(\n+          ['-lines', str(start_line) + ':' + str(end_line)])\n+\n+  # Reformat files containing changes in place.\n+  for filename, lines in lines_by_file.iteritems():\n+    if args.i and args.verbose:\n+      print 'Formatting', filename\n+    command = [binary, filename]\n+    if args.i:\n+      command.append('-i')\n+    if args.sort_includes:\n+      command.append('-sort-includes')\n+    command.extend(lines)\n+    command.extend(['-style=file', '-fallback-style=none'])\n+    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n+                         stderr=None, stdin=subprocess.PIPE)\n+    stdout, stderr = p.communicate()\n+    if p.returncode != 0:\n+      sys.exit(p.returncode);\n+\n+    if not args.i:\n+      with open(filename) as f:\n+        code = f.readlines()\n+      formatted_code = StringIO.StringIO(stdout).readlines()\n+      diff = difflib.unified_diff(code, formatted_code,\n+                                  filename, filename,\n+                                  '(before formatting)', '(after formatting)')\n+      diff_string = string.join(diff, '')\n+      if len(diff_string) > 0:\n+        sys.stdout.write(diff_string)\n+\n+if __name__ == '__main__':\n+  main()"
      },
      {
        "sha": "b6414a551f8707a032e3f310ea9d1f9badec20e2",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "modified",
        "additions": 31,
        "deletions": 38,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,53 +1,46 @@\n #!/usr/bin/env python\n '''\n-Run this script inside of src/ and it will look for all the files\n-that were changed this year that still have the last year in the\n-copyright headers, and it will fix the headers on that file using\n-a perl regex one liner.\n+Run this script to update all the copyright headers of files\n+that were changed this year.\n \n-For example: if it finds something like this and we're in 2014\n+For example:\n \n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2012 The Bitcoin Core developers\n \n it will change it to\n \n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n-\n-It will do this for all the files in the folder and its children.\n-\n-Author: @gubatron\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n '''\n import os\n import time\n+import re\n \n year = time.gmtime()[0]\n-last_year = year - 1\n-command = \"perl -pi -e 's/%s The Bitcoin/%s The Bitcoin/' %s\"\n-listFilesCommand = \"find . | grep %s\"\n-\n-extensions = [\".cpp\",\".h\"]\n-\n-def getLastGitModifiedDate(filePath):\n-  gitGetLastCommitDateCommand = \"git log \" + filePath +\" | grep Date | head -n 1\"\n-  p = os.popen(gitGetLastCommitDateCommand)\n-  result = \"\"\n-  for l in p:\n-    result = l\n-    break\n-  result = result.replace(\"\\n\",\"\")\n-  return result\n+CMD_GIT_DATE = 'git log --format=@%%at -1 %s | date +\"%%Y\" -u -f -'\n+CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Bitcoin/$1-%s The Bitcoin/' %s\"\n+REGEX_CURRENT= re.compile(\"%s The Bitcoin\" % year)\n+CMD_LIST_FILES= \"find %s | grep %s\"\n \n-n=1\n-for extension in extensions:\n-  foundFiles = os.popen(listFilesCommand % extension)\n-  for filePath in foundFiles:\n-    filePath = filePath[1:-1]\n-    if filePath.endswith(extension):\n-      filePath = os.getcwd() + filePath\n-      modifiedTime = getLastGitModifiedDate(filePath)\n-      if len(modifiedTime) > 0 and str(year) in modifiedTime:\n-        print n,\"Last Git Modified: \", modifiedTime, \" - \", filePath\n-        os.popen(command % (last_year,year,filePath))\n-        n = n + 1\n+FOLDERS = [\"./qa\", \"./src\"]\n+EXTENSIONS = [\".cpp\",\".h\", \".py\"]\n \n+def get_git_date(file_path):\n+  r = os.popen(CMD_GIT_DATE % file_path)\n+  for l in r:\n+    # Result is one line, so just return\n+    return l.replace(\"\\n\",\"\")\n+  return \"\"\n \n+n=1\n+for folder in FOLDERS:\n+  for extension in EXTENSIONS:\n+    for file_path in os.popen(CMD_LIST_FILES % (folder, extension)):\n+      file_path = os.getcwd() + file_path[1:-1]\n+      if file_path.endswith(extension):\n+        git_date = get_git_date(file_path)\n+        if str(year) == git_date:\n+          # Only update if current year is not found\n+          if REGEX_CURRENT.search(open(file_path, \"r\").read()) is None:\n+            print n,\"Last git edit\", git_date, \"-\", file_path\n+            os.popen(CMD_REGEX % (year,file_path))\n+            n = n + 1"
      },
      {
        "sha": "c8dcaae268b8eabf110de524e4ce5b0b715aca1a",
        "filename": "contrib/devtools/github-merge.py",
        "status": "added",
        "additions": 235,
        "deletions": 0,
        "changes": 235,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,235 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2016 Bitcoin Core Developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# This script will locally construct a merge commit for a pull request on a\n+# github repository, inspect it, sign it and optionally push it.\n+\n+# The following temporary branches are created/overwritten and deleted:\n+# * pull/$PULL/base (the current master we're merging onto)\n+# * pull/$PULL/head (the current state of the remote pull request)\n+# * pull/$PULL/merge (github's merge)\n+# * pull/$PULL/local-merge (our merge)\n+\n+# In case of a clean merge that is accepted by the user, the local branch with\n+# name $BRANCH is overwritten with the merged result, and optionally pushed.\n+from __future__ import division,print_function,unicode_literals\n+import os,sys\n+from sys import stdin,stdout,stderr\n+import argparse\n+import subprocess\n+\n+# External tools (can be overridden using environment)\n+GIT = os.getenv('GIT','git')\n+BASH = os.getenv('BASH','bash')\n+\n+# OS specific configuration for terminal attributes\n+ATTR_RESET = ''\n+ATTR_PR = ''\n+COMMIT_FORMAT = '%h %s (%an)%d'\n+if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n+    ATTR_RESET = '\\033[0m'\n+    ATTR_PR = '\\033[1;36m'\n+    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n+\n+def git_config_get(option, default=None):\n+    '''\n+    Get named configuration option from git repository.\n+    '''\n+    try:\n+        return subprocess.check_output([GIT,'config','--get',option]).rstrip()\n+    except subprocess.CalledProcessError as e:\n+        return default\n+\n+def retrieve_pr_title(repo,pull):\n+    '''\n+    Retrieve pull request title from github.\n+    Return None if no title can be found, or an error happens.\n+    '''\n+    import urllib2,json\n+    try:\n+        req = urllib2.Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n+        result = urllib2.urlopen(req)\n+        result = json.load(result)\n+        return result['title']\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull title from github: %s' % e)\n+        return None\n+\n+def ask_prompt(text):\n+    print(text,end=\" \",file=stderr)\n+    reply = stdin.readline().rstrip()\n+    print(\"\",file=stderr)\n+    return reply\n+\n+def parse_arguments(branch):\n+    epilog = '''\n+        In addition, you can set the following git configuration variables:\n+        githubmerge.repository (mandatory),\n+        user.signingkey (mandatory),\n+        githubmerge.host (default: git@github.com),\n+        githubmerge.branch (default: master),\n+        githubmerge.testcmd (default: none).\n+    '''\n+    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n+            epilog=epilog)\n+    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n+        help='Pull request ID to merge')\n+    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n+        default=branch, help='Branch to merge against (default: '+branch+')')\n+    return parser.parse_args()\n+\n+def main():\n+    # Extract settings from git repo\n+    repo = git_config_get('githubmerge.repository')\n+    host = git_config_get('githubmerge.host','git@github.com')\n+    branch = git_config_get('githubmerge.branch','master')\n+    testcmd = git_config_get('githubmerge.testcmd')\n+    signingkey = git_config_get('user.signingkey')\n+    if repo is None:\n+        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n+        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n+        exit(1)\n+    if signingkey is None:\n+        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n+        print(\"git config --global user.signingkey <key>\",file=stderr)\n+        exit(1)\n+\n+    host_repo = host+\":\"+repo # shortcut for push/pull target\n+\n+    # Extract settings from command line\n+    args = parse_arguments(branch)\n+    pull = str(args.pull[0])\n+    branch = args.branch\n+\n+    # Initialize source branches\n+    head_branch = 'pull/'+pull+'/head'\n+    base_branch = 'pull/'+pull+'/base'\n+    merge_branch = 'pull/'+pull+'/merge'\n+    local_merge_branch = 'pull/'+pull+'/local-merge'\n+\n+    devnull = open(os.devnull,'w')\n+    try:\n+        subprocess.check_call([GIT,'checkout','-q',branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n+        exit(3)\n+    subprocess.check_call([GIT,'checkout','-q',base_branch])\n+    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n+    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n+\n+    try:\n+        # Create unsigned merge commit.\n+        title = retrieve_pr_title(repo,pull)\n+        if title:\n+            firstline = 'Merge #%s: %s' % (pull,title)\n+        else:\n+            firstline = 'Merge #%s' % (pull,)\n+        message = firstline + '\\n\\n'\n+        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n+        try:\n+            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n+        except subprocess.CalledProcessError as e:\n+            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n+            subprocess.check_call([GIT,'merge','--abort'])\n+            exit(4)\n+        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n+        if logmsg.rstrip() != firstline.rstrip():\n+            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n+            exit(4)\n+\n+        print('%s#%s%s %s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title))\n+        subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n+        print()\n+        # Run test command if configured.\n+        if testcmd:\n+            # Go up to the repository's root.\n+            toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n+            os.chdir(toplevel)\n+            if subprocess.call(testcmd,shell=True):\n+                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n+                exit(5)\n+\n+            # Show the created merge.\n+            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n+            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n+            if diff:\n+                print(\"WARNING: merge differs from github!\",file=stderr)\n+                reply = ask_prompt(\"Type 'ignore' to continue.\")\n+                if reply.lower() == 'ignore':\n+                    print(\"Difference with github ignored.\",file=stderr)\n+                else:\n+                    exit(6)\n+            reply = ask_prompt(\"Press 'd' to accept the diff.\")\n+            if reply.lower() == 'd':\n+                print(\"Diff accepted.\",file=stderr)\n+            else:\n+                print(\"ERROR: Diff rejected.\",file=stderr)\n+                exit(6)\n+        else:\n+            # Verify the result manually.\n+            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n+            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n+            print(\"Type 'exit' when done.\",file=stderr)\n+            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n+                os.putenv('debian_chroot',pull)\n+            subprocess.call([BASH,'-i'])\n+            reply = ask_prompt(\"Type 'm' to accept the merge.\")\n+            if reply.lower() == 'm':\n+                print(\"Merge accepted.\",file=stderr)\n+            else:\n+                print(\"ERROR: Merge rejected.\",file=stderr)\n+                exit(7)\n+\n+        # Sign the merge commit.\n+        reply = ask_prompt(\"Type 's' to sign off on the merge.\")\n+        if reply == 's':\n+            try:\n+                subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n+            except subprocess.CalledProcessError as e:\n+                print(\"Error signing, exiting.\",file=stderr)\n+                exit(1)\n+        else:\n+            print(\"Not signing off on merge, exiting.\",file=stderr)\n+            exit(1)\n+\n+        # Put the result in branch.\n+        subprocess.check_call([GIT,'checkout','-q',branch])\n+        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n+    finally:\n+        # Clean up temporary branches.\n+        subprocess.call([GIT,'checkout','-q',branch])\n+        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n+\n+    # Push the result.\n+    reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s.\" % (host_repo,branch))\n+    if reply.lower() == 'push':\n+        subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n+\n+if __name__ == '__main__':\n+    main()\n+"
      },
      {
        "sha": "afb53f0390f0680a87cabd8c40d0034e1ba57405",
        "filename": "contrib/devtools/github-merge.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 185,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -1,185 +0,0 @@\n-#!/bin/bash\n-\n-# This script will locally construct a merge commit for a pull request on a\n-# github repository, inspect it, sign it and optionally push it.\n-\n-# The following temporary branches are created/overwritten and deleted:\n-# * pull/$PULL/base (the current master we're merging onto)\n-# * pull/$PULL/head (the current state of the remote pull request)\n-# * pull/$PULL/merge (github's merge)\n-# * pull/$PULL/local-merge (our merge)\n-\n-# In case of a clean merge that is accepted by the user, the local branch with\n-# name $BRANCH is overwritten with the merged result, and optionally pushed.\n-\n-REPO=\"$(git config --get githubmerge.repository)\"\n-if [[ \"d$REPO\" == \"d\" ]]; then\n-  echo \"ERROR: No repository configured. Use this command to set:\" >&2\n-  echo \"git config githubmerge.repository <owner>/<repo>\" >&2\n-  echo \"In addition, you can set the following variables:\" >&2\n-  echo \"- githubmerge.host (default git@github.com)\" >&2\n-  echo \"- githubmerge.branch (default master)\" >&2\n-  echo \"- githubmerge.testcmd (default none)\" >&2\n-  exit 1\n-fi\n-\n-HOST=\"$(git config --get githubmerge.host)\"\n-if [[ \"d$HOST\" == \"d\" ]]; then\n-  HOST=\"git@github.com\"\n-fi\n-\n-BRANCH=\"$(git config --get githubmerge.branch)\"\n-if [[ \"d$BRANCH\" == \"d\" ]]; then\n-  BRANCH=\"master\"\n-fi\n-\n-TESTCMD=\"$(git config --get githubmerge.testcmd)\"\n-\n-PULL=\"$1\"\n-\n-if [[ \"d$PULL\" == \"d\" ]]; then\n-  echo \"Usage: $0 pullnumber [branch]\" >&2\n-  exit 2\n-fi\n-\n-if [[ \"d$2\" != \"d\" ]]; then\n-  BRANCH=\"$2\"\n-fi\n-\n-# Initialize source branches.\n-git checkout -q \"$BRANCH\"\n-if git fetch -q \"$HOST\":\"$REPO\" \"+refs/pull/$PULL/*:refs/heads/pull/$PULL/*\"; then\n-  if ! git log -q -1 \"refs/heads/pull/$PULL/head\" >/dev/null 2>&1; then\n-    echo \"ERROR: Cannot find head of pull request #$PULL on $HOST:$REPO.\" >&2\n-    exit 3\n-  fi\n-  if ! git log -q -1 \"refs/heads/pull/$PULL/merge\" >/dev/null 2>&1; then\n-    echo \"ERROR: Cannot find merge of pull request #$PULL on $HOST:$REPO.\" >&2\n-    exit 3\n-  fi\n-else\n-  echo \"ERROR: Cannot find pull request #$PULL on $HOST:$REPO.\" >&2\n-  exit 3\n-fi\n-if git fetch -q \"$HOST\":\"$REPO\" +refs/heads/\"$BRANCH\":refs/heads/pull/\"$PULL\"/base; then\n-  true\n-else\n-  echo \"ERROR: Cannot find branch $BRANCH on $HOST:$REPO.\" >&2\n-  exit 3\n-fi\n-git checkout -q pull/\"$PULL\"/base\n-git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n-git checkout -q -b pull/\"$PULL\"/local-merge\n-TMPDIR=\"$(mktemp -d -t ghmXXXXX)\"\n-\n-function cleanup() {\n-  git checkout -q \"$BRANCH\"\n-  git branch -q -D pull/\"$PULL\"/head 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/base 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/merge 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n-  rm -rf \"$TMPDIR\"\n-}\n-\n-# Create unsigned merge commit.\n-(\n-  echo \"Merge pull request #$PULL\"\n-  echo \"\"\n-  git log --no-merges --topo-order --pretty='format:%h %s (%an)' pull/\"$PULL\"/base..pull/\"$PULL\"/head\n-)>\"$TMPDIR/message\"\n-if git merge -q --commit --no-edit --no-ff -m \"$(<\"$TMPDIR/message\")\" pull/\"$PULL\"/head; then\n-  if [ \"d$(git log --pretty='format:%s' -n 1)\" != \"dMerge pull request #$PULL\" ]; then\n-    echo \"ERROR: Creating merge failed (already merged?).\" >&2\n-    cleanup\n-    exit 4\n-  fi\n-else\n-  echo \"ERROR: Cannot be merged cleanly.\" >&2\n-  git merge --abort\n-  cleanup\n-  exit 4\n-fi\n-\n-# Run test command if configured.\n-if [[ \"d$TESTCMD\" != \"d\" ]]; then\n-  # Go up to the repository's root.\n-  while [ ! -d .git ]; do cd ..; done\n-  if ! $TESTCMD; then\n-    echo \"ERROR: Running $TESTCMD failed.\" >&2\n-    cleanup\n-    exit 5\n-  fi\n-  # Show the created merge.\n-  git diff pull/\"$PULL\"/merge..pull/\"$PULL\"/local-merge >\"$TMPDIR\"/diff\n-  git diff pull/\"$PULL\"/base..pull/\"$PULL\"/local-merge\n-  if [[ \"$(<\"$TMPDIR\"/diff)\" != \"\" ]]; then\n-    echo \"WARNING: merge differs from github!\" >&2\n-    read -p \"Type 'ignore' to continue. \" -r >&2\n-    if [[ \"d$REPLY\" =~ ^d[iI][gG][nN][oO][rR][eE]$ ]]; then\n-      echo \"Difference with github ignored.\" >&2\n-    else\n-      cleanup\n-      exit 6\n-    fi\n-  fi\n-  read -p \"Press 'd' to accept the diff. \" -n 1 -r >&2\n-  echo\n-  if [[ \"d$REPLY\" =~ ^d[dD]$ ]]; then\n-    echo \"Diff accepted.\" >&2\n-  else\n-    echo \"ERROR: Diff rejected.\" >&2\n-    cleanup\n-    exit 6\n-  fi\n-else\n-  # Verify the result.\n-  echo \"Dropping you on a shell so you can try building/testing the merged source.\" >&2\n-  echo \"Run 'git diff HEAD~' to show the changes being merged.\" >&2\n-  echo \"Type 'exit' when done.\" >&2\n-  if [[ -f /etc/debian_version ]]; then # Show pull number in prompt on Debian default prompt\n-      export debian_chroot=\"$PULL\"\n-  fi\n-  bash -i\n-  read -p \"Press 'm' to accept the merge. \" -n 1 -r >&2\n-  echo\n-  if [[ \"d$REPLY\" =~ ^d[Mm]$ ]]; then\n-    echo \"Merge accepted.\" >&2\n-  else\n-    echo \"ERROR: Merge rejected.\" >&2\n-    cleanup\n-    exit 7\n-  fi\n-fi\n-\n-# Sign the merge commit.\n-read -p \"Press 's' to sign off on the merge. \" -n 1 -r >&2\n-echo\n-if [[ \"d$REPLY\" =~ ^d[Ss]$ ]]; then\n-  if [[ \"$(git config --get user.signingkey)\" == \"\" ]]; then\n-    echo \"ERROR: No GPG signing key set, not signing. Set one using:\" >&2\n-    echo \"git config --global user.signingkey <key>\" >&2\n-    cleanup\n-    exit 1\n-  else\n-    if ! git commit -q --gpg-sign --amend --no-edit; then\n-        echo \"Error signing, exiting.\"\n-        cleanup\n-        exit 1\n-    fi\n-  fi\n-else\n-  echo \"Not signing off on merge, exiting.\"\n-  cleanup\n-  exit 1\n-fi\n-\n-# Clean up temporary branches, and put the result in $BRANCH.\n-git checkout -q \"$BRANCH\"\n-git reset -q --hard pull/\"$PULL\"/local-merge\n-cleanup\n-\n-# Push the result.\n-read -p \"Type 'push' to push the result to $HOST:$REPO, branch $BRANCH. \" -r >&2\n-if [[ \"d$REPLY\" =~ ^d[Pp][Uu][Ss][Hh]$ ]]; then\n-  git push \"$HOST\":\"$REPO\" refs/heads/\"$BRANCH\"\n-fi"
      },
      {
        "sha": "0319f739c49365c1ac690813c9d5cec424861bc2",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/python2\n '''\n Perform basic ELF security checks on a series of executables.\n-Exit status will be 0 if succesful, and the program will be silent.\n+Exit status will be 0 if successful, and the program will be silent.\n Otherwise the exit status will be 1 and it will log which executables failed which checks.\n Needs `readelf` (for ELF) and `objdump` (for PE).\n '''\n@@ -94,7 +94,7 @@ def check_ELF_RELRO(executable):\n         raise IOError('Error opening file')\n     for line in stdout.split('\\n'):\n         tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == '(BIND_NOW)':\n+        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2]):\n             have_bindnow = True\n     return have_gnu_relro and have_bindnow\n "
      },
      {
        "sha": "4ad5136f79ee5310e712a85cd21c97364ce6cd2b",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -42,9 +42,12 @@\n 'GLIBCXX': (3,4,13),\n 'GLIBC':   (2,11)\n }\n+# See here for a description of _IO_stdin_used:\n+# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n+\n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-'_edata', '_end', '_init', '__bss_start', '_fini'\n+'_edata', '_end', '_init', '__bss_start', '_fini', '_IO_stdin_used'\n }\n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')"
      },
      {
        "sha": "2b6e807b4718c3c4985d20003eabc4af559bac01",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 18,
        "deletions": 4,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -29,6 +29,8 @@\n SOURCE_LANG = 'bitcoin_en.ts'\n # Directory with locale files\n LOCALE_DIR = 'src/qt/locale'\n+# Minimum number of messages for translation to be considered at all\n+MIN_NUM_MESSAGES = 10\n \n def check_at_repository_root():\n     if not os.path.exists('.git'):\n@@ -37,7 +39,7 @@ def check_at_repository_root():\n         exit(1)\n \n def fetch_all_translations():\n-    if subprocess.call([TX, 'pull', '-f']):\n+    if subprocess.call([TX, 'pull', '-f', '-a']):\n         print('Error while fetching translations', file=sys.stderr)\n         exit(1)\n \n@@ -70,18 +72,21 @@ def sanitize_string(s):\n     '''Sanitize string for printing'''\n     return s.replace('\\n',' ')\n \n-def check_format_specifiers(source, translation, errors):\n+def check_format_specifiers(source, translation, errors, numerus):\n     source_f = split_format_specifiers(find_format_specifiers(source))\n     # assert that no source messages contain both Qt and strprintf format specifiers\n     # if this fails, go change the source as this is hacky and confusing!\n     assert(not(source_f[0] and source_f[1]))\n     try:\n         translation_f = split_format_specifiers(find_format_specifiers(translation))\n     except IndexError:\n-        errors.append(\"Parse error in translation '%s'\" % sanitize_string(translation))\n+        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n         return False\n     else:\n         if source_f != translation_f:\n+            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n+                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n+                return True\n             errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n             return False\n     return True\n@@ -148,7 +153,7 @@ def postprocess_translations(reduce_diff_hacks=False):\n                     if translation is None:\n                         continue\n                     errors = []\n-                    valid = check_format_specifiers(source, translation, errors)\n+                    valid = check_format_specifiers(source, translation, errors, numerus)\n \n                     for error in errors:\n                         print('%s: %s' % (filename, error))\n@@ -166,6 +171,15 @@ def postprocess_translations(reduce_diff_hacks=False):\n                 if translation_node.get('type') == 'unfinished':\n                     context.remove(message)\n \n+        # check if document is (virtually) empty, and remove it if so\n+        num_messages = 0\n+        for context in root.findall('context'):\n+            for message in context.findall('message'):\n+                num_messages += 1\n+        if num_messages < MIN_NUM_MESSAGES:\n+            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n+            continue\n+\n         # write fixed-up tree\n         # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n         if reduce_diff_hacks:"
      },
      {
        "sha": "614970659660f8fee76b8859467e192795829de4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,8 +1,7 @@\n-### Gavin's notes on getting gitian builds up and running using KVM:###\n+### Gavin's notes on getting gitian builds up and running using KVM\n \n-These instructions distilled from:\n-[  https://help.ubuntu.com/community/KVM/Installation](  https://help.ubuntu.com/community/KVM/Installation)\n-... see there for complete details.\n+These instructions distilled from\n+[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n \n You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n \n@@ -33,14 +32,14 @@ Once you've got the right hardware and software:\n     # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n     ...\n \n-    # For further build instructions see doc/release-notes.md\n+    # For further build instructions see doc/release-process.md\n     ...\n \n ---------------------\n \n `gitian-builder` now also supports building using LXC. See\n-[  https://help.ubuntu.com/12.04/serverguide/lxc.html](  https://help.ubuntu.com/12.04/serverguide/lxc.html)\n-... for how to get LXC up and running under Ubuntu.\n+[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n+for how to get LXC up and running under Ubuntu.\n \n If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n and at least 10 gigabytes of free disk space, you can `gitian-build` using"
      },
      {
        "sha": "b4b6ed290976fca51a5826782c12dc09f8b8454d",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.12\"\n+name: \"bitcoin-linux-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -15,7 +15,9 @@ packages:\n - \"faketime\"\n - \"bsdmainutils\"\n - \"binutils-gold\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n+- \"ca-certificates\"\n+- \"python\"\n+reference_datetime: \"2016-01-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n@@ -94,6 +96,8 @@ script: |\n \n     ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n     make install-strip\n     cd installed\n     find . -name \"lib*.la\" -delete"
      },
      {
        "sha": "c4165470af1320e4503119c2da276c55ecb5353f",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -5,9 +5,8 @@ suites:\n architectures:\n - \"amd64\"\n packages:\n-- \"libc6:i386\"\n - \"faketime\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n+reference_datetime: \"2016-01-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin-detached-sigs.git\"\n   \"dir\": \"signature\""
      },
      {
        "sha": "4a4592398b353736310c1512e04b7a5683756409",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,11 +1,12 @@\n ---\n-name: \"bitcoin-osx-0.12\"\n+name: \"bitcoin-osx-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n packages: \n+- \"ca-certificates\"\n - \"g++\"\n - \"git-core\"\n - \"pkg-config\"\n@@ -21,10 +22,11 @@ packages:\n - \"libcap-dev\"\n - \"libz-dev\"\n - \"libbz2-dev\"\n+- \"python\"\n - \"python-dev\"\n - \"python-setuptools\"\n - \"fonts-tuffy\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n+reference_datetime: \"2016-01-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\""
      },
      {
        "sha": "27c4f01eb4ed9e96a3c3a2a937b64e1e777f9504",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -7,7 +7,7 @@ architectures:\n packages:\n - \"libssl-dev\"\n - \"autoconf\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n+reference_datetime: \"2016-01-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin-detached-sigs.git\"\n   \"dir\": \"signature\""
      },
      {
        "sha": "233f5c5498b172b44f65c03dbd3c33b46eca8a48",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.12\"\n+name: \"bitcoin-win-0.13\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -18,7 +18,9 @@ packages:\n - \"g++-mingw-w64\"\n - \"nsis\"\n - \"zip\"\n-reference_datetime: \"2015-06-01 00:00:00\"\n+- \"ca-certificates\"\n+- \"python\"\n+reference_datetime: \"2016-01-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n@@ -124,6 +126,7 @@ script: |\n \n     ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n     make deploy\n     make install-strip\n     cp -f bitcoin-*setup*.exe $OUTDIR/"
      },
      {
        "sha": "030fd5cf3cd389976b9d07e6e48bb8d3524442fe",
        "filename": "contrib/gitian-downloader/achow101-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-downloader/achow101-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/gitian-downloader/achow101-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/achow101-key.pgp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1\n+\n+mQINBFT4snkBEACx90Wf5XLo1Xv09p81eaOXc+8bbkSYzqx3ThDNUPRzjYpex9A9\n+8FxfBenAykD3EgYuBTco4cbn7Dw11ppyXUw0VjWaagnnAVGxt3SDeY3ADwPss6xg\n+78FZXxT06xSHZXq1X6pOqhwTAnx3VGx+tR/A2DCsX0vHE6IVThZqyUq2Ei2C0Chc\n+od8y6JZ1CGNzlRkEgL9A0Zp0If6Uq4tXFxnLL6PtiS1b9V5rNfCSC7l99kIkG5oy\n++SPsGRwVqTE2kqtuzkt9qVn6v8KKoZr0BY4IO3KMfJJ4eidOkB+OZK9REEQguDvv\n+tJfkF2HcMYa1efvQObyvVIfS5gxs7+kcSJxgDVZI5YxRV1OOfI7+w3EW3G+bPBQF\n+gSBwEaLbD+udr9lDZ4NZc7vTeoZtYVNZ+EQtG+6I9GzxJwEgO5LIwZ3//vh/R4iy\n+z9W91r7TrlkHUuOGg1hXMCI9sRa65NJtP4BWD0xO07zDKj0JHzeyKwgxB/ixZF2V\n+kc8EzJSKzRfr+638BMXONcf6NW8n6qIlJT2U2qIwiixjM8AUujGKb8DEgU1vIAn9\n+7esOhceOtU/6iLuJrlK+TzMe97NoZCtt6ktmiAp8fu6l9uk3mr8JYLzIMtK+Asf4\n+np5YLizABwbt9gEretnGpHrdKMN88mPYwsLjjCh9wiM0bHZNL52JQRkt3QARAQAB\n+tDNBbmRyZXcgQ2hvdyAoT2ZmaWNpYWwgTmV3IEtleSkgPGFjaG93MTAxQGdtYWls\n+LmNvbT6JAjYEEwEKACAFAlT4snkCGwMFCwkIBwMFFQoJCAsEFgIBAAIeAQIXgAAK\n+CRAXVlcy4I5eQfyGD/9idtVjybuXl+LXS4ph4M738PrZfQeLDmnwhVjfZiEOLLs2\n+sAwGtL/CC0t9f7K7y+n5HtQoMX52jfVehnTDzeKCjRMs+5ssou+L9zadIAz68beU\n+7BZ0J1rR3n1kzwsFE3vx3IRno0VCTOgfL48AuuzMPxvEaLMxWQX8mL0PCV5/8Yxx\n+ftqg4kQ1JKMt5UTxE9/w0cBMphLTwV1Rx6lZILPJgOxYSQ0oOzQYSmucwzH1uOqH\n+wpgZ7SZIHfRWyi4TjQpU/5T2kMOlN/XdyWsj5+Eq+Y6zI6hq2se1vU3TOc8xN2S3\n+7YOza1onUj4if0rWtkJZ2yDnR4lIASUD+/VP2NoWtoy7rB0vIfzbojfwxAp8WuHT\n+sUTxXd52c3OB+673OlOA+GAg2FfFjR8REojsTbeip35/KmFMpafazVRn+E0c3MfP\n+/iS43UTlcxewRcDrx/gRplmgO0+CLgLstZOon7Dz0msypeSArhX2xEj4tJb/ccKd\n+CR/IQl8q/ULQsHX1LwRj0u9doAlkqgIQdKXou4+EmD1jKF92oJMZ+20AJCqfwYQY\n+9HlCB9SQeCRUtU/fHkAZLPApze6C7a1r0LVIuM6iolWyha5KJ++mj84fAagwy/ag\n+8TU8kHTLSGPYeg5G/TAbr1XU5kbbqfWfQFMK1xtdZd1BaGP2cDC2QGkr2ot1SLkC\n+DQRU+LJ5ARAArDftuFPE+ZhgJRuJK163fsD15aHPfv5s+h8kPFv0AuwVs+D75w3y\n+YGfaRtlwSvK+8EucKOoHI1AQYjTG0dtKJuwEGhQ2qsTWUKe05tEAWu0eN62MOZ/r\n+Awjxqotj4TeFksfyKedVAYSizD0Xj16fizeWFrfUBNND4OgUgD8KM79oRchtzKBE\n+HRBP27JksU8tQWc4YcEJUHV66Pji5OCiXxHXJ+JpqKSKeCrVvrvro+pwsY1I3ARA\n+F4UmLxCcb4GnNq+s76cb2K7XJtWJu5FHeHOsef5ped43pYs35UXI+EvOYNs39XI4\n+emMsI0KmuLME2LHO3CJNBirwRFxui27axZk/CSVE1lglnbb25n3QHvbs/31ASCCT\n+QKZ7+Gce89iow6yG4MkN5W4hLdkGAyNI74b6yAUfugSqPLNSj3YHvVFY3y1acge+\n+H7xDO/owRN1kbz+9VMJZxsxB/oZEyEVAE0szHxXbMBhqOME0Y3O6UBrXr7z6R8NG\n+S20RPet4kxCCTLZOvM/X5FtvimgR2u5qRPHs+zf2VPXIRsJsM3zq9EvmePryGM3r\n+1rEAvYagukuyt68lOWgKP/2wB0/NIFAs69b1QSJS3U4CQVIs2h84Ucvbh9gX9Y0B\n+LbV5mxvDDfC/4Nhf4yMfH/CwZDLOUsaRAjCv/lQuN9mnMz9aYnsPha0AEQEAAYkC\n+HwQYAQoACQUCVPiyeQIbDAAKCRAXVlcy4I5eQec+EACi14L8Vp7tw3tDm/Lrb9fM\n+LHfoOnZiDCGaXhiXqckbTSogp7hU82m1fIy4VwY7DWbs1iIq7QdDJMBuNn174Qd3\n+ZPxHeGwBbR04gEsHkbjXBAA5hMacLvmxYFiPlibz+AO4orUiYu/vlEXhXoFCjSlB\n+pw0kUG8W8yQ/RyE7ryLv5/bT4LkwUWF7/+gdDzLUy1VeaPDKmBupKVSbEACe4QRH\n+dUUqE3suKoJ/GylO2sGtFW8BM7+CffX+nvc8hJWzXdYW5InSh0omYJIypIgnQ1gM\n+MhUdu4gbtYwo44Tlax2mTSg8vSVboYO6pBZVX3IEUnjRHLOCZVZIBFXIFdRrHXO8\n+TTkzx9ZoDmZ/DH+Md1NDnS4QsvFbRO/EeDRQAI4cgGhCc4CTrrJSQv8jtl7x8OTx\n+fnDUbE/n8pLV93j9t1Gd07h0VJSmYj3AR7PiefHS7s2yxS9oOqRayGBqrJFzd2gS\n++oXvUBC6pUvM68NgNVCKH7HmIM9tFbqgy8kofTsVDkq9TEJRO+X4hn7UDNJhTjVE\n+AVRUdku6CJR6wj3RPCbERSNB8uabuv1lgo41baeepLn+tJNO/4hilJ0zvEoryVnJ\n+ldZ73mHRRRtXoPRXq7OKuDn10AvtYX8y3/q5z6XhLUePFKM91PO8GF0J6bNWrQSq\n+Khvd4+XHE/ecjLOPvLweAg==\n+=+hz7\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "c0048d336e5e365da5d91f9a47db453d9614922d",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -1,45 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-linux-gitian.zip\n-rss:\n-- url: \n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-linux-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n-    name: \"Warren Togami\"\n-    key: wtogami\n-  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n-    name: michagogo\n-    key: michagogo\n-  E944AE667CF960B1004BC32FCA662BE18B877A60:\n-    name: \"Andreas Schildbach\"\n-    key: aschildbach\n-  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n-    name: \"Cory Fields\"\n-    key: \"cfields\"\n-  37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04:\n-    name: \"Peter Todd\"\n-    key: \"petertodd\""
      },
      {
        "sha": "0ad3bdd4f3e3faf0e8c20fa5259bf3660a395782",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -1,45 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-win32-gitian.zip\n-rss:\n-- url: \n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-win32-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n-    name: \"Warren Togami\"\n-    key: wtogami\n-  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n-    name: michagogo\n-    key: michagogo\n-  E944AE667CF960B1004BC32FCA662BE18B877A60:\n-    name: \"Andreas Schildbach\"\n-    key: aschildbach\n-  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n-    name: \"Cory Fields\"\n-    key: \"cfields\"\n-  37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04:\n-    name: \"Peter Todd\"\n-    key: \"petertodd\""
      },
      {
        "sha": "c595f83eb95b20eea68f5f54a2ec0a715f6d75de",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -3,6 +3,9 @@\n Utility to generate the seeds.txt list that is compiled into the client\n (see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n \n-The 512 seeds compiled into the 0.10 release were created from sipa's DNS seed data, like this:\n+The seeds compiled into the release are created from sipa's DNS seed data, like this:\n+\n+    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n+    python makeseeds.py < seeds_main.txt > nodes_main.txt\n+    python generate-seeds.py . > ../../src/chainparamsseeds.h\n \n-\tcurl -s http://bitcoin.sipa.be/seeds.txt | makeseeds.py"
      },
      {
        "sha": "a3d035218789b8f74871a5c7885d4aa7a55c0b79",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/python\n-# Copyright (c) 2014 Wladmir J. van der Laan\n+# Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "f1854b27f9a5983ca77e3bec8005aede562cedb8",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 747,
        "deletions": 689,
        "changes": 1436,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,879 +1,937 @@\n-1.34.168.128:8333\n-1.202.128.218:8333\n-2.30.0.210:8333\n-5.9.96.203:8333\n-5.45.71.130:8333\n-5.45.98.141:8333\n-5.102.145.68:8333\n-5.135.160.77:8333\n-5.189.134.246:8333\n-5.199.164.132:8333\n-5.249.135.102:8333\n-8.19.44.110:8333\n-8.22.230.8:8333\n-14.200.200.145:8333\n-18.228.0.188:8333\n-18.228.0.200:8333\n-23.24.168.97:8333\n-23.28.35.227:8333\n-23.92.76.170:8333\n-23.99.64.119:8333\n-23.228.166.128:8333\n-23.229.45.32:8333\n-24.8.105.128:8333\n-24.16.69.137:8333\n-24.94.98.96:8333\n-24.102.118.7:8333\n-24.118.166.228:8333\n-24.122.133.49:8333\n-24.166.97.162:8333\n-24.213.235.242:8333\n-24.226.107.64:8333\n-24.228.192.171:8333\n-27.140.133.18:8333\n-31.41.40.25:8333\n-31.43.101.59:8333\n-31.184.195.181:8333\n-31.193.139.66:8333\n-37.200.70.102:8333\n-37.205.10.151:8333\n-42.3.106.227:8333\n-42.60.133.106:8333\n-45.56.85.231:8333\n-45.56.102.228:8333\n-45.79.130.235:8333\n-46.28.204.61:11101\n-46.38.235.229:8333\n-46.59.2.74:8333\n-46.101.132.37:8333\n-46.101.168.50:8333\n-46.163.76.230:8333\n+5.2.145.201:8333\n+5.22.142.214:8333\n+5.53.172.197:8333\n+5.189.161.164:8333\n+5.230.140.166:8333\n+5.231.3.130:8333\n+5.255.80.103:8333\n+14.202.230.49:8333\n+18.85.11.130:8333\n+23.91.97.25:8333\n+23.94.100.122:8333\n+23.95.99.132:8333\n+24.115.8.206:8333\n+24.127.128.191:8333\n+24.154.178.25:8333\n+24.207.103.43:8333\n+24.207.104.105:8333\n+24.210.230.150:8333\n+24.224.18.84:8333\n+24.246.168.106:8333\n+27.254.64.47:8333\n+31.6.71.123:8333\n+31.6.71.124:8333\n+31.14.134.13:8333\n+31.30.36.220:8333\n+31.164.6.104:8333\n+31.170.106.203:8333\n+31.185.134.201:8333\n+31.204.128.99:8333\n+31.204.128.219:8333\n+37.1.219.88:8333\n+37.97.132.109:8333\n+37.120.160.55:8333\n+37.120.169.123:8333\n+37.139.32.46:8333\n+37.221.163.218:8333\n+38.130.192.72:8333\n+41.75.96.80:8333\n+45.3.0.49:8333\n+45.33.72.185:8333\n+45.33.96.129:8333\n+45.56.4.63:8333\n+45.79.0.127:8333\n+45.79.80.102:8333\n+45.79.97.30:8333\n+45.79.132.219:8333\n+46.21.97.135:8333\n+46.28.205.67:8333\n+46.28.206.188:8333\n+46.29.20.209:8333\n+46.50.234.179:8333\n+46.101.160.168:8333\n+46.166.161.35:8333\n 46.166.161.103:8333\n 46.182.132.100:8333\n-46.223.36.94:8333\n+46.218.227.92:8333\n+46.226.109.20:8333\n 46.227.66.132:8333\n 46.227.66.138:8333\n+46.229.165.154:8333\n+46.229.165.155:8333\n+46.229.238.187:8333\n+46.234.104.48:8333\n 46.239.107.74:8333\n-46.249.39.100:8333\n-46.250.98.108:8333\n+46.244.0.138:8333\n+46.254.72.195:8333\n+50.5.13.44:8333\n 50.7.37.114:8333\n-50.81.53.151:8333\n-50.115.43.253:8333\n-50.116.20.87:8333\n-50.116.33.92:8333\n-50.125.167.245:8333\n-50.143.9.51:8333\n-50.188.192.133:8333\n-54.77.162.76:8333\n-54.153.97.109:8333\n-54.165.192.125:8333\n-58.96.105.85:8333\n-59.167.196.135:8333\n-60.29.227.163:8333\n+50.30.37.103:8333\n+50.39.105.60:8333\n+50.106.40.231:8333\n+52.29.0.37:8333\n+52.76.192.246:8333\n+54.152.192.179:8333\n+54.169.64.174:8333\n+54.175.160.22:8333\n+54.199.128.0:8333\n+58.96.171.129:8333\n+58.161.238.57:8333\n+60.251.195.221:8333\n 61.35.225.19:8333\n 62.43.130.178:8333\n-62.109.49.26:8333\n-62.202.0.97:8333\n-62.210.66.227:8333\n-62.210.192.169:8333\n-64.74.98.205:8333\n-64.156.193.100:8333\n+62.65.39.12:8333\n+62.107.200.30:8333\n+62.133.194.2:8333\n+62.181.238.186:8333\n+62.183.22.50:8333\n+62.210.85.120:8333\n+62.210.162.89:8333\n+62.238.34.125:8333\n+64.25.171.73:8333\n+64.27.166.30:8333\n+64.53.137.101:8333\n+64.71.72.44:8333\n+64.83.225.146:8333\n+64.121.3.163:8333\n 64.203.102.86:8333\n-64.229.142.48:8333\n-65.96.193.165:8333\n-66.30.3.7:8333\n+65.94.131.59:8333\n+65.188.136.233:8333\n+66.11.162.218:8333\n+66.23.228.133:8333\n+66.90.137.89:8333\n 66.114.33.49:8333\n-66.118.133.194:8333\n-66.135.10.126:8333\n+66.150.105.77:8333\n 66.172.10.4:8333\n 66.194.38.250:8333\n 66.194.38.253:8333\n-66.215.192.104:8333\n-67.60.98.115:8333\n-67.164.35.36:8333\n-67.191.162.244:8333\n-67.207.195.77:8333\n-67.219.233.140:8333\n+66.194.38.254:8333\n+66.231.97.172:8333\n+66.240.237.155:8333\n+67.159.13.34:8333\n+67.205.74.206:8333\n 67.221.193.55:8333\n-67.228.162.228:8333\n-68.50.67.199:8333\n-68.62.3.203:8333\n+67.227.72.17:8333\n+68.65.120.53:8333\n 68.65.205.226:9000\n-68.106.42.191:8333\n-68.150.181.198:8333\n-68.196.196.106:8333\n-68.224.194.81:8333\n-69.46.5.194:8333\n-69.50.171.238:8333\n-69.64.43.152:8333\n-69.65.41.13:8333\n-69.90.132.200:8333\n-69.143.1.243:8333\n-69.146.98.216:8333\n-69.165.246.38:8333\n-69.207.6.135:8333\n-69.251.208.26:8333\n-70.38.1.101:8333\n-70.38.9.66:8333\n-70.90.2.18:8333\n-71.58.228.226:8333\n-71.199.11.189:8333\n-71.199.193.202:8333\n-71.205.232.181:8333\n-71.236.200.162:8333\n-72.24.73.186:8333\n+68.144.4.34:8333\n+69.39.49.199:8333\n+69.50.171.205:8333\n+69.65.41.21:8333\n+69.113.98.61:8333\n+69.119.97.39:8333\n+69.146.70.124:8333\n+69.193.71.2:8333\n+70.46.10.237:8333\n+70.80.200.187:8333\n+70.185.97.117:8333\n+71.254.160.25:8333\n+72.28.203.5:8333\n 72.52.130.110:8333\n-72.53.111.37:8333\n+72.83.194.122:8333\n+72.128.32.167:8333\n+72.179.136.80:8333\n 72.235.38.70:8333\n-73.31.171.149:8333\n-73.32.137.72:8333\n-73.137.133.238:8333\n-73.181.192.103:8333\n-73.190.2.60:8333\n-73.195.192.137:8333\n-73.222.35.117:8333\n-74.57.199.180:8333\n-74.82.233.205:8333\n-74.85.66.82:8333\n-74.101.224.127:8333\n-74.113.69.16:8333\n-74.122.235.68:8333\n-74.193.68.141:8333\n-74.208.164.219:8333\n-75.100.37.122:8333\n-75.145.149.169:8333\n-75.168.34.20:8333\n-76.20.44.240:8333\n-76.100.70.17:8333\n-76.168.3.239:8333\n-76.186.140.103:8333\n-77.92.68.221:8333\n-77.109.101.142:8333\n-77.110.11.86:8333\n-77.242.108.18:8333\n-78.46.96.150:9020\n+74.50.44.193:8333\n+74.72.60.83:8333\n+74.80.234.116:8333\n+74.207.233.193:8333\n+75.112.233.128:8333\n+75.118.166.197:8333\n+75.140.0.241:8333\n+75.159.240.66:8333\n+75.174.5.26:8333\n+76.72.160.252:8333\n+76.72.160.254:8333\n+76.74.170.112:8333\n+76.79.201.54:8333\n+76.175.166.164:8333\n+76.179.105.27:8333\n+77.68.37.200:8333\n+77.234.49.196:8333\n+77.247.229.93:8333\n+78.24.72.78:8333\n+78.47.32.147:8333\n 78.84.100.95:8333\n+78.121.69.23:8333\n+78.129.167.5:8333\n+78.193.96.155:8333\n+79.19.37.179:8333\n 79.132.230.144:8333\n 79.133.43.63:8333\n-79.160.76.153:8333\n-79.169.34.24:8333\n-79.188.7.78:8333\n-80.217.226.25:8333\n-80.223.100.179:8333\n-80.240.129.221:8333\n-81.1.173.243:8333\n+79.134.201.66:8333\n+79.169.35.235:8333\n+80.57.227.14:8333\n+80.64.65.87:8333\n+80.86.92.70:8333\n+80.100.203.151:8333\n+80.101.32.121:8333\n+80.161.178.73:8333\n+80.240.129.170:8333\n 81.7.11.50:8333\n-81.7.16.17:8333\n-81.66.111.3:8333\n-81.80.9.71:8333\n-81.140.43.138:8333\n-81.171.34.37:8333\n-81.174.247.50:8333\n-81.181.155.53:8333\n-81.184.5.253:8333\n-81.187.69.130:8333\n-81.230.3.84:8333\n-82.42.128.51:8333\n-82.74.226.21:8333\n-82.142.75.50:8333\n+81.7.11.55:8333\n+81.17.17.40:9333\n+81.30.39.83:8333\n+81.90.36.7:9444\n+81.136.224.77:8333\n+81.162.231.211:8333\n+81.184.0.143:8333\n+81.198.128.86:8333\n+82.11.33.229:8333\n+82.79.128.134:8333\n+82.118.233.111:8333\n+82.135.139.30:8333\n 82.199.102.10:8333\n-82.200.205.30:8333\n+82.221.106.17:8333\n 82.221.108.21:8333\n-82.221.128.35:8333\n-82.238.124.41:8333\n-82.242.0.245:8333\n-83.76.123.110:8333\n+82.221.108.27:8333\n+83.137.41.3:8333\n+83.142.197.168:8333\n+83.143.130.19:8333\n 83.150.9.196:8333\n-83.162.196.192:8333\n-83.162.234.224:8333\n-83.170.104.91:8333\n+83.183.17.191:8333\n+83.227.173.83:8333\n+83.230.5.15:8333\n+83.233.105.151:443\n+83.246.75.8:8333\n+83.250.133.158:8333\n 83.255.66.118:8334\n-84.2.34.104:8333\n-84.45.98.91:8333\n-84.47.161.150:8333\n-84.212.192.131:8333\n-84.215.169.101:8333\n-84.238.140.176:8333\n-84.245.71.31:8333\n-85.17.4.212:8333\n+84.24.69.59:8333\n+84.42.193.6:8333\n+84.45.98.87:8333\n+84.54.128.11:8333\n+84.212.200.24:8333\n+84.215.198.109:8333\n+84.230.4.177:8333\n+85.95.228.83:8333\n+85.95.228.123:8333\n 85.114.128.134:8333\n-85.159.237.191:8333\n-85.166.130.189:8333\n-85.199.4.228:8333\n 85.214.66.168:8333\n-85.214.195.210:8333\n-85.229.0.73:8333\n-86.21.96.45:8333\n-87.48.42.199:8333\n-87.81.143.82:8333\n-87.81.251.72:8333\n-87.104.24.185:8333\n-87.104.168.104:8333\n-87.117.234.71:8333\n-87.118.96.197:8333\n-87.145.12.57:8333\n-87.159.170.190:8333\n-88.150.168.160:8333\n-88.208.0.79:8333\n-88.208.0.149:8333\n+85.214.147.162:8333\n+85.243.168.4:8333\n+86.1.0.18:8333\n+87.79.77.106:8333\n+87.91.156.110:8333\n+87.236.196.222:8333\n+88.85.75.152:8333\n+88.87.1.230:8333\n+88.87.92.102:8333\n+88.89.69.202:8333\n+88.97.72.229:8333\n+88.164.117.99:8333\n+88.198.32.131:8333\n+88.202.230.87:8333\n+88.214.193.154:8343\n 88.214.194.226:8343\n-89.1.11.32:8333\n-89.36.235.108:8333\n-89.67.96.2:15321\n-89.98.16.41:8333\n-89.108.72.195:8333\n-89.156.35.157:8333\n-89.163.227.28:8333\n-89.212.33.237:8333\n-89.212.160.165:8333\n-89.231.96.83:8333\n-89.248.164.64:8333\n-90.149.193.199:8333\n-91.77.239.245:8333\n-91.106.194.97:8333\n+89.10.155.88:8333\n+89.46.101.44:8333\n+89.163.224.212:8333\n+89.174.248.20:8333\n+89.202.231.198:8333\n+89.212.75.6:8333\n+90.149.38.172:8333\n+90.169.106.139:8333\n+91.64.101.150:8333\n+91.65.196.179:8333\n+91.121.80.17:8333\n 91.126.77.77:8333\n-91.134.38.195:8333\n-91.156.97.181:8333\n+91.145.76.156:8333\n+91.152.150.35:8333\n+91.192.137.17:8333\n+91.196.170.110:8333\n+91.197.44.133:8333\n 91.207.68.144:8333\n-91.209.77.101:8333\n+91.210.105.28:8333\n+91.211.102.101:8333\n+91.211.106.34:8333\n 91.214.200.205:8333\n-91.220.131.242:8333\n-91.220.163.18:8333\n-91.233.23.35:8333\n-92.13.96.93:8333\n-92.14.74.114:8333\n+91.220.43.146:8333\n+91.222.71.89:8333\n+91.224.140.242:8333\n+91.229.76.14:8333\n 92.27.7.209:8333\n-92.221.228.13:8333\n-92.255.207.73:8333\n-93.72.167.148:8333\n-93.74.163.234:8333\n-93.123.174.66:8333\n-93.152.166.29:8333\n-93.181.45.188:8333\n-94.19.12.244:8333\n+92.51.167.88:8333\n+92.247.229.163:8333\n+93.84.114.106:8333\n+93.113.36.172:8333\n+93.188.224.253:8333\n+94.75.239.69:8333\n 94.190.227.112:8333\n-94.198.135.29:8333\n+94.214.2.74:8333\n 94.224.162.65:8333\n-94.226.107.86:8333\n-94.242.198.161:8333\n-95.31.10.209:8333\n-95.65.72.244:8333\n-95.84.162.95:8333\n-95.90.139.46:8333\n-95.183.49.27:8005\n-95.215.47.133:8333\n-96.23.67.85:8333\n-96.44.166.190:8333\n-97.93.225.74:8333\n-98.26.0.34:8333\n-98.27.225.102:8333\n-98.229.117.229:8333\n-98.249.68.125:8333\n-98.255.5.155:8333\n-99.101.240.114:8333\n+94.236.198.253:8333\n+94.242.229.158:8333\n+95.84.138.99:8333\n+95.95.168.87:8333\n+95.110.234.93:8333\n+95.130.9.200:8333\n+95.165.168.168:8333\n+95.170.235.254:8333\n+95.211.130.154:8333\n+96.46.68.104:8333\n+96.127.202.148:8333\n+97.76.171.35:8333\n+98.160.160.67:8333\n+99.126.197.187:8333\n+99.198.173.1:8333\n 101.100.174.138:8333\n-101.251.203.6:8333\n-103.3.60.61:8333\n-103.30.42.189:8333\n+101.164.201.208:8333\n 103.224.165.48:8333\n-104.36.83.233:8333\n-104.37.129.22:8333\n-104.54.192.251:8333\n+104.128.225.223:8333\n 104.128.228.252:8333\n-104.128.230.185:8334\n-104.130.161.47:8333\n-104.131.33.60:8333\n-104.143.0.156:8333\n-104.156.111.72:8333\n-104.167.111.84:8333\n-104.193.40.248:8333\n-104.197.7.174:8333\n-104.197.8.250:8333\n-104.223.1.133:8333\n-104.236.97.140:8333\n+104.131.192.94:8333\n+104.155.45.201:8334\n+104.194.28.195:8663\n+104.211.1.27:8333\n+104.221.38.177:8333\n+104.236.9.79:8333\n+104.236.129.178:8333\n+104.236.186.249:8333\n+104.236.194.15:8333\n 104.238.128.214:8333\n 104.238.130.182:8333\n 106.38.234.84:8333\n 106.185.36.204:8333\n+106.185.38.67:8333\n 107.6.4.145:8333\n 107.150.2.6:8333\n 107.150.40.234:8333\n-107.155.108.130:8333\n-107.161.182.115:8333\n-107.170.66.231:8333\n-107.190.128.226:8333\n+107.170.13.184:8333\n+107.181.250.216:8333\n+107.191.101.111:8333\n 107.191.106.115:8333\n-108.16.2.61:8333\n-109.70.4.168:8333\n-109.162.35.196:8333\n-109.163.235.239:8333\n-109.190.196.220:8333\n-109.191.39.60:8333\n+108.59.12.163:8333\n+108.161.129.247:8333\n+109.193.160.140:8333\n+109.197.13.54:8333\n+109.230.7.248:8333\n 109.234.106.191:8333\n-109.238.81.82:8333\n-114.76.147.27:8333\n-115.28.224.127:8333\n-115.68.110.82:18333\n-118.97.79.218:8333\n-118.189.207.197:8333\n-119.228.96.233:8333\n-120.147.178.81:8333\n-121.41.123.5:8333\n-121.67.5.230:8333\n-122.107.143.110:8333\n-123.2.170.98:8333\n-123.110.65.94:8333\n-123.193.139.19:8333\n-125.239.160.41:8333\n-128.101.162.193:8333\n+109.236.137.80:8333\n+109.251.161.121:8333\n+112.65.231.226:8333\n+115.70.166.57:8333\n+115.159.42.80:8333\n+117.18.73.34:8333\n+118.67.201.40:8333\n+118.100.86.246:8333\n+118.110.104.152:8333\n+119.224.64.141:8333\n+120.55.193.136:8333\n+122.106.169.178:8333\n+123.203.174.15:8333\n+123.255.232.94:8333\n+124.148.165.165:8333\n+124.232.141.31:8333\n+128.30.92.69:8333\n+128.39.141.182:8333\n+128.84.167.20:8333\n 128.111.73.10:8333\n-128.140.229.73:8333\n-128.175.195.31:8333\n-128.199.107.63:8333\n-128.199.192.153:8333\n+128.127.38.195:8333\n+128.140.224.162:8333\n+128.199.101.104:8333\n+128.233.224.35:8333\n 128.253.3.193:20020\n-129.123.7.7:8333\n-130.89.160.234:8333\n-131.72.139.164:8333\n-131.191.112.98:8333\n-133.1.134.162:8333\n-134.19.132.53:8333\n-137.226.34.42:8333\n-141.41.2.172:8333\n-141.255.128.204:8333\n-142.217.12.106:8333\n-143.215.129.126:8333\n+130.180.228.138:8333\n+130.185.144.213:8333\n+130.255.73.207:8333\n+133.218.233.11:8333\n+134.249.128.23:8333\n+136.159.234.234:8333\n+137.116.160.176:8333\n+139.162.2.145:8333\n+139.162.23.117:8333\n+141.134.69.253:8333\n+141.255.162.215:8333\n+144.122.163.187:8333\n+145.131.3.54:8333\n+145.255.4.94:8333\n 146.0.32.101:8337\n-147.229.13.199:8333\n-149.210.133.244:8333\n-149.210.162.187:8333\n+147.83.72.91:8333\n+148.103.28.68:8333\n+149.5.32.102:8333\n+149.210.164.195:8333\n 150.101.163.241:8333\n 151.236.11.189:8333\n-153.121.66.211:8333\n-154.20.2.139:8333\n-159.253.23.132:8333\n+152.3.136.56:8333\n+154.20.208.25:8333\n+158.181.104.149:8333\n+159.253.96.226:8333\n+160.36.130.180:8333\n+162.209.1.233:8333\n+162.209.4.125:8333\n 162.209.106.123:8333\n 162.210.198.184:8333\n-162.218.65.121:8333\n-162.222.161.49:8333\n-162.243.132.6:8333\n-162.243.132.58:8333\n 162.248.99.164:53011\n 162.248.102.117:8333\n-163.158.35.110:8333\n-164.15.10.189:8333\n-164.40.134.171:8333\n+162.251.108.53:8333\n+163.44.2.48:8333\n+163.158.36.17:8333\n 166.230.71.67:8333\n-167.160.161.199:8333\n-168.103.195.250:8333\n-168.144.27.112:8333\n-168.158.129.29:8333\n-170.75.162.86:8333\n-172.90.99.174:8333\n-172.245.5.156:8333\n-173.23.166.47:8333\n+167.160.36.62:8333\n+167.160.169.92:8333\n+168.93.129.220:8333\n+169.55.99.84:8333\n+169.228.66.43:8333\n+172.9.169.242:8333\n 173.32.11.194:8333\n-173.34.203.76:8333\n-173.171.1.52:8333\n-173.175.136.13:8333\n-173.230.228.139:8333\n-173.247.193.70:8333\n-174.49.132.28:8333\n-174.52.202.72:8333\n-174.53.76.87:8333\n-174.109.33.28:8333\n-176.28.12.169:8333\n-176.35.182.214:8333\n-176.36.33.113:8333\n-176.36.33.121:8333\n-176.58.96.173:8333\n-176.121.76.84:8333\n+173.230.228.136:8333\n+173.246.107.34:8333\n+173.254.235.34:8333\n+174.0.128.222:8333\n+174.25.130.148:8333\n+174.50.64.101:8333\n+175.140.232.141:8333\n+176.36.37.62:8333\n+176.46.9.96:8333\n+176.124.110.27:8333\n+177.39.16.102:8333\n+178.17.173.2:8333\n+178.62.5.248:8333\n 178.62.70.16:8333\n-178.62.111.26:8333\n-178.76.169.59:8333\n-178.79.131.32:8333\n-178.162.199.216:8333\n-178.175.134.35:8333\n-178.248.111.4:8333\n-178.254.1.170:8333\n+178.62.203.185:8333\n+178.79.160.118:8333\n+178.169.206.244:8333\n+178.193.234.62:8333\n+178.199.96.108:8333\n+178.254.18.96:8333\n 178.254.34.161:8333\n-179.43.143.120:8333\n-179.208.156.198:8333\n-180.200.128.58:8333\n-183.78.169.108:8333\n-183.96.96.152:8333\n-184.68.2.46:8333\n-184.73.160.160:8333\n-184.94.227.58:8333\n-184.152.68.163:8333\n-185.7.35.114:8333\n-185.28.76.179:8333\n-185.31.160.202:8333\n-185.45.192.129:8333\n-185.66.140.15:8333\n-186.2.167.23:8333\n-186.220.101.142:8333\n-188.26.5.33:8333\n-188.75.136.146:8333\n-188.120.194.140:8333\n-188.121.5.150:8333\n-188.138.0.114:8333\n+178.255.41.123:8333\n+180.210.34.58:9801\n+182.92.226.212:8333\n+182.171.246.142:8333\n+184.23.8.9:8333\n+184.58.162.35:8333\n+184.154.9.170:8333\n+185.8.238.165:8333\n+185.24.97.11:8333\n+185.31.137.139:8333\n+185.38.44.64:8333\n+185.53.128.180:8333\n+185.53.129.244:8333\n+185.77.129.119:8333\n+185.77.129.156:8333\n+185.82.203.92:8333\n+188.20.97.18:8333\n+188.126.8.14:8333\n 188.138.33.239:8333\n-188.166.0.82:8333\n+188.155.136.70:8333\n+188.166.229.112:8333\n 188.182.108.129:8333\n-188.191.97.208:8333\n-188.226.198.102:8001\n-190.10.9.217:8333\n-190.75.143.144:8333\n-190.139.102.146:8333\n-191.237.64.28:8333\n-192.3.131.61:8333\n-192.99.225.3:8333\n-192.110.160.122:8333\n+188.226.225.174:8010\n+188.242.171.8:8333\n+188.243.4.139:8333\n+190.10.9.234:8333\n+190.10.10.147:8333\n+190.81.160.184:8333\n+190.85.201.37:8333\n+192.34.227.230:8333\n+192.77.189.200:8333\n+192.124.224.7:8333\n 192.146.137.1:8333\n-192.183.198.204:8333\n 192.203.228.71:8333\n+192.206.202.20:8333\n 193.0.109.3:8333\n-193.12.238.204:8333\n-193.91.200.85:8333\n-193.234.225.156:8333\n-194.6.233.38:8333\n-194.63.143.136:8333\n-194.126.100.246:8333\n-195.134.99.195:8333\n-195.159.111.98:8333\n-195.159.226.139:8333\n+193.41.229.130:8333\n+193.41.229.156:8333\n+193.49.43.219:8333\n+193.147.71.120:8333\n+193.179.65.233:8333\n+193.183.99.46:8333\n+193.192.37.135:8333\n+193.234.224.195:8333\n+194.58.108.213:8333\n+194.187.96.2:8333\n+194.255.31.59:8333\n+195.36.6.101:8333\n+195.58.238.243:8333\n 195.197.175.190:8333\n-198.48.199.108:8333\n-198.57.208.134:8333\n+195.239.1.66:8333\n+198.48.196.230:8333\n+198.50.192.160:8333\n 198.57.210.27:8333\n-198.62.109.223:8333\n+198.84.195.179:8333\n 198.167.140.8:8333\n-198.167.140.18:8333\n-199.91.173.234:8333\n+198.204.224.106:8333\n 199.127.226.245:8333\n-199.180.134.116:8333\n-200.7.96.99:8333\n-201.160.106.86:8333\n-202.55.87.45:8333\n-202.60.68.242:8333\n-202.60.69.232:8333\n-202.124.109.103:8333\n-203.30.197.77:8333\n-203.88.160.43:8333\n+199.201.110.8:8333\n+199.233.234.90:8333\n+200.116.98.185:8333\n+202.60.70.18:8333\n 203.151.140.14:8333\n-203.219.14.204:8333\n-205.147.40.62:8333\n-207.235.39.214:8333\n-207.244.73.8:8333\n-208.12.64.225:8333\n+204.112.203.52:8333\n+205.200.247.149:8333\n+207.226.141.253:8333\n+207.255.42.202:8333\n+208.53.164.19:8333\n+208.66.68.127:8333\n+208.66.68.130:8333\n+208.71.171.232:8341\n 208.76.200.200:8333\n-209.40.96.121:8333\n-209.126.107.176:8333\n-209.141.40.149:8333\n-209.190.75.59:8333\n-209.208.111.142:8333\n-210.54.34.164:8333\n-211.72.66.229:8333\n+208.82.98.189:8333\n+208.85.193.31:8333\n+208.111.48.41:8333\n+208.111.48.45:8333\n+209.34.232.72:8333\n+209.81.9.223:8333\n+209.90.224.2:8333\n+209.90.224.4:8333\n+209.126.98.174:8333\n+209.136.72.69:8333\n+209.195.4.74:8333\n+209.197.13.62:8333\n+211.72.227.8:8333\n 212.51.144.42:8333\n-212.112.33.157:8333\n-212.116.72.63:8333\n+212.71.233.127:8333\n 212.126.14.122:8333\n+212.159.44.50:8333\n+213.5.36.58:8333\n+213.57.33.10:8333\n 213.66.205.194:8333\n-213.111.196.21:8333\n-213.122.107.102:8333\n-213.136.75.175:8333\n+213.136.73.125:8333\n+213.155.3.216:8333\n 213.155.7.24:8333\n-213.163.64.31:8333\n-213.163.64.208:8333\n-213.165.86.136:8333\n-213.184.8.22:8333\n+213.167.17.6:8333\n+213.223.138.13:8333\n 216.15.78.182:8333\n-216.55.143.154:8333\n-216.115.235.32:8333\n-216.126.226.166:8333\n-216.145.67.87:8333\n+216.38.129.164:8333\n+216.48.168.8:8333\n 216.169.141.169:8333\n-216.249.92.230:8333\n+216.245.206.181:8333\n+216.249.204.161:8333\n 216.250.138.230:8333\n+217.11.225.189:8333\n+217.12.34.158:8333\n+217.12.202.33:8333\n 217.20.171.43:8333\n-217.23.2.71:8333\n-217.23.2.242:8333\n-217.25.9.76:8333\n-217.40.226.169:8333\n-217.123.98.9:8333\n-217.155.36.62:8333\n+217.23.1.126:8333\n+217.23.11.138:8333\n+217.111.66.79:8333\n+217.155.202.191:8333\n+217.158.9.102:8333\n 217.172.32.18:20993\n-218.61.196.202:8333\n-218.231.205.41:8333\n-220.233.77.200:8333\n-223.18.226.85:8333\n-223.197.203.82:8333\n-223.255.166.142:8333\n+220.245.196.37:8333\n [2001:1291:2bf:1::100]:8333\n-[2001:1418:100:5c2::2]:8333\n-[2001:16d8:dd24:0:86c9:681e:f931:256]:8333\n-[2001:19f0:1624:e6::579d:9428]:8333\n-[2001:19f0:300:1340:225:90ff:fec9:2b6d]:8333\n-[2001:19f0:4009:1405::64]:8333\n-[2001:1b40:5000:2e::3fb0:6571]:8333\n+[2001:1620:f00:282::2]:8333\n+[2001:1620:f00:8282::1]:8333\n+[2001:19f0:5000:8de8:5400:ff:fe12:55e4]:8333\n+[2001:19f0:6c00:9103:5400:ff:fe10:a8d3]:8333\n+[2001:1b60:3:172:142b:6dff:fe7a:117]:8333\n [2001:410:a000:4050:8463:90b0:fffb:4e58]:8333\n-[2001:410:a002:cafe:8463:90b0:fffb:4e58]:8333\n-[2001:41d0:1:541e::1]:8333\n-[2001:41d0:1:6a34::3]:8333\n+[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n+[2001:41d0:1008:761::17c]:8333\n+[2001:41d0:1:45d8::1]:8333\n [2001:41d0:1:6cd3::]:8333\n [2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:a33d::1]:8333\n-[2001:41d0:1:b855::1]:8333\n+[2001:41d0:1:afda::]:8200\n+[2001:41d0:1:b26b::1]:8333\n [2001:41d0:1:c139::1]:8333\n [2001:41d0:1:c8d7::1]:8333\n-[2001:41d0:1:dd3f::1]:8333\n-[2001:41d0:1:e29d::1]:8333\n [2001:41d0:1:f59f::33]:8333\n [2001:41d0:1:f7cc::1]:8333\n-[2001:41d0:1:ff87::1]:8333\n-[2001:41d0:2:2f05::1]:8333\n+[2001:41d0:2:1021::1]:8333\n [2001:41d0:2:37c3::]:8200\n-[2001:41d0:2:3e13::1]:8333\n-[2001:41d0:2:8619::]:8333\n+[2001:41d0:2:4797:2323:2323:2323:2323]:8333\n+[2001:41d0:2:53df::]:8333\n [2001:41d0:2:9c94::1]:8333\n+[2001:41d0:2:9d3e::1]:8333\n [2001:41d0:2:a24f::]:8333\n-[2001:41d0:2:adbf::]:8333\n-[2001:41d0:2:b721::1]:8333\n-[2001:41d0:2:ee52::1]:8333\n+[2001:41d0:2:a35a::]:8333\n+[2001:41d0:2:b2b8::]:8333\n+[2001:41d0:2:c1d9::]:8333\n+[2001:41d0:2:c6e::]:8333\n+[2001:41d0:2:c9bf::]:8333\n [2001:41d0:2:f1a5::]:8333\n-[2001:41d0:2:fa54::1]:8333\n-[2001:41d0:51:1::2036]:8333\n-[2001:41d0:52:a00::1a1]:8333\n+[2001:41d0:52:a00::105f]:8333\n [2001:41d0:52:cff::6f5]:8333\n-[2001:41d0:52:d00::2c0]:8333\n-[2001:41d0:52:d00::cf2]:8333\n-[2001:41d0:8:1087::1]:8333\n-[2001:41d0:8:4a3c::b7c]:8333\n+[2001:41d0:52:d00::6e2]:8333\n+[2001:41d0:8:3e75::1]:8333\n+[2001:41d0:8:62ab::1]:8333\n [2001:41d0:8:6728::]:8333\n-[2001:41d0:8:b779::1]:8333\n-[2001:41d0:8:c30f::1]:8333\n-[2001:41d0:8:d2b2::1]:8333\n-[2001:41d0:8:d5c3::1]:8333\n+[2001:41d0:8:b30a::1]:8333\n+[2001:41d0:8:bc26::1]:8333\n+[2001:41d0:8:be9a::1]:8333\n+[2001:41d0:8:d984::]:8333\n [2001:41d0:8:eb8b::]:8333\n-[2001:41d0:a:16d0::1]:8333\n+[2001:41d0:a:13a2::1]:8333\n [2001:41d0:a:2b18::1]:8333\n-[2001:41d0:a:3a9c::1]:8333\n-[2001:41d0:a:4903::]:8333\n-[2001:41d0:a:57b::1]:8333\n-[2001:41d0:a:5c7a::]:8333\n+[2001:41d0:a:2d14::]:8333\n+[2001:41d0:a:4558::1df2:76d3]:8333\n+[2001:41d0:a:4aaa::]:8333\n+[2001:41d0:a:635b::1]:8333\n+[2001:41d0:a:63d8::1]:8333\n [2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:f482::1]:8333\n-[2001:41d0:b:854:b7c:b7c:b7c:b7c]:8333\n-[2001:41d0:d:111c::]:8333\n-[2001:44b8:4116:7801:4216:7eff:fe78:3fe4]:8333\n-[2001:470:1f08:837::2]:8333\n-[2001:470:1f08:c33::2]:8333\n-[2001:470:1f09:bca:218:7dff:fe10:be33]:8333\n-[2001:470:1f0f:22d::212:26]:8333\n+[2001:41d0:a:f9cd::1]:8333\n+[2001:41d0:d:20a4::]:8333\n+[2001:41d0:e:26b::1]:8333\n+[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n+[2001:41f0:61::7]:8333\n+[2001:41f0::2]:8333\n+[2001:44b8:41bd:6101:148e:4022:4950:e861]:8333\n+[2001:470:1:2f9:0:1:107a:a301]:8333\n+[2001:470:1f0b:ad6::2]:8333\n [2001:470:1f11:12d5::ae1:5611]:8333\n-[2001:470:1f14:57a::2]:8333\n [2001:470:1f14:7d::2]:8333\n-[2001:470:1f15:57c::1]:8333\n-[2001:470:1f15:dda:3d9a:3f11:9a56:ed64]:8333\n-[2001:470:25:482::2]:8333\n-[2001:470:25:e4::2]:8333\n-[2001:470:4:26b::2]:8333\n+[2001:470:27:ce::2]:8333\n+[2001:470:41:6::2]:8333\n+[2001:470:507d:0:6ab5:99ff:fe73:ac18]:8333\n+[2001:470:583e::2a]:8333\n [2001:470:5f:5f::232]:8333\n [2001:470:66:119::2]:8333\n-[2001:470:67:39d::71]:8333\n [2001:470:6c4f::cafe]:8333\n-[2001:470:8:2e1::43]:8333\n-[2001:470:90a7:96::afe:6021]:8333\n+[2001:470:6f:327:913b:7fe:8545:a4f5]:8333\n+[2001:470:7dda:1::1]:8333\n [2001:470:95c1::2]:8333\n [2001:470:b1d0:ffff::1000]:8333\n-[2001:470:c1f2:3::201]:8333\n [2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n-[2001:470:e250:0:211:11ff:feb9:924c]:8333\n-[2001:4800:7817:101:be76:4eff:fe04:dc52]:8333\n-[2001:4800:7819:104:be76:4eff:fe04:7809]:8333\n+[2001:470:fab7:1::1]:8333\n [2001:4800:7819:104:be76:4eff:fe05:c828]:8333\n+[2001:4800:7819:104:be76:4eff:fe05:c9a0]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n+[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n+[2001:4802:7800:1:be76:4eff:fe20:f023]:8333\n [2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n+[2001:4802:7800:2:be76:4eff:fe20:6c26]:8333\n [2001:4802:7802:101:be76:4eff:fe20:256]:8333\n [2001:4802:7802:103:be76:4eff:fe20:2de8]:8333\n [2001:4830:1100:2e8::2]:8333\n-[2001:4ba0:fff7:181:dead::1]:8333\n+[2001:4b98:dc2:41:216:3eff:fe56:f659]:8333\n [2001:4ba0:fffa:5d::93]:8333\n-[2001:4ba0:ffff:1be:1:1005:0:1]:8335\n-[2001:4c48:110:101:216:3eff:fe24:1162]:8333\n-[2001:4dd0:f101::32]:8333\n+[2001:4ba0:ffff:1be:1:1005:0:1]:8333\n [2001:4dd0:ff00:867f::3]:8333\n [2001:4dd0:ff00:9a67::9]:8333\n-[2001:4dd0:ff00:9c55:c23f:d5ff:fe6c:7ee9]:8333\n [2001:5c0:1400:b::3cc7]:8333\n-[2001:5c0:1400:b::3d01]:8333\n-[2001:5c0:1400:b::8df]:8333\n-[2001:5c0:1501:300::3]:8333\n [2001:610:1b19::3]:8333\n-[2001:620:500:fff0:f21f:afff:fecf:91cc]:8333\n-[2001:67c:1220:80c:ad:8de2:f7e2:c784]:8333\n-[2001:67c:21ec:1000::b]:8333\n-[2001:6f8:1296:0:76d4:35ff:feba:1d26]:8333\n-[2001:840:f000:4250:3e4a:92ff:fe6d:145f]:8333\n+[2001:610:600:a41::2]:8333\n+[2001:67c:26b4::]:8333\n [2001:8d8:840:500::39:1ae]:8333\n-[2001:980:efd8:0:21:de4a:2709:912]:8333\n-[2001:981:46:1::3]:8333\n-[2001:981:9319:2:c0:a8:c8:8]:8333\n-[2001:9d8:cafe:3::91]:8333\n-[2001:ad0:1:1:26be:5ff:fe25:959d]:8333\n+[2001:8d8:965:4a00::10:9343]:8333\n+[2001:980:4650:1:2e0:53ff:fe13:2449]:8333\n+[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n+[2001:9c8:53e9:369a:226:2dff:fe1b:7472]:8333\n+[2001:9d8:cafe:3::87]:8333\n+[2001:b10:11:21:3e07:54ff:fe48:7248]:8333\n [2001:ba8:1f1:f34c::2]:8333\n-[2001:bc8:381c:100::1]:8333\n-[2002:175c:4caa::175c:4caa]:8333\n-[2002:4404:82f1:0:8d55:8fbb:15fa:f4e0]:8333\n-[2002:4475:2233:0:21f:5bff:fe33:9f70]:8333\n-[2002:596c:48c3::596c:48c3]:8333\n+[2001:bc8:2310:100::1]:8333\n+[2001:bc8:3427:101:7a4f:8be:2611:6e79]:8333\n+[2001:bc8:3505:200::1]:8333\n+[2001:cc0:a004::30:1d]:8333\n+[2001:e42:102:1209:153:121:76:171]:8333\n+[2002:17ea:14eb::17ea:14eb]:8333\n+[2002:2f8:2bc5::2f8:2bc5]:8333\n+[2002:4047:482c::4047:482c]:8333\n+[2002:45c3:8cca::45c3:8cca]:8333\n+[2002:46bb:8a41:0:226:b0ff:feed:5f12]:8888\n+[2002:46bb:8c3c:0:8d55:8fbb:15fa:f4e0]:8765\n+[2002:4c48:a0fe::4c48:a0fe]:8333\n+[2002:4d44:25c8::4d44:25c8]:8333\n+[2002:505f:aaa2::505f:aaa2]:8333\n+[2002:5bc1:799d::5bc1:799d]:8333\n+[2002:6dec:5472::6dec:5472]:8333\n [2002:8c6d:6521:9617:12bf:48ff:fed8:1724]:8333\n-[2002:a646:5e6a::1:2]:8333\n+[2002:ac52:94e2::ac52:94e2]:8333\n+[2002:af7e:3eca::af7e:3eca]:8333\n [2002:b009:20c5::b009:20c5]:8333\n+[2002:c06f:39a0::c06f:39a0]:8333\n+[2002:c23a:738a::c23a:738a]:8333\n+[2002:c70f:7442::c70f:7442]:8333\n+[2002:cec5:be4f::cec5:be4f]:8333\n+[2002:d149:9e3a::d149:9e3a]:8333\n+[2002:d917:ca5::d917:ca5]:8333\n+[2400:8900::f03c:91ff:fe50:153f]:8333\n [2400:8900::f03c:91ff:fe6e:823e]:8333\n-[2400:8900::f03c:91ff:fe70:d164]:8333\n-[2400:8901::f03c:91ff:fe37:9761]:8333\n-[2403:4200:403:2::ff]:8333\n-[2403:b800:1000:64:40a:e9ff:fe5f:94c1]:8333\n-[2403:b800:1000:64:9879:17ff:fe6a:a59f]:8333\n+[2400:8900::f03c:91ff:fea8:1934]:8333\n+[2400:8901::f03c:91ff:fe26:c4d6]:8333\n+[2400:8901::f03c:91ff:fec8:4280]:8333\n+[2400:8901::f03c:91ff:fec8:660f]:8333\n+[2401:1800:7800:102:be76:4eff:fe1c:559]:8333\n+[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n+[2405:aa00:2::40]:8333\n [2600:3c00::f03c:91ff:fe18:59b2]:8333\n-[2600:3c00::f03c:91ff:fe37:a4b1]:8333\n-[2600:3c00::f03c:91ff:fe56:2973]:8333\n+[2600:3c00::f03c:91ff:fe26:bfb6]:8333\n+[2600:3c00::f03c:91ff:fe33:88e3]:8333\n [2600:3c00::f03c:91ff:fe6e:7297]:8333\n [2600:3c00::f03c:91ff:fe84:8a6e]:8333\n [2600:3c01::f03c:91ff:fe18:6adf]:8333\n-[2600:3c01::f03c:91ff:fe18:e217]:8333\n-[2600:3c01::f03c:91ff:fe33:1b31]:8333\n-[2600:3c01::f03c:91ff:fe33:2fe1]:8333\n-[2600:3c01::f03c:91ff:fe33:a03f]:8333\n+[2600:3c01::f03c:91ff:fe26:c4b8]:8333\n+[2600:3c01::f03c:91ff:fe3b:1f76]:8333\n [2600:3c01::f03c:91ff:fe50:5e06]:8333\n-[2600:3c01::f03c:91ff:fe56:d645]:8333\n-[2600:3c01::f03c:91ff:fe6e:a3dc]:8333\n-[2600:3c01::f03c:91ff:fe89:a659]:8333\n-[2600:3c02::f03c:91ff:fe6e:6f0b]:8333\n-[2600:3c03::f03c:91ff:fe33:f6fb]:8333\n+[2600:3c01::f03c:91ff:fe61:289b]:8333\n+[2600:3c01::f03c:91ff:fe69:89e9]:8333\n+[2600:3c01::f03c:91ff:fe84:ac15]:8333\n+[2600:3c01::f03c:91ff:fe98:68bb]:8333\n+[2600:3c02::f03c:91ff:fe26:713]:8333\n+[2600:3c02::f03c:91ff:fe26:c49e]:8333\n+[2600:3c02::f03c:91ff:fe84:97d8]:8333\n+[2600:3c02::f03c:91ff:fec8:8feb]:8333\n+[2600:3c03::f03c:91ff:fe18:da80]:8333\n+[2600:3c03::f03c:91ff:fe26:c49b]:8333\n [2600:3c03::f03c:91ff:fe50:5fa7]:8333\n+[2600:3c03::f03c:91ff:fe67:d2e]:8333\n [2600:3c03::f03c:91ff:fe6e:1803]:8333\n-[2600:3c03::f03c:91ff:fe6e:4ac0]:8333\n-[2601:6:4800:47f:1e4e:1f4d:332c:3bf6]:8333\n-[2601:d:5400:fed:8d54:c1e8:7ed7:d45e]:8333\n-[2602:100:4b8f:6d2a:20c:29ff:feaf:c4c2]:8333\n+[2600:3c03::f03c:91ff:fec8:4bbe]:8333\n+[2600:3c03::f03c:91ff:fee4:4e16]:8333\n+[2601:18d:8300:58a6::2e4]:8333\n+[2601:240:4600:40c0:250:56ff:fea4:6305]:8333\n+[2601:581:c200:a719:542c:9cd5:4852:f7d9]:8333\n+[2601:647:4900:85f1:ca2a:14ff:fe51:bb35]:8333\n+[2601:c2:c002:b300:54a0:15b5:19f7:530d]:8333\n+[2602:306:ccff:ad7f:b116:52be:64ba:db3a]:8333\n+[2602:ae:1982:9400:846:f78c:fec:4d57]:8333\n [2602:ffc5:1f::1f:2d61]:8333\n [2602:ffc5:1f::1f:9211]:8333\n+[2602:ffc5::75d5:c1c3]:8333\n [2602:ffc5::ffc5:b844]:8333\n [2602:ffe8:100:2::457:936b]:8333\n-[2602:ffea:1001:125::2ad4]:8333\n-[2602:ffea:1001:6ff::837d]:8333\n+[2602:ffe8:100:2::9d20:2e3c]:8333\n [2602:ffea:1001:72b::578b]:8333\n-[2602:ffea:1001:77a::9cae]:8333\n-[2602:ffea:1:2fe::6bc8]:8333\n-[2602:ffea:1:701::7968]:8333\n-[2602:ffea:1:70d::82ec]:8333\n-[2602:ffea:1:9ff::e957]:8333\n-[2602:ffea:1:a5d::4acb]:8333\n [2602:ffea:a::24c4:d9fd]:8333\n-[2602:ffea:a::c06:ae32]:8333\n [2604:0:c1:100:1ec1:deff:fe54:2235]:8333\n [2604:180:1:1af::42a9]:8333\n-[2604:180::b208:398]:8333\n-[2604:2880::6072:aed]:8333\n+[2604:180:3:702::c9de]:8333\n [2604:4080:1114:0:3285:a9ff:fe93:850c]:8333\n-[2604:7c00:17:3d0::5a4d]:8333\n-[2604:9a00:2100:a009:2::]:8333\n-[2604:a880:1:20::22a:4001]:8333\n-[2604:a880:800:10::752:f001]:8333\n-[2604:c00:88:32:216:3eff:fee4:fcca]:8333\n-[2604:c00:88:32:216:3eff:fef5:bc21]:8333\n-[2605:7980:1:2::1761:3d4e]:8333\n-[2605:e000:1417:4068:223:32ff:fe96:e2d]:8333\n+[2604:6000:ffc0:3c:64a3:94d0:4f1d:1da8]:8333\n+[2605:6000:f380:9a01:ba09:8aff:fed4:3511]:8333\n+[2605:6001:e00f:7b00:c587:6d91:6eff:eeba]:8333\n+[2605:f700:c0:1::25c3:2a3e]:8333\n [2606:6000:a441:9903:5054:ff:fe78:66ff]:8333\n-[2606:df00:2::ae85:8fc6]:8333\n-[2607:5300:100:200::e7f]:8333\n+[2607:5300:100:200::1c83]:9334\n [2607:5300:10::a1]:8333\n-[2607:5300:60:116e::1]:8333\n-[2607:5300:60:1535::]:8333\n-[2607:5300:60:1b32::1]:8333\n-[2607:5300:60:2337::1]:8333\n+[2607:5300:60:1c2f::1]:8333\n [2607:5300:60:2b90::1]:8333\n-[2607:5300:60:2d99::1]:8333\n-[2607:5300:60:3cb::1]:8333\n+[2607:5300:60:3320::1]:8333\n+[2607:5300:60:385::1]:8333\n [2607:5300:60:4a85::]:8333\n-[2607:5300:60:5112:0:2:4af5:63fe]:8333\n-[2607:5300:60:6dd5::]:8333\n-[2607:5300:60:a91::1]:8333\n-[2607:f1c0:820:1500::7f:3f44]:8333\n+[2607:5300:60:65e4::]:8333\n+[2607:5300:60:6918::]:8333\n+[2607:5300:60:711a:78::a7b5]:8333\n+[2607:5300:60:714::1]:8333\n+[2607:5300:60:870::1]:8333\n+[2607:5300:60:952e:3733::1414]:8333\n [2607:f1c0:848:1000::48:943c]:8333\n+[2607:f2e0:f:5df::2]:8333\n+[2607:f748:1200:f8:21e:67ff:fe99:8f07]:8333\n [2607:f948:0:1::7]:8333\n-[2607:fcd0:100:2300::4ad:e594]:8333\n-[2607:fcd0:100:2300::659e:9cb3]:8333\n-[2607:fcd0:100:2300::c74b:a8ae]:8333\n-[2607:fcd0:100:2300::d82:d8c2]:8333\n-[2607:fcd0:100:4300::8795:2fa8]:8333\n-[2607:fcd0:daaa:901::9561:e043]:8333\n+[2607:ff68:100:36::131]:8333\n+[2803:6900:1::117]:8333\n+[2a00:1098:0:80:1000:25:0:1]:8333\n+[2a00:1178:2:43:5054:ff:fe84:f86f]:8333\n [2a00:1178:2:43:5054:ff:fee7:2eb6]:8333\n-[2a00:1328:e100:cc42:230:48ff:fe92:55d]:8333\n+[2a00:1178:2:43:8983:cc27:d72:d97a]:8333\n+[2a00:1328:e100:cc42:230:48ff:fe92:55c]:8333\n [2a00:14f0:e000:80d2:cd1a::1]:8333\n-[2a00:16d8:c::5b6a:c261]:8333\n-[2a00:61e0:4083:6d01:6852:1376:e972:2091]:8333\n-[2a00:c98:2030:a02f:2::2]:8333\n+[2a00:1630:2:1802:188:122:91:11]:8333\n+[2a00:18e0:0:1800::1]:8333\n+[2a00:18e0:0:dcc5:109:234:106:191]:8333\n+[2a00:1a28:1157:87::94c7]:8333\n+[2a00:1ca8:37::a5fc:40d1]:8333\n+[2a00:1ca8:37::ab6d:ce2c]:8333\n+[2a00:7143:100:0:216:3eff:fe2e:74a3]:8333\n+[2a00:7143:100:0:216:3eff:fed3:5c21]:8333\n+[2a00:7c80:0:45::123]:8333\n+[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n+[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n+[2a00:f820:17::4af:1]:8333\n+[2a00:f940:2:1:2::101d]:8333\n+[2a00:f940:2:1:2::6ac]:8333\n [2a01:1b0:7999:402::131]:8333\n-[2a01:1e8:e100:811c:700f:65f0:f72a:1084]:8333\n-[2a01:238:42da:c500:6546:1293:5422:ab40]:8333\n-[2a01:348:6:473::2]:8333\n-[2a01:368:e010:2::2]:8333\n-[2a01:430:17:1::ffff:549]:8333\n-[2a01:430:17:1::ffff:830]:8333\n-[2a01:488:66:1000:53a9:d04:0:1]:8333\n-[2a01:488:66:1000:57e6:578c:0:1]:8333\n+[2a01:238:42dd:f900:7a6c:2bc6:4041:c43]:8333\n+[2a01:238:4313:6300:2189:1c97:696b:5ea]:8333\n+[2a01:488:66:1000:5c33:91f9:0:1]:8333\n [2a01:488:66:1000:b01c:178d:0:1]:8333\n-[2a01:488:67:1000:523:fdce:0:1]:8333\n-[2a01:488:67:1000:b01c:30ab:0:1]:8333\n-[2a01:4f8:100:24aa::2]:8333\n+[2a01:4f8:100:34ce::2]:8333\n+[2a01:4f8:100:34e4::2]:8333\n [2a01:4f8:100:44e7::2]:8333\n+[2a01:4f8:100:510e::2]:8333\n [2a01:4f8:100:5128::2]:8333\n-[2a01:4f8:100:84a7::1:1]:8333\n+[2a01:4f8:110:5105::2]:8333\n [2a01:4f8:110:516c::2]:8333\n-[2a01:4f8:110:536e::2]:8333\n+[2a01:4f8:120:43e4::2]:8333\n [2a01:4f8:120:62e6::2]:8333\n [2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:120:8005::2]:8333\n [2a01:4f8:120:8203::2]:8333\n-[2a01:4f8:120:8422::2]:8333\n-[2a01:4f8:121:11eb::2]:8333\n+[2a01:4f8:121:234d::2]:8333\n [2a01:4f8:121:261::2]:8333\n-[2a01:4f8:130:242b::10]:8333\n-[2a01:4f8:130:242b::5]:8333\n-[2a01:4f8:130:2468::3]:8333\n+[2a01:4f8:130:11ea::2]:8333\n+[2a01:4f8:130:3332::2]:8333\n+[2a01:4f8:130:40ab::2]:8333\n [2a01:4f8:130:632c::2]:8333\n [2a01:4f8:130:6366::2]:8333\n-[2a01:4f8:130:6426::2]:8333\n [2a01:4f8:130:934f::2]:8333\n-[2a01:4f8:131:2070::2]:8333\n-[2a01:4f8:131:54a2::2]:8333\n-[2a01:4f8:140:80ad::2]:8333\n+[2a01:4f8:131:33ad:fea1::666]:8333\n+[2a01:4f8:140:2195::2]:8333\n+[2a01:4f8:140:6333::2]:8333\n+[2a01:4f8:140:930d::2]:8333\n+[2a01:4f8:140:93b0::2]:8333\n+[2a01:4f8:141:1167::2]:8333\n [2a01:4f8:141:186::2]:8333\n-[2a01:4f8:150:210b::2]:8333\n-[2a01:4f8:150:2263::5]:8333\n-[2a01:4f8:150:2349::2]:8333\n-[2a01:4f8:150:61ee::2]:8333\n-[2a01:4f8:150:7088:5054:ff:fe45:bff2]:8333\n+[2a01:4f8:141:53f0::2]:8333\n+[2a01:4f8:150:336a::2]:8333\n+[2a01:4f8:150:72ee::4202]:8333\n [2a01:4f8:150:8324::2]:9001\n-[2a01:4f8:151:1d8::2]:8333\n+[2a01:4f8:151:21ca::2]:8333\n+[2a01:4f8:151:41c2:0:5404:a67e:f250]:8333\n [2a01:4f8:151:5128::2]:8333\n+[2a01:4f8:151:52c6::154]:8333\n [2a01:4f8:151:6347::2]:9001\n-[2a01:4f8:161:526d::2]:8333\n-[2a01:4f8:161:9349::2]:8333\n-[2a01:4f8:162:23c6::2]:8333\n-[2a01:4f8:162:4348::2]:8333\n-[2a01:4f8:162:7345::2]:8333\n-[2a01:4f8:162:7383::2]:8333\n-[2a01:4f8:162:74e3::2]:8333\n-[2a01:4f8:190:6065::2]:8333\n-[2a01:4f8:190:6349::2]:8333\n+[2a01:4f8:160:5136::2]:8333\n+[2a01:4f8:160:72c5::2858:e1c5]:8333\n+[2a01:4f8:160:72c5::593b:60d5]:8333\n+[2a01:4f8:160:814f::2]:8333\n+[2a01:4f8:161:13d0::2]:8333\n+[2a01:4f8:161:228f::2]:8333\n+[2a01:4f8:161:51c4::2]:8333\n+[2a01:4f8:161:60a7::2]:8333\n+[2a01:4f8:161:7026::2]:8333\n+[2a01:4f8:161:9184::2]:8333\n+[2a01:4f8:162:2108::2]:8333\n+[2a01:4f8:162:218c::2]:8333\n+[2a01:4f8:162:4443::2]:8333\n+[2a01:4f8:162:51a3::2]:8333\n+[2a01:4f8:171:b93::2]:8333\n+[2a01:4f8:190:1483::1]:8333\n+[2a01:4f8:190:4495::2]:8333\n [2a01:4f8:190:64c9::2]:8333\n [2a01:4f8:190:91ce::2]:8333\n [2a01:4f8:191:2194::83]:8333\n-[2a01:4f8:191:40a1::2]:8333\n-[2a01:4f8:191:4a7::2]:8333\n-[2a01:4f8:191:63b4:5000::1]:8333\n-[2a01:4f8:191:7121::2]:8333\n+[2a01:4f8:191:40e8::2]:8333\n+[2a01:4f8:191:44b4::2]:8333\n+[2a01:4f8:191:8242::2]:8333\n [2a01:4f8:191:83a2::2]:8333\n-[2a01:4f8:191:93c4::2]:8333\n-[2a01:4f8:192:60a9:0:1:5:2]:8333\n-[2a01:4f8:192:73b2::2]:8333\n-[2a01:4f8:192:8098::2]:8333\n+[2a01:4f8:192:11b2::2]:8333\n+[2a01:4f8:192:216c::2]:8333\n+[2a01:4f8:192:22b3::2]:8333\n+[2a01:4f8:192:440b::2]:8333\n [2a01:4f8:192:db::2]:8333\n [2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:22e3::2]:8333\n-[2a01:4f8:200:414e::2]:8333\n-[2a01:4f8:200:63af::222]:8333\n+[2a01:4f8:200:23d1::dead:beef]:8333\n+[2a01:4f8:200:506d::2]:8333\n+[2a01:4f8:200:51f0::2]:8333\n+[2a01:4f8:200:5389::2]:8333\n+[2a01:4f8:200:53e3::2]:8333\n+[2a01:4f8:200:6344::2]:8333\n+[2a01:4f8:200:6396::2]:8333\n+[2a01:4f8:200:63af::119]:8333\n [2a01:4f8:200:71e3:78b4:f3ff:fead:e8cf]:8333\n-[2a01:4f8:201:5164::2]:8333\n+[2a01:4f8:201:214c::2]:8333\n+[2a01:4f8:201:233:1::3]:8333\n+[2a01:4f8:201:3e3::2]:8333\n [2a01:4f8:201:6011::4]:8333\n [2a01:4f8:201:60d5::2]:8333\n+[2a01:4f8:202:265::2]:8333\n+[2a01:4f8:202:3115::2]:8333\n+[2a01:4f8:202:31e3::2]:8333\n+[2a01:4f8:202:31ef::2]:8333\n+[2a01:4f8:202:3392::2]:8333\n [2a01:4f8:202:53c3::2]:8333\n+[2a01:4f8:202:63f4::2]:8333\n+[2a01:4f8:202:7227::2]:8333\n+[2a01:4f8:210:2227::2]:8333\n [2a01:4f8:210:24aa::2]:8333\n-[2a01:4f8:210:502f::2]:8333\n [2a01:4f8:211:14cf::2]:8333\n-[2a01:4f8:211:1a59::2]:8333\n-[2a01:4f8:211:2ac1::2]:8333\n-[2a01:4f8:211:cca::2]:8333\n-[2a01:4f8:a0:22a5::2]:8333\n-[2a01:4f8:a0:5023::2]:8333\n+[2a01:4f8:211:181b::2]:8333\n+[2a01:4f8:212:289e::2]:8333\n+[2a01:4f8:212:33db::2]:18333\n+[2a01:4f8:a0:112f::2]:8333\n+[2a01:4f8:a0:3174::2]:8333\n+[2a01:4f8:a0:328c::2]:8333\n [2a01:4f8:a0:5243::2]:8333\n-[2a01:4f8:a0:74c8::2]:8333\n-[2a01:4f8:a0:8227::2]:8333\n-[2a01:4f8:a0:822d::2]:8333\n-[2a01:4f8:d13:2183::2]:8333\n+[2a01:4f8:c17:19b9::2]:8333\n+[2a01:4f8:c17:1a41::2]:8333\n+[2a01:4f8:c17:1a92::2]:8333\n+[2a01:4f8:c17:273::2]:8333\n+[2a01:4f8:c17:435::2]:8333\n+[2a01:4f8:c17:755::2]:8333\n+[2a01:4f8:c17:b54::2]:8333\n+[2a01:4f8:d16:9384::2]:8333\n [2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n-[2a01:79d:469e:ed94:c23f:d5ff:fe65:20c5]:8333\n-[2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n+[2a01:680:10:10:f2de:f1ff:fec9:dc0]:8333\n+[2a01:7c8:aaac:1f6:5054:ff:fe30:e585]:8333\n+[2a01:7c8:aaac:20b:5054:ff:fe24:435e]:8333\n+[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n+[2a01:7c8:aaad:256::1]:8333\n+[2a01:7c8:aab6:ea:5054:ff:feff:eac3]:8333\n+[2a01:7c8:aab9:5a:5054:ff:fe89:7b26]:8333\n+[2a01:7c8:aabc:2c8:5054:ff:fe35:6581]:8333\n [2a01:7e00::f03c:91ff:fe18:301e]:8333\n-[2a01:7e00::f03c:91ff:fe18:7749]:8333\n-[2a01:7e00::f03c:91ff:fe33:2d67]:8333\n-[2a01:7e00::f03c:91ff:fe33:347c]:8333\n-[2a01:7e00::f03c:91ff:fe33:ae50]:8333\n-[2a01:7e00::f03c:91ff:fe56:6b5c]:8333\n-[2a01:7e00::f03c:91ff:fe56:bee6]:8333\n-[2a01:7e00::f03c:91ff:fe69:4895]:8333\n-[2a01:7e00::f03c:91ff:fe69:9912]:8333\n-[2a01:7e00::f03c:91ff:fe6e:26ee]:8333\n-[2a01:7e00::f03c:91ff:fe73:42f1]:8333\n+[2a01:7e00::f03c:91ff:fe18:3942]:8333\n+[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n+[2a01:7e00::f03c:91ff:fe50:6206]:8333\n+[2a01:7e00::f03c:91ff:fe67:559d]:8333\n [2a01:7e00::f03c:91ff:fe84:434f]:8333\n-[2a01:7e00::f03c:91ff:fe84:b36b]:8333\n-[2a01:7e00::f03c:91ff:fe89:1faa]:8333\n-[2a01:7e00::f03c:91ff:fe98:816]:8333\n+[2a01:7e00::f03c:91ff:fe89:1143]:8333\n+[2a01:7e00::f03c:91ff:fe98:2505]:8333\n [2a01:7e00::f03c:91ff:fedb:352e]:8333\n-[2a01:7e00::f03c:91ff:fedb:4a1d]:8333\n-[2a01:e34:edbb:6750:224:1dff:fe89:3897]:8333\n-[2a01:e35:2f1d:3fb0:7187:c7ba:bcfc:80ce]:8333\n-[2a01:e35:8787:96f0:9032:9297:39ae:496d]:8333\n+[2a01:7e01::f03c:91ff:fec8:d7b5]:8333\n+[2a01:e34:ee33:1640:c504:f677:b28a:ba42]:8333\n+[2a01:e35:2e7e:bc0:e079:f55e:cef3:b5d7]:8333\n+[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n [2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n-[2a01:e35:8b66:6a0:4900:9dfd:d841:d025]:8333\n-[2a02:168:4a01::39]:8333\n-[2a02:168:5404:2:c23f:d5ff:fe6a:512e]:8333\n-[2a02:180:1:1::5b8f:538c]:8333\n-[2a02:2028:1016::2]:8333\n-[2a02:2528:503:2::14]:8333\n+[2a01:e35:8aca:6a0:211:aff:fe5e:295e]:8333\n+[2a02:180:a:18:81:7:11:50]:8333\n+[2a02:1810:1d87:6a00:5604:a6ff:fe60:d87d]:8333\n+[2a02:2168:1144:5c01:d63d:7eff:fedd:4f8e]:8333\n+[2a02:2498:6d7b:7001:b508:b39d:2cea:5b7a]:8333\n [2a02:2528:503:2::15]:8333\n-[2a02:2528:ff00:81a6:21e:c5ff:fe8d:f9a5]:8333\n-[2a02:2770:5:0:21a:4aff:fee4:c7db]:8333\n-[2a02:2770:8:0:21a:4aff:fe7b:3dcd]:8333\n-[2a02:348:5e:5a29::1]:8333\n-[2a02:7aa0:1619::202f:c06a]:8333\n-[2a02:8109:8e40:35fc:ba27:ebff:feae:cf16]:8333\n-[2a02:af8:6:1500::1:130]:8333\n-[2a02:c200:0:10:1:0:6314:2222]:8333\n-[2a02:c200:0:10:2:3:3295:1]:8332\n-[2a02:c200:0:10:3:0:5449:1]:8333\n-[2a02:c200:1:10:2:3:5899:1]:8333\n-[2a02:c200:1:10::2705:1]:8333\n-[2a02:ce80:0:20::1]:8333\n-[2a02:fe0:c321:27e0:6ef0:49ff:fe11:a61d]:8333\n+[2a02:2528:fa:1a56:216:44ff:fe6a:d112]:8333\n+[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n+[2a02:348:86:3011::1]:8333\n+[2a02:4780:1:1::1:8a01]:8333\n+[2a02:578:5002:116::2]:8333\n+[2a02:6080::1:190b:69e3]:8333\n+[2a02:6080::1:e893:d9d6]:8333\n+[2a02:770:4000::139]:8333\n+[2a02:7aa0:1201::deb3:81a2]:8333\n+[2a02:8010:b001::5860:59b5]:8333\n+[2a02:810d:21c0:f00:a248:1cff:feb8:5348]:8333\n+[2a02:a50::21b:24ff:fe93:4e39]:8333\n+[2a02:a80:0:1200::2]:8333\n+[2a02:c200:0:10:2:1:5830:1]:8333\n+[2a02:c200:0:10:2:5:4692:1]:8333\n+[2a02:c200:0:10:3:0:7158:1]:8333\n+[2a02:c200:0:10::2244:1]:8333\n+[2a02:c200:1:10:2:3:3339:1]:8333\n+[2a02:c200:1:10:2:3:7844:1]:8333\n+[2a02:c200:1:10:2:5:6288:1]:8333\n+[2a02:c200:1:10:3:0:5912:1]:8333\n [2a03:4000:2:496::8]:8333\n-[2a03:b0c0:0:1010::62:f001]:8333\n+[2a03:4000:6:8009::1]:8333\n+[2a03:4000:6:8063::bcd0]:8333\n+[2a03:4900:fffc:b::2]:8333\n+[2a03:b0c0:1:d0::d:5001]:8333\n+[2a03:f80:ed15:149:154:155:235:1]:8333\n+[2a03:f80:ed15:149:154:155:241:1]:8333\n [2a03:f80:ed16:ca7:ea75:b12d:2af:9e2a]:8333\n+[2a04:1980:3100:1aab:290:faff:fe70:a3d8]:8333\n+[2a04:1980:3100:1aab:e61d:2dff:fe29:f590]:8333\n+[2a04:2f80:6:200::89]:8333\n+[2a04:ac00:1:4a0b:5054:ff:fe00:5af5]:8333\n+[2a04:ad80:0:68::35da]:8333\n 3ffk7iumtx3cegbi.onion:8333\n-3hshaantu6ot4upz.onion:8333\n-45c5lc77qgpikafy.onion:8333\n+3nmbbakinewlgdln.onion:8333\n+4j77gihpokxu2kj4.onion:8333\n+546esc6botbjfbxb.onion:8333\n+5at7sq5nm76xijkd.onion:8333\n 77mx2jsxaoyesz2p.onion:8333\n 7g7j54btiaxhtsiy.onion:8333\n-b6fr7dlbu2kpiysf.onion:8333\n-bitcoincfqcssig5.onion:8333\n+a6obdgzn67l7exu3.onion:8333\n+ab64h7olpl7qpxci.onion:8333\n+am2a4rahltfuxz6l.onion:8333\n+azuxls4ihrr2mep7.onion:8333\n+bitcoin7bi4op7wb.onion:8333\n bitcoinostk4e4re.onion:8333\n+bk7yp6epnmcllq72.onion:8333\n bmutjfrj5btseddb.onion:8333\n-drp4pvejybx2ejdr.onion:8333\n-gixnv56d63buypan.onion:8333\n+ceeji4qpfs3ms3zc.onion:8333\n+clexmzqio7yhdao4.onion:8333\n+gb5ypqt63du3wfhn.onion:8333\n h2vlpudzphzqxutd.onion:8333\n-hhiv5pnxenvbf4am.onion:8333\n-lzxpkn6ptp3ohh63.onion:8333\n-msphsgfiqfq5stne.onion:8333\n+n42h7r6oumcfsbrs.onion:4176\n ncwk3lutemffcpc4.onion:8333\n okdzjarwekbshnof.onion:8333\n-sjdomi4yb2dwkjbc.onion:8333\n-uvwozwxlihntigbb.onion:8333\n-v6ylz45dn5ybpk4d.onion:8333\n+pjghcivzkoersesd.onion:8333\n+rw7ocjltix26mefn.onion:8333\n+uws7itep7o3yinxo.onion:8333\n vk3qjdehyy4dwcxw.onion:8333\n vqpye2k5rcqvj5mq.onion:8333\n-xudkoztdfrsuyyou.onion:8333\n-z55v4ostefnwfy32.onion:8333\n+wpi7rpvhnndl52ee.onion:8333"
      },
      {
        "sha": "fba6e87a0f87a01f14d45bd3b61266c11139eef1",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -2,7 +2,7 @@\n # Attempt to guess a canonical system name.\n #   Copyright 1992-2015 Free Software Foundation, Inc.\n \n-timestamp='2015-10-21'\n+timestamp='2015-11-19'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -1393,6 +1393,9 @@ EOF\n     x86_64:VMkernel:*:*)\n \techo ${UNAME_MACHINE}-unknown-esx\n \texit ;;\n+    amd64:Isilon\\ OneFS:*:*)\n+        echo x86_64-unknown-onefs\n+\texit ;;\n esac\n \n cat >&2 <<EOF"
      },
      {
        "sha": "ea8747d30fffb35e8a766b533f5a701f53f8a4dd",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -2,7 +2,7 @@\n # Configuration validation subroutine script.\n #   Copyright 1992-2015 Free Software Foundation, Inc.\n \n-timestamp='2015-08-20'\n+timestamp='2015-11-22'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -53,8 +53,7 @@ timestamp='2015-08-20'\n me=`echo \"$0\" | sed -e 's,.*/,,'`\n \n usage=\"\\\n-Usage: $0 [OPTION] CPU-MFR-OPSYS\n-       $0 [OPTION] ALIAS\n+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n \n Canonicalize a configuration name.\n \n@@ -1399,7 +1398,8 @@ case $os in\n \t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n \t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n \t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n-\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* | -tirtos*)\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \\\n+\t      | -onefs* | -tirtos*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \t-qnx*)"
      },
      {
        "sha": "e2f85ad4fcad867d25fab7db70e62d04ee179601",
        "filename": "depends/packages/bdb.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -12,7 +12,8 @@ $(package)_config_opts_linux=--with-pic\n endef\n \n define $(package)_preprocess_cmds\n-  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h\n+  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h && \\\n+  sed -i.old 's/atomic_init/atomic_init_db/' dbinc/atomic.h mp/mp_region.c mp/mp_mvcc.c mp/mp_fget.c mutex/mut_method.c mutex/mut_tas.c\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "215c694b6b82b498abe773f8c19b34835978909e",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,8 +1,8 @@\n package=boost\n-$(package)_version=1_58_0\n-$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.58.0\n+$(package)_version=1_59_0\n+$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.59.0\n $(package)_file_name=$(package)_$($(package)_version).tar.bz2\n-$(package)_sha256_hash=fdfc204fc33ec79c99b9a74944c3e54bd78be4f7f15e260c0e2700a36dc7d3e5\n+$(package)_sha256_hash=727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca\n \n define $(package)_set_vars\n $(package)_config_opts_release=variant=release"
      },
      {
        "sha": "3d5a6df974bf1f25e5aa7db4c36e4e37bd127b8e",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,12 +1,12 @@\n package=miniupnpc\n-$(package)_version=1.9.20151008\n+$(package)_version=1.9.20151026\n $(package)_download_path=http://miniupnp.free.fr/files\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=e444ac3b587ce82709c4d0cfca1fe71f44f9fc433e9f946b12b9e1bfe667a633\n+$(package)_sha256_hash=f3cf9a5a31588a917d4d9237e5bc50f84d00c5aa48e27ed50d9b88dfa6a25d47\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\"\n-$(package)_build_opts_darwin=OS=Darwin\n+$(package)_build_opts_darwin=OS=Darwin LIBTOOL=\"$($(package)_libtool)\"\n $(package)_build_opts_mingw32=-f Makefile.mingw\n $(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$($(package)_ar)\"\n endef"
      },
      {
        "sha": "cc76f9a7946558be79b9511fbf48f850eb677a1f",
        "filename": "depends/packages/native_ccache.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,8 +1,8 @@\n package=native_ccache\n-$(package)_version=3.2.3\n+$(package)_version=3.2.4\n $(package)_download_path=http://samba.org/ftp/ccache\n $(package)_file_name=ccache-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=b07165d4949d107d17f2f84b90b52953617bf1abbf249d5cc20636f43337c98c\n+$(package)_sha256_hash=ffeb967edb549e67da0bd5f44f729a2022de9fdde65dfd80d2a7204d7f75332e\n \n define $(package)_set_vars\n $(package)_config_opts="
      },
      {
        "sha": "7b866e9c0f66237433d229d7c1652308dd72b5a1",
        "filename": "depends/packages/zeromq.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,8 +1,8 @@\n package=zeromq\n-$(package)_version=4.0.4\n+$(package)_version=4.0.7\n $(package)_download_path=http://download.zeromq.org\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=1ef71d46e94f33e27dd5a1661ed626cd39be4d2d6967792a275040e34457d399\n+$(package)_sha256_hash=e00b2967e074990d0538361cc79084a0a92892df2c6e7585da34e4c61ee47b03\n \n define $(package)_set_vars\n   $(package)_config_opts=--without-documentation --disable-shared"
      },
      {
        "sha": "428fba98e1ba71cc7314555dba6de3fd14f50b0c",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -34,7 +34,7 @@ PROJECT_NAME           = Bitcoin\n # This could be handy for archiving the generated documentation or \n # if some version control system is used.\n \n-PROJECT_NUMBER         = 0.11.99\n+PROJECT_NUMBER         = 0.12.99\n \n # Using the PROJECT_BRIEF tag one can provide an optional one line description \n # for a project that appears at the top of each page and should give viewer "
      },
      {
        "sha": "c0f9ee52205dd3661327a09c8d2813221ec8197a",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core 0.11.99\n+Bitcoin Core 0.12.99\n =====================\n \n Setup"
      },
      {
        "sha": "2d1c4503c917767167a9b7033f205ed772a840c1",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core 0.11.99\r\n+Bitcoin Core 0.12.99\r\n =====================\r\n \r\n Intro\r"
      },
      {
        "sha": "e73add0130f3f1e65a3419130baeddd9d63e299f",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -18,3 +18,5 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.12.0**):\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579)).\n+* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)).\n+* [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494))."
      },
      {
        "sha": "c3cb1b78917d2e61901a7f6a9c3e17392bde2d72",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -5,7 +5,7 @@ This guide will show you how to build bitcoind (headless client) for OS X.\n Notes\n -----\n \n-* Tested on OS X 10.7 through 10.10 on 64-bit Intel processors only.\n+* Tested on OS X 10.7 through 10.11 on 64-bit Intel processors only.\n \n * All of the commands should be executed in a Terminal application. The\n built-in one is located in `/Applications/Utilities`.\n@@ -24,7 +24,7 @@ be re-done or updated every time Xcode is updated.\n You will also need to install [Homebrew](http://brew.sh) in order to install library\n dependencies.\n \n-The installation of the actual dependencies is covered in the Instructions\n+The installation of the actual dependencies is covered in the instructions\n sections below.\n \n Instructions: Homebrew\n@@ -36,17 +36,19 @@ Instructions: Homebrew\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. As such, building with Qt5 is recommended.\n \n-### Building `bitcoind`\n+### Building `bitcoin`\n \n 1. Clone the GitHub tree to get the source code and go into the directory.\n \n         git clone https://github.com/bitcoin/bitcoin.git\n         cd bitcoin\n \n-2.  Build bitcoind:\n+2.  Build bitcoin-core:\n+    This will configure and build the headless bitcoin binaries as well as the gui (if Qt is found).\n+    You can disable the gui build by passing `--without-gui` to configure.\n \n         ./autogen.sh\n-        ./configure --with-gui=qt5\n+        ./configure\n         make\n \n 3.  It is also a good idea to build and run the unit tests:\n@@ -60,10 +62,10 @@ NOTE: Building with Qt4 is still supported, however, could result in a broken UI\n Use Qt Creator as IDE\n ------------------------\n You can use Qt Creator as IDE, for debugging and for manipulating forms, etc.\n-Download Qt Creator from http://www.qt.io/download/. Download the \"community edition\" and only install Qt Creator (uncheck the rest during the installation process).\n+Download Qt Creator from https://www.qt.io/download/. Download the \"community edition\" and only install Qt Creator (uncheck the rest during the installation process).\n \n 1. Make sure you installed everything through Homebrew mentioned above\n-2. Do a proper ./configure --with-gui=qt5 --enable-debug\n+2. Do a proper ./configure --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n 4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n 5. Leave the file selection as it is\n@@ -79,7 +81,7 @@ You can ignore this section if you are building `bitcoind` for your own use.\n \n bitcoind/bitcoin-cli binaries are not included in the Bitcoin-Qt.app bundle.\n \n-If you are building `bitcoind` or `Bitcoin-Qt` for others, your build machine should be set up\n+If you are building `bitcoind` or `Bitcoin Core` for others, your build machine should be set up\n as follows for maximum compatibility:\n \n All dependencies should be compiled with these flags:\n@@ -88,7 +90,7 @@ All dependencies should be compiled with these flags:\n  -arch x86_64\n  -isysroot $(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n \n-Once dependencies are compiled, see [doc/release-process.md](release-process.md) for how the Bitcoin-Qt.app\n+Once dependencies are compiled, see [doc/release-process.md](release-process.md) for how the Bitcoin Core\n bundle is packaged and signed to create the .dmg disk image that is distributed.\n \n Running"
      },
      {
        "sha": "60c9d57b0aa6bf4e247baf20d44ca883e234fabb",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -50,18 +50,21 @@ Optional dependencies:\n \n For the versions used in the release, see [release-process.md](release-process.md) under *Fetch and build inputs*.\n \n-System requirements\n+Memory Requirements\n --------------------\n \n-C++ compilers are memory-hungry. It is recommended to have at least 1 GB of\n-memory available when compiling Bitcoin Core. With 512MB of memory or less\n-compilation will take much longer due to swap thrashing.\n+C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n+memory available when compiling Bitcoin Core. On systems with less, gcc can be\n+tuned to conserve memory with additional CXXFLAGS:\n+\n+\n+    ./configure CXXFLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n \n Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-    sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev bsdmainutils\n+    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils\n \n On at least Ubuntu 14.04+ and Debian 7+ there are generic names for the\n individual boost development packages, so the following can be used to only\n@@ -236,3 +239,9 @@ In this case there is no dependency on Berkeley DB 4.8.\n \n Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n call not `getwork`.\n+\n+Additional Configure Flags\n+--------------------------\n+A list of additional configure flags can be displayed with:\n+\n+    ./configure --help"
      },
      {
        "sha": "358792251b6751d434f9b57c459421290478a65c",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 169,
        "deletions": 0,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -204,3 +204,172 @@ If a set of tools is used by the build system or scripts the repository (for\n example, lcov) it is perfectly acceptable to add its files to `.gitignore`\n and commit them.\n \n+Development guidelines\n+============================\n+\n+A few non-style-related recommendations for developers, as well as points to\n+pay attention to for reviewers of Bitcoin Core code.\n+\n+General Bitcoin Core\n+----------------------\n+\n+- New features should be exposed on RPC first, then can be made available in the GUI\n+\n+  - *Rationale*: RPC allows for better automatic testing. The test suite for\n+    the GUI is very limited\n+\n+- Make sure pull requests pass Travis CI before merging\n+\n+  - *Rationale*: Makes sure that they pass thorough testing, and that the tester will keep passing\n+     on the master branch. Otherwise all new pull requests will start failing the tests, resulting in\n+     confusion and mayhem\n+ \n+  - *Explanation*: If the test suite is to be updated for a change, this has to\n+    be done first \n+\n+Wallet\n+-------\n+\n+- Make sure that no crashes happen with run-time option `-disablewallet`.\n+\n+  - *Rationale*: In RPC code that conditionally uses the wallet (such as\n+    `validateaddress`) it is easy to forget that global pointer `pwalletMain`\n+    can be NULL. See `qa/rpc-tests/disablewallet.py` for functional tests\n+    exercising the API with `-disablewallet`\n+\n+- Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set\n+\n+  - *Rationale*: Otherwise compilation of the disable-wallet build will fail in environments without BerkeleyDB\n+\n+General C++\n+-------------\n+\n+- Assertions should not have side-effects\n+\n+  - *Rationale*: Even though the source code is set to to refuse to compile\n+    with assertions disabled, having side-effects in assertions is unexpected and\n+    makes the code harder to understand\n+\n+- If you use the `.h`, you must link the `.cpp`\n+\n+  - *Rationale*: Include files define the interface for the code in implementation files. Including one but\n+      not linking the other is confusing. Please avoid that. Moving functions from\n+      the `.h` to the `.cpp` should not result in build errors\n+\n+- Use the RAII (Resource Acquisition Is Initialization) paradigm where possible. For example by using\n+  `scoped_pointer` for allocations in a function.\n+\n+  - *Rationale*: This avoids memory and resource leaks, and ensures exception safety\n+\n+C++ data structures\n+--------------------\n+\n+- Never use the `std::map []` syntax when reading from a map, but instead use `.find()`\n+\n+  - *Rationale*: `[]` does an insert (of the default element) if the item doesn't\n+    exist in the map yet. This has resulted in memory leaks in the past, as well as\n+    race conditions (expecting read-read behavior). Using `[]` is fine for *writing* to a map\n+\n+- Do not compare an iterator from one data structure with an iterator of\n+  another data structure (even if of the same type)\n+\n+  - *Rationale*: Behavior is undefined. In C++ parlor this means \"may reformat\n+    the universe\", in practice this has resulted in at least one hard-to-debug crash bug\n+\n+- Watch out for vector out-of-bounds exceptions. `&vch[0]` is illegal for an\n+  empty vector, `&vch[vch.size()]` is always illegal. Use `begin_ptr(vch)` and\n+  `end_ptr(vch)` to get the begin and end pointer instead (defined in\n+  `serialize.h`)\n+\n+- Vector bounds checking is only enabled in debug mode. Do not rely on it\n+\n+- Make sure that constructors initialize all fields. If this is skipped for a\n+  good reason (i.e., optimization on the critical path), add an explicit\n+  comment about this\n+\n+  - *Rationale*: Ensure determinism by avoiding accidental use of uninitialized\n+    values. Also, static analyzers balk about this.\n+\n+- Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n+  `int8_t`. Do not use bare `char` unless it is to pass to a third-party API.\n+  This type can be signed or unsigned depending on the architecture, which can\n+  lead to interoperability problems or dangerous conditions such as\n+  out-of-bounds array accesses\n+\n+- Prefer explicit constructions over implicit ones that rely on 'magical' C++ behavior\n+\n+  - *Rationale*: Easier to understand what is happening, thus easier to spot mistakes, even for those\n+  that are not language lawyers\n+\n+Strings and formatting\n+------------------------\n+\n+- Be careful of `LogPrint` versus `LogPrintf`. `LogPrint` takes a `category` argument, `LogPrintf` does not.\n+\n+  - *Rationale*: Confusion of these can result in runtime exceptions due to\n+    formatting mismatch, and it is easy to get wrong because of subtly similar naming\n+\n+- Use `std::string`, avoid C string manipulation functions\n+\n+  - *Rationale*: C++ string handling is marginally safer, less scope for\n+    buffer overflows and surprises with `\\0` characters. Also some C string manipulations\n+    tend to act differently depending on platform, or even the user locale\n+\n+- Use `ParseInt32`, `ParseInt64`, `ParseDouble` from `utilstrencodings.h` for number parsing\n+\n+  - *Rationale*: These functions do overflow checking, and avoid pesky locale issues\n+\n+- For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n+\n+  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+\n+Threads and synchronization\n+----------------------------\n+\n+- Build and run tests with `-DDEBUG_LOCKORDER` to verify that no potential\n+  deadlocks are introduced. As of 0.12, this is defined by default when\n+  configuring with `--enable-debug`\n+\n+- When using `LOCK`/`TRY_LOCK` be aware that the lock exists in the context of\n+  the current scope, so surround the statement and the code that needs the lock\n+  with braces\n+\n+  OK:\n+\n+```c++\n+{\n+    TRY_LOCK(cs_vNodes, lockNodes);\n+    ...\n+}\n+```\n+\n+  Wrong:\n+\n+```c++\n+TRY_LOCK(cs_vNodes, lockNodes);\n+{\n+    ...\n+}\n+```\n+\n+Source code organization\n+--------------------------\n+\n+- Implementation code should go into the `.cpp` file and not the `.h`, unless necessary due to template usage or\n+  when performance due to inlining is critical\n+\n+  - *Rationale*: Shorter and simpler header files are easier to read, and reduce compile time\n+\n+- Don't import anything into the global namespace (`using namespace ...`). Use\n+  fully specified types such as `std::string`.\n+\n+  - *Rationale*: Avoids symbol conflicts\n+\n+GUI\n+-----\n+\n+- Do not display or manipulate dialogs in model code (classes `*Model`)\n+\n+  - *Rationale*: Model classes pass through events and data from the core, they\n+    should not interact with the user. That's where View classes come in. The converse also\n+    holds: try to not directly access core data structures from Views."
      },
      {
        "sha": "5ca91505e7c2ae27cdbabf5a6524dc12670e82bf",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -74,11 +74,11 @@ In the VirtualBox GUI click \"Create\" and choose the following parameters in the\n - File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side\n - Click `Create`\n \n-Get the [Debian 8.x net installer](http://cdimage.debian.org/debian-cd/8.2.0/amd64/iso-cd/debian-8.2.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n+Get the [Debian 8.x net installer](http://cdimage.debian.org/debian-cd/8.3.0/amd64/iso-cd/debian-8.3.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n This DVD image can be validated using a SHA256 hashing tool, for example on\n Unixy OSes by entering the following in a terminal:\n \n-    echo \"d393d17ac6b3113c81186e545c416a00f28ed6e05774284bb5e8f0df39fcbcb9  debian-8.2.0-amd64-netinst.iso\" | sha256sum -c\n+    echo \"dd25bcdde3c6ea5703cc0f313cde621b13d42ff7d252e2538a11663c93bf8654  debian-8.3.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n After creating the VM, we need to configure it.\n@@ -259,15 +259,15 @@ adduser debian sudo\n Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n \n ```bash\n-# the version of lxc-start in Debian 7.4 needs to run as root, so make sure\n+# the version of lxc-start in Debian needs to run as root, so make sure\n # that the build script can execute it without providing a password\n echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n-# add cgroup for LXC\n-echo \"cgroup  /sys/fs/cgroup  cgroup  defaults  0   0\" >> /etc/fstab\n # make /etc/rc.local script that sets up bridge between guest and host\n echo '#!/bin/sh -e' > /etc/rc.local\n echo 'brctl addbr br0' >> /etc/rc.local\n echo 'ifconfig br0 10.0.3.2/24 up' >> /etc/rc.local\n+echo 'iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE' >> /etc/rc.local\n+echo 'echo 1 > /proc/sys/net/ipv4/ip_forward' >> /etc/rc.local\n echo 'exit 0' >> /etc/rc.local\n # make sure that USE_LXC is always set when logging in as debian,\n # and configure LXC IP addresses\n@@ -305,6 +305,7 @@ Clone the git repositories for bitcoin and Gitian.\n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n git clone https://github.com/bitcoin/bitcoin\n+git clone https://github.com/bitcoin/gitian.sigs.git\n ```\n \n Setting up the Gitian image"
      },
      {
        "sha": "801b684e6b113144259d6dbac38e811dc6755cae",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 10,
        "deletions": 230,
        "changes": 240,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -4,208 +4,11 @@ release-notes at release time)\n Notable changes\n ===============\n \n-SSL support for RPC dropped\n-----------------------------\n+Example item\n+----------------\n \n-SSL support for RPC, previously enabled by the option `rpcssl` has been dropped\n-from both the client and the server. This was done in preparation for removing\n-the dependency on OpenSSL for the daemon completely.\n \n-Trying to use `rpcssl` will result in an error:\n-\n-    Error: SSL mode for RPC (-rpcssl) is no longer supported.\n-\n-If you are one of the few people that relies on this feature, a flexible\n-migration path is to use `stunnel`. This is an utility that can tunnel\n-arbitrary TCP connections inside SSL. On e.g. Ubuntu it can be installed with:\n-\n-    sudo apt-get install stunnel4\n-\n-Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on port 18332 do:\n-\n-    stunnel -d 28332 -r 127.0.0.1:18332 -p stunnel.pem -P ''\n-\n-It can also be set up system-wide in inetd style.\n-\n-Another way to re-attain SSL would be to setup a httpd reverse proxy. This solution\n-would allow the use of different authentication, loadbalancing, on-the-fly compression and\n-caching. A sample config for apache2 could look like:\n-\n-    Listen 443\n-\n-    NameVirtualHost *:443\n-    <VirtualHost *:443>\n-\n-    SSLEngine On\n-    SSLCertificateFile /etc/apache2/ssl/server.crt\n-    SSLCertificateKeyFile /etc/apache2/ssl/server.key\n-\n-    <Location /bitcoinrpc>\n-        ProxyPass http://127.0.0.1:8332/\n-        ProxyPassReverse http://127.0.0.1:8332/\n-        # optional enable digest auth\n-        # AuthType Digest\n-        # ...\n-\n-        # optional bypass bitcoind rpc basic auth\n-        # RequestHeader set Authorization \"Basic <hash>\"\n-        # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n-    </Location>\n-\n-    # Or, balance the load:\n-    # ProxyPass / balancer://balancer_cluster_name\n-\n-    </VirtualHost>\n-\n-Random-cookie RPC authentication\n----------------------------------\n-\n-When no `-rpcpassword` is specified, the daemon now uses a special 'cookie'\n-file for authentication. This file is generated with random content when the\n-daemon starts, and deleted when it exits. Its contents are used as\n-authentication token. Read access to this file controls who can access through\n-RPC. By default it is stored in the data directory but its location can be\n-overridden with the option `-rpccookiefile`.\n-\n-This is similar to Tor's CookieAuthentication: see\n-https://www.torproject.org/docs/tor-manual.html.en\n-\n-This allows running bitcoind without having to do any manual configuration.\n-\n-Low-level RPC API changes\n---------------------------\n-\n-- Monetary amounts can be provided as strings. This means that for example the\n-  argument to sendtoaddress can be \"0.0001\" instead of 0.0001. This can be an\n-  advantage if a JSON library insists on using a lossy floating point type for\n-  numbers, which would be dangerous for monetary amounts.\n-\n-Option parsing behavior\n------------------------\n-\n-Command line options are now parsed strictly in the order in which they are\n-specified. It used to be the case that `-X -noX` ends up, unintuitively, with X\n-set, as `-X` had precedence over `-noX`. This is no longer the case. Like for\n-other software, the last specified value for an option will hold.\n-\n-`NODE_BLOOM` service bit\n-------------------------\n-\n-Support for the `NODE_BLOOM` service bit, as described in [BIP\n-111](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n-added to the P2P protocol code.\n-\n-BIP 111 defines a service bit to allow peers to advertise that they support\n-bloom filters (such as used by SPV clients) explicitly. It also bumps the protocol\n-version to allow peers to identify old nodes which allow bloom filtering of the\n-connection despite lacking the new service bit.\n-\n-In this version, it is only enforced for peers that send protocol versions\n-`>=70011`. For the next major version it is planned that this restriction will be\n-removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n-service bit for nodes that report versions newer than 70011.\n-\n-Any sequence of pushdatas in OP_RETURN outputs now allowed\n-----------------------------------------------------------\n-\n-Previously OP_RETURN outputs with a payload were only relayed and mined if they\n-had a single pushdata. This restriction has been lifted to allow any\n-combination of data pushes and numeric constant opcodes (OP_1 to OP_16). The\n-limit on OP_RETURN output size is now applied to the entire serialized\n-scriptPubKey, 83 bytes by default. (the previous 80 byte default plus three\n-bytes overhead)\n-\n-Merkle branches removed from wallet\n------------------------------------\n-\n-Previously, every wallet transaction stored a Merkle branch to prove its\n-presence in blocks. This wasn't being used for more than an expensive\n-sanity check. Since 0.12, these are no longer stored. When loading a\n-0.12 wallet into an older version, it will automatically rescan to avoid\n-failed checks.\n-\n-BIP65 - CHECKLOCKTIMEVERIFY\n----------------------------\n-\n-Previously it was impossible to create a transaction output that was guaranteed\n-to be unspendable until a specific date in the future. CHECKLOCKTIMEVERIFY is a\n-new opcode that allows a script to check if a specific block height or time has\n-been reached, failing the script otherwise. This enables a wide variety of new\n-functionality such as time-locked escrows, secure payment channels, etc.\n-\n-BIP65 implements CHECKLOCKTIMEVERIFY by introducing block version 4, which adds\n-additional restrictions to the NOP2 opcode. The same miner-voting mechanism as\n-in BIP34 and BIP66 is used: when 751 out of a sequence of 1001 blocks have\n-version number 4 or higher, the new consensus rule becomes active for those\n-blocks. When 951 out of a sequence of 1001 blocks have version number 4 or\n-higher, it becomes mandatory for all blocks and blocks with versions less than\n-4 are rejected.\n-\n-Bitcoin Core's block templates are now for version 4 blocks only, and any\n-mining software relying on its `getblocktemplate` must be updated in parallel\n-to use either libblkmaker version 0.4.3 or any version from 0.5.2 onward. If\n-you are solo mining, this will affect you the moment you upgrade Bitcoin Core,\n-which must be done prior to BIP65 achieving its 951/1001 status.  If you are\n-mining with the stratum mining protocol: this does not affect you.  If you are\n-mining with the getblocktemplate protocol to a pool: this will affect you at\n-the pool operator's discretion, which must be no later than BIP65 achieving its\n-951/1001 status.\n-\n-Automatically listen on Tor\n-----------------------------\n-\n-Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n-API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n-\n-This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. This will positively affect the number of available\n-.onion nodes.\n-\n-This new feature is enabled by default if Bitcoin Core is listening, and\n-a connection to Tor can be made. It can be configured with the `-listenonion`,\n-`-torcontrol` and `-torpassword` settings. To show verbose debugging\n-information, pass `-debug=tor`.\n-\n-Reduce upload traffic\n----------------------\n-\n-A major part of the outbound traffic is caused by serving historic blocks to\n-other nodes in initial block download state.\n-\n-It is now possible to reduce the total upload traffic via the `-maxuploadtarget`\n-parameter. This is *not* a hard limit but a threshold to minimize the outbound\n-traffic. When the limit is about to be reached, the uploaded data is cut by not\n-serving historic blocks (blocks older than one week).\n-Moreover, any SPV peer is disconnected when they request a filtered block.\n-\n-This option can be specified in MiB per day and is turned off by default\n-(`-maxuploadtarget=0`).\n-The recommended minimum is 144 * MAX_BLOCK_SIZE (currently 144MB) per day.\n-\n-Whitelisted peers will never be disconnected, although their traffic counts for\n-calculating the target.\n-\n-A more detailed documentation about keeping traffic low can be found in\n-[/doc/reducetraffic.md](/doc/reducetraffic.md).\n-\n-Signature validation using libsecp256k1\n----------------------------------------\n-\n-ECDSA signatures inside Bitcoin transactions now use validation using\n-[https://github.com/bitcoin/secp256k1](libsecp256k1) instead of OpenSSL.\n-\n-Depending on the platform, this means a significant speedup for raw signature\n-validation speed. The advantage is largest on x86_64, where validation is over\n-five times faster. In practice, this translates to a raw reindexing and new\n-block validation times that are less than half of what it was before.\n-\n-Libsecp256k1 has undergone very extensive testing and validation.\n-\n-A side effect of this change is that libconsensus no longer depends on OpenSSL.\n-\n-0.12.0 Change log\n+0.13.0 Change log\n =================\n \n Detailed release notes follow. This overview includes changes that affect\n@@ -215,33 +18,20 @@ git merge commit are mentioned.\n \n ### RPC and REST\n \n-Asm representations of scriptSig signatures now contain SIGHASH type decodes\n-----------------------------------------------------------------------------\n-\n-The `asm` property of each scriptSig now contains the decoded signature hash\n-type for each signature that provides a valid defined hash type.\n+Asm script outputs now contain OP_CHECKLOCKTIMEVERIFY in place of OP_NOP2\n+-------------------------------------------------------------------------\n \n-The following items contain assembly representations of scriptSig signatures\n-and are affected by this change:\n+OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP \n+65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n \n-- RPC `getrawtransaction`\n+The following outputs are affected by this change:\n+- RPC `getrawtransaction` (in verbose mode)\n - RPC `decoderawtransaction`\n+- RPC `decodescript`\n - REST `/rest/tx/` (JSON format)\n - REST `/rest/block/` (JSON format when including extended tx details)\n - `bitcoin-tx -json`\n \n-For example, the `scriptSig.asm` property of a transaction input that\n-previously showed an assembly representation of:\n-\n-    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c509001\n-\n-now shows as:\n-\n-    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c5090[ALL]\n-\n-Note that the output of the RPC `decodescript` did not change because it is\n-configured specifically to process scriptPubKey and not scriptSig scripts.\n-\n ### Configuration and command-line options\n \n ### Block and transaction handling\n@@ -260,13 +50,3 @@ configured specifically to process scriptPubKey and not scriptSig scripts.\n \n ### Miscellaneous\n \n-- Removed bitrpc.py from contrib\n-\n-Addition of ZMQ-based Notifications\n-==================================\n-\n-Bitcoind can now (optionally) asynchronously notify clients through a\n-ZMQ-based PUB socket of the arrival of new transactions and blocks.\n-This feature requires installation of the ZMQ C API library 4.x and\n-configuring its use through the command line or configuration file.\n-Please see docs/zmq.md for details of operation."
      },
      {
        "sha": "c27f607b5c58e3c2f16bb49bbcf7d8122e40af85",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -23,7 +23,7 @@ hundreds of blocks long.\n Bitcoin-Qt no longer automatically selects the first address\n in the address book (Issue #1384).\n \n-Fixed minimize-to-dock behavior of Bitcon-Qt on the Mac.\n+Fixed minimize-to-dock behavior of Bitcoin-Qt on the Mac.\n \n Added a block checkpoint at block 185,333 to speed up initial\n blockchain download."
      },
      {
        "sha": "39e3032a67a757603fa75827b41c1db2b106cb39",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 23,
        "deletions": 10,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -41,6 +41,7 @@ Check out the source code in the following directory hierarchy.\n \tpushd ./bitcoin\n \texport SIGNER=(your Gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n+\tgit fetch\n \tgit checkout v${VERSION}\n \tpopd\n \n@@ -83,25 +84,16 @@ NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from\n ```\n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n-###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n+###Build and Sign Bitcoin Core for Linux, Windows, and OS X:\n \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\tmv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\tmv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\tmv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\tmv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\tmv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n-\tpopd\n \n   Build output expected:\n \n@@ -111,6 +103,27 @@ The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n   4. OS X unsigned installer and dist tarball (bitcoin-${VERSION}-osx-unsigned.dmg, bitcoin-${VERSION}-osx64.tar.gz)\n   5. Gitian signatures (in gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/\n \n+###Verify other gitian builders signatures to your own. (Optional)\n+\n+  Add other gitian builders keys to your gpg keyring\n+\n+\tgpg --import ../bitcoin/contrib/gitian-downloader/*.pgp\n+\n+  Verify the signatures\n+\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\n+###Move the outputs to the correct directory\n+\n+\tmv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n+\tmv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n+\tmv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n+\tmv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n+\tmv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n+\tpopd\n+\n ###Next steps:\n \n Commit your signature to gitian.sigs:"
      },
      {
        "sha": "310d560b364fa043539de0e8640c0bb6714759d8",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -74,10 +74,10 @@ The Transifex Bitcoin project config file is included as part of the repo. It ca\n To assist in updating translations, we have created a script to help.\n \n 1. `python contrib/devtools/update-translations.py`\n-2. Update `src/qt/bitcoin.qrc` manually or via\n+2. Update `src/qt/bitcoin_locale.qrc` manually or via\n    `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'`\n-3. Update `src/qt/Makefile.am` manually or via\n-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  locale\\/\\1.ts \\\\/'`\n+3. Update `src/Makefile.qt.include` manually or via\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'`\n 4. `git add` new translations from `src/qt/locale/`\n \n **Do not directly download translations** one by one from the Transifex website, as we do a few post-processing steps before committing the translations."
      },
      {
        "sha": "afaece829c77d4832364231db459f25c23450e49",
        "filename": "doc/unit-tests.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,18 +1,18 @@\n Compiling/running unit tests\n ------------------------------------\n \n-Unit tests will be automatically compiled if dependencies were met in configure\n+Unit tests will be automatically compiled if dependencies were met in `./configure`\n and tests weren't explicitly disabled.\n \n-After configuring, they can be run with 'make check'.\n+After configuring, they can be run with `make check`.\n \n-To run the bitcoind tests manually, launch src/test/test_bitcoin .\n+To run the bitcoind tests manually, launch `src/test/test_bitcoin`.\n \n To add more bitcoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n-.cpp files in the test/ directory or add new .cpp files that\n+.cpp files in the `test/` directory or add new .cpp files that\n implement new BOOST_AUTO_TEST_SUITE sections.\n \n-To run the bitcoin-qt tests manually, launch src/qt/test/test_bitcoin-qt\n+To run the bitcoin-qt tests manually, launch `src/qt/test/test_bitcoin-qt`\n \n To add more bitcoin-qt tests, add them to the `src/qt/test/` directory and\n the `src/qt/test/test_main.cpp` file."
      },
      {
        "sha": "e7173fda080fec4644ca64f76fada5525cef9fd4",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 28,
        "deletions": 10,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -22,6 +22,7 @@\n \"\"\"\n \n import os\n+import time\n import shutil\n import sys\n import subprocess\n@@ -47,6 +48,10 @@\n passOn = \"\"\n p = re.compile(\"^--\")\n \n+bold = (\"\",\"\")\n+if (os.name == 'posix'):\n+    bold = ('\\033[0m', '\\033[1m')\n+\n for arg in sys.argv[1:]:\n     if arg == '--coverage':\n         ENABLE_COVERAGE = 1\n@@ -57,8 +62,10 @@\n \n #Set env vars\n buildDir = BUILDDIR\n-os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n-os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n+if \"BITCOIND\" not in os.environ:\n+    os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n+if \"BITCOINCLI\" not in os.environ:\n+    os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n \n #Disable Windows tests by default\n if EXEEXT == \".exe\" and \"-win\" not in opts:\n@@ -77,8 +84,10 @@\n     'rawtransactions.py',\n     'rest.py',\n     'mempool_spendcoinbase.py',\n-    'mempool_coinbase_spends.py',\n+    'mempool_reorg.py',\n+    'mempool_limit.py',\n     'httpbasics.py',\n+    'multi_rpc.py',\n     'zapwallettxes.py',\n     'proxy_test.py',\n     'merkle_blocks.py',\n@@ -91,6 +100,12 @@\n     'p2p-fullblocktest.py',\n     'blockchain.py',\n     'disablewallet.py',\n+    'sendheaders.py',\n+    'keypool.py',\n+    'prioritise_transaction.py',\n+    'invalidblockrequest.py',\n+    'invalidtxrequest.py',\n+    'abandonconflict.py',\n ]\n testScriptsExt = [\n     'bip65-cltv.py',\n@@ -104,14 +119,13 @@\n     'pruning.py',\n     'forknotify.py',\n     'invalidateblock.py',\n-    'keypool.py',\n #    'rpcbind_test.py', #temporary, bug in libevent, see #6655\n     'smartfees.py',\n     'maxblocksinflight.py',\n-    'invalidblockrequest.py',\n     'p2p-acceptblock.py',\n     'mempool_packages.py',\n     'maxuploadtarget.py',\n+    'replace-by-fee.py',\n ]\n \n #Enable ZMQ tests\n@@ -124,7 +138,7 @@ def runtests():\n \n     if ENABLE_COVERAGE:\n         coverage = RPCCoverage()\n-        print(\"Initializing coverage directory at %s\" % coverage.dir)\n+        print(\"Initializing coverage directory at %s\\n\" % coverage.dir)\n \n     if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n         rpcTestDir = buildDir + '/qa/rpc-tests/'\n@@ -139,10 +153,12 @@ def runtests():\n                     or run_extended\n                     or testScripts[i] in opts\n                     or re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n-                print(\"Running testscript \" + testScripts[i] + \"...\")\n \n+                print(\"Running testscript %s%s%s ...\" % (bold[1], testScripts[i], bold[0]))\n+                time0 = time.time()\n                 subprocess.check_call(\n                     rpcTestDir + testScripts[i] + flags, shell=True)\n+                print(\"Duration: %s s\\n\" % (int(time.time() - time0)))\n \n                 # exit if help is called so we print just one set of\n                 # instructions\n@@ -154,12 +170,14 @@ def runtests():\n         for i in range(len(testScriptsExt)):\n             if (run_extended or testScriptsExt[i] in opts\n                     or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n+\n                 print(\n                     \"Running 2nd level testscript \"\n-                    + testScriptsExt[i] + \"...\")\n-\n+                    + \"%s%s%s ...\" % (bold[1], testScriptsExt[i], bold[0]))\n+                time0 = time.time()\n                 subprocess.check_call(\n                     rpcTestDir + testScriptsExt[i] + flags, shell=True)\n+                print(\"Duration: %s s\\n\" % (int(time.time() - time0)))\n \n         if coverage:\n             coverage.report_rpc_coverage()"
      },
      {
        "sha": "651b01f18a4711b1dacc8b9e7408fbc896e1be48",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -47,10 +47,7 @@ implements the test logic.\n * ```NodeConn``` is the class used to connect to a bitcoind.  If you implement\n a callback class that derives from ```NodeConnCB``` and pass that to the\n ```NodeConn``` object, your code will receive the appropriate callbacks when\n-events of interest arrive.  NOTE: be sure to call\n-```self.create_callback_map()``` in your derived classes' ```__init__```\n-function, so that the correct mappings are set up between p2p messages and your\n-callback functions.\n+events of interest arrive.\n \n * You can pass the same handler to multiple ```NodeConn```'s if you like, or pass\n different ones to each -- whatever makes the most sense for your test."
      },
      {
        "sha": "38028df07902ceeb81d935105ca3f4a8a8fa339d",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,153 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+try:\n+    import urllib.parse as urlparse\n+except ImportError:\n+    import urlparse\n+\n+class AbandonConflictTest(BitcoinTestFramework):\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-debug\",\"-logtimemicros\",\"-minrelaytxfee=0.00001\"]))\n+        self.nodes.append(start_node(1, self.options.tmpdir, [\"-debug\",\"-logtimemicros\"]))\n+        connect_nodes(self.nodes[0], 1)\n+\n+    def run_test(self):\n+        self.nodes[1].generate(100)\n+        sync_blocks(self.nodes)\n+        balance = self.nodes[0].getbalance()\n+        txA = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txB = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        txC = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        sync_mempools(self.nodes)\n+        self.nodes[1].generate(1)\n+\n+        sync_blocks(self.nodes)\n+        newbalance = self.nodes[0].getbalance()\n+        assert(balance - newbalance < Decimal(\"0.001\")) #no more than fees lost\n+        balance = newbalance\n+\n+        url = urlparse.urlparse(self.nodes[1].url)\n+        self.nodes[0].disconnectnode(url.hostname+\":\"+str(p2p_port(1)))\n+\n+        # Identify the 10btc outputs\n+        nA = next(i for i, vout in enumerate(self.nodes[0].getrawtransaction(txA, 1)[\"vout\"]) if vout[\"value\"] == Decimal(\"10\"))\n+        nB = next(i for i, vout in enumerate(self.nodes[0].getrawtransaction(txB, 1)[\"vout\"]) if vout[\"value\"] == Decimal(\"10\"))\n+        nC = next(i for i, vout in enumerate(self.nodes[0].getrawtransaction(txC, 1)[\"vout\"]) if vout[\"value\"] == Decimal(\"10\"))\n+\n+        inputs =[]\n+        # spend 10btc outputs from txA and txB\n+        inputs.append({\"txid\":txA, \"vout\":nA})\n+        inputs.append({\"txid\":txB, \"vout\":nB})\n+        outputs = {}\n+\n+        outputs[self.nodes[0].getnewaddress()] = Decimal(\"14.99998\")\n+        outputs[self.nodes[1].getnewaddress()] = Decimal(\"5\")\n+        signed = self.nodes[0].signrawtransaction(self.nodes[0].createrawtransaction(inputs, outputs))\n+        txAB1 = self.nodes[0].sendrawtransaction(signed[\"hex\"])\n+\n+        # Identify the 14.99998btc output\n+        nAB = next(i for i, vout in enumerate(self.nodes[0].getrawtransaction(txAB1, 1)[\"vout\"]) if vout[\"value\"] == Decimal(\"14.99998\"))\n+\n+        #Create a child tx spending AB1 and C\n+        inputs = []\n+        inputs.append({\"txid\":txAB1, \"vout\":nAB})\n+        inputs.append({\"txid\":txC, \"vout\":nC})\n+        outputs = {}\n+        outputs[self.nodes[0].getnewaddress()] = Decimal(\"24.9996\")\n+        signed2 = self.nodes[0].signrawtransaction(self.nodes[0].createrawtransaction(inputs, outputs))\n+        txABC2 = self.nodes[0].sendrawtransaction(signed2[\"hex\"])\n+\n+        # In mempool txs from self should increase balance from change\n+        newbalance = self.nodes[0].getbalance()\n+        assert(newbalance == balance - Decimal(\"30\") + Decimal(\"24.9996\"))\n+        balance = newbalance\n+\n+        # Restart the node with a higher min relay fee so the parent tx is no longer in mempool\n+        # TODO: redo with eviction\n+        # Note had to make sure tx did not have AllowFree priority\n+        stop_node(self.nodes[0],0)\n+        self.nodes[0]=start_node(0, self.options.tmpdir, [\"-debug\",\"-logtimemicros\",\"-minrelaytxfee=0.0001\"])\n+\n+        # Verify txs no longer in mempool\n+        assert(len(self.nodes[0].getrawmempool()) == 0)\n+\n+        # Not in mempool txs from self should only reduce balance\n+        # inputs are still spent, but change not received\n+        newbalance = self.nodes[0].getbalance()\n+        assert(newbalance == balance - Decimal(\"24.9996\"))\n+        balance = newbalance\n+\n+        # Abandon original transaction and verify inputs are available again\n+        # including that the child tx was also abandoned\n+        self.nodes[0].abandontransaction(txAB1)\n+        newbalance = self.nodes[0].getbalance()\n+        assert(newbalance == balance + Decimal(\"30\"))\n+        balance = newbalance\n+\n+        # Verify that even with a low min relay fee, the tx is not reaccepted from wallet on startup once abandoned\n+        stop_node(self.nodes[0],0)\n+        self.nodes[0]=start_node(0, self.options.tmpdir, [\"-debug\",\"-logtimemicros\",\"-minrelaytxfee=0.00001\"])\n+        assert(len(self.nodes[0].getrawmempool()) == 0)\n+        assert(self.nodes[0].getbalance() == balance)\n+\n+        # But if its received again then it is unabandoned\n+        # And since now in mempool, the change is available\n+        # But its child tx remains abandoned\n+        self.nodes[0].sendrawtransaction(signed[\"hex\"])\n+        newbalance = self.nodes[0].getbalance()\n+        assert(newbalance == balance - Decimal(\"20\") + Decimal(\"14.99998\"))\n+        balance = newbalance\n+\n+        # Send child tx again so its unabandoned\n+        self.nodes[0].sendrawtransaction(signed2[\"hex\"])\n+        newbalance = self.nodes[0].getbalance()\n+        assert(newbalance == balance - Decimal(\"10\") - Decimal(\"14.99998\") + Decimal(\"24.9996\"))\n+        balance = newbalance\n+\n+        # Remove using high relay fee again\n+        stop_node(self.nodes[0],0)\n+        self.nodes[0]=start_node(0, self.options.tmpdir, [\"-debug\",\"-logtimemicros\",\"-minrelaytxfee=0.0001\"])\n+        assert(len(self.nodes[0].getrawmempool()) == 0)\n+        newbalance = self.nodes[0].getbalance()\n+        assert(newbalance == balance - Decimal(\"24.9996\"))\n+        balance = newbalance\n+\n+        # Create a double spend of AB1 by spending again from only A's 10 output\n+        # Mine double spend from node 1\n+        inputs =[]\n+        inputs.append({\"txid\":txA, \"vout\":nA})\n+        outputs = {}\n+        outputs[self.nodes[1].getnewaddress()] = Decimal(\"9.9999\")\n+        tx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signed = self.nodes[0].signrawtransaction(tx)\n+        self.nodes[1].sendrawtransaction(signed[\"hex\"])\n+        self.nodes[1].generate(1)\n+\n+        connect_nodes(self.nodes[0], 1)\n+        sync_blocks(self.nodes)\n+\n+        # Verify that B and C's 10 BTC outputs are available for spending again because AB1 is now conflicted\n+        newbalance = self.nodes[0].getbalance()\n+        assert(newbalance == balance + Decimal(\"20\"))\n+        balance = newbalance\n+\n+        # There is currently a minor bug around this and so this test doesn't work.  See Issue #7315\n+        # Invalidate the block with the double spend and B's 10 BTC output should no longer be available\n+        # Don't think C's should either\n+        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        newbalance = self.nodes[0].getbalance()\n+        #assert(newbalance == balance - Decimal(\"10\"))\n+        print \"If balance has not declined after invalidateblock then out of mempool wallet tx which is no longer\"\n+        print \"conflicted has not resumed causing its inputs to be seen as spent.  See Issue #7315\"\n+        print balance , \" -> \" , newbalance , \" ?\"\n+\n+if __name__ == '__main__':\n+    AbandonConflictTest().main()"
      },
      {
        "sha": "bbd518cf5ff8e3ca6a76411aec1c9605624e2df6",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-#\n+# Copyright (c) 2015 The Bitcoin Core developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -9,8 +9,8 @@\n from test_framework.mininode import CTransaction, NetworkThread\n from test_framework.blocktools import create_coinbase, create_block\n from test_framework.comptool import TestInstance, TestManager\n-from test_framework.script import CScript, OP_1NEGATE, OP_NOP2, OP_DROP\n-from binascii import hexlify, unhexlify\n+from test_framework.script import CScript, OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP\n+from binascii import unhexlify\n import cStringIO\n import time\n \n@@ -19,7 +19,7 @@ def cltv_invalidate(tx):\n \n     Prepends -1 CLTV DROP in the scriptSig itself.\n     '''\n-    tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_NOP2, OP_DROP] +\n+    tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n                                   list(CScript(tx.vin[0].scriptSig)))\n \n '''"
      },
      {
        "sha": "f666a07c9b76905474502ce45cf2608e2f7ded28",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -9,8 +9,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os\n-import shutil\n \n class BIP65Test(BitcoinTestFramework):\n \n@@ -46,7 +44,7 @@ def run_test(self):\n         self.nodes[2].generate(1)\n         self.sync_all()\n         if (self.nodes[0].getblockcount() != cnt + 851):\n-            raise AssertionFailure(\"Failed to mine a version=4 blocks\")\n+            raise AssertionError(\"Failed to mine a version=4 blocks\")\n \n         # TODO: check that new CHECKLOCKTIMEVERIFY rules are enforced\n "
      },
      {
        "sha": "544e4a96701f311b6eceea8959c0d867fc03ca19",
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-#\n+# Copyright (c) 2015 The Bitcoin Core developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -10,7 +10,7 @@\n from test_framework.blocktools import create_coinbase, create_block\n from test_framework.comptool import TestInstance, TestManager\n from test_framework.script import CScript\n-from binascii import hexlify, unhexlify\n+from binascii import unhexlify\n import cStringIO\n import time\n "
      },
      {
        "sha": "be9121c456831682ff37d2fd011237088fd1c4ae",
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,8 +9,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os\n-import shutil\n \n class BIP66Test(BitcoinTestFramework):\n \n@@ -46,7 +44,7 @@ def run_test(self):\n         self.nodes[2].generate(1)\n         self.sync_all()\n         if (self.nodes[0].getblockcount() != cnt + 851):\n-            raise AssertionFailure(\"Failed to mine a version=3 blocks\")\n+            raise AssertionError(\"Failed to mine a version=3 blocks\")\n \n         # TODO: check that new DERSIG rules are enforced\n "
      },
      {
        "sha": "7045ae435ceb4f3039b9d38b09dd172b7a810fbc",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 38,
        "deletions": 4,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,22 +1,28 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #\n-# Test RPC calls related to blockchain state.\n+# Test RPC calls related to blockchain state. Tests correspond to code in\n+# rpc/blockchain.cpp.\n #\n \n-import decimal\n+from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.authproxy import JSONRPCException\n from test_framework.util import (\n     initialize_chain,\n     assert_equal,\n+    assert_raises,\n+    assert_is_hex_string,\n+    assert_is_hash_string,\n     start_nodes,\n     connect_nodes_bi,\n )\n \n+\n class BlockchainTest(BitcoinTestFramework):\n     \"\"\"\n     Test blockchain-related RPC calls:\n@@ -36,17 +42,45 @@ def setup_network(self, split=False):\n         self.sync_all()\n \n     def run_test(self):\n+        self._test_gettxoutsetinfo()\n+        self._test_getblockheader()\n+\n+    def _test_gettxoutsetinfo(self):\n         node = self.nodes[0]\n         res = node.gettxoutsetinfo()\n \n-        assert_equal(res[u'total_amount'], decimal.Decimal('8725.00000000'))\n+        assert_equal(res[u'total_amount'], Decimal('8725.00000000'))\n         assert_equal(res[u'transactions'], 200)\n         assert_equal(res[u'height'], 200)\n         assert_equal(res[u'txouts'], 200)\n         assert_equal(res[u'bytes_serialized'], 13924),\n         assert_equal(len(res[u'bestblock']), 64)\n         assert_equal(len(res[u'hash_serialized']), 64)\n \n+    def _test_getblockheader(self):\n+        node = self.nodes[0]\n+\n+        assert_raises(\n+            JSONRPCException, lambda: node.getblockheader('nonsense'))\n+\n+        besthash = node.getbestblockhash()\n+        secondbesthash = node.getblockhash(199)\n+        header = node.getblockheader(besthash)\n+\n+        assert_equal(header['hash'], besthash)\n+        assert_equal(header['height'], 200)\n+        assert_equal(header['confirmations'], 1)\n+        assert_equal(header['previousblockhash'], secondbesthash)\n+        assert_is_hex_string(header['chainwork'])\n+        assert_is_hash_string(header['hash'])\n+        assert_is_hash_string(header['previousblockhash'])\n+        assert_is_hash_string(header['merkleroot'])\n+        assert_is_hash_string(header['bits'], length=None)\n+        assert isinstance(header['time'], int)\n+        assert isinstance(header['mediantime'], int)\n+        assert isinstance(header['nonce'], int)\n+        assert isinstance(header['version'], int)\n+        assert isinstance(header['difficulty'], Decimal)\n \n if __name__ == '__main__':\n     BlockchainTest().main()"
      },
      {
        "sha": "490808d49dd5318b88b79904882714d067f12c52",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -102,13 +102,13 @@ def decodescript_script_pub_key(self):\n         # OP_IF\n         #   <receiver-pubkey> OP_CHECKSIGVERIFY\n         # OP_ELSE\n-        #   <lock-until> OP_NOP2 OP_DROP\n+        #   <lock-until> OP_CHECKLOCKTIMEVERIFY OP_DROP\n         # OP_ENDIF\n         # <sender-pubkey> OP_CHECKSIG\n         #\n         # lock until block 500,000\n         rpc_result = self.nodes[0].decodescript('63' + push_public_key + 'ad670320a107b17568' + push_public_key + 'ac')\n-        assert_equal('OP_IF ' + public_key + ' OP_CHECKSIGVERIFY OP_ELSE 500000 OP_NOP2 OP_DROP OP_ENDIF ' + public_key + ' OP_CHECKSIG', rpc_result['asm'])\n+        assert_equal('OP_IF ' + public_key + ' OP_CHECKSIGVERIFY OP_ELSE 500000 OP_CHECKLOCKTIMEVERIFY OP_DROP OP_ENDIF ' + public_key + ' OP_CHECKSIG', rpc_result['asm'])\n \n     def decoderawtransaction_asm_sighashtype(self):\n         \"\"\"Tests decoding scripts via RPC command \"decoderawtransaction\"."
      },
      {
        "sha": "6964348d55a61f85045874f667eff8857dd0c94b",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,6 +10,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n+\n class DisableWalletTest (BitcoinTestFramework):\n \n     def setup_chain(self):"
      },
      {
        "sha": "20e6ce961954bbd793d4a19dd9b22e191489017a",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,8 +9,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os\n-import shutil\n \n class ForkNotifyTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "0287965b97f2958f9a89494f16c4b118e557af24",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 34,
        "deletions": 27,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,12 +1,10 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from pprint import pprint\n-from time import sleep\n \n # Create one-input, one-output, no-fee transaction:\n class RawTransactionsTest(BitcoinTestFramework):\n@@ -30,6 +28,11 @@ def run_test(self):\n         print \"Mining blocks...\"\n \n         min_relay_tx_fee = self.nodes[0].getnetworkinfo()['relayfee']\n+        # This test is not meant to test fee estimation and we'd like\n+        # to be sure all txs are sent at a consistent desired feerate\n+        for node in self.nodes:\n+            node.settxfee(min_relay_tx_fee)\n+\n         # if the fee's positive delta is higher than this value tests will fail,\n         # neg. delta always fail the tests.\n         # The size of the signature of every input may be at most 2 bytes larger\n@@ -48,11 +51,11 @@ def run_test(self):\n         watchonly_amount = 200\n         self.nodes[3].importpubkey(watchonly_pubkey, \"\", True)\n         watchonly_txid = self.nodes[0].sendtoaddress(watchonly_address, watchonly_amount)\n-        self.nodes[0].sendtoaddress(self.nodes[3].getnewaddress(), watchonly_amount / 10);\n+        self.nodes[0].sendtoaddress(self.nodes[3].getnewaddress(), watchonly_amount / 10)\n \n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5);\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0);\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0);\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n \n         self.sync_all()\n         self.nodes[0].generate(1)\n@@ -125,7 +128,7 @@ def run_test(self):\n         for aUtx in listunspent:\n             if aUtx['amount'] == 5.0:\n                 utx = aUtx\n-                break;\n+                break\n \n         assert_equal(utx!=False, True)\n \n@@ -154,7 +157,7 @@ def run_test(self):\n         for aUtx in listunspent:\n             if aUtx['amount'] == 5.0:\n                 utx = aUtx\n-                break;\n+                break\n \n         assert_equal(utx!=False, True)\n \n@@ -184,7 +187,7 @@ def run_test(self):\n         for aUtx in listunspent:\n             if aUtx['amount'] == 1.0:\n                 utx = aUtx\n-                break;\n+                break\n \n         assert_equal(utx!=False, True)\n \n@@ -309,7 +312,7 @@ def run_test(self):\n         except JSONRPCException,e:\n             errorString = e.error['message']\n \n-        assert_equal(\"Insufficient\" in errorString, True);\n+        assert(\"Insufficient\" in errorString)\n \n \n \n@@ -321,11 +324,11 @@ def run_test(self):\n         fundedTx = self.nodes[0].fundrawtransaction(rawTx)\n \n         #create same transaction over sendtoaddress\n-        txId = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 1.1);\n+        txId = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 1.1)\n         signedFee = self.nodes[0].getrawmempool(True)[txId]['fee']\n \n         #compare fee\n-        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee);\n+        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n         assert(feeDelta >= 0 and feeDelta <= feeTolerance)\n         ############################################################\n \n@@ -336,11 +339,11 @@ def run_test(self):\n         rawTx = self.nodes[0].createrawtransaction(inputs, outputs)\n         fundedTx = self.nodes[0].fundrawtransaction(rawTx)\n         #create same transaction over sendtoaddress\n-        txId = self.nodes[0].sendmany(\"\", outputs);\n+        txId = self.nodes[0].sendmany(\"\", outputs)\n         signedFee = self.nodes[0].getrawmempool(True)[txId]['fee']\n \n         #compare fee\n-        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee);\n+        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n         assert(feeDelta >= 0 and feeDelta <= feeTolerance)\n         ############################################################\n \n@@ -363,11 +366,11 @@ def run_test(self):\n         fundedTx = self.nodes[0].fundrawtransaction(rawTx)\n \n         #create same transaction over sendtoaddress\n-        txId = self.nodes[0].sendtoaddress(mSigObj, 1.1);\n+        txId = self.nodes[0].sendtoaddress(mSigObj, 1.1)\n         signedFee = self.nodes[0].getrawmempool(True)[txId]['fee']\n \n         #compare fee\n-        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee);\n+        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n         assert(feeDelta >= 0 and feeDelta <= feeTolerance)\n         ############################################################\n \n@@ -396,11 +399,11 @@ def run_test(self):\n         fundedTx = self.nodes[0].fundrawtransaction(rawTx)\n \n         #create same transaction over sendtoaddress\n-        txId = self.nodes[0].sendtoaddress(mSigObj, 1.1);\n+        txId = self.nodes[0].sendtoaddress(mSigObj, 1.1)\n         signedFee = self.nodes[0].getrawmempool(True)[txId]['fee']\n \n         #compare fee\n-        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee);\n+        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n         assert(feeDelta >= 0 and feeDelta <= feeTolerance)\n         ############################################################\n \n@@ -419,7 +422,7 @@ def run_test(self):\n \n \n         # send 1.2 BTC to msig addr\n-        txId = self.nodes[0].sendtoaddress(mSigObj, 1.2);\n+        txId = self.nodes[0].sendtoaddress(mSigObj, 1.2)\n         self.sync_all()\n         self.nodes[1].generate(1)\n         self.sync_all()\n@@ -447,6 +450,10 @@ def run_test(self):\n         wait_bitcoinds()\n \n         self.nodes = start_nodes(4, self.options.tmpdir)\n+        # This test is not meant to test fee estimation and we'd like\n+        # to be sure all txs are sent at a consistent desired feerate\n+        for node in self.nodes:\n+            node.settxfee(min_relay_tx_fee)\n \n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n@@ -457,7 +464,7 @@ def run_test(self):\n \n         error = False\n         try:\n-            self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.2);\n+            self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.2)\n         except:\n             error = True\n         assert(error)\n@@ -487,13 +494,13 @@ def run_test(self):\n         ###############################################\n \n         #empty node1, send some small coins from node0 to node1\n-        self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True);\n+        self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True)\n         self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()\n \n         for i in range(0,20):\n-            self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.01);\n+            self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.01)\n         self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()\n@@ -505,11 +512,11 @@ def run_test(self):\n         fundedTx = self.nodes[1].fundrawtransaction(rawTx)\n \n         #create same transaction over sendtoaddress\n-        txId = self.nodes[1].sendmany(\"\", outputs);\n+        txId = self.nodes[1].sendmany(\"\", outputs)\n         signedFee = self.nodes[1].getrawmempool(True)[txId]['fee']\n \n         #compare fee\n-        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee);\n+        feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n         assert(feeDelta >= 0 and feeDelta <= feeTolerance*19) #~19 inputs\n \n \n@@ -518,13 +525,13 @@ def run_test(self):\n         #############################################\n \n         #again, empty node1, send some small coins from node0 to node1\n-        self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True);\n+        self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True)\n         self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()\n \n         for i in range(0,20):\n-            self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.01);\n+            self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.01)\n         self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()"
      },
      {
        "sha": "3e85957ae2323b5e6e0ddeb047fae84bdd856005",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "f83b5f140d90bc515922f384341b9aaa73865e3f",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "dd260836bb98a09b4569cad0b2e81487ae42ba24",
        "filename": "qa/rpc-tests/getchaintips.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getchaintips.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -23,8 +23,8 @@ def run_test (self):\n \n         # Split the network and build two chains of different lengths.\n         self.split_network ()\n-        self.nodes[0].generate(10);\n-        self.nodes[2].generate(20);\n+        self.nodes[0].generate(10)\n+        self.nodes[2].generate(20)\n         self.sync_all ()\n \n         tips = self.nodes[1].getchaintips ()"
      },
      {
        "sha": "eb548aee9de32946acf8b7ec3706b79ce4085131",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -36,13 +36,13 @@ def run_test(self):\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        out1 = conn.getresponse().read();\n+        out1 = conn.getresponse().read()\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n \n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n-        out2 = conn.getresponse().read();\n+        out2 = conn.getresponse().read()\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         conn.close()\n@@ -53,13 +53,13 @@ def run_test(self):\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        out1 = conn.getresponse().read();\n+        out1 = conn.getresponse().read()\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n \n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n-        out2 = conn.getresponse().read();\n+        out2 = conn.getresponse().read()\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         conn.close()\n@@ -70,7 +70,7 @@ def run_test(self):\n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        out1 = conn.getresponse().read();\n+        out1 = conn.getresponse().read()\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, False) #now the connection must be closed after the response\n \n@@ -82,7 +82,7 @@ def run_test(self):\n         conn = httplib.HTTPConnection(urlNode1.hostname, urlNode1.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        out1 = conn.getresponse().read();\n+        out1 = conn.getresponse().read()\n         assert_equal('\"error\":null' in out1, True)\n \n         #node2 (third node) is running with standard keep-alive parameters which means keep-alive is on\n@@ -93,7 +93,7 @@ def run_test(self):\n         conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        out1 = conn.getresponse().read();\n+        out1 = conn.getresponse().read()\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n "
      },
      {
        "sha": "0e78a3c806f844bd2188382de4325b5fa0c408da",
        "filename": "qa/rpc-tests/invalidateblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidateblock.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "f91a8da0153a920fc9620953db49fdc87dedb606",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,15 +1,13 @@\n #!/usr/bin/env python2\n-#\n+# Copyright (c) 2015 The Bitcoin Core developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n-from test_framework.comptool import TestManager, TestInstance\n-from test_framework.mininode import *\n+from test_framework.comptool import TestManager, TestInstance, RejectResult\n from test_framework.blocktools import *\n-import logging\n import copy\n import time\n \n@@ -97,7 +95,7 @@ def get_tests(self):\n         assert(block2_orig.vtx != block2.vtx)\n \n         self.tip = block2.sha256\n-        yield TestInstance([[block2, False], [block2_orig, True]])\n+        yield TestInstance([[block2, RejectResult(16,'bad-txns-duplicate')], [block2_orig, True]])\n         height += 1\n \n         '''\n@@ -112,7 +110,7 @@ def get_tests(self):\n         block3.rehash()\n         block3.solve()\n \n-        yield TestInstance([[block3, False]])\n+        yield TestInstance([[block3, RejectResult(16,'bad-cb-amount')]])\n \n \n if __name__ == '__main__':"
      },
      {
        "sha": "c2fe4f1dffa277034da712969e52f770334ab11f",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.comptool import TestManager, TestInstance, RejectResult\n+from test_framework.blocktools import *\n+import time\n+\n+\n+'''\n+In this test we connect to one node over p2p, and test tx requests.\n+'''\n+\n+# Use the ComparisonTestFramework with 1 node: only use --testbinary.\n+class InvalidTxRequestTest(ComparisonTestFramework):\n+\n+    ''' Can either run this test as 1 node with expected answers, or two and compare them. \n+        Change the \"outcome\" variable from each TestInstance object to only do the comparison. '''\n+    def __init__(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        test = TestManager(self, self.options.tmpdir)\n+        test.add_all_connections(self.nodes)\n+        self.tip = None\n+        self.block_time = None\n+        NetworkThread().start() # Start up network handling in another thread\n+        test.run()\n+\n+    def get_tests(self):\n+        if self.tip is None:\n+            self.tip = int (\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+        self.block_time = int(time.time())+1\n+\n+        '''\n+        Create a new block with an anyone-can-spend coinbase\n+        '''\n+        height = 1\n+        block = create_block(self.tip, create_coinbase(height), self.block_time)\n+        self.block_time += 1\n+        block.solve()\n+        # Save the coinbase for later\n+        self.block1 = block\n+        self.tip = block.sha256\n+        height += 1\n+        yield TestInstance([[block, True]])\n+\n+        '''\n+        Now we need that block to mature so we can spend the coinbase.\n+        '''\n+        test = TestInstance(sync_every_block=False)\n+        for i in xrange(100):\n+            block = create_block(self.tip, create_coinbase(height), self.block_time)\n+            block.solve()\n+            self.tip = block.sha256\n+            self.block_time += 1\n+            test.blocks_and_transactions.append([block, True])\n+            height += 1\n+        yield test\n+\n+        # chr(100) is OP_NOTIF\n+        # Transaction will be rejected with code 16 (REJECT_INVALID)\n+        tx1 = create_transaction(self.block1.vtx[0], 0, chr(100), 50*100000000 - 12000)\n+        yield TestInstance([[tx1, RejectResult(16, 'mandatory-script-verify-flag-failed')]])\n+\n+        # TODO: test further transactions...\n+\n+if __name__ == '__main__':\n+    InvalidTxRequestTest().main()"
      },
      {
        "sha": "95d0d6832a91f30b709804c39f08ed05ae85665a",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "modified",
        "additions": 60,
        "deletions": 107,
        "changes": 167,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,20 +1,13 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the wallet keypool, and interaction with wallet encryption/locking\n \n # Add python-bitcoinrpc to module search path:\n-import os\n-import sys\n-\n-import json\n-import shutil\n-import subprocess\n-import tempfile\n-import traceback\n \n+from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n \n@@ -39,107 +32,67 @@ def check_array_result(object_array, to_match, expected):\n     if num_matched == 0:\n         raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n \n-def run_test(nodes, tmpdir):\n-    # Encrypt wallet and wait to terminate\n-    nodes[0].encryptwallet('test')\n-    bitcoind_processes[0].wait()\n-    # Restart node 0\n-    nodes[0] = start_node(0, tmpdir)\n-    # Keep creating keys\n-    addr = nodes[0].getnewaddress()\n-    try:\n-        addr = nodes[0].getnewaddress()\n-        raise AssertionError('Keypool should be exhausted after one address')\n-    except JSONRPCException,e:\n-        assert(e.error['code']==-12)\n-\n-    # put three new keys in the keypool\n-    nodes[0].walletpassphrase('test', 12000)\n-    nodes[0].keypoolrefill(3)\n-    nodes[0].walletlock()\n-\n-    # drain the keys\n-    addr = set()\n-    addr.add(nodes[0].getrawchangeaddress())\n-    addr.add(nodes[0].getrawchangeaddress())\n-    addr.add(nodes[0].getrawchangeaddress())\n-    addr.add(nodes[0].getrawchangeaddress())\n-    # assert that four unique addresses were returned\n-    assert(len(addr) == 4)\n-    # the next one should fail\n-    try:\n-        addr = nodes[0].getrawchangeaddress()\n-        raise AssertionError('Keypool should be exhausted after three addresses')\n-    except JSONRPCException,e:\n-        assert(e.error['code']==-12)\n-\n-    # refill keypool with three new addresses\n-    nodes[0].walletpassphrase('test', 12000)\n-    nodes[0].keypoolrefill(3)\n-    nodes[0].walletlock()\n+class KeyPoolTest(BitcoinTestFramework):\n \n-    # drain them by mining\n-    nodes[0].generate(1)\n-    nodes[0].generate(1)\n-    nodes[0].generate(1)\n-    nodes[0].generate(1)\n-    try:\n+    def run_test(self):\n+        nodes = self.nodes\n+        # Encrypt wallet and wait to terminate\n+        nodes[0].encryptwallet('test')\n+        bitcoind_processes[0].wait()\n+        # Restart node 0\n+        nodes[0] = start_node(0, self.options.tmpdir)\n+        # Keep creating keys\n+        addr = nodes[0].getnewaddress()\n+        try:\n+            addr = nodes[0].getnewaddress()\n+            raise AssertionError('Keypool should be exhausted after one address')\n+        except JSONRPCException,e:\n+            assert(e.error['code']==-12)\n+\n+        # put three new keys in the keypool\n+        nodes[0].walletpassphrase('test', 12000)\n+        nodes[0].keypoolrefill(3)\n+        nodes[0].walletlock()\n+\n+        # drain the keys\n+        addr = set()\n+        addr.add(nodes[0].getrawchangeaddress())\n+        addr.add(nodes[0].getrawchangeaddress())\n+        addr.add(nodes[0].getrawchangeaddress())\n+        addr.add(nodes[0].getrawchangeaddress())\n+        # assert that four unique addresses were returned\n+        assert(len(addr) == 4)\n+        # the next one should fail\n+        try:\n+            addr = nodes[0].getrawchangeaddress()\n+            raise AssertionError('Keypool should be exhausted after three addresses')\n+        except JSONRPCException,e:\n+            assert(e.error['code']==-12)\n+\n+        # refill keypool with three new addresses\n+        nodes[0].walletpassphrase('test', 1)\n+        nodes[0].keypoolrefill(3)\n+        # test walletpassphrase timeout\n+        time.sleep(1.1)\n+        assert_equal(nodes[0].getwalletinfo()[\"unlocked_until\"], 0)\n+\n+        # drain them by mining\n         nodes[0].generate(1)\n-        raise AssertionError('Keypool should be exhausted after three addesses')\n-    except JSONRPCException,e:\n-        assert(e.error['code']==-12)\n-\n-def main():\n-    import optparse\n-\n-    parser = optparse.OptionParser(usage=\"%prog [options]\")\n-    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n-                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n-    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n-                      help=\"Root directory for datadirs\")\n-    (options, args) = parser.parse_args()\n-\n-    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n-\n-    check_json_precision()\n-\n-    success = False\n-    nodes = []\n-    try:\n-        print(\"Initializing test directory \"+options.tmpdir)\n-        if not os.path.isdir(options.tmpdir):\n-            os.makedirs(options.tmpdir)\n-        initialize_chain(options.tmpdir)\n-\n-        nodes = start_nodes(1, options.tmpdir)\n-\n-        run_test(nodes, options.tmpdir)\n-\n-        success = True\n-\n-    except AssertionError as e:\n-        print(\"Assertion failed: \"+e.message)\n-    except JSONRPCException as e:\n-        print(\"JSONRPC error: \"+e.error['message'])\n-        traceback.print_tb(sys.exc_info()[2])\n-    except Exception as e:\n-        print(\"Unexpected exception caught during testing: \"+str(sys.exc_info()[0]))\n-        traceback.print_tb(sys.exc_info()[2])\n+        nodes[0].generate(1)\n+        nodes[0].generate(1)\n+        nodes[0].generate(1)\n+        try:\n+            nodes[0].generate(1)\n+            raise AssertionError('Keypool should be exhausted after three addesses')\n+        except JSONRPCException,e:\n+            assert(e.error['code']==-12)\n \n-    if not options.nocleanup:\n-        print(\"Cleaning up\")\n-        stop_nodes(nodes)\n-        wait_bitcoinds()\n-        shutil.rmtree(options.tmpdir)\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain(self.options.tmpdir)\n \n-    if success:\n-        print(\"Tests successful\")\n-        sys.exit(0)\n-    else:\n-        print(\"Failed\")\n-        sys.exit(1)\n+    def setup_network(self):\n+        self.nodes = start_nodes(1, self.options.tmpdir)\n \n if __name__ == '__main__':\n-    main()\n+    KeyPoolTest().main()"
      },
      {
        "sha": "45ede8f040de688ea880332ab5e155774e0b2f79",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 115,
        "deletions": 1,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,13 +1,21 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Exercise the listtransactions API\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n+from test_framework.mininode import CTransaction\n+import cStringIO\n+import binascii\n \n+def txFromHex(hexstring):\n+    tx = CTransaction()\n+    f = cStringIO.StringIO(binascii.unhexlify(hexstring))\n+    tx.deserialize(f)\n+    return tx\n \n def check_array_result(object_array, to_match, expected):\n     \"\"\"\n@@ -32,6 +40,11 @@ def check_array_result(object_array, to_match, expected):\n \n class ListTransactionsTest(BitcoinTestFramework):\n \n+    def setup_nodes(self):\n+        #This test requires mocktime\n+        enable_mocktime()\n+        return start_nodes(4, self.options.tmpdir)\n+\n     def run_test(self):\n         # Simple send, 0 to 1:\n         txid = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.1)\n@@ -103,6 +116,107 @@ def run_test(self):\n                            {\"category\":\"receive\",\"amount\":Decimal(\"0.1\")},\n                            {\"txid\":txid, \"account\" : \"watchonly\"} )\n \n+        self.run_rbf_opt_in_test()\n+\n+    # Check that the opt-in-rbf flag works properly, for sent and received\n+    # transactions.\n+    def run_rbf_opt_in_test(self):\n+        # Check whether a transaction signals opt-in RBF itself\n+        def is_opt_in(node, txid):\n+            rawtx = node.getrawtransaction(txid, 1)\n+            for x in rawtx[\"vin\"]:\n+                if x[\"sequence\"] < 0xfffffffe:\n+                    return True\n+            return False\n+\n+        # Find an unconfirmed output matching a certain txid\n+        def get_unconfirmed_utxo_entry(node, txid_to_match):\n+            utxo = node.listunspent(0, 0)\n+            for i in utxo:\n+                if i[\"txid\"] == txid_to_match:\n+                    return i\n+            return None\n+\n+        # 1. Chain a few transactions that don't opt-in.\n+        txid_1 = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n+        assert(not is_opt_in(self.nodes[0], txid_1))\n+        check_array_result(self.nodes[0].listtransactions(), {\"txid\": txid_1}, {\"bip125-replaceable\":\"no\"})\n+        sync_mempools(self.nodes)\n+        check_array_result(self.nodes[1].listtransactions(), {\"txid\": txid_1}, {\"bip125-replaceable\":\"no\"})\n+\n+        # Tx2 will build off txid_1, still not opting in to RBF.\n+        utxo_to_use = get_unconfirmed_utxo_entry(self.nodes[1], txid_1)\n+\n+        # Create tx2 using createrawtransaction\n+        inputs = [{\"txid\":utxo_to_use[\"txid\"], \"vout\":utxo_to_use[\"vout\"]}]\n+        outputs = {self.nodes[0].getnewaddress(): 0.999}\n+        tx2 = self.nodes[1].createrawtransaction(inputs, outputs)\n+        tx2_signed = self.nodes[1].signrawtransaction(tx2)[\"hex\"]\n+        txid_2 = self.nodes[1].sendrawtransaction(tx2_signed)\n+\n+        # ...and check the result\n+        assert(not is_opt_in(self.nodes[1], txid_2))\n+        check_array_result(self.nodes[1].listtransactions(), {\"txid\": txid_2}, {\"bip125-replaceable\":\"no\"})\n+        sync_mempools(self.nodes)\n+        check_array_result(self.nodes[0].listtransactions(), {\"txid\": txid_2}, {\"bip125-replaceable\":\"no\"})\n+\n+        # Tx3 will opt-in to RBF\n+        utxo_to_use = get_unconfirmed_utxo_entry(self.nodes[0], txid_2)\n+        inputs = [{\"txid\": txid_2, \"vout\":utxo_to_use[\"vout\"]}]\n+        outputs = {self.nodes[1].getnewaddress(): 0.998}\n+        tx3 = self.nodes[0].createrawtransaction(inputs, outputs)\n+        tx3_modified = txFromHex(tx3)\n+        tx3_modified.vin[0].nSequence = 0\n+        tx3 = binascii.hexlify(tx3_modified.serialize()).decode('utf-8')\n+        tx3_signed = self.nodes[0].signrawtransaction(tx3)['hex']\n+        txid_3 = self.nodes[0].sendrawtransaction(tx3_signed)\n+\n+        assert(is_opt_in(self.nodes[0], txid_3))\n+        check_array_result(self.nodes[0].listtransactions(), {\"txid\": txid_3}, {\"bip125-replaceable\":\"yes\"})\n+        sync_mempools(self.nodes)\n+        check_array_result(self.nodes[1].listtransactions(), {\"txid\": txid_3}, {\"bip125-replaceable\":\"yes\"})\n+\n+        # Tx4 will chain off tx3.  Doesn't signal itself, but depends on one\n+        # that does.\n+        utxo_to_use = get_unconfirmed_utxo_entry(self.nodes[1], txid_3)\n+        inputs = [{\"txid\": txid_3, \"vout\":utxo_to_use[\"vout\"]}]\n+        outputs = {self.nodes[0].getnewaddress(): 0.997}\n+        tx4 = self.nodes[1].createrawtransaction(inputs, outputs)\n+        tx4_signed = self.nodes[1].signrawtransaction(tx4)[\"hex\"]\n+        txid_4 = self.nodes[1].sendrawtransaction(tx4_signed)\n+\n+        assert(not is_opt_in(self.nodes[1], txid_4))\n+        check_array_result(self.nodes[1].listtransactions(), {\"txid\": txid_4}, {\"bip125-replaceable\":\"yes\"})\n+        sync_mempools(self.nodes)\n+        check_array_result(self.nodes[0].listtransactions(), {\"txid\": txid_4}, {\"bip125-replaceable\":\"yes\"})\n+\n+        # Replace tx3, and check that tx4 becomes unknown\n+        tx3_b = tx3_modified\n+        tx3_b.vout[0].nValue -= 0.004*100000000 # bump the fee\n+        tx3_b = binascii.hexlify(tx3_b.serialize()).decode('utf-8')\n+        tx3_b_signed = self.nodes[0].signrawtransaction(tx3_b)['hex']\n+        txid_3b = self.nodes[0].sendrawtransaction(tx3_b_signed, True)\n+        assert(is_opt_in(self.nodes[0], txid_3b))\n+\n+        check_array_result(self.nodes[0].listtransactions(), {\"txid\": txid_4}, {\"bip125-replaceable\":\"unknown\"})\n+        sync_mempools(self.nodes)\n+        check_array_result(self.nodes[1].listtransactions(), {\"txid\": txid_4}, {\"bip125-replaceable\":\"unknown\"})\n+\n+        # Check gettransaction as well:\n+        for n in self.nodes[0:2]:\n+            assert_equal(n.gettransaction(txid_1)[\"bip125-replaceable\"], \"no\")\n+            assert_equal(n.gettransaction(txid_2)[\"bip125-replaceable\"], \"no\")\n+            assert_equal(n.gettransaction(txid_3)[\"bip125-replaceable\"], \"yes\")\n+            assert_equal(n.gettransaction(txid_3b)[\"bip125-replaceable\"], \"yes\")\n+            assert_equal(n.gettransaction(txid_4)[\"bip125-replaceable\"], \"unknown\")\n+\n+        # After mining a transaction, it's no longer BIP125-replaceable\n+        self.nodes[0].generate(1)\n+        assert(txid_3b not in self.nodes[0].getrawmempool())\n+        assert_equal(self.nodes[0].gettransaction(txid_3b)[\"bip125-replaceable\"], \"no\")\n+        assert_equal(self.nodes[0].gettransaction(txid_4)[\"bip125-replaceable\"], \"unknown\")\n+\n+\n if __name__ == '__main__':\n     ListTransactionsTest().main()\n "
      },
      {
        "sha": "0313bce736b1f1e1ec927d87220a34db91c2442f",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-#\n+# Copyright (c) 2015 The Bitcoin Core developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -34,7 +34,6 @@ def on_close(self, conn):\n     def __init__(self):\n         NodeConnCB.__init__(self)\n         self.log = logging.getLogger(\"BlockRelayTest\")\n-        self.create_callback_map()\n \n     def add_new_connection(self, connection):\n         self.connection = connection"
      },
      {
        "sha": "4d6b343f77d18cae0db5f1a6856ab3386001dfa2",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 1,
        "deletions": 17,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -25,7 +25,6 @@\n class TestNode(NodeConnCB):\n     def __init__(self):\n         NodeConnCB.__init__(self)\n-        self.create_callback_map()\n         self.connection = None\n         self.ping_counter = 1\n         self.last_pong = msg_pong()\n@@ -85,22 +84,7 @@ def received_pong():\n class MaxUploadTest(BitcoinTestFramework):\n     def __init__(self):\n         self.utxo = []\n-\n-        # Some pre-processing to create a bunch of OP_RETURN txouts to insert into transactions we create\n-        # So we have big transactions and full blocks to fill up our block files\n-        # create one script_pubkey\n-        script_pubkey = \"6a4d0200\" #OP_RETURN OP_PUSH2 512 bytes\n-        for i in xrange (512):\n-            script_pubkey = script_pubkey + \"01\"\n-        # concatenate 128 txouts of above script_pubkey which we'll insert before the txout for change\n-        self.txouts = \"81\"\n-        for k in xrange(128):\n-            # add txout value\n-            self.txouts = self.txouts + \"0000000000000000\"\n-            # add length of script_pubkey\n-            self.txouts = self.txouts + \"fd0402\"\n-            # add script_pubkey\n-            self.txouts = self.txouts + script_pubkey\n+        self.txouts = gen_return_txouts()\n  \n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\","
      },
      {
        "sha": "7914ceea22bc46906ae1c09253951e1bc4f91532",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,55 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Test mempool limiting together/eviction with the wallet\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class MempoolLimitTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        self.txouts = gen_return_txouts()\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxmempool=5\", \"-spendzeroconfchange=0\", \"-debug\"]))\n+        self.is_network_split = False\n+        self.sync_all()\n+        self.relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def run_test(self):\n+        txids = []\n+        utxos = create_confirmed_utxos(self.relayfee, self.nodes[0], 90)\n+\n+        #create a mempool tx that will be evicted\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {self.nodes[0].getnewaddress() : 0.0001}\n+        tx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        self.nodes[0].settxfee(self.relayfee) # specifically fund this tx with low fee\n+        txF = self.nodes[0].fundrawtransaction(tx)\n+        self.nodes[0].settxfee(0) # return to automatic fee selection\n+        txFS = self.nodes[0].signrawtransaction(txF['hex'])\n+        txid = self.nodes[0].sendrawtransaction(txFS['hex'])\n+        self.nodes[0].lockunspent(True, [us0])\n+\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        base_fee = relayfee*100\n+        for i in xrange (4):\n+            txids.append([])\n+            txids[i] = create_lots_of_big_transactions(self.nodes[0], self.txouts, utxos[30*i:30*i+30], (i+1)*base_fee)\n+\n+        # by now, the tx should be evicted, check confirmation state\n+        assert(txid not in self.nodes[0].getrawmempool())\n+        txdata = self.nodes[0].gettransaction(txid)\n+        assert(txdata['confirmations'] ==  0) #confirmation should still be 0\n+\n+if __name__ == '__main__':\n+    MempoolLimitTest().main()"
      },
      {
        "sha": "47c1028b9ff0841fc1d1e933577348335745e2e2",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 33,
        "deletions": 3,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -8,9 +8,6 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-def satoshi_round(amount):\n-    return  Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n-\n MAX_ANCESTORS = 25\n MAX_DESCENDANTS = 25\n \n@@ -67,17 +64,50 @@ def run_test(self):\n         for x in reversed(chain):\n             assert_equal(mempool[x]['descendantcount'], descendant_count)\n             descendant_fees += mempool[x]['fee']\n+            assert_equal(mempool[x]['modifiedfee'], mempool[x]['fee'])\n             assert_equal(mempool[x]['descendantfees'], SATOSHIS*descendant_fees)\n             descendant_size += mempool[x]['size']\n             assert_equal(mempool[x]['descendantsize'], descendant_size)\n             descendant_count += 1\n \n+        # Check that descendant modified fees includes fee deltas from\n+        # prioritisetransaction\n+        self.nodes[0].prioritisetransaction(chain[-1], 0, 1000)\n+        mempool = self.nodes[0].getrawmempool(True)\n+\n+        descendant_fees = 0\n+        for x in reversed(chain):\n+            descendant_fees += mempool[x]['fee']\n+            assert_equal(mempool[x]['descendantfees'], SATOSHIS*descendant_fees+1000)\n+\n         # Adding one more transaction on to the chain should fail.\n         try:\n             self.chain_transaction(self.nodes[0], txid, vout, value, fee, 1)\n         except JSONRPCException as e:\n             print \"too-long-ancestor-chain successfully rejected\"\n \n+        # Check that prioritising a tx before it's added to the mempool works\n+        # First clear the mempool by mining a block.\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+        assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+        # Prioritise a transaction that has been mined, then add it back to the\n+        # mempool by using invalidateblock.\n+        self.nodes[0].prioritisetransaction(chain[-1], 0, 2000)\n+        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        # Keep node1's tip synced with node0\n+        self.nodes[1].invalidateblock(self.nodes[1].getbestblockhash())\n+\n+        # Now check that the transaction is in the mempool, with the right modified fee\n+        mempool = self.nodes[0].getrawmempool(True)\n+\n+        descendant_fees = 0\n+        for x in reversed(chain):\n+            descendant_fees += mempool[x]['fee']\n+            if (x == chain[-1]):\n+                assert_equal(mempool[x]['modifiedfee'], mempool[x]['fee']+satoshi_round(0.00002))\n+            assert_equal(mempool[x]['descendantfees'], SATOSHIS*descendant_fees+2000)\n+\n         # TODO: check that node1's mempool is as expected\n \n         # TODO: test ancestor size limits"
      },
      {
        "sha": "40684e7fbb8ea1e8a0075d0faec7f6eb97236001",
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "renamed",
        "additions": 24,
        "deletions": 12,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,8 +10,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os\n-import shutil\n \n # Create one-input, one-output, no-fee transaction:\n class MempoolCoinbaseTest(BitcoinTestFramework):\n@@ -25,7 +23,7 @@ def setup_network(self):\n         self.nodes.append(start_node(1, self.options.tmpdir, args))\n         connect_nodes(self.nodes[1], 0)\n         self.is_network_split = False\n-        self.sync_all\n+        self.sync_all()\n \n     def create_tx(self, from_txid, to_address, amount):\n         inputs = [{ \"txid\" : from_txid, \"vout\" : 0}]\n@@ -52,32 +50,46 @@ def run_test(self):\n         # 3. Indirect (coinbase and child both in chain) : spend_103 and spend_103_1\n         # Use invalidatblock to make all of the above coinbase spends invalid (immature coinbase),\n         # and make sure the mempool code behaves correctly.\n-        b = [ self.nodes[0].getblockhash(n) for n in range(102, 105) ]\n+        b = [ self.nodes[0].getblockhash(n) for n in range(101, 105) ]\n         coinbase_txids = [ self.nodes[0].getblock(h)['tx'][0] for h in b ]\n-        spend_101_raw = self.create_tx(coinbase_txids[0], node1_address, 50)\n-        spend_102_raw = self.create_tx(coinbase_txids[1], node0_address, 50)\n-        spend_103_raw = self.create_tx(coinbase_txids[2], node0_address, 50)\n+        spend_101_raw = self.create_tx(coinbase_txids[1], node1_address, 49.99)\n+        spend_102_raw = self.create_tx(coinbase_txids[2], node0_address, 49.99)\n+        spend_103_raw = self.create_tx(coinbase_txids[3], node0_address, 49.99)\n+\n+        # Create a block-height-locked transaction which will be invalid after reorg\n+        timelock_tx = self.nodes[0].createrawtransaction([{\"txid\": coinbase_txids[0], \"vout\": 0}], {node0_address: 49.99})\n+        # Set the time lock\n+        timelock_tx = timelock_tx.replace(\"ffffffff\", \"11111111\", 1)\n+        timelock_tx = timelock_tx[:-8] + hex(self.nodes[0].getblockcount() + 2)[2:] + \"000000\"\n+        timelock_tx = self.nodes[0].signrawtransaction(timelock_tx)[\"hex\"]\n+        assert_raises(JSONRPCException, self.nodes[0].sendrawtransaction, timelock_tx)\n \n         # Broadcast and mine spend_102 and 103:\n         spend_102_id = self.nodes[0].sendrawtransaction(spend_102_raw)\n         spend_103_id = self.nodes[0].sendrawtransaction(spend_103_raw)\n         self.nodes[0].generate(1)\n+        assert_raises(JSONRPCException, self.nodes[0].sendrawtransaction, timelock_tx)\n \n         # Create 102_1 and 103_1:\n-        spend_102_1_raw = self.create_tx(spend_102_id, node1_address, 50)\n-        spend_103_1_raw = self.create_tx(spend_103_id, node1_address, 50)\n+        spend_102_1_raw = self.create_tx(spend_102_id, node1_address, 49.98)\n+        spend_103_1_raw = self.create_tx(spend_103_id, node1_address, 49.98)\n \n         # Broadcast and mine 103_1:\n         spend_103_1_id = self.nodes[0].sendrawtransaction(spend_103_1_raw)\n-        self.nodes[0].generate(1)\n+        last_block = self.nodes[0].generate(1)\n+        timelock_tx_id = self.nodes[0].sendrawtransaction(timelock_tx)\n \n         # ... now put spend_101 and spend_102_1 in memory pools:\n         spend_101_id = self.nodes[0].sendrawtransaction(spend_101_raw)\n         spend_102_1_id = self.nodes[0].sendrawtransaction(spend_102_1_raw)\n \n         self.sync_all()\n \n-        assert_equal(set(self.nodes[0].getrawmempool()), set([ spend_101_id, spend_102_1_id ]))\n+        assert_equal(set(self.nodes[0].getrawmempool()), {spend_101_id, spend_102_1_id, timelock_tx_id})\n+\n+        for node in self.nodes:\n+            node.invalidateblock(last_block[0])\n+        assert_equal(set(self.nodes[0].getrawmempool()), {spend_101_id, spend_102_1_id, spend_103_1_id})\n \n         # Use invalidateblock to re-org back and make all those coinbase spends\n         # immature/invalid:",
        "previous_filename": "qa/rpc-tests/mempool_coinbase_spends.py"
      },
      {
        "sha": "9fcc88a2a3d23071ab2c629bfafc74d7ecfeab2a",
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,8 +10,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os\n-import shutil\n \n # Create one-input, one-output, no-fee transaction:\n class MempoolCoinbaseTest(BitcoinTestFramework):\n@@ -45,13 +43,13 @@ def run_test(self):\n \n         b = [ self.nodes[0].getblockhash(n) for n in range(1, 4) ]\n         coinbase_txids = [ self.nodes[0].getblock(h)['tx'][0] for h in b ]\n-        spends1_raw = [ self.create_tx(txid, node0_address, 50) for txid in coinbase_txids ]\n+        spends1_raw = [ self.create_tx(txid, node0_address, 49.99) for txid in coinbase_txids ]\n         spends1_id = [ self.nodes[0].sendrawtransaction(tx) for tx in spends1_raw ]\n \n         blocks = []\n         blocks.extend(self.nodes[0].generate(1))\n \n-        spends2_raw = [ self.create_tx(txid, node0_address, 49.99) for txid in spends1_id ]\n+        spends2_raw = [ self.create_tx(txid, node0_address, 49.98) for txid in spends1_id ]\n         spends2_id = [ self.nodes[0].sendrawtransaction(tx) for tx in spends2_raw ]\n \n         blocks.extend(self.nodes[0].generate(1))"
      },
      {
        "sha": "16f512db38eb14549d2e847cca6db3736fee39cb",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -15,8 +15,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os\n-import shutil\n \n # Create one-input, one-output, no-fee transaction:\n class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n@@ -46,7 +44,7 @@ def run_test(self):\n         # is too immature to spend.\n         b = [ self.nodes[0].getblockhash(n) for n in range(101, 103) ]\n         coinbase_txids = [ self.nodes[0].getblock(h)['tx'][0] for h in b ]\n-        spends_raw = [ self.create_tx(txid, node0_address, 50) for txid in coinbase_txids ]\n+        spends_raw = [ self.create_tx(txid, node0_address, 49.99) for txid in coinbase_txids ]\n \n         spend_101_id = self.nodes[0].sendrawtransaction(spends_raw[0])\n "
      },
      {
        "sha": "eb718f39e41a61c7a6c4adc10c6d17d4c9e350f9",
        "filename": "qa/rpc-tests/merkle_blocks.py",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/merkle_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/merkle_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/merkle_blocks.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,8 +9,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os\n-import shutil\n \n class MerkleBlockTest(BitcoinTestFramework):\n \n@@ -44,9 +42,9 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         node0utxos = self.nodes[0].listunspent(1)\n-        tx1 = self.nodes[0].createrawtransaction([node0utxos.pop()], {self.nodes[1].getnewaddress(): 50})\n+        tx1 = self.nodes[0].createrawtransaction([node0utxos.pop()], {self.nodes[1].getnewaddress(): 49.99})\n         txid1 = self.nodes[0].sendrawtransaction(self.nodes[0].signrawtransaction(tx1)[\"hex\"])\n-        tx2 = self.nodes[0].createrawtransaction([node0utxos.pop()], {self.nodes[1].getnewaddress(): 50})\n+        tx2 = self.nodes[0].createrawtransaction([node0utxos.pop()], {self.nodes[1].getnewaddress(): 49.99})\n         txid2 = self.nodes[0].sendrawtransaction(self.nodes[0].signrawtransaction(tx2)[\"hex\"])\n         assert_raises(JSONRPCException, self.nodes[0].gettxoutproof, [txid1])\n \n@@ -64,15 +62,15 @@ def run_test(self):\n         assert_equal(self.nodes[2].verifytxoutproof(self.nodes[2].gettxoutproof([txid1, txid2], blockhash)), txlist)\n \n         txin_spent = self.nodes[1].listunspent(1).pop()\n-        tx3 = self.nodes[1].createrawtransaction([txin_spent], {self.nodes[0].getnewaddress(): 50})\n+        tx3 = self.nodes[1].createrawtransaction([txin_spent], {self.nodes[0].getnewaddress(): 49.98})\n         self.nodes[0].sendrawtransaction(self.nodes[1].signrawtransaction(tx3)[\"hex\"])\n         self.nodes[0].generate(1)\n         self.sync_all()\n \n         txid_spent = txin_spent[\"txid\"]\n         txid_unspent = txid1 if txin_spent[\"txid\"] != txid1 else txid2\n \n-        # We cant find the block from a fully-spent tx\n+        # We can't find the block from a fully-spent tx\n         assert_raises(JSONRPCException, self.nodes[2].gettxoutproof, [txid_spent])\n         # ...but we can if we specify the block\n         assert_equal(self.nodes[2].verifytxoutproof(self.nodes[2].gettxoutproof([txid_spent], blockhash)), [txid_spent])"
      },
      {
        "sha": "62071d426e3781ba787016f722ee7b6fd99250fd",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "added",
        "additions": 122,
        "deletions": 0,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,122 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test mulitple rpc user config option rpcauth\n+#\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import base64\n+\n+try:\n+    import http.client as httplib\n+except ImportError:\n+    import httplib\n+try:\n+    import urllib.parse as urlparse\n+except ImportError:\n+    import urlparse\n+\n+class HTTPBasicsTest (BitcoinTestFramework):\n+    def setup_nodes(self):\n+        return start_nodes(4, self.options.tmpdir)\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain(self.options.tmpdir)\n+        #Append rpcauth to bitcoin.conf before initialization\n+        rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n+        rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a') as f:\n+            f.write(rpcauth+\"\\n\")\n+            f.write(rpcauth2+\"\\n\")\n+\n+    def run_test(self):\n+\n+        ##################################################\n+        # Check correctness of the rpcauth config option #\n+        ##################################################\n+        url = urlparse.urlparse(self.nodes[0].url)\n+\n+        #Old authpair\n+        authpair = url.username + ':' + url.password\n+\n+        #New authpair generated via contrib/rpcuser tool\n+        rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n+        password = \"cA773lm788buwYe4g4WT+05pKyNruVKjQ25x3n0DQcM=\"\n+\n+        #Second authpair with different username\n+        rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n+        password2 = \"8/F3uMDw4KSEbw96U3CA1C4X05dkHDN2BPFjTgZW4KI=\"\n+        authpairnew = \"rt:\"+password\n+\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n+\n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        resp = conn.getresponse()\n+        assert_equal(resp.status==401, False)\n+        conn.close()\n+        \n+        #Use new authpair to confirm both work\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpairnew)}\n+\n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        resp = conn.getresponse()\n+        assert_equal(resp.status==401, False)\n+        conn.close()\n+\n+        #Wrong login name with rt's password\n+        authpairnew = \"rtwrong:\"+password\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpairnew)}\n+\n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        resp = conn.getresponse()\n+        assert_equal(resp.status==401, True)\n+        conn.close()\n+\n+        #Wrong password for rt\n+        authpairnew = \"rt:\"+password+\"wrong\"\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpairnew)}\n+\n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        resp = conn.getresponse()\n+        assert_equal(resp.status==401, True)\n+        conn.close()\n+\n+        #Correct for rt2\n+        authpairnew = \"rt2:\"+password2\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpairnew)}\n+\n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        resp = conn.getresponse()\n+        assert_equal(resp.status==401, False)\n+        conn.close()\n+\n+        #Wrong password for rt2\n+        authpairnew = \"rt2:\"+password2+\"wrong\"\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpairnew)}\n+\n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        resp = conn.getresponse()\n+        assert_equal(resp.status==401, True)\n+        conn.close()\n+\n+\n+\n+if __name__ == '__main__':\n+    HTTPBasicsTest ().main ()"
      },
      {
        "sha": "c6c8c436e9701f0c80e8e39633dd1221cc34322b",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,7 +9,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import base64\n \n try:\n     import http.client as httplib\n@@ -54,15 +53,15 @@ def run_test(self):\n         self.nodes[2].setban(\"127.0.0.0/24\", \"add\")\n         self.nodes[2].setban(\"192.168.0.1\", \"add\", 1) #ban for 1 seconds\n         self.nodes[2].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/19\", \"add\", 1000) #ban for 1000 seconds\n-        listBeforeShutdown = self.nodes[2].listbanned();\n+        listBeforeShutdown = self.nodes[2].listbanned()\n         assert_equal(\"192.168.0.1/32\", listBeforeShutdown[2]['address']) #must be here\n         time.sleep(2) #make 100% sure we expired 192.168.0.1 node time\n \n         #stop node\n         stop_node(self.nodes[2], 2)\n \n         self.nodes[2] = start_node(2, self.options.tmpdir)\n-        listAfterShutdown = self.nodes[2].listbanned();\n+        listAfterShutdown = self.nodes[2].listbanned()\n         assert_equal(\"127.0.0.0/24\", listAfterShutdown[0]['address'])\n         assert_equal(\"127.0.0.0/32\", listAfterShutdown[1]['address'])\n         assert_equal(\"/19\" in listAfterShutdown[2]['address'], True)"
      },
      {
        "sha": "bf355780c19c449b9fa526c1212d26e41b8c3707",
        "filename": "qa/rpc-tests/p2p-acceptblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-acceptblock.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-#\n+# Copyright (c) 2015 The Bitcoin Core developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -62,7 +62,6 @@\n class TestNode(NodeConnCB):\n     def __init__(self):\n         NodeConnCB.__init__(self)\n-        self.create_callback_map()\n         self.connection = None\n         self.ping_counter = 1\n         self.last_pong = msg_pong()"
      },
      {
        "sha": "b1e8ca53ee1cf9d32550ab251384c9186da92279",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 146,
        "deletions": 18,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,21 +1,16 @@\n #!/usr/bin/env python2\n-\n-#\n+# Copyright (c) 2015 The Bitcoin Core developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n-from test_framework.comptool import TestManager, TestInstance\n-from test_framework.mininode import *\n+from test_framework.comptool import TestManager, TestInstance, RejectResult\n from test_framework.blocktools import *\n-import logging\n-import copy\n import time\n-import numbers\n from test_framework.key import CECKey\n-from test_framework.script import CScript, CScriptOp, SignatureHash, SIGHASH_ALL, OP_TRUE\n+from test_framework.script import CScript, SignatureHash, SIGHASH_ALL, OP_TRUE, OP_FALSE\n \n class PreviousSpendableOutput(object):\n     def __init__(self, tx = CTransaction(), n = -1):\n@@ -122,13 +117,29 @@ def accepted():\n             return TestInstance([[self.tip, True]])\n \n         # returns a test case that asserts that the current tip was rejected\n-        def rejected():\n-            return TestInstance([[self.tip, False]])\n+        def rejected(reject = None):\n+            if reject is None:\n+                return TestInstance([[self.tip, False]])\n+            else:\n+                return TestInstance([[self.tip, reject]])\n        \n         # move the tip back to a previous block\n         def tip(number):\n             self.tip = self.blocks[number]\n \n+        # add transactions to a block produced by next_block\n+        def update_block(block_number, new_transactions):\n+            block = self.blocks[block_number]\n+            old_hash = block.sha256\n+            self.add_transactions_to_block(block, new_transactions)\n+            block.solve()\n+            # Update the internal state just like in next_block\n+            self.tip = block\n+            self.block_heights[block.sha256] = self.block_heights[old_hash]\n+            del self.block_heights[old_hash]\n+            self.blocks[block_number] = block\n+            return block\n+\n         # creates a new block and advances the tip to that block\n         block = self.next_block\n \n@@ -141,23 +152,23 @@ def tip(number):\n \n         # Now we need that block to mature so we can spend the coinbase.\n         test = TestInstance(sync_every_block=False)\n-        for i in range(100):\n+        for i in range(99):\n             block(1000 + i)\n             test.blocks_and_transactions.append([self.tip, True])\n             save_spendable_output()\n         yield test\n \n \n-        # Start by bulding a couple of blocks on top (which output is spent is in parentheses):\n+        # Start by building a couple of blocks on top (which output is spent is\n+        # in parentheses):\n         #     genesis -> b1 (0) -> b2 (1)\n         out0 = get_spendable_output()\n         block(1, spend=out0)\n         save_spendable_output()\n         yield accepted()\n \n         out1 = get_spendable_output()\n-        block(2, spend=out1)\n-        # Inv again, then deliver twice (shouldn't break anything).\n+        b2 = block(2, spend=out1)\n         yield accepted()\n \n \n@@ -168,8 +179,8 @@ def tip(number):\n         # \n         # Nothing should happen at this point. We saw b2 first so it takes priority.\n         tip(1)\n-        block(3, spend=out1)\n-        # Deliver twice (should still not break anything)\n+        b3 = block(3, spend=out1)\n+        txout_b3 = PreviousSpendableOutput(b3.vtx[1], 1)\n         yield rejected()\n \n \n@@ -214,7 +225,7 @@ def tip(number):\n         #                      \\-> b3 (1) -> b4 (2)\n         tip(6)\n         block(9, spend=out4, additional_coinbase_value=1)\n-        yield rejected()\n+        yield rejected(RejectResult(16, 'bad-cb-amount'))\n \n         \n         # Create a fork that ends in a block with too much fee (the one that causes the reorg)\n@@ -226,7 +237,7 @@ def tip(number):\n         yield rejected()\n \n         block(11, spend=out4, additional_coinbase_value=1)\n-        yield rejected()\n+        yield rejected(RejectResult(16, 'bad-cb-amount'))\n \n \n         # Try again, but with a valid fork first\n@@ -252,6 +263,10 @@ def tip(number):\n \n         yield TestInstance([[b12, True, b13.sha256]]) # New tip should be b13.\n \n+        # Add a block with MAX_BLOCK_SIGOPS and one with one more sigop\n+        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6  (3)\n+        #                                          \\-> b12 (3) -> b13 (4) -> b15 (5) -> b16 (6)\n+        #                      \\-> b3 (1) -> b4 (2)\n         \n         # Test that a block with a lot of checksigs is okay\n         lots_of_checksigs = CScript([OP_CHECKSIG] * (1000000 / 50 - 1))\n@@ -264,8 +279,121 @@ def tip(number):\n         out6 = get_spendable_output()\n         too_many_checksigs = CScript([OP_CHECKSIG] * (1000000 / 50))\n         block(16, spend=out6, script=too_many_checksigs)\n+        yield rejected(RejectResult(16, 'bad-blk-sigops'))\n+\n+\n+        # Attempt to spend a transaction created on a different fork\n+        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6  (3)\n+        #                                          \\-> b12 (3) -> b13 (4) -> b15 (5) -> b17 (b3.vtx[1])\n+        #                      \\-> b3 (1) -> b4 (2)\n+        tip(15)\n+        block(17, spend=txout_b3)\n+        yield rejected(RejectResult(16, 'bad-txns-inputs-missingorspent'))\n+\n+        # Attempt to spend a transaction created on a different fork (on a fork this time)\n+        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6  (3)\n+        #                                          \\-> b12 (3) -> b13 (4) -> b15 (5)\n+        #                                                                \\-> b18 (b3.vtx[1]) -> b19 (6)\n+        #                      \\-> b3 (1) -> b4 (2)\n+        tip(13)\n+        block(18, spend=txout_b3)\n         yield rejected()\n \n+        block(19, spend=out6)\n+        yield rejected()\n+\n+        # Attempt to spend a coinbase at depth too low\n+        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6  (3)\n+        #                                          \\-> b12 (3) -> b13 (4) -> b15 (5) -> b20 (7)\n+        #                      \\-> b3 (1) -> b4 (2)\n+        tip(15)\n+        out7 = get_spendable_output()\n+        block(20, spend=out7)\n+        yield rejected(RejectResult(16, 'bad-txns-premature-spend-of-coinbase'))\n+\n+        # Attempt to spend a coinbase at depth too low (on a fork this time)\n+        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6  (3)\n+        #                                          \\-> b12 (3) -> b13 (4) -> b15 (5)\n+        #                                                                \\-> b21 (6) -> b22 (5)\n+        #                      \\-> b3 (1) -> b4 (2)\n+        tip(13)\n+        block(21, spend=out6)\n+        yield rejected()\n+\n+        block(22, spend=out5)\n+        yield rejected()\n+\n+        # Create a block on either side of MAX_BLOCK_SIZE and make sure its accepted/rejected\n+        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6  (3)\n+        #                                          \\-> b12 (3) -> b13 (4) -> b15 (5) -> b23 (6)\n+        #                                                                           \\-> b24 (6) -> b25 (7)\n+        #                      \\-> b3 (1) -> b4 (2)\n+        tip(15)\n+        b23 = block(23, spend=out6)\n+        old_hash = b23.sha256\n+        tx = CTransaction()\n+        script_length = MAX_BLOCK_SIZE - len(b23.serialize()) - 69\n+        script_output = CScript([chr(0)*script_length])\n+        tx.vout.append(CTxOut(0, script_output))\n+        tx.vin.append(CTxIn(COutPoint(b23.vtx[1].sha256, 1)))\n+        b23 = update_block(23, [tx])\n+        # Make sure the math above worked out to produce a max-sized block\n+        assert_equal(len(b23.serialize()), MAX_BLOCK_SIZE)\n+        yield accepted()\n+\n+        # Make the next block one byte bigger and check that it fails\n+        tip(15)\n+        b24 = block(24, spend=out6)\n+        script_length = MAX_BLOCK_SIZE - len(b24.serialize()) - 69\n+        script_output = CScript([chr(0)*(script_length+1)])\n+        tx.vout = [CTxOut(0, script_output)]\n+        b24 = update_block(24, [tx])\n+        assert_equal(len(b24.serialize()), MAX_BLOCK_SIZE+1)\n+        yield rejected(RejectResult(16, 'bad-blk-length'))\n+\n+        b25 = block(25, spend=out7)\n+        yield rejected()\n+\n+        # Create blocks with a coinbase input script size out of range\n+        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6  (3)\n+        #                                          \\-> b12 (3) -> b13 (4) -> b15 (5) -> b23 (6) -> b30 (7)\n+        #                                                                           \\-> ... (6) -> ... (7)\n+        #                      \\-> b3 (1) -> b4 (2)\n+        tip(15)\n+        b26 = block(26, spend=out6)\n+        b26.vtx[0].vin[0].scriptSig = chr(0)\n+        b26.vtx[0].rehash()\n+        # update_block causes the merkle root to get updated, even with no new\n+        # transactions, and updates the required state.\n+        b26 = update_block(26, [])\n+        yield rejected(RejectResult(16, 'bad-cb-length'))\n+\n+        # Extend the b26 chain to make sure bitcoind isn't accepting b26\n+        b27 = block(27, spend=out7)\n+        yield rejected()\n+\n+        # Now try a too-large-coinbase script\n+        tip(15)\n+        b28 = block(28, spend=out6)\n+        b28.vtx[0].vin[0].scriptSig = chr(0)*101\n+        b28.vtx[0].rehash()\n+        b28 = update_block(28, [])\n+        yield rejected(RejectResult(16, 'bad-cb-length'))\n+\n+        # Extend the b28 chain to make sure bitcoind isn't accepted b28\n+        b29 = block(29, spend=out7)\n+        # TODO: Should get a reject message back with \"bad-prevblk\", except\n+        # there's a bug that prevents this from being detected.  Just note\n+        # failure for now, and add the reject result later.\n+        yield rejected()\n+\n+        # b30 has a max-sized coinbase scriptSig.\n+        tip(23)\n+        b30 = block(30)\n+        b30.vtx[0].vin[0].scriptSig = chr(0)*100\n+        b30.vtx[0].rehash()\n+        b30 = update_block(30, [])\n+        yield accepted()\n \n \n if __name__ == '__main__':"
      },
      {
        "sha": "4a79d38da0e7d8aca4fd6e6edb39db3407c63a95",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "added",
        "additions": 126,
        "deletions": 0,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test PrioritiseTransaction code\n+#\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+COIN = 100000000\n+\n+class PrioritiseTransactionTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        self.txouts = gen_return_txouts()\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 1)\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.is_network_split = False\n+\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-debug\", \"-printpriority=1\"]))\n+        self.relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+\n+    def run_test(self):\n+        utxos = create_confirmed_utxos(self.relayfee, self.nodes[0], 90)\n+        base_fee = self.relayfee*100 # our transactions are smaller than 100kb\n+        txids = []\n+\n+        # Create 3 batches of transactions at 3 different fee rate levels\n+        for i in xrange(3):\n+            txids.append([])\n+            txids[i] = create_lots_of_big_transactions(self.nodes[0], self.txouts, utxos[30*i:30*i+30], (i+1)*base_fee)\n+\n+        # add a fee delta to something in the cheapest bucket and make sure it gets mined\n+        # also check that a different entry in the cheapest bucket is NOT mined (lower\n+        # the priority to ensure its not mined due to priority)\n+        self.nodes[0].prioritisetransaction(txids[0][0], 0, int(3*base_fee*COIN))\n+        self.nodes[0].prioritisetransaction(txids[0][1], -1e15, 0)\n+\n+        self.nodes[0].generate(1)\n+\n+        mempool = self.nodes[0].getrawmempool()\n+        print \"Assert that prioritised transasction was mined\"\n+        assert(txids[0][0] not in mempool)\n+        assert(txids[0][1] in mempool)\n+\n+        high_fee_tx = None\n+        for x in txids[2]:\n+            if x not in mempool:\n+                high_fee_tx = x\n+\n+        # Something high-fee should have been mined!\n+        assert(high_fee_tx != None)\n+\n+        # Add a prioritisation before a tx is in the mempool (de-prioritising a\n+        # high-fee transaction).\n+        self.nodes[0].prioritisetransaction(high_fee_tx, -1e15, -int(2*base_fee*COIN))\n+\n+        # Add everything back to mempool\n+        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+\n+        # Check to make sure our high fee rate tx is back in the mempool\n+        mempool = self.nodes[0].getrawmempool()\n+        assert(high_fee_tx in mempool)\n+\n+        # Now verify the high feerate transaction isn't mined.\n+        self.nodes[0].generate(5)\n+\n+        # High fee transaction should not have been mined, but other high fee rate\n+        # transactions should have been.\n+        mempool = self.nodes[0].getrawmempool()\n+        print \"Assert that de-prioritised transaction is still in mempool\"\n+        assert(high_fee_tx in mempool)\n+        for x in txids[2]:\n+            if (x != high_fee_tx):\n+                assert(x not in mempool)\n+\n+        # Create a free, low priority transaction.  Should be rejected.\n+        utxo_list = self.nodes[0].listunspent()\n+        assert(len(utxo_list) > 0)\n+        utxo = utxo_list[0]\n+\n+        inputs = []\n+        outputs = {}\n+        inputs.append({\"txid\" : utxo[\"txid\"], \"vout\" : utxo[\"vout\"]})\n+        outputs[self.nodes[0].getnewaddress()] = utxo[\"amount\"] - self.relayfee\n+        raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        tx_hex = self.nodes[0].signrawtransaction(raw_tx)[\"hex\"]\n+        txid = self.nodes[0].sendrawtransaction(tx_hex)\n+\n+        # A tx that spends an in-mempool tx has 0 priority, so we can use it to\n+        # test the effect of using prioritise transaction for mempool acceptance\n+        inputs = []\n+        inputs.append({\"txid\": txid, \"vout\": 0})\n+        outputs = {}\n+        outputs[self.nodes[0].getnewaddress()] = utxo[\"amount\"] - self.relayfee\n+        raw_tx2 = self.nodes[0].createrawtransaction(inputs, outputs)\n+        tx2_hex = self.nodes[0].signrawtransaction(raw_tx2)[\"hex\"]\n+        tx2_id = self.nodes[0].decoderawtransaction(tx2_hex)[\"txid\"]\n+\n+        try:\n+            self.nodes[0].sendrawtransaction(tx2_hex)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26) # insufficient fee\n+            assert(tx2_id not in self.nodes[0].getrawmempool())\n+        else:\n+            assert(False)\n+\n+        # This is a less than 1000-byte transaction, so just set the fee\n+        # to be the minimum for a 1000 byte transaction and check that it is\n+        # accepted.\n+        self.nodes[0].prioritisetransaction(tx2_id, 0, int(self.relayfee*COIN))\n+\n+        print \"Assert that prioritised free transaction is accepted to mempool\"\n+        assert_equal(self.nodes[0].sendrawtransaction(tx2_hex), tx2_id)\n+        assert(tx2_id in self.nodes[0].getrawmempool())\n+\n+if __name__ == '__main__':\n+    PrioritiseTransactionTest().main()"
      },
      {
        "sha": "7f77e664d266c7aceb7ee2d63a25c541d5b81933",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -3,9 +3,6 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n import socket\n-import traceback, sys\n-from binascii import hexlify\n-import time, os\n \n from test_framework.socks5 import Socks5Configuration, Socks5Command, Socks5Server, AddressType\n from test_framework.test_framework import BitcoinTestFramework\n@@ -34,7 +31,8 @@\n addnode connect to generic DNS name\n '''\n \n-class ProxyTest(BitcoinTestFramework):        \n+\n+class ProxyTest(BitcoinTestFramework):\n     def __init__(self):\n         # Create two proxies on different ports\n         # ... one unauthenticated"
      },
      {
        "sha": "b0f4b88aee551c4e99b4613438c4733936e07b41",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 2,
        "deletions": 20,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -13,7 +13,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os.path\n \n def calc_usage(blockdir):\n     return sum(os.path.getsize(blockdir+f) for f in os.listdir(blockdir) if os.path.isfile(blockdir+f))/(1024*1024)\n@@ -23,24 +22,7 @@ class PruneTest(BitcoinTestFramework):\n     def __init__(self):\n         self.utxo = []\n         self.address = [\"\",\"\"]\n-\n-        # Some pre-processing to create a bunch of OP_RETURN txouts to insert into transactions we create\n-        # So we have big transactions and full blocks to fill up our block files\n-\n-        # create one script_pubkey\n-        script_pubkey = \"6a4d0200\" #OP_RETURN OP_PUSH2 512 bytes\n-        for i in xrange (512):\n-            script_pubkey = script_pubkey + \"01\"\n-        # concatenate 128 txouts of above script_pubkey which we'll insert before the txout for change\n-        self.txouts = \"81\"\n-        for k in xrange(128):\n-            # add txout value\n-            self.txouts = self.txouts + \"0000000000000000\"\n-            # add length of script_pubkey\n-            self.txouts = self.txouts + \"fd0402\"\n-            # add script_pubkey\n-            self.txouts = self.txouts + script_pubkey\n-\n+        self.txouts = gen_return_txouts()\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)"
      },
      {
        "sha": "dd9e5e28a526f706a62d703740a232151a7fad35",
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,8 +10,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from pprint import pprint\n-from time import sleep\n \n # Create one-input, one-output, no-fee transaction:\n class RawTransactionsTest(BitcoinTestFramework):\n@@ -43,9 +41,9 @@ def run_test(self):\n         self.sync_all()\n         self.nodes[0].generate(101)\n         self.sync_all()\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5);\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0);\n-        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0);\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.5)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),1.0)\n+        self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(),5.0)\n         self.sync_all()\n         self.nodes[0].generate(5)\n         self.sync_all()\n@@ -64,7 +62,7 @@ def run_test(self):\n         except JSONRPCException,e:\n             errorString = e.error['message']\n \n-        assert_equal(\"Missing inputs\" in errorString, True);\n+        assert(\"Missing inputs\" in errorString)\n \n         #########################\n         # RAW TX MULTISIG TESTS #\n@@ -83,7 +81,7 @@ def run_test(self):\n         bal = self.nodes[2].getbalance()\n \n         # send 1.2 BTC to msig adr\n-        txId       = self.nodes[0].sendtoaddress(mSigObj, 1.2);\n+        txId = self.nodes[0].sendtoaddress(mSigObj, 1.2)\n         self.sync_all()\n         self.nodes[0].generate(1)\n         self.sync_all()\n@@ -105,7 +103,7 @@ def run_test(self):\n         mSigObj = self.nodes[2].addmultisigaddress(2, [addr1Obj['pubkey'], addr2Obj['pubkey'], addr3Obj['pubkey']])\n         mSigObjValid = self.nodes[2].validateaddress(mSigObj)\n \n-        txId       = self.nodes[0].sendtoaddress(mSigObj, 2.2);\n+        txId = self.nodes[0].sendtoaddress(mSigObj, 2.2)\n         decTx = self.nodes[0].gettransaction(txId)\n         rawTx = self.nodes[0].decoderawtransaction(decTx['hex'])\n         sPK = rawTx['vout'][0]['scriptPubKey']['hex']\n@@ -123,7 +121,7 @@ def run_test(self):\n         for outpoint in rawTx['vout']:\n             if outpoint['value'] == Decimal('2.20000000'):\n                 vout = outpoint\n-                break;\n+                break\n \n         bal = self.nodes[0].getbalance()\n         inputs = [{ \"txid\" : txId, \"vout\" : vout['n'], \"scriptPubKey\" : vout['scriptPubKey']['hex']}]"
      },
      {
        "sha": "606426b394199d5a4da24f92398f135bbe53778c",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -53,6 +53,11 @@ def check_array_result(object_array, to_match, expected, should_not_find = False\n \n class ReceivedByTest(BitcoinTestFramework):\n \n+    def setup_nodes(self):\n+        #This test requires mocktime\n+        enable_mocktime()\n+        return start_nodes(4, self.options.tmpdir)\n+\n     def run_test(self):\n         '''\n         listreceivedbyaddress Test"
      },
      {
        "sha": "321c2fe422a5f73cd993a72012204ca5c627b6db",
        "filename": "qa/rpc-tests/reindex.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,7 +8,6 @@\n #\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import os.path\n \n class ReindexTest(BitcoinTestFramework):\n "
      },
      {
        "sha": "ba1956853aa354377d1015a29f72dce7a72e19bc",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "added",
        "additions": 592,
        "deletions": 0,
        "changes": 592,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,592 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test replace by fee code\n+#\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+from test_framework.script import *\n+from test_framework.mininode import *\n+import binascii\n+\n+COIN = 100000000\n+MAX_REPLACEMENT_LIMIT = 100\n+\n+def satoshi_round(amount):\n+    return Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n+\n+def txToHex(tx):\n+    return binascii.hexlify(tx.serialize()).decode('utf-8')\n+\n+def make_utxo(node, amount, confirmed=True, scriptPubKey=CScript([1])):\n+    \"\"\"Create a txout with a given amount and scriptPubKey\n+\n+    Mines coins as needed.\n+\n+    confirmed - txouts created will be confirmed in the blockchain;\n+                unconfirmed otherwise.\n+    \"\"\"\n+    fee = 1*COIN\n+    while node.getbalance() < satoshi_round((amount + fee)/COIN):\n+        node.generate(100)\n+        #print (node.getbalance(), amount, fee)\n+\n+    new_addr = node.getnewaddress()\n+    #print new_addr\n+    txid = node.sendtoaddress(new_addr, satoshi_round((amount+fee)/COIN))\n+    tx1 = node.getrawtransaction(txid, 1)\n+    txid = int(txid, 16)\n+    i = None\n+\n+    for i, txout in enumerate(tx1['vout']):\n+        #print i, txout['scriptPubKey']['addresses']\n+        if txout['scriptPubKey']['addresses'] == [new_addr]:\n+            #print i\n+            break\n+    assert i is not None\n+\n+    tx2 = CTransaction()\n+    tx2.vin = [CTxIn(COutPoint(txid, i))]\n+    tx2.vout = [CTxOut(amount, scriptPubKey)]\n+    tx2.rehash()\n+\n+    binascii.hexlify(tx2.serialize()).decode('utf-8')\n+\n+    signed_tx = node.signrawtransaction(binascii.hexlify(tx2.serialize()).decode('utf-8'))\n+\n+    txid = node.sendrawtransaction(signed_tx['hex'], True)\n+\n+    # If requested, ensure txouts are confirmed.\n+    if confirmed:\n+        mempool_size = len(node.getrawmempool())\n+        while mempool_size > 0:\n+            node.generate(1)\n+            new_size = len(node.getrawmempool())\n+            # Error out if we have something stuck in the mempool, as this\n+            # would likely be a bug.\n+            assert(new_size < mempool_size)\n+            mempool_size = new_size\n+\n+    return COutPoint(int(txid, 16), 0)\n+\n+class ReplaceByFeeTest(BitcoinTestFramework):\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\", \"-debug\",\n+                                                              \"-relaypriority=0\", \"-whitelist=127.0.0.1\",\n+                                                              \"-limitancestorcount=50\",\n+                                                              \"-limitancestorsize=101\",\n+                                                              \"-limitdescendantcount=200\",\n+                                                              \"-limitdescendantsize=101\"\n+                                                              ]))\n+        self.is_network_split = False\n+\n+    def run_test(self):\n+        make_utxo(self.nodes[0], 1*COIN)\n+\n+        print \"Running test simple doublespend...\"\n+        self.test_simple_doublespend()\n+\n+        print \"Running test doublespend chain...\"\n+        self.test_doublespend_chain()\n+\n+        print \"Running test doublespend tree...\"\n+        self.test_doublespend_tree()\n+\n+        print \"Running test replacement feeperkb...\"\n+        self.test_replacement_feeperkb()\n+\n+        print \"Running test spends of conflicting outputs...\"\n+        self.test_spends_of_conflicting_outputs()\n+\n+        print \"Running test new unconfirmed inputs...\"\n+        self.test_new_unconfirmed_inputs()\n+\n+        print \"Running test too many replacements...\"\n+        self.test_too_many_replacements()\n+\n+        print \"Running test opt-in...\"\n+        self.test_opt_in()\n+\n+        print \"Running test prioritised transactions...\"\n+        self.test_prioritised_transactions()\n+\n+        print \"Passed\\n\"\n+\n+    def test_simple_doublespend(self):\n+        \"\"\"Simple doublespend\"\"\"\n+        tx0_outpoint = make_utxo(self.nodes[0], 1.1*COIN)\n+\n+        tx1a = CTransaction()\n+        tx1a.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        tx1a.vout = [CTxOut(1*COIN, CScript([b'a']))]\n+        tx1a_hex = txToHex(tx1a)\n+        tx1a_txid = self.nodes[0].sendrawtransaction(tx1a_hex, True)\n+\n+        # Should fail because we haven't changed the fee\n+        tx1b = CTransaction()\n+        tx1b.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        tx1b.vout = [CTxOut(1*COIN, CScript([b'b']))]\n+        tx1b_hex = txToHex(tx1b)\n+\n+        try:\n+            tx1b_txid = self.nodes[0].sendrawtransaction(tx1b_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26) # insufficient fee\n+        else:\n+            assert(False)\n+\n+        # Extra 0.1 BTC fee\n+        tx1b = CTransaction()\n+        tx1b.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        tx1b.vout = [CTxOut(0.9*COIN, CScript([b'b']))]\n+        tx1b_hex = txToHex(tx1b)\n+        tx1b_txid = self.nodes[0].sendrawtransaction(tx1b_hex, True)\n+\n+        mempool = self.nodes[0].getrawmempool()\n+\n+        assert (tx1a_txid not in mempool)\n+        assert (tx1b_txid in mempool)\n+\n+        assert_equal(tx1b_hex, self.nodes[0].getrawtransaction(tx1b_txid))\n+\n+    def test_doublespend_chain(self):\n+        \"\"\"Doublespend of a long chain\"\"\"\n+\n+        initial_nValue = 50*COIN\n+        tx0_outpoint = make_utxo(self.nodes[0], initial_nValue)\n+\n+        prevout = tx0_outpoint\n+        remaining_value = initial_nValue\n+        chain_txids = []\n+        while remaining_value > 10*COIN:\n+            remaining_value -= 1*COIN\n+            tx = CTransaction()\n+            tx.vin = [CTxIn(prevout, nSequence=0)]\n+            tx.vout = [CTxOut(remaining_value, CScript([1]))]\n+            tx_hex = txToHex(tx)\n+            txid = self.nodes[0].sendrawtransaction(tx_hex, True)\n+            chain_txids.append(txid)\n+            prevout = COutPoint(int(txid, 16), 0)\n+\n+        # Whether the double-spend is allowed is evaluated by including all\n+        # child fees - 40 BTC - so this attempt is rejected.\n+        dbl_tx = CTransaction()\n+        dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        dbl_tx.vout = [CTxOut(initial_nValue - 30*COIN, CScript([1]))]\n+        dbl_tx_hex = txToHex(dbl_tx)\n+\n+        try:\n+            self.nodes[0].sendrawtransaction(dbl_tx_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26) # insufficient fee\n+        else:\n+            assert(False) # transaction mistakenly accepted!\n+\n+        # Accepted with sufficient fee\n+        dbl_tx = CTransaction()\n+        dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        dbl_tx.vout = [CTxOut(1*COIN, CScript([1]))]\n+        dbl_tx_hex = txToHex(dbl_tx)\n+        self.nodes[0].sendrawtransaction(dbl_tx_hex, True)\n+\n+        mempool = self.nodes[0].getrawmempool()\n+        for doublespent_txid in chain_txids:\n+            assert(doublespent_txid not in mempool)\n+\n+    def test_doublespend_tree(self):\n+        \"\"\"Doublespend of a big tree of transactions\"\"\"\n+\n+        initial_nValue = 50*COIN\n+        tx0_outpoint = make_utxo(self.nodes[0], initial_nValue)\n+\n+        def branch(prevout, initial_value, max_txs, tree_width=5, fee=0.0001*COIN, _total_txs=None):\n+            if _total_txs is None:\n+                _total_txs = [0]\n+            if _total_txs[0] >= max_txs:\n+                return\n+\n+            txout_value = (initial_value - fee) // tree_width\n+            if txout_value < fee:\n+                return\n+\n+            vout = [CTxOut(txout_value, CScript([i+1]))\n+                    for i in range(tree_width)]\n+            tx = CTransaction()\n+            tx.vin = [CTxIn(prevout, nSequence=0)]\n+            tx.vout = vout\n+            tx_hex = txToHex(tx)\n+\n+            assert(len(tx.serialize()) < 100000)\n+            txid = self.nodes[0].sendrawtransaction(tx_hex, True)\n+            yield tx\n+            _total_txs[0] += 1\n+\n+            txid = int(txid, 16)\n+\n+            for i, txout in enumerate(tx.vout):\n+                for x in branch(COutPoint(txid, i), txout_value,\n+                                  max_txs,\n+                                  tree_width=tree_width, fee=fee,\n+                                  _total_txs=_total_txs):\n+                    yield x\n+\n+        fee = 0.0001*COIN\n+        n = MAX_REPLACEMENT_LIMIT\n+        tree_txs = list(branch(tx0_outpoint, initial_nValue, n, fee=fee))\n+        assert_equal(len(tree_txs), n)\n+\n+        # Attempt double-spend, will fail because too little fee paid\n+        dbl_tx = CTransaction()\n+        dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        dbl_tx.vout = [CTxOut(initial_nValue - fee*n, CScript([1]))]\n+        dbl_tx_hex = txToHex(dbl_tx)\n+        try:\n+            self.nodes[0].sendrawtransaction(dbl_tx_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26) # insufficient fee\n+        else:\n+            assert(False)\n+\n+        # 1 BTC fee is enough\n+        dbl_tx = CTransaction()\n+        dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        dbl_tx.vout = [CTxOut(initial_nValue - fee*n - 1*COIN, CScript([1]))]\n+        dbl_tx_hex = txToHex(dbl_tx)\n+        self.nodes[0].sendrawtransaction(dbl_tx_hex, True)\n+\n+        mempool = self.nodes[0].getrawmempool()\n+\n+        for tx in tree_txs:\n+            tx.rehash()\n+            assert (tx.hash not in mempool)\n+\n+        # Try again, but with more total transactions than the \"max txs\n+        # double-spent at once\" anti-DoS limit.\n+        for n in (MAX_REPLACEMENT_LIMIT+1, MAX_REPLACEMENT_LIMIT*2):\n+            fee = 0.0001*COIN\n+            tx0_outpoint = make_utxo(self.nodes[0], initial_nValue)\n+            tree_txs = list(branch(tx0_outpoint, initial_nValue, n, fee=fee))\n+            assert_equal(len(tree_txs), n)\n+\n+            dbl_tx = CTransaction()\n+            dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+            dbl_tx.vout = [CTxOut(initial_nValue - 2*fee*n, CScript([1]))]\n+            dbl_tx_hex = txToHex(dbl_tx)\n+            try:\n+                self.nodes[0].sendrawtransaction(dbl_tx_hex, True)\n+            except JSONRPCException as exp:\n+                assert_equal(exp.error['code'], -26)\n+                assert_equal(\"too many potential replacements\" in exp.error['message'], True)\n+            else:\n+                assert(False)\n+\n+            for tx in tree_txs:\n+                tx.rehash()\n+                self.nodes[0].getrawtransaction(tx.hash)\n+\n+    def test_replacement_feeperkb(self):\n+        \"\"\"Replacement requires fee-per-KB to be higher\"\"\"\n+        tx0_outpoint = make_utxo(self.nodes[0], 1.1*COIN)\n+\n+        tx1a = CTransaction()\n+        tx1a.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        tx1a.vout = [CTxOut(1*COIN, CScript([b'a']))]\n+        tx1a_hex = txToHex(tx1a)\n+        tx1a_txid = self.nodes[0].sendrawtransaction(tx1a_hex, True)\n+\n+        # Higher fee, but the fee per KB is much lower, so the replacement is\n+        # rejected.\n+        tx1b = CTransaction()\n+        tx1b.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        tx1b.vout = [CTxOut(0.001*COIN, CScript([b'a'*999000]))]\n+        tx1b_hex = txToHex(tx1b)\n+\n+        try:\n+            tx1b_txid = self.nodes[0].sendrawtransaction(tx1b_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26) # insufficient fee\n+        else:\n+            assert(False)\n+\n+    def test_spends_of_conflicting_outputs(self):\n+        \"\"\"Replacements that spend conflicting tx outputs are rejected\"\"\"\n+        utxo1 = make_utxo(self.nodes[0], 1.2*COIN)\n+        utxo2 = make_utxo(self.nodes[0], 3.0*COIN)\n+\n+        tx1a = CTransaction()\n+        tx1a.vin = [CTxIn(utxo1, nSequence=0)]\n+        tx1a.vout = [CTxOut(1.1*COIN, CScript([b'a']))]\n+        tx1a_hex = txToHex(tx1a)\n+        tx1a_txid = self.nodes[0].sendrawtransaction(tx1a_hex, True)\n+\n+        tx1a_txid = int(tx1a_txid, 16)\n+\n+        # Direct spend an output of the transaction we're replacing.\n+        tx2 = CTransaction()\n+        tx2.vin = [CTxIn(utxo1, nSequence=0), CTxIn(utxo2, nSequence=0)]\n+        tx2.vin.append(CTxIn(COutPoint(tx1a_txid, 0), nSequence=0))\n+        tx2.vout = tx1a.vout\n+        tx2_hex = txToHex(tx2)\n+\n+        try:\n+            tx2_txid = self.nodes[0].sendrawtransaction(tx2_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26)\n+        else:\n+            assert(False)\n+\n+        # Spend tx1a's output to test the indirect case.\n+        tx1b = CTransaction()\n+        tx1b.vin = [CTxIn(COutPoint(tx1a_txid, 0), nSequence=0)]\n+        tx1b.vout = [CTxOut(1.0*COIN, CScript([b'a']))]\n+        tx1b_hex = txToHex(tx1b)\n+        tx1b_txid = self.nodes[0].sendrawtransaction(tx1b_hex, True)\n+        tx1b_txid = int(tx1b_txid, 16)\n+\n+        tx2 = CTransaction()\n+        tx2.vin = [CTxIn(utxo1, nSequence=0), CTxIn(utxo2, nSequence=0),\n+                   CTxIn(COutPoint(tx1b_txid, 0))]\n+        tx2.vout = tx1a.vout\n+        tx2_hex = txToHex(tx2)\n+\n+        try:\n+            tx2_txid = self.nodes[0].sendrawtransaction(tx2_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26)\n+        else:\n+            assert(False)\n+\n+    def test_new_unconfirmed_inputs(self):\n+        \"\"\"Replacements that add new unconfirmed inputs are rejected\"\"\"\n+        confirmed_utxo = make_utxo(self.nodes[0], 1.1*COIN)\n+        unconfirmed_utxo = make_utxo(self.nodes[0], 0.1*COIN, False)\n+\n+        tx1 = CTransaction()\n+        tx1.vin = [CTxIn(confirmed_utxo)]\n+        tx1.vout = [CTxOut(1.0*COIN, CScript([b'a']))]\n+        tx1_hex = txToHex(tx1)\n+        tx1_txid = self.nodes[0].sendrawtransaction(tx1_hex, True)\n+\n+        tx2 = CTransaction()\n+        tx2.vin = [CTxIn(confirmed_utxo), CTxIn(unconfirmed_utxo)]\n+        tx2.vout = tx1.vout\n+        tx2_hex = txToHex(tx2)\n+\n+        try:\n+            tx2_txid = self.nodes[0].sendrawtransaction(tx2_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26)\n+        else:\n+            assert(False)\n+\n+    def test_too_many_replacements(self):\n+        \"\"\"Replacements that evict too many transactions are rejected\"\"\"\n+        # Try directly replacing more than MAX_REPLACEMENT_LIMIT\n+        # transactions\n+\n+        # Start by creating a single transaction with many outputs\n+        initial_nValue = 10*COIN\n+        utxo = make_utxo(self.nodes[0], initial_nValue)\n+        fee = 0.0001*COIN\n+        split_value = int((initial_nValue-fee)/(MAX_REPLACEMENT_LIMIT+1))\n+        actual_fee = initial_nValue - split_value*(MAX_REPLACEMENT_LIMIT+1)\n+\n+        outputs = []\n+        for i in range(MAX_REPLACEMENT_LIMIT+1):\n+            outputs.append(CTxOut(split_value, CScript([1])))\n+\n+        splitting_tx = CTransaction()\n+        splitting_tx.vin = [CTxIn(utxo, nSequence=0)]\n+        splitting_tx.vout = outputs\n+        splitting_tx_hex = txToHex(splitting_tx)\n+\n+        txid = self.nodes[0].sendrawtransaction(splitting_tx_hex, True)\n+        txid = int(txid, 16)\n+\n+        # Now spend each of those outputs individually\n+        for i in range(MAX_REPLACEMENT_LIMIT+1):\n+            tx_i = CTransaction()\n+            tx_i.vin = [CTxIn(COutPoint(txid, i), nSequence=0)]\n+            tx_i.vout = [CTxOut(split_value-fee, CScript([b'a']))]\n+            tx_i_hex = txToHex(tx_i)\n+            self.nodes[0].sendrawtransaction(tx_i_hex, True)\n+\n+        # Now create doublespend of the whole lot; should fail.\n+        # Need a big enough fee to cover all spending transactions and have\n+        # a higher fee rate\n+        double_spend_value = (split_value-100*fee)*(MAX_REPLACEMENT_LIMIT+1)\n+        inputs = []\n+        for i in range(MAX_REPLACEMENT_LIMIT+1):\n+            inputs.append(CTxIn(COutPoint(txid, i), nSequence=0))\n+        double_tx = CTransaction()\n+        double_tx.vin = inputs\n+        double_tx.vout = [CTxOut(double_spend_value, CScript([b'a']))]\n+        double_tx_hex = txToHex(double_tx)\n+\n+        try:\n+            self.nodes[0].sendrawtransaction(double_tx_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26)\n+            assert_equal(\"too many potential replacements\" in exp.error['message'], True)\n+        else:\n+            assert(False)\n+\n+        # If we remove an input, it should pass\n+        double_tx = CTransaction()\n+        double_tx.vin = inputs[0:-1]\n+        double_tx.vout = [CTxOut(double_spend_value, CScript([b'a']))]\n+        double_tx_hex = txToHex(double_tx)\n+        self.nodes[0].sendrawtransaction(double_tx_hex, True)\n+\n+    def test_opt_in(self):\n+        \"\"\" Replacing should only work if orig tx opted in \"\"\"\n+        tx0_outpoint = make_utxo(self.nodes[0], 1.1*COIN)\n+\n+        # Create a non-opting in transaction\n+        tx1a = CTransaction()\n+        tx1a.vin = [CTxIn(tx0_outpoint, nSequence=0xffffffff)]\n+        tx1a.vout = [CTxOut(1*COIN, CScript([b'a']))]\n+        tx1a_hex = txToHex(tx1a)\n+        tx1a_txid = self.nodes[0].sendrawtransaction(tx1a_hex, True)\n+\n+        # Shouldn't be able to double-spend\n+        tx1b = CTransaction()\n+        tx1b.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        tx1b.vout = [CTxOut(0.9*COIN, CScript([b'b']))]\n+        tx1b_hex = txToHex(tx1b)\n+\n+        try:\n+            tx1b_txid = self.nodes[0].sendrawtransaction(tx1b_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26)\n+        else:\n+            print tx1b_txid\n+            assert(False)\n+\n+        tx1_outpoint = make_utxo(self.nodes[0], 1.1*COIN)\n+\n+        # Create a different non-opting in transaction\n+        tx2a = CTransaction()\n+        tx2a.vin = [CTxIn(tx1_outpoint, nSequence=0xfffffffe)]\n+        tx2a.vout = [CTxOut(1*COIN, CScript([b'a']))]\n+        tx2a_hex = txToHex(tx2a)\n+        tx2a_txid = self.nodes[0].sendrawtransaction(tx2a_hex, True)\n+\n+        # Still shouldn't be able to double-spend\n+        tx2b = CTransaction()\n+        tx2b.vin = [CTxIn(tx1_outpoint, nSequence=0)]\n+        tx2b.vout = [CTxOut(0.9*COIN, CScript([b'b']))]\n+        tx2b_hex = txToHex(tx2b)\n+\n+        try:\n+            tx2b_txid = self.nodes[0].sendrawtransaction(tx2b_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26)\n+        else:\n+            assert(False)\n+\n+        # Now create a new transaction that spends from tx1a and tx2a\n+        # opt-in on one of the inputs\n+        # Transaction should be replaceable on either input\n+\n+        tx1a_txid = int(tx1a_txid, 16)\n+        tx2a_txid = int(tx2a_txid, 16)\n+\n+        tx3a = CTransaction()\n+        tx3a.vin = [CTxIn(COutPoint(tx1a_txid, 0), nSequence=0xffffffff),\n+                    CTxIn(COutPoint(tx2a_txid, 0), nSequence=0xfffffffd)]\n+        tx3a.vout = [CTxOut(0.9*COIN, CScript([b'c'])), CTxOut(0.9*COIN, CScript([b'd']))]\n+        tx3a_hex = txToHex(tx3a)\n+\n+        self.nodes[0].sendrawtransaction(tx3a_hex, True)\n+\n+        tx3b = CTransaction()\n+        tx3b.vin = [CTxIn(COutPoint(tx1a_txid, 0), nSequence=0)]\n+        tx3b.vout = [CTxOut(0.5*COIN, CScript([b'e']))]\n+        tx3b_hex = txToHex(tx3b)\n+\n+        tx3c = CTransaction()\n+        tx3c.vin = [CTxIn(COutPoint(tx2a_txid, 0), nSequence=0)]\n+        tx3c.vout = [CTxOut(0.5*COIN, CScript([b'f']))]\n+        tx3c_hex = txToHex(tx3c)\n+\n+        self.nodes[0].sendrawtransaction(tx3b_hex, True)\n+        # If tx3b was accepted, tx3c won't look like a replacement,\n+        # but make sure it is accepted anyway\n+        self.nodes[0].sendrawtransaction(tx3c_hex, True)\n+\n+    def test_prioritised_transactions(self):\n+        # Ensure that fee deltas used via prioritisetransaction are\n+        # correctly used by replacement logic\n+\n+        # 1. Check that feeperkb uses modified fees\n+        tx0_outpoint = make_utxo(self.nodes[0], 1.1*COIN)\n+\n+        tx1a = CTransaction()\n+        tx1a.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        tx1a.vout = [CTxOut(1*COIN, CScript([b'a']))]\n+        tx1a_hex = txToHex(tx1a)\n+        tx1a_txid = self.nodes[0].sendrawtransaction(tx1a_hex, True)\n+\n+        # Higher fee, but the actual fee per KB is much lower.\n+        tx1b = CTransaction()\n+        tx1b.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n+        tx1b.vout = [CTxOut(0.001*COIN, CScript([b'a'*740000]))]\n+        tx1b_hex = txToHex(tx1b)\n+\n+        # Verify tx1b cannot replace tx1a.\n+        try:\n+            tx1b_txid = self.nodes[0].sendrawtransaction(tx1b_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26)\n+        else:\n+            assert(False)\n+\n+        # Use prioritisetransaction to set tx1a's fee to 0.\n+        self.nodes[0].prioritisetransaction(tx1a_txid, 0, int(-0.1*COIN))\n+\n+        # Now tx1b should be able to replace tx1a\n+        tx1b_txid = self.nodes[0].sendrawtransaction(tx1b_hex, True)\n+\n+        assert(tx1b_txid in self.nodes[0].getrawmempool())\n+\n+        # 2. Check that absolute fee checks use modified fee.\n+        tx1_outpoint = make_utxo(self.nodes[0], 1.1*COIN)\n+\n+        tx2a = CTransaction()\n+        tx2a.vin = [CTxIn(tx1_outpoint, nSequence=0)]\n+        tx2a.vout = [CTxOut(1*COIN, CScript([b'a']))]\n+        tx2a_hex = txToHex(tx2a)\n+        tx2a_txid = self.nodes[0].sendrawtransaction(tx2a_hex, True)\n+\n+        # Lower fee, but we'll prioritise it\n+        tx2b = CTransaction()\n+        tx2b.vin = [CTxIn(tx1_outpoint, nSequence=0)]\n+        tx2b.vout = [CTxOut(1.01*COIN, CScript([b'a']))]\n+        tx2b.rehash()\n+        tx2b_hex = txToHex(tx2b)\n+\n+        # Verify tx2b cannot replace tx2a.\n+        try:\n+            tx2b_txid = self.nodes[0].sendrawtransaction(tx2b_hex, True)\n+        except JSONRPCException as exp:\n+            assert_equal(exp.error['code'], -26)\n+        else:\n+            assert(False)\n+\n+        # Now prioritise tx2b to have a higher modified fee\n+        self.nodes[0].prioritisetransaction(tx2b.hash, 0, int(0.1*COIN))\n+\n+        # tx2b should now be accepted\n+        tx2b_txid = self.nodes[0].sendrawtransaction(tx2b_hex, True)\n+\n+        assert(tx2b_txid in self.nodes[0].getrawmempool())\n+\n+if __name__ == '__main__':\n+    ReplaceByFeeTest().main()"
      },
      {
        "sha": "8c835365010e899dc8c6c0fd2bc12fa1058a9938",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -12,9 +12,7 @@\n from test_framework.util import *\n from struct import *\n import binascii\n-import json\n import StringIO\n-import decimal\n \n try:\n     import http.client as httplib\n@@ -143,9 +141,9 @@ def run_test(self):\n \n         binaryRequest = b'\\x01\\x02'\n         binaryRequest += binascii.unhexlify(txid)\n-        binaryRequest += pack(\"i\", n);\n-        binaryRequest += binascii.unhexlify(vintx);\n-        binaryRequest += pack(\"i\", 0);\n+        binaryRequest += pack(\"i\", n)\n+        binaryRequest += binascii.unhexlify(vintx)\n+        binaryRequest += pack(\"i\", 0)\n \n         bin_response = http_post_call(url.hostname, url.port, '/rest/getutxos'+self.FORMAT_SEPARATOR+'bin', binaryRequest)\n         output = StringIO.StringIO()\n@@ -206,7 +204,7 @@ def run_test(self):\n         json_request = '/checkmempool/'\n         for x in range(0, 15):\n             json_request += txid+'-'+str(n)+'/'\n-        json_request = json_request.rstrip(\"/\");\n+        json_request = json_request.rstrip(\"/\")\n         response = http_post_call(url.hostname, url.port, '/rest/getutxos'+json_request+self.FORMAT_SEPARATOR+'json', '', True)\n         assert_equal(response.status, 200) #must be a 500 because we exceeding the limits\n \n@@ -254,7 +252,7 @@ def run_test(self):\n         response_header_json = http_get_call(url.hostname, url.port, '/rest/headers/1/'+bb_hash+self.FORMAT_SEPARATOR+\"json\", True)\n         assert_equal(response_header_json.status, 200)\n         response_header_json_str = response_header_json.read()\n-        json_obj = json.loads(response_header_json_str, parse_float=decimal.Decimal)\n+        json_obj = json.loads(response_header_json_str, parse_float=Decimal)\n         assert_equal(len(json_obj), 1) #ensure that there is one header in the json response\n         assert_equal(json_obj[0]['hash'], bb_hash) #request/response hash should be the same\n \n@@ -282,7 +280,7 @@ def run_test(self):\n         assert_equal(len(json_obj), 5) #now we should have 5 header objects\n \n         # do tx test\n-        tx_hash = block_json_obj['tx'][0]['txid'];\n+        tx_hash = block_json_obj['tx'][0]['txid']\n         json_string = http_get_call(url.hostname, url.port, '/rest/tx/'+tx_hash+self.FORMAT_SEPARATOR+\"json\")\n         json_obj = json.loads(json_string)\n         assert_equal(json_obj['txid'], tx_hash)"
      },
      {
        "sha": "10a48b5556e4068950d788c27f8a6133c7b21cb1",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,17 +1,12 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n # Test for -rpcbind, as well as -rpcallowip and -rpcconnect\n \n-# Add python-bitcoinrpc to module search path:\n-import os\n-import sys\n+# TODO extend this test from the test framework (like all other tests)\n \n-import json\n-import shutil\n-import subprocess\n import tempfile\n import traceback\n "
      },
      {
        "sha": "2bc32584b5f8ef086300d808be22fbe617d2f364",
        "filename": "qa/rpc-tests/sendheaders.py",
        "status": "added",
        "additions": 517,
        "deletions": 0,
        "changes": 517,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/sendheaders.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,517 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+from test_framework.blocktools import create_block, create_coinbase\n+\n+'''\n+SendHeadersTest -- test behavior of headers messages to announce blocks.\n+\n+Setup: \n+\n+- Two nodes, two p2p connections to node0. One p2p connection should only ever\n+  receive inv's (omitted from testing description below, this is our control).\n+  Second node is used for creating reorgs.\n+\n+Part 1: No headers announcements before \"sendheaders\"\n+a. node mines a block [expect: inv]\n+   send getdata for the block [expect: block]\n+b. node mines another block [expect: inv]\n+   send getheaders and getdata [expect: headers, then block]\n+c. node mines another block [expect: inv]\n+   peer mines a block, announces with header [expect: getdata]\n+d. node mines another block [expect: inv]\n+\n+Part 2: After \"sendheaders\", headers announcements should generally work.\n+a. peer sends sendheaders [expect: no response]\n+   peer sends getheaders with current tip [expect: no response]\n+b. node mines a block [expect: tip header]\n+c. for N in 1, ..., 10:\n+   * for announce-type in {inv, header}\n+     - peer mines N blocks, announces with announce-type\n+       [ expect: getheaders/getdata or getdata, deliver block(s) ]\n+     - node mines a block [ expect: 1 header ]\n+\n+Part 3: Headers announcements stop after large reorg and resume after getheaders or inv from peer.\n+- For response-type in {inv, getheaders}\n+  * node mines a 7 block reorg [ expect: headers announcement of 8 blocks ]\n+  * node mines an 8-block reorg [ expect: inv at tip ]\n+  * peer responds with getblocks/getdata [expect: inv, blocks ]\n+  * node mines another block [ expect: inv at tip, peer sends getdata, expect: block ]\n+  * node mines another block at tip [ expect: inv ]\n+  * peer responds with getheaders with an old hashstop more than 8 blocks back [expect: headers]\n+  * peer requests block [ expect: block ]\n+  * node mines another block at tip [ expect: inv, peer sends getdata, expect: block ]\n+  * peer sends response-type [expect headers if getheaders, getheaders/getdata if mining new block]\n+  * node mines 1 block [expect: 1 header, peer responds with getdata]\n+\n+Part 4: Test direct fetch behavior\n+a. Announce 2 old block headers.\n+   Expect: no getdata requests.\n+b. Announce 3 new blocks via 1 headers message.\n+   Expect: one getdata request for all 3 blocks.\n+   (Send blocks.)\n+c. Announce 1 header that forks off the last two blocks.\n+   Expect: no response.\n+d. Announce 1 more header that builds on that fork.\n+   Expect: one getdata request for two blocks.\n+e. Announce 16 more headers that build on that fork.\n+   Expect: getdata request for 14 more blocks.\n+f. Announce 1 more header that builds on that fork.\n+   Expect: no response.\n+'''\n+\n+class BaseNode(NodeConnCB):\n+    def __init__(self):\n+        NodeConnCB.__init__(self)\n+        self.connection = None\n+        self.last_inv = None\n+        self.last_headers = None\n+        self.last_block = None\n+        self.ping_counter = 1\n+        self.last_pong = msg_pong(0)\n+        self.last_getdata = None\n+        self.sleep_time = 0.05\n+        self.block_announced = False\n+\n+    def clear_last_announcement(self):\n+        with mininode_lock:\n+            self.block_announced = False\n+            self.last_inv = None\n+            self.last_headers = None\n+\n+    def add_connection(self, conn):\n+        self.connection = conn\n+\n+    # Request data for a list of block hashes\n+    def get_data(self, block_hashes):\n+        msg = msg_getdata()\n+        for x in block_hashes:\n+            msg.inv.append(CInv(2, x))\n+        self.connection.send_message(msg)\n+\n+    def get_headers(self, locator, hashstop):\n+        msg = msg_getheaders()\n+        msg.locator.vHave = locator\n+        msg.hashstop = hashstop\n+        self.connection.send_message(msg)\n+\n+    def send_block_inv(self, blockhash):\n+        msg = msg_inv()\n+        msg.inv = [CInv(2, blockhash)]\n+        self.connection.send_message(msg)\n+\n+    # Wrapper for the NodeConn's send_message function\n+    def send_message(self, message):\n+        self.connection.send_message(message)\n+\n+    def on_inv(self, conn, message):\n+        self.last_inv = message\n+        self.block_announced = True\n+\n+    def on_headers(self, conn, message):\n+        self.last_headers = message\n+        self.block_announced = True\n+\n+    def on_block(self, conn, message):\n+        self.last_block = message.block\n+        self.last_block.calc_sha256()\n+\n+    def on_getdata(self, conn, message):\n+        self.last_getdata = message\n+\n+    def on_pong(self, conn, message):\n+        self.last_pong = message\n+\n+    # Test whether the last announcement we received had the\n+    # right header or the right inv\n+    # inv and headers should be lists of block hashes\n+    def check_last_announcement(self, headers=None, inv=None):\n+        expect_headers = headers if headers != None else []\n+        expect_inv = inv if inv != None else []\n+        test_function = lambda: self.block_announced\n+        self.sync(test_function)\n+        with mininode_lock:\n+            self.block_announced = False\n+\n+            success = True\n+            compare_inv = []\n+            if self.last_inv != None:\n+                compare_inv = [x.hash for x in self.last_inv.inv]\n+            if compare_inv != expect_inv:\n+                success = False\n+\n+            hash_headers = []\n+            if self.last_headers != None:\n+                # treat headers as a list of block hashes\n+                hash_headers = [ x.sha256 for x in self.last_headers.headers ]\n+            if hash_headers != expect_headers:\n+                success = False\n+\n+            self.last_inv = None\n+            self.last_headers = None\n+        return success\n+\n+    # Syncing helpers\n+    def sync(self, test_function, timeout=60):\n+        while timeout > 0:\n+            with mininode_lock:\n+                if test_function():\n+                    return\n+            time.sleep(self.sleep_time)\n+            timeout -= self.sleep_time\n+        raise AssertionError(\"Sync failed to complete\")\n+        \n+    def sync_with_ping(self, timeout=60):\n+        self.send_message(msg_ping(nonce=self.ping_counter))\n+        test_function = lambda: self.last_pong.nonce == self.ping_counter\n+        self.sync(test_function, timeout)\n+        self.ping_counter += 1\n+        return\n+\n+    def wait_for_block(self, blockhash, timeout=60):\n+        test_function = lambda: self.last_block != None and self.last_block.sha256 == blockhash\n+        self.sync(test_function, timeout)\n+        return\n+\n+    def wait_for_getdata(self, hash_list, timeout=60):\n+        if hash_list == []:\n+            return\n+\n+        test_function = lambda: self.last_getdata != None and [x.hash for x in self.last_getdata.inv] == hash_list\n+        self.sync(test_function, timeout)\n+        return\n+\n+    def send_header_for_blocks(self, new_blocks):\n+        headers_message = msg_headers()\n+        headers_message.headers = [ CBlockHeader(b) for b in new_blocks ]\n+        self.send_message(headers_message)\n+\n+    def send_getblocks(self, locator):\n+        getblocks_message = msg_getblocks()\n+        getblocks_message.locator.vHave = locator\n+        self.send_message(getblocks_message)\n+\n+# InvNode: This peer should only ever receive inv's, because it doesn't ever send a\n+# \"sendheaders\" message.\n+class InvNode(BaseNode):\n+    def __init__(self):\n+        BaseNode.__init__(self)\n+\n+# TestNode: This peer is the one we use for most of the testing.\n+class TestNode(BaseNode):\n+    def __init__(self):\n+        BaseNode.__init__(self)\n+\n+class SendHeadersTest(BitcoinTestFramework):\n+    def setup_chain(self):\n+        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes = start_nodes(2, self.options.tmpdir, [[\"-debug\", \"-logtimemicros=1\"]]*2)\n+        connect_nodes(self.nodes[0], 1)\n+\n+    # mine count blocks and return the new tip\n+    def mine_blocks(self, count):\n+        # Clear out last block announcement from each p2p listener\n+        [ x.clear_last_announcement() for x in self.p2p_connections ]\n+        self.nodes[0].generate(count)\n+        return int(self.nodes[0].getbestblockhash(), 16)\n+\n+    # mine a reorg that invalidates length blocks (replacing them with\n+    # length+1 blocks).\n+    # Note: we clear the state of our p2p connections after the\n+    # to-be-reorged-out blocks are mined, so that we don't break later tests.\n+    # return the list of block hashes newly mined\n+    def mine_reorg(self, length):\n+        self.nodes[0].generate(length) # make sure all invalidated blocks are node0's\n+        sync_blocks(self.nodes, wait=0.1)\n+        [x.clear_last_announcement() for x in self.p2p_connections]\n+\n+        tip_height = self.nodes[1].getblockcount()\n+        hash_to_invalidate = self.nodes[1].getblockhash(tip_height-(length-1))\n+        self.nodes[1].invalidateblock(hash_to_invalidate)\n+        all_hashes = self.nodes[1].generate(length+1) # Must be longer than the orig chain\n+        sync_blocks(self.nodes, wait=0.1)\n+        return [int(x, 16) for x in all_hashes]\n+\n+    def run_test(self):\n+        # Setup the p2p connections and start up the network thread.\n+        inv_node = InvNode()\n+        test_node = TestNode()\n+\n+        self.p2p_connections = [inv_node, test_node]\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], inv_node))\n+        # Set nServices to 0 for test_node, so no block download will occur outside of\n+        # direct fetching\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], test_node, services=0))\n+        inv_node.add_connection(connections[0])\n+        test_node.add_connection(connections[1])\n+\n+        NetworkThread().start() # Start up network handling in another thread\n+\n+        # Test logic begins here\n+        inv_node.wait_for_verack()\n+        test_node.wait_for_verack()\n+\n+        tip = int(self.nodes[0].getbestblockhash(), 16)\n+\n+        # PART 1\n+        # 1. Mine a block; expect inv announcements each time\n+        print \"Part 1: headers don't start before sendheaders message...\"\n+        for i in xrange(4):\n+            old_tip = tip\n+            tip = self.mine_blocks(1)\n+            assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+            assert_equal(test_node.check_last_announcement(inv=[tip]), True)\n+            # Try a few different responses; none should affect next announcement\n+            if i == 0:\n+                # first request the block\n+                test_node.get_data([tip])\n+                test_node.wait_for_block(tip, timeout=5)\n+            elif i == 1:\n+                # next try requesting header and block\n+                test_node.get_headers(locator=[old_tip], hashstop=tip)\n+                test_node.get_data([tip])\n+                test_node.wait_for_block(tip)\n+                test_node.clear_last_announcement() # since we requested headers...\n+            elif i == 2:\n+                # this time announce own block via headers\n+                height = self.nodes[0].getblockcount()\n+                last_time = self.nodes[0].getblock(self.nodes[0].getbestblockhash())['time']\n+                block_time = last_time + 1\n+                new_block = create_block(tip, create_coinbase(height+1), block_time)\n+                new_block.solve()\n+                test_node.send_header_for_blocks([new_block])\n+                test_node.wait_for_getdata([new_block.sha256], timeout=5)\n+                test_node.send_message(msg_block(new_block))\n+                test_node.sync_with_ping() # make sure this block is processed\n+                inv_node.clear_last_announcement()\n+                test_node.clear_last_announcement()\n+\n+        print \"Part 1: success!\"\n+        print \"Part 2: announce blocks with headers after sendheaders message...\"\n+        # PART 2\n+        # 2. Send a sendheaders message and test that headers announcements\n+        # commence and keep working.\n+        test_node.send_message(msg_sendheaders())\n+        prev_tip = int(self.nodes[0].getbestblockhash(), 16)\n+        test_node.get_headers(locator=[prev_tip], hashstop=0L)\n+        test_node.sync_with_ping()\n+\n+        # Now that we've synced headers, headers announcements should work\n+        tip = self.mine_blocks(1)\n+        assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+        assert_equal(test_node.check_last_announcement(headers=[tip]), True)\n+\n+        height = self.nodes[0].getblockcount()+1\n+        block_time += 10  # Advance far enough ahead\n+        for i in xrange(10):\n+            # Mine i blocks, and alternate announcing either via\n+            # inv (of tip) or via headers. After each, new blocks\n+            # mined by the node should successfully be announced\n+            # with block header, even though the blocks are never requested\n+            for j in xrange(2):\n+                blocks = []\n+                for b in xrange(i+1):\n+                    blocks.append(create_block(tip, create_coinbase(height), block_time))\n+                    blocks[-1].solve()\n+                    tip = blocks[-1].sha256\n+                    block_time += 1\n+                    height += 1\n+                if j == 0:\n+                    # Announce via inv\n+                    test_node.send_block_inv(tip)\n+                    test_node.wait_for_getdata([tip], timeout=5)\n+                    # Test that duplicate inv's won't result in duplicate\n+                    # getdata requests, or duplicate headers announcements\n+                    inv_node.send_block_inv(tip)\n+                    # Should have received a getheaders as well!\n+                    test_node.send_header_for_blocks(blocks)\n+                    test_node.wait_for_getdata([x.sha256 for x in blocks[0:-1]], timeout=5)\n+                    [ inv_node.send_block_inv(x.sha256) for x in blocks[0:-1] ]\n+                    inv_node.sync_with_ping()\n+                else:\n+                    # Announce via headers\n+                    test_node.send_header_for_blocks(blocks)\n+                    test_node.wait_for_getdata([x.sha256 for x in blocks], timeout=5)\n+                    # Test that duplicate headers won't result in duplicate\n+                    # getdata requests (the check is further down)\n+                    inv_node.send_header_for_blocks(blocks)\n+                    inv_node.sync_with_ping()\n+                [ test_node.send_message(msg_block(x)) for x in blocks ]\n+                test_node.sync_with_ping()\n+                inv_node.sync_with_ping()\n+                # This block should not be announced to the inv node (since it also\n+                # broadcast it)\n+                assert_equal(inv_node.last_inv, None)\n+                assert_equal(inv_node.last_headers, None)\n+                tip = self.mine_blocks(1)\n+                assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+                assert_equal(test_node.check_last_announcement(headers=[tip]), True)\n+                height += 1\n+                block_time += 1\n+\n+        print \"Part 2: success!\"\n+\n+        print \"Part 3: headers announcements can stop after large reorg, and resume after headers/inv from peer...\"\n+\n+        # PART 3.  Headers announcements can stop after large reorg, and resume after\n+        # getheaders or inv from peer.\n+        for j in xrange(2):\n+            # First try mining a reorg that can propagate with header announcement\n+            new_block_hashes = self.mine_reorg(length=7)\n+            tip = new_block_hashes[-1]\n+            assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+            assert_equal(test_node.check_last_announcement(headers=new_block_hashes), True)\n+\n+            block_time += 8 \n+\n+            # Mine a too-large reorg, which should be announced with a single inv\n+            new_block_hashes = self.mine_reorg(length=8)\n+            tip = new_block_hashes[-1]\n+            assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+            assert_equal(test_node.check_last_announcement(inv=[tip]), True)\n+\n+            block_time += 9\n+\n+            fork_point = self.nodes[0].getblock(\"%02x\" % new_block_hashes[0])[\"previousblockhash\"]\n+            fork_point = int(fork_point, 16)\n+\n+            # Use getblocks/getdata\n+            test_node.send_getblocks(locator = [fork_point])\n+            assert_equal(test_node.check_last_announcement(inv=new_block_hashes), True)\n+            test_node.get_data(new_block_hashes)\n+            test_node.wait_for_block(new_block_hashes[-1])\n+\n+            for i in xrange(3):\n+                # Mine another block, still should get only an inv\n+                tip = self.mine_blocks(1)\n+                assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+                assert_equal(test_node.check_last_announcement(inv=[tip]), True)\n+                if i == 0:\n+                    # Just get the data -- shouldn't cause headers announcements to resume\n+                    test_node.get_data([tip])\n+                    test_node.wait_for_block(tip)\n+                elif i == 1:\n+                    # Send a getheaders message that shouldn't trigger headers announcements\n+                    # to resume (best header sent will be too old)\n+                    test_node.get_headers(locator=[fork_point], hashstop=new_block_hashes[1])\n+                    test_node.get_data([tip])\n+                    test_node.wait_for_block(tip)\n+                elif i == 2:\n+                    test_node.get_data([tip])\n+                    test_node.wait_for_block(tip)\n+                    # This time, try sending either a getheaders to trigger resumption\n+                    # of headers announcements, or mine a new block and inv it, also \n+                    # triggering resumption of headers announcements.\n+                    if j == 0:\n+                        test_node.get_headers(locator=[tip], hashstop=0L)\n+                        test_node.sync_with_ping()\n+                    else:\n+                        test_node.send_block_inv(tip)\n+                        test_node.sync_with_ping()\n+            # New blocks should now be announced with header\n+            tip = self.mine_blocks(1)\n+            assert_equal(inv_node.check_last_announcement(inv=[tip]), True)\n+            assert_equal(test_node.check_last_announcement(headers=[tip]), True)\n+\n+        print \"Part 3: success!\"\n+\n+        print \"Part 4: Testing direct fetch behavior...\"\n+        tip = self.mine_blocks(1)\n+        height = self.nodes[0].getblockcount() + 1\n+        last_time = self.nodes[0].getblock(self.nodes[0].getbestblockhash())['time']\n+        block_time = last_time + 1\n+\n+        # Create 2 blocks.  Send the blocks, then send the headers.\n+        blocks = []\n+        for b in xrange(2):\n+            blocks.append(create_block(tip, create_coinbase(height), block_time))\n+            blocks[-1].solve()\n+            tip = blocks[-1].sha256\n+            block_time += 1\n+            height += 1\n+            inv_node.send_message(msg_block(blocks[-1]))\n+\n+        inv_node.sync_with_ping() # Make sure blocks are processed\n+        test_node.last_getdata = None\n+        test_node.send_header_for_blocks(blocks)\n+        test_node.sync_with_ping()\n+        # should not have received any getdata messages\n+        with mininode_lock:\n+            assert_equal(test_node.last_getdata, None)\n+\n+        # This time, direct fetch should work\n+        blocks = []\n+        for b in xrange(3):\n+            blocks.append(create_block(tip, create_coinbase(height), block_time))\n+            blocks[-1].solve()\n+            tip = blocks[-1].sha256\n+            block_time += 1\n+            height += 1\n+\n+        test_node.send_header_for_blocks(blocks)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getdata([x.sha256 for x in blocks], timeout=test_node.sleep_time)\n+\n+        [ test_node.send_message(msg_block(x)) for x in blocks ]\n+\n+        test_node.sync_with_ping()\n+\n+        # Now announce a header that forks the last two blocks\n+        tip = blocks[0].sha256\n+        height -= 1\n+        blocks = []\n+\n+        # Create extra blocks for later\n+        for b in xrange(20):\n+            blocks.append(create_block(tip, create_coinbase(height), block_time))\n+            blocks[-1].solve()\n+            tip = blocks[-1].sha256\n+            block_time += 1\n+            height += 1\n+\n+        # Announcing one block on fork should not trigger direct fetch\n+        # (less work than tip)\n+        test_node.last_getdata = None\n+        test_node.send_header_for_blocks(blocks[0:1])\n+        test_node.sync_with_ping()\n+        with mininode_lock:\n+            assert_equal(test_node.last_getdata, None)\n+\n+        # Announcing one more block on fork should trigger direct fetch for\n+        # both blocks (same work as tip)\n+        test_node.send_header_for_blocks(blocks[1:2])\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getdata([x.sha256 for x in blocks[0:2]], timeout=test_node.sleep_time)\n+\n+        # Announcing 16 more headers should trigger direct fetch for 14 more\n+        # blocks\n+        test_node.send_header_for_blocks(blocks[2:18])\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getdata([x.sha256 for x in blocks[2:16]], timeout=test_node.sleep_time)\n+\n+        # Announcing 1 more header should not trigger any response\n+        test_node.last_getdata = None\n+        test_node.send_header_for_blocks(blocks[18:19])\n+        test_node.sync_with_ping()\n+        with mininode_lock:\n+            assert_equal(test_node.last_getdata, None)\n+\n+        print \"Part 4: success!\"\n+\n+        # Finally, check that the inv node never received a getdata request,\n+        # throughout the test\n+        assert_equal(inv_node.last_getdata, None)\n+\n+if __name__ == '__main__':\n+    SendHeadersTest().main()"
      },
      {
        "sha": "b209ae0c163385f660bc550ee25beb65fc8a1364",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "modified",
        "additions": 30,
        "deletions": 25,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -19,9 +19,6 @@\n # 4 bytes of OP_TRUE and push 2-byte redeem script of \"OP_1 OP_DROP\" or \"OP_2 OP_DROP\"\n SCRIPT_SIG = [\"0451025175\", \"0451025275\"]\n \n-def satoshi_round(amount):\n-    return  Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n-\n def small_txpuzzle_randfee(from_node, conflist, unconflist, amount, min_fee, fee_increment):\n     '''\n     Create and send a transaction with a random fee.\n@@ -120,15 +117,26 @@ def check_estimates(node, fees_seen, max_invalid, print_estimates = True):\n         last_e = e\n     valid_estimate = False\n     invalid_estimates = 0\n-    for e in all_estimates:\n+    for i,e in enumerate(all_estimates): # estimate is for i+1\n         if e >= 0:\n             valid_estimate = True\n+            # estimatesmartfee should return the same result\n+            assert_equal(node.estimatesmartfee(i+1)[\"feerate\"], e)\n+\n         else:\n             invalid_estimates += 1\n-        # Once we're at a high enough confirmation count that we can give an estimate\n-        # We should have estimates for all higher confirmation counts\n-        if valid_estimate and e < 0:\n-            raise AssertionError(\"Invalid estimate appears at higher confirm count than valid estimate\")\n+\n+            # estimatesmartfee should still be valid\n+            approx_estimate = node.estimatesmartfee(i+1)[\"feerate\"]\n+            answer_found = node.estimatesmartfee(i+1)[\"blocks\"]\n+            assert(approx_estimate > 0)\n+            assert(answer_found > i+1)\n+\n+            # Once we're at a high enough confirmation count that we can give an estimate\n+            # We should have estimates for all higher confirmation counts\n+            if valid_estimate:\n+                raise AssertionError(\"Invalid estimate appears at higher confirm count than valid estimate\")\n+\n     # Check on the expected number of different confirmation counts\n     # that we might not have valid estimates for\n     if invalid_estimates > max_invalid:\n@@ -184,13 +192,13 @@ def setup_network(self):\n         # NOTE: the CreateNewBlock code starts counting block size at 1,000 bytes,\n         # (17k is room enough for 110 or so transactions)\n         self.nodes.append(start_node(1, self.options.tmpdir,\n-                                     [\"-blockprioritysize=1500\", \"-blockmaxsize=18000\",\n+                                     [\"-blockprioritysize=1500\", \"-blockmaxsize=17000\",\n                                       \"-maxorphantx=1000\", \"-relaypriority=0\", \"-debug=estimatefee\"]))\n         connect_nodes(self.nodes[1], 0)\n \n         # Node2 is a stingy miner, that\n-        # produces too small blocks (room for only 70 or so transactions)\n-        node2args = [\"-blockprioritysize=0\", \"-blockmaxsize=12000\", \"-maxorphantx=1000\", \"-relaypriority=0\"]\n+        # produces too small blocks (room for only 55 or so transactions)\n+        node2args = [\"-blockprioritysize=0\", \"-blockmaxsize=8000\", \"-maxorphantx=1000\", \"-relaypriority=0\"]\n \n         self.nodes.append(start_node(2, self.options.tmpdir, node2args))\n         connect_nodes(self.nodes[0], 2)\n@@ -229,22 +237,19 @@ def run_test(self):\n         self.fees_per_kb = []\n         self.memutxo = []\n         self.confutxo = self.txouts # Start with the set of confirmed txouts after splitting\n-        print(\"Checking estimates for 1/2/3/6/15/25 blocks\")\n-        print(\"Creating transactions and mining them with a huge block size\")\n-        # Create transactions and mine 20 big blocks with node 0 such that the mempool is always emptied\n-        self.transact_and_mine(30, self.nodes[0])\n-        check_estimates(self.nodes[1], self.fees_per_kb, 1)\n+        print(\"Will output estimates for 1/2/3/6/15/25 blocks\")\n \n-        print(\"Creating transactions and mining them with a block size that can't keep up\")\n-        # Create transactions and mine 30 small blocks with node 2, but create txs faster than we can mine\n-        self.transact_and_mine(20, self.nodes[2])\n-        check_estimates(self.nodes[1], self.fees_per_kb, 3)\n+        for i in xrange(2):\n+            print(\"Creating transactions and mining them with a block size that can't keep up\")\n+            # Create transactions and mine 10 small blocks with node 2, but create txs faster than we can mine\n+            self.transact_and_mine(10, self.nodes[2])\n+            check_estimates(self.nodes[1], self.fees_per_kb, 14)\n \n-        print(\"Creating transactions and mining them at a block size that is just big enough\")\n-        # Generate transactions while mining 40 more blocks, this time with node1\n-        # which mines blocks with capacity just above the rate that transactions are being created\n-        self.transact_and_mine(40, self.nodes[1])\n-        check_estimates(self.nodes[1], self.fees_per_kb, 2)\n+            print(\"Creating transactions and mining them at a block size that is just big enough\")\n+            # Generate transactions while mining 10 more blocks, this time with node1\n+            # which mines blocks with capacity just above the rate that transactions are being created\n+            self.transact_and_mine(10, self.nodes[1])\n+            check_estimates(self.nodes[1], self.fees_per_kb, 2)\n \n         # Finish by mining a normal-sized block:\n         while len(self.nodes[1].getrawmempool()) > 0:"
      },
      {
        "sha": "7eea41b75c058a2e734a865a9493a91ab8f20e10",
        "filename": "qa/rpc-tests/test_framework/blocktools.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blocktools.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,11 +1,11 @@\n # blocktools.py - utilities for manipulating blocks and transactions\n-#\n+# Copyright (c) 2015 The Bitcoin Core developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n from mininode import *\n-from script import CScript, CScriptOp, OP_TRUE, OP_CHECKSIG\n+from script import CScript, OP_TRUE, OP_CHECKSIG\n \n # Create a block (with regtest difficulty)\n def create_block(hashprev, coinbase, nTime=None):"
      },
      {
        "sha": "a4cd4d0a89780349b531c2ea4678b5d6cd40dc8f",
        "filename": "qa/rpc-tests/test_framework/comptool.py",
        "status": "modified",
        "additions": 41,
        "deletions": 2,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/comptool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/comptool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/comptool.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-#\n+# Copyright (c) 2015 The Bitcoin Core developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -41,17 +41,32 @@ def wait_until(predicate, attempts=float('inf'), timeout=float('inf')):\n \n     return False\n \n+class RejectResult(object):\n+    '''\n+    Outcome that expects rejection of a transaction or block.\n+    '''\n+    def __init__(self, code, reason=''):\n+        self.code = code\n+        self.reason = reason\n+    def match(self, other):\n+        if self.code != other.code:\n+            return False\n+        return other.reason.startswith(self.reason)\n+    def __repr__(self):\n+        return '%i:%s' % (self.code,self.reason or '*')\n+\n class TestNode(NodeConnCB):\n \n     def __init__(self, block_store, tx_store):\n         NodeConnCB.__init__(self)\n-        self.create_callback_map()\n         self.conn = None\n         self.bestblockhash = None\n         self.block_store = block_store\n         self.block_request_map = {}\n         self.tx_store = tx_store\n         self.tx_request_map = {}\n+        self.block_reject_map = {}\n+        self.tx_reject_map = {}\n \n         # When the pingmap is non-empty we're waiting for \n         # a response\n@@ -95,6 +110,12 @@ def on_pong(self, conn, message):\n         except KeyError:\n             raise AssertionError(\"Got pong for unknown ping [%s]\" % repr(message))\n \n+    def on_reject(self, conn, message):\n+        if message.message == 'tx':\n+            self.tx_reject_map[message.data] = RejectResult(message.code, message.reason)\n+        if message.message == 'block':\n+            self.block_reject_map[message.data] = RejectResult(message.code, message.reason)\n+\n     def send_inv(self, obj):\n         mtype = 2 if isinstance(obj, CBlock) else 1\n         self.conn.send_message(msg_inv([CInv(mtype, obj.sha256)]))\n@@ -244,6 +265,15 @@ def check_results(self, blockhash, outcome):\n                 if outcome is None:\n                     if c.cb.bestblockhash != self.connections[0].cb.bestblockhash:\n                         return False\n+                elif isinstance(outcome, RejectResult): # Check that block was rejected w/ code\n+                    if c.cb.bestblockhash == blockhash:\n+                        return False\n+                    if blockhash not in c.cb.block_reject_map:\n+                        print 'Block not in reject map: %064x' % (blockhash)\n+                        return False\n+                    if not outcome.match(c.cb.block_reject_map[blockhash]):\n+                        print 'Block rejected with %s instead of expected %s: %064x' % (c.cb.block_reject_map[blockhash], outcome, blockhash)\n+                        return False\n                 elif ((c.cb.bestblockhash == blockhash) != outcome):\n                     # print c.cb.bestblockhash, blockhash, outcome\n                     return False\n@@ -263,6 +293,15 @@ def check_mempool(self, txhash, outcome):\n                     if c.cb.lastInv != self.connections[0].cb.lastInv:\n                         # print c.rpc.getrawmempool()\n                         return False\n+                elif isinstance(outcome, RejectResult): # Check that tx was rejected w/ code\n+                    if txhash in c.cb.lastInv:\n+                        return False\n+                    if txhash not in c.cb.tx_reject_map:\n+                        print 'Tx not in reject map: %064x' % (txhash)\n+                        return False\n+                    if not outcome.match(c.cb.tx_reject_map[txhash]):\n+                        print 'Tx rejected with %s instead of expected %s: %064x' % (c.cb.tx_reject_map[txhash], outcome, txhash)\n+                        return False\n                 elif ((txhash in c.cb.lastInv) != outcome):\n                     # print c.rpc.getrawmempool(), c.cb.lastInv\n                     return False"
      },
      {
        "sha": "d21a001b6efe04b56b6fe18aaf85e380859613d8",
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,3 +1,9 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n \"\"\"\n This module contains utilities for doing coverage analysis on the RPC\n interface."
      },
      {
        "sha": "ca65fb6e795a7e692115c854930227aac9099d4f",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 45,
        "deletions": 25,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -36,6 +36,7 @@\n MY_SUBVERSION = \"/python-mininode-tester:0.0.1/\"\n \n MAX_INV_SZ = 50000\n+MAX_BLOCK_SIZE = 1000000\n \n # Keep our own socket map for asyncore, so that we can track disconnects\n # ourselves (to workaround an issue with closing an asyncore socket when \n@@ -751,8 +752,8 @@ def __repr__(self):\n class msg_getdata(object):\n     command = \"getdata\"\n \n-    def __init__(self):\n-        self.inv = []\n+    def __init__(self, inv=None):\n+        self.inv = inv if inv != None else []\n \n     def deserialize(self, f):\n         self.inv = deser_vector(f, CInv)\n@@ -905,6 +906,20 @@ def serialize(self):\n     def __repr__(self):\n         return \"msg_mempool()\"\n \n+class msg_sendheaders(object):\n+    command = \"sendheaders\"\n+\n+    def __init__(self):\n+        pass\n+\n+    def deserialize(self, f):\n+        pass\n+\n+    def serialize(self):\n+        return \"\"\n+\n+    def __repr__(self):\n+        return \"msg_sendheaders()\"\n \n # getheaders message has\n # number of entries\n@@ -989,33 +1004,37 @@ def __repr__(self):\n class NodeConnCB(object):\n     def __init__(self):\n         self.verack_received = False\n+        # deliver_sleep_time is helpful for debugging race conditions in p2p\n+        # tests; it causes message delivery to sleep for the specified time\n+        # before acquiring the global lock and delivering the next message.\n+        self.deliver_sleep_time = None\n+\n+    def set_deliver_sleep_time(self, value):\n+        with mininode_lock:\n+            self.deliver_sleep_time = value\n \n-    # Derived classes should call this function once to set the message map\n-    # which associates the derived classes' functions to incoming messages\n-    def create_callback_map(self):\n-        self.cbmap = {\n-            \"version\": self.on_version,\n-            \"verack\": self.on_verack,\n-            \"addr\": self.on_addr,\n-            \"alert\": self.on_alert,\n-            \"inv\": self.on_inv,\n-            \"getdata\": self.on_getdata,\n-            \"getblocks\": self.on_getblocks,\n-            \"tx\": self.on_tx,\n-            \"block\": self.on_block,\n-            \"getaddr\": self.on_getaddr,\n-            \"ping\": self.on_ping,\n-            \"pong\": self.on_pong,\n-            \"headers\": self.on_headers,\n-            \"getheaders\": self.on_getheaders,\n-            \"reject\": self.on_reject,\n-            \"mempool\": self.on_mempool\n-        }\n+    def get_deliver_sleep_time(self):\n+        with mininode_lock:\n+            return self.deliver_sleep_time\n+\n+    # Spin until verack message is received from the node.\n+    # Tests may want to use this as a signal that the test can begin.\n+    # This can be called from the testing thread, so it needs to acquire the\n+    # global lock.\n+    def wait_for_verack(self):\n+        while True:\n+            with mininode_lock:\n+                if self.verack_received:\n+                    return\n+            time.sleep(0.05)\n \n     def deliver(self, conn, message):\n+        deliver_sleep = self.get_deliver_sleep_time()\n+        if deliver_sleep is not None:\n+            time.sleep(deliver_sleep)\n         with mininode_lock:\n             try:\n-                self.cbmap[message.command](conn, message)\n+                getattr(self, 'on_' + message.command)(conn, message)\n             except:\n                 print \"ERROR delivering %s (%s)\" % (repr(message),\n                                                     sys.exc_info()[0])\n@@ -1084,7 +1103,7 @@ class NodeConn(asyncore.dispatcher):\n         \"regtest\": \"\\xfa\\xbf\\xb5\\xda\"    # regtest\n     }\n \n-    def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\"):\n+    def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\", services=1):\n         asyncore.dispatcher.__init__(self, map=mininode_socket_map)\n         self.log = logging.getLogger(\"NodeConn(%s:%d)\" % (dstaddr, dstport))\n         self.dstaddr = dstaddr\n@@ -1102,6 +1121,7 @@ def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\"):\n \n         # stuff version msg into sendbuf\n         vt = msg_version()\n+        vt.nServices = services\n         vt.addrTo.ip = self.dstaddr\n         vt.addrTo.port = self.dstport\n         vt.addrFrom.ip = \"0.0.0.0\""
      },
      {
        "sha": "50daa8793732a6a5180489b5897392a6929c4420",
        "filename": "qa/rpc-tests/test_framework/netutil.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/netutil.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "bf5e25fb27653c565e234760d89458e584645f81",
        "filename": "qa/rpc-tests/test_framework/script.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/script.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -14,7 +14,8 @@\n \n from __future__ import absolute_import, division, print_function, unicode_literals\n \n-from test_framework.mininode import CTransaction, CTxOut, hash256\n+from .mininode import CTransaction, CTxOut, hash256\n+from binascii import hexlify\n \n import sys\n bchr = chr\n@@ -24,10 +25,9 @@\n     bchr = lambda x: bytes([x])\n     bord = lambda x: x\n \n-import copy\n import struct\n \n-from test_framework.bignum import bn2vch\n+from .bignum import bn2vch\n \n MAX_SCRIPT_SIZE = 10000\n MAX_SCRIPT_ELEMENT_SIZE = 520\n@@ -226,7 +226,7 @@ def __new__(cls, n):\n \n # expansion\n OP_NOP1 = CScriptOp(0xb0)\n-OP_NOP2 = CScriptOp(0xb1)\n+OP_CHECKLOCKTIMEVERIFY = CScriptOp(0xb1)\n OP_NOP3 = CScriptOp(0xb2)\n OP_NOP4 = CScriptOp(0xb3)\n OP_NOP5 = CScriptOp(0xb4)\n@@ -353,7 +353,7 @@ def __new__(cls, n):\n     OP_CHECKMULTISIGVERIFY,\n \n     OP_NOP1,\n-    OP_NOP2,\n+    OP_CHECKLOCKTIMEVERIFY,\n     OP_NOP3,\n     OP_NOP4,\n     OP_NOP5,\n@@ -472,7 +472,7 @@ def __new__(cls, n):\n     OP_CHECKMULTISIG : 'OP_CHECKMULTISIG',\n     OP_CHECKMULTISIGVERIFY : 'OP_CHECKMULTISIGVERIFY',\n     OP_NOP1 : 'OP_NOP1',\n-    OP_NOP2 : 'OP_NOP2',\n+    OP_CHECKLOCKTIMEVERIFY : 'OP_CHECKLOCKTIMEVERIFY',\n     OP_NOP3 : 'OP_NOP3',\n     OP_NOP4 : 'OP_NOP4',\n     OP_NOP5 : 'OP_NOP5',\n@@ -591,7 +591,7 @@ def __new__(cls, n):\n     'OP_CHECKMULTISIG' : OP_CHECKMULTISIG,\n     'OP_CHECKMULTISIGVERIFY' : OP_CHECKMULTISIGVERIFY,\n     'OP_NOP1' : OP_NOP1,\n-    'OP_NOP2' : OP_NOP2,\n+    'OP_CHECKLOCKTIMEVERIFY' : OP_CHECKLOCKTIMEVERIFY,\n     'OP_NOP3' : OP_NOP3,\n     'OP_NOP4' : OP_NOP4,\n     'OP_NOP5' : OP_NOP5,\n@@ -777,7 +777,7 @@ def __repr__(self):\n         # need to change\n         def _repr(o):\n             if isinstance(o, bytes):\n-                return \"x('%s')\" % binascii.hexlify(o).decode('utf8')\n+                return \"x('%s')\" % hexlify(o).decode('utf8')\n             else:\n                 return repr(o)\n "
      },
      {
        "sha": "584f318d0bbcd78c8f0b31a178b3d354feee9562",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -120,7 +120,7 @@ def main(self):\n         if self.options.coveragedir:\n             enable_coverage(self.options.coveragedir)\n \n-        os.environ['PATH'] = self.options.srcdir+\":\"+os.environ['PATH']\n+        os.environ['PATH'] = self.options.srcdir+\":\"+self.options.srcdir+\"/qt:\"+os.environ['PATH']\n \n         check_json_precision()\n "
      },
      {
        "sha": "8c472a518da5987988f9fe8e6ca13b44ae0fe100",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 121,
        "deletions": 11,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -22,6 +22,26 @@\n \n COVERAGE_DIR = None\n \n+#Set Mocktime default to OFF.\n+#MOCKTIME is only needed for scripts that use the\n+#cached version of the blockchain.  If the cached\n+#version of the blockchain is used without MOCKTIME\n+#then the mempools will not sync due to IBD.\n+MOCKTIME = 0\n+\n+def enable_mocktime():\n+    #For backwared compatibility of the python scripts\n+    #with previous versions of the cache, set MOCKTIME \n+    #to Jan 1, 2014 + (201 * 10 * 60)\n+    global MOCKTIME\n+    MOCKTIME = 1388534400 + (201 * 10 * 60)\n+\n+def disable_mocktime():\n+    global MOCKTIME\n+    MOCKTIME = 0\n+\n+def get_mocktime():\n+    return MOCKTIME\n \n def enable_coverage(dirname):\n     \"\"\"Maintain a log of which RPC calls are made during testing.\"\"\"\n@@ -67,6 +87,9 @@ def check_json_precision():\n     if satoshis != 2000000000000003:\n         raise RuntimeError(\"JSON encode/decode loses precision\")\n \n+def count_bytes(hex_string):\n+    return len(bytearray.fromhex(hex_string))\n+\n def sync_blocks(rpc_connections, wait=1):\n     \"\"\"\n     Wait until everybody has the same block count\n@@ -99,11 +122,12 @@ def initialize_datadir(dirname, n):\n     if not os.path.isdir(datadir):\n         os.makedirs(datadir)\n     with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n-        f.write(\"regtest=1\\n\");\n-        f.write(\"rpcuser=rt\\n\");\n-        f.write(\"rpcpassword=rt\\n\");\n-        f.write(\"port=\"+str(p2p_port(n))+\"\\n\");\n-        f.write(\"rpcport=\"+str(rpc_port(n))+\"\\n\");\n+        f.write(\"regtest=1\\n\")\n+        f.write(\"rpcuser=rt\\n\")\n+        f.write(\"rpcpassword=rt\\n\")\n+        f.write(\"port=\"+str(p2p_port(n))+\"\\n\")\n+        f.write(\"rpcport=\"+str(rpc_port(n))+\"\\n\")\n+        f.write(\"listenonion=0\\n\")\n     return datadir\n \n def initialize_chain(test_dir):\n@@ -127,7 +151,7 @@ def initialize_chain(test_dir):\n         # Create cache directories, run bitcoinds:\n         for i in range(4):\n             datadir=initialize_datadir(\"cache\", i)\n-            args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n+            args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n             if i > 0:\n                 args.append(\"-connect=127.0.0.1:\"+str(p2p_port(0)))\n             bitcoind_processes[i] = subprocess.Popen(args)\n@@ -151,9 +175,10 @@ def initialize_chain(test_dir):\n \n         # Create a 200-block-long chain; each of the 4 nodes\n         # gets 25 mature blocks and 25 immature.\n-        # blocks are created with timestamps 10 minutes apart, starting\n-        # at 1 Jan 2014\n-        block_time = 1388534400\n+        # blocks are created with timestamps 10 minutes apart\n+        # starting from 2010 minutes in the past\n+        enable_mocktime()\n+        block_time = get_mocktime() - (201 * 10 * 60)\n         for i in range(2):\n             for peer in range(4):\n                 for j in range(25):\n@@ -166,6 +191,7 @@ def initialize_chain(test_dir):\n         # Shut them down, and clean up cache directories:\n         stop_nodes(rpcs)\n         wait_bitcoinds()\n+        disable_mocktime()\n         for i in range(4):\n             os.remove(log_filename(\"cache\", i, \"debug.log\"))\n             os.remove(log_filename(\"cache\", i, \"db.log\"))\n@@ -214,7 +240,7 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n     datadir = os.path.join(dirname, \"node\"+str(i))\n     if binary is None:\n         binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n-    args = [ binary, \"-datadir=\"+datadir, \"-keypool=1\", \"-discover=0\", \"-rest\" ]\n+    args = [ binary, \"-datadir=\"+datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-mocktime=\"+str(get_mocktime()) ]\n     if extra_args is not None: args.extend(extra_args)\n     bitcoind_processes[i] = subprocess.Popen(args)\n     devnull = open(os.devnull, \"w\")\n@@ -401,3 +427,87 @@ def assert_raises(exc, fun, *args, **kwds):\n         raise AssertionError(\"Unexpected exception raised: \"+type(e).__name__)\n     else:\n         raise AssertionError(\"No exception raised\")\n+\n+def assert_is_hex_string(string):\n+    try:\n+        int(string, 16)\n+    except Exception as e:\n+        raise AssertionError(\n+            \"Couldn't interpret %r as hexadecimal; raised: %s\" % (string, e))\n+\n+def assert_is_hash_string(string, length=64):\n+    if not isinstance(string, basestring):\n+        raise AssertionError(\"Expected a string, got type %r\" % type(string))\n+    elif length and len(string) != length:\n+        raise AssertionError(\n+            \"String of length %d expected; got %d\" % (length, len(string)))\n+    elif not re.match('[abcdef0-9]+$', string):\n+        raise AssertionError(\n+            \"String %r contains invalid characters for a hash.\" % string)\n+\n+def satoshi_round(amount):\n+    return  Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n+\n+def create_confirmed_utxos(fee, node, count):\n+    node.generate(int(0.5*count)+101)\n+    utxos = node.listunspent()\n+    iterations = count - len(utxos)\n+    addr1 = node.getnewaddress()\n+    addr2 = node.getnewaddress()\n+    if iterations <= 0:\n+        return utxos\n+    for i in xrange(iterations):\n+        t = utxos.pop()\n+        inputs = []\n+        inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]})\n+        outputs = {}\n+        send_value = t['amount'] - fee\n+        outputs[addr1] = satoshi_round(send_value/2)\n+        outputs[addr2] = satoshi_round(send_value/2)\n+        raw_tx = node.createrawtransaction(inputs, outputs)\n+        signed_tx = node.signrawtransaction(raw_tx)[\"hex\"]\n+        txid = node.sendrawtransaction(signed_tx)\n+\n+    while (node.getmempoolinfo()['size'] > 0):\n+        node.generate(1)\n+\n+    utxos = node.listunspent()\n+    assert(len(utxos) >= count)\n+    return utxos\n+\n+def gen_return_txouts():\n+    # Some pre-processing to create a bunch of OP_RETURN txouts to insert into transactions we create\n+    # So we have big transactions (and therefore can't fit very many into each block)\n+    # create one script_pubkey\n+    script_pubkey = \"6a4d0200\" #OP_RETURN OP_PUSH2 512 bytes\n+    for i in xrange (512):\n+        script_pubkey = script_pubkey + \"01\"\n+    # concatenate 128 txouts of above script_pubkey which we'll insert before the txout for change\n+    txouts = \"81\"\n+    for k in xrange(128):\n+        # add txout value\n+        txouts = txouts + \"0000000000000000\"\n+        # add length of script_pubkey\n+        txouts = txouts + \"fd0402\"\n+        # add script_pubkey\n+        txouts = txouts + script_pubkey\n+    return txouts\n+\n+def create_lots_of_big_transactions(node, txouts, utxos, fee):\n+    addr = node.getnewaddress()\n+    txids = []\n+    for i in xrange(len(utxos)):\n+        t = utxos.pop()\n+        inputs = []\n+        inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]})\n+        outputs = {}\n+        send_value = t['amount'] - fee\n+        outputs[addr] = satoshi_round(send_value)\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+        newtx = rawtx[0:92]\n+        newtx = newtx + txouts\n+        newtx = newtx + rawtx[94:]\n+        signresult = node.signrawtransaction(newtx, None, None, \"NONE\")\n+        txid = node.sendrawtransaction(signresult[\"hex\"], True)\n+        txids.append(txid)\n+    return txids"
      },
      {
        "sha": "b132aec4b616529fc4c2d66117ef4dd5d7fc4aee",
        "filename": "qa/rpc-tests/txn_clone.py",
        "status": "modified",
        "additions": 5,
        "deletions": 20,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_clone.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,11 +8,7 @@\n #\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.authproxy import AuthServiceProxy, JSONRPCException\n-from decimal import Decimal\n from test_framework.util import *\n-import os\n-import shutil\n \n class TxnMallTest(BitcoinTestFramework):\n \n@@ -57,16 +53,10 @@ def run_test(self):\n         clone_inputs = [{\"txid\":rawtx1[\"vin\"][0][\"txid\"],\"vout\":rawtx1[\"vin\"][0][\"vout\"]}]\n         clone_outputs = {rawtx1[\"vout\"][0][\"scriptPubKey\"][\"addresses\"][0]:rawtx1[\"vout\"][0][\"value\"],\n                          rawtx1[\"vout\"][1][\"scriptPubKey\"][\"addresses\"][0]:rawtx1[\"vout\"][1][\"value\"]}\n-        clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs)\n+        clone_locktime = rawtx1[\"locktime\"]\n+        clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n-        # 3 hex manipulations on the clone are required\n-\n-        # manipulation 1. sequence is at version+#inputs+input+sigstub\n-        posseq = 2*(4+1+36+1)\n-        seqbe = '%08x' % rawtx1[\"vin\"][0][\"sequence\"]\n-        clone_raw = clone_raw[:posseq] + seqbe[6:8] + seqbe[4:6] + seqbe[2:4] + seqbe[0:2] + clone_raw[posseq + 8:]\n-\n-        # manipulation 2. createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n+        # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n         # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n         # 40 BTC serialized is 00286bee00000000\n         pos0 = 2*(4+1+36+1+4+1)\n@@ -78,11 +68,6 @@ def run_test(self):\n             output1 = clone_raw[pos0 + output_len : pos0 + 2 * output_len]\n             clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n \n-        # manipulation 3. locktime is after outputs\n-        poslt = pos0 + 2 * output_len\n-        ltbe = '%08x' % rawtx1[\"locktime\"]\n-        clone_raw = clone_raw[:poslt] + ltbe[6:8] + ltbe[4:6] + ltbe[2:4] + ltbe[0:2] + clone_raw[poslt + 8:]\n-\n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n         tx1_clone = self.nodes[0].signrawtransaction(clone_raw, None, None, \"ALL|ANYONECANPAY\")\n@@ -136,7 +121,7 @@ def run_test(self):\n         tx2 = self.nodes[0].gettransaction(txid2)\n         \n         # Verify expected confirmations\n-        assert_equal(tx1[\"confirmations\"], -1)\n+        assert_equal(tx1[\"confirmations\"], -2)\n         assert_equal(tx1_clone[\"confirmations\"], 2)\n         assert_equal(tx2[\"confirmations\"], 1)\n "
      },
      {
        "sha": "8d7f6e505d15b183183ac51165500e4c93b3fcbe",
        "filename": "qa/rpc-tests/txn_doublespend.py",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_doublespend.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,9 +9,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from decimal import Decimal\n-import os\n-import shutil\n \n class TxnMallTest(BitcoinTestFramework):\n \n@@ -99,22 +96,23 @@ def run_test(self):\n         # Now give doublespend and its parents to miner:\n         self.nodes[2].sendrawtransaction(fund_foo_tx[\"hex\"])\n         self.nodes[2].sendrawtransaction(fund_bar_tx[\"hex\"])\n-        self.nodes[2].sendrawtransaction(doublespend[\"hex\"])\n+        doublespend_txid = self.nodes[2].sendrawtransaction(doublespend[\"hex\"])\n         # ... mine a block...\n         self.nodes[2].generate(1)\n \n         # Reconnect the split network, and sync chain:\n         connect_nodes(self.nodes[1], 2)\n         self.nodes[2].generate(1)  # Mine another block to make sure we sync\n         sync_blocks(self.nodes)\n+        assert_equal(self.nodes[0].gettransaction(doublespend_txid)[\"confirmations\"], 2)\n \n         # Re-fetch transaction info:\n         tx1 = self.nodes[0].gettransaction(txid1)\n         tx2 = self.nodes[0].gettransaction(txid2)\n-        \n+\n         # Both transactions should be conflicted\n-        assert_equal(tx1[\"confirmations\"], -1)\n-        assert_equal(tx2[\"confirmations\"], -1)\n+        assert_equal(tx1[\"confirmations\"], -2)\n+        assert_equal(tx2[\"confirmations\"], -2)\n \n         # Node0's total balance should be starting balance, plus 100BTC for \n         # two more matured blocks, minus 1240 for the double-spend, plus fees (which are"
      },
      {
        "sha": "6cd879e4a0fd012d0efec6f32663133ca018f238",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 66,
        "deletions": 42,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,29 +1,24 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#\n-# Exercise the wallet.  Ported from wallet.sh.\n-# Does the following:\n-#   a) creates 3 nodes, with an empty chain (no blocks).\n-#   b) node0 mines a block\n-#   c) node1 mines 101 blocks, so now nodes 0 and 1 have 50btc, node2 has none.\n-#   d) node0 sends 21 btc to node2, in two transactions (11 btc, then 10 btc).\n-#   e) node0 mines a block, collects the fee on the second transaction\n-#   f) node1 mines 100 blocks, to mature node0's just-mined block\n-#   g) check that node0 has 100-21, node2 has 21\n-#   h) node0 should now have 2 unspent outputs;  send these to node2 via raw tx broadcast by node1\n-#   i) have node1 mine a block\n-#   j) check balances - node0 should have 0, node2 should have 100\n-#   k) test ResendWalletTransactions - create transactions, startup fourth node, make sure it syncs\n-#\n-\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n class WalletTest (BitcoinTestFramework):\n \n+    def check_fee_amount(self, curr_balance, balance_with_fee, fee_per_byte, tx_size):\n+        \"\"\"Return curr_balance after asserting the fee was in range\"\"\"\n+        fee = balance_with_fee - curr_balance\n+        target_fee = fee_per_byte * tx_size\n+        if fee < target_fee:\n+            raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+        # allow the node's estimation to be at most 2 bytes off\n+        if fee > fee_per_byte * (tx_size + 2):\n+            raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+        return curr_balance\n+\n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)\n         initialize_chain_clean(self.options.tmpdir, 4)\n@@ -54,7 +49,6 @@ def run_test (self):\n         assert_equal(self.nodes[2].getbalance(), 0)\n \n         # Send 21 BTC from 0 to 2 using sendtoaddress call.\n-        # Second transaction will be child of first, and will require a fee\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 11)\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 10)\n \n@@ -86,7 +80,7 @@ def run_test (self):\n             inputs = []\n             outputs = {}\n             inputs.append({ \"txid\" : utxo[\"txid\"], \"vout\" : utxo[\"vout\"]})\n-            outputs[self.nodes[2].getnewaddress(\"from1\")] = utxo[\"amount\"]\n+            outputs[self.nodes[2].getnewaddress(\"from1\")] = utxo[\"amount\"] - 3\n             raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n             txns_to_send.append(self.nodes[0].signrawtransaction(raw_tx))\n \n@@ -99,38 +93,42 @@ def run_test (self):\n         self.sync_all()\n \n         assert_equal(self.nodes[0].getbalance(), 0)\n-        assert_equal(self.nodes[2].getbalance(), 100)\n-        assert_equal(self.nodes[2].getbalance(\"from1\"), 100-21)\n+        assert_equal(self.nodes[2].getbalance(), 94)\n+        assert_equal(self.nodes[2].getbalance(\"from1\"), 94-21)\n \n         # Send 10 BTC normal\n         address = self.nodes[0].getnewaddress(\"test\")\n-        self.nodes[2].settxfee(Decimal('0.001'))\n+        fee_per_byte = Decimal('0.001') / 1000\n+        self.nodes[2].settxfee(fee_per_byte * 1000)\n         txid = self.nodes[2].sendtoaddress(address, 10, \"\", \"\", False)\n         self.nodes[2].generate(1)\n         self.sync_all()\n-        assert_equal(self.nodes[2].getbalance(), Decimal('89.99900000'))\n-        assert_equal(self.nodes[0].getbalance(), Decimal('10.00000000'))\n+        node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), Decimal('84'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))\n+        assert_equal(self.nodes[0].getbalance(), Decimal('10'))\n \n         # Send 10 BTC with subtract fee from amount\n         txid = self.nodes[2].sendtoaddress(address, 10, \"\", \"\", True)\n         self.nodes[2].generate(1)\n         self.sync_all()\n-        assert_equal(self.nodes[2].getbalance(), Decimal('79.99900000'))\n-        assert_equal(self.nodes[0].getbalance(), Decimal('19.99900000'))\n+        node_2_bal -= Decimal('10')\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n+        node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), Decimal('20'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))\n \n         # Sendmany 10 BTC\n         txid = self.nodes[2].sendmany('from1', {address: 10}, 0, \"\", [])\n         self.nodes[2].generate(1)\n         self.sync_all()\n-        assert_equal(self.nodes[2].getbalance(), Decimal('69.99800000'))\n-        assert_equal(self.nodes[0].getbalance(), Decimal('29.99900000'))\n+        node_0_bal += Decimal('10')\n+        node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('10'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))\n+        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n         # Sendmany 10 BTC with subtract fee from amount\n         txid = self.nodes[2].sendmany('from1', {address: 10}, 0, \"\", [address])\n         self.nodes[2].generate(1)\n         self.sync_all()\n-        assert_equal(self.nodes[2].getbalance(), Decimal('59.99800000'))\n-        assert_equal(self.nodes[0].getbalance(), Decimal('39.99800000'))\n+        node_2_bal -= Decimal('10')\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n+        node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, count_bytes(self.nodes[2].getrawtransaction(txid)))\n \n         # Test ResendWalletTransactions:\n         # Create a couple of transactions, then start up a fourth\n@@ -145,7 +143,7 @@ def run_test (self):\n         sync_blocks(self.nodes)\n \n         relayed = self.nodes[0].resendwallettransactions()\n-        assert_equal(set(relayed), set([txid1, txid2]))\n+        assert_equal(set(relayed), {txid1, txid2})\n         sync_mempools(self.nodes)\n \n         assert(txid1 in self.nodes[3].getrawmempool())\n@@ -175,7 +173,7 @@ def run_test (self):\n         for uTx in unspentTxs:\n             if uTx['txid'] == zeroValueTxid:\n                 found = True\n-                assert_equal(uTx['amount'], Decimal('0.00000000'));\n+                assert_equal(uTx['amount'], Decimal('0'))\n         assert(found)\n \n         #do some -walletbroadcast tests\n@@ -187,21 +185,22 @@ def run_test (self):\n         connect_nodes_bi(self.nodes,0,2)\n         self.sync_all()\n \n-        txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2);\n+        txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2)\n         txObjNotBroadcasted = self.nodes[0].gettransaction(txIdNotBroadcasted)\n         self.nodes[1].generate(1) #mine a block, tx should not be in there\n         self.sync_all()\n-        assert_equal(self.nodes[2].getbalance(), Decimal('59.99800000')); #should not be changed because tx was not broadcasted\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal) #should not be changed because tx was not broadcasted\n \n         #now broadcast from another node, mine a block, sync, and check the balance\n         self.nodes[1].sendrawtransaction(txObjNotBroadcasted['hex'])\n         self.nodes[1].generate(1)\n         self.sync_all()\n+        node_2_bal += 2\n         txObjNotBroadcasted = self.nodes[0].gettransaction(txIdNotBroadcasted)\n-        assert_equal(self.nodes[2].getbalance(), Decimal('61.99800000')); #should not be\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n \n         #create another tx\n-        txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2);\n+        txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2)\n \n         #restart the nodes with -walletbroadcast=1\n         stop_nodes(self.nodes)\n@@ -214,23 +213,24 @@ def run_test (self):\n \n         self.nodes[0].generate(1)\n         sync_blocks(self.nodes)\n+        node_2_bal += 2\n \n         #tx should be added to balance because after restarting the nodes tx should be broadcastet\n-        assert_equal(self.nodes[2].getbalance(), Decimal('63.99800000')); #should not be\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n \n         #send a tx with value in a string (PR#6380 +)\n         txId  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), \"2\")\n         txObj = self.nodes[0].gettransaction(txId)\n-        assert_equal(txObj['amount'], Decimal('-2.00000000'))\n+        assert_equal(txObj['amount'], Decimal('-2'))\n \n         txId  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), \"0.0001\")\n         txObj = self.nodes[0].gettransaction(txId)\n-        assert_equal(txObj['amount'], Decimal('-0.00010000'))\n+        assert_equal(txObj['amount'], Decimal('-0.0001'))\n \n         #check if JSON parser can handle scientific notation in strings\n         txId  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), \"1e-4\")\n         txObj = self.nodes[0].gettransaction(txId)\n-        assert_equal(txObj['amount'], Decimal('-0.00010000'))\n+        assert_equal(txObj['amount'], Decimal('-0.0001'))\n \n         #this should fail\n         errorString = \"\"\n@@ -239,15 +239,39 @@ def run_test (self):\n         except JSONRPCException,e:\n             errorString = e.error['message']\n \n-        assert_equal(\"Invalid amount\" in errorString, True);\n+        assert_equal(\"Invalid amount\" in errorString, True)\n \n         errorString = \"\"\n         try:\n             self.nodes[0].generate(\"2\") #use a string to as block amount parameter must fail because it's not interpreted as amount\n         except JSONRPCException,e:\n             errorString = e.error['message']\n \n-        assert_equal(\"not an integer\" in errorString, True);\n+        assert_equal(\"not an integer\" in errorString, True)\n+\n+        #check if wallet or blochchain maintenance changes the balance\n+        self.sync_all()\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        balance_nodes = [self.nodes[i].getbalance() for i in range(3)]\n+\n+        maintenance = [\n+            '-rescan',\n+            '-reindex',\n+            '-zapwallettxes=1',\n+            '-zapwallettxes=2',\n+            '-salvagewallet',\n+        ]\n+        for m in maintenance:\n+            print \"check \" + m\n+            stop_nodes(self.nodes)\n+            wait_bitcoinds()\n+            self.nodes = start_nodes(3, self.options.tmpdir, [[m]] * 3)\n+            connect_nodes_bi(self.nodes,0,1)\n+            connect_nodes_bi(self.nodes,1,2)\n+            connect_nodes_bi(self.nodes,0,2)\n+            self.sync_all()\n+            assert_equal(balance_nodes, [self.nodes[i].getbalance() for i in range(3)])\n \n \n if __name__ == '__main__':"
      },
      {
        "sha": "1221a09116791061d07ce4bc8d0daa5e5086a72c",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "1ee0f79ac06baaef01fdda6c7f2eca3c4a6e2192",
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "88532541ab6a5379f08aa9d51d3e492d2e5ab460",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -11,7 +11,6 @@\n from test_framework.util import *\n import zmq\n import binascii\n-from test_framework.mininode import hash256\n \n try:\n     import http.client as httplib\n@@ -42,7 +41,7 @@ def setup_nodes(self):\n     def run_test(self):\n         self.sync_all()\n \n-        genhashes = self.nodes[0].generate(1);\n+        genhashes = self.nodes[0].generate(1)\n         self.sync_all()\n \n         print \"listen...\"\n@@ -58,7 +57,7 @@ def run_test(self):\n         assert_equal(genhashes[0], blkhash) #blockhash from generate must be equal to the hash received over zmq\n \n         n = 10\n-        genhashes = self.nodes[1].generate(n);\n+        genhashes = self.nodes[1].generate(n)\n         self.sync_all()\n \n         zmqHashes = []\n@@ -76,7 +75,7 @@ def run_test(self):\n         hashRPC = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n         self.sync_all()\n \n-        #now we should receive a zmq msg because the tx was broadcastet\n+        # now we should receive a zmq msg because the tx was broadcast\n         msg = self.zmqSubSocket.recv_multipart()\n         topic = str(msg[0])\n         body = msg[1]"
      },
      {
        "sha": "7c2c909a421c49cac93cfe80ad17cc72a1f6adc1",
        "filename": "share/rpcuser/README.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/share/rpcuser/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/share/rpcuser/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/README.md?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,11 @@\n+RPC Tools\n+---------------------\n+\n+### [RPCUser](/share/rpcuser) ###\n+\n+Create an RPC user login credential.\n+\n+Usage:\n+\n+./rpcuser.py <username>\n+"
      },
      {
        "sha": "9fd176908b788db7af316051664cf7d1d42f4f3e",
        "filename": "share/rpcuser/rpcuser.py",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python2 \n+# Copyright (c) 2015 The Bitcoin Core developers \n+# Distributed under the MIT software license, see the accompanying \n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import hashlib\n+import sys\n+import os\n+from random import SystemRandom\n+import base64\n+import hmac\n+\n+if len(sys.argv) < 2:\n+    sys.stderr.write('Please include username as an argument.\\n')\n+    sys.exit(0)\n+\n+username = sys.argv[1]\n+\n+#This uses os.urandom() underneath\n+cryptogen = SystemRandom()\n+\n+#Create 16 byte hex salt\n+salt_sequence = [cryptogen.randrange(256) for i in range(16)]\n+hexseq = list(map(hex, salt_sequence))\n+salt = \"\".join([x[2:] for x in hexseq])\n+\n+#Create 32 byte b64 password\n+password = base64.urlsafe_b64encode(os.urandom(32))\n+\n+digestmod = hashlib.sha256\n+\n+if sys.version_info.major >= 3:\n+    password = password.decode('utf-8')\n+    digestmod = 'SHA256'\n+ \n+m = hmac.new(bytearray(salt, 'utf-8'), bytearray(password, 'utf-8'), digestmod)\n+result = m.hexdigest()\n+\n+print(\"String to be appended to bitcoin.conf:\")\n+print(\"rpcauth=\"+username+\":\"+salt+\"$\"+result)\n+print(\"Your password:\\n\"+password)"
      },
      {
        "sha": "0b6578cf486ff745f1c2efa4bfcee00729b5cd1b",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 69,
        "deletions": 54,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -28,6 +28,7 @@ BITCOIN_INCLUDES += -I$(srcdir)/univalue/include\n LIBBITCOIN_SERVER=libbitcoin_server.a\n LIBBITCOIN_WALLET=libbitcoin_wallet.a\n LIBBITCOIN_COMMON=libbitcoin_common.a\n+LIBBITCOIN_CONSENSUS=libbitcoin_consensus.a\n LIBBITCOIN_CLI=libbitcoin_cli.a\n LIBBITCOIN_UTIL=libbitcoin_util.a\n LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n@@ -47,6 +48,7 @@ EXTRA_LIBRARIES = \\\n   crypto/libbitcoin_crypto.a \\\n   libbitcoin_util.a \\\n   libbitcoin_common.a \\\n+  libbitcoin_consensus.a \\\n   libbitcoin_server.a \\\n   libbitcoin_cli.a\n if ENABLE_WALLET\n@@ -59,9 +61,9 @@ endif\n \n if BUILD_BITCOIN_LIBS\n lib_LTLIBRARIES = libbitcoinconsensus.la\n-LIBBITCOIN_CONSENSUS=libbitcoinconsensus.la\n+LIBBITCOINCONSENSUS=libbitcoinconsensus.la\n else\n-LIBBITCOIN_CONSENSUS=\n+LIBBITCOINCONSENSUS=\n endif\n \n bin_PROGRAMS =\n@@ -76,13 +78,11 @@ if BUILD_BITCOIN_UTILS\n   bin_PROGRAMS += bitcoin-cli bitcoin-tx\n endif\n \n-.PHONY: FORCE\n+.PHONY: FORCE check-symbols check-security\n # bitcoin core #\n BITCOIN_CORE_H = \\\n   addrman.h \\\n   alert.h \\\n-  amount.h \\\n-  arith_uint256.h \\\n   base58.h \\\n   bloom.h \\\n   chain.h \\\n@@ -100,11 +100,8 @@ BITCOIN_CORE_H = \\\n   compat/sanity.h \\\n   compressor.h \\\n   consensus/consensus.h \\\n-  consensus/params.h \\\n-  consensus/validation.h \\\n   core_io.h \\\n   core_memusage.h \\\n-  hash.h \\\n   httprpc.h \\\n   httpserver.h \\\n   init.h \\\n@@ -116,30 +113,23 @@ BITCOIN_CORE_H = \\\n   memusage.h \\\n   merkleblock.h \\\n   miner.h \\\n-  mruset.h \\\n   net.h \\\n   netbase.h \\\n   noui.h \\\n   policy/fees.h \\\n   policy/policy.h \\\n+  policy/rbf.h \\\n   pow.h \\\n-  primitives/block.h \\\n-  primitives/transaction.h \\\n   protocol.h \\\n-  pubkey.h \\\n   random.h \\\n   reverselock.h \\\n-  rpcclient.h \\\n-  rpcprotocol.h \\\n-  rpcserver.h \\\n+  rpc/client.h \\\n+  rpc/protocol.h \\\n+  rpc/server.h \\\n   scheduler.h \\\n-  script/interpreter.h \\\n-  script/script.h \\\n-  script/script_error.h \\\n   script/sigcache.h \\\n   script/sign.h \\\n   script/standard.h \\\n-  serialize.h \\\n   streams.h \\\n   support/allocators/secure.h \\\n   support/allocators/zeroafterfree.h \\\n@@ -148,21 +138,18 @@ BITCOIN_CORE_H = \\\n   sync.h \\\n   threadsafety.h \\\n   timedata.h \\\n-  tinyformat.h \\\n   torcontrol.h \\\n   txdb.h \\\n   txmempool.h \\\n   ui_interface.h \\\n-  uint256.h \\\n   undo.h \\\n   util.h \\\n   utilmoneystr.h \\\n-  utilstrencodings.h \\\n   utiltime.h \\\n   validationinterface.h \\\n-  version.h \\\n   wallet/crypter.h \\\n   wallet/db.h \\\n+  wallet/rpcwallet.h \\\n   wallet/wallet.h \\\n   wallet/wallet_ismine.h \\\n   wallet/walletdb.h \\\n@@ -200,12 +187,12 @@ libbitcoin_server_a_SOURCES = \\\n   policy/policy.cpp \\\n   pow.cpp \\\n   rest.cpp \\\n-  rpcblockchain.cpp \\\n-  rpcmining.cpp \\\n-  rpcmisc.cpp \\\n-  rpcnet.cpp \\\n-  rpcrawtransaction.cpp \\\n-  rpcserver.cpp \\\n+  rpc/blockchain.cpp \\\n+  rpc/mining.cpp \\\n+  rpc/misc.cpp \\\n+  rpc/net.cpp \\\n+  rpc/rawtransaction.cpp \\\n+  rpc/server.cpp \\\n   script/sigcache.cpp \\\n   timedata.cpp \\\n   torcontrol.cpp \\\n@@ -238,6 +225,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/wallet.cpp \\\n   wallet/wallet_ismine.cpp \\\n   wallet/walletdb.cpp \\\n+  policy/rbf.cpp \\\n   $(BITCOIN_CORE_H)\n \n # crypto primitives library\n@@ -258,30 +246,57 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.cpp \\\n   crypto/sha512.h\n \n+# consensus: shared between all executables that validate any consensus rules.\n+libbitcoin_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libbitcoin_consensus_a_SOURCES = \\\n+  amount.h \\\n+  arith_uint256.cpp \\\n+  arith_uint256.h \\\n+  consensus/merkle.cpp \\\n+  consensus/merkle.h \\\n+  consensus/params.h \\\n+  consensus/validation.h \\\n+  hash.cpp \\\n+  hash.h \\\n+  prevector.h \\\n+  primitives/block.cpp \\\n+  primitives/block.h \\\n+  primitives/transaction.cpp \\\n+  primitives/transaction.h \\\n+  pubkey.cpp \\\n+  pubkey.h \\\n+  script/bitcoinconsensus.cpp \\\n+  script/interpreter.cpp \\\n+  script/interpreter.h \\\n+  script/script.cpp \\\n+  script/script.h \\\n+  script/script_error.cpp \\\n+  script/script_error.h \\\n+  serialize.h \\\n+  tinyformat.h \\\n+  uint256.cpp \\\n+  uint256.h \\\n+  utilstrencodings.cpp \\\n+  utilstrencodings.h \\\n+  version.h\n+\n # common: shared between bitcoind, and bitcoin-qt and non-server tools\n libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_common_a_SOURCES = \\\n   amount.cpp \\\n-  arith_uint256.cpp \\\n   base58.cpp \\\n   chainparams.cpp \\\n   coins.cpp \\\n   compressor.cpp \\\n   core_read.cpp \\\n   core_write.cpp \\\n-  hash.cpp \\\n   key.cpp \\\n   keystore.cpp \\\n   netbase.cpp \\\n-  primitives/block.cpp \\\n-  primitives/transaction.cpp \\\n   protocol.cpp \\\n-  pubkey.cpp \\\n   scheduler.cpp \\\n-  script/interpreter.cpp \\\n-  script/script.cpp \\\n-  script/script_error.cpp \\\n   script/sign.cpp \\\n   script/standard.cpp \\\n   $(BITCOIN_CORE_H)\n@@ -299,10 +314,9 @@ libbitcoin_util_a_SOURCES = \\\n   compat/glibcxx_sanity.cpp \\\n   compat/strnlen.cpp \\\n   random.cpp \\\n-  rpcprotocol.cpp \\\n+  rpc/protocol.cpp \\\n   support/cleanse.cpp \\\n   sync.cpp \\\n-  uint256.cpp \\\n   util.cpp \\\n   utilmoneystr.cpp \\\n   utilstrencodings.cpp \\\n@@ -317,7 +331,7 @@ endif\n libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_cli_a_SOURCES = \\\n-  rpcclient.cpp \\\n+  rpc/client.cpp \\\n   $(BITCOIN_CORE_H)\n \n nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n@@ -338,6 +352,7 @@ bitcoind_LDADD = \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV) \\\n@@ -385,6 +400,7 @@ bitcoin_tx_LDADD = \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n@@ -394,20 +410,7 @@ bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n # bitcoinconsensus library #\n if BUILD_BITCOIN_LIBS\n include_HEADERS = script/bitcoinconsensus.h\n-libbitcoinconsensus_la_SOURCES = \\\n-  crypto/hmac_sha512.cpp \\\n-  crypto/ripemd160.cpp \\\n-  crypto/sha1.cpp \\\n-  crypto/sha256.cpp \\\n-  crypto/sha512.cpp \\\n-  hash.cpp \\\n-  primitives/transaction.cpp \\\n-  pubkey.cpp \\\n-  script/bitcoinconsensus.cpp \\\n-  script/interpreter.cpp \\\n-  script/script.cpp \\\n-  uint256.cpp \\\n-  utilstrencodings.cpp\n+libbitcoinconsensus_la_SOURCES = $(crypto_libbitcoin_crypto_a_SOURCES) $(libbitcoin_consensus_a_SOURCES)\n \n if GLIBC_BACK_COMPAT\n   libbitcoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n@@ -455,6 +458,18 @@ clean-local:\n \t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n \t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) -c -o $@ $<\n \n+check-symbols: $(bin_PROGRAMS)\n+if GLIBC_BACK_COMPAT\n+\t@echo \"Checking glibc back compat...\"\n+\t$(AM_V_at) READELF=$(READELF) CPPFILT=$(CPPFILT) $(top_srcdir)/contrib/devtools/symbol-check.py < $(bin_PROGRAMS)\n+endif\n+\n+check-security: $(bin_PROGRAMS)\n+if HARDEN\n+\t@echo \"Checking binary security...\"\n+\t$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) $(top_srcdir)/contrib/devtools/security-check.py < $(bin_PROGRAMS)\n+endif\n+\n %.pb.cc %.pb.h: %.proto\n \t@test -f $(PROTOC)\n \t$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)"
      },
      {
        "sha": "d3cecb6b430c4e326cfd4698c69c52195b4e5f9e",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -16,6 +16,7 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UNIVALUE) \\\n   $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV) \\"
      },
      {
        "sha": "ca4e1e70d085eb09ab21bbdb036cca1f9f9b107f",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -3,37 +3,41 @@ EXTRA_LIBRARIES += qt/libbitcoinqt.a\n \n # bitcoin qt core #\n QT_TS = \\\n-  qt/locale/bitcoin_ach.ts \\\n   qt/locale/bitcoin_af_ZA.ts \\\n   qt/locale/bitcoin_ar.ts \\\n   qt/locale/bitcoin_be_BY.ts \\\n+  qt/locale/bitcoin_bg_BG.ts \\\n   qt/locale/bitcoin_bg.ts \\\n   qt/locale/bitcoin_bs.ts \\\n   qt/locale/bitcoin_ca_ES.ts \\\n   qt/locale/bitcoin_ca.ts \\\n   qt/locale/bitcoin_ca@valencia.ts \\\n-  qt/locale/bitcoin_cmn.ts \\\n+  qt/locale/bitcoin_cs_CZ.ts \\\n   qt/locale/bitcoin_cs.ts \\\n   qt/locale/bitcoin_cy.ts \\\n   qt/locale/bitcoin_da.ts \\\n   qt/locale/bitcoin_de.ts \\\n   qt/locale/bitcoin_el_GR.ts \\\n+  qt/locale/bitcoin_el.ts \\\n+  qt/locale/bitcoin_en_GB.ts \\\n   qt/locale/bitcoin_en.ts \\\n   qt/locale/bitcoin_eo.ts \\\n   qt/locale/bitcoin_es_CL.ts \\\n   qt/locale/bitcoin_es_DO.ts \\\n+  qt/locale/bitcoin_es_ES.ts \\\n   qt/locale/bitcoin_es_MX.ts \\\n   qt/locale/bitcoin_es.ts \\\n   qt/locale/bitcoin_es_UY.ts \\\n+  qt/locale/bitcoin_es_VE.ts \\\n   qt/locale/bitcoin_et.ts \\\n   qt/locale/bitcoin_eu_ES.ts \\\n   qt/locale/bitcoin_fa_IR.ts \\\n   qt/locale/bitcoin_fa.ts \\\n   qt/locale/bitcoin_fi.ts \\\n   qt/locale/bitcoin_fr_CA.ts \\\n+  qt/locale/bitcoin_fr_FR.ts \\\n   qt/locale/bitcoin_fr.ts \\\n   qt/locale/bitcoin_gl.ts \\\n-  qt/locale/bitcoin_gu_IN.ts \\\n   qt/locale/bitcoin_he.ts \\\n   qt/locale/bitcoin_hi_IN.ts \\\n   qt/locale/bitcoin_hr.ts \\\n@@ -48,6 +52,7 @@ QT_TS = \\\n   qt/locale/bitcoin_la.ts \\\n   qt/locale/bitcoin_lt.ts \\\n   qt/locale/bitcoin_lv_LV.ts \\\n+  qt/locale/bitcoin_mk_MK.ts \\\n   qt/locale/bitcoin_mn.ts \\\n   qt/locale/bitcoin_ms_MY.ts \\\n   qt/locale/bitcoin_nb.ts \\\n@@ -57,22 +62,23 @@ QT_TS = \\\n   qt/locale/bitcoin_pt_BR.ts \\\n   qt/locale/bitcoin_pt_PT.ts \\\n   qt/locale/bitcoin_ro_RO.ts \\\n+  qt/locale/bitcoin_ru_RU.ts \\\n   qt/locale/bitcoin_ru.ts \\\n-  qt/locale/bitcoin_sah.ts \\\n   qt/locale/bitcoin_sk.ts \\\n   qt/locale/bitcoin_sl_SI.ts \\\n   qt/locale/bitcoin_sq.ts \\\n   qt/locale/bitcoin_sr.ts \\\n   qt/locale/bitcoin_sv.ts \\\n   qt/locale/bitcoin_th_TH.ts \\\n+  qt/locale/bitcoin_tr_TR.ts \\\n   qt/locale/bitcoin_tr.ts \\\n   qt/locale/bitcoin_uk.ts \\\n   qt/locale/bitcoin_ur_PK.ts \\\n   qt/locale/bitcoin_uz@Cyrl.ts \\\n   qt/locale/bitcoin_vi.ts \\\n   qt/locale/bitcoin_vi_VN.ts \\\n   qt/locale/bitcoin_zh_CN.ts \\\n-  qt/locale/bitcoin_zh_HK.ts \\\n+  qt/locale/bitcoin_zh.ts \\\n   qt/locale/bitcoin_zh_TW.ts\n \n QT_FORMS_UI = \\\n@@ -219,6 +225,7 @@ RES_ICONS = \\\n   qt/res/icons/about_qt.png \\\n   qt/res/icons/bitcoin.ico \\\n   qt/res/icons/bitcoin.png \\\n+  qt/res/icons/chevron.png \\\n   qt/res/icons/clock1.png \\\n   qt/res/icons/clock2.png \\\n   qt/res/icons/clock3.png \\\n@@ -239,6 +246,8 @@ RES_ICONS = \\\n   qt/res/icons/eye_minus.png \\\n   qt/res/icons/eye_plus.png \\\n   qt/res/icons/filesave.png \\\n+  qt/res/icons/fontbigger.png \\\n+  qt/res/icons/fontsmaller.png \\\n   qt/res/icons/history.png \\\n   qt/res/icons/info.png \\\n   qt/res/icons/key.png \\\n@@ -369,7 +378,7 @@ endif\n if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)"
      },
      {
        "sha": "813a343ffa395ae63456deb5a476ce23ad4c5a76",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -33,7 +33,7 @@ endif\n if ENABLE_ZMQ\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)"
      },
      {
        "sha": "b22b8b8b963b353a6a5dc6d7f19d71ce26db29fb",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -35,7 +35,7 @@ GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.r\n \n BITCOIN_TESTS =\\\n   test/arith_uint256_tests.cpp \\\n-  test/bignum.h \\\n+  test/scriptnum10.h \\\n   test/addrman_tests.cpp \\\n   test/alert_tests.cpp \\\n   test/allocator_tests.cpp \\\n@@ -57,13 +57,14 @@ BITCOIN_TESTS =\\\n   test/dbwrapper_tests.cpp \\\n   test/main_tests.cpp \\\n   test/mempool_tests.cpp \\\n+  test/merkle_tests.cpp \\\n   test/miner_tests.cpp \\\n-  test/mruset_tests.cpp \\\n   test/multisig_tests.cpp \\\n   test/netbase_tests.cpp \\\n   test/pmt_tests.cpp \\\n   test/policyestimator_tests.cpp \\\n   test/pow_tests.cpp \\\n+  test/prevector_tests.cpp \\\n   test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\\n@@ -94,7 +95,7 @@ endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET"
      },
      {
        "sha": "6c54cfa4cd2fdf208293eef0a31f3ebf1109c41b",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 10,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2012 Pieter Wuille\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -220,7 +221,7 @@ void CAddrMan::Good_(const CService& addr, int64_t nTime)\n         return;\n \n     // find a bucket it is in now\n-    int nRnd = GetRandInt(ADDRMAN_NEW_BUCKET_COUNT);\n+    int nRnd = RandomInt(ADDRMAN_NEW_BUCKET_COUNT);\n     int nUBucket = -1;\n     for (unsigned int n = 0; n < ADDRMAN_NEW_BUCKET_COUNT; n++) {\n         int nB = (n + nRnd) % ADDRMAN_NEW_BUCKET_COUNT;\n@@ -277,7 +278,7 @@ bool CAddrMan::Add_(const CAddress& addr, const CNetAddr& source, int64_t nTimeP\n         int nFactor = 1;\n         for (int n = 0; n < pinfo->nRefCount; n++)\n             nFactor *= 2;\n-        if (nFactor > 1 && (GetRandInt(nFactor) != 0))\n+        if (nFactor > 1 && (RandomInt(nFactor) != 0))\n             return false;\n     } else {\n         pinfo = Create(addr, source, &nId);\n@@ -339,37 +340,37 @@ CAddrInfo CAddrMan::Select_(bool newOnly)\n \n     // Use a 50% chance for choosing between tried and new table entries.\n     if (!newOnly &&\n-       (nTried > 0 && (nNew == 0 || GetRandInt(2) == 0))) { \n+       (nTried > 0 && (nNew == 0 || RandomInt(2) == 0))) { \n         // use a tried node\n         double fChanceFactor = 1.0;\n         while (1) {\n-            int nKBucket = GetRandInt(ADDRMAN_TRIED_BUCKET_COUNT);\n-            int nKBucketPos = GetRandInt(ADDRMAN_BUCKET_SIZE);\n+            int nKBucket = RandomInt(ADDRMAN_TRIED_BUCKET_COUNT);\n+            int nKBucketPos = RandomInt(ADDRMAN_BUCKET_SIZE);\n             while (vvTried[nKBucket][nKBucketPos] == -1) {\n                 nKBucket = (nKBucket + insecure_rand()) % ADDRMAN_TRIED_BUCKET_COUNT;\n                 nKBucketPos = (nKBucketPos + insecure_rand()) % ADDRMAN_BUCKET_SIZE;\n             }\n             int nId = vvTried[nKBucket][nKBucketPos];\n             assert(mapInfo.count(nId) == 1);\n             CAddrInfo& info = mapInfo[nId];\n-            if (GetRandInt(1 << 30) < fChanceFactor * info.GetChance() * (1 << 30))\n+            if (RandomInt(1 << 30) < fChanceFactor * info.GetChance() * (1 << 30))\n                 return info;\n             fChanceFactor *= 1.2;\n         }\n     } else {\n         // use a new node\n         double fChanceFactor = 1.0;\n         while (1) {\n-            int nUBucket = GetRandInt(ADDRMAN_NEW_BUCKET_COUNT);\n-            int nUBucketPos = GetRandInt(ADDRMAN_BUCKET_SIZE);\n+            int nUBucket = RandomInt(ADDRMAN_NEW_BUCKET_COUNT);\n+            int nUBucketPos = RandomInt(ADDRMAN_BUCKET_SIZE);\n             while (vvNew[nUBucket][nUBucketPos] == -1) {\n                 nUBucket = (nUBucket + insecure_rand()) % ADDRMAN_NEW_BUCKET_COUNT;\n                 nUBucketPos = (nUBucketPos + insecure_rand()) % ADDRMAN_BUCKET_SIZE;\n             }\n             int nId = vvNew[nUBucket][nUBucketPos];\n             assert(mapInfo.count(nId) == 1);\n             CAddrInfo& info = mapInfo[nId];\n-            if (GetRandInt(1 << 30) < fChanceFactor * info.GetChance() * (1 << 30))\n+            if (RandomInt(1 << 30) < fChanceFactor * info.GetChance() * (1 << 30))\n                 return info;\n             fChanceFactor *= 1.2;\n         }\n@@ -465,7 +466,7 @@ void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr)\n         if (vAddr.size() >= nNodes)\n             break;\n \n-        int nRndPos = GetRandInt(vRandom.size() - n) + n;\n+        int nRndPos = RandomInt(vRandom.size() - n) + n;\n         SwapRandom(n, nRndPos);\n         assert(mapInfo.count(vRandom[n]) == 1);\n \n@@ -494,3 +495,7 @@ void CAddrMan::Connected_(const CService& addr, int64_t nTime)\n     if (nTime - info.nTime > nUpdateInterval)\n         info.nTime = nTime;\n }\n+\n+int CAddrMan::RandomInt(int nMax){\n+    return GetRandInt(nMax);\n+}"
      },
      {
        "sha": "4f3de8d7c5e6338f74e3f8d7ed3f976b60240eea",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2012 Pieter Wuille\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -175,9 +176,6 @@ class CAddrMan\n     //! critical section to protect the inner data structures\n     mutable CCriticalSection cs;\n \n-    //! secret key to randomize bucket select with\n-    uint256 nKey;\n-\n     //! last used nId\n     int nIdCount;\n \n@@ -203,6 +201,8 @@ class CAddrMan\n     int vvNew[ADDRMAN_NEW_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE];\n \n protected:\n+    //! secret key to randomize bucket select with\n+    uint256 nKey;\n \n     //! Find an entry.\n     CAddrInfo* Find(const CNetAddr& addr, int *pnId = NULL);\n@@ -235,6 +235,9 @@ class CAddrMan\n     //! Select an address to connect to, if newOnly is set to true, only the new table is selected from.\n     CAddrInfo Select_(bool newOnly);\n \n+    //! Wraps GetRandInt to allow tests to override RandomInt and make it determinismistic.\n+    virtual int RandomInt(int nMax);\n+\n #ifdef DEBUG_ADDRMAN\n     //! Perform consistency check. Returns an error code or zero.\n     int Check_();\n@@ -569,11 +572,6 @@ class CAddrMan\n             Check();\n         }\n     }\n-    \n-    //! Ensure that bucket placement is always the same for testing purposes.\n-    void MakeDeterministic(){\n-        nKey.SetNull(); //Do not use outside of tests.\n-    }\n \n };\n "
      },
      {
        "sha": "eb1cd5e7f6ebe8c1c74165e44bfdcb73a7cb083b",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -138,7 +138,7 @@ bool CAlert::RelayTo(CNode* pnode) const\n             AppliesToMe() ||\n             GetAdjustedTime() < nRelayUntil)\n         {\n-            pnode->PushMessage(\"alert\", *this);\n+            pnode->PushMessage(NetMsgType::ALERT, *this);\n             return true;\n         }\n     }"
      },
      {
        "sha": "8cb86e338c5d2846fd9369b3b33f32611d256a78",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a3abd8cd835fb7a3ff156f240d720cfb4a86ac17",
        "filename": "src/amount.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/amount.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/amount.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a48b17d514277893ae20dd6fe19778d1319f3d06",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -30,7 +30,7 @@ extern const std::string CURRENCY_UNIT;\n static const CAmount MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n-/** Type-safe wrapper class to for fee rates\n+/** Type-safe wrapper class for fee rates\n  * (how much to pay based on transaction size)\n  */\n class CFeeRate"
      },
      {
        "sha": "ba3d620158d47d739cdb43934d148e49bed7f151",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin developers\n+// Copyright (c) 2009-2015 The Bitcoin developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5e26cf8d4738f480c2b42075743eb974a0860622",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2014 The Bitcoin Core developers\n+// Copyright (c) 2014-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a3980118aae344c6cc64fc7ab6e4fb39859c0ec5",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "34980d9ca19797b690dfca6429cd9dc97e474ca3",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,8 +9,8 @@\n \n #include \"chainparamsbase.h\"\n #include \"clientversion.h\"\n-#include \"rpcclient.h\"\n-#include \"rpcprotocol.h\"\n+#include \"rpc/client.h\"\n+#include \"rpc/protocol.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n@@ -26,18 +26,19 @@\n \n using namespace std;\n \n+static const char DEFAULT_RPCCONNECT[] = \"127.0.0.1\";\n static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n \n std::string HelpMessageCli()\n {\n     string strUsage;\n     strUsage += HelpMessageGroup(_(\"Options:\"));\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n-    strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n+    strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n     AppendParamsHelpMessages(strUsage);\n-    strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), \"127.0.0.1\"));\n-    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\"), 8332, 18332));\n+    strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), DEFAULT_RPCCONNECT));\n+    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\"), BaseParams(CBaseChainParams::MAIN).RPCPort(), BaseParams(CBaseChainParams::TESTNET).RPCPort()));\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n@@ -145,7 +146,7 @@ static void http_request_done(struct evhttp_request *req, void *ctx)\n \n UniValue CallRPC(const string& strMethod, const UniValue& params)\n {\n-    std::string host = GetArg(\"-rpcconnect\", \"127.0.0.1\");\n+    std::string host = GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT);\n     int port = GetArg(\"-rpcport\", BaseParams().RPCPort());\n \n     // Create event base"
      },
      {
        "sha": "95d7a085a0a3d4f7fde4744b544c8065e1d8a4af",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "28bc374acc76e09fd8024684fa9ad54864987c48",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,14 +9,13 @@\n \n #include \"chainparams.h\"\n #include \"clientversion.h\"\n-#include \"rpcserver.h\"\n+#include \"rpc/server.h\"\n #include \"init.h\"\n #include \"noui.h\"\n #include \"scheduler.h\"\n #include \"util.h\"\n #include \"httpserver.h\"\n #include \"httprpc.h\"\n-#include \"rpcserver.h\"\n #include \"utilstrencodings.h\"\n \n #include <boost/algorithm/string/predicate.hpp>\n@@ -156,6 +155,9 @@ bool AppInit(int argc, char* argv[])\n #endif\n         SoftSetBoolArg(\"-server\", true);\n \n+        // Set this early so that parameter interactions go to console\n+        InitLogging();\n+        InitParameterInteraction();\n         fRet = AppInit2(threadGroup, scheduler);\n     }\n     catch (const std::exception& e) {"
      },
      {
        "sha": "4e6f0e5d2ddaa4dfadf7bb19dbf7aa9fcf99e8c5",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 25,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -216,30 +216,54 @@ void CBloomFilter::UpdateEmptyFull()\n     isEmpty = empty;\n }\n \n-CRollingBloomFilter::CRollingBloomFilter(unsigned int nElements, double fpRate) :\n-    b1(nElements * 2, fpRate, 0), b2(nElements * 2, fpRate, 0)\n+CRollingBloomFilter::CRollingBloomFilter(unsigned int nElements, double fpRate)\n {\n-    // Implemented using two bloom filters of 2 * nElements each.\n-    // We fill them up, and clear them, staggered, every nElements\n-    // inserted, so at least one always contains the last nElements\n-    // inserted.\n-    nInsertions = 0;\n-    nBloomSize = nElements * 2;\n-\n+    double logFpRate = log(fpRate);\n+    /* The optimal number of hash functions is log(fpRate) / log(0.5), but\n+     * restrict it to the range 1-50. */\n+    nHashFuncs = std::max(1, std::min((int)round(logFpRate / log(0.5)), 50));\n+    /* In this rolling bloom filter, we'll store between 2 and 3 generations of nElements / 2 entries. */\n+    nEntriesPerGeneration = (nElements + 1) / 2;\n+    uint32_t nMaxElements = nEntriesPerGeneration * 3;\n+    /* The maximum fpRate = pow(1.0 - exp(-nHashFuncs * nMaxElements / nFilterBits), nHashFuncs)\n+     * =>          pow(fpRate, 1.0 / nHashFuncs) = 1.0 - exp(-nHashFuncs * nMaxElements / nFilterBits)\n+     * =>          1.0 - pow(fpRate, 1.0 / nHashFuncs) = exp(-nHashFuncs * nMaxElements / nFilterBits)\n+     * =>          log(1.0 - pow(fpRate, 1.0 / nHashFuncs)) = -nHashFuncs * nMaxElements / nFilterBits\n+     * =>          nFilterBits = -nHashFuncs * nMaxElements / log(1.0 - pow(fpRate, 1.0 / nHashFuncs))\n+     * =>          nFilterBits = -nHashFuncs * nMaxElements / log(1.0 - exp(logFpRate / nHashFuncs))\n+     */\n+    uint32_t nFilterBits = (uint32_t)ceil(-1.0 * nHashFuncs * nMaxElements / log(1.0 - exp(logFpRate / nHashFuncs)));\n+    data.clear();\n+    /* We store up to 16 'bits' per data element. */\n+    data.resize((nFilterBits + 15) / 16);\n     reset();\n }\n \n+/* Similar to CBloomFilter::Hash */\n+inline unsigned int CRollingBloomFilter::Hash(unsigned int nHashNum, const std::vector<unsigned char>& vDataToHash) const {\n+    return MurmurHash3(nHashNum * 0xFBA4C795 + nTweak, vDataToHash) % (data.size() * 16);\n+}\n+\n void CRollingBloomFilter::insert(const std::vector<unsigned char>& vKey)\n {\n-    if (nInsertions == 0) {\n-        b1.clear();\n-    } else if (nInsertions == nBloomSize / 2) {\n-        b2.clear();\n+    if (nEntriesThisGeneration == nEntriesPerGeneration) {\n+        nEntriesThisGeneration = 0;\n+        nGeneration++;\n+        if (nGeneration == 4) {\n+            nGeneration = 1;\n+        }\n+        /* Wipe old entries that used this generation number. */\n+        for (uint32_t p = 0; p < data.size() * 16; p++) {\n+            if (get(p) == nGeneration) {\n+                put(p, 0);\n+            }\n+        }\n     }\n-    b1.insert(vKey);\n-    b2.insert(vKey);\n-    if (++nInsertions == nBloomSize) {\n-        nInsertions = 0;\n+    nEntriesThisGeneration++;\n+\n+    for (int n = 0; n < nHashFuncs; n++) {\n+        uint32_t h = Hash(n, vKey);\n+        put(h, nGeneration);\n     }\n }\n \n@@ -251,10 +275,13 @@ void CRollingBloomFilter::insert(const uint256& hash)\n \n bool CRollingBloomFilter::contains(const std::vector<unsigned char>& vKey) const\n {\n-    if (nInsertions < nBloomSize / 2) {\n-        return b2.contains(vKey);\n+    for (int n = 0; n < nHashFuncs; n++) {\n+        uint32_t h = Hash(n, vKey);\n+        if (get(h) == 0) {\n+            return false;\n+        }\n     }\n-    return b1.contains(vKey);\n+    return true;\n }\n \n bool CRollingBloomFilter::contains(const uint256& hash) const\n@@ -265,8 +292,10 @@ bool CRollingBloomFilter::contains(const uint256& hash) const\n \n void CRollingBloomFilter::reset()\n {\n-    unsigned int nNewTweak = GetRand(std::numeric_limits<unsigned int>::max());\n-    b1.reset(nNewTweak);\n-    b2.reset(nNewTweak);\n-    nInsertions = 0;\n+    nTweak = GetRand(std::numeric_limits<unsigned int>::max());\n+    nEntriesThisGeneration = 0;\n+    nGeneration = 1;\n+    for (std::vector<uint32_t>::iterator it = data.begin(); it != data.end(); it++) {\n+        *it = 0;\n+    }\n }"
      },
      {
        "sha": "b0ad8b875d04b8656fcb8f3c910ae294f7b94b6d",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 22,
        "deletions": 6,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -110,8 +110,11 @@ class CBloomFilter\n  * reset() is provided, which also changes nTweak to decrease the impact of\n  * false-positives.\n  *\n- * contains(item) will always return true if item was one of the last N things\n+ * contains(item) will always return true if item was one of the last N to 1.5*N\n  * insert()'ed ... but may also return true for items that were not inserted.\n+ *\n+ * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n+ * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n  */\n class CRollingBloomFilter\n {\n@@ -129,10 +132,23 @@ class CRollingBloomFilter\n     void reset();\n \n private:\n-    unsigned int nBloomSize;\n-    unsigned int nInsertions;\n-    CBloomFilter b1, b2;\n-};\n+    int nEntriesPerGeneration;\n+    int nEntriesThisGeneration;\n+    int nGeneration;\n+    std::vector<uint32_t> data;\n+    unsigned int nTweak;\n+    int nHashFuncs;\n+\n+    unsigned int Hash(unsigned int nHashNum, const std::vector<unsigned char>& vDataToHash) const;\n \n+    inline int get(uint32_t position) const {\n+        return (data[(position >> 4) % data.size()] >> (2 * (position & 0xF))) & 0x3;\n+    }\n+\n+    inline void put(uint32_t position, uint32_t val) {\n+        uint32_t& cell = data[(position >> 4) % data.size()];\n+        cell = (cell & ~(((uint32_t)3) << (2 * (position & 0xF)))) | (val << (2 * (position & 0xF)));\n+    }\n+};\n \n #endif // BITCOIN_BLOOM_H"
      },
      {
        "sha": "32f6480f849dacc077dedc3be9d30f89276da138",
        "filename": "src/chain.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -51,6 +51,9 @@ CBlockLocator CChain::GetLocator(const CBlockIndex *pindex) const {\n }\n \n const CBlockIndex *CChain::FindFork(const CBlockIndex *pindex) const {\n+    if (pindex == NULL) {\n+        return NULL;\n+    }\n     if (pindex->nHeight > Height())\n         pindex = pindex->GetAncestor(Height());\n     while (pindex && !Contains(pindex))\n@@ -107,3 +110,35 @@ void CBlockIndex::BuildSkip()\n     if (pprev)\n         pskip = pprev->GetAncestor(GetSkipHeight(nHeight));\n }\n+\n+arith_uint256 GetBlockProof(const CBlockIndex& block)\n+{\n+    arith_uint256 bnTarget;\n+    bool fNegative;\n+    bool fOverflow;\n+    bnTarget.SetCompact(block.nBits, &fNegative, &fOverflow);\n+    if (fNegative || fOverflow || bnTarget == 0)\n+        return 0;\n+    // We need to compute 2**256 / (bnTarget+1), but we can't represent 2**256\n+    // as it's too large for a arith_uint256. However, as 2**256 is at least as large\n+    // as bnTarget+1, it is equal to ((2**256 - bnTarget - 1) / (bnTarget+1)) + 1,\n+    // or ~bnTarget / (nTarget+1) + 1.\n+    return (~bnTarget / (bnTarget + 1)) + 1;\n+}\n+\n+int64_t GetBlockProofEquivalentTime(const CBlockIndex& to, const CBlockIndex& from, const CBlockIndex& tip, const Consensus::Params& params)\n+{\n+    arith_uint256 r;\n+    int sign = 1;\n+    if (to.nChainWork > from.nChainWork) {\n+        r = to.nChainWork - from.nChainWork;\n+    } else {\n+        r = from.nChainWork - to.nChainWork;\n+        sign = -1;\n+    }\n+    r = r * arith_uint256(params.nPowTargetSpacing) / GetBlockProof(tip);\n+    if (r.bits() > 63) {\n+        return sign * std::numeric_limits<int64_t>::max();\n+    }\n+    return sign * r.GetLow64();\n+}"
      },
      {
        "sha": "9199983565ca724c5d3255f4d573e28165aeb551",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -282,6 +282,10 @@ class CBlockIndex\n     const CBlockIndex* GetAncestor(int height) const;\n };\n \n+arith_uint256 GetBlockProof(const CBlockIndex& block);\n+/** Return the time it would take to redo the work difference between from and to, assuming the current hashrate corresponds to the difficulty at tip, in seconds. */\n+int64_t GetBlockProofEquivalentTime(const CBlockIndex& to, const CBlockIndex& from, const CBlockIndex& tip, const Consensus::Params&);\n+\n /** Used to marshal pointers into hashes for db storage. */\n class CDiskBlockIndex : public CBlockIndex\n {"
      },
      {
        "sha": "b962f6ac0a053b359da052add643f697e016828c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,9 +1,10 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"chainparams.h\"\n+#include \"consensus/merkle.h\"\n \n #include \"tinyformat.h\"\n #include \"util.h\"\n@@ -32,7 +33,7 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     genesis.nVersion = nVersion;\n     genesis.vtx.push_back(txNew);\n     genesis.hashPrevBlock.SetNull();\n-    genesis.hashMerkleRoot = genesis.ComputeMerkleRoot();\n+    genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n     return genesis;\n }\n \n@@ -91,7 +92,6 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd9;\n         vAlertPubKey = ParseHex(\"04fc9702847840aaf195de8442ebecedf5b095cdbb9bc716bda9110971b28a49e0ead8564ff0db22209e0374782c093bb899692d524e9d6a6956e7c5ecbcd68284\");\n         nDefaultPort = 8333;\n-        nMaxTipAge = 24 * 60 * 60;\n         nPruneAfterHeight = 100000;\n \n         genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n@@ -168,7 +168,6 @@ class CTestNetParams : public CChainParams {\n         pchMessageStart[3] = 0x07;\n         vAlertPubKey = ParseHex(\"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\");\n         nDefaultPort = 18333;\n-        nMaxTipAge = 0x7fffffff;\n         nPruneAfterHeight = 1000;\n \n         genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n@@ -178,7 +177,6 @@ class CTestNetParams : public CChainParams {\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n-        vSeeds.push_back(CDNSSeedData(\"alexykot.me\", \"testnet-seed.alexykot.me\"));\n         vSeeds.push_back(CDNSSeedData(\"bitcoin.petertodd.org\", \"testnet-seed.bitcoin.petertodd.org\"));\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"testnet-seed.bluematt.me\"));\n         vSeeds.push_back(CDNSSeedData(\"bitcoin.schildbach.de\", \"testnet-seed.bitcoin.schildbach.de\"));\n@@ -232,7 +230,6 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n-        nMaxTipAge = 24 * 60 * 60;\n         nDefaultPort = 18444;\n         nPruneAfterHeight = 1000;\n "
      },
      {
        "sha": "88bc666765d809fc7b495dcb5b6e2c73c2e610e1",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -64,8 +64,7 @@ class CChainParams\n     bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n     /** Policy: Filter transactions that do not match well-defined patterns */\n     bool RequireStandard() const { return fRequireStandard; }\n-    int64_t MaxTipAge() const { return nMaxTipAge; }\n-    int64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n+    uint64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n     /** Make miner stop after a block is found. In RPC, don't return until nGenProcLimit blocks are generated */\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     /** In the future use NetworkIDString() for RPC fields */\n@@ -84,7 +83,6 @@ class CChainParams\n     //! Raw pub key bytes for the broadcast alert signing key.\n     std::vector<unsigned char> vAlertPubKey;\n     int nDefaultPort;\n-    long nMaxTipAge;\n     uint64_t nPruneAfterHeight;\n     std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];"
      },
      {
        "sha": "cb71a8b550c7582fd87052d2c1e0576f36f9d3d1",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 18,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -65,19 +65,6 @@ class CBaseRegTestParams : public CBaseChainParams\n };\n static CBaseRegTestParams regTestParams;\n \n-/*\n- * Unit test\n- */\n-class CBaseUnitTestParams : public CBaseMainParams\n-{\n-public:\n-    CBaseUnitTestParams()\n-    {\n-        strDataDir = \"unittest\";\n-    }\n-};\n-static CBaseUnitTestParams unitTestParams;\n-\n static CBaseChainParams* pCurrentBaseParams = 0;\n \n const CBaseChainParams& BaseParams()\n@@ -86,18 +73,23 @@ const CBaseChainParams& BaseParams()\n     return *pCurrentBaseParams;\n }\n \n-void SelectBaseParams(const std::string& chain)\n+CBaseChainParams& BaseParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n-        pCurrentBaseParams = &mainParams;\n+        return mainParams;\n     else if (chain == CBaseChainParams::TESTNET)\n-        pCurrentBaseParams = &testNetParams;\n+        return testNetParams;\n     else if (chain == CBaseChainParams::REGTEST)\n-        pCurrentBaseParams = &regTestParams;\n+        return regTestParams;\n     else\n         throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n+void SelectBaseParams(const std::string& chain)\n+{\n+    pCurrentBaseParams = &BaseParams(chain);\n+}\n+\n std::string ChainNameFromCommandLine()\n {\n     bool fRegTest = GetBoolArg(\"-regtest\", false);"
      },
      {
        "sha": "59493afb9b65e9b461afb825c16f09b2cd4e25b4",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2014 The Bitcoin Core developers\n+// Copyright (c) 2014-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -42,6 +42,8 @@ void AppendParamsHelpMessages(std::string& strUsage, bool debugHelp=true);\n  */\n const CBaseChainParams& BaseParams();\n \n+CBaseChainParams& BaseParams(const std::string& chain);\n+\n /** Sets the params returned by Params() to those for the given network. */\n void SelectBaseParams(const std::string& chain);\n "
      },
      {
        "sha": "1406e86805d67a94fecc313c48c3c12ef95fac77",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 747,
        "deletions": 689,
        "changes": 1436,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "aefddce464152676175e00535665540560088146",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "cd25ea5379dbd34b2164164375ac09b4ef7a8efb",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "32e25d5c8c6b7009a13e3f944e0ebab52e9f99fb",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "6f255d69c96efff62f1bb686ff458e0a4a0dfe2f",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -15,7 +15,7 @@\n \n //! These need to be macros, as clientversion.cpp's and bitcoin*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR 0\n-#define CLIENT_VERSION_MINOR 11\n+#define CLIENT_VERSION_MINOR 12\n #define CLIENT_VERSION_REVISION 99\n #define CLIENT_VERSION_BUILD 0\n \n@@ -26,7 +26,7 @@\n  * Copyright year (2009-this)\n  * Todo: update this when changing our copyright comments in the source\n  */\n-#define COPYRIGHT_YEAR 2015\n+#define COPYRIGHT_YEAR 2016\n \n #endif //HAVE_CONFIG_H\n "
      },
      {
        "sha": "9626ad2c5b774035753f8214e234ff7617c9224b",
        "filename": "src/coincontrol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coincontrol.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -16,6 +16,8 @@ class CCoinControl\n     bool fAllowOtherInputs;\n     //! Includes watch only addresses which match the ISMINE_WATCH_SOLVABLE criteria\n     bool fAllowWatchOnly;\n+    //! Minimum absolute fee (not per kilobyte)\n+    CAmount nMinimumTotalFee;\n \n     CCoinControl()\n     {\n@@ -28,6 +30,7 @@ class CCoinControl\n         fAllowOtherInputs = false;\n         fAllowWatchOnly = false;\n         setSelected.clear();\n+        nMinimumTotalFee = 0;\n     }\n \n     bool HasSelected() const"
      },
      {
        "sha": "877fb8b26c4f615f4199295b0b97361c767499a8",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 12,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -117,11 +117,17 @@ CCoinsModifier CCoinsViewCache::ModifyCoins(const uint256 &txid) {\n     return CCoinsModifier(*this, ret.first, cachedCoinUsage);\n }\n \n-CCoinsModifier CCoinsViewCache::ModifyNewCoins(const uint256 &txid) {\n+// ModifyNewCoins has to know whether the new outputs its creating are for a\n+// coinbase or not.  If they are for a coinbase, it can not mark them as fresh.\n+// This is to ensure that the historical duplicate coinbases before BIP30 was\n+// in effect will still be properly overwritten when spent.\n+CCoinsModifier CCoinsViewCache::ModifyNewCoins(const uint256 &txid, bool coinbase) {\n     assert(!hasModifier);\n     std::pair<CCoinsMap::iterator, bool> ret = cacheCoins.insert(std::make_pair(txid, CCoinsCacheEntry()));\n     ret.first->second.coins.Clear();\n-    ret.first->second.flags = CCoinsCacheEntry::FRESH;\n+    if (!coinbase) {\n+        ret.first->second.flags = CCoinsCacheEntry::FRESH;\n+    }\n     ret.first->second.flags |= CCoinsCacheEntry::DIRTY;\n     return CCoinsModifier(*this, ret.first, 0);\n }\n@@ -144,6 +150,11 @@ bool CCoinsViewCache::HaveCoins(const uint256 &txid) const {\n     return (it != cacheCoins.end() && !it->second.coins.vout.empty());\n }\n \n+bool CCoinsViewCache::HaveCoinsInCache(const uint256 &txid) const {\n+    CCoinsMap::const_iterator it = cacheCoins.find(txid);\n+    return it != cacheCoins.end();\n+}\n+\n uint256 CCoinsViewCache::GetBestBlock() const {\n     if (hashBlock.IsNull())\n         hashBlock = base->GetBestBlock();\n@@ -160,18 +171,23 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n         if (it->second.flags & CCoinsCacheEntry::DIRTY) { // Ignore non-dirty entries (optimization).\n             CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n             if (itUs == cacheCoins.end()) {\n-                if (!it->second.coins.IsPruned()) {\n-                    // The parent cache does not have an entry, while the child\n-                    // cache does have (a non-pruned) one. Move the data up, and\n-                    // mark it as fresh (if the grandparent did have it, we\n-                    // would have pulled it in at first GetCoins).\n-                    assert(it->second.flags & CCoinsCacheEntry::FRESH);\n+                // The parent cache does not have an entry, while the child does\n+                // We can ignore it if it's both FRESH and pruned in the child\n+                if (!(it->second.flags & CCoinsCacheEntry::FRESH && it->second.coins.IsPruned())) {\n+                    // Otherwise we will need to create it in the parent\n+                    // and move the data up and mark it as dirty\n                     CCoinsCacheEntry& entry = cacheCoins[it->first];\n                     entry.coins.swap(it->second.coins);\n                     cachedCoinsUsage += entry.coins.DynamicMemoryUsage();\n-                    entry.flags = CCoinsCacheEntry::DIRTY | CCoinsCacheEntry::FRESH;\n+                    entry.flags = CCoinsCacheEntry::DIRTY;\n+                    // We can mark it FRESH in the parent if it was FRESH in the child\n+                    // Otherwise it might have just been flushed from the parent's cache\n+                    // and already exist in the grandparent\n+                    if (it->second.flags & CCoinsCacheEntry::FRESH)\n+                        entry.flags |= CCoinsCacheEntry::FRESH;\n                 }\n             } else {\n+                // Found the entry in the parent cache\n                 if ((itUs->second.flags & CCoinsCacheEntry::FRESH) && it->second.coins.IsPruned()) {\n                     // The grandparent does not have an entry, and the child is\n                     // modified and being pruned. This means we can just delete\n@@ -201,6 +217,15 @@ bool CCoinsViewCache::Flush() {\n     return fOk;\n }\n \n+void CCoinsViewCache::Uncache(const uint256& hash)\n+{\n+    CCoinsMap::iterator it = cacheCoins.find(hash);\n+    if (it != cacheCoins.end() && it->second.flags == 0) {\n+        cachedCoinsUsage -= it->second.coins.DynamicMemoryUsage();\n+        cacheCoins.erase(it);\n+    }\n+}\n+\n unsigned int CCoinsViewCache::GetCacheSize() const {\n     return cacheCoins.size();\n }\n@@ -238,8 +263,9 @@ bool CCoinsViewCache::HaveInputs(const CTransaction& tx) const\n     return true;\n }\n \n-double CCoinsViewCache::GetPriority(const CTransaction &tx, int nHeight) const\n+double CCoinsViewCache::GetPriority(const CTransaction &tx, int nHeight, CAmount &inChainInputValue) const\n {\n+    inChainInputValue = 0;\n     if (tx.IsCoinBase())\n         return 0.0;\n     double dResult = 0.0;\n@@ -248,8 +274,9 @@ double CCoinsViewCache::GetPriority(const CTransaction &tx, int nHeight) const\n         const CCoins* coins = AccessCoins(txin.prevout.hash);\n         assert(coins);\n         if (!coins->IsAvailable(txin.prevout.n)) continue;\n-        if (coins->nHeight < nHeight) {\n+        if (coins->nHeight <= nHeight) {\n             dResult += coins->vout[txin.prevout.n].nValue * (nHeight-coins->nHeight);\n+            inChainInputValue += coins->vout[txin.prevout.n].nValue;\n         }\n     }\n     return tx.ComputePriority(dResult);"
      },
      {
        "sha": "d297cae1aa3c518f02b29914c4c7b35012544b4f",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 26,
        "deletions": 9,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -29,11 +29,11 @@\n  * - VARINT(nHeight)\n  *\n  * The nCode value consists of:\n- * - bit 1: IsCoinBase()\n- * - bit 2: vout[0] is not spent\n- * - bit 4: vout[1] is not spent\n+ * - bit 0: IsCoinBase()\n+ * - bit 1: vout[0] is not spent\n+ * - bit 2: vout[1] is not spent\n  * - The higher bits encode N, the number of non-zero bytes in the following bitvector.\n- *   - In case both bit 2 and bit 4 are unset, they encode N-1, as there must be at\n+ *   - In case both bit 1 and bit 2 are unset, they encode N-1, as there must be at\n  *     least one non-spent output).\n  *\n  * Example: 0104835800816115944e077fe7c803cfa57f29b36bf87c1d358bb85e\n@@ -58,7 +58,7 @@\n  *\n  *  - version = 1\n  *  - code = 9 (coinbase, neither vout[0] or vout[1] are unspent,\n- *                2 (1, +1 because both bit 2 and bit 4 are unset) non-zero bitvector bytes follow)\n+ *                2 (1, +1 because both bit 1 and bit 2 are unset) non-zero bitvector bytes follow)\n  *  - unspentness bitvector: bits 2 (0x04) and 14 (0x4000) are set, so vout[2+2] and vout[14+2] are unspent\n  *  - vout[4]: 86ef97d5790061b01caab50f1b8e9c50a5057eb43c2d9563a4ee\n  *             * 86ef97d579: compact amount representation for 234925952 (2.35 BTC)\n@@ -405,6 +405,13 @@ class CCoinsViewCache : public CCoinsViewBacked\n     void SetBestBlock(const uint256 &hashBlock);\n     bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock);\n \n+    /**\n+     * Check if we have the given tx already loaded in this cache.\n+     * The semantics are the same as HaveCoins(), but no calls to\n+     * the backing CCoinsView are made.\n+     */\n+    bool HaveCoinsInCache(const uint256 &txid) const;\n+\n     /**\n      * Return a pointer to CCoins in the cache, or NULL if not found. This is\n      * more efficient than GetCoins. Modifications to other cache entries are\n@@ -428,7 +435,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n      * would not properly overwrite the first coinbase of the pair. Simultaneous modifications\n      * are not allowed.\n      */\n-    CCoinsModifier ModifyNewCoins(const uint256 &txid);\n+    CCoinsModifier ModifyNewCoins(const uint256 &txid, bool coinbase);\n \n     /**\n      * Push the modifications applied to this cache to its base.\n@@ -437,6 +444,12 @@ class CCoinsViewCache : public CCoinsViewBacked\n      */\n     bool Flush();\n \n+    /**\n+     * Removes the transaction with the given hash from the cache, if it is\n+     * not modified.\n+     */\n+    void Uncache(const uint256 &txid);\n+\n     //! Calculate the size of the cache (in number of transactions)\n     unsigned int GetCacheSize() const;\n \n@@ -456,8 +469,12 @@ class CCoinsViewCache : public CCoinsViewBacked\n     //! Check whether all prevouts of the transaction are present in the UTXO set represented by this view\n     bool HaveInputs(const CTransaction& tx) const;\n \n-    //! Return priority of tx at height nHeight\n-    double GetPriority(const CTransaction &tx, int nHeight) const;\n+    /**\n+     * Return priority of tx at height nHeight. Also calculate the sum of the values of the inputs\n+     * that are already in the chain.  These are the inputs that will age and increase priority as\n+     * new blocks are added to the chain.\n+     */\n+    double GetPriority(const CTransaction &tx, int nHeight, CAmount &inChainInputValue) const;\n \n     const CTxOut &GetOutputFor(const CTxIn& input) const;\n "
      },
      {
        "sha": "1225ea18edb8537611a265d2eea8e147a46ab8a4",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "6bfae42c7709fff59fc4c7e9e0280c900ecaef44",
        "filename": "src/compat/endian.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/compat/endian.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/compat/endian.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/endian.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2014 The Bitcoin developers\n+// Copyright (c) 2014-2015 The Bitcoin developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5a099cf53c57bdd272745979a139e7e862493d8a",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "22eb7159a28f9bf019b67629bec4bc16c8ec850d",
        "filename": "src/consensus/merkle.cpp",
        "status": "added",
        "additions": 176,
        "deletions": 0,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,176 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"merkle.h\"\n+#include \"hash.h\"\n+#include \"utilstrencodings.h\"\n+\n+/*     WARNING! If you're reading this because you're learning about crypto\n+       and/or designing a new system that will use merkle trees, keep in mind\n+       that the following merkle tree algorithm has a serious flaw related to\n+       duplicate txids, resulting in a vulnerability (CVE-2012-2459).\n+\n+       The reason is that if the number of hashes in the list at a given time\n+       is odd, the last one is duplicated before computing the next level (which\n+       is unusual in Merkle trees). This results in certain sequences of\n+       transactions leading to the same merkle root. For example, these two\n+       trees:\n+\n+                    A               A\n+                  /  \\            /   \\\n+                B     C         B       C\n+               / \\    |        / \\     / \\\n+              D   E   F       D   E   F   F\n+             / \\ / \\ / \\     / \\ / \\ / \\ / \\\n+             1 2 3 4 5 6     1 2 3 4 5 6 5 6\n+\n+       for transaction lists [1,2,3,4,5,6] and [1,2,3,4,5,6,5,6] (where 5 and\n+       6 are repeated) result in the same root hash A (because the hash of both\n+       of (F) and (F,F) is C).\n+\n+       The vulnerability results from being able to send a block with such a\n+       transaction list, with the same merkle root, and the same block hash as\n+       the original without duplication, resulting in failed validation. If the\n+       receiving node proceeds to mark that block as permanently invalid\n+       however, it will fail to accept further unmodified (and thus potentially\n+       valid) versions of the same block. We defend against this by detecting\n+       the case where we would hash two identical hashes at the end of the list\n+       together, and treating that identically to the block having an invalid\n+       merkle root. Assuming no double-SHA256 collisions, this will detect all\n+       known ways of changing the transactions without affecting the merkle\n+       root.\n+*/\n+\n+/* This implements a constant-space merkle root/path calculator, limited to 2^32 leaves. */\n+static void MerkleComputation(const std::vector<uint256>& leaves, uint256* proot, bool* pmutated, uint32_t branchpos, std::vector<uint256>* pbranch) {\n+    if (pbranch) pbranch->clear();\n+    if (leaves.size() == 0) {\n+        if (pmutated) *pmutated = false;\n+        if (proot) *proot = uint256();\n+        return;\n+    }\n+    bool mutated = false;\n+    // count is the number of leaves processed so far.\n+    uint32_t count = 0;\n+    // inner is an array of eagerly computed subtree hashes, indexed by tree\n+    // level (0 being the leaves).\n+    // For example, when count is 25 (11001 in binary), inner[4] is the hash of\n+    // the first 16 leaves, inner[3] of the next 8 leaves, and inner[0] equal to\n+    // the last leaf. The other inner entries are undefined.\n+    uint256 inner[32];\n+    // Which position in inner is a hash that depends on the matching leaf.\n+    int matchlevel = -1;\n+    // First process all leaves into 'inner' values.\n+    while (count < leaves.size()) {\n+        uint256 h = leaves[count];\n+        bool matchh = count == branchpos;\n+        count++;\n+        int level;\n+        // For each of the lower bits in count that are 0, do 1 step. Each\n+        // corresponds to an inner value that existed before processing the\n+        // current leaf, and each needs a hash to combine it.\n+        for (level = 0; !(count & (((uint32_t)1) << level)); level++) {\n+            if (pbranch) {\n+                if (matchh) {\n+                    pbranch->push_back(inner[level]);\n+                } else if (matchlevel == level) {\n+                    pbranch->push_back(h);\n+                    matchh = true;\n+                }\n+            }\n+            mutated |= (inner[level] == h);\n+            CHash256().Write(inner[level].begin(), 32).Write(h.begin(), 32).Finalize(h.begin());\n+        }\n+        // Store the resulting hash at inner position level.\n+        inner[level] = h;\n+        if (matchh) {\n+            matchlevel = level;\n+        }\n+    }\n+    // Do a final 'sweep' over the rightmost branch of the tree to process\n+    // odd levels, and reduce everything to a single top value.\n+    // Level is the level (counted from the bottom) up to which we've sweeped.\n+    int level = 0;\n+    // As long as bit number level in count is zero, skip it. It means there\n+    // is nothing left at this level.\n+    while (!(count & (((uint32_t)1) << level))) {\n+        level++;\n+    }\n+    uint256 h = inner[level];\n+    bool matchh = matchlevel == level;\n+    while (count != (((uint32_t)1) << level)) {\n+        // If we reach this point, h is an inner value that is not the top.\n+        // We combine it with itself (Bitcoin's special rule for odd levels in\n+        // the tree) to produce a higher level one.\n+        if (pbranch && matchh) {\n+            pbranch->push_back(h);\n+        }\n+        CHash256().Write(h.begin(), 32).Write(h.begin(), 32).Finalize(h.begin());\n+        // Increment count to the value it would have if two entries at this\n+        // level had existed.\n+        count += (((uint32_t)1) << level);\n+        level++;\n+        // And propagate the result upwards accordingly.\n+        while (!(count & (((uint32_t)1) << level))) {\n+            if (pbranch) {\n+                if (matchh) {\n+                    pbranch->push_back(inner[level]);\n+                } else if (matchlevel == level) {\n+                    pbranch->push_back(h);\n+                    matchh = true;\n+                }\n+            }\n+            CHash256().Write(inner[level].begin(), 32).Write(h.begin(), 32).Finalize(h.begin());\n+            level++;\n+        }\n+    }\n+    // Return result.\n+    if (pmutated) *pmutated = mutated;\n+    if (proot) *proot = h;\n+}\n+\n+uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated) {\n+    uint256 hash;\n+    MerkleComputation(leaves, &hash, mutated, -1, NULL);\n+    return hash;\n+}\n+\n+std::vector<uint256> ComputeMerkleBranch(const std::vector<uint256>& leaves, uint32_t position) {\n+    std::vector<uint256> ret;\n+    MerkleComputation(leaves, NULL, NULL, position, &ret);\n+    return ret;\n+}\n+\n+uint256 ComputeMerkleRootFromBranch(const uint256& leaf, const std::vector<uint256>& vMerkleBranch, uint32_t nIndex) {\n+    uint256 hash = leaf;\n+    for (std::vector<uint256>::const_iterator it = vMerkleBranch.begin(); it != vMerkleBranch.end(); ++it) {\n+        if (nIndex & 1) {\n+            hash = Hash(BEGIN(*it), END(*it), BEGIN(hash), END(hash));\n+        } else {\n+            hash = Hash(BEGIN(hash), END(hash), BEGIN(*it), END(*it));\n+        }\n+        nIndex >>= 1;\n+    }\n+    return hash;\n+}\n+\n+uint256 BlockMerkleRoot(const CBlock& block, bool* mutated)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    for (size_t s = 0; s < block.vtx.size(); s++) {\n+        leaves[s] = block.vtx[s].GetHash();\n+    }\n+    return ComputeMerkleRoot(leaves, mutated);\n+}\n+\n+std::vector<uint256> BlockMerkleBranch(const CBlock& block, uint32_t position)\n+{\n+    std::vector<uint256> leaves;\n+    leaves.resize(block.vtx.size());\n+    for (size_t s = 0; s < block.vtx.size(); s++) {\n+        leaves[s] = block.vtx[s].GetHash();\n+    }\n+    return ComputeMerkleBranch(leaves, position);\n+}"
      },
      {
        "sha": "6ef59745ac6538ebbcee0d94228650c2fb133a77",
        "filename": "src/consensus/merkle.h",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/merkle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/merkle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_MERKLE\n+#define BITCOIN_MERKLE\n+\n+#include <stdint.h>\n+#include <vector>\n+\n+#include \"primitives/transaction.h\"\n+#include \"primitives/block.h\"\n+#include \"uint256.h\"\n+\n+uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated = NULL);\n+std::vector<uint256> ComputeMerkleBranch(const std::vector<uint256>& leaves, uint32_t position);\n+uint256 ComputeMerkleRootFromBranch(const uint256& leaf, const std::vector<uint256>& branch, uint32_t position);\n+\n+/*\n+ * Compute the Merkle root of the transactions in a block.\n+ * *mutated is set to true if a duplicated subtree was found.\n+ */\n+uint256 BlockMerkleRoot(const CBlock& block, bool* mutated = NULL);\n+\n+/*\n+ * Compute the Merkle branch for the tree of transactions in a block, for a\n+ * given position.\n+ * This can be verified using ComputeMerkleRootFromBranch.\n+ */\n+std::vector<uint256> BlockMerkleBranch(const CBlock& block, uint32_t position);\n+\n+#endif"
      },
      {
        "sha": "335750fe80724a44053cad6343ce65a0cd0a6b84",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d7e57f5b5ebdd9ff69cca30b0b9cebe2fb8b526d",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "e8c0c49e84d530979ae0a776fe4ce95b3b3ecfae",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "450537d059c20580d6b7e512babdd9d1927cc4a5",
        "filename": "src/core_memusage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/core_memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/core_memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_memusage.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -10,7 +10,7 @@\n #include \"memusage.h\"\n \n static inline size_t RecursiveDynamicUsage(const CScript& script) {\n-    return memusage::DynamicUsage(*static_cast<const std::vector<unsigned char>*>(&script));\n+    return memusage::DynamicUsage(*static_cast<const CScriptBase*>(&script));\n }\n \n static inline size_t RecursiveDynamicUsage(const COutPoint& out) {"
      },
      {
        "sha": "444a4c7eba195b79c40376dbac155c46cee9798d",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "b660e86c30b5d3d69ca6fabefbd7cc22424de8b6",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "1907e2fa78439acf2b97bde1089d8374a1e185e5",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5e7313f7eb544e69381423772a1bf79bdcf176d1",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "7f3cf1a1faa7489722e126580d2dd49cb67c6c6a",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2013-2014 The Bitcoin Core developers\n+// Copyright (c) 2013-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "97955c8d5ad6d80e009f4edd2f921d36dae662b6",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,6 +8,7 @@\n \n #include \"crypto/ripemd160.h\"\n #include \"crypto/sha256.h\"\n+#include \"prevector.h\"\n #include \"serialize.h\"\n #include \"uint256.h\"\n #include \"version.h\"\n@@ -118,6 +119,13 @@ inline uint160 Hash160(const std::vector<unsigned char>& vch)\n     return Hash160(vch.begin(), vch.end());\n }\n \n+/** Compute the 160-bit hash of a vector. */\n+template<unsigned int N>\n+inline uint160 Hash160(const prevector<N, unsigned char>& vch)\n+{\n+    return Hash160(vch.begin(), vch.end());\n+}\n+\n /** A writer stream (for serialization) that computes a 256-bit hash. */\n class CHashWriter\n {"
      },
      {
        "sha": "432a5c07921e7c04b412cfaade0498afde11c8b0",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 63,
        "deletions": 5,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,17 +1,25 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include \"httprpc.h\"\n \n #include \"base58.h\"\n #include \"chainparams.h\"\n #include \"httpserver.h\"\n-#include \"rpcprotocol.h\"\n-#include \"rpcserver.h\"\n+#include \"rpc/protocol.h\"\n+#include \"rpc/server.h\"\n #include \"random.h\"\n #include \"sync.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"ui_interface.h\"\n+#include \"crypto/hmac_sha256.h\"\n+#include <stdio.h>\n+#include \"utilstrencodings.h\"\n \n #include <boost/algorithm/string.hpp> // boost::trim\n+#include <boost/foreach.hpp> //BOOST_FOREACH\n \n /** Simple one-shot callback timer to be used by the RPC mechanism to e.g.\n  * re-lock the wellet.\n@@ -72,6 +80,50 @@ static void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const Uni\n     req->WriteReply(nStatus, strReply);\n }\n \n+//This function checks username and password against -rpcauth\n+//entries from config file.\n+static bool multiUserAuthorized(std::string strUserPass)\n+{    \n+    if (strUserPass.find(\":\") == std::string::npos) {\n+        return false;\n+    }\n+    std::string strUser = strUserPass.substr(0, strUserPass.find(\":\"));\n+    std::string strPass = strUserPass.substr(strUserPass.find(\":\") + 1);\n+\n+    if (mapMultiArgs.count(\"-rpcauth\") > 0) {\n+        //Search for multi-user login/pass \"rpcauth\" from config\n+        BOOST_FOREACH(std::string strRPCAuth, mapMultiArgs[\"-rpcauth\"])\n+        {\n+            std::vector<std::string> vFields;\n+            boost::split(vFields, strRPCAuth, boost::is_any_of(\":$\"));\n+            if (vFields.size() != 3) {\n+                //Incorrect formatting in config file\n+                continue;\n+            }\n+\n+            std::string strName = vFields[0];\n+            if (!TimingResistantEqual(strName, strUser)) {\n+                continue;\n+            }\n+\n+            std::string strSalt = vFields[1];\n+            std::string strHash = vFields[2];\n+\n+            unsigned int KEY_SIZE = 32;\n+            unsigned char *out = new unsigned char[KEY_SIZE]; \n+            \n+            CHMAC_SHA256(reinterpret_cast<const unsigned char*>(strSalt.c_str()), strSalt.size()).Write(reinterpret_cast<const unsigned char*>(strPass.c_str()), strPass.size()).Finalize(out);\n+            std::vector<unsigned char> hexvec(out, out+KEY_SIZE);\n+            std::string strHashFromPass = HexStr(hexvec);\n+\n+            if (TimingResistantEqual(strHashFromPass, strHash)) {\n+                return true;\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n static bool RPCAuthorized(const std::string& strAuth)\n {\n     if (strRPCUserColonPass.empty()) // Belt-and-suspenders measure if InitRPCAuthentication was not called\n@@ -81,7 +133,12 @@ static bool RPCAuthorized(const std::string& strAuth)\n     std::string strUserPass64 = strAuth.substr(6);\n     boost::trim(strUserPass64);\n     std::string strUserPass = DecodeBase64(strUserPass64);\n-    return TimingResistantEqual(strUserPass, strRPCUserColonPass);\n+    \n+    //Check if authorized under single-user field\n+    if (TimingResistantEqual(strUserPass, strRPCUserColonPass)) {\n+        return true;\n+    }\n+    return multiUserAuthorized(strUserPass);\n }\n \n static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n@@ -157,6 +214,7 @@ static bool InitRPCAuthentication()\n             return false;\n         }\n     } else {\n+        LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcuser for rpcauth auth generation.\");\n         strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n     }\n     return true;\n@@ -172,7 +230,7 @@ bool StartHTTPRPC()\n \n     assert(EventBase());\n     httpRPCTimerInterface = new HTTPRPCTimerInterface(EventBase());\n-    RPCRegisterTimerInterface(httpRPCTimerInterface);\n+    RPCSetTimerInterface(httpRPCTimerInterface);\n     return true;\n }\n \n@@ -186,7 +244,7 @@ void StopHTTPRPC()\n     LogPrint(\"rpc\", \"Stopping HTTP RPC server\\n\");\n     UnregisterHTTPHandler(\"/\", true);\n     if (httpRPCTimerInterface) {\n-        RPCUnregisterTimerInterface(httpRPCTimerInterface);\n+        RPCUnsetTimerInterface(httpRPCTimerInterface);\n         delete httpRPCTimerInterface;\n         httpRPCTimerInterface = 0;\n     }"
      },
      {
        "sha": "ce1accb0464e1dde6c76b35e85967d3b39d2b1ab",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -8,7 +8,7 @@\n #include \"compat.h\"\n #include \"util.h\"\n #include \"netbase.h\"\n-#include \"rpcprotocol.h\" // For HTTP status codes\n+#include \"rpc/protocol.h\" // For HTTP status codes\n #include \"sync.h\"\n #include \"ui_interface.h\"\n "
      },
      {
        "sha": "4680c8f217f5097b3a69a19cd10497951a9b081e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 233,
        "deletions": 175,
        "changes": 408,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -23,7 +23,7 @@\n #include \"miner.h\"\n #include \"net.h\"\n #include \"policy/policy.h\"\n-#include \"rpcserver.h\"\n+#include \"rpc/server.h\"\n #include \"script/standard.h\"\n #include \"script/sigcache.h\"\n #include \"scheduler.h\"\n@@ -65,6 +65,10 @@ using namespace std;\n CWallet* pwalletMain = NULL;\n #endif\n bool fFeeEstimatesInitialized = false;\n+static const bool DEFAULT_PROXYRANDOMIZE = true;\n+static const bool DEFAULT_REST_ENABLE = false;\n+static const bool DEFAULT_DISABLE_SAFEMODE = false;\n+static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n \n #if ENABLE_ZMQ\n static CZMQNotificationInterface* pzmqNotificationInterface = NULL;\n@@ -295,7 +299,7 @@ void OnRPCPreCommand(const CRPCCommand& cmd)\n {\n     // Observe safe mode\n     string strWarning = GetWarnings(\"rpc\");\n-    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\", false) &&\n+    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\", DEFAULT_DISABLE_SAFEMODE) &&\n         !cmd.okSafeMode)\n         throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, string(\"Safe mode: \") + strWarning);\n }\n@@ -307,15 +311,16 @@ std::string HelpMessage(HelpMessageMode mode)\n     // When adding new options to the categories, please keep and ensure alphabetical ordering.\n     // Do not translate _(...) -help-debug options, Many technical terms, and only a very small audience, so is unnecessary stress to translators.\n     string strUsage = HelpMessageGroup(_(\"Options:\"));\n-    strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n+    strUsage += HelpMessageOpt(\"-?\", _(\"Print this help message and exit\"));\n+    strUsage += HelpMessageOpt(\"-version\", _(\"Print version and exit\"));\n     strUsage += HelpMessageOpt(\"-alerts\", strprintf(_(\"Receive and display P2P network alerts (default: %u)\"), DEFAULT_ALERTS));\n     strUsage += HelpMessageOpt(\"-alertnotify=<cmd>\", _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\"));\n     strUsage += HelpMessageOpt(\"-blocknotify=<cmd>\", _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\"));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blocksonly\", strprintf(_(\"Whether to operate in a blocks only mode (default: %u)\"), DEFAULT_BLOCKSONLY));\n     strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), DEFAULT_CHECKBLOCKS));\n     strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), DEFAULT_CHECKLEVEL));\n-    strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n+    strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n     if (mode == HMM_BITCOIND)\n     {\n #ifndef WIN32\n@@ -331,7 +336,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n #ifndef WIN32\n-    strUsage += HelpMessageOpt(\"-pid=<file>\", strprintf(_(\"Specify pid file (default: %s)\"), \"bitcoind.pid\"));\n+    strUsage += HelpMessageOpt(\"-pid=<file>\", strprintf(_(\"Specify pid file (default: %s)\"), BITCOIN_PID_FILENAME));\n #endif\n     strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. \"\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n@@ -340,30 +345,34 @@ std::string HelpMessage(HelpMessageMode mode)\n #ifndef WIN32\n     strUsage += HelpMessageOpt(\"-sysperms\", _(\"Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)\"));\n #endif\n-    strUsage += HelpMessageOpt(\"-txindex\", strprintf(_(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-txindex\", strprintf(_(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\"), DEFAULT_TXINDEX));\n \n     strUsage += HelpMessageGroup(_(\"Connection options:\"));\n     strUsage += HelpMessageOpt(\"-addnode=<ip>\", _(\"Add a node to connect to and attempt to keep the connection open\"));\n-    strUsage += HelpMessageOpt(\"-banscore=<n>\", strprintf(_(\"Threshold for disconnecting misbehaving peers (default: %u)\"), 100));\n-    strUsage += HelpMessageOpt(\"-bantime=<n>\", strprintf(_(\"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\"), 86400));\n+    strUsage += HelpMessageOpt(\"-banscore=<n>\", strprintf(_(\"Threshold for disconnecting misbehaving peers (default: %u)\"), DEFAULT_BANSCORE_THRESHOLD));\n+    strUsage += HelpMessageOpt(\"-bantime=<n>\", strprintf(_(\"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\"), DEFAULT_MISBEHAVING_BANTIME));\n     strUsage += HelpMessageOpt(\"-bind=<addr>\", _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\"));\n     strUsage += HelpMessageOpt(\"-connect=<ip>\", _(\"Connect only to the specified node(s)\"));\n     strUsage += HelpMessageOpt(\"-discover\", _(\"Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)\"));\n-    strUsage += HelpMessageOpt(\"-dns\", _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \" \" + _(\"(default: 1)\"));\n+    strUsage += HelpMessageOpt(\"-dns\", _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_NAME_LOOKUP));\n     strUsage += HelpMessageOpt(\"-dnsseed\", _(\"Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)\"));\n     strUsage += HelpMessageOpt(\"-externalip=<ip>\", _(\"Specify your own public address\"));\n-    strUsage += HelpMessageOpt(\"-forcednsseed\", strprintf(_(\"Always query for peer addresses via DNS lookup (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-forcednsseed\", strprintf(_(\"Always query for peer addresses via DNS lookup (default: %u)\"), DEFAULT_FORCEDNSSEED));\n     strUsage += HelpMessageOpt(\"-listen\", _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\"));\n     strUsage += HelpMessageOpt(\"-listenonion\", strprintf(_(\"Automatically create Tor hidden service (default: %d)\"), DEFAULT_LISTEN_ONION));\n     strUsage += HelpMessageOpt(\"-maxconnections=<n>\", strprintf(_(\"Maintain at most <n> connections to peers (default: %u)\"), DEFAULT_MAX_PEER_CONNECTIONS));\n-    strUsage += HelpMessageOpt(\"-maxreceivebuffer=<n>\", strprintf(_(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\"), 5000));\n-    strUsage += HelpMessageOpt(\"-maxsendbuffer=<n>\", strprintf(_(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\"), 1000));\n+    strUsage += HelpMessageOpt(\"-maxreceivebuffer=<n>\", strprintf(_(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\"), DEFAULT_MAXRECEIVEBUFFER));\n+    strUsage += HelpMessageOpt(\"-maxsendbuffer=<n>\", strprintf(_(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\"), DEFAULT_MAXSENDBUFFER));\n     strUsage += HelpMessageOpt(\"-onion=<ip:port>\", strprintf(_(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)\"), \"-proxy\"));\n     strUsage += HelpMessageOpt(\"-onlynet=<net>\", _(\"Only connect to nodes in network <net> (ipv4, ipv6 or onion)\"));\n-    strUsage += HelpMessageOpt(\"-permitbaremultisig\", strprintf(_(\"Relay non-P2SH multisig (default: %u)\"), 1));\n-    strUsage += HelpMessageOpt(\"-port=<port>\", strprintf(_(\"Listen for connections on <port> (default: %u or testnet: %u)\"), 8333, 18333));\n+    strUsage += HelpMessageOpt(\"-permitbaremultisig\", strprintf(_(\"Relay non-P2SH multisig (default: %u)\"), DEFAULT_PERMIT_BAREMULTISIG));\n+    strUsage += HelpMessageOpt(\"-permitrbf\", strprintf(_(\"Permit transaction replacements in the memory pool (default: %u)\"), DEFAULT_PERMIT_REPLACEMENT));\n+    strUsage += HelpMessageOpt(\"-peerbloomfilters\", strprintf(_(\"Support filtering of blocks and transaction with bloom filters (default: %u)\"), 1));\n+    if (showDebug)\n+        strUsage += HelpMessageOpt(\"-enforcenodebloom\", strprintf(\"Enforce minimum protocol version to limit use of bloom filters (default: %u)\", 0));\n+    strUsage += HelpMessageOpt(\"-port=<port>\", strprintf(_(\"Listen for connections on <port> (default: %u or testnet: %u)\"), Params(CBaseChainParams::MAIN).GetDefaultPort(), Params(CBaseChainParams::TESTNET).GetDefaultPort()));\n     strUsage += HelpMessageOpt(\"-proxy=<ip:port>\", _(\"Connect through SOCKS5 proxy\"));\n-    strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), DEFAULT_PROXYRANDOMIZE));\n     strUsage += HelpMessageOpt(\"-seednode=<ip>\", _(\"Connect to a node to retrieve peer addresses, and disconnect\"));\n     strUsage += HelpMessageOpt(\"-timeout=<n>\", strprintf(_(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"), DEFAULT_CONNECT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-torcontrol=<ip>:<port>\", strprintf(_(\"Tor control port to use if onion listening enabled (default: %s)\"), DEFAULT_TOR_CONTROL));\n@@ -378,28 +387,28 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-whitebind=<addr>\", _(\"Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\"));\n     strUsage += HelpMessageOpt(\"-whitelist=<netmask>\", _(\"Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.\") +\n         \" \" + _(\"Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway\"));\n-    strUsage += HelpMessageOpt(\"-whitelistalwaysrelay\", strprintf(_(\"Always relay transactions received from whitelisted peers (default: %d)\"), DEFAULT_WHITELISTALWAYSRELAY));\n+    strUsage += HelpMessageOpt(\"-whitelistrelay\", strprintf(_(\"Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: %d)\"), DEFAULT_WHITELISTRELAY));\n+    strUsage += HelpMessageOpt(\"-whitelistforcerelay\", strprintf(_(\"Force relay of transactions from whitelisted peers even they violate local relay policy (default: %d)\"), DEFAULT_WHITELISTFORCERELAY));\n     strUsage += HelpMessageOpt(\"-maxuploadtarget=<n>\", strprintf(_(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\"), DEFAULT_MAX_UPLOAD_TARGET));\n \n #ifdef ENABLE_WALLET\n     strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n     strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n-    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n-    if (showDebug)\n-        strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\",\n+    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n+    strUsage += HelpMessageOpt(\"-fallbackfee=<amt>\", strprintf(_(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data (default: %s)\"),\n+        CURRENCY_UNIT, FormatMoney(DEFAULT_FALLBACK_FEE)));\n+    strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(payTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions on startup\"));\n     strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat on startup\"));\n-    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n-    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), DEFAULT_SEND_FREE_TRANSACTIONS));\n+    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), DEFAULT_SPEND_ZEROCONF_CHANGE));\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n-    strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n-        CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n-    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n+    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_WALLETBROADCAST));\n     strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n     strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n         \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n@@ -408,55 +417,66 @@ std::string HelpMessage(HelpMessageMode mode)\n #if ENABLE_ZMQ\n     strUsage += HelpMessageGroup(_(\"ZeroMQ notification options:\"));\n     strUsage += HelpMessageOpt(\"-zmqpubhashblock=<address>\", _(\"Enable publish hash block in <address>\"));\n-    strUsage += HelpMessageOpt(\"-zmqpubhashtransaction=<address>\", _(\"Enable publish hash transaction in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubhashtx=<address>\", _(\"Enable publish hash transaction in <address>\"));\n     strUsage += HelpMessageOpt(\"-zmqpubrawblock=<address>\", _(\"Enable publish raw block in <address>\"));\n-    strUsage += HelpMessageOpt(\"-zmqpubrawtransaction=<address>\", _(\"Enable publish raw transaction in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubrawtx=<address>\", _(\"Enable publish raw transaction in <address>\"));\n #endif\n \n     strUsage += HelpMessageGroup(_(\"Debugging/Testing options:\"));\n+    strUsage += HelpMessageOpt(\"-uacomment=<cmt>\", _(\"Append comment to the user agent string\"));\n     if (showDebug)\n     {\n-        strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-checkblockindex\", strprintf(\"Do a full consistency check for mapBlockIndex, setBlockIndexCandidates, chainActive and mapBlocksUnlinked occasionally. Also sets -checkmempool (default: %u)\", Params(CBaseChainParams::MAIN).DefaultConsistencyChecks()));\n+        strUsage += HelpMessageOpt(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", Params(CBaseChainParams::MAIN).DefaultConsistencyChecks()));\n+        strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED));\n #ifdef ENABLE_WALLET\n         strUsage += HelpMessageOpt(\"-dblogsize=<n>\", strprintf(\"Flush wallet database activity from memory to disk log every <n> megabytes (default: %u)\", DEFAULT_WALLET_DBLOGSIZE));\n #endif\n-        strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", 0));\n-        strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", 0));\n+        strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", DEFAULT_DISABLE_SAFEMODE));\n+        strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", DEFAULT_TESTSAFEMODE));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n #ifdef ENABLE_WALLET\n-        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", DEFAULT_FLUSHWALLET));\n #endif\n-        strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n+        strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT));\n         strUsage += HelpMessageOpt(\"-limitancestorcount=<n>\", strprintf(\"Do not accept transactions if number of in-mempool ancestors is <n> or more (default: %u)\", DEFAULT_ANCESTOR_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http, libevent\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, mempoolrej, net, proxy, prune, http, libevent, tor, zmq\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n         _(\"If <category> is not supplied or if <category> = 1, output all debugging information.\") + _(\"<category> can be:\") + \" \" + debugCategories + \".\");\n-    strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), 0));\n+    if (showDebug)\n+        strUsage += HelpMessageOpt(\"-nodebug\", \"Turn off debugging messages, same as -debug=0\");\n+    strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), DEFAULT_GENERATE));\n     strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), DEFAULT_GENERATE_THREADS));\n     strUsage += HelpMessageOpt(\"-help-debug\", _(\"Show all debugging options (usage: --help -help-debug)\"));\n-    strUsage += HelpMessageOpt(\"-logips\", strprintf(_(\"Include IP addresses in debug output (default: %u)\"), 0));\n-    strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-logips\", strprintf(_(\"Include IP addresses in debug output (default: %u)\"), DEFAULT_LOGIPS));\n+    strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), DEFAULT_LOGTIMESTAMPS));\n     if (showDebug)\n     {\n         strUsage += HelpMessageOpt(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS));\n-        strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", 15));\n-        strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-mocktime=<n>\", \"Replace actual time with <n> seconds since epoch (default: 0)\");\n+        strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", DEFAULT_LIMITFREERELAY));\n+        strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", DEFAULT_RELAYPRIORITY));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE));\n+        strUsage += HelpMessageOpt(\"-maxtipage=<n>\", strprintf(\"Maximum tip age in seconds to consider node in initial block download (default: %u)\", DEFAULT_MAX_TIP_AGE));\n     }\n     strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)));\n+    strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees (in %s) to use in a single wallet transaction or raw transaction; setting this too low may abort large transactions (default: %s)\"),\n+        CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)));\n     strUsage += HelpMessageOpt(\"-printtoconsole\", _(\"Send trace/debug info to console instead of debug.log file\"));\n     if (showDebug)\n     {\n-        strUsage += HelpMessageOpt(\"-printpriority\", strprintf(\"Log transaction priority and fee per kB when mining blocks (default: %u)\", 0));\n-        strUsage += HelpMessageOpt(\"-privdb\", strprintf(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\", 1));\n+        strUsage += HelpMessageOpt(\"-printpriority\", strprintf(\"Log transaction priority and fee per kB when mining blocks (default: %u)\", DEFAULT_PRINTPRIORITY));\n+#ifdef ENABLE_WALLET\n+        strUsage += HelpMessageOpt(\"-privdb\", strprintf(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\", DEFAULT_WALLET_PRIVDB));\n+#endif\n     }\n     strUsage += HelpMessageOpt(\"-shrinkdebugfile\", _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\"));\n \n@@ -465,47 +485,33 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", !Params(CBaseChainParams::TESTNET).RequireStandard()));\n-    strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), 1));\n+    strUsage += HelpMessageOpt(\"-bytespersigop\", strprintf(_(\"Minimum bytes per sigop in transactions we relay and mine (default: %u)\"), DEFAULT_BYTES_PER_SIGOP));\n+    strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), DEFAULT_ACCEPT_DATACARRIER));\n     strUsage += HelpMessageOpt(\"-datacarriersize\", strprintf(_(\"Maximum size of data in data carrier transactions we relay and mine (default: %u)\"), MAX_OP_RETURN_RELAY));\n \n     strUsage += HelpMessageGroup(_(\"Block creation options:\"));\n-    strUsage += HelpMessageOpt(\"-blockminsize=<n>\", strprintf(_(\"Set minimum block size in bytes (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-blockminsize=<n>\", strprintf(_(\"Set minimum block size in bytes (default: %u)\"), DEFAULT_BLOCK_MIN_SIZE));\n     strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE));\n     strUsage += HelpMessageOpt(\"-blockprioritysize=<n>\", strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blockversion=<n>\", strprintf(\"Override block version to test forking scenarios (default: %d)\", (int)CBlock::CURRENT_VERSION));\n \n     strUsage += HelpMessageGroup(_(\"RPC server options:\"));\n     strUsage += HelpMessageOpt(\"-server\", _(\"Accept command line and JSON-RPC commands\"));\n-    strUsage += HelpMessageOpt(\"-rest\", strprintf(_(\"Accept public REST requests (default: %u)\"), 0));\n+    strUsage += HelpMessageOpt(\"-rest\", strprintf(_(\"Accept public REST requests (default: %u)\"), DEFAULT_REST_ENABLE));\n     strUsage += HelpMessageOpt(\"-rpcbind=<addr>\", _(\"Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)\"));\n+    strUsage += HelpMessageOpt(\"-rpccookiefile=<loc>\", _(\"Location of the auth cookie (default: data dir)\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n-    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), 8332, 18332));\n+    strUsage += HelpMessageOpt(\"-rpcauth=<userpw>\", _(\"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcuser. This option can be specified multiple times\"));\n+    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), BaseParams(CBaseChainParams::MAIN).RPCPort(), BaseParams(CBaseChainParams::TESTNET).RPCPort()));\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE));\n         strUsage += HelpMessageOpt(\"-rpcservertimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_SERVER_TIMEOUT));\n     }\n \n-    if (mode == HMM_BITCOIN_QT)\n-    {\n-        strUsage += HelpMessageGroup(_(\"UI Options:\"));\n-        if (showDebug) {\n-            strUsage += HelpMessageOpt(\"-allowselfsignedrootcertificates\", \"Allow self signed root certificates (default: 0)\");\n-        }\n-        strUsage += HelpMessageOpt(\"-choosedatadir\", _(\"Choose data directory on startup (default: 0)\"));\n-        strUsage += HelpMessageOpt(\"-lang=<lang>\", _(\"Set language, for example \\\"de_DE\\\" (default: system locale)\"));\n-        strUsage += HelpMessageOpt(\"-min\", _(\"Start minimized\"));\n-        strUsage += HelpMessageOpt(\"-rootcertificates=<file>\", _(\"Set SSL root certificates for payment request (default: -system-)\"));\n-        strUsage += HelpMessageOpt(\"-splash\", _(\"Show splash screen on startup (default: 1)\"));\n-        strUsage += HelpMessageOpt(\"-resetguisettings\", _(\"Reset all settings changes made over the GUI\"));\n-        if (showDebug) {\n-            strUsage += HelpMessageOpt(\"-uiplatform\", \"Select platform to customize UI for (one of windows, macosx, other; default: platform compiled on)\");\n-        }\n-    }\n-\n     return strUsage;\n }\n \n@@ -522,11 +528,14 @@ std::string LicenseInfo()\n            \"\\n\";\n }\n \n-static void BlockNotifyCallback(const uint256& hashNewTip)\n+static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex)\n {\n+    if (initialSync || !pBlockIndex)\n+        return;\n+\n     std::string strCmd = GetArg(\"-blocknotify\", \"\");\n \n-    boost::replace_all(strCmd, \"%s\", hashNewTip.GetHex());\n+    boost::replace_all(strCmd, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n     boost::thread t(runCommand, strCmd); // thread runs free\n }\n \n@@ -588,6 +597,7 @@ void CleanupBlockRevFiles()\n \n void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n {\n+    const CChainParams& chainparams = Params();\n     RenameThread(\"bitcoin-loadblk\");\n     // -reindex\n     if (fReindex) {\n@@ -601,14 +611,14 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n             if (!file)\n                 break; // This error is logged in OpenBlockFile\n             LogPrintf(\"Reindexing block file blk%05u.dat...\\n\", (unsigned int)nFile);\n-            LoadExternalBlockFile(file, &pos);\n+            LoadExternalBlockFile(chainparams, file, &pos);\n             nFile++;\n         }\n         pblocktree->WriteReindexing(false);\n         fReindex = false;\n         LogPrintf(\"Reindexing finished\\n\");\n         // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\n-        InitBlockIndex();\n+        InitBlockIndex(chainparams);\n     }\n \n     // hardcoded $DATADIR/bootstrap.dat\n@@ -619,7 +629,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n             CImportingNow imp;\n             boost::filesystem::path pathBootstrapOld = GetDataDir() / \"bootstrap.dat.old\";\n             LogPrintf(\"Importing bootstrap.dat...\\n\");\n-            LoadExternalBlockFile(file);\n+            LoadExternalBlockFile(chainparams, file);\n             RenameOver(pathBootstrap, pathBootstrapOld);\n         } else {\n             LogPrintf(\"Warning: Could not open bootstrap file %s\\n\", pathBootstrap.string());\n@@ -632,13 +642,13 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         if (file) {\n             CImportingNow imp;\n             LogPrintf(\"Importing blocks file %s...\\n\", path.string());\n-            LoadExternalBlockFile(file);\n+            LoadExternalBlockFile(chainparams, file);\n         } else {\n             LogPrintf(\"Warning: Could not open blocks file %s\\n\", path.string());\n         }\n     }\n \n-    if (GetBoolArg(\"-stopafterblockimport\", false)) {\n+    if (GetBoolArg(\"-stopafterblockimport\", DEFAULT_STOPAFTERBLOCKIMPORT)) {\n         LogPrintf(\"Stopping after block import\\n\");\n         StartShutdown();\n     }\n@@ -670,13 +680,114 @@ bool AppInitServers(boost::thread_group& threadGroup)\n         return false;\n     if (!StartHTTPRPC())\n         return false;\n-    if (GetBoolArg(\"-rest\", false) && !StartREST())\n+    if (GetBoolArg(\"-rest\", DEFAULT_REST_ENABLE) && !StartREST())\n         return false;\n     if (!StartHTTPServer())\n         return false;\n     return true;\n }\n \n+// Parameter interaction based on rules\n+void InitParameterInteraction()\n+{\n+    // when specifying an explicit binding address, you want to listen on it\n+    // even when -connect or -proxy is specified\n+    if (mapArgs.count(\"-bind\")) {\n+        if (SoftSetBoolArg(\"-listen\", true))\n+            LogPrintf(\"%s: parameter interaction: -bind set -> setting -listen=1\\n\", __func__);\n+    }\n+    if (mapArgs.count(\"-whitebind\")) {\n+        if (SoftSetBoolArg(\"-listen\", true))\n+            LogPrintf(\"%s: parameter interaction: -whitebind set -> setting -listen=1\\n\", __func__);\n+    }\n+\n+    if (mapArgs.count(\"-connect\") && mapMultiArgs[\"-connect\"].size() > 0) {\n+        // when only connecting to trusted nodes, do not seed via DNS, or listen by default\n+        if (SoftSetBoolArg(\"-dnsseed\", false))\n+            LogPrintf(\"%s: parameter interaction: -connect set -> setting -dnsseed=0\\n\", __func__);\n+        if (SoftSetBoolArg(\"-listen\", false))\n+            LogPrintf(\"%s: parameter interaction: -connect set -> setting -listen=0\\n\", __func__);\n+    }\n+\n+    if (mapArgs.count(\"-proxy\")) {\n+        // to protect privacy, do not listen by default if a default proxy server is specified\n+        if (SoftSetBoolArg(\"-listen\", false))\n+            LogPrintf(\"%s: parameter interaction: -proxy set -> setting -listen=0\\n\", __func__);\n+        // to protect privacy, do not use UPNP when a proxy is set. The user may still specify -listen=1\n+        // to listen locally, so don't rely on this happening through -listen below.\n+        if (SoftSetBoolArg(\"-upnp\", false))\n+            LogPrintf(\"%s: parameter interaction: -proxy set -> setting -upnp=0\\n\", __func__);\n+        // to protect privacy, do not discover addresses by default\n+        if (SoftSetBoolArg(\"-discover\", false))\n+            LogPrintf(\"%s: parameter interaction: -proxy set -> setting -discover=0\\n\", __func__);\n+    }\n+\n+    if (!GetBoolArg(\"-listen\", DEFAULT_LISTEN)) {\n+        // do not map ports or try to retrieve public IP when not listening (pointless)\n+        if (SoftSetBoolArg(\"-upnp\", false))\n+            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n+        if (SoftSetBoolArg(\"-discover\", false))\n+            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -discover=0\\n\", __func__);\n+        if (SoftSetBoolArg(\"-listenonion\", false))\n+            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -listenonion=0\\n\", __func__);\n+    }\n+\n+    if (mapArgs.count(\"-externalip\")) {\n+        // if an explicit public IP is specified, do not try to find others\n+        if (SoftSetBoolArg(\"-discover\", false))\n+            LogPrintf(\"%s: parameter interaction: -externalip set -> setting -discover=0\\n\", __func__);\n+    }\n+\n+    if (GetBoolArg(\"-salvagewallet\", false)) {\n+        // Rewrite just private keys: rescan to find transactions\n+        if (SoftSetBoolArg(\"-rescan\", true))\n+            LogPrintf(\"%s: parameter interaction: -salvagewallet=1 -> setting -rescan=1\\n\", __func__);\n+    }\n+\n+    // -zapwallettx implies a rescan\n+    if (GetBoolArg(\"-zapwallettxes\", false)) {\n+        if (SoftSetBoolArg(\"-rescan\", true))\n+            LogPrintf(\"%s: parameter interaction: -zapwallettxes=<mode> -> setting -rescan=1\\n\", __func__);\n+    }\n+\n+    // disable walletbroadcast and whitelistrelay in blocksonly mode\n+    if (GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)) {\n+        if (SoftSetBoolArg(\"-whitelistrelay\", false))\n+            LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -whitelistrelay=0\\n\", __func__);\n+#ifdef ENABLE_WALLET\n+        if (SoftSetBoolArg(\"-walletbroadcast\", false))\n+            LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -walletbroadcast=0\\n\", __func__);\n+#endif\n+    }\n+\n+    // Forcing relay from whitelisted hosts implies we will accept relays from them in the first place.\n+    if (GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) {\n+        if (SoftSetBoolArg(\"-whitelistrelay\", true))\n+            LogPrintf(\"%s: parameter interaction: -whitelistforcerelay=1 -> setting -whitelistrelay=1\\n\", __func__);\n+    }\n+}\n+\n+static std::string ResolveErrMsg(const char * const optname, const std::string& strBind)\n+{\n+    return strprintf(_(\"Cannot resolve -%s address: '%s'\"), optname, strBind);\n+}\n+\n+static std::string AmountErrMsg(const char * const optname, const std::string& strValue)\n+{\n+    return strprintf(_(\"Invalid amount for -%s=<amount>: '%s'\"), optname, strValue);\n+}\n+\n+void InitLogging()\n+{\n+    fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n+    fLogTimestamps = GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n+    fLogTimeMicros = GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n+    fLogIPs = GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n+\n+    LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n+    LogPrintf(\"Bitcoin version %s (%s)\\n\", FormatFullVersion(), CLIENT_DATE);\n+}\n+\n /** Initialize bitcoin.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n@@ -741,78 +852,11 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // ********************************************************* Step 2: parameter interactions\n     const CChainParams& chainparams = Params();\n \n-    // Set this early so that parameter interactions go to console\n-    fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n-    fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n-    fLogTimeMicros = GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n-    fLogIPs = GetBoolArg(\"-logips\", false);\n-\n-    LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n-    LogPrintf(\"Bitcoin version %s (%s)\\n\", FormatFullVersion(), CLIENT_DATE);\n-\n-    // when specifying an explicit binding address, you want to listen on it\n-    // even when -connect or -proxy is specified\n-    if (mapArgs.count(\"-bind\")) {\n-        if (SoftSetBoolArg(\"-listen\", true))\n-            LogPrintf(\"%s: parameter interaction: -bind set -> setting -listen=1\\n\", __func__);\n-    }\n-    if (mapArgs.count(\"-whitebind\")) {\n-        if (SoftSetBoolArg(\"-listen\", true))\n-            LogPrintf(\"%s: parameter interaction: -whitebind set -> setting -listen=1\\n\", __func__);\n-    }\n-\n-    if (mapArgs.count(\"-connect\") && mapMultiArgs[\"-connect\"].size() > 0) {\n-        // when only connecting to trusted nodes, do not seed via DNS, or listen by default\n-        if (SoftSetBoolArg(\"-dnsseed\", false))\n-            LogPrintf(\"%s: parameter interaction: -connect set -> setting -dnsseed=0\\n\", __func__);\n-        if (SoftSetBoolArg(\"-listen\", false))\n-            LogPrintf(\"%s: parameter interaction: -connect set -> setting -listen=0\\n\", __func__);\n-    }\n-\n-    if (mapArgs.count(\"-proxy\")) {\n-        // to protect privacy, do not listen by default if a default proxy server is specified\n-        if (SoftSetBoolArg(\"-listen\", false))\n-            LogPrintf(\"%s: parameter interaction: -proxy set -> setting -listen=0\\n\", __func__);\n-        // to protect privacy, do not use UPNP when a proxy is set. The user may still specify -listen=1\n-        // to listen locally, so don't rely on this happening through -listen below.\n-        if (SoftSetBoolArg(\"-upnp\", false))\n-            LogPrintf(\"%s: parameter interaction: -proxy set -> setting -upnp=0\\n\", __func__);\n-        // to protect privacy, do not discover addresses by default\n-        if (SoftSetBoolArg(\"-discover\", false))\n-            LogPrintf(\"%s: parameter interaction: -proxy set -> setting -discover=0\\n\", __func__);\n-    }\n-\n-    if (!GetBoolArg(\"-listen\", DEFAULT_LISTEN)) {\n-        // do not map ports or try to retrieve public IP when not listening (pointless)\n-        if (SoftSetBoolArg(\"-upnp\", false))\n-            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n-        if (SoftSetBoolArg(\"-discover\", false))\n-            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -discover=0\\n\", __func__);\n-        if (SoftSetBoolArg(\"-listenonion\", false))\n-            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -listenonion=0\\n\", __func__);\n-    }\n-\n-    if (mapArgs.count(\"-externalip\")) {\n-        // if an explicit public IP is specified, do not try to find others\n-        if (SoftSetBoolArg(\"-discover\", false))\n-            LogPrintf(\"%s: parameter interaction: -externalip set -> setting -discover=0\\n\", __func__);\n-    }\n-\n-    if (GetBoolArg(\"-salvagewallet\", false)) {\n-        // Rewrite just private keys: rescan to find transactions\n-        if (SoftSetBoolArg(\"-rescan\", true))\n-            LogPrintf(\"%s: parameter interaction: -salvagewallet=1 -> setting -rescan=1\\n\", __func__);\n-    }\n-\n-    // -zapwallettx implies a rescan\n-    if (GetBoolArg(\"-zapwallettxes\", false)) {\n-        if (SoftSetBoolArg(\"-rescan\", true))\n-            LogPrintf(\"%s: parameter interaction: -zapwallettxes=<mode> -> setting -rescan=1\\n\", __func__);\n-    }\n+    // also see: InitParameterInteraction()\n \n     // if using block pruning, then disable txindex\n     if (GetArg(\"-prune\", 0)) {\n-        if (GetBoolArg(\"-txindex\", false))\n+        if (GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n #ifdef ENABLE_WALLET\n         if (GetBoolArg(\"-rescan\", false)) {\n@@ -821,16 +865,6 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n #endif\n     }\n \n-    // disable walletbroadcast and whitelistalwaysrelay in blocksonly mode\n-    if (GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)) {\n-        if (SoftSetBoolArg(\"-whitelistalwaysrelay\", false))\n-            LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -whitelistalwaysrelay=0\\n\", __func__);\n-#ifdef ENABLE_WALLET\n-        if (SoftSetBoolArg(\"-walletbroadcast\", false))\n-            LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -walletbroadcast=0\\n\", __func__);\n-#endif\n-    }\n-    \n     // Make sure enough file descriptors are available\n     int nBind = std::max((int)mapArgs.count(\"-bind\") + (int)mapArgs.count(\"-whitebind\"), 1);\n     int nUserMaxConnections = GetArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n@@ -867,19 +901,22 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (GetBoolArg(\"-benchmark\", false))\n         InitWarning(_(\"Unsupported argument -benchmark ignored, use -debug=bench.\"));\n \n+    if (GetBoolArg(\"-whitelistalwaysrelay\", false))\n+        InitWarning(_(\"Unsupported argument -whitelistalwaysrelay ignored, use -whitelistrelay and/or -whitelistforcerelay.\"));\n+\n     // Checkmempool and checkblockindex default to true in regtest mode\n     int ratio = std::min<int>(std::max<int>(GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n     if (ratio != 0) {\n         mempool.setSanityCheck(1.0 / ratio);\n     }\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n-    fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", true);\n+    fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", DEFAULT_CHECKPOINTS_ENABLED);\n \n-    // -mempoollimit limits\n-    int64_t nMempoolSizeLimit = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n-    int64_t nMempoolDescendantSizeLimit = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n-    if (nMempoolSizeLimit < 0 || nMempoolSizeLimit < nMempoolDescendantSizeLimit * 40)\n-        return InitError(strprintf(_(\"-maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 25));\n+    // mempool limits\n+    int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolSizeMin = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000 * 40;\n+    if (nMempoolSizeMax < 0 || nMempoolSizeMax < nMempoolSizeMin)\n+        return InitError(strprintf(_(\"-maxmempool must be at least %d MB\"), std::ceil(nMempoolSizeMin / 1000000.0)));\n \n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n     nScriptCheckThreads = GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n@@ -908,6 +945,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n #ifdef ENABLE_WALLET\n     bool fDisableWallet = GetBoolArg(\"-disablewallet\", false);\n+    if (!fDisableWallet)\n+        walletRegisterRPCCommands();\n #endif\n \n     nConnectTimeout = GetArg(\"-timeout\", DEFAULT_CONNECT_TIMEOUT);\n@@ -926,12 +965,13 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (ParseMoney(mapArgs[\"-minrelaytxfee\"], n) && n > 0)\n             ::minRelayTxFee = CFeeRate(n);\n         else\n-            return InitError(strprintf(_(\"Invalid amount for -minrelaytxfee=<amount>: '%s'\"), mapArgs[\"-minrelaytxfee\"]));\n+            return InitError(AmountErrMsg(\"minrelaytxfee\", mapArgs[\"-minrelaytxfee\"]));\n     }\n \n     fRequireStandard = !GetBoolArg(\"-acceptnonstdtxn\", !Params().RequireStandard());\n     if (Params().RequireStandard() && !fRequireStandard)\n         return InitError(strprintf(\"acceptnonstdtxn is not currently supported for %s chain\", chainparams.NetworkIDString()));\n+    nBytesPerSigOp = GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n #ifdef ENABLE_WALLET\n     if (mapArgs.count(\"-mintxfee\"))\n@@ -940,14 +980,23 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n             CWallet::minTxFee = CFeeRate(n);\n         else\n-            return InitError(strprintf(_(\"Invalid amount for -mintxfee=<amount>: '%s'\"), mapArgs[\"-mintxfee\"]));\n+            return InitError(AmountErrMsg(\"mintxfee\", mapArgs[\"-mintxfee\"]));\n+    }\n+    if (mapArgs.count(\"-fallbackfee\"))\n+    {\n+        CAmount nFeePerK = 0;\n+        if (!ParseMoney(mapArgs[\"-fallbackfee\"], nFeePerK))\n+            return InitError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), mapArgs[\"-fallbackfee\"]));\n+        if (nFeePerK > HIGH_TX_FEE_PER_KB)\n+            InitWarning(_(\"-fallbackfee is set very high! This is the transaction fee you may pay when fee estimates are not available.\"));\n+        CWallet::fallbackFee = CFeeRate(nFeePerK);\n     }\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n-            return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s'\"), mapArgs[\"-paytxfee\"]));\n-        if (nFeePerK > nHighTransactionFeeWarning)\n+            return InitError(AmountErrMsg(\"paytxfee\", mapArgs[\"-paytxfee\"]));\n+        if (nFeePerK > HIGH_TX_FEE_PER_KB)\n             InitWarning(_(\"-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n         payTxFee = CFeeRate(nFeePerK, 1000);\n         if (payTxFee < ::minRelayTxFee)\n@@ -960,8 +1009,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     {\n         CAmount nMaxFee = 0;\n         if (!ParseMoney(mapArgs[\"-maxtxfee\"], nMaxFee))\n-            return InitError(strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s'\"), mapArgs[\"-maptxfee\"]));\n-        if (nMaxFee > nHighTransactionMaxFeeWarning)\n+            return InitError(AmountErrMsg(\"maxtxfee\", mapArgs[\"-maxtxfee\"]));\n+        if (nMaxFee > HIGH_MAX_TX_FEE)\n             InitWarning(_(\"-maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n         maxTxFee = nMaxFee;\n         if (CFeeRate(maxTxFee, 1000) < ::minRelayTxFee)\n@@ -971,13 +1020,14 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         }\n     }\n     nTxConfirmTarget = GetArg(\"-txconfirmtarget\", DEFAULT_TX_CONFIRM_TARGET);\n-    bSpendZeroConfChange = GetBoolArg(\"-spendzeroconfchange\", true);\n-    fSendFreeTransactions = GetBoolArg(\"-sendfreetransactions\", false);\n+    bSpendZeroConfChange = GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n+    fSendFreeTransactions = GetBoolArg(\"-sendfreetransactions\", DEFAULT_SEND_FREE_TRANSACTIONS);\n \n     std::string strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n #endif // ENABLE_WALLET\n \n-    fIsBareMultisigStd = GetBoolArg(\"-permitbaremultisig\", true);\n+    fIsBareMultisigStd = GetBoolArg(\"-permitbaremultisig\", DEFAULT_PERMIT_BAREMULTISIG);\n+    fAcceptDatacarrier = GetBoolArg(\"-datacarrier\", DEFAULT_ACCEPT_DATACARRIER);\n     nMaxDatacarrierBytes = GetArg(\"-datacarriersize\", nMaxDatacarrierBytes);\n \n     fAlerts = GetBoolArg(\"-alerts\", DEFAULT_ALERTS);\n@@ -988,6 +1038,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (GetBoolArg(\"-peerbloomfilters\", true))\n         nLocalServices |= NODE_BLOOM;\n \n+    nMaxTipAge = GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n+    fPermitReplacement = GetBoolArg(\"-permitrbf\", DEFAULT_PERMIT_REPLACEMENT);\n+\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     // Initialize elliptic curve code\n@@ -1026,7 +1079,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (fPrintToDebugLog)\n         OpenDebugLog();\n \n+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n+#else\n+    LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n+#endif\n+\n #ifdef ENABLE_WALLET\n     LogPrintf(\"Using BerkeleyDB version %s\\n\", DbEnv::version(0, 0, 0));\n #endif\n@@ -1123,7 +1181,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         }\n     }\n \n-    bool proxyRandomize = GetBoolArg(\"-proxyrandomize\", true);\n+    bool proxyRandomize = GetBoolArg(\"-proxyrandomize\", DEFAULT_PROXYRANDOMIZE);\n     // -proxy sets a proxy for all outgoing network traffic\n     // -noproxy (or -proxy=0) as well as the empty string can be used to not set a proxy, this is the default\n     std::string proxyArg = GetArg(\"-proxy\", \"\");\n@@ -1158,21 +1216,21 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // see Step 2: parameter interactions for more information about these\n     fListen = GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n     fDiscover = GetBoolArg(\"-discover\", true);\n-    fNameLookup = GetBoolArg(\"-dns\", true);\n+    fNameLookup = GetBoolArg(\"-dns\", DEFAULT_NAME_LOOKUP);\n \n     bool fBound = false;\n     if (fListen) {\n         if (mapArgs.count(\"-bind\") || mapArgs.count(\"-whitebind\")) {\n             BOOST_FOREACH(const std::string& strBind, mapMultiArgs[\"-bind\"]) {\n                 CService addrBind;\n                 if (!Lookup(strBind.c_str(), addrBind, GetListenPort(), false))\n-                    return InitError(strprintf(_(\"Cannot resolve -bind address: '%s'\"), strBind));\n+                    return InitError(ResolveErrMsg(\"bind\", strBind));\n                 fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR));\n             }\n             BOOST_FOREACH(const std::string& strBind, mapMultiArgs[\"-whitebind\"]) {\n                 CService addrBind;\n                 if (!Lookup(strBind.c_str(), addrBind, 0, false))\n-                    return InitError(strprintf(_(\"Cannot resolve -whitebind address: '%s'\"), strBind));\n+                    return InitError(ResolveErrMsg(\"whitebind\", strBind));\n                 if (addrBind.GetPort() == 0)\n                     return InitError(strprintf(_(\"Need to specify a port with -whitebind: '%s'\"), strBind));\n                 fBound |= Bind(addrBind, (BF_EXPLICIT | BF_REPORT_ERROR | BF_WHITELIST));\n@@ -1192,7 +1250,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         BOOST_FOREACH(const std::string& strAddr, mapMultiArgs[\"-externalip\"]) {\n             CService addrLocal(strAddr, GetListenPort(), fNameLookup);\n             if (!addrLocal.IsValid())\n-                return InitError(strprintf(_(\"Cannot resolve -externalip address: '%s'\"), strAddr));\n+                return InitError(ResolveErrMsg(\"externalip\", strAddr));\n             AddLocal(CService(strAddr, GetListenPort(), fNameLookup), LOCAL_MANUAL);\n         }\n     }\n@@ -1247,7 +1305,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     nTotalCache = std::max(nTotalCache, nMinDbCache << 20); // total cache cannot be less than nMinDbCache\n     nTotalCache = std::min(nTotalCache, nMaxDbCache << 20); // total cache cannot be greated than nMaxDbcache\n     int64_t nBlockTreeDBCache = nTotalCache / 8;\n-    if (nBlockTreeDBCache > (1 << 21) && !GetBoolArg(\"-txindex\", false))\n+    if (nBlockTreeDBCache > (1 << 21) && !GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n         nBlockTreeDBCache = (1 << 21); // block tree db cache shouldn't be larger than 2 MiB\n     nTotalCache -= nBlockTreeDBCache;\n     int64_t nCoinDBCache = std::min(nTotalCache / 2, (nTotalCache / 4) + (1 << 23)); // use 25%-50% of the remainder for disk cache\n@@ -1297,13 +1355,13 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                     return InitError(_(\"Incorrect or no genesis block found. Wrong datadir for network?\"));\n \n                 // Initialize the block index (no-op if non-empty database was already loaded)\n-                if (!InitBlockIndex()) {\n+                if (!InitBlockIndex(chainparams)) {\n                     strLoadError = _(\"Error initializing block database\");\n                     break;\n                 }\n \n                 // Check for changed -txindex state\n-                if (fTxIndex != GetBoolArg(\"-txindex\", false)) {\n+                if (fTxIndex != GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n                     strLoadError = _(\"You need to rebuild the database using -reindex to change -txindex\");\n                     break;\n                 }\n@@ -1332,7 +1390,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                     }\n                 }\n \n-                if (!CVerifyDB().VerifyDB(pcoinsdbview, GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n+                if (!CVerifyDB().VerifyDB(chainparams, pcoinsdbview, GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n                               GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n                     strLoadError = _(\"Corrupted block database detected\");\n                     break;\n@@ -1529,7 +1587,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 }\n             }\n         }\n-        pwalletMain->SetBroadcastTransactions(GetBoolArg(\"-walletbroadcast\", true));\n+        pwalletMain->SetBroadcastTransactions(GetBoolArg(\"-walletbroadcast\", DEFAULT_WALLETBROADCAST));\n     } // (!fDisableWallet)\n #else // ENABLE_WALLET\n     LogPrintf(\"No wallet support compiled in!\\n\");\n@@ -1556,7 +1614,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     uiInterface.InitMessage(_(\"Activating best chain...\"));\n     // scan for better chains in the block chain database, that are not yet connected in the active best chain\n     CValidationState state;\n-    if (!ActivateBestChain(state))\n+    if (!ActivateBestChain(state, chainparams))\n         strErrors << \"Failed to connect best block\";\n \n     std::vector<boost::filesystem::path> vImportFiles;\n@@ -1603,7 +1661,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     scheduler.scheduleEvery(f, nPowTargetSpacing);\n \n     // Generate coins in the background\n-    GenerateBitcoins(GetBoolArg(\"-gen\", false), GetArg(\"-genproclimit\", DEFAULT_GENERATE_THREADS), chainparams);\n+    GenerateBitcoins(GetBoolArg(\"-gen\", DEFAULT_GENERATE), GetArg(\"-genproclimit\", DEFAULT_GENERATE_THREADS), chainparams);\n \n     // ********************************************************* Step 12: finished\n "
      },
      {
        "sha": "af1b94b72a520bfc2e90e43b0ef958805d4f4072",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -23,6 +23,10 @@ bool ShutdownRequested();\n /** Interrupt threads */\n void Interrupt(boost::thread_group& threadGroup);\n void Shutdown();\n+//!Initialize the logging infrastructure\n+void InitLogging();\n+//!Parameter interaction: change current parameters depending on various rules\n+void InitParameterInteraction();\n bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler);\n \n /** The help message mode determines what help message to show */"
      },
      {
        "sha": "28ba5144e4314ccda68f367f6cafc6575fe66d27",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "6c820d49cd5fcd5aaa8cb12abb64718719885d62",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "cc8a5733671dad9b12c91ab6dec7bf06c63c206d",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d9290722e1b1aae500d8e9a0363a22a77d3233ee",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "4d9bb4fa21d5d28749aca45b4e1d4a339084eba1",
        "filename": "src/limitedmap.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/limitedmap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/limitedmap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/limitedmap.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2014 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "4d16b9f9ac7cd377e046ff3d4c83bad9c1cad174",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 755,
        "deletions": 354,
        "changes": 1109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "793737422e12dd245ac144f11225674cba670c1e",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 61,
        "deletions": 20,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -42,10 +42,18 @@ struct CNodeStateStats;\n \n /** Default for accepting alerts from the P2P network. */\n static const bool DEFAULT_ALERTS = true;\n-/** Default for DEFAULT_WHITELISTALWAYSRELAY. */\n-static const bool DEFAULT_WHITELISTALWAYSRELAY = true;\n+/** Default for DEFAULT_WHITELISTRELAY. */\n+static const bool DEFAULT_WHITELISTRELAY = true;\n+/** Default for DEFAULT_WHITELISTFORCERELAY. */\n+static const bool DEFAULT_WHITELISTFORCERELAY = true;\n /** Default for -minrelaytxfee, minimum relay fee for transactions */\n static const unsigned int DEFAULT_MIN_RELAY_TX_FEE = 1000;\n+//! -maxtxfee default\n+static const CAmount DEFAULT_TRANSACTION_MAXFEE = 0.1 * COIN;\n+//! Discourage users to set fees higher than this amount (in satoshis) per kB\n+static const CAmount HIGH_TX_FEE_PER_KB = 0.01 * COIN;\n+//! -maxtxfee will warn if called with a higher fee than this amount (in satoshis)\n+static const CAmount HIGH_MAX_TX_FEE = 100 * HIGH_TX_FEE_PER_KB;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n /** Default for -limitancestorcount, max number of in-mempool ancestors */\n@@ -56,8 +64,6 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 101;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 25;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 101;\n-/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n-static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n /** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n@@ -66,6 +72,7 @@ static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n static const unsigned int BLOCKFILE_CHUNK_SIZE = 0x1000000; // 16 MiB\n /** The pre-allocation chunk size for rev?????.dat files (since 0.8) */\n static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n+\n /** Maximum number of script-checking threads allowed */\n static const int MAX_SCRIPTCHECK_THREADS = 16;\n /** -par default (number of script-checking threads, 0 = auto) */\n@@ -88,6 +95,31 @@ static const unsigned int DATABASE_WRITE_INTERVAL = 60 * 60;\n static const unsigned int DATABASE_FLUSH_INTERVAL = 24 * 60 * 60;\n /** Maximum length of reject messages. */\n static const unsigned int MAX_REJECT_MESSAGE_LENGTH = 111;\n+/** Average delay between local address broadcasts in seconds. */\n+static const unsigned int AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL = 24 * 24 * 60;\n+/** Average delay between peer address broadcasts in seconds. */\n+static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL = 30;\n+/** Average delay between trickled inventory broadcasts in seconds.\n+ *  Blocks, whitelisted receivers, and a random 25% of transactions bypass this. */\n+static const unsigned int AVG_INVENTORY_BROADCAST_INTERVAL = 5;\n+\n+static const unsigned int DEFAULT_LIMITFREERELAY = 15;\n+static const bool DEFAULT_RELAYPRIORITY = true;\n+static const int64_t DEFAULT_MAX_TIP_AGE = 24 * 60 * 60;\n+\n+/** Default for -permitbaremultisig */\n+static const bool DEFAULT_PERMIT_BAREMULTISIG = true;\n+static const unsigned int DEFAULT_BYTES_PER_SIGOP = 20;\n+static const bool DEFAULT_CHECKPOINTS_ENABLED = true;\n+static const bool DEFAULT_TXINDEX = false;\n+static const unsigned int DEFAULT_BANSCORE_THRESHOLD = 100;\n+\n+static const bool DEFAULT_TESTSAFEMODE = false;\n+/** Default for -permitrbf */\n+static const bool DEFAULT_PERMIT_REPLACEMENT = true;\n+\n+/** Maximum number of headers to announce when relaying blocks with headers message.*/\n+static const unsigned int MAX_BLOCKS_TO_ANNOUNCE = 8;\n \n struct BlockHasher\n {\n@@ -110,11 +142,18 @@ extern int nScriptCheckThreads;\n extern bool fTxIndex;\n extern bool fIsBareMultisigStd;\n extern bool fRequireStandard;\n+extern unsigned int nBytesPerSigOp;\n extern bool fCheckBlockIndex;\n extern bool fCheckpointsEnabled;\n extern size_t nCoinCacheUsage;\n+/** A fee rate smaller than this is considered zero fee (for relaying, mining and transaction creation) */\n extern CFeeRate minRelayTxFee;\n+/** Absolute maximum transaction fee (in satoshis) used by wallet and mempool (rejects high fee in sendrawtransaction) */\n+extern CAmount maxTxFee;\n extern bool fAlerts;\n+/** If the tip is older than this (in seconds), the node is considered to be in initial block download. */\n+extern int64_t nMaxTipAge;\n+extern bool fPermitReplacement;\n \n /** Best header we've seen so far (used for getheaders queries' starting points). */\n extern CBlockIndex *pindexBestHeader;\n@@ -172,9 +211,9 @@ FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n /** Translation to a filesystem path */\n boost::filesystem::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix);\n /** Import blocks from an external file */\n-bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp = NULL);\n+bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, CDiskBlockPos *dbp = NULL);\n /** Initialize a new block tree database + block data on disk */\n-bool InitBlockIndex();\n+bool InitBlockIndex(const CChainParams& chainparams);\n /** Load the block tree and coins database from disk */\n bool LoadBlockIndex();\n /** Unload database information */\n@@ -185,21 +224,26 @@ bool ProcessMessages(CNode* pfrom);\n  * Send queued protocol messages to be sent to a give node.\n  *\n  * @param[in]   pto             The node which we are sending messages to.\n- * @param[in]   fSendTrickle    When true send the trickled data, otherwise trickle the data until true.\n  */\n-bool SendMessages(CNode* pto, bool fSendTrickle);\n+bool SendMessages(CNode* pto);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck();\n /** Try to detect Partition (network isolation) attacks against us */\n void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const CBlockIndex *const &bestHeader, int64_t nPowTargetSpacing);\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n-/** Format a string that describes several potential problems detected by the core */\n+/** Format a string that describes several potential problems detected by the core.\n+ * strFor can have three values:\n+ * - \"rpc\": get critical warnings, which should put the client in safe mode if non-empty\n+ * - \"statusbar\": get all warnings\n+ * - \"gui\": get all warnings, translated (where possible) for GUI\n+ * This function only returns the highest priority warning of the set selected by strFor.\n+ */\n std::string GetWarnings(const std::string& strFor);\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */\n bool GetTransaction(const uint256 &hash, CTransaction &tx, const Consensus::Params& params, uint256 &hashBlock, bool fAllowSlow = false);\n /** Find the best known block, and make it the tip of the block chain */\n-bool ActivateBestChain(CValidationState &state, const CBlock *pblock = NULL);\n+bool ActivateBestChain(CValidationState& state, const CChainParams& chainparams, const CBlock* pblock = NULL);\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n \n /**\n@@ -210,14 +254,14 @@ CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n  *\n  * Pruning functions are called from FlushStateToDisk when the global fCheckForPruning flag has been set.\n  * Block and undo files are deleted in lock-step (when blk00003.dat is deleted, so is rev00003.dat.)\n- * Pruning cannot take place until the longest chain is at least a certain length (100000 on mainnet, 1000 on testnet, 10 on regtest).\n+ * Pruning cannot take place until the longest chain is at least a certain length (100000 on mainnet, 1000 on testnet, 1000 on regtest).\n  * Pruning will never delete a block within a defined distance (currently 288) from the active chain's tip.\n  * The block index is updated by unsetting HAVE_DATA and HAVE_UNDO for any blocks that were stored in the deleted files.\n  * A db flag records the fact that at least some block files have been pruned.\n  *\n  * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n  */\n-void FindFilesToPrune(std::set<int>& setFilesToPrune);\n+void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight);\n \n /**\n  *  Actually unlink the specified files\n@@ -239,6 +283,8 @@ void PruneAndFlush();\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n                         bool* pfMissingInputs, bool fOverrideMempoolLimit=false, bool fRejectAbsurdFee=false);\n \n+/** Convert CValidationState to a human-readable message for logging */\n+std::string FormatStateMessage(const CValidationState &state);\n \n struct CNodeStateStats {\n     int nMisbehavior;\n@@ -273,8 +319,6 @@ struct CDiskTxPos : public CDiskBlockPos\n };\n \n \n-CAmount GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree);\n-\n /** \n  * Count ECDSA signature operations the old-fashioned (pre-0.6) way\n  * @return number of sigops this transaction's outputs will produce when spent\n@@ -383,9 +427,6 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n /** Check a block is completely valid from start to finish (only works on top of our current best block, with cs_main held) */\n bool TestBlockValidity(CValidationState& state, const CChainParams& chainparams, const CBlock& block, CBlockIndex* pindexPrev, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n \n-/** Store block on disk. If dbp is non-NULL, the file is known to already reside on disk */\n-bool AcceptBlock(const CBlock& block, CValidationState& state, CBlockIndex **pindex, bool fRequested, CDiskBlockPos* dbp);\n-\n \n class CBlockFileInfo\n {\n@@ -446,7 +487,7 @@ class CVerifyDB {\n public:\n     CVerifyDB();\n     ~CVerifyDB();\n-    bool VerifyDB(CCoinsView *coinsview, int nCheckLevel, int nCheckDepth);\n+    bool VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth);\n };\n \n /** Find the last common block between the parameter chain and a locator. */\n@@ -458,7 +499,7 @@ bool InvalidateBlock(CValidationState& state, const Consensus::Params& consensus\n /** Remove invalidity status from a block and its descendants. */\n bool ReconsiderBlock(CValidationState& state, CBlockIndex *pindex);\n \n-/** The currently-connected chain of blocks. */\n+/** The currently-connected chain of blocks (protected by cs_main). */\n extern CChain chainActive;\n \n /** Global variable that points to the active CCoinsView (protected by cs_main) */"
      },
      {
        "sha": "49760e64c78cd293a7720f036778a101aed042f9",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -46,7 +46,9 @@ template<typename X> static inline size_t DynamicUsage(const X * const &v) { ret\n static inline size_t MallocUsage(size_t alloc)\n {\n     // Measured on libc6 2.19 on Linux.\n-    if (sizeof(void*) == 8) {\n+    if (alloc == 0) {\n+        return 0;\n+    } else if (sizeof(void*) == 8) {\n         return ((alloc + 31) >> 4) << 4;\n     } else if (sizeof(void*) == 4) {\n         return ((alloc + 15) >> 3) << 3;\n@@ -74,6 +76,12 @@ static inline size_t DynamicUsage(const std::vector<X>& v)\n     return MallocUsage(v.capacity() * sizeof(X));\n }\n \n+template<unsigned int N, typename X, typename S, typename D>\n+static inline size_t DynamicUsage(const prevector<N, X, S, D>& v)\n+{\n+    return MallocUsage(v.allocated_memory());\n+}\n+\n template<typename X, typename Y>\n static inline size_t DynamicUsage(const std::set<X, Y>& s)\n {"
      },
      {
        "sha": "8447f924e4d551afeb418451d1ce5b599dec69a2",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "996cd12624fddc39dd87397936ca9b68d1688487",
        "filename": "src/merkleblock.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/merkleblock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/merkleblock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "c454c0279c2003852dacbf0e7b8dd3ad4d67ad02",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 124,
        "deletions": 184,
        "changes": 308,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,6 +10,7 @@\n #include \"chainparams.h\"\n #include \"coins.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n #include \"hash.h\"\n #include \"main.h\"\n@@ -26,6 +27,7 @@\n \n #include <boost/thread.hpp>\n #include <boost/tuple/tuple.hpp>\n+#include <queue>\n \n using namespace std;\n \n@@ -39,48 +41,18 @@ using namespace std;\n // transactions in the memory pool. When we select transactions from the\n // pool, we select by highest priority or fee rate, so we might consider\n // transactions that depend on transactions that aren't yet in the block.\n-// The COrphan class keeps track of these 'temporary orphans' while\n-// CreateBlock is figuring out which transactions to include.\n-//\n-class COrphan\n-{\n-public:\n-    const CTransaction* ptx;\n-    set<uint256> setDependsOn;\n-    CFeeRate feeRate;\n-    double dPriority;\n-\n-    COrphan(const CTransaction* ptxIn) : ptx(ptxIn), feeRate(0), dPriority(0)\n-    {\n-    }\n-};\n \n uint64_t nLastBlockTx = 0;\n uint64_t nLastBlockSize = 0;\n \n-// We want to sort transactions by priority and fee rate, so:\n-typedef boost::tuple<double, CFeeRate, const CTransaction*> TxPriority;\n-class TxPriorityCompare\n+class ScoreCompare\n {\n-    bool byFee;\n-\n public:\n-    TxPriorityCompare(bool _byFee) : byFee(_byFee) { }\n+    ScoreCompare() {}\n \n-    bool operator()(const TxPriority& a, const TxPriority& b)\n+    bool operator()(const CTxMemPool::txiter a, const CTxMemPool::txiter b)\n     {\n-        if (byFee)\n-        {\n-            if (a.get<1>() == b.get<1>())\n-                return a.get<0>() < b.get<0>();\n-            return a.get<1>() < b.get<1>();\n-        }\n-        else\n-        {\n-            if (a.get<0>() == b.get<0>())\n-                return a.get<1>() < b.get<1>();\n-            return a.get<0>() < b.get<0>();\n-        }\n+        return CompareTxMemPoolEntryByScore()(*b,*a); // Convert to less than\n     }\n };\n \n@@ -126,7 +98,7 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n \n     // Largest block you're willing to create:\n     unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n-    // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n+    // Limit to between 1K and MAX_BLOCK_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));\n \n     // How much of the block should be dedicated to high-priority transactions,\n@@ -140,6 +112,22 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n     nBlockMinSize = std::min(nBlockMaxSize, nBlockMinSize);\n \n     // Collect memory pool transactions into the block\n+    CTxMemPool::setEntries inBlock;\n+    CTxMemPool::setEntries waitSet;\n+\n+    // This vector will be sorted into a priority queue:\n+    vector<TxCoinAgePriority> vecPriority;\n+    TxCoinAgePriorityCompare pricomparer;\n+    std::map<CTxMemPool::txiter, double, CTxMemPool::CompareIteratorByHash> waitPriMap;\n+    typedef std::map<CTxMemPool::txiter, double, CTxMemPool::CompareIteratorByHash>::iterator waitPriIter;\n+    double actualPriority = -1;\n+\n+    std::priority_queue<CTxMemPool::txiter, std::vector<CTxMemPool::txiter>, ScoreCompare> clearedTxs;\n+    bool fPrintPriority = GetBoolArg(\"-printpriority\", DEFAULT_PRINTPRIORITY);\n+    uint64_t nBlockSize = 1000;\n+    uint64_t nBlockTx = 0;\n+    unsigned int nBlockSigOps = 100;\n+    int lastFewTxs = 0;\n     CAmount nFees = 0;\n \n     {\n@@ -148,157 +136,102 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n         const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n-        CCoinsViewCache view(pcoinsTip);\n-\n-        // Priority order to process transactions\n-        list<COrphan> vOrphan; // list memory doesn't move\n-        map<uint256, vector<COrphan*> > mapDependers;\n-        bool fPrintPriority = GetBoolArg(\"-printpriority\", false);\n-\n-        // This vector will be sorted into a priority queue:\n-        vector<TxPriority> vecPriority;\n-        vecPriority.reserve(mempool.mapTx.size());\n-        for (CTxMemPool::indexed_transaction_set::iterator mi = mempool.mapTx.begin();\n-             mi != mempool.mapTx.end(); ++mi)\n-        {\n-            const CTransaction& tx = mi->GetTx();\n-\n-            int64_t nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n-                                    ? nMedianTimePast\n-                                    : pblock->GetBlockTime();\n-\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, nLockTimeCutoff))\n-                continue;\n-\n-            COrphan* porphan = NULL;\n-            double dPriority = 0;\n-            CAmount nTotalIn = 0;\n-            bool fMissingInputs = false;\n-            BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-            {\n-                // Read prev transaction\n-                if (!view.HaveCoins(txin.prevout.hash))\n-                {\n-                    // This should never happen; all transactions in the memory\n-                    // pool should connect to either transactions in the chain\n-                    // or other transactions in the memory pool.\n-                    if (!mempool.mapTx.count(txin.prevout.hash))\n-                    {\n-                        LogPrintf(\"ERROR: mempool transaction missing input\\n\");\n-                        if (fDebug) assert(\"mempool transaction missing input\" == 0);\n-                        fMissingInputs = true;\n-                        if (porphan)\n-                            vOrphan.pop_back();\n-                        break;\n-                    }\n-\n-                    // Has to wait for dependencies\n-                    if (!porphan)\n-                    {\n-                        // Use list for automatic deletion\n-                        vOrphan.push_back(COrphan(&tx));\n-                        porphan = &vOrphan.back();\n-                    }\n-                    mapDependers[txin.prevout.hash].push_back(porphan);\n-                    porphan->setDependsOn.insert(txin.prevout.hash);\n-                    nTotalIn += mempool.mapTx.find(txin.prevout.hash)->GetTx().vout[txin.prevout.n].nValue;\n-                    continue;\n-                }\n-                const CCoins* coins = view.AccessCoins(txin.prevout.hash);\n-                assert(coins);\n-\n-                CAmount nValueIn = coins->vout[txin.prevout.n].nValue;\n-                nTotalIn += nValueIn;\n-\n-                int nConf = nHeight - coins->nHeight;\n-\n-                dPriority += (double)nValueIn * nConf;\n-            }\n-            if (fMissingInputs) continue;\n-\n-            // Priority is sum(valuein * age) / modified_txsize\n-            unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n-            dPriority = tx.ComputePriority(dPriority, nTxSize);\n-\n-            uint256 hash = tx.GetHash();\n-            mempool.ApplyDeltas(hash, dPriority, nTotalIn);\n \n-            CFeeRate feeRate(nTotalIn-tx.GetValueOut(), nTxSize);\n+        int64_t nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n+                                ? nMedianTimePast\n+                                : pblock->GetBlockTime();\n \n-            if (porphan)\n+        bool fPriorityBlock = nBlockPrioritySize > 0;\n+        if (fPriorityBlock) {\n+            vecPriority.reserve(mempool.mapTx.size());\n+            for (CTxMemPool::indexed_transaction_set::iterator mi = mempool.mapTx.begin();\n+                 mi != mempool.mapTx.end(); ++mi)\n             {\n-                porphan->dPriority = dPriority;\n-                porphan->feeRate = feeRate;\n+                double dPriority = mi->GetPriority(nHeight);\n+                CAmount dummy;\n+                mempool.ApplyDeltas(mi->GetTx().GetHash(), dPriority, dummy);\n+                vecPriority.push_back(TxCoinAgePriority(dPriority, mi));\n             }\n-            else\n-                vecPriority.push_back(TxPriority(dPriority, feeRate, &(mi->GetTx())));\n+            std::make_heap(vecPriority.begin(), vecPriority.end(), pricomparer);\n         }\n \n-        // Collect transactions into block\n-        uint64_t nBlockSize = 1000;\n-        uint64_t nBlockTx = 0;\n-        int nBlockSigOps = 100;\n-        bool fSortedByFee = (nBlockPrioritySize <= 0);\n+        CTxMemPool::indexed_transaction_set::nth_index<3>::type::iterator mi = mempool.mapTx.get<3>().begin();\n+        CTxMemPool::txiter iter;\n \n-        TxPriorityCompare comparer(fSortedByFee);\n-        std::make_heap(vecPriority.begin(), vecPriority.end(), comparer);\n-\n-        while (!vecPriority.empty())\n+        while (mi != mempool.mapTx.get<3>().end() || !clearedTxs.empty())\n         {\n-            // Take highest priority transaction off the priority queue:\n-            double dPriority = vecPriority.front().get<0>();\n-            CFeeRate feeRate = vecPriority.front().get<1>();\n-            const CTransaction& tx = *(vecPriority.front().get<2>());\n-\n-            std::pop_heap(vecPriority.begin(), vecPriority.end(), comparer);\n-            vecPriority.pop_back();\n-\n-            // Size limits\n-            unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n-            if (nBlockSize + nTxSize >= nBlockMaxSize)\n-                continue;\n+            bool priorityTx = false;\n+            if (fPriorityBlock && !vecPriority.empty()) { // add a tx from priority queue to fill the blockprioritysize\n+                priorityTx = true;\n+                iter = vecPriority.front().second;\n+                actualPriority = vecPriority.front().first;\n+                std::pop_heap(vecPriority.begin(), vecPriority.end(), pricomparer);\n+                vecPriority.pop_back();\n+            }\n+            else if (clearedTxs.empty()) { // add tx with next highest score\n+                iter = mempool.mapTx.project<0>(mi);\n+                mi++;\n+            }\n+            else {  // try to add a previously postponed child tx\n+                iter = clearedTxs.top();\n+                clearedTxs.pop();\n+            }\n \n-            // Legacy limits on sigOps:\n-            unsigned int nTxSigOps = GetLegacySigOpCount(tx);\n-            if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)\n-                continue;\n+            if (inBlock.count(iter))\n+                continue; // could have been added to the priorityBlock\n \n-            // Skip free transactions if we're past the minimum block size:\n-            const uint256& hash = tx.GetHash();\n-            double dPriorityDelta = 0;\n-            CAmount nFeeDelta = 0;\n-            mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n-            if (fSortedByFee && (dPriorityDelta <= 0) && (nFeeDelta <= 0) && (feeRate < ::minRelayTxFee) && (nBlockSize + nTxSize >= nBlockMinSize))\n-                continue;\n+            const CTransaction& tx = iter->GetTx();\n \n-            // Prioritise by fee once past the priority size or we run out of high-priority\n-            // transactions:\n-            if (!fSortedByFee &&\n-                ((nBlockSize + nTxSize >= nBlockPrioritySize) || !AllowFree(dPriority)))\n+            bool fOrphan = false;\n+            BOOST_FOREACH(CTxMemPool::txiter parent, mempool.GetMemPoolParents(iter))\n             {\n-                fSortedByFee = true;\n-                comparer = TxPriorityCompare(fSortedByFee);\n-                std::make_heap(vecPriority.begin(), vecPriority.end(), comparer);\n+                if (!inBlock.count(parent)) {\n+                    fOrphan = true;\n+                    break;\n+                }\n             }\n-\n-            if (!view.HaveInputs(tx))\n+            if (fOrphan) {\n+                if (priorityTx)\n+                    waitPriMap.insert(std::make_pair(iter,actualPriority));\n+                else\n+                    waitSet.insert(iter);\n                 continue;\n+            }\n \n-            CAmount nTxFees = view.GetValueIn(tx)-tx.GetValueOut();\n-\n-            nTxSigOps += GetP2SHSigOpCount(tx, view);\n-            if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)\n+            unsigned int nTxSize = iter->GetTxSize();\n+            if (fPriorityBlock &&\n+                (nBlockSize + nTxSize >= nBlockPrioritySize || !AllowFree(actualPriority))) {\n+                fPriorityBlock = false;\n+                waitPriMap.clear();\n+            }\n+            if (!priorityTx &&\n+                (iter->GetModifiedFee() < ::minRelayTxFee.GetFee(nTxSize) && nBlockSize >= nBlockMinSize)) {\n+                break;\n+            }\n+            if (nBlockSize + nTxSize >= nBlockMaxSize) {\n+                if (nBlockSize >  nBlockMaxSize - 100 || lastFewTxs > 50) {\n+                    break;\n+                }\n+                // Once we're within 1000 bytes of a full block, only look at 50 more txs\n+                // to try to fill the remaining space.\n+                if (nBlockSize > nBlockMaxSize - 1000) {\n+                    lastFewTxs++;\n+                }\n                 continue;\n+            }\n \n-            // Note that flags: we don't want to set mempool/IsStandard()\n-            // policy here, but we still have to ensure that the block we\n-            // create only contains transactions that are valid in new blocks.\n-            CValidationState state;\n-            if (!CheckInputs(tx, state, view, true, MANDATORY_SCRIPT_VERIFY_FLAGS, true))\n+            if (!IsFinalTx(tx, nHeight, nLockTimeCutoff))\n                 continue;\n \n-            UpdateCoins(tx, state, view, nHeight);\n+            unsigned int nTxSigOps = iter->GetSigOpCount();\n+            if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS) {\n+                if (nBlockSigOps > MAX_BLOCK_SIGOPS - 2) {\n+                    break;\n+                }\n+                continue;\n+            }\n \n+            CAmount nTxFees = iter->GetFee();\n             // Added\n             pblock->vtx.push_back(tx);\n             pblocktemplate->vTxFees.push_back(nTxFees);\n@@ -310,31 +243,37 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n \n             if (fPrintPriority)\n             {\n+                double dPriority = iter->GetPriority(nHeight);\n+                CAmount dummy;\n+                mempool.ApplyDeltas(tx.GetHash(), dPriority, dummy);\n                 LogPrintf(\"priority %.1f fee %s txid %s\\n\",\n-                    dPriority, feeRate.ToString(), tx.GetHash().ToString());\n+                          dPriority , CFeeRate(iter->GetModifiedFee(), nTxSize).ToString(), tx.GetHash().ToString());\n             }\n \n+            inBlock.insert(iter);\n+\n             // Add transactions that depend on this one to the priority queue\n-            if (mapDependers.count(hash))\n+            BOOST_FOREACH(CTxMemPool::txiter child, mempool.GetMemPoolChildren(iter))\n             {\n-                BOOST_FOREACH(COrphan* porphan, mapDependers[hash])\n-                {\n-                    if (!porphan->setDependsOn.empty())\n-                    {\n-                        porphan->setDependsOn.erase(hash);\n-                        if (porphan->setDependsOn.empty())\n-                        {\n-                            vecPriority.push_back(TxPriority(porphan->dPriority, porphan->feeRate, porphan->ptx));\n-                            std::push_heap(vecPriority.begin(), vecPriority.end(), comparer);\n-                        }\n+                if (fPriorityBlock) {\n+                    waitPriIter wpiter = waitPriMap.find(child);\n+                    if (wpiter != waitPriMap.end()) {\n+                        vecPriority.push_back(TxCoinAgePriority(wpiter->second,child));\n+                        std::push_heap(vecPriority.begin(), vecPriority.end(), pricomparer);\n+                        waitPriMap.erase(wpiter);\n+                    }\n+                }\n+                else {\n+                    if (waitSet.count(child)) {\n+                        clearedTxs.push(child);\n+                        waitSet.erase(child);\n                     }\n                 }\n             }\n         }\n-\n         nLastBlockTx = nBlockTx;\n         nLastBlockSize = nBlockSize;\n-        LogPrintf(\"CreateNewBlock(): total size %u\\n\", nBlockSize);\n+        LogPrintf(\"CreateNewBlock(): total size %u txs: %u fees: %ld sigops %d\\n\", nBlockSize, nBlockTx, nFees, nBlockSigOps);\n \n         // Compute final coinbase transaction.\n         txNew.vout[0].nValue = nFees + GetBlockSubsidy(nHeight, chainparams.GetConsensus());\n@@ -350,8 +289,9 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n         pblocktemplate->vTxSigOps[0] = GetLegacySigOpCount(pblock->vtx[0]);\n \n         CValidationState state;\n-        if (!TestBlockValidity(state, chainparams, *pblock, pindexPrev, false, false))\n-            throw std::runtime_error(\"CreateNewBlock(): TestBlockValidity failed\");\n+        if (!TestBlockValidity(state, chainparams, *pblock, pindexPrev, false, false)) {\n+            throw std::runtime_error(strprintf(\"%s: TestBlockValidity failed: %s\", __func__, FormatStateMessage(state)));\n+        }\n     }\n \n     return pblocktemplate.release();\n@@ -373,7 +313,7 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n     pblock->vtx[0] = txCoinbase;\n-    pblock->hashMerkleRoot = pblock->ComputeMerkleRoot();\n+    pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n }\n \n //////////////////////////////////////////////////////////////////////////////"
      },
      {
        "sha": "512494198b7c106485f424282b38449cfee5a62a",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -17,8 +17,11 @@ class CScript;\n class CWallet;\n namespace Consensus { struct Params; };\n \n+static const bool DEFAULT_GENERATE = false;\n static const int DEFAULT_GENERATE_THREADS = 1;\n \n+static const bool DEFAULT_PRINTPRIORITY = false;\n+\n struct CBlockTemplate\n {\n     CBlock block;"
      },
      {
        "sha": "398aa173bf1e3c788e35a388116becc16d7ba201",
        "filename": "src/mruset.h",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/mruset.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/mruset.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mruset.h?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -1,65 +0,0 @@\n-// Copyright (c) 2012-2015 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_MRUSET_H\n-#define BITCOIN_MRUSET_H\n-\n-#include <set>\n-#include <vector>\n-#include <utility>\n-\n-/** STL-like set container that only keeps the most recent N elements. */\n-template <typename T>\n-class mruset\n-{\n-public:\n-    typedef T key_type;\n-    typedef T value_type;\n-    typedef typename std::set<T>::iterator iterator;\n-    typedef typename std::set<T>::const_iterator const_iterator;\n-    typedef typename std::set<T>::size_type size_type;\n-\n-protected:\n-    std::set<T> set;\n-    std::vector<iterator> order;\n-    size_type first_used;\n-    size_type first_unused;\n-    const size_type nMaxSize;\n-\n-public:\n-    mruset(size_type nMaxSizeIn = 1) : nMaxSize(nMaxSizeIn) { clear(); }\n-    iterator begin() const { return set.begin(); }\n-    iterator end() const { return set.end(); }\n-    size_type size() const { return set.size(); }\n-    bool empty() const { return set.empty(); }\n-    iterator find(const key_type& k) const { return set.find(k); }\n-    size_type count(const key_type& k) const { return set.count(k); }\n-    void clear()\n-    {\n-        set.clear();\n-        order.assign(nMaxSize, set.end());\n-        first_used = 0;\n-        first_unused = 0;\n-    }\n-    bool inline friend operator==(const mruset<T>& a, const mruset<T>& b) { return a.set == b.set; }\n-    bool inline friend operator==(const mruset<T>& a, const std::set<T>& b) { return a.set == b; }\n-    bool inline friend operator<(const mruset<T>& a, const mruset<T>& b) { return a.set < b.set; }\n-    std::pair<iterator, bool> insert(const key_type& x)\n-    {\n-        std::pair<iterator, bool> ret = set.insert(x);\n-        if (ret.second) {\n-            if (set.size() == nMaxSize + 1) {\n-                set.erase(order[first_used]);\n-                order[first_used] = set.end();\n-                if (++first_used == nMaxSize) first_used = 0;\n-            }\n-            order[first_unused] = ret.first;\n-            if (++first_unused == nMaxSize) first_unused = 0;\n-        }\n-        return ret;\n-    }\n-    size_type max_size() const { return nMaxSize; }\n-};\n-\n-#endif // BITCOIN_MRUSET_H"
      },
      {
        "sha": "04bf71509b2b1358e3f0e95d22a2ba80fefa8a50",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 85,
        "deletions": 50,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -36,7 +36,9 @@\n #include <boost/filesystem.hpp>\n #include <boost/thread.hpp>\n \n-// Dump addresses to peers.dat every 15 minutes (900s)\n+#include <math.h>\n+\n+// Dump addresses to peers.dat and banlist.dat every 15 minutes (900s)\n #define DUMP_ADDRESSES_INTERVAL 900\n \n #if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n@@ -67,6 +69,8 @@ namespace {\n     };\n }\n \n+const static std::string NET_MESSAGE_COMMAND_OTHER = \"*other*\";\n+\n //\n // Global state variables\n //\n@@ -459,7 +463,7 @@ void CNode::PushVersion()\n         LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), addrYou.ToString(), id);\n     else\n         LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), id);\n-    PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n+    PushMessage(NetMsgType::VERSION, PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n                 nLocalHostNonce, strSubVersion, nBestHeight, !GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY));\n }\n \n@@ -521,12 +525,11 @@ void CNode::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t banti\n     banEntry.banReason = banReason;\n     if (bantimeoffset <= 0)\n     {\n-        bantimeoffset = GetArg(\"-bantime\", 60*60*24); // Default 24-hour ban\n+        bantimeoffset = GetArg(\"-bantime\", DEFAULT_MISBEHAVING_BANTIME);\n         sinceUnixEpoch = false;\n     }\n     banEntry.nBanUntil = (sinceUnixEpoch ? 0 : GetTime() )+bantimeoffset;\n \n-\n     LOCK(cs_setBanned);\n     if (setBanned[subNet].nBanUntil < banEntry.nBanUntil)\n         setBanned[subNet] = banEntry;\n@@ -570,11 +573,13 @@ void CNode::SweepBanned()\n     banmap_t::iterator it = setBanned.begin();\n     while(it != setBanned.end())\n     {\n+        CSubNet subNet = (*it).first;\n         CBanEntry banEntry = (*it).second;\n         if(now > banEntry.nBanUntil)\n         {\n             setBanned.erase(it++);\n             setBannedIsDirty = true;\n+            LogPrint(\"net\", \"%s: Removed banned node ip/subnet from banlist.dat: %s\\n\", __func__, subNet.ToString());\n         }\n         else\n             ++it;\n@@ -628,7 +633,9 @@ void CNode::copyStats(CNodeStats &stats)\n     X(fInbound);\n     X(nStartingHeight);\n     X(nSendBytes);\n+    X(mapSendBytesPerMsgCmd);\n     X(nRecvBytes);\n+    X(mapRecvBytesPerMsgCmd);\n     X(fWhitelisted);\n \n     // It is common for nodes with good ping times to suddenly become lagged,\n@@ -683,6 +690,15 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes)\n         nBytes -= handled;\n \n         if (msg.complete()) {\n+\n+            //store received bytes per message command\n+            //to prevent a memory DOS, only allow valid commands\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.hdr.pchCommand);\n+            if (i == mapRecvBytesPerMsgCmd.end())\n+                i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n+            assert(i != mapRecvBytesPerMsgCmd.end());\n+            i->second += msg.hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+\n             msg.nTime = GetTimeMicros();\n             messageHandlerCondition.notify_one();\n         }\n@@ -883,8 +899,6 @@ static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n                 continue;\n             if (node->fDisconnect)\n                 continue;\n-            if (node->addr.IsLocal())\n-                continue;\n             vEvictionCandidates.push_back(CNodeRef(node));\n         }\n     }\n@@ -915,30 +929,34 @@ static bool AttemptToEvictConnection(bool fPreferNewConnection) {\n \n     if (vEvictionCandidates.empty()) return false;\n \n-    // Identify the network group with the most connections\n+    // Identify the network group with the most connections and youngest member.\n+    // (vEvictionCandidates is already sorted by reverse connect time)\n     std::vector<unsigned char> naMostConnections;\n     unsigned int nMostConnections = 0;\n+    int64_t nMostConnectionsTime = 0;\n     std::map<std::vector<unsigned char>, std::vector<CNodeRef> > mapAddrCounts;\n     BOOST_FOREACH(const CNodeRef &node, vEvictionCandidates) {\n         mapAddrCounts[node->addr.GetGroup()].push_back(node);\n+        int64_t grouptime = mapAddrCounts[node->addr.GetGroup()][0]->nTimeConnected;\n+        size_t groupsize = mapAddrCounts[node->addr.GetGroup()].size();\n \n-        if (mapAddrCounts[node->addr.GetGroup()].size() > nMostConnections) {\n-            nMostConnections = mapAddrCounts[node->addr.GetGroup()].size();\n+        if (groupsize > nMostConnections || (groupsize == nMostConnections && grouptime > nMostConnectionsTime)) {\n+            nMostConnections = groupsize;\n+            nMostConnectionsTime = grouptime;\n             naMostConnections = node->addr.GetGroup();\n         }\n     }\n \n     // Reduce to the network group with the most connections\n     vEvictionCandidates = mapAddrCounts[naMostConnections];\n \n-    // Do not disconnect peers if there is only 1 connection from their network group\n+    // Do not disconnect peers if there is only one unprotected connection from their network group.\n     if (vEvictionCandidates.size() <= 1)\n         // unless we prefer the new connection (for whitelisted peers)\n         if (!fPreferNewConnection)\n             return false;\n \n-    // Disconnect the most recent connection from the network group with the most connections\n-    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    // Disconnect from the network group with the most connections\n     vEvictionCandidates[0]->fDisconnect = true;\n \n     return true;\n@@ -1356,7 +1374,7 @@ void ThreadMapPort()\n                     LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n                         port, port, lanaddr, r, strupnperror(r));\n                 else\n-                    LogPrintf(\"UPnP Port Mapping successful.\\n\");;\n+                    LogPrintf(\"UPnP Port Mapping successful.\\n\");\n \n                 MilliSleep(20*60*1000); // Refresh every 20 minutes\n             }\n@@ -1414,7 +1432,7 @@ void ThreadDNSAddressSeed()\n {\n     // goal: only query DNS seeds if address need is acute\n     if ((addrman.size() > 0) &&\n-        (!GetBoolArg(\"-forcednsseed\", false))) {\n+        (!GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED))) {\n         MilliSleep(11 * 1000);\n \n         LOCK(cs_vNodes);\n@@ -1478,12 +1496,7 @@ void DumpAddresses()\n void DumpData()\n {\n     DumpAddresses();\n-\n-    if (CNode::BannedSetIsDirty())\n-    {\n-        DumpBanlist();\n-        CNode::SetBannedSetDirty(false);\n-    }\n+    DumpBanlist();\n }\n \n void static ProcessOneShot()\n@@ -1721,11 +1734,6 @@ void ThreadMessageHandler()\n             }\n         }\n \n-        // Poll the connected nodes for messages\n-        CNode* pnodeTrickle = NULL;\n-        if (!vNodesCopy.empty())\n-            pnodeTrickle = vNodesCopy[GetRand(vNodesCopy.size())];\n-\n         bool fSleep = true;\n \n         BOOST_FOREACH(CNode* pnode, vNodesCopy)\n@@ -1756,7 +1764,7 @@ void ThreadMessageHandler()\n             {\n                 TRY_LOCK(pnode->cs_vSend, lockSend);\n                 if (lockSend)\n-                    g_signals.SendMessages(pnode, pnode == pnodeTrickle || pnode->fWhitelisted);\n+                    g_signals.SendMessages(pnode);\n             }\n             boost::this_thread::interruption_point();\n         }\n@@ -1929,31 +1937,36 @@ void static Discover(boost::thread_group& threadGroup)\n void StartNode(boost::thread_group& threadGroup, CScheduler& scheduler)\n {\n     uiInterface.InitMessage(_(\"Loading addresses...\"));\n-    // Load addresses for peers.dat\n+    // Load addresses from peers.dat\n     int64_t nStart = GetTimeMillis();\n     {\n         CAddrDB adb;\n-        if (!adb.Read(addrman))\n+        if (adb.Read(addrman))\n+            LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman.size(), GetTimeMillis() - nStart);\n+        else\n             LogPrintf(\"Invalid or missing peers.dat; recreating\\n\");\n     }\n \n-    //try to read stored banlist\n+    uiInterface.InitMessage(_(\"Loading banlist...\"));\n+    // Load addresses from banlist.dat\n+    nStart = GetTimeMillis();\n     CBanDB bandb;\n     banmap_t banmap;\n-    if (!bandb.Read(banmap))\n+    if (bandb.Read(banmap)) {\n+        CNode::SetBanned(banmap); // thread save setter\n+        CNode::SetBannedSetDirty(false); // no need to write down, just read data\n+        CNode::SweepBanned(); // sweep out unused entries\n+\n+        LogPrint(\"net\", \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+            banmap.size(), GetTimeMillis() - nStart);\n+    } else\n         LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n \n-    CNode::SetBanned(banmap); //thread save setter\n-    CNode::SetBannedSetDirty(false); //no need to write down just read or nonexistent data\n-    CNode::SweepBanned(); //sweap out unused entries\n-\n-    LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\",\n-           addrman.size(), GetTimeMillis() - nStart);\n     fAddressesInitialized = true;\n \n     if (semOutbound == NULL) {\n         // initialize semaphore\n-        int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, nMaxConnections);\n+        int nMaxOutbound = std::min(MAX_OUTBOUND_CONNECTIONS, nMaxConnections);\n         semOutbound = new CSemaphore(nMaxOutbound);\n     }\n \n@@ -2168,7 +2181,7 @@ bool CNode::OutboundTargetReached(bool historicalBlockServingLimit)\n \n     if (historicalBlockServingLimit)\n     {\n-        // keep a large enought buffer to at least relay each block once\n+        // keep a large enough buffer to at least relay each block once\n         uint64_t timeLeftInCycle = GetMaxOutboundTimeLeftInCycle();\n         uint64_t buffer = timeLeftInCycle / 600 * MAX_BLOCK_SIZE;\n         if (buffer >= nMaxOutboundLimit || nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit - buffer)\n@@ -2337,13 +2350,13 @@ bool CAddrDB::Read(CAddrMan& addr)\n     return true;\n }\n \n-unsigned int ReceiveFloodSize() { return 1000*GetArg(\"-maxreceivebuffer\", 5*1000); }\n-unsigned int SendBufferSize() { return 1000*GetArg(\"-maxsendbuffer\", 1*1000); }\n+unsigned int ReceiveFloodSize() { return 1000*GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER); }\n+unsigned int SendBufferSize() { return 1000*GetArg(\"-maxsendbuffer\", DEFAULT_MAXSENDBUFFER); }\n \n CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNameIn, bool fInboundIn) :\n     ssSend(SER_NETWORK, INIT_PROTO_VERSION),\n     addrKnown(5000, 0.001),\n-    setInventoryKnown(SendBufferSize() / 1000)\n+    filterInventoryKnown(50000, 0.000001)\n {\n     nServices = 0;\n     hSocket = hSocketIn;\n@@ -2370,14 +2383,21 @@ CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNa\n     nSendOffset = 0;\n     hashContinue = uint256();\n     nStartingHeight = -1;\n+    filterInventoryKnown.reset();\n     fGetAddr = false;\n+    nNextLocalAddrSend = 0;\n+    nNextAddrSend = 0;\n+    nNextInvSend = 0;\n     fRelayTxes = false;\n     pfilter = new CBloomFilter();\n     nPingNonceSent = 0;\n     nPingUsecStart = 0;\n     nPingUsecTime = 0;\n     fPingQueued = false;\n     nMinPingUsecTime = std::numeric_limits<int64_t>::max();\n+    BOOST_FOREACH(const std::string &msg, getAllNetMessageTypes())\n+        mapRecvBytesPerMsgCmd[msg] = 0;\n+    mapRecvBytesPerMsgCmd[NET_MESSAGE_COMMAND_OTHER] = 0;\n \n     {\n         LOCK(cs_nLastNodeId);\n@@ -2408,8 +2428,12 @@ CNode::~CNode()\n \n void CNode::AskFor(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ)\n+    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+        return;\n+    // a peer may not have multiple non-responded queue positions for a single inv item\n+    if (!setAskFor.insert(inv.hash).second)\n         return;\n+\n     // We're using mapAskFor as a priority queue,\n     // the key is the earliest time the request can be sent\n     int64_t nRequestTime;\n@@ -2453,7 +2477,7 @@ void CNode::AbortMessage() UNLOCK_FUNCTION(cs_vSend)\n     LogPrint(\"net\", \"(aborted)\\n\");\n }\n \n-void CNode::EndMessage() UNLOCK_FUNCTION(cs_vSend)\n+void CNode::EndMessage(const char* pszCommand) UNLOCK_FUNCTION(cs_vSend)\n {\n     // The -*messagestest options are intentionally not documented in the help message,\n     // since they are only used during development to debug the networking code and are\n@@ -2476,6 +2500,9 @@ void CNode::EndMessage() UNLOCK_FUNCTION(cs_vSend)\n     unsigned int nSize = ssSend.size() - CMessageHeader::HEADER_SIZE;\n     WriteLE32((uint8_t*)&ssSend[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n \n+    //log total amount of bytes per command\n+    mapSendBytesPerMsgCmd[std::string(pszCommand)] += nSize + CMessageHeader::HEADER_SIZE;\n+\n     // Set the checksum\n     uint256 hash = Hash(ssSend.begin() + CMessageHeader::HEADER_SIZE, ssSend.end());\n     unsigned int nChecksum = 0;\n@@ -2586,28 +2613,36 @@ bool CBanDB::Read(banmap_t& banSet)\n         // ... verify the network matches ours\n         if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n             return error(\"%s: Invalid network magic number\", __func__);\n-        \n+\n         // de-serialize address data into one CAddrMan object\n         ssBanlist >> banSet;\n     }\n     catch (const std::exception& e) {\n         return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n     }\n-    \n+\n     return true;\n }\n \n void DumpBanlist()\n {\n-    int64_t nStart = GetTimeMillis();\n+    CNode::SweepBanned(); // clean unused entries (if bantime has expired)\n \n-    CNode::SweepBanned(); //clean unused entries (if bantime has expired)\n+    if (!CNode::BannedSetIsDirty())\n+        return;\n+\n+    int64_t nStart = GetTimeMillis();\n \n     CBanDB bandb;\n     banmap_t banmap;\n     CNode::GetBanned(banmap);\n-    bandb.Write(banmap);\n+    if (bandb.Write(banmap))\n+        CNode::SetBannedSetDirty(false);\n \n     LogPrint(\"net\", \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n-             banmap.size(), GetTimeMillis() - nStart);\n+        banmap.size(), GetTimeMillis() - nStart);\n+}\n+\n+int64_t PoissonNextSend(int64_t nNow, int average_interval_seconds) {\n+    return nNow + (int64_t)(log1p(GetRand(1ULL << 48) * -0.0000000000000035527136788 /* -1/2^48 */) * average_interval_seconds * -1000000.0 + 0.5);\n }"
      },
      {
        "sha": "5f249c445aa1372a68f95ba9f9cab16e5289f66b",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 49,
        "deletions": 18,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,7 +9,6 @@\n #include \"bloom.h\"\n #include \"compat.h\"\n #include \"limitedmap.h\"\n-#include \"mruset.h\"\n #include \"netbase.h\"\n #include \"protocol.h\"\n #include \"random.h\"\n@@ -58,13 +57,22 @@ static const bool DEFAULT_UPNP = false;\n #endif\n /** The maximum number of entries in mapAskFor */\n static const size_t MAPASKFOR_MAX_SZ = MAX_INV_SZ;\n+/** The maximum number of entries in setAskFor (larger due to getdata latency)*/\n+static const size_t SETASKFOR_MAX_SZ = 2 * MAX_INV_SZ;\n /** The maximum number of peer connections to maintain. */\n static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n /** The default for -maxuploadtarget. 0 = Unlimited */\n static const uint64_t DEFAULT_MAX_UPLOAD_TARGET = 0;\n /** Default for blocks only*/\n static const bool DEFAULT_BLOCKSONLY = false;\n \n+static const bool DEFAULT_FORCEDNSSEED = false;\n+static const size_t DEFAULT_MAXRECEIVEBUFFER = 5 * 1000;\n+static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n+\n+// NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n+static const unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n+\n unsigned int ReceiveFloodSize();\n unsigned int SendBufferSize();\n \n@@ -105,7 +113,7 @@ struct CNodeSignals\n {\n     boost::signals2::signal<int ()> GetHeight;\n     boost::signals2::signal<bool (CNode*), CombinerAll> ProcessMessages;\n-    boost::signals2::signal<bool (CNode*, bool), CombinerAll> SendMessages;\n+    boost::signals2::signal<bool (CNode*), CombinerAll> SendMessages;\n     boost::signals2::signal<void (NodeId, const CNode*)> InitializeNode;\n     boost::signals2::signal<void (NodeId)> FinalizeNode;\n };\n@@ -174,6 +182,7 @@ struct LocalServiceInfo {\n \n extern CCriticalSection cs_mapLocalHost;\n extern std::map<CNetAddr, LocalServiceInfo> mapLocalHost;\n+typedef std::map<std::string, uint64_t> mapMsgCmdSize; //command, total bytes\n \n class CNodeStats\n {\n@@ -191,7 +200,9 @@ class CNodeStats\n     bool fInbound;\n     int nStartingHeight;\n     uint64_t nSendBytes;\n+    mapMsgCmdSize mapSendBytesPerMsgCmd;\n     uint64_t nRecvBytes;\n+    mapMsgCmdSize mapRecvBytesPerMsgCmd;\n     bool fWhitelisted;\n     double dPingTime;\n     double dPingWait;\n@@ -365,6 +376,9 @@ class CNode\n     static std::vector<CSubNet> vWhitelistedRange;\n     static CCriticalSection cs_vWhitelistedRange;\n \n+    mapMsgCmdSize mapSendBytesPerMsgCmd;\n+    mapMsgCmdSize mapRecvBytesPerMsgCmd;\n+\n     // Basic fuzz-testing\n     void Fuzz(int nChance); // modifies ssSend\n \n@@ -377,12 +391,19 @@ class CNode\n     CRollingBloomFilter addrKnown;\n     bool fGetAddr;\n     std::set<uint256> setKnown;\n+    int64_t nNextAddrSend;\n+    int64_t nNextLocalAddrSend;\n \n     // inventory based relay\n-    mruset<CInv> setInventoryKnown;\n+    CRollingBloomFilter filterInventoryKnown;\n     std::vector<CInv> vInventoryToSend;\n     CCriticalSection cs_inventory;\n+    std::set<uint256> setAskFor;\n     std::multimap<int64_t, CInv> mapAskFor;\n+    int64_t nNextInvSend;\n+    // Used for headers announcements - unfiltered blocks to relay\n+    // Also protected by cs_inventory\n+    std::vector<uint256> vBlockHashesToAnnounce;\n \n     // Ping time measurement:\n     // The pong reply we're expecting, or 0 if no pong expected.\n@@ -484,19 +505,26 @@ class CNode\n     {\n         {\n             LOCK(cs_inventory);\n-            setInventoryKnown.insert(inv);\n+            filterInventoryKnown.insert(inv.hash);\n         }\n     }\n \n     void PushInventory(const CInv& inv)\n     {\n         {\n             LOCK(cs_inventory);\n-            if (!setInventoryKnown.count(inv))\n-                vInventoryToSend.push_back(inv);\n+            if (inv.type == MSG_TX && filterInventoryKnown.contains(inv.hash))\n+                return;\n+            vInventoryToSend.push_back(inv);\n         }\n     }\n \n+    void PushBlockHash(const uint256 &hash)\n+    {\n+        LOCK(cs_inventory);\n+        vBlockHashesToAnnounce.push_back(hash);\n+    }\n+\n     void AskFor(const CInv& inv);\n \n     // TODO: Document the postcondition of this function.  Is cs_vSend locked?\n@@ -506,7 +534,7 @@ class CNode\n     void AbortMessage() UNLOCK_FUNCTION(cs_vSend);\n \n     // TODO: Document the precondition of this function.  Is cs_vSend locked?\n-    void EndMessage() UNLOCK_FUNCTION(cs_vSend);\n+    void EndMessage(const char* pszCommand) UNLOCK_FUNCTION(cs_vSend);\n \n     void PushVersion();\n \n@@ -516,7 +544,7 @@ class CNode\n         try\n         {\n             BeginMessage(pszCommand);\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -532,7 +560,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -548,7 +576,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -564,7 +592,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -580,7 +608,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -596,7 +624,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -612,7 +640,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5 << a6;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -628,7 +656,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5 << a6 << a7;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -644,7 +672,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5 << a6 << a7 << a8;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -660,7 +688,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5 << a6 << a7 << a8 << a9;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -766,4 +794,7 @@ class CBanDB\n \n void DumpBanlist();\n \n+/** Return a timestamp in the future (in microseconds) for exponentially distributed events. */\n+int64_t PoissonNextSend(int64_t nNow, int average_interval_seconds);\n+\n #endif // BITCOIN_NET_H"
      },
      {
        "sha": "7f79dd02c605209849d80719c3a5d3918b69c691",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -40,7 +40,7 @@ static proxyType proxyInfo[NET_MAX];\n static proxyType nameProxy;\n static CCriticalSection cs_proxyInfos;\n int nConnectTimeout = DEFAULT_CONNECT_TIMEOUT;\n-bool fNameLookup = false;\n+bool fNameLookup = DEFAULT_NAME_LOOKUP;\n \n static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n \n@@ -140,7 +140,7 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n         return false;\n \n     do {\n-        // Should set the timeout limit to a resonable value to avoid\n+        // Should set the timeout limit to a reasonable value to avoid\n         // generating unnecessary checking call during the polling loop,\n         // while it can still response to stop request quick enough.\n         // 2 seconds looks fine in our situation."
      },
      {
        "sha": "1db66ac27f2da2e9069f0dbc16a53ab43ee205ab",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -19,8 +19,10 @@\n extern int nConnectTimeout;\n extern bool fNameLookup;\n \n-/** -timeout default */\n+//! -timeout default\n static const int DEFAULT_CONNECT_TIMEOUT = 5000;\n+//! -dns default\n+static const int DEFAULT_NAME_LOOKUP = true;\n \n #ifdef WIN32\n // In MSVC, this is defined as a macro, undefine it to prevent a compile and link error"
      },
      {
        "sha": "ff16cc9aa8ae87863230316058c4385ca5e93eeb",
        "filename": "src/noui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/noui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/noui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2013 The Bitcoin Core developers\n+// Copyright (c) 2013-2014 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "de3c060d6a6d9e5187fa18572694cbf8328e9d76",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 1,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -4,6 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"policy/fees.h\"\n+#include \"policy/policy.h\"\n \n #include \"amount.h\"\n #include \"primitives/transaction.h\"\n@@ -86,7 +87,7 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n     int maxbucketindex = buckets.size() - 1;\n \n     // requireGreater means we are looking for the lowest fee/priority such that all higher\n-    // values pass, so we start at maxbucketindex (highest fee) and look at succesively\n+    // values pass, so we start at maxbucketindex (highest fee) and look at successively\n     // smaller buckets until we reach failure.  Otherwise, we are looking for the highest\n     // fee/priority such that all lower values fail, and we go in the opposite direction.\n     unsigned int startbucket = requireGreater ? maxbucketindex : 0;\n@@ -504,6 +505,33 @@ CFeeRate CBlockPolicyEstimator::estimateFee(int confTarget)\n     return CFeeRate(median);\n }\n \n+CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool)\n+{\n+    if (answerFoundAtTarget)\n+        *answerFoundAtTarget = confTarget;\n+    // Return failure if trying to analyze a target we're not tracking\n+    if (confTarget <= 0 || (unsigned int)confTarget > feeStats.GetMaxConfirms())\n+        return CFeeRate(0);\n+\n+    double median = -1;\n+    while (median < 0 && (unsigned int)confTarget <= feeStats.GetMaxConfirms()) {\n+        median = feeStats.EstimateMedianVal(confTarget++, SUFFICIENT_FEETXS, MIN_SUCCESS_PCT, true, nBestSeenHeight);\n+    }\n+\n+    if (answerFoundAtTarget)\n+        *answerFoundAtTarget = confTarget - 1;\n+\n+    // If mempool is limiting txs , return at least the min fee from the mempool\n+    CAmount minPoolFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n+    if (minPoolFee > 0 && minPoolFee > median)\n+        return CFeeRate(minPoolFee);\n+\n+    if (median < 0)\n+        return CFeeRate(0);\n+\n+    return CFeeRate(median);\n+}\n+\n double CBlockPolicyEstimator::estimatePriority(int confTarget)\n {\n     // Return failure if trying to analyze a target we're not tracking\n@@ -513,6 +541,30 @@ double CBlockPolicyEstimator::estimatePriority(int confTarget)\n     return priStats.EstimateMedianVal(confTarget, SUFFICIENT_PRITXS, MIN_SUCCESS_PCT, true, nBestSeenHeight);\n }\n \n+double CBlockPolicyEstimator::estimateSmartPriority(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool)\n+{\n+    if (answerFoundAtTarget)\n+        *answerFoundAtTarget = confTarget;\n+    // Return failure if trying to analyze a target we're not tracking\n+    if (confTarget <= 0 || (unsigned int)confTarget > priStats.GetMaxConfirms())\n+        return -1;\n+\n+    // If mempool is limiting txs, no priority txs are allowed\n+    CAmount minPoolFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n+    if (minPoolFee > 0)\n+        return INF_PRIORITY;\n+\n+    double median = -1;\n+    while (median < 0 && (unsigned int)confTarget <= priStats.GetMaxConfirms()) {\n+        median = priStats.EstimateMedianVal(confTarget++, SUFFICIENT_PRITXS, MIN_SUCCESS_PCT, true, nBestSeenHeight);\n+    }\n+\n+    if (answerFoundAtTarget)\n+        *answerFoundAtTarget = confTarget - 1;\n+\n+    return median;\n+}\n+\n void CBlockPolicyEstimator::Write(CAutoFile& fileout)\n {\n     fileout << nBestSeenHeight;"
      },
      {
        "sha": "3fa31c39e745b194af4fd964b13b1c382a67e670",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 18,
        "deletions": 5,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -15,6 +15,7 @@\n class CAutoFile;\n class CFeeRate;\n class CTxMemPoolEntry;\n+class CTxMemPool;\n \n /** \\class CBlockPolicyEstimator\n  * The BlockPolicyEstimator is used for estimating the fee or priority needed\n@@ -28,7 +29,7 @@ class CTxMemPoolEntry;\n  * included in blocks before transactions of lower fee/priority.   So for\n  * example if you wanted to know what fee you should put on a transaction to\n  * be included in a block within the next 5 blocks, you would start by looking\n- * at the bucket with with the highest fee transactions and verifying that a\n+ * at the bucket with the highest fee transactions and verifying that a\n  * sufficiently high percentage of them were confirmed within 5 blocks and\n  * then you would look at the next highest fee bucket, and so on, stopping at\n  * the last bucket to pass the test.   The average fee of transactions in this\n@@ -86,13 +87,13 @@ class TxConfirmStats\n     // Count the total # of txs in each bucket\n     // Track the historical moving average of this total over blocks\n     std::vector<double> txCtAvg;\n-    // and calcuate the total for the current block to update the moving average\n+    // and calculate the total for the current block to update the moving average\n     std::vector<int> curBlockTxCt;\n \n     // Count the total # of txs confirmed within Y blocks in each bucket\n     // Track the historical moving average of theses totals over blocks\n     std::vector<std::vector<double> > confAvg; // confAvg[Y][X]\n-    // and calcuate the totals for the current block to update the moving averages\n+    // and calculate the totals for the current block to update the moving averages\n     std::vector<std::vector<int> > curBlockConf; // curBlockConf[Y][X]\n \n     // Sum the total priority/fee of all tx's in each bucket\n@@ -182,8 +183,8 @@ static const unsigned int MAX_BLOCK_CONFIRMS = 25;\n /** Decay of .998 is a half-life of 346 blocks or about 2.4 days */\n static const double DEFAULT_DECAY = .998;\n \n-/** Require greater than 85% of X fee transactions to be confirmed within Y blocks for X to be big enough */\n-static const double MIN_SUCCESS_PCT = .85;\n+/** Require greater than 95% of X fee transactions to be confirmed within Y blocks for X to be big enough */\n+static const double MIN_SUCCESS_PCT = .95;\n static const double UNLIKELY_PCT = .5;\n \n /** Require an avg of 1 tx in the combined fee bucket per block to have stat significance */\n@@ -242,9 +243,21 @@ class CBlockPolicyEstimator\n     /** Return a fee estimate */\n     CFeeRate estimateFee(int confTarget);\n \n+    /** Estimate fee rate needed to get be included in a block within\n+     *  confTarget blocks. If no answer can be given at confTarget, return an\n+     *  estimate at the lowest target where one can be given.\n+     */\n+    CFeeRate estimateSmartFee(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool);\n+\n     /** Return a priority estimate */\n     double estimatePriority(int confTarget);\n \n+    /** Estimate priority needed to get be included in a block within\n+     *  confTarget blocks. If no answer can be given at confTarget, return an\n+     *  estimate at the lowest target where one can be given.\n+     */\n+    double estimateSmartPriority(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool);\n+\n     /** Write estimation data to a file */\n     void Write(CAutoFile& fileout);\n "
      },
      {
        "sha": "332abc430e1165a00f6e8f15c38e27ad3b6524cf",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 36,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin developers\n+// Copyright (c) 2009-2015 The Bitcoin developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -23,9 +23,6 @@\n      * 2. P2SH scripts with a crazy number of expensive\n      *    CHECKSIG/CHECKMULTISIG operations\n      *\n-     * Check transaction inputs, and make sure any\n-     * pay-to-script-hash transactions are evaluating IsStandard scripts\n-     * \n      * Why bother? To avoid denial-of-service attacks; an attacker\n      * can submit a standard HASH... OP_EQUAL transaction,\n      * which will get accepted into blocks. The redemption\n@@ -50,7 +47,7 @@ bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)\n         if (m < 1 || m > n)\n             return false;\n     } else if (whichType == TX_NULL_DATA &&\n-               (!GetBoolArg(\"-datacarrier\", true) || scriptPubKey.size() > nMaxDatacarrierBytes))\n+               (!fAcceptDatacarrier || scriptPubKey.size() > nMaxDatacarrierBytes))\n           return false;\n \n     return whichType != TX_NONSTANDARD;\n@@ -135,45 +132,20 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n         const CScript& prevScript = prev.scriptPubKey;\n         if (!Solver(prevScript, whichType, vSolutions))\n             return false;\n-        int nArgsExpected = ScriptSigArgsExpected(whichType, vSolutions);\n-        if (nArgsExpected < 0)\n-            return false;\n-\n-        // Transactions with extra stuff in their scriptSigs are\n-        // non-standard. Note that this EvalScript() call will\n-        // be quick, because if there are any operations\n-        // beside \"push data\" in the scriptSig\n-        // IsStandardTx() will have already returned false\n-        // and this method isn't called.\n-        std::vector<std::vector<unsigned char> > stack;\n-        if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker()))\n-            return false;\n \n         if (whichType == TX_SCRIPTHASH)\n         {\n+            std::vector<std::vector<unsigned char> > stack;\n+            // convert the scriptSig into a stack, so we can inspect the redeemScript\n+            if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), 0))\n+                return false;\n             if (stack.empty())\n                 return false;\n             CScript subscript(stack.back().begin(), stack.back().end());\n-            std::vector<std::vector<unsigned char> > vSolutions2;\n-            txnouttype whichType2;\n-            if (Solver(subscript, whichType2, vSolutions2))\n-            {\n-                int tmpExpected = ScriptSigArgsExpected(whichType2, vSolutions2);\n-                if (tmpExpected < 0)\n-                    return false;\n-                nArgsExpected += tmpExpected;\n-            }\n-            else\n-            {\n-                // Any other Script with less than 15 sigops OK:\n-                unsigned int sigops = subscript.GetSigOpCount(true);\n-                // ... extra data left on the stack after execution is OK, too:\n-                return (sigops <= MAX_P2SH_SIGOPS);\n+            if (subscript.GetSigOpCount(true) > MAX_P2SH_SIGOPS) {\n+                return false;\n             }\n         }\n-\n-        if (stack.size() != (unsigned int)nArgsExpected)\n-            return false;\n     }\n \n     return true;"
      },
      {
        "sha": "726864f1902ba44e1e3e5a52e6df80fd5400c88a",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin developers\n+// Copyright (c) 2009-2015 The Bitcoin developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -18,13 +18,15 @@ class CCoinsViewCache;\n static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n /** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n-static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n+static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 0;\n /** The maximum size for transactions we're willing to relay/mine */\n static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n /** Maximum number of signature check operations in an IsStandard() P2SH script */\n static const unsigned int MAX_P2SH_SIGOPS = 15;\n /** The maximum number of sigops we're willing to relay/mine in a single tx */\n static const unsigned int MAX_STANDARD_TX_SIGOPS = MAX_BLOCK_SIGOPS/5;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n /**\n  * Standard script verification flags that standard transactions will comply\n  * with. However scripts violating these flags may still be present in valid"
      },
      {
        "sha": "98b1a1ba4c735c23cf1be2a62cc4faf0b16dd932",
        "filename": "src/policy/rbf.cpp",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2016 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"policy/rbf.h\"\n+\n+bool SignalsOptInRBF(const CTransaction &tx)\n+{\n+    BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n+        if (txin.nSequence < std::numeric_limits<unsigned int>::max()-1) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool IsRBFOptIn(const CTxMemPoolEntry &entry, CTxMemPool &pool)\n+{\n+    AssertLockHeld(pool.cs);\n+\n+    CTxMemPool::setEntries setAncestors;\n+\n+    // First check the transaction itself.\n+    if (SignalsOptInRBF(entry.GetTx())) {\n+        return true;\n+    }\n+\n+    // If this transaction is not in our mempool, then we can't be sure\n+    // we will know about all its inputs.\n+    if (!pool.exists(entry.GetTx().GetHash())) {\n+        throw std::runtime_error(\"Cannot determine RBF opt-in signal for non-mempool transaction\\n\");\n+    }\n+\n+    // If all the inputs have nSequence >= maxint-1, it still might be\n+    // signaled for RBF if any unconfirmed parents have signaled.\n+    uint64_t noLimit = std::numeric_limits<uint64_t>::max();\n+    std::string dummy;\n+    pool.CalculateMemPoolAncestors(entry, setAncestors, noLimit, noLimit, noLimit, noLimit, dummy, false);\n+\n+    BOOST_FOREACH(CTxMemPool::txiter it, setAncestors) {\n+        if (SignalsOptInRBF(it->GetTx())) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}"
      },
      {
        "sha": "925ce0d9bd14ae8234f8387273f1338ae096219a",
        "filename": "src/policy/rbf.h",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2016 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_RBF_H\n+#define BITCOIN_POLICY_RBF_H\n+\n+#include \"txmempool.h\"\n+\n+// Check whether the sequence numbers on this transaction are signaling\n+// opt-in to replace-by-fee, according to BIP 125\n+bool SignalsOptInRBF(const CTransaction &tx);\n+\n+// Determine whether an in-mempool transaction is signaling opt-in to RBF\n+// according to BIP 125\n+// This involves checking sequence numbers of the transaction, as well\n+// as the sequence numbers of all in-mempool ancestors.\n+bool IsRBFOptIn(const CTxMemPoolEntry &entry, CTxMemPool &pool);\n+\n+#endif // BITCOIN_POLICY_RBF_H"
      },
      {
        "sha": "40c72f9d79565b0675aef9b8676ee0bbddc81f3d",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 33,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -102,35 +102,3 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&\n \n     return true;\n }\n-\n-arith_uint256 GetBlockProof(const CBlockIndex& block)\n-{\n-    arith_uint256 bnTarget;\n-    bool fNegative;\n-    bool fOverflow;\n-    bnTarget.SetCompact(block.nBits, &fNegative, &fOverflow);\n-    if (fNegative || fOverflow || bnTarget == 0)\n-        return 0;\n-    // We need to compute 2**256 / (bnTarget+1), but we can't represent 2**256\n-    // as it's too large for a arith_uint256. However, as 2**256 is at least as large\n-    // as bnTarget+1, it is equal to ((2**256 - bnTarget - 1) / (bnTarget+1)) + 1,\n-    // or ~bnTarget / (nTarget+1) + 1.\n-    return (~bnTarget / (bnTarget + 1)) + 1;\n-}\n-\n-int64_t GetBlockProofEquivalentTime(const CBlockIndex& to, const CBlockIndex& from, const CBlockIndex& tip, const Consensus::Params& params)\n-{\n-    arith_uint256 r;\n-    int sign = 1;\n-    if (to.nChainWork > from.nChainWork) {\n-        r = to.nChainWork - from.nChainWork;\n-    } else {\n-        r = from.nChainWork - to.nChainWork;\n-        sign = -1;\n-    }\n-    r = r * arith_uint256(params.nPowTargetSpacing) / GetBlockProof(tip);\n-    if (r.bits() > 63) {\n-        return sign * std::numeric_limits<int64_t>::max();\n-    }\n-    return sign * r.GetLow64();\n-}"
      },
      {
        "sha": "23e9c1c3512dc2933aa5429e1df36cd6d283a0f8",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -13,16 +13,11 @@\n class CBlockHeader;\n class CBlockIndex;\n class uint256;\n-class arith_uint256;\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params&);\n unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params&);\n \n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&);\n-arith_uint256 GetBlockProof(const CBlockIndex& block);\n-\n-/** Return the time it would take to redo the work difference between from and to, assuming the current hashrate corresponds to the difficulty at tip, in seconds. */\n-int64_t GetBlockProofEquivalentTime(const CBlockIndex& to, const CBlockIndex& from, const CBlockIndex& tip, const Consensus::Params&);\n \n #endif // BITCOIN_POW_H"
      },
      {
        "sha": "1da459bcfe1f30ee616369190785a3409fc6bb7f",
        "filename": "src/prevector.h",
        "status": "added",
        "additions": 490,
        "deletions": 0,
        "changes": 490,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,490 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef _BITCOIN_PREVECTOR_H_\n+#define _BITCOIN_PREVECTOR_H_\n+\n+#include <stdlib.h>\n+#include <stdint.h>\n+#include <string.h>\n+\n+#include <iterator>\n+\n+#pragma pack(push, 1)\n+/** Implements a drop-in replacement for std::vector<T> which stores up to N\n+ *  elements directly (without heap allocation). The types Size and Diff are\n+ *  used to store element counts, and can be any unsigned + signed type.\n+ *\n+ *  Storage layout is either:\n+ *  - Direct allocation:\n+ *    - Size _size: the number of used elements (between 0 and N)\n+ *    - T direct[N]: an array of N elements of type T\n+ *      (only the first _size are initialized).\n+ *  - Indirect allocation:\n+ *    - Size _size: the number of used elements plus N + 1\n+ *    - Size capacity: the number of allocated elements\n+ *    - T* indirect: a pointer to an array of capacity elements of type T\n+ *      (only the first _size are initialized).\n+ *\n+ *  The data type T must be movable by memmove/realloc(). Once we switch to C++,\n+ *  move constructors can be used instead.\n+ */\n+template<unsigned int N, typename T, typename Size = uint32_t, typename Diff = int32_t>\n+class prevector {\n+public:\n+    typedef Size size_type;\n+    typedef Diff difference_type;\n+    typedef T value_type;\n+    typedef value_type& reference;\n+    typedef const value_type& const_reference;\n+    typedef value_type* pointer;\n+    typedef const value_type* const_pointer;\n+\n+    class iterator {\n+        T* ptr;\n+    public:\n+        typedef Diff difference_type;\n+        typedef T value_type;\n+        typedef T* pointer;\n+        typedef T& reference;\n+        typedef std::random_access_iterator_tag iterator_category;\n+        iterator(T* ptr_) : ptr(ptr_) {}\n+        T& operator*() const { return *ptr; }\n+        T* operator->() const { return ptr; }\n+        T& operator[](size_type pos) { return ptr[pos]; }\n+        const T& operator[](size_type pos) const { return ptr[pos]; }\n+        iterator& operator++() { ptr++; return *this; }\n+        iterator& operator--() { ptr--; return *this; }\n+        iterator operator++(int) { iterator copy(*this); ++(*this); return copy; }\n+        iterator operator--(int) { iterator copy(*this); --(*this); return copy; }\n+        difference_type friend operator-(iterator a, iterator b) { return (&(*a) - &(*b)); }\n+        iterator operator+(size_type n) { return iterator(ptr + n); }\n+        iterator& operator+=(size_type n) { ptr += n; return *this; }\n+        iterator operator-(size_type n) { return iterator(ptr - n); }\n+        iterator& operator-=(size_type n) { ptr -= n; return *this; }\n+        bool operator==(iterator x) const { return ptr == x.ptr; }\n+        bool operator!=(iterator x) const { return ptr != x.ptr; }\n+        bool operator>=(iterator x) const { return ptr >= x.ptr; }\n+        bool operator<=(iterator x) const { return ptr <= x.ptr; }\n+        bool operator>(iterator x) const { return ptr > x.ptr; }\n+        bool operator<(iterator x) const { return ptr < x.ptr; }\n+    };\n+\n+    class reverse_iterator {\n+        T* ptr;\n+    public:\n+        typedef Diff difference_type;\n+        typedef T value_type;\n+        typedef T* pointer;\n+        typedef T& reference;\n+        typedef std::bidirectional_iterator_tag iterator_category;\n+        reverse_iterator(T* ptr_) : ptr(ptr_) {}\n+        T& operator*() { return *ptr; }\n+        const T& operator*() const { return *ptr; }\n+        T* operator->() { return ptr; }\n+        const T* operator->() const { return ptr; }\n+        reverse_iterator& operator--() { ptr++; return *this; }\n+        reverse_iterator& operator++() { ptr--; return *this; }\n+        reverse_iterator operator++(int) { reverse_iterator copy(*this); ++(*this); return copy; }\n+        reverse_iterator operator--(int) { reverse_iterator copy(*this); --(*this); return copy; }\n+        bool operator==(reverse_iterator x) const { return ptr == x.ptr; }\n+        bool operator!=(reverse_iterator x) const { return ptr != x.ptr; }\n+    };\n+\n+    class const_iterator {\n+        const T* ptr;\n+    public:\n+        typedef Diff difference_type;\n+        typedef const T value_type;\n+        typedef const T* pointer;\n+        typedef const T& reference;\n+        typedef std::random_access_iterator_tag iterator_category;\n+        const_iterator(const T* ptr_) : ptr(ptr_) {}\n+        const_iterator(iterator x) : ptr(&(*x)) {}\n+        const T& operator*() const { return *ptr; }\n+        const T* operator->() const { return ptr; }\n+        const T& operator[](size_type pos) const { return ptr[pos]; }\n+        const_iterator& operator++() { ptr++; return *this; }\n+        const_iterator& operator--() { ptr--; return *this; }\n+        const_iterator operator++(int) { const_iterator copy(*this); ++(*this); return copy; }\n+        const_iterator operator--(int) { const_iterator copy(*this); --(*this); return copy; }\n+        difference_type friend operator-(const_iterator a, const_iterator b) { return (&(*a) - &(*b)); }\n+        const_iterator operator+(size_type n) { return const_iterator(ptr + n); }\n+        const_iterator& operator+=(size_type n) { ptr += n; return *this; }\n+        const_iterator operator-(size_type n) { return const_iterator(ptr - n); }\n+        const_iterator& operator-=(size_type n) { ptr -= n; return *this; }\n+        bool operator==(const_iterator x) const { return ptr == x.ptr; }\n+        bool operator!=(const_iterator x) const { return ptr != x.ptr; }\n+        bool operator>=(const_iterator x) const { return ptr >= x.ptr; }\n+        bool operator<=(const_iterator x) const { return ptr <= x.ptr; }\n+        bool operator>(const_iterator x) const { return ptr > x.ptr; }\n+        bool operator<(const_iterator x) const { return ptr < x.ptr; }\n+    };\n+\n+    class const_reverse_iterator {\n+        const T* ptr;\n+    public:\n+        typedef Diff difference_type;\n+        typedef const T value_type;\n+        typedef const T* pointer;\n+        typedef const T& reference;\n+        typedef std::bidirectional_iterator_tag iterator_category;\n+        const_reverse_iterator(T* ptr_) : ptr(ptr_) {}\n+        const_reverse_iterator(reverse_iterator x) : ptr(&(*x)) {}\n+        const T& operator*() const { return *ptr; }\n+        const T* operator->() const { return ptr; }\n+        const_reverse_iterator& operator--() { ptr++; return *this; }\n+        const_reverse_iterator& operator++() { ptr--; return *this; }\n+        const_reverse_iterator operator++(int) { const_reverse_iterator copy(*this); ++(*this); return copy; }\n+        const_reverse_iterator operator--(int) { const_reverse_iterator copy(*this); --(*this); return copy; }\n+        bool operator==(const_reverse_iterator x) const { return ptr == x.ptr; }\n+        bool operator!=(const_reverse_iterator x) const { return ptr != x.ptr; }\n+    };\n+\n+private:\n+    size_type _size;\n+    union direct_or_indirect {\n+        char direct[sizeof(T) * N];\n+        struct {\n+            size_type capacity;\n+            char* indirect;\n+        };\n+    } _union;\n+\n+    T* direct_ptr(difference_type pos) { return reinterpret_cast<T*>(_union.direct) + pos; }\n+    const T* direct_ptr(difference_type pos) const { return reinterpret_cast<const T*>(_union.direct) + pos; }\n+    T* indirect_ptr(difference_type pos) { return reinterpret_cast<T*>(_union.indirect) + pos; }\n+    const T* indirect_ptr(difference_type pos) const { return reinterpret_cast<const T*>(_union.indirect) + pos; }\n+    bool is_direct() const { return _size <= N; }\n+\n+    void change_capacity(size_type new_capacity) {\n+        if (new_capacity <= N) {\n+            if (!is_direct()) {\n+                T* indirect = indirect_ptr(0);\n+                T* src = indirect;\n+                T* dst = direct_ptr(0);\n+                memcpy(dst, src, size() * sizeof(T));\n+                free(indirect);\n+                _size -= N + 1;\n+            }\n+        } else {\n+            if (!is_direct()) {\n+                _union.indirect = static_cast<char*>(realloc(_union.indirect, ((size_t)sizeof(T)) * new_capacity));\n+                _union.capacity = new_capacity;\n+            } else {\n+                char* new_indirect = static_cast<char*>(malloc(((size_t)sizeof(T)) * new_capacity));\n+                T* src = direct_ptr(0);\n+                T* dst = reinterpret_cast<T*>(new_indirect);\n+                memcpy(dst, src, size() * sizeof(T));\n+                _union.indirect = new_indirect;\n+                _union.capacity = new_capacity;\n+                _size += N + 1;\n+            }\n+        }\n+    }\n+\n+    T* item_ptr(difference_type pos) { return is_direct() ? direct_ptr(pos) : indirect_ptr(pos); }\n+    const T* item_ptr(difference_type pos) const { return is_direct() ? direct_ptr(pos) : indirect_ptr(pos); }\n+\n+public:\n+    void assign(size_type n, const T& val) {\n+        clear();\n+        if (capacity() < n) {\n+            change_capacity(n);\n+        }\n+        while (size() < n) {\n+            _size++;\n+            new(static_cast<void*>(item_ptr(size() - 1))) T(val);\n+        }\n+    }\n+\n+    template<typename InputIterator>\n+    void assign(InputIterator first, InputIterator last) {\n+        size_type n = last - first;\n+        clear();\n+        if (capacity() < n) {\n+            change_capacity(n);\n+        }\n+        while (first != last) {\n+            _size++;\n+            new(static_cast<void*>(item_ptr(size() - 1))) T(*first);\n+            ++first;\n+        }\n+    }\n+\n+    prevector() : _size(0) {}\n+\n+    explicit prevector(size_type n) : _size(0) {\n+        resize(n);\n+    }\n+\n+    explicit prevector(size_type n, const T& val = T()) : _size(0) {\n+        change_capacity(n);\n+        while (size() < n) {\n+            _size++;\n+            new(static_cast<void*>(item_ptr(size() - 1))) T(val);\n+        }\n+    }\n+\n+    template<typename InputIterator>\n+    prevector(InputIterator first, InputIterator last) : _size(0) {\n+        size_type n = last - first;\n+        change_capacity(n);\n+        while (first != last) {\n+            _size++;\n+            new(static_cast<void*>(item_ptr(size() - 1))) T(*first);\n+            ++first;\n+        }\n+    }\n+\n+    prevector(const prevector<N, T, Size, Diff>& other) : _size(0) {\n+        change_capacity(other.size());\n+        const_iterator it = other.begin();\n+        while (it != other.end()) {\n+            _size++;\n+            new(static_cast<void*>(item_ptr(size() - 1))) T(*it);\n+            ++it;\n+        }\n+    }\n+\n+    prevector& operator=(const prevector<N, T, Size, Diff>& other) {\n+        if (&other == this) {\n+            return *this;\n+        }\n+        resize(0);\n+        change_capacity(other.size());\n+        const_iterator it = other.begin();\n+        while (it != other.end()) {\n+            _size++;\n+            new(static_cast<void*>(item_ptr(size() - 1))) T(*it);\n+            ++it;\n+        }\n+        return *this;\n+    }\n+\n+    size_type size() const {\n+        return is_direct() ? _size : _size - N - 1;\n+    }\n+\n+    bool empty() const {\n+        return size() == 0;\n+    }\n+\n+    iterator begin() { return iterator(item_ptr(0)); }\n+    const_iterator begin() const { return const_iterator(item_ptr(0)); }\n+    iterator end() { return iterator(item_ptr(size())); }\n+    const_iterator end() const { return const_iterator(item_ptr(size())); }\n+\n+    reverse_iterator rbegin() { return reverse_iterator(item_ptr(size() - 1)); }\n+    const_reverse_iterator rbegin() const { return const_reverse_iterator(item_ptr(size() - 1)); }\n+    reverse_iterator rend() { return reverse_iterator(item_ptr(-1)); }\n+    const_reverse_iterator rend() const { return const_reverse_iterator(item_ptr(-1)); }\n+\n+    size_t capacity() const {\n+        if (is_direct()) {\n+            return N;\n+        } else {\n+            return _union.capacity;\n+        }\n+    }\n+\n+    T& operator[](size_type pos) {\n+        return *item_ptr(pos);\n+    }\n+\n+    const T& operator[](size_type pos) const {\n+        return *item_ptr(pos);\n+    }\n+\n+    void resize(size_type new_size) {\n+        while (size() > new_size) {\n+            item_ptr(size() - 1)->~T();\n+            _size--;\n+        }\n+        if (new_size > capacity()) {\n+            change_capacity(new_size);\n+        }\n+        while (size() < new_size) {\n+            _size++;\n+            new(static_cast<void*>(item_ptr(size() - 1))) T();\n+        }\n+    }\n+\n+    void reserve(size_type new_capacity) {\n+        if (new_capacity > capacity()) {\n+            change_capacity(new_capacity);\n+        }\n+    }\n+\n+    void shrink_to_fit() {\n+        change_capacity(size());\n+    }\n+\n+    void clear() {\n+        resize(0);\n+    }\n+\n+    iterator insert(iterator pos, const T& value) {\n+        size_type p = pos - begin();\n+        size_type new_size = size() + 1;\n+        if (capacity() < new_size) {\n+            change_capacity(new_size + (new_size >> 1));\n+        }\n+        memmove(item_ptr(p + 1), item_ptr(p), (size() - p) * sizeof(T));\n+        _size++;\n+        new(static_cast<void*>(item_ptr(p))) T(value);\n+        return iterator(item_ptr(p));\n+    }\n+\n+    void insert(iterator pos, size_type count, const T& value) {\n+        size_type p = pos - begin();\n+        size_type new_size = size() + count;\n+        if (capacity() < new_size) {\n+            change_capacity(new_size + (new_size >> 1));\n+        }\n+        memmove(item_ptr(p + count), item_ptr(p), (size() - p) * sizeof(T));\n+        _size += count;\n+        for (size_type i = 0; i < count; i++) {\n+            new(static_cast<void*>(item_ptr(p + i))) T(value);\n+        }\n+    }\n+\n+    template<typename InputIterator>\n+    void insert(iterator pos, InputIterator first, InputIterator last) {\n+        size_type p = pos - begin();\n+        difference_type count = last - first;\n+        size_type new_size = size() + count;\n+        if (capacity() < new_size) {\n+            change_capacity(new_size + (new_size >> 1));\n+        }\n+        memmove(item_ptr(p + count), item_ptr(p), (size() - p) * sizeof(T));\n+        _size += count;\n+        while (first != last) {\n+            new(static_cast<void*>(item_ptr(p))) T(*first);\n+            ++p;\n+            ++first;\n+        }\n+    }\n+\n+    iterator erase(iterator pos) {\n+        (*pos).~T();\n+        memmove(&(*pos), &(*pos) + 1, ((char*)&(*end())) - ((char*)(1 + &(*pos))));\n+        _size--;\n+        return pos;\n+    }\n+\n+    iterator erase(iterator first, iterator last) {\n+        iterator p = first;\n+        char* endp = (char*)&(*end());\n+        while (p != last) {\n+            (*p).~T();\n+            _size--;\n+            ++p;\n+        }\n+        memmove(&(*first), &(*last), endp - ((char*)(&(*last))));\n+        return first;\n+    }\n+\n+    void push_back(const T& value) {\n+        size_type new_size = size() + 1;\n+        if (capacity() < new_size) {\n+            change_capacity(new_size + (new_size >> 1));\n+        }\n+        new(item_ptr(size())) T(value);\n+        _size++;\n+    }\n+\n+    void pop_back() {\n+        _size--;\n+    }\n+\n+    T& front() {\n+        return *item_ptr(0);\n+    }\n+\n+    const T& front() const {\n+        return *item_ptr(0);\n+    }\n+\n+    T& back() {\n+        return *item_ptr(size() - 1);\n+    }\n+\n+    const T& back() const {\n+        return *item_ptr(size() - 1);\n+    }\n+\n+    void swap(prevector<N, T, Size, Diff>& other) {\n+        if (_size & other._size & 1) {\n+            std::swap(_union.capacity, other._union.capacity);\n+            std::swap(_union.indirect, other._union.indirect);\n+        } else {\n+            std::swap(_union, other._union);\n+        }\n+        std::swap(_size, other._size);\n+    }\n+\n+    ~prevector() {\n+        clear();\n+        if (!is_direct()) {\n+            free(_union.indirect);\n+            _union.indirect = NULL;\n+        }\n+    }\n+\n+    bool operator==(const prevector<N, T, Size, Diff>& other) const {\n+        if (other.size() != size()) {\n+            return false;\n+        }\n+        const_iterator b1 = begin();\n+        const_iterator b2 = other.begin();\n+        const_iterator e1 = end();\n+        while (b1 != e1) {\n+            if ((*b1) != (*b2)) {\n+                return false;\n+            }\n+            ++b1;\n+            ++b2;\n+        }\n+        return true;\n+    }\n+\n+    bool operator!=(const prevector<N, T, Size, Diff>& other) const {\n+        return !(*this == other);\n+    }\n+\n+    bool operator<(const prevector<N, T, Size, Diff>& other) const {\n+        if (size() < other.size()) {\n+            return true;\n+        }\n+        if (size() > other.size()) {\n+            return false;\n+        }\n+        const_iterator b1 = begin();\n+        const_iterator b2 = other.begin();\n+        const_iterator e1 = end();\n+        while (b1 != e1) {\n+            if ((*b1) < (*b2)) {\n+                return true;\n+            }\n+            if ((*b2) < (*b1)) {\n+                return false;\n+            }\n+            ++b1;\n+            ++b2;\n+        }\n+        return false;\n+    }\n+\n+    size_t allocated_memory() const {\n+        if (is_direct()) {\n+            return 0;\n+        } else {\n+            return ((size_t)(sizeof(T))) * _union.capacity;\n+        }\n+    }\n+};\n+#pragma pack(pop)\n+\n+#endif"
      },
      {
        "sha": "59e949d71a32970845b3b6237dcc253fc6b924d8",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 64,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -15,69 +15,6 @@ uint256 CBlockHeader::GetHash() const\n     return SerializeHash(*this);\n }\n \n-uint256 CBlock::ComputeMerkleRoot(bool* fMutated) const\n-{\n-    /* WARNING! If you're reading this because you're learning about crypto\n-       and/or designing a new system that will use merkle trees, keep in mind\n-       that the following merkle tree algorithm has a serious flaw related to\n-       duplicate txids, resulting in a vulnerability (CVE-2012-2459).\n-\n-       The reason is that if the number of hashes in the list at a given time\n-       is odd, the last one is duplicated before computing the next level (which\n-       is unusual in Merkle trees). This results in certain sequences of\n-       transactions leading to the same merkle root. For example, these two\n-       trees:\n-\n-                    A               A\n-                  /  \\            /   \\\n-                B     C         B       C\n-               / \\    |        / \\     / \\\n-              D   E   F       D   E   F   F\n-             / \\ / \\ / \\     / \\ / \\ / \\ / \\\n-             1 2 3 4 5 6     1 2 3 4 5 6 5 6\n-\n-       for transaction lists [1,2,3,4,5,6] and [1,2,3,4,5,6,5,6] (where 5 and\n-       6 are repeated) result in the same root hash A (because the hash of both\n-       of (F) and (F,F) is C).\n-\n-       The vulnerability results from being able to send a block with such a\n-       transaction list, with the same merkle root, and the same block hash as\n-       the original without duplication, resulting in failed validation. If the\n-       receiving node proceeds to mark that block as permanently invalid\n-       however, it will fail to accept further unmodified (and thus potentially\n-       valid) versions of the same block. We defend against this by detecting\n-       the case where we would hash two identical hashes at the end of the list\n-       together, and treating that identically to the block having an invalid\n-       merkle root. Assuming no double-SHA256 collisions, this will detect all\n-       known ways of changing the transactions without affecting the merkle\n-       root.\n-    */\n-    std::vector<uint256> vMerkleTree;\n-    vMerkleTree.reserve(vtx.size() * 2 + 16); // Safe upper bound for the number of total nodes.\n-    for (std::vector<CTransaction>::const_iterator it(vtx.begin()); it != vtx.end(); ++it)\n-        vMerkleTree.push_back(it->GetHash());\n-    int j = 0;\n-    bool mutated = false;\n-    for (int nSize = vtx.size(); nSize > 1; nSize = (nSize + 1) / 2)\n-    {\n-        for (int i = 0; i < nSize; i += 2)\n-        {\n-            int i2 = std::min(i+1, nSize-1);\n-            if (i2 == i + 1 && i2 + 1 == nSize && vMerkleTree[j+i] == vMerkleTree[j+i2]) {\n-                // Two identical hashes at the end of the list at a particular level.\n-                mutated = true;\n-            }\n-            vMerkleTree.push_back(Hash(BEGIN(vMerkleTree[j+i]),  END(vMerkleTree[j+i]),\n-                                       BEGIN(vMerkleTree[j+i2]), END(vMerkleTree[j+i2])));\n-        }\n-        j += nSize;\n-    }\n-    if (fMutated) {\n-        *fMutated = mutated;\n-    }\n-    return (vMerkleTree.empty() ? uint256() : vMerkleTree.back());\n-}\n-\n std::string CBlock::ToString() const\n {\n     std::stringstream s;"
      },
      {
        "sha": "0e93399c08e478aac7d5889388fdffa90c318e88",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -118,12 +118,6 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    // Build the merkle tree for this block and return the merkle root.\n-    // If non-NULL, *mutated is set to whether mutation was detected in the merkle\n-    // tree (a duplication of transactions in the block leading to an identical\n-    // merkle root).\n-    uint256 ComputeMerkleRoot(bool* mutated = NULL) const;\n-\n     std::string ToString() const;\n };\n "
      },
      {
        "sha": "aea96d8a124ce20a43ef0659d6aa107f439e1682",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "8bd6d00e2eba2ab52481a15764391dd717b0f961",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -74,7 +74,7 @@ class CTxIn\n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n         READWRITE(prevout);\n-        READWRITE(scriptSig);\n+        READWRITE(*(CScriptBase*)(&scriptSig));\n         READWRITE(nSequence);\n     }\n \n@@ -119,7 +119,7 @@ class CTxOut\n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n         READWRITE(nValue);\n-        READWRITE(scriptPubKey);\n+        READWRITE(*(CScriptBase*)(&scriptPubKey));\n     }\n \n     void SetNull()"
      },
      {
        "sha": "c1c7c0b96bf7c28ad21477737259227bf9288cae",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 5,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -12,13 +12,67 @@\n # include <arpa/inet.h>\n #endif\n \n+namespace NetMsgType {\n+const char *VERSION=\"version\";\n+const char *VERACK=\"verack\";\n+const char *ADDR=\"addr\";\n+const char *INV=\"inv\";\n+const char *GETDATA=\"getdata\";\n+const char *MERKLEBLOCK=\"merkleblock\";\n+const char *GETBLOCKS=\"getblocks\";\n+const char *GETHEADERS=\"getheaders\";\n+const char *TX=\"tx\";\n+const char *HEADERS=\"headers\";\n+const char *BLOCK=\"block\";\n+const char *GETADDR=\"getaddr\";\n+const char *MEMPOOL=\"mempool\";\n+const char *PING=\"ping\";\n+const char *PONG=\"pong\";\n+const char *ALERT=\"alert\";\n+const char *NOTFOUND=\"notfound\";\n+const char *FILTERLOAD=\"filterload\";\n+const char *FILTERADD=\"filteradd\";\n+const char *FILTERCLEAR=\"filterclear\";\n+const char *REJECT=\"reject\";\n+const char *SENDHEADERS=\"sendheaders\";\n+};\n+\n static const char* ppszTypeName[] =\n {\n-    \"ERROR\",\n-    \"tx\",\n-    \"block\",\n-    \"filtered block\"\n+    \"ERROR\", // Should never occur\n+    NetMsgType::TX,\n+    NetMsgType::BLOCK,\n+    \"filtered block\" // Should never occur\n+};\n+\n+/** All known message types. Keep this in the same order as the list of\n+ * messages above and in protocol.h.\n+ */\n+const static std::string allNetMessageTypes[] = {\n+    NetMsgType::VERSION,\n+    NetMsgType::VERACK,\n+    NetMsgType::ADDR,\n+    NetMsgType::INV,\n+    NetMsgType::GETDATA,\n+    NetMsgType::MERKLEBLOCK,\n+    NetMsgType::GETBLOCKS,\n+    NetMsgType::GETHEADERS,\n+    NetMsgType::TX,\n+    NetMsgType::HEADERS,\n+    NetMsgType::BLOCK,\n+    NetMsgType::GETADDR,\n+    NetMsgType::MEMPOOL,\n+    NetMsgType::PING,\n+    NetMsgType::PONG,\n+    NetMsgType::ALERT,\n+    NetMsgType::NOTFOUND,\n+    NetMsgType::FILTERLOAD,\n+    NetMsgType::FILTERADD,\n+    NetMsgType::FILTERCLEAR,\n+    NetMsgType::REJECT,\n+    NetMsgType::SENDHEADERS\n };\n+const static std::vector<std::string> allNetMessageTypesVec(allNetMessageTypes, allNetMessageTypes+ARRAYLEN(allNetMessageTypes));\n \n CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn)\n {\n@@ -140,3 +194,8 @@ std::string CInv::ToString() const\n {\n     return strprintf(\"%s %s\", GetCommand(), hash.ToString());\n }\n+\n+const std::vector<std::string> &getAllNetMessageTypes()\n+{\n+    return allNetMessageTypesVec;\n+}"
      },
      {
        "sha": "c8b8d20eaddd5df54b9105f548e3c123e3c142a9",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 160,
        "deletions": 1,
        "changes": 161,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -65,6 +65,165 @@ class CMessageHeader\n     unsigned int nChecksum;\n };\n \n+/**\n+ * Bitcoin protocol message types. When adding new message types, don't forget\n+ * to update allNetMessageTypes in protocol.cpp.\n+ */\n+namespace NetMsgType {\n+\n+/**\n+ * The version message provides information about the transmitting node to the\n+ * receiving node at the beginning of a connection.\n+ * @see https://bitcoin.org/en/developer-reference#version\n+ */\n+extern const char *VERSION;\n+/**\n+ * The verack message acknowledges a previously-received version message,\n+ * informing the connecting node that it can begin to send other messages.\n+ * @see https://bitcoin.org/en/developer-reference#verack\n+ */\n+extern const char *VERACK;\n+/**\n+ * The addr (IP address) message relays connection information for peers on the\n+ * network.\n+ * @see https://bitcoin.org/en/developer-reference#addr\n+ */\n+extern const char *ADDR;\n+/**\n+ * The inv message (inventory message) transmits one or more inventories of\n+ * objects known to the transmitting peer.\n+ * @see https://bitcoin.org/en/developer-reference#inv\n+ */\n+extern const char *INV;\n+/**\n+ * The getdata message requests one or more data objects from another node.\n+ * @see https://bitcoin.org/en/developer-reference#getdata\n+ */\n+extern const char *GETDATA;\n+/**\n+ * The merkleblock message is a reply to a getdata message which requested a\n+ * block using the inventory type MSG_MERKLEBLOCK.\n+ * @since protocol version 70001 as described by BIP37.\n+ * @see https://bitcoin.org/en/developer-reference#merkleblock\n+ */\n+extern const char *MERKLEBLOCK;\n+/**\n+ * The getblocks message requests an inv message that provides block header\n+ * hashes starting from a particular point in the block chain.\n+ * @see https://bitcoin.org/en/developer-reference#getblocks\n+ */\n+extern const char *GETBLOCKS;\n+/**\n+ * The getheaders message requests a headers message that provides block\n+ * headers starting from a particular point in the block chain.\n+ * @since protocol version 31800.\n+ * @see https://bitcoin.org/en/developer-reference#getheaders\n+ */\n+extern const char *GETHEADERS;\n+/**\n+ * The tx message transmits a single transaction.\n+ * @see https://bitcoin.org/en/developer-reference#tx\n+ */\n+extern const char *TX;\n+/**\n+ * The headers message sends one or more block headers to a node which\n+ * previously requested certain headers with a getheaders message.\n+ * @since protocol version 31800.\n+ * @see https://bitcoin.org/en/developer-reference#headers\n+ */\n+extern const char *HEADERS;\n+/**\n+ * The block message transmits a single serialized block.\n+ * @see https://bitcoin.org/en/developer-reference#block\n+ */\n+extern const char *BLOCK;\n+/**\n+ * The getaddr message requests an addr message from the receiving node,\n+ * preferably one with lots of IP addresses of other receiving nodes.\n+ * @see https://bitcoin.org/en/developer-reference#getaddr\n+ */\n+extern const char *GETADDR;\n+/**\n+ * The mempool message requests the TXIDs of transactions that the receiving\n+ * node has verified as valid but which have not yet appeared in a block.\n+ * @since protocol version 60002.\n+ * @see https://bitcoin.org/en/developer-reference#mempool\n+ */\n+extern const char *MEMPOOL;\n+/**\n+ * The ping message is sent periodically to help confirm that the receiving\n+ * peer is still connected.\n+ * @see https://bitcoin.org/en/developer-reference#ping\n+ */\n+extern const char *PING;\n+/**\n+ * The pong message replies to a ping message, proving to the pinging node that\n+ * the ponging node is still alive.\n+ * @since protocol version 60001 as described by BIP31.\n+ * @see https://bitcoin.org/en/developer-reference#pong\n+ */\n+extern const char *PONG;\n+/**\n+ * The alert message warns nodes of problems that may affect them or the rest\n+ * of the network.\n+ * @since protocol version 311.\n+ * @see https://bitcoin.org/en/developer-reference#alert\n+ */\n+extern const char *ALERT;\n+/**\n+ * The notfound message is a reply to a getdata message which requested an\n+ * object the receiving node does not have available for relay.\n+ * @ince protocol version 70001.\n+ * @see https://bitcoin.org/en/developer-reference#notfound\n+ */\n+extern const char *NOTFOUND;\n+/**\n+ * The filterload message tells the receiving peer to filter all relayed\n+ * transactions and requested merkle blocks through the provided filter.\n+ * @since protocol version 70001 as described by BIP37.\n+ *   Only available with service bit NODE_BLOOM since protocol version\n+ *   70011 as described by BIP111.\n+ * @see https://bitcoin.org/en/developer-reference#filterload\n+ */\n+extern const char *FILTERLOAD;\n+/**\n+ * The filteradd message tells the receiving peer to add a single element to a\n+ * previously-set bloom filter, such as a new public key.\n+ * @since protocol version 70001 as described by BIP37.\n+ *   Only available with service bit NODE_BLOOM since protocol version\n+ *   70011 as described by BIP111.\n+ * @see https://bitcoin.org/en/developer-reference#filteradd\n+ */\n+extern const char *FILTERADD;\n+/**\n+ * The filterclear message tells the receiving peer to remove a previously-set\n+ * bloom filter.\n+ * @since protocol version 70001 as described by BIP37.\n+ *   Only available with service bit NODE_BLOOM since protocol version\n+ *   70011 as described by BIP111.\n+ * @see https://bitcoin.org/en/developer-reference#filterclear\n+ */\n+extern const char *FILTERCLEAR;\n+/**\n+ * The reject message informs the receiving node that one of its previous\n+ * messages has been rejected.\n+ * @since protocol version 70002 as described by BIP61.\n+ * @see https://bitcoin.org/en/developer-reference#reject\n+ */\n+extern const char *REJECT;\n+/**\n+ * Indicates that a node prefers to receive new block announcements via a\n+ * \"headers\" message rather than an \"inv\".\n+ * @since protocol version 70012 as described by BIP130.\n+ * @see https://bitcoin.org/en/developer-reference#sendheaders\n+ */\n+extern const char *SENDHEADERS;\n+\n+};\n+\n+/* Get a vector of all valid message types (see above) */\n+const std::vector<std::string> &getAllNetMessageTypes();\n+\n /** nServices flags */\n enum {\n     // NODE_NETWORK means that the node is capable of serving the block chain. It is currently"
      },
      {
        "sha": "db06a8928567fa5c1e1d3cfecb5b1f2809fb19dd",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "e1a17b658261baf5c75a6a757234a9ad2298a832",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "135f15ffa85ad897c6f53e83aaf1105e2d4691b9",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "c22566d473729c1f4d9582f008f2ee71a79db6a4",
        "filename": "src/qt/addressbookpage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/addressbookpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/addressbookpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "71ed3618e415e1cb2e70ab8b8d7642bdfab1c4dd",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d04b95ebaeb361cecaacdb1f1b1701a58b70201a",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "415bffb9914573dc3ca1ab070cb09fcd893f1049",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "727b5a1ada18a68da469a33a6b641f638037774c",
        "filename": "src/qt/askpassphrasedialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/askpassphrasedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/askpassphrasedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d95106b5ac87a9142a6864b1eb796d491de49217",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -103,7 +103,7 @@ int BanTableModel::rowCount(const QModelIndex &parent) const\n int BanTableModel::columnCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);\n-    return columns.length();;\n+    return columns.length();\n }\n \n QVariant BanTableModel::data(const QModelIndex &index, int role) const\n@@ -178,4 +178,4 @@ bool BanTableModel::shouldShow()\n     if (priv->size() > 0)\n         return true;\n     return false;\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "fe9600ac0bdeccbf3921cf7120a3e5438ebeb07a",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "9c21bb24cee289cd3a7deffa380a69200df4ee3a",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 11,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -26,7 +26,7 @@\n #endif\n \n #include \"init.h\"\n-#include \"rpcserver.h\"\n+#include \"rpc/server.h\"\n #include \"scheduler.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n@@ -201,6 +201,8 @@ class BitcoinApplication: public QApplication\n     /// Create payment server\n     void createPaymentServer();\n #endif\n+    /// parameter interaction/setup based on rules\n+    void parameterSetup();\n     /// Create options model\n     void createOptionsModel(bool resetSettings);\n     /// Create main window\n@@ -309,14 +311,8 @@ BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n     // UI per-platform customization\n     // This must be done inside the BitcoinApplication constructor, or after it, because\n     // PlatformStyle::instantiate requires a QApplication\n-#if defined(Q_OS_MAC)\n-    std::string platformName = \"macosx\";\n-#elif defined(Q_OS_WIN)\n-    std::string platformName = \"windows\";\n-#else\n-    std::string platformName = \"other\";\n-#endif\n-    platformName = GetArg(\"-uiplatform\", platformName);\n+    std::string platformName;\n+    platformName = GetArg(\"-uiplatform\", BitcoinGUI::DEFAULT_UIPLATFORM);\n     platformStyle = PlatformStyle::instantiate(QString::fromStdString(platformName));\n     if (!platformStyle) // Fall back to \"other\" if specified name not found\n         platformStyle = PlatformStyle::instantiate(\"other\");\n@@ -397,6 +393,12 @@ void BitcoinApplication::startThread()\n     coreThread->start();\n }\n \n+void BitcoinApplication::parameterSetup()\n+{\n+    InitLogging();\n+    InitParameterInteraction();\n+}\n+\n void BitcoinApplication::requestInitialize()\n {\n     qDebug() << __func__ << \": Requesting initialize\";\n@@ -644,13 +646,15 @@ int main(int argc, char *argv[])\n     // Install qDebug() message handler to route to debug.log\n     qInstallMessageHandler(DebugMessageHandler);\n #endif\n+    // Allow parameter interaction before we create the options model\n+    app.parameterSetup();\n     // Load GUI settings from QSettings\n     app.createOptionsModel(mapArgs.count(\"-resetguisettings\") != 0);\n \n     // Subscribe to global signals from core\n     uiInterface.InitMessage.connect(InitMessage);\n \n-    if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n+    if (GetBoolArg(\"-splash\", DEFAULT_SPLASHSCREEN) && !GetBoolArg(\"-min\", false))\n         app.createSplashScreen(networkStyle.data());\n \n     try"
      },
      {
        "sha": "dcd3b4ae2ce09de5bfc9e60acb4856c40d480c59",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -46,6 +46,9 @@\n         <file alias=\"about_qt\">res/icons/about_qt.png</file>\n         <file alias=\"verify\">res/icons/verify.png</file>\n         <file alias=\"warning\">res/icons/warning.png</file>\n+        <file alias=\"fontbigger\">res/icons/fontbigger.png</file>\n+        <file alias=\"fontsmaller\">res/icons/fontsmaller.png</file>\n+        <file alias=\"prompticon\">res/icons/chevron.png</file>\n     </qresource>\n     <qresource prefix=\"/movies\">\n         <file alias=\"spinner-000\">res/movies/spinner-000.png</file>"
      },
      {
        "sha": "a8a0253b078ff2491a1ede83f2b3e3907ce6d05f",
        "filename": "src/qt/bitcoin_locale.qrc",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoin_locale.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoin_locale.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin_locale.qrc?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,36 +1,40 @@\n <!DOCTYPE RCC><RCC version=\"1.0\">\n     <qresource prefix=\"/translations\">\n-        <file alias=\"ach\">locale/bitcoin_ach.qm</file>\n         <file alias=\"af_ZA\">locale/bitcoin_af_ZA.qm</file>\n         <file alias=\"ar\">locale/bitcoin_ar.qm</file>\n         <file alias=\"be_BY\">locale/bitcoin_be_BY.qm</file>\n+        <file alias=\"bg_BG\">locale/bitcoin_bg_BG.qm</file>\n         <file alias=\"bg\">locale/bitcoin_bg.qm</file>\n         <file alias=\"bs\">locale/bitcoin_bs.qm</file>\n         <file alias=\"ca_ES\">locale/bitcoin_ca_ES.qm</file>\n         <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n         <file alias=\"ca@valencia\">locale/bitcoin_ca@valencia.qm</file>\n-        <file alias=\"cmn\">locale/bitcoin_cmn.qm</file>\n+        <file alias=\"cs_CZ\">locale/bitcoin_cs_CZ.qm</file>\n         <file alias=\"cs\">locale/bitcoin_cs.qm</file>\n         <file alias=\"cy\">locale/bitcoin_cy.qm</file>\n         <file alias=\"da\">locale/bitcoin_da.qm</file>\n         <file alias=\"de\">locale/bitcoin_de.qm</file>\n         <file alias=\"el_GR\">locale/bitcoin_el_GR.qm</file>\n+        <file alias=\"el\">locale/bitcoin_el.qm</file>\n+        <file alias=\"en_GB\">locale/bitcoin_en_GB.qm</file>\n         <file alias=\"en\">locale/bitcoin_en.qm</file>\n         <file alias=\"eo\">locale/bitcoin_eo.qm</file>\n         <file alias=\"es_CL\">locale/bitcoin_es_CL.qm</file>\n         <file alias=\"es_DO\">locale/bitcoin_es_DO.qm</file>\n+        <file alias=\"es_ES\">locale/bitcoin_es_ES.qm</file>\n         <file alias=\"es_MX\">locale/bitcoin_es_MX.qm</file>\n         <file alias=\"es\">locale/bitcoin_es.qm</file>\n         <file alias=\"es_UY\">locale/bitcoin_es_UY.qm</file>\n+        <file alias=\"es_VE\">locale/bitcoin_es_VE.qm</file>\n         <file alias=\"et\">locale/bitcoin_et.qm</file>\n         <file alias=\"eu_ES\">locale/bitcoin_eu_ES.qm</file>\n         <file alias=\"fa_IR\">locale/bitcoin_fa_IR.qm</file>\n         <file alias=\"fa\">locale/bitcoin_fa.qm</file>\n         <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n         <file alias=\"fr_CA\">locale/bitcoin_fr_CA.qm</file>\n+        <file alias=\"fr_FR\">locale/bitcoin_fr_FR.qm</file>\n         <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n         <file alias=\"gl\">locale/bitcoin_gl.qm</file>\n-        <file alias=\"gu_IN\">locale/bitcoin_gu_IN.qm</file>\n         <file alias=\"he\">locale/bitcoin_he.qm</file>\n         <file alias=\"hi_IN\">locale/bitcoin_hi_IN.qm</file>\n         <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n@@ -45,6 +49,7 @@\n         <file alias=\"la\">locale/bitcoin_la.qm</file>\n         <file alias=\"lt\">locale/bitcoin_lt.qm</file>\n         <file alias=\"lv_LV\">locale/bitcoin_lv_LV.qm</file>\n+        <file alias=\"mk_MK\">locale/bitcoin_mk_MK.qm</file>\n         <file alias=\"mn\">locale/bitcoin_mn.qm</file>\n         <file alias=\"ms_MY\">locale/bitcoin_ms_MY.qm</file>\n         <file alias=\"nb\">locale/bitcoin_nb.qm</file>\n@@ -54,22 +59,23 @@\n         <file alias=\"pt_BR\">locale/bitcoin_pt_BR.qm</file>\n         <file alias=\"pt_PT\">locale/bitcoin_pt_PT.qm</file>\n         <file alias=\"ro_RO\">locale/bitcoin_ro_RO.qm</file>\n+        <file alias=\"ru_RU\">locale/bitcoin_ru_RU.qm</file>\n         <file alias=\"ru\">locale/bitcoin_ru.qm</file>\n-        <file alias=\"sah\">locale/bitcoin_sah.qm</file>\n         <file alias=\"sk\">locale/bitcoin_sk.qm</file>\n         <file alias=\"sl_SI\">locale/bitcoin_sl_SI.qm</file>\n         <file alias=\"sq\">locale/bitcoin_sq.qm</file>\n         <file alias=\"sr\">locale/bitcoin_sr.qm</file>\n         <file alias=\"sv\">locale/bitcoin_sv.qm</file>\n         <file alias=\"th_TH\">locale/bitcoin_th_TH.qm</file>\n+        <file alias=\"tr_TR\">locale/bitcoin_tr_TR.qm</file>\n         <file alias=\"tr\">locale/bitcoin_tr.qm</file>\n         <file alias=\"uk\">locale/bitcoin_uk.qm</file>\n         <file alias=\"ur_PK\">locale/bitcoin_ur_PK.qm</file>\n         <file alias=\"uz@Cyrl\">locale/bitcoin_uz@Cyrl.qm</file>\n         <file alias=\"vi\">locale/bitcoin_vi.qm</file>\n         <file alias=\"vi_VN\">locale/bitcoin_vi_VN.qm</file>\n         <file alias=\"zh_CN\">locale/bitcoin_zh_CN.qm</file>\n-        <file alias=\"zh_HK\">locale/bitcoin_zh_HK.qm</file>\n+        <file alias=\"zh\">locale/bitcoin_zh.qm</file>\n         <file alias=\"zh_TW\">locale/bitcoin_zh_TW.qm</file>\n     </qresource>\n </RCC>"
      },
      {
        "sha": "73eb35a54e56b78e3c2a9953c6858e9110f78708",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "2f03a3d1713a874cc4e6469c0ca83985004c8213",
        "filename": "src/qt/bitcoinamountfield.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinamountfield.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinamountfield.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "b00cdfcaf2bdd047f1a338aebd61d988188bbd27",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -63,6 +63,16 @@\n #include <QUrlQuery>\n #endif\n \n+const std::string BitcoinGUI::DEFAULT_UIPLATFORM =\n+#if defined(Q_OS_MAC)\n+        \"macosx\"\n+#elif defined(Q_OS_WIN)\n+        \"windows\"\n+#else\n+        \"other\"\n+#endif\n+        ;\n+\n const QString BitcoinGUI::DEFAULT_WALLET = \"~Default\";\n \n BitcoinGUI::BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *networkStyle, QWidget *parent) :\n@@ -447,8 +457,8 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         setNumConnections(clientModel->getNumConnections());\n         connect(clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n \n-        setNumBlocks(clientModel->getNumBlocks(), clientModel->getLastBlockDate());\n-        connect(clientModel, SIGNAL(numBlocksChanged(int,QDateTime)), this, SLOT(setNumBlocks(int,QDateTime)));\n+        setNumBlocks(clientModel->getNumBlocks(), clientModel->getLastBlockDate(), clientModel->getVerificationProgress(NULL));\n+        connect(clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double)), this, SLOT(setNumBlocks(int,QDateTime,double)));\n \n         // Receive and report messages from client model\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n@@ -676,7 +686,7 @@ void BitcoinGUI::setNumConnections(int count)\n     labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n }\n \n-void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate)\n+void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress)\n {\n     if(!clientModel)\n         return;\n@@ -753,7 +763,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate)\n         progressBarLabel->setVisible(true);\n         progressBar->setFormat(tr(\"%1 behind\").arg(timeBehindText));\n         progressBar->setMaximum(1000000000);\n-        progressBar->setValue(clientModel->getVerificationProgress() * 1000000000.0 + 0.5);\n+        progressBar->setValue(nVerificationProgress * 1000000000.0 + 0.5);\n         progressBar->setVisible(true);\n \n         tooltip = tr(\"Catching up...\") + QString(\"<br>\") + tooltip;"
      },
      {
        "sha": "871ca1ba347e98246ae585328e9df77ef0cbce50",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -48,6 +48,7 @@ class BitcoinGUI : public QMainWindow\n \n public:\n     static const QString DEFAULT_WALLET;\n+    static const std::string DEFAULT_UIPLATFORM;\n \n     explicit BitcoinGUI(const PlatformStyle *platformStyle, const NetworkStyle *networkStyle, QWidget *parent = 0);\n     ~BitcoinGUI();\n@@ -149,7 +150,7 @@ public Q_SLOTS:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n     /** Set number of blocks and last block date shown in the UI */\n-    void setNumBlocks(int count, const QDateTime& blockDate);\n+    void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title"
      },
      {
        "sha": "41f1d5841a6591edcf5b1de2ac16dacd0eeb1499",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,6 @@\n-\n+// Copyright (c) 2013-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <QtGlobal>\n \n@@ -67,6 +69,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Fees (in %s/kB) smaller than this are considered zero fee for relaying, \"\n \"mining and transaction creation (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Fees (in %s/kB) smaller than this are considered zero fee for transaction \"\n+\"creation (default: %s)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"How thorough the block verification of -checkblocks is (0-4, default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"If <category> is not supplied or if <category> = 1, output all debugging \"\n@@ -121,6 +126,8 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Set the number of threads for coin generation if enabled (-1 = all cores, \"\n \"default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Support filtering of blocks and transaction with bloom filters (default: %u)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"The block database contains a block which appears to be from the future. \"\n \"This may be due to your computer's date and time being set incorrectly. Only \"\n \"rebuild the block database if you are sure that your computer's date and \"\n@@ -152,6 +159,10 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: \"\n \"%s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Username and hashed password for JSON-RPC connections. The field <userpw> \"\n+\"comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is \"\n+\"included in share/rpcuser. This option can be specified multiple times\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"WARNING: abnormally high number of blocks generated, %d blocks received in \"\n \"the last %d hours (%d expected)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -178,7 +189,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"mode.  This will redownload the entire blockchain\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"-maxmempool must be at least %d MB\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"<category> can be:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n@@ -197,7 +207,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -externalip address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -whitebind address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot write default address\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Choose data directory on startup (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect only to the specified node(s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through SOCKS5 proxy\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n@@ -274,15 +283,12 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send transactions as zero-fee transactions if possible (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set SSL root certificates for payment request (default: -system-)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database cache size in megabytes (%d to %d, default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set key pool size to <n> (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set language, for example \\\"de_DE\\\" (default: system locale)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set maximum block size in bytes (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set minimum block size in bytes (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set the number of threads to service RPC calls (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Show all debugging options (usage: --help -help-debug)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Show splash screen on startup (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Signing transaction failed\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify configuration file (default: %s)\"),\n@@ -292,7 +298,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify pid file (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify wallet file (within data directory)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Spend unconfirmed change when sending transactions (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Start minimized\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"The transaction amount is too small to pay the fee\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is experimental software.\"),\n@@ -303,7 +308,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amount too small\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amounts must be positive\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction too large for fee policy\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction too large\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"UI Options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to start HTTP server. See debug log for details.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\"),"
      },
      {
        "sha": "649005789714f306bd6a168870962db6bfa381a6",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -111,13 +111,6 @@ QString BitcoinUnits::format(int unit, const CAmount& nIn, bool fPlus, Separator\n }\n \n \n-// TODO: Review all remaining calls to BitcoinUnits::formatWithUnit to\n-// TODO: determine whether the output is used in a plain text context\n-// TODO: or an HTML context (and replace with\n-// TODO: BtcoinUnits::formatHtmlWithUnit in the latter case). Hopefully\n-// TODO: there aren't instances where the result could be used in\n-// TODO: either context.\n-\n // NOTE: Using formatWithUnit in an HTML context risks wrapping\n // quantities at the thousands separator. More subtly, it also results\n // in a standard space rather than a thin space, due to a bug in Qt's"
      },
      {
        "sha": "fda067b0b83ba8495655378beba2344b1ed3ea80",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -88,6 +88,7 @@ class BitcoinUnits: public QAbstractListModel\n     static QString format(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Format as string (with unit)\n     static QString formatWithUnit(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n+    //! Format as HTML string (with unit)\n     static QString formatHtmlWithUnit(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Parse string to coin amount\n     static bool parse(int unit, const QString &value, CAmount *val_out);"
      },
      {
        "sha": "fb502b3c81acc98aa07b76085cc49b7207b43c16",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 35,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -22,17 +22,16 @@\n #include <QDebug>\n #include <QTimer>\n \n+class CBlockIndex;\n+\n static const int64_t nClientStartupTime = GetTime();\n+static int64_t nLastBlockTipUpdateNotification = 0;\n \n ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent),\n     optionsModel(optionsModel),\n     peerTableModel(0),\n     banTableModel(0),\n-    cachedNumBlocks(0),\n-    cachedBlockDate(QDateTime()),\n-    cachedReindexing(0),\n-    cachedImporting(0),\n     pollTimer(0)\n {\n     peerTableModel = new PeerTableModel(this);\n@@ -99,40 +98,21 @@ size_t ClientModel::getMempoolDynamicUsage() const\n     return mempool.DynamicMemoryUsage();\n }\n \n-double ClientModel::getVerificationProgress() const\n+double ClientModel::getVerificationProgress(const CBlockIndex *tipIn) const\n {\n-    LOCK(cs_main);\n-    return Checkpoints::GuessVerificationProgress(Params().Checkpoints(), chainActive.Tip());\n+    CBlockIndex *tip = const_cast<CBlockIndex *>(tipIn);\n+    if (!tip)\n+    {\n+        LOCK(cs_main);\n+        tip = chainActive.Tip();\n+    }\n+    return Checkpoints::GuessVerificationProgress(Params().Checkpoints(), tip);\n }\n \n void ClientModel::updateTimer()\n {\n-    // Get required lock upfront. This avoids the GUI from getting stuck on\n-    // periodical polls if the core is holding the locks for a longer time -\n-    // for example, during a wallet rescan.\n-    TRY_LOCK(cs_main, lockMain);\n-    if (!lockMain)\n-        return;\n-\n-    // Some quantities (such as number of blocks) change so fast that we don't want to be notified for each change.\n-    // Periodically check and update with a timer.\n-    int newNumBlocks = getNumBlocks();\n-    QDateTime newBlockDate = getLastBlockDate();\n-\n-    // check for changed number of blocks we have, number of blocks peers claim to have, reindexing state and importing state\n-    if (cachedNumBlocks != newNumBlocks ||\n-        cachedBlockDate != newBlockDate ||\n-        cachedReindexing != fReindex ||\n-        cachedImporting != fImporting)\n-    {\n-        cachedNumBlocks = newNumBlocks;\n-        cachedBlockDate = newBlockDate;\n-        cachedReindexing = fReindex;\n-        cachedImporting = fImporting;\n-\n-        Q_EMIT numBlocksChanged(newNumBlocks, newBlockDate);\n-    }\n-\n+    // no locking required at this point\n+    // the following calls will acquire the required lock\n     Q_EMIT mempoolSizeChanged(getMempoolSize(), getMempoolDynamicUsage());\n     Q_EMIT bytesChanged(getTotalBytesRecv(), getTotalBytesSent());\n }\n@@ -178,7 +158,7 @@ enum BlockSource ClientModel::getBlockSource() const\n \n QString ClientModel::getStatusBarWarnings() const\n {\n-    return QString::fromStdString(GetWarnings(\"statusbar\"));\n+    return QString::fromStdString(GetWarnings(\"gui\"));\n }\n \n OptionsModel *ClientModel::getOptionsModel()\n@@ -261,13 +241,34 @@ static void BannedListChanged(ClientModel *clientmodel)\n     QMetaObject::invokeMethod(clientmodel, \"updateBanlist\", Qt::QueuedConnection);\n }\n \n+static void BlockTipChanged(ClientModel *clientmodel, bool initialSync, const CBlockIndex *pIndex)\n+{\n+    // lock free async UI updates in case we have a new block tip\n+    // during initial sync, only update the UI if the last update\n+    // was > 250ms (MODEL_UPDATE_DELAY) ago\n+    int64_t now = 0;\n+    if (initialSync)\n+        now = GetTimeMillis();\n+\n+    // if we are in-sync, update the UI regardless of last update time\n+    if (!initialSync || now - nLastBlockTipUpdateNotification > MODEL_UPDATE_DELAY) {\n+        //pass a async signal to the UI thread\n+        QMetaObject::invokeMethod(clientmodel, \"numBlocksChanged\", Qt::QueuedConnection,\n+                                  Q_ARG(int, pIndex->nHeight),\n+                                  Q_ARG(QDateTime, QDateTime::fromTime_t(pIndex->GetBlockTime())),\n+                                  Q_ARG(double, clientmodel->getVerificationProgress(pIndex)));\n+        nLastBlockTipUpdateNotification = now;\n+    }\n+}\n+\n void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n     uiInterface.BannedListChanged.connect(boost::bind(BannedListChanged, this));\n+    uiInterface.NotifyBlockTip.connect(boost::bind(BlockTipChanged, this, _1, _2));\n }\n \n void ClientModel::unsubscribeFromCoreSignals()\n@@ -277,4 +278,5 @@ void ClientModel::unsubscribeFromCoreSignals()\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));\n     uiInterface.BannedListChanged.disconnect(boost::bind(BannedListChanged, this));\n+    uiInterface.NotifyBlockTip.disconnect(boost::bind(BlockTipChanged, this, _1, _2));\n }"
      },
      {
        "sha": "62c9f71ac77922037c9e2284868bb0b66710bbc6",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -15,6 +15,7 @@ class PeerTableModel;\n class TransactionTableModel;\n \n class CWallet;\n+class CBlockIndex;\n \n QT_BEGIN_NAMESPACE\n class QTimer;\n@@ -59,7 +60,7 @@ class ClientModel : public QObject\n     quint64 getTotalBytesRecv() const;\n     quint64 getTotalBytesSent() const;\n \n-    double getVerificationProgress() const;\n+    double getVerificationProgress(const CBlockIndex *tip) const;\n     QDateTime getLastBlockDate() const;\n \n     //! Return true if core is doing initial block download\n@@ -81,19 +82,14 @@ class ClientModel : public QObject\n     PeerTableModel *peerTableModel;\n     BanTableModel *banTableModel;\n \n-    int cachedNumBlocks;\n-    QDateTime cachedBlockDate;\n-    bool cachedReindexing;\n-    bool cachedImporting;\n-\n     QTimer *pollTimer;\n \n     void subscribeToCoreSignals();\n     void unsubscribeFromCoreSignals();\n \n Q_SIGNALS:\n     void numConnectionsChanged(int count);\n-    void numBlocksChanged(int count, const QDateTime& blockDate);\n+    void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress);\n     void mempoolSizeChanged(long count, size_t mempoolSizeInBytes);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);"
      },
      {
        "sha": "7393c83c7d0dffaa44b2c6ccffd62f2d42421259",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -130,7 +130,7 @@ CoinControlDialog::CoinControlDialog(const PlatformStyle *platformStyle, QWidget\n     ui->treeWidget->setColumnWidth(COLUMN_DATE, 110);\n     ui->treeWidget->setColumnWidth(COLUMN_CONFIRMATIONS, 100);\n     ui->treeWidget->setColumnWidth(COLUMN_PRIORITY, 100);\n-    ui->treeWidget->setColumnHidden(COLUMN_TXHASH, true);         // store transacton hash in this column, but don't show it\n+    ui->treeWidget->setColumnHidden(COLUMN_TXHASH, true);         // store transaction hash in this column, but don't show it\n     ui->treeWidget->setColumnHidden(COLUMN_VOUT_INDEX, true);     // store vout index in this column, but don't show it\n     ui->treeWidget->setColumnHidden(COLUMN_AMOUNT_INT64, true);   // store amount int64 in this column, but don't show it\n     ui->treeWidget->setColumnHidden(COLUMN_PRIORITY_INT64, true); // store priority int64 in this column, but don't show it\n@@ -408,10 +408,8 @@ void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n             CoinControlDialog::updateLabels(model, this);\n     }\n \n-    // todo: this is a temporary qt5 fix: when clicking a parent node in tree mode, the parent node\n-    //       including all children are partially selected. But the parent node should be fully selected\n-    //       as well as the children. Children should never be partially selected in the first place.\n-    //       Please remove this ugly fix, once the bug is solved upstream.\n+    // TODO: Remove this temporary qt5 fix after Qt5.3 and Qt5.4 are no longer used.\n+    //       Fixed in Qt5.5 and above: https://bugreports.qt.io/browse/QTBUG-43473\n #if QT_VERSION >= 0x050000\n     else if (column == COLUMN_CHECKBOX && item->childCount() > 0)\n     {\n@@ -538,7 +536,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         nBytes = nBytesInputs + ((CoinControlDialog::payAmounts.size() > 0 ? CoinControlDialog::payAmounts.size() + 1 : 2) * 34) + 10; // always assume +1 output for change here\n \n         // Priority\n-        double mempoolEstimatePriority = mempool.estimatePriority(nTxConfirmTarget);\n+        double mempoolEstimatePriority = mempool.estimateSmartPriority(nTxConfirmTarget);\n         dPriority = dPriorityInputs / (nBytes - nBytesInputs + (nQuantityUncompressed * 29)); // 29 = 180 - 151 (uncompressed public keys are over the limit. max 151 bytes of the input are ignored for priority)\n         sPriorityLabel = CoinControlDialog::getPriorityLabel(dPriority, mempoolEstimatePriority);\n \n@@ -549,11 +547,12 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         // Fee\n         nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, mempool);\n+        if (nPayFee > 0 && coinControl->nMinimumTotalFee > nPayFee)\n+            nPayFee = coinControl->nMinimumTotalFee;\n \n-        // Allow free?\n-        double dPriorityNeeded = mempoolEstimatePriority;\n-        if (dPriorityNeeded <= 0)\n-            dPriorityNeeded = AllowFreeThreshold(); // not enough data, back to hard-coded\n+\n+        // Allow free? (require at least hard-coded threshold and default to that if no estimate)\n+        double dPriorityNeeded = std::max(mempoolEstimatePriority, AllowFreeThreshold());\n         fAllowFree = (dPriority >= dPriorityNeeded);\n \n         if (fSendFreeTransactions)\n@@ -621,7 +620,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l6->setText(sPriorityLabel);                                             // Priority\n     l7->setText(fDust ? tr(\"yes\") : tr(\"no\"));                               // Dust\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n-    if (nPayFee > 0 && !(payTxFee.GetFeePerK() > 0 && fPayAtLeastCustomFee && nBytes < 1000))\n+    if (nPayFee > 0 && (coinControl->nMinimumTotalFee < nPayFee))\n     {\n         l3->setText(ASYMP_UTF8 + l3->text());\n         l4->setText(ASYMP_UTF8 + l4->text());\n@@ -636,21 +635,22 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n-    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000))) + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatHtmlWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000))) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n     toolTip2 += tr(\"This label turns red if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000)));\n+    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatHtmlWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000)));\n \n-    QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n+    QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than the current dust threshold.\");\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n     double dFeeVary;\n     if (payTxFee.GetFeePerK() > 0)\n         dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), payTxFee.GetFeePerK()) / 1000;\n-    else\n-        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), mempool.estimateFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n+    else {\n+        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), mempool.estimateSmartFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n+    }\n     QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n \n     l3->setToolTip(toolTip4);\n@@ -686,7 +686,7 @@ void CoinControlDialog::updateView()\n     QFlags<Qt::ItemFlag> flgTristate = Qt::ItemIsSelectable | Qt::ItemIsEnabled | Qt::ItemIsUserCheckable | Qt::ItemIsTristate;\n \n     int nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n-    double mempoolEstimatePriority = mempool.estimatePriority(nTxConfirmTarget);\n+    double mempoolEstimatePriority = mempool.estimateSmartPriority(nTxConfirmTarget);\n \n     std::map<QString, std::vector<COutput> > mapCoins;\n     model->listCoins(mapCoins);"
      },
      {
        "sha": "1a467eb2ffba25fd859f1920507e8c81d35807f3",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "f86bc0851f24ebb6599ed83aa217657db7137294",
        "filename": "src/qt/coincontroltreewidget.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/coincontroltreewidget.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/coincontroltreewidget.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroltreewidget.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "62645fcdb07470f6b3becefeca7c157ad954c0d9",
        "filename": "src/qt/coincontroltreewidget.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/coincontroltreewidget.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/coincontroltreewidget.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroltreewidget.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2014 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "8a1a49bb06c5c98240fff4fc822c95e10acfba21",
        "filename": "src/qt/csvmodelwriter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/csvmodelwriter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/csvmodelwriter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/csvmodelwriter.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2014 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "edea369ad1fa5c0999546fe74545b30fda4c765c",
        "filename": "src/qt/csvmodelwriter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/csvmodelwriter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/csvmodelwriter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/csvmodelwriter.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2014 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5f45031e9eb545f16e18df5fc3da4c5df1532e59",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2014 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "ddb67ece72302880821701f7ff7d0b7717e77a77",
        "filename": "src/qt/editaddressdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/editaddressdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/editaddressdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "febbaeda1b84d2da7228f0ed3dea184199769306",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "modified",
        "additions": 147,
        "deletions": 18,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -450,6 +450,125 @@\n        <property name=\"spacing\">\n         <number>3</number>\n        </property>\n+       <property name=\"bottomMargin\">\n+        <number>5</number>\n+       </property>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n+         <property name=\"spacing\">\n+          <number>4</number>\n+         </property>\n+         <item>\n+          <spacer name=\"horizontalSpacer\">\n+           <property name=\"orientation\">\n+            <enum>Qt::Horizontal</enum>\n+           </property>\n+           <property name=\"sizeHint\" stdset=\"0\">\n+            <size>\n+             <width>40</width>\n+             <height>20</height>\n+            </size>\n+           </property>\n+          </spacer>\n+         </item>\n+         <item>\n+          <widget class=\"QPushButton\" name=\"fontSmallerButton\">\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>24</width>\n+             <height>24</height>\n+            </size>\n+           </property>\n+           <property name=\"text\">\n+            <string/>\n+           </property>\n+           <property name=\"toolTip\">\n+            <string>Decrease font size</string>\n+           </property>\n+           <property name=\"icon\">\n+            <iconset resource=\"../bitcoin.qrc\">\n+             <normaloff>:/icons/fontsmaller</normaloff>:/icons/fontsmaller</iconset>\n+           </property>\n+           <property name=\"iconSize\">\n+            <size>\n+             <width>24</width>\n+             <height>16</height>\n+            </size>\n+           </property>\n+           <property name=\"autoDefault\">\n+            <bool>false</bool>\n+           </property>\n+           <property name=\"flat\">\n+            <bool>true</bool>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QPushButton\" name=\"fontBiggerButton\">\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>24</width>\n+             <height>24</height>\n+            </size>\n+           </property>\n+           <property name=\"toolTip\">\n+            <string>Increase font size</string>\n+           </property>\n+           <property name=\"text\">\n+            <string/>\n+           </property>\n+           <property name=\"icon\">\n+            <iconset resource=\"../bitcoin.qrc\">\n+             <normaloff>:/icons/fontbigger</normaloff>:/icons/fontbigger</iconset>\n+           </property>\n+           <property name=\"iconSize\">\n+            <size>\n+             <width>24</width>\n+             <height>16</height>\n+            </size>\n+           </property>\n+           <property name=\"autoDefault\">\n+            <bool>false</bool>\n+           </property>\n+           <property name=\"flat\">\n+            <bool>true</bool>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QPushButton\" name=\"clearButton\">\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>24</width>\n+             <height>24</height>\n+            </size>\n+           </property>\n+           <property name=\"toolTip\">\n+            <string>Clear console</string>\n+           </property>\n+           <property name=\"layoutDirection\">\n+            <enum>Qt::LeftToRight</enum>\n+           </property>\n+           <property name=\"text\">\n+            <string/>\n+           </property>\n+           <property name=\"icon\">\n+            <iconset resource=\"../bitcoin.qrc\">\n+             <normaloff>:/icons/remove</normaloff>:/icons/remove</iconset>\n+           </property>\n+           <property name=\"shortcut\">\n+            <string notr=\"true\">Ctrl+L</string>\n+           </property>\n+           <property name=\"autoDefault\">\n+            <bool>false</bool>\n+           </property>\n+           <property name=\"flat\">\n+            <bool>true</bool>\n+           </property>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n        <item>\n         <widget class=\"QTextEdit\" name=\"messagesWidget\">\n          <property name=\"minimumSize\">\n@@ -470,44 +589,48 @@\n         </widget>\n        </item>\n        <item>\n-        <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayoutPrompt\">\n          <property name=\"spacing\">\n           <number>3</number>\n          </property>\n          <item>\n-          <widget class=\"QLabel\" name=\"label\">\n-           <property name=\"text\">\n-            <string notr=\"true\">&gt;</string>\n+          <widget class=\"QPushButton\" name=\"promptIcon\">\n+           <property name=\"enabled\">\n+            <bool>false</bool>\n            </property>\n-          </widget>\n-         </item>\n-         <item>\n-          <widget class=\"QLineEdit\" name=\"lineEdit\"/>\n-         </item>\n-         <item>\n-          <widget class=\"QPushButton\" name=\"clearButton\">\n            <property name=\"maximumSize\">\n             <size>\n-             <width>24</width>\n+             <width>16</width>\n              <height>24</height>\n             </size>\n            </property>\n-           <property name=\"toolTip\">\n-            <string>Clear console</string>\n-           </property>\n            <property name=\"text\">\n             <string/>\n            </property>\n            <property name=\"icon\">\n             <iconset resource=\"../bitcoin.qrc\">\n-             <normaloff>:/icons/remove</normaloff>:/icons/remove</iconset>\n+             <normaloff>:/icons/prompticon</normaloff>\n+             <disabledoff>:/icons/prompticon</disabledoff>:/icons/prompticon</iconset>\n            </property>\n-           <property name=\"shortcut\">\n-            <string notr=\"true\">Ctrl+L</string>\n+           <property name=\"iconSize\">\n+            <size>\n+             <width>14</width>\n+             <height>14</height>\n+            </size>\n            </property>\n            <property name=\"autoDefault\">\n             <bool>false</bool>\n            </property>\n+           <property name=\"flat\">\n+            <bool>true</bool>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLineEdit\" name=\"lineEdit\">\n+           <property name=\"placeholderText\">\n+            <string/>\n+           </property>\n           </widget>\n          </item>\n         </layout>\n@@ -782,6 +905,9 @@\n            <property name=\"horizontalScrollBarPolicy\">\n             <enum>Qt::ScrollBarAsNeeded</enum>\n            </property>\n+           <property name=\"tabKeyNavigation\">\n+            <bool>false</bool>\n+           </property>\n            <property name=\"sortingEnabled\">\n             <bool>true</bool>\n            </property>\n@@ -843,6 +969,9 @@\n            <property name=\"horizontalScrollBarPolicy\">\n             <enum>Qt::ScrollBarAsNeeded</enum>\n            </property>\n+           <property name=\"tabKeyNavigation\">\n+            <bool>false</bool>\n+           </property>\n            <property name=\"sortingEnabled\">\n             <bool>true</bool>\n            </property>"
      },
      {
        "sha": "5ceffcd70af58c9c35e168f556cc47fc8a56f93f",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -14,6 +14,8 @@ static const int MAX_PASSPHRASE_SIZE = 1024;\n /* BitcoinGUI -- Size of icons in status bar */\n static const int STATUSBAR_ICONSIZE = 16;\n \n+static const bool DEFAULT_SPLASHSCREEN = true;\n+\n /* Invalid field background style */\n #define STYLE_INVALID \"background:#FF8080\"\n "
      },
      {
        "sha": "ff4320b36a4809b8e890eec8836baa9d8c4540ab",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -62,6 +62,10 @@\n #include <QUrlQuery>\n #endif\n \n+#if QT_VERSION >= 0x50200\n+#include <QFontDatabase>\n+#endif\n+\n #if BOOST_FILESYSTEM_VERSION >= 3\n static boost::filesystem::detail::utf8_codecvt_facet utf8;\n #endif\n@@ -90,13 +94,17 @@ QString dateTimeStr(qint64 nTime)\n \n QFont fixedPitchFont()\n {\n+#if QT_VERSION >= 0x50200\n+    return QFontDatabase::systemFont(QFontDatabase::FixedFont);\n+#else\n     QFont font(\"Monospace\");\n #if QT_VERSION >= 0x040800\n     font.setStyleHint(QFont::Monospace);\n #else\n     font.setStyleHint(QFont::TypeWriter);\n #endif\n     return font;\n+#endif\n }\n \n void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n@@ -217,7 +225,7 @@ QString formatBitcoinURI(const SendCoinsRecipient &info)\n \n     if (!info.message.isEmpty())\n     {\n-        QString msg(QUrl::toPercentEncoding(info.message));;\n+        QString msg(QUrl::toPercentEncoding(info.message));\n         ret += QString(\"%1message=%2\").arg(paramCount == 0 ? \"?\" : \"&\").arg(msg);\n         paramCount++;\n     }\n@@ -898,6 +906,9 @@ QString formatServicesStr(quint64 mask)\n             case NODE_GETUTXO:\n                 strList.append(\"GETUTXO\");\n                 break;\n+            case NODE_BLOOM:\n+                strList.append(\"BLOOM\");\n+                break;\n             default:\n                 strList.append(QString(\"%1[%2]\").arg(\"UNKNOWN\").arg(check));\n             }"
      },
      {
        "sha": "9267e0a6c9db01453753c3b539d130eae3205dab",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "6d6af54290fd54a6231aaa6e3c92848d9685ee97",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 7,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -19,9 +19,15 @@\n #include <QSettings>\n #include <QMessageBox>\n \n-/* Minimum free space (in bytes) needed for data directory */\n+#include <cmath>\n+\n static const uint64_t GB_BYTES = 1000000000LL;\n-static const uint64_t BLOCK_CHAIN_SIZE = 20LL * GB_BYTES;\n+/* Minimum free space (in GB) needed for data directory */\n+static const uint64_t BLOCK_CHAIN_SIZE = 80;\n+/* Minimum free space (in GB) needed for data directory when pruned; Does not include prune target */\n+static const uint64_t CHAIN_STATE_SIZE = 2;\n+/* Total required space (in GB) depending on user choice (prune, not prune) */\n+static uint64_t requiredSpace;\n \n /* Check free space asynchronously to prevent hanging the UI thread.\n \n@@ -118,7 +124,11 @@ Intro::Intro(QWidget *parent) :\n     ui->setupUi(this);\n     ui->welcomeLabel->setText(ui->welcomeLabel->text().arg(tr(PACKAGE_NAME)));\n     ui->storageLabel->setText(ui->storageLabel->text().arg(tr(PACKAGE_NAME)));\n-    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(tr(PACKAGE_NAME)).arg(BLOCK_CHAIN_SIZE/GB_BYTES));\n+    uint64_t pruneTarget = std::max<int64_t>(0, GetArg(\"-prune\", 0));\n+    requiredSpace = BLOCK_CHAIN_SIZE;\n+    if (pruneTarget)\n+        requiredSpace = CHAIN_STATE_SIZE + std::ceil(pruneTarget * 1024 * 1024.0 / GB_BYTES);\n+    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(tr(PACKAGE_NAME)).arg(requiredSpace));\n     startThread();\n }\n \n@@ -168,7 +178,7 @@ void Intro::pickDataDirectory()\n     /* 2) Allow QSettings to override default dir */\n     dataDir = settings.value(\"strDataDir\", dataDir).toString();\n \n-    if(!fs::exists(GUIUtil::qstringToBoostPath(dataDir)) || GetBoolArg(\"-choosedatadir\", false))\n+    if(!fs::exists(GUIUtil::qstringToBoostPath(dataDir)) || GetBoolArg(\"-choosedatadir\", DEFAULT_CHOOSE_DATADIR))\n     {\n         /* If current default data directory does not exist, let the user choose one */\n         Intro intro;\n@@ -222,9 +232,9 @@ void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable\n         ui->freeSpace->setText(\"\");\n     } else {\n         QString freeString = tr(\"%n GB of free space available\", \"\", bytesAvailable/GB_BYTES);\n-        if(bytesAvailable < BLOCK_CHAIN_SIZE)\n+        if(bytesAvailable < requiredSpace * GB_BYTES)\n         {\n-            freeString += \" \" + tr(\"(of %n GB needed)\", \"\", BLOCK_CHAIN_SIZE/GB_BYTES);\n+            freeString += \" \" + tr(\"(of %n GB needed)\", \"\", requiredSpace);\n             ui->freeSpace->setStyleSheet(\"QLabel { color: #800000 }\");\n         } else {\n             ui->freeSpace->setStyleSheet(\"\");"
      },
      {
        "sha": "9e2e96dc9eca76ac8818bbc493f15cd769b3575c",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -9,6 +9,8 @@\n #include <QMutex>\n #include <QThread>\n \n+static const bool DEFAULT_CHOOSE_DATADIR = false;\n+\n class FreespaceChecker;\n \n namespace Ui {"
      },
      {
        "sha": "33655408539ebddda2f5cc45c8511d95177331be",
        "filename": "src/qt/locale/bitcoin_ach.ts",
        "status": "removed",
        "additions": 0,
        "deletions": 113,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/locale/bitcoin_ach.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/locale/bitcoin_ach.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ach.ts?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961",
        "patch": "@@ -1,113 +0,0 @@\n-<TS language=\"ach\" version=\"2.1\">\n-<context>\n-    <name>AddressBookPage</name>\n-    </context>\n-<context>\n-    <name>AddressTableModel</name>\n-    </context>\n-<context>\n-    <name>AskPassphraseDialog</name>\n-    </context>\n-<context>\n-    <name>BanTableModel</name>\n-    </context>\n-<context>\n-    <name>BitcoinGUI</name>\n-    </context>\n-<context>\n-    <name>ClientModel</name>\n-    </context>\n-<context>\n-    <name>CoinControlDialog</name>\n-    </context>\n-<context>\n-    <name>EditAddressDialog</name>\n-    </context>\n-<context>\n-    <name>FreespaceChecker</name>\n-    </context>\n-<context>\n-    <name>HelpMessageDialog</name>\n-    </context>\n-<context>\n-    <name>Intro</name>\n-    </context>\n-<context>\n-    <name>OpenURIDialog</name>\n-    </context>\n-<context>\n-    <name>OptionsDialog</name>\n-    </context>\n-<context>\n-    <name>OverviewPage</name>\n-    </context>\n-<context>\n-    <name>PaymentServer</name>\n-    </context>\n-<context>\n-    <name>PeerTableModel</name>\n-    </context>\n-<context>\n-    <name>QObject</name>\n-    </context>\n-<context>\n-    <name>QRImageWidget</name>\n-    </context>\n-<context>\n-    <name>RPCConsole</name>\n-    </context>\n-<context>\n-    <name>ReceiveCoinsDialog</name>\n-    </context>\n-<context>\n-    <name>ReceiveRequestDialog</name>\n-    </context>\n-<context>\n-    <name>RecentRequestsTableModel</name>\n-    </context>\n-<context>\n-    <name>SendCoinsDialog</name>\n-    </context>\n-<context>\n-    <name>SendCoinsEntry</name>\n-    </context>\n-<context>\n-    <name>ShutdownWindow</name>\n-    </context>\n-<context>\n-    <name>SignVerifyMessageDialog</name>\n-    </context>\n-<context>\n-    <name>SplashScreen</name>\n-    </context>\n-<context>\n-    <name>TrafficGraphWidget</name>\n-    </context>\n-<context>\n-    <name>TransactionDesc</name>\n-    </context>\n-<context>\n-    <name>TransactionDescDialog</name>\n-    </context>\n-<context>\n-    <name>TransactionTableModel</name>\n-    </context>\n-<context>\n-    <name>TransactionView</name>\n-    </context>\n-<context>\n-    <name>UnitDisplayStatusBarControl</name>\n-    </context>\n-<context>\n-    <name>WalletFrame</name>\n-    </context>\n-<context>\n-    <name>WalletModel</name>\n-    </context>\n-<context>\n-    <name>WalletView</name>\n-    </context>\n-<context>\n-    <name>bitcoin-core</name>\n-    </context>\n-</TS>\n\\ No newline at end of file"
      },
      {
        "sha": "d77aa77f8e6f84e3e6b0b65353761ecb034ca40b",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -214,6 +214,14 @@\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n+    <message>\n+        <source>&amp;Label</source>\n+        <translation>&amp;Etiket</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Adres</translation>\n+    </message>\n     <message>\n         <source>New receiving address</source>\n         <translation>Nuwe ontvangende adres</translation>\n@@ -261,6 +269,10 @@\n         <source>Options</source>\n         <translation>Opsies</translation>\n     </message>\n+    <message>\n+        <source>W&amp;allet</source>\n+        <translation>&amp;Beursie</translation>\n+    </message>\n     </context>\n <context>\n     <name>OverviewPage</name>\n@@ -294,6 +306,14 @@\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n+    <message>\n+        <source>&amp;Amount:</source>\n+        <translation>&amp;Bedrag:</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Message:</source>\n+        <translation>&amp;Boodskap:</translation>\n+    </message>\n     <message>\n         <source>Copy amount</source>\n         <translation>Kopieer bedrag</translation>\n@@ -347,10 +367,18 @@\n         <source>Send Coins</source>\n         <translation>Stuur Munstukke</translation>\n     </message>\n+    <message>\n+        <source>Insufficient funds!</source>\n+        <translation>Onvoldoende fondse</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>Bedrag:</translation>\n     </message>\n+    <message>\n+        <source>Transaction Fee:</source>\n+        <translation>Transaksie fooi:</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>Stuur aan vele ontvangers op eens</translation>\n@@ -374,6 +402,10 @@\n     </context>\n <context>\n     <name>SendCoinsEntry</name>\n+    <message>\n+        <source>A&amp;mount:</source>\n+        <translation>&amp;Bedrag:</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Boodskap:</translation>\n@@ -453,6 +485,10 @@\n         <source>Transaction ID</source>\n         <translation>Transaksie ID</translation>\n     </message>\n+    <message>\n+        <source>Transaction</source>\n+        <translation>Transaksie</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>Bedrag</translation>"
      },
      {
        "sha": "88ce05bbd5dbcfe26a7e564c75da04d28081bd10",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 85,
        "deletions": 1,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -93,7 +93,11 @@\n         <source>Exporting Failed</source>\n         <translation>\u0641\u0634\u0644 \u0627\u0644\u062a\u0635\u062f\u064a\u0631</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>\u0644\u0642\u062f \u062d\u062f\u062b \u062e\u0637\u0623 \u0623\u062b\u0646\u0627\u0621  \u062d\u0641\u0638 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0625\u0644\u0649 %1. \u064a\u0631\u062c\u0649 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -333,6 +337,10 @@\n         <source>Wallet</source>\n         <translation>\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n+    <message>\n+        <source>&amp;Send</source>\n+        <translation>&amp;\u0627\u0631\u0633\u0644</translation>\n+    </message>\n     <message>\n         <source>&amp;Receive</source>\n         <translation>&amp;\u0627\u0633\u062a\u0642\u0628\u0644</translation>\n@@ -377,6 +385,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>\u062d\u0648\u0644 bitcoin core</translation>\n     </message>\n+    <message>\n+        <source>%1 and %2</source>\n+        <translation>%1 \u0648 %2</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u062e\u0637\u0623</translation>\n@@ -779,6 +791,10 @@\n     </context>\n <context>\n     <name>PaymentServer</name>\n+    <message>\n+        <source>Bad response from server %1</source>\n+        <translation>\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0633\u064a\u0626\u0629 \u0645\u0646 \u0627\u0644\u0645\u0644\u0642\u0645 %1</translation>\n+    </message>\n     </context>\n <context>\n     <name>PeerTableModel</name>\n@@ -789,6 +805,14 @@\n         <source>Amount</source>\n         <translation>\u0627\u0644\u0645\u0628\u0644\u063a</translation>\n     </message>\n+    <message>\n+        <source>%1 h</source>\n+        <translation>%1 \u0633\u0627\u0639\u0629</translation>\n+    </message>\n+    <message>\n+        <source>%1 m</source>\n+        <translation>%1 \u062f\u0642\u064a\u0642\u0629</translation>\n+    </message>\n     <message>\n         <source>N/A</source>\n         <translation>\u063a\u064a\u0631 \u0645\u0639\u0631\u0648\u0641</translation>\n@@ -831,6 +855,10 @@\n         <source>&amp;Information</source>\n         <translation>\u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a</translation>\n     </message>\n+    <message>\n+        <source>Debug window</source>\n+        <translation>\u0646\u0627\u0641\u0630\u0629 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629</translation>\n+    </message>\n     <message>\n         <source>General</source>\n         <translation>\u0639\u0627\u0645</translation>\n@@ -907,6 +935,22 @@\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>\u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0633\u0647\u0645 \u0627\u0644\u0627\u0639\u0644\u0649 \u0648 \u0627\u0644\u0627\u0633\u0641\u0644 \u0644\u0644\u062a\u0646\u0642\u0644 \u0628\u064a\u0646 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0648 &lt;b&gt;Ctrl-L&lt;/b&gt;  \u0644\u0645\u0633\u062d \u0627\u0644\u0634\u0627\u0634\u0629</translation>\n     </message>\n+    <message>\n+        <source>%1 B</source>\n+        <translation>%1 \u0628\u0627\u064a\u062a</translation>\n+    </message>\n+    <message>\n+        <source>%1 KB</source>\n+        <translation>%1 \u0643\u064a\u0644\u0648 \u0628\u0627\u064a\u062a</translation>\n+    </message>\n+    <message>\n+        <source>%1 MB</source>\n+        <translation>%1 \u0645\u064a\u0642\u0627 \u0628\u0627\u064a\u062a</translation>\n+    </message>\n+    <message>\n+        <source>%1 GB</source>\n+        <translation>%1 \u0642\u064a\u0642\u0627 \u0628\u0627\u064a\u062a</translation>\n+    </message>\n     <message>\n         <source>Yes</source>\n         <translation>\u0646\u0639\u0645</translation>\n@@ -1075,6 +1119,10 @@\n         <source>Change:</source>\n         <translation>\u062a\u0639\u062f\u064a\u0644 :</translation>\n     </message>\n+    <message>\n+        <source>Transaction Fee:</source>\n+        <translation>\u0631\u0633\u0648\u0645 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629:</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>\u0625\u0631\u0633\u0627\u0644 \u0625\u0644\u0649 \u0639\u062f\u0629 \u0645\u0633\u062a\u0644\u0645\u064a\u0646 \u0641\u064a \u0648\u0642\u062a \u0648\u0627\u062d\u062f</translation>\n@@ -1107,6 +1155,10 @@\n         <source>Confirm send coins</source>\n         <translation>\u062a\u0623\u0643\u064a\u062f \u0627\u0644\u0625\u0631\u0633\u0627\u0644 Coins</translation>\n     </message>\n+    <message>\n+        <source>%1 to %2</source>\n+        <translation>%1 \u0627\u0644\u0649 %2</translation>\n+    </message>\n     <message>\n         <source>Copy quantity</source>\n         <translation>\u0646\u0633\u062e \u0627\u0644\u0643\u0645\u064a\u0629 </translation>\n@@ -1143,13 +1195,21 @@\n         <source>The amount exceeds your balance.</source>\n         <translation>\u0627\u0644\u0642\u064a\u0645\u0629 \u062a\u062a\u062c\u0627\u0648\u0632 \u0631\u0635\u064a\u062f\u0643</translation>\n     </message>\n+    <message>\n+        <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n+        <translation>\u0627\u0644\u0645\u062c\u0645\u0648\u0639 \u064a\u062a\u062c\u0627\u0648\u0632 \u0631\u0635\u064a\u062f\u0643 \u0639\u0646\u062f\u0645\u0627 \u064a\u062a\u0645 \u0627\u0636\u0627\u0641\u0629 %1 \u0631\u0633\u0648\u0645 \u0627\u0644\u0639\u0645\u0644\u064a\u0629</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0644\u0627 \u0648\u0635\u0641)</translation>\n     </message>\n     </context>\n <context>\n     <name>SendCoinsEntry</name>\n+    <message>\n+        <source>A&amp;mount:</source>\n+        <translation>&amp;\u0627\u0644\u0642\u064a\u0645\u0629</translation>\n+    </message>\n     <message>\n         <source>Pay &amp;To:</source>\n         <translation>\u0627\u062f\u0641\u0639 &amp;\u0627\u0644\u0649 :</translation>\n@@ -1178,6 +1238,10 @@\n         <source>Message:</source>\n         <translation>\u0627\u0644\u0631\u0633\u0627\u0626\u0644</translation>\n     </message>\n+    <message>\n+        <source>Pay To:</source>\n+        <translation>\u0627\u062f\u0641\u0639 &amp;\u0627\u0644\u0649 :</translation>\n+    </message>\n     </context>\n <context>\n     <name>ShutdownWindow</name>\n@@ -1297,10 +1361,22 @@\n     </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>\u0645\u0641\u062a\u0648\u062d \u062d\u062a\u0649 %1</translation>\n+    </message>\n     <message>\n         <source>conflicted</source>\n         <translation>\u064a\u062a\u0639\u0627\u0631\u0636</translation>\n     </message>\n+    <message>\n+        <source>%1/offline</source>\n+        <translation>%1 \u063a\u064a\u0631 \u0645\u062a\u0648\u0627\u062c\u062f</translation>\n+    </message>\n+    <message>\n+        <source>%1/unconfirmed</source>\n+        <translation>\u063a\u064a\u0631 \u0645\u0624\u0643\u062f\u0629/%1</translation>\n+    </message>\n     <message>\n         <source>%1 confirmations</source>\n         <translation>\u062a\u0623\u0643\u064a\u062f %1</translation>\n@@ -1411,6 +1487,10 @@\n         <source>Type</source>\n         <translation>\u0627\u0644\u0646\u0648\u0639</translation>\n     </message>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>\u0645\u0641\u062a\u0648\u062d \u062d\u062a\u0649 %1</translation>\n+    </message>\n     <message>\n         <source>This block was not received by any other nodes and will probably not be accepted!</source>\n         <translation>\u0644\u0645 \u064a\u062a\u0645 \u062a\u0644\u0642\u0649 \u0647\u0630\u0647 \u0627\u0644\u0643\u062a\u0644\u0629 (Block) \u0645\u0646 \u0642\u0628\u0644 \u0623\u064a \u0627\u0644\u0639\u0642\u062f \u0627\u0644\u0623\u062e\u0631\u0649 \u0648\u0631\u0628\u0645\u0627 \u0644\u0646 \u062a\u0643\u0648\u0646 \u0645\u0642\u0628\u0648\u0644\u0629!</translation>\n@@ -1427,6 +1507,10 @@\n         <source>Label</source>\n         <translation>\u0648\u0635\u0641</translation>\n     </message>\n+    <message>\n+        <source>Conflicted</source>\n+        <translation>\u064a\u062a\u0639\u0627\u0631\u0636</translation>\n+    </message>\n     <message>\n         <source>Received with</source>\n         <translation>\u0627\u0633\u062a\u0642\u0628\u0644 \u0645\u0639</translation>"
      },
      {
        "sha": "2709ff37e5157285c3c7c4f2720eae1dcd7105d3",
        "filename": "src/qt/locale/bitcoin_be_BY.ts",
        "status": "modified",
        "additions": 33,
        "deletions": 5,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_be_BY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_be_BY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_be_BY.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -798,7 +798,7 @@\n         <source>command-line options</source>\n         <translation>\u043e\u043f\u0446\u044b\u0456 \u043a\u0430\u043c\u0430\u043d\u0434\u043d\u0430\u0433\u0430 \u0440\u0430\u0434\u043a\u0430</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>Intro</name>\n     <message>\n@@ -843,6 +843,10 @@\n         <source>MB</source>\n         <translation>\u041c\u0431</translation>\n     </message>\n+    <message>\n+        <source>W&amp;allet</source>\n+        <translation>\u0413\u0430\u043c\u0430\u043d\u0435\u0446</translation>\n+    </message>\n     </context>\n <context>\n     <name>OverviewPage</name>\n@@ -869,9 +873,21 @@\n     </context>\n <context>\n     <name>RPCConsole</name>\n+    <message>\n+        <source>&amp;Information</source>\n+        <translation>\u0406\u043d\u0444\u0430\u0440\u043c\u0430\u0446\u044b\u044f</translation>\n+    </message>\n+    <message>\n+        <source>Debug window</source>\n+        <translation>\u0412\u0430\u043a\u043d\u043e \u0430\u0434\u043b\u0430\u0434\u043a\u0456</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n+    <message>\n+        <source>&amp;Amount:</source>\n+        <translation>&amp;\u041a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c:</translation>\n+    </message>\n     <message>\n         <source>&amp;Label:</source>\n         <translation>\u041c\u0435\u0442\u043a\u0430:</translation>\n@@ -887,6 +903,10 @@\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Copy &amp;Address</source>\n+        <translation>\u041a\u0430\u043f\u0456\u044f\u0432\u0430\u0446\u044c \u0430\u0434\u0440\u0430\u0441</translation>\n+    </message>\n     <message>\n         <source>Address</source>\n         <translation>\u0410\u0434\u0440\u0430\u0441</translation>\n@@ -933,6 +953,10 @@\n         <source>Send Coins</source>\n         <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u041c\u0430\u043d\u0435\u0442\u044b</translation>\n     </message>\n+    <message>\n+        <source>Insufficient funds!</source>\n+        <translation>\u041d\u0435\u0434\u0430\u0441\u0442\u0430\u0442\u043a\u043e\u0432\u0430 \u0441\u0440\u043e\u0434\u043a\u0430\u045e</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>\u041a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c:</translation>\n@@ -1044,6 +1068,14 @@\n         <source>Alt+P</source>\n         <translation>Alt+P</translation>\n     </message>\n+    <message>\n+        <source>Message:</source>\n+        <translation>\u041f\u0430\u0432\u0435\u0434\u0430\u043c\u043b\u0435\u043d\u043d\u0435:</translation>\n+    </message>\n+    <message>\n+        <source>Pay To:</source>\n+        <translation>\u0417\u0430\u043f\u043b\u0430\u0446\u0456\u0446\u044c \u0434\u0430:</translation>\n+    </message>\n     <message>\n         <source>Memo:</source>\n         <translation>\u041f\u0430\u043c\u044f\u0442\u043a\u0430:</translation>\n@@ -1443,10 +1475,6 @@\n         <source>Signing transaction failed</source>\n         <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430 \u043f\u043e\u0434\u043f\u0456\u0441\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456</translation>\n     </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>\u0421\u0442\u0430\u0440\u0442\u0430\u0432\u0430\u0446\u044c \u043c\u043c\u0456\u043d\u0456\u043c\u0456\u0437\u0430\u0432\u0430\u043d\u0430\u0439</translation>\n-    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>\u0413\u044d\u0442\u0430 \u044d\u043a\u0441\u043f\u0435\u0440\u044b\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u0430\u0433\u0440\u0430\u043c\u0430.</translation>"
      },
      {
        "sha": "ecd10e5461716349ece47fadf84c21745a348a0f",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 47,
        "deletions": 17,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -445,6 +445,36 @@\n         <source>Catching up...</source>\n         <translation>\u0417\u0430\u0440\u0435\u0436\u0434\u0430 \u0431\u043b\u043e\u043a\u043e\u0432\u0435...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\u0414\u0430\u0442\u0430: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\u0421\u0443\u043c\u0430: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>\u0422\u0438\u043f: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>\u0415\u0442\u0438\u043a\u0435\u0442: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>\u0418\u0437\u0445\u043e\u0434\u044f\u0449\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f</translation>\n@@ -776,7 +806,7 @@\n         <source>command-line options</source>\n         <translation>\u0421\u043f\u0438\u0441\u044a\u043a \u0441 \u043d\u0430\u043b\u0438\u0447\u043d\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0438</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>Intro</name>\n     <message>\n@@ -833,6 +863,10 @@\n         <source>MB</source>\n         <translation>\u041c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0430</translation>\n     </message>\n+    <message>\n+        <source>Number of script &amp;verification threads</source>\n+        <translation>\u0411\u0440\u043e\u0439 \u043d\u0430 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432\u0435 \u0438 &amp;\u043d\u0438\u0448\u043a\u0438 \u0437\u0430 \u043f\u043e\u0442\u0432\u044a\u0440\u0436\u0434\u0435\u043d\u0438\u0435</translation>\n+    </message>\n     <message>\n         <source>Accept connections from outside</source>\n         <translation>\u041f\u0440\u0438\u0435\u043c\u0430\u0439 \u0432\u0440\u044a\u0437\u043a\u0438 \u043e\u0442\u0432\u044a\u043d</translation>\n@@ -873,6 +907,10 @@\n         <source>Expert</source>\n         <translation>\u0415\u043a\u0441\u043f\u0435\u0440\u0442</translation>\n     </message>\n+    <message>\n+        <source>Enable coin &amp;control features</source>\n+        <translation>\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u043c\u043e\u043d\u0435\u0442\u0438\u0442\u0435 \u0438 &amp;\u0442\u0435\u0445\u043d\u0438\u0442\u0435 \u0432\u044a\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438</translation>\n+    </message>\n     <message>\n         <source>&amp;Spend unconfirmed change</source>\n         <translation>&amp;\u041f\u043e\u0445\u0430\u0440\u0447\u0435\u0442\u0435 \u043d\u0435\u043f\u043e\u0442\u0432\u044a\u0440\u0434\u0435\u043d\u043e\u0442\u043e \u0440\u0435\u0441\u0442\u043e</translation>\n@@ -2234,6 +2272,10 @@\n         <source>Export Transaction History</source>\n         <translation>\u0418\u0437\u043d\u0430\u0441\u044f\u043d\u0435 \u0438\u0441\u0442\u043e\u0440\u0438\u044f\u0442\u0430 \u043d\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438\u0442\u0435</translation>\n     </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>\u0441\u0430\u043c\u043e \u0433\u043b\u0435\u0434\u0430\u043d\u0435</translation>\n+    </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u0438\u0437\u043d\u0430\u0441\u044f\u043d\u0435\u0442\u043e</translation>\n@@ -2361,10 +2403,6 @@\n         <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n         <translation>\u0421\u043b\u043e\u0436\u0435\u0442\u0435 \u0432 \u0431\u044f\u043b \u0441\u043f\u0438\u0441\u044a\u043a \u043f\u0438\u044a\u0440\u0438,\u0441\u0432\u044a\u0440\u0437\u0432\u0430\u0449\u0438 \u0441\u0435 \u043e\u0442 \u0434\u0430\u0434\u0435\u043d\u0430\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043c\u0430\u0441\u043a\u0430 \u0438\u043b\u0438 \u0430\u0439\u043f\u0438 \u0430\u0434\u0440\u0435\u0441.\u041c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u043e \u043d\u0435\u043a\u043e\u043b\u043a\u043e\u043a\u0440\u0430\u0442\u043d\u043e.</translation>\n     </message>\n-    <message>\n-        <source>(default: 1)</source>\n-        <translation>(\u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435 1)</translation>\n-    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; \u043c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435:</translation>\n@@ -2409,10 +2447,6 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>\u0417\u0430\u043b\u043e\u0436\u0435\u0442\u0435 \u0431\u0440\u043e\u044f \u043d\u0430 \u043d\u0438\u0448\u043a\u0438 \u0437\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u043c\u043e\u043d\u0435\u0442\u0438 \u0430\u043a\u043e \u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043e(-1 = \u0432\u0441\u0438\u0447\u043a\u0438 \u044f\u0434\u0440\u0430, \u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435: %d)</translation>\n     </message>\n-    <message>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430.( \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435:0)</translation>\n-    </message>\n     <message>\n         <source>Connect through SOCKS5 proxy</source>\n         <translation>\u0421\u0432\u044a\u0440\u0437\u0432\u0430\u043d\u0435 \u0447\u0440\u0435\u0437 SOCKS5  \u043f\u0440\u043e\u043a\u0441\u0438</translation>\n@@ -2425,6 +2459,10 @@\n         <source>Information</source>\n         <translation>\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s'</source>\n+        <translation>\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0441\u0443\u043c\u0430 \u0437\u0430 -maxtxfee=&lt;amount&gt;: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: '%s'</source>\n         <translation>\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u0430 \u0441\u0443\u043c\u0430 \u0437\u0430 -minrelaytxfee=&lt;amount&gt;: '%s'</translation>\n@@ -2437,14 +2475,6 @@\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u0418\u0437\u043f\u0440\u0430\u0442\u0438 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0438\u0440\u0430\u0449\u0430\u0442\u0430 \u0438\u043b\u0438 \u0434\u0435\u0431\u044a\u0433 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f\u0442\u0430 \u043a\u044a\u043c \u043a\u043e\u043d\u0437\u043e\u043b\u0430\u0442\u0430, \u0432\u043c\u0435\u0441\u0442\u043e \u0444\u0430\u0439\u043b\u044a\u0442 debug.log</translation>\n     </message>\n-    <message>\n-        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>\u0417\u0430\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0435\u0437\u0438\u043a,\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \"de_DE\" (\u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435: system locale)</translation>\n-    </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>\u0421\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u0439 \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0430\u043d\u043e</translation>\n-    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>\u0422\u043e\u0432\u0430 \u0435 \u0435\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u043b\u0435\u043d \u0441\u043e\u0444\u0442\u0443\u0435\u0440.</translation>"
      },
      {
        "sha": "353f6d7715ec907b8f20f465a355961a4c92fa79",
        "filename": "src/qt/locale/bitcoin_bg_BG.ts",
        "status": "renamed",
        "additions": 42,
        "deletions": 2,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_bg_BG.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_bg_BG.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg_BG.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -1,9 +1,25 @@\n-<TS language=\"cmn\" version=\"2.1\">\n+<TS language=\"bg_BG\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u041a\u043b\u0438\u043a \u0441 \u0434\u0435\u0441\u0435\u043d \u0431\u0443\u0442\u043e\u043d \u043d\u0430 \u043c\u0438\u0448\u043a\u0430\u0442\u0430 \u0437\u0430 \u043f\u0440\u043e\u043c\u044f\u043d\u0430 \u043d\u0430 \u0430\u0434\u0440\u0435\u0441 \u0438\u043b\u0438 \u0435\u0442\u0438\u043a\u0435\u0442</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>\u521b\u5efa\u65b0\u5730\u5740</translation>\n+        <translation>\u0421\u044a\u0437\u0434\u0430\u0439 \u043d\u043e\u0432 \u0430\u0434\u0440\u0435\u0441</translation>\n+    </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>\u041d\u043e\u0432</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy</source>\n+        <translation>\u041a\u043e\u043f\u0438\u0440\u0430\u0439</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>\u0417\u0430\u0442\u0432\u043e\u0440\u0438</translation>\n     </message>\n     </context>\n <context>\n@@ -17,6 +33,14 @@\n     </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Bitcoin Core</source>\n+        <translation>\u0411\u0438\u0442\u043a\u043e\u0439\u043d \u044f\u0434\u0440\u043e</translation>\n+    </message>\n+    <message>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation>\u0417\u0430 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u044f\u0434\u0440\u043e\u0442\u043e</translation>\n+    </message>\n     </context>\n <context>\n     <name>ClientModel</name>\n@@ -32,9 +56,21 @@\n     </context>\n <context>\n     <name>HelpMessageDialog</name>\n+    <message>\n+        <source>Bitcoin Core</source>\n+        <translation>\u0411\u0438\u0442\u043a\u043e\u0439\u043d \u044f\u0434\u0440\u043e</translation>\n+    </message>\n+    <message>\n+        <source>About Bitcoin Core</source>\n+        <translation>\u0417\u0430 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u044f\u0434\u0440\u043e\u0442\u043e</translation>\n+    </message>\n     </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Bitcoin Core</source>\n+        <translation>\u0411\u0438\u0442\u043a\u043e\u0439\u043d \u044f\u0434\u0440\u043e</translation>\n+    </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n@@ -83,6 +119,10 @@\n     </context>\n <context>\n     <name>SplashScreen</name>\n+    <message>\n+        <source>Bitcoin Core</source>\n+        <translation>\u0411\u0438\u0442\u043a\u043e\u0439\u043d \u044f\u0434\u0440\u043e</translation>\n+    </message>\n     </context>\n <context>\n     <name>TrafficGraphWidget</name>",
        "previous_filename": "src/qt/locale/bitcoin_cmn.ts"
      },
      {
        "sha": "38e770f182242e447663be3167b191508b0a6704",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 125,
        "deletions": 29,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -222,7 +222,15 @@\n </context>\n <context>\n     <name>BanTableModel</name>\n-    </context>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP / M\u00e0scara de xarxa</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Bandejat fins</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -874,6 +882,34 @@\n         <source>command-line options</source>\n         <translation>Opcions de la l\u00ednia d'ordres</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Opcions d'interf\u00edcie d'usuari:</translation>\n+    </message>\n+    <message>\n+        <source>Choose data directory on startup (default: %u)</source>\n+        <translation>Trieu el directori de dades a l'inici (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n+        <translation>Defineix la llengua, per exemple \u00abde_DE\u00bb (per defecte: la definida pel sistema)</translation>\n+    </message>\n+    <message>\n+        <source>Start minimized</source>\n+        <translation>Inicia minimitzat</translation>\n+    </message>\n+    <message>\n+        <source>Set SSL root certificates for payment request (default: -system-)</source>\n+        <translation>Defineix els certificats arrel SSL per a la sol\u00b7licitud de pagament (per defecte: els del sistema)</translation>\n+    </message>\n+    <message>\n+        <source>Show splash screen on startup (default: %u)</source>\n+        <translation>Mostra la pantalla de benvinguda a l'inici (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Reset all settings changes made over the GUI</source>\n+        <translation>Reinicialitza tots els canvis de configuraci\u00f3 fets des de la interf\u00edcie gr\u00e0fica</translation>\n+    </message>\n </context>\n <context>\n     <name>Intro</name>\n@@ -1071,6 +1107,18 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port del proxy (per exemple 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>Utilitzat per arribar als iguals mitjan\u00e7ant:</translation>\n+    </message>\n+    <message>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>Mostra si el proxy SOCKS5 per defecte proporcionat s'utilitza per arribar als iguals mitjan\u00e7ant aquest tipus de xarxa.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Utilitza un proxy SOCKS4 apart per a arribar als iguals a trav\u00e9s de serveis ocults de Tor:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Finestra</translation>\n@@ -1457,10 +1505,18 @@\n         <source>&amp;Peers</source>\n         <translation>&amp;Iguals</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>Iguals bandejats</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>Seleccioneu un igual per mostrar informaci\u00f3 detallada.</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>A la llista blanca</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>Direcci\u00f3</translation>\n@@ -1469,6 +1525,18 @@\n         <source>Version</source>\n         <translation>Versi\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Starting Block</source>\n+        <translation>Bloc d'inici</translation>\n+    </message>\n+    <message>\n+        <source>Synced Headers</source>\n+        <translation>Cap\u00e7aleres sincronitzades</translation>\n+    </message>\n+    <message>\n+        <source>Synced Blocks</source>\n+        <translation>Blocs sincronitzats</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Agent d'usuari</translation>\n@@ -1497,6 +1565,14 @@\n         <source>Ping Time</source>\n         <translation>Temps de ping</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>La duraci\u00f3 d'un ping m\u00e9s destacat actualment.</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>Espera de ping</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>Difer\u00e8ncia hor\u00e0ria</translation>\n@@ -1545,6 +1621,34 @@\n         <source>Clear console</source>\n         <translation>Neteja la consola</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>&amp;Desconnecta el node</translation>\n+    </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>Bandeja el node durant</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 &amp;hora</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 &amp;dia</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 &amp;setmana</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 &amp;any</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>&amp;Desbandeja el node</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>Us donem la benviguda a la consola RPC del Bitcoin Core.</translation>\n@@ -1573,6 +1677,10 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(id del node: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>a trav\u00e9s de %1</translation>\n@@ -1965,6 +2073,10 @@\n         <source>Copy change</source>\n         <translation>Copia el canvi</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1</source>\n+        <translation>Import total %1</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -1997,6 +2109,10 @@\n         <source>Payment request expired.</source>\n         <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n     </message>\n+    <message>\n+        <source>Pay only the required fee of %1</source>\n+        <translation>Paga nom\u00e9s la comissi\u00f3 necess\u00e0ria de %1</translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>Estimated to begin confirmation within %n block(s).</source>\n         <translation><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n bloc.</numerusform><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n blocs.</numerusform></translation>\n@@ -2779,6 +2895,14 @@\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Accepta la l\u00ednia d'ordres i ordres JSON-RPC </translation>\n     </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Comissions totals m\u00e0ximes (en %s) per utilitzar en una \u00fanica transacci\u00f3 de moneder; definir-ne una massa baixa pot interrompre les transaccions m\u00e9s grans (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n+        <translation>Comissi\u00f3 (en %s/kB) per afegir a les transaccions que envieu (per defecte: %s)</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Executa en segon pla com a programa dimoni i accepta ordres</translation>\n@@ -2839,10 +2963,6 @@\n         <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n         <translation>Afegeix a la llista blanca els iguals que es connecten de la m\u00e0scara de xarxa o adre\u00e7a IP donada. Es pot especificar moltes vegades.</translation>\n     </message>\n-    <message>\n-        <source>(default: 1)</source>\n-        <translation>(per defecte: 1)</translation>\n-    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; pot ser:</translation>\n@@ -3059,10 +3179,6 @@\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n     </message>\n-    <message>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>Tria el directori de dades a l'inici (per defecte: 0)</translation>\n-    </message>\n     <message>\n         <source>Connect through SOCKS5 proxy</source>\n         <translation>Connecta a trav\u00e9s del proxy SOCKS5</translation>\n@@ -3139,22 +3255,10 @@\n         <source>Send transactions as zero-fee transactions if possible (default: %u)</source>\n         <translation>Envia les transaccions com a transaccions de comissi\u00f3 zero sempre que sigui possible (per defecte: %u) </translation>\n     </message>\n-    <message>\n-        <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation>Defineix certificats arrel SSL per a la sol\u00b7licitud de pagament (per defecte: -sistema-)</translation>\n-    </message>\n-    <message>\n-        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Defineix un idioma, per exemple \u00abde_DE\u00bb (per defecte: prefer\u00e8ncies locals de sistema)</translation>\n-    </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation>Mostra totes les opcions de depuraci\u00f3 (\u00fas: --help  --help-debug)</translation>\n     </message>\n-    <message>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Mostra la finestra de benvinguda a l'inici (per defecte: 1)</translation>\n-    </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n         <translation>Redueix el fitxer debug.log durant l'inici del client (per defecte: 1 quan no -debug)</translation>\n@@ -3163,10 +3267,6 @@\n         <source>Signing transaction failed</source>\n         <translation>Ha fallat la signatura de la transacci\u00f3</translation>\n     </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>Inicia minimitzat</translation>\n-    </message>\n     <message>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation>L'import de la transacci\u00f3 \u00e9s massa petit per pagar-ne una comissi\u00f3</translation>\n@@ -3191,10 +3291,6 @@\n         <source>Transaction too large</source>\n         <translation>La transacci\u00f3 \u00e9s massa gran</translation>\n     </message>\n-    <message>\n-        <source>UI Options:</source>\n-        <translation>Opcions d'interf\u00edcie:</translation>\n-    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en aquest ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>"
      },
      {
        "sha": "2c41ec78d4061b7ee268f5e93ed2fd1a2f001b28",
        "filename": "src/qt/locale/bitcoin_ca@valencia.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 29,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ca@valencia.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ca@valencia.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca@valencia.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -433,6 +433,10 @@\n         <source>No block source available...</source>\n         <translation>No hi ha cap font de bloc disponible...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>Proccessats %n bloc de l'historial de transaccions.</numerusform><numerusform>Proccessats %n blocs de l'historial de transaccions.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n hora</numerusform><numerusform>%n hores</numerusform></translation>\n@@ -870,7 +874,7 @@\n         <source>command-line options</source>\n         <translation>Opcions de la l\u00ednia d'ordes</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>Intro</name>\n     <message>\n@@ -1067,6 +1071,10 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port del proxy (per exemple 9050)</translation>\n     </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Utilitza un proxy SOCKS4 apart per a arribar als iguals a trav\u00e9s de serveis ocults de Tor:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Finestra</translation>\n@@ -2835,10 +2843,6 @@\n         <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n         <translation>Afig a la llista blanca els iguals que es connecten de la m\u00e0scara de xarxa o adre\u00e7a IP donada. Es pot especificar moltes vegades.</translation>\n     </message>\n-    <message>\n-        <source>(default: 1)</source>\n-        <translation>(per defecte: 1)</translation>\n-    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; pot ser:</translation>\n@@ -3055,10 +3059,6 @@\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n     </message>\n-    <message>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>Tria el directori de dades a l'inici (per defecte: 0)</translation>\n-    </message>\n     <message>\n         <source>Connect through SOCKS5 proxy</source>\n         <translation>Connecta a trav\u00e9s del proxy SOCKS5</translation>\n@@ -3135,22 +3135,10 @@\n         <source>Send transactions as zero-fee transactions if possible (default: %u)</source>\n         <translation>Envia les transaccions com a transaccions de comissi\u00f3 zero sempre que siga possible (per defecte: %u) </translation>\n     </message>\n-    <message>\n-        <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation>Defineix certificats arrel SSL per a la sol\u00b7licitud de pagament (per defecte: -sistema-)</translation>\n-    </message>\n-    <message>\n-        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Defineix un idioma, per exemple \u00abde_DE\u00bb (per defecte: prefer\u00e8ncies locals de sistema)</translation>\n-    </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation>Mostra totes les opcions de depuraci\u00f3 (\u00fas: --help  --help-debug)</translation>\n     </message>\n-    <message>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Mostra la finestra de benvinguda a l'inici (per defecte: 1)</translation>\n-    </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n         <translation>Redueix el fitxer debug.log durant l'inici del client (per defecte: 1 quan no -debug)</translation>\n@@ -3159,10 +3147,6 @@\n         <source>Signing transaction failed</source>\n         <translation>Ha fallat la signatura de la transacci\u00f3</translation>\n     </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>Inicia minimitzat</translation>\n-    </message>\n     <message>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation>L'import de la transacci\u00f3 \u00e9s massa petit per pagar-ne una comissi\u00f3</translation>\n@@ -3187,10 +3171,6 @@\n         <source>Transaction too large</source>\n         <translation>La transacci\u00f3 \u00e9s massa gran</translation>\n     </message>\n-    <message>\n-        <source>UI Options:</source>\n-        <translation>Opcions d'interf\u00edcie:</translation>\n-    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en este ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>"
      },
      {
        "sha": "e6a932ebeeaed3a312ab07b90791452246ac05ee",
        "filename": "src/qt/locale/bitcoin_ca_ES.ts",
        "status": "modified",
        "additions": 125,
        "deletions": 29,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ca_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ca_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca_ES.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -222,7 +222,15 @@\n </context>\n <context>\n     <name>BanTableModel</name>\n-    </context>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP / M\u00e0scara de xarxa</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Bandejat fins</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -874,6 +882,34 @@\n         <source>command-line options</source>\n         <translation>Opcions de la l\u00ednia d'ordres</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Opcions d'interf\u00edcie d'usuari:</translation>\n+    </message>\n+    <message>\n+        <source>Choose data directory on startup (default: %u)</source>\n+        <translation>Trieu el directori de dades a l'inici (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n+        <translation>Defineix la llengua, per exemple \u00abde_DE\u00bb (per defecte: la definida pel sistema)</translation>\n+    </message>\n+    <message>\n+        <source>Start minimized</source>\n+        <translation>Inicia minimitzat</translation>\n+    </message>\n+    <message>\n+        <source>Set SSL root certificates for payment request (default: -system-)</source>\n+        <translation>Defineix els certificats arrel SSL per a la sol\u00b7licitud de pagament (per defecte: els del sistema)</translation>\n+    </message>\n+    <message>\n+        <source>Show splash screen on startup (default: %u)</source>\n+        <translation>Mostra la pantalla de benvinguda a l'inici (per defecte: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Reset all settings changes made over the GUI</source>\n+        <translation>Reinicialitza tots els canvis de configuraci\u00f3 fets des de la interf\u00edcie gr\u00e0fica</translation>\n+    </message>\n </context>\n <context>\n     <name>Intro</name>\n@@ -1071,6 +1107,18 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port del proxy (per exemple 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>Utilitzat per arribar als iguals mitjan\u00e7ant:</translation>\n+    </message>\n+    <message>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>Mostra si el proxy SOCKS5 per defecte proporcionat s'utilitza per arribar als iguals mitjan\u00e7ant aquest tipus de xarxa.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Utilitza un proxy SOCKS4 apart per a arribar als iguals a trav\u00e9s de serveis ocults de Tor:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Finestra</translation>\n@@ -1457,10 +1505,18 @@\n         <source>&amp;Peers</source>\n         <translation>&amp;Iguals</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>Iguals bandejats</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>Seleccioneu un igual per mostrar informaci\u00f3 detallada.</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>A la llista blanca</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>Direcci\u00f3</translation>\n@@ -1469,6 +1525,18 @@\n         <source>Version</source>\n         <translation>Versi\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Starting Block</source>\n+        <translation>Bloc d'inici</translation>\n+    </message>\n+    <message>\n+        <source>Synced Headers</source>\n+        <translation>Cap\u00e7aleres sincronitzades</translation>\n+    </message>\n+    <message>\n+        <source>Synced Blocks</source>\n+        <translation>Blocs sincronitzats</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Agent d'usuari</translation>\n@@ -1497,6 +1565,14 @@\n         <source>Ping Time</source>\n         <translation>Temps de ping</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>La duraci\u00f3 d'un ping m\u00e9s destacat actualment.</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>Espera de ping</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>Difer\u00e8ncia hor\u00e0ria</translation>\n@@ -1545,6 +1621,34 @@\n         <source>Clear console</source>\n         <translation>Neteja la consola</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>&amp;Desconnecta el node</translation>\n+    </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>Bandeja el node durant</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 &amp;hora</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 &amp;dia</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 &amp;setmana</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 &amp;any</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>&amp;Desbandeja el node</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>Us donem la benviguda a la consola RPC del Bitcoin Core.</translation>\n@@ -1573,6 +1677,10 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(id del node: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>a trav\u00e9s de %1</translation>\n@@ -1965,6 +2073,10 @@\n         <source>Copy change</source>\n         <translation>Copia el canvi</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1</source>\n+        <translation>Import total %1</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -1997,6 +2109,10 @@\n         <source>Payment request expired.</source>\n         <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n     </message>\n+    <message>\n+        <source>Pay only the required fee of %1</source>\n+        <translation>Paga nom\u00e9s la comissi\u00f3 necess\u00e0ria de %1</translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>Estimated to begin confirmation within %n block(s).</source>\n         <translation><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n bloc.</numerusform><numerusform>Estimat per comen\u00e7ar la confirmaci\u00f3 en %n blocs.</numerusform></translation>\n@@ -2779,6 +2895,14 @@\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Accepta la l\u00ednia d'ordres i ordres JSON-RPC </translation>\n     </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Comissions totals m\u00e0ximes (en %s) per utilitzar en una \u00fanica transacci\u00f3 de moneder; definir-ne una massa baixa pot interrompre les transaccions m\u00e9s grans (per defecte: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n+        <translation>Comissi\u00f3 (en %s/kB) per afegir a les transaccions que envieu (per defecte: %s)</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Executa en segon pla com a programa dimoni i accepta ordres</translation>\n@@ -2839,10 +2963,6 @@\n         <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n         <translation>Afegeix a la llista blanca els iguals que es connecten de la m\u00e0scara de xarxa o adre\u00e7a IP donada. Es pot especificar moltes vegades.</translation>\n     </message>\n-    <message>\n-        <source>(default: 1)</source>\n-        <translation>(per defecte: 1)</translation>\n-    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; pot ser:</translation>\n@@ -3059,10 +3179,6 @@\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n     </message>\n-    <message>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>Tria el directori de dades a l'inici (per defecte: 0)</translation>\n-    </message>\n     <message>\n         <source>Connect through SOCKS5 proxy</source>\n         <translation>Connecta a trav\u00e9s del proxy SOCKS5</translation>\n@@ -3139,22 +3255,10 @@\n         <source>Send transactions as zero-fee transactions if possible (default: %u)</source>\n         <translation>Envia les transaccions com a transaccions de comissi\u00f3 zero sempre que sigui possible (per defecte: %u) </translation>\n     </message>\n-    <message>\n-        <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation>Defineix certificats arrel SSL per a la sol\u00b7licitud de pagament (per defecte: -sistema-)</translation>\n-    </message>\n-    <message>\n-        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Defineix un idioma, per exemple \u00abde_DE\u00bb (per defecte: prefer\u00e8ncies locals de sistema)</translation>\n-    </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation>Mostra totes les opcions de depuraci\u00f3 (\u00fas: --help  --help-debug)</translation>\n     </message>\n-    <message>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Mostra la finestra de benvinguda a l'inici (per defecte: 1)</translation>\n-    </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n         <translation>Redueix el fitxer debug.log durant l'inici del client (per defecte: 1 quan no -debug)</translation>\n@@ -3163,10 +3267,6 @@\n         <source>Signing transaction failed</source>\n         <translation>Ha fallat la signatura de la transacci\u00f3</translation>\n     </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>Inicia minimitzat</translation>\n-    </message>\n     <message>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation>L'import de la transacci\u00f3 \u00e9s massa petit per pagar-ne una comissi\u00f3</translation>\n@@ -3191,10 +3291,6 @@\n         <source>Transaction too large</source>\n         <translation>La transacci\u00f3 \u00e9s massa gran</translation>\n     </message>\n-    <message>\n-        <source>UI Options:</source>\n-        <translation>Opcions d'interf\u00edcie:</translation>\n-    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en aquest ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>"
      },
      {
        "sha": "ef1903edd168e337d566769dc83102a71b1a28f9",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 29,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -874,7 +874,7 @@\n         <source>command-line options</source>\n         <translation>mo\u017enosti p\u0159\u00edkazov\u00e9 \u0159\u00e1dky</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>Intro</name>\n     <message>\n@@ -1071,6 +1071,10 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port proxy (nap\u0159. 9050)</translation>\n     </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Pou\u017e\u00edt samostatnou SOCKS5 proxy ke spojen\u00ed s prot\u011bj\u0161ky p\u0159es skryt\u00e9 slu\u017eby v Toru:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>O&amp;kno</translation>\n@@ -2839,10 +2843,6 @@\n         <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n         <translation>Um\u00edstit na b\u00edlou listinu prot\u011bj\u0161ky p\u0159ipojuj\u00edc\u00ed se z dan\u00e9 pods\u00edt\u011b \u010di IP adresy. Lze zadat i v\u00edcekr\u00e1t.</translation>\n     </message>\n-    <message>\n-        <source>(default: 1)</source>\n-        <translation>(v\u00fdchoz\u00ed: 1)</translation>\n-    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; m\u016f\u017ee b\u00fdt:</translation>\n@@ -3059,10 +3059,6 @@\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Nemohu p\u0159elo\u017eit -whitebind adresu: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>Zvolit adres\u00e1\u0159 pro data p\u0159i startu (v\u00fdchoz\u00ed: 0)</translation>\n-    </message>\n     <message>\n         <source>Connect through SOCKS5 proxy</source>\n         <translation>P\u0159ipojit se p\u0159es SOCKS5 proxy</translation>\n@@ -3139,22 +3135,10 @@\n         <source>Send transactions as zero-fee transactions if possible (default: %u)</source>\n         <translation>Pos\u00edlat transakce pokud mo\u017eno bez poplatk\u016f (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n-    <message>\n-        <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation>Nastavit ko\u0159enov\u00e9 SSL certifik\u00e1ty pro platebn\u00ed po\u017eadavky (v\u00fdchoz\u00ed: -system-)</translation>\n-    </message>\n-    <message>\n-        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Nastavit jazyk, nap\u0159\u00edklad \u201ede_DE\u201c (v\u00fdchoz\u00ed: syst\u00e9mov\u00e9 nastaven\u00ed)</translation>\n-    </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation>Zobrazit v\u0161echny mo\u017enosti lad\u011bn\u00ed (u\u017eit\u00ed: --help -help-debug)</translation>\n     </message>\n-    <message>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Zobrazit startovac\u00ed obrazovku (v\u00fdchoz\u00ed: 1)</translation>\n-    </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n         <translation>P\u0159i spu\u0161t\u011bn\u00ed klienta zmen\u0161it soubor debug.log (v\u00fdchoz\u00ed: 1, pokud nen\u00ed zad\u00e1no -debug)</translation>\n@@ -3163,10 +3147,6 @@\n         <source>Signing transaction failed</source>\n         <translation>Nepoda\u0159ilo se podepsat transakci</translation>\n     </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>Nastartovat minimalizovan\u011b</translation>\n-    </message>\n     <message>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation>\u010c\u00e1stka v transakci je p\u0159\u00edli\u0161 mal\u00e1 na pokryt\u00ed poplatku</translation>\n@@ -3191,10 +3171,6 @@\n         <source>Transaction too large</source>\n         <translation>Transakce je p\u0159\u00edli\u0161 velk\u00e1</translation>\n     </message>\n-    <message>\n-        <source>UI Options:</source>\n-        <translation>Mo\u017enosti UI:</translation>\n-    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Neda\u0159\u00ed se mi p\u0159ipojit na %s na tomhle po\u010d\u00edta\u010di (operace bind vr\u00e1tila chybu %s)</translation>\n@@ -3351,6 +3327,10 @@\n         <source>Specify connection timeout in milliseconds (minimum: 1, default: %d)</source>\n         <translation>Zadej \u010dasov\u00fd limit spojen\u00ed v milivte\u0159in\u00e1ch (minimum: 1, v\u00fdchoz\u00ed: %d)</translation>\n     </message>\n+    <message>\n+        <source>Specify pid file (default: %s)</source>\n+        <translation>PID soubor (v\u00fdchoz\u00ed: %s)</translation>\n+    </message>\n     <message>\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Utr\u00e1cet i je\u0161t\u011b nepotvrzen\u00e9 drobn\u00e9 p\u0159i pos\u00edl\u00e1n\u00ed transakc\u00ed (v\u00fdchoz\u00ed: %u)</translation>"
      },
      {
        "sha": "cc0c791154a90f17dfd5c84e28c4c5c20b3f6b29",
        "filename": "src/qt/locale/bitcoin_cs_CZ.ts",
        "status": "added",
        "additions": 645,
        "deletions": 0,
        "changes": 645,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_cs_CZ.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_cs_CZ.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs_CZ.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,645 @@\n+<TS language=\"cs_CZ\" version=\"2.1\">\n+<context>\n+    <name>AddressBookPage</name>\n+    <message>\n+        <source>Create a new address</source>\n+        <translation>Vytvo\u0159it novou adresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy the currently selected address to the system clipboard</source>\n+        <translation>Kop\u00edrovat aktu\u00e1ln\u011b vybran\u00e9 adresy do schr\u00e1nky</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Delete</source>\n+        <translation>&amp;Odstranit</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Textov\u00fd soubor odd\u011blen\u00fd st\u0159edn\u00edkem (*.csv)</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>AddressTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(bez popisu)</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>AskPassphraseDialog</name>\n+    <message>\n+        <source>Enter passphrase</source>\n+        <translation>Zadej heslo</translation>\n+    </message>\n+    <message>\n+        <source>New passphrase</source>\n+        <translation>Nov\u00e9 heslo</translation>\n+    </message>\n+    <message>\n+        <source>Repeat new passphrase</source>\n+        <translation>Zopakujte nov\u00e9 heslo</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Za\u0161ifrovat pen\u011b\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>Tato operace vy\u017eaduje heslo k odemknut\u00ed pen\u011b\u017eenky.</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>Odemknout pen\u011b\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>Tato operace vy\u017eaduje heslo k de\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky.</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>De\u0161ifrovat pen\u011b\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>Zm\u011bnit heslo</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>Potvr\u010fte za\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>Pen\u011b\u017eenka za\u0161ifrov\u00e1na</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>Za\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky selhalo</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u0160ifrov\u00e1n\u00ed pen\u011b\u017eenky selhalo vinou vnit\u0159n\u00ed chyby. Va\u0161e pen\u011b\u017eenka nebyla za\u0161ifrov\u00e1na.</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>Zadan\u00e1 hesla nejsou shodn\u00e1.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>Odem\u010den\u00ed pen\u011b\u017eenky selhalo</translation>\n+    </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>Heslo zadan\u00e9 k de\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky nebylo spr\u00e1vn\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>De\u011bifrov\u00e1n\u00ed pen\u011b\u017eenky selhalo</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n+<context>\n+    <name>BitcoinGUI</name>\n+    <message>\n+        <source>Synchronizing with network...</source>\n+        <translation>Synchronizuji se s\u00edt\u00ed...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Overview</source>\n+        <translation>&amp;P\u0159ehled</translation>\n+    </message>\n+    <message>\n+        <source>Show general overview of wallet</source>\n+        <translation>Zobrazit z\u00e1kladn\u00ed p\u0159ehled o pen\u011b\u017eence</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Transactions</source>\n+        <translation>&amp;Transakce</translation>\n+    </message>\n+    <message>\n+        <source>Browse transaction history</source>\n+        <translation>Proch\u00e1zen\u00ed histori\u00ed transakc\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>Ukon\u010dit aplikaci</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Options...</source>\n+        <translation>&amp;Mo\u017enosti...</translation>\n+    </message>\n+    <message>\n+        <source>Change the passphrase used for wallet encryption</source>\n+        <translation>Zm\u011bnit heslo k \u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky</translation>\n+    </message>\n+    <message>\n+        <source>Bitcoin</source>\n+        <translation>Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>&amp;File</source>\n+        <translation>&amp;Soubor</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Settings</source>\n+        <translation>&amp;Nastaven\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Help</source>\n+        <translation>N\u00e1po&amp;v\u011bda</translation>\n+    </message>\n+    <message>\n+        <source>Tabs toolbar</source>\n+        <translation>Panely</translation>\n+    </message>\n+    <message>\n+        <source>Up to date</source>\n+        <translation>Aktu\u00e1ln\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Catching up...</source>\n+        <translation>Zachyt\u00e1v\u00e1m...</translation>\n+    </message>\n+    <message>\n+        <source>Sent transaction</source>\n+        <translation>Odeslan\u00e9 transakce</translation>\n+    </message>\n+    <message>\n+        <source>Incoming transaction</source>\n+        <translation>P\u0159\u00edchoz\u00ed transakce</translation>\n+    </message>\n+    <message>\n+        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n+        <translation>Pen\u011b\u017eenka je &lt;b&gt;za\u0161ifrov\u00e1na&lt;/b&gt; a moment\u00e1ln\u011b &lt;b&gt;odem\u010den\u00e1&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n+        <translation>Pen\u011b\u017eenka je &lt;b&gt;za\u0161ifrov\u00e1na&lt;/b&gt; a moment\u00e1ln\u011b &lt;b&gt;uzam\u010den\u00e1&lt;/b&gt;</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>ClientModel</name>\n+    </context>\n+<context>\n+    <name>CoinControlDialog</name>\n+    <message>\n+        <source>Amount:</source>\n+        <translation>Mno\u017estv\u00ed:</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Mno\u017estv\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Datum</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed</source>\n+        <translation>Potvrzeno</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Kop\u00edrovat sdresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrovat popis</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(bez popisu)</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    <message>\n+        <source>Edit Address</source>\n+        <translation>Upravit adresu</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Label</source>\n+        <translation>&amp;Popisek</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Adresa</translation>\n+    </message>\n+    <message>\n+        <source>New receiving address</source>\n+        <translation>Nov\u00e1 adresa pro p\u0159\u00edjem</translation>\n+    </message>\n+    <message>\n+        <source>New sending address</source>\n+        <translation>Nov\u00e1 adresa k odesl\u00e1n\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Edit receiving address</source>\n+        <translation>Upravit adresu pro p\u0159\u00edjem</translation>\n+    </message>\n+    <message>\n+        <source>Edit sending address</source>\n+        <translation>Upravit adresu k odesl\u00e1n\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>The entered address \"%1\" is already in the address book.</source>\n+        <translation>Zadan\u00e1 adresa \"%1\" se ji\u017e v seznamu adres nach\u00e1z\u00ed.</translation>\n+    </message>\n+    <message>\n+        <source>Could not unlock wallet.</source>\n+        <translation>Nemohu odemknout pen\u011b\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>New key generation failed.</source>\n+        <translation>Generov\u00e1n\u00ed nov\u00e9ho kl\u00ed\u010de selhalo.</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    </context>\n+<context>\n+    <name>HelpMessageDialog</name>\n+    <message>\n+        <source>Usage:</source>\n+        <translation>Pou\u017eit\u00ed:</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>Intro</name>\n+    </context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    </context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <source>Options</source>\n+        <translation>Mo\u017enosti</translation>\n+    </message>\n+    <message>\n+        <source>Map port using &amp;UPnP</source>\n+        <translation>Mapovat port pomoc\u00ed &amp;UPnP</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Minimize to the tray instead of the taskbar</source>\n+        <translation>&amp;Minimalizovat do syst\u00e9mov\u00e9 li\u0161ty (tray) nam\u00edsto do hlavn\u00edho panelu</translation>\n+    </message>\n+    <message>\n+        <source>M&amp;inimize on close</source>\n+        <translation>M&amp;inimalizovat p\u0159i zav\u0159en\u00ed</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>OverviewPage</name>\n+    </context>\n+<context>\n+    <name>PaymentServer</name>\n+    </context>\n+<context>\n+    <name>PeerTableModel</name>\n+    </context>\n+<context>\n+    <name>QObject</name>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Mno\u017estv\u00ed</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>QRImageWidget</name>\n+    </context>\n+<context>\n+    <name>RPCConsole</name>\n+    <message>\n+        <source>Name</source>\n+        <translation>Jm\u00e9no</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>ReceiveCoinsDialog</name>\n+    <message>\n+        <source>&amp;Label:</source>\n+        <translation>&amp;Popisek:</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Message:</source>\n+        <translation>Zpr\u00e1va:</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrovat popis</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Mno\u017estv\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Zpr\u00e1va</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Datum</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Zpr\u00e1va</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Mno\u017estv\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(bez popisu)</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>SendCoinsDialog</name>\n+    <message>\n+        <source>Amount:</source>\n+        <translation>Mno\u017estv\u00ed:</translation>\n+    </message>\n+    <message>\n+        <source>Balance:</source>\n+        <translation>Z\u016fstatek:</translation>\n+    </message>\n+    <message>\n+        <source>The amount to pay must be larger than 0.</source>\n+        <translation>\u010c\u00e1stka k zaplacen\u00ed mus\u00ed b\u00fdt v\u011bt\u0161\u00ed ne\u017e 0.</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(bez popisu)</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>SendCoinsEntry</name>\n+    <message>\n+        <source>&amp;Label:</source>\n+        <translation>&amp;Popisek:</translation>\n+    </message>\n+    <message>\n+        <source>Message:</source>\n+        <translation>Zpr\u00e1va:</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>ShutdownWindow</name>\n+    </context>\n+<context>\n+    <name>SignVerifyMessageDialog</name>\n+    </context>\n+<context>\n+    <name>SplashScreen</name>\n+    <message>\n+        <source>[testnet]</source>\n+        <translation>[testnet]</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>TrafficGraphWidget</name>\n+    </context>\n+<context>\n+    <name>TransactionDesc</name>\n+    <message>\n+        <source>%1/unconfirmed</source>\n+        <translation>%1 potvrzeno</translation>\n+    </message>\n+    <message>\n+        <source>%1 confirmations</source>\n+        <translation>%1 potvrzen\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Status</source>\n+        <translation>Stav</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Datum</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Zpr\u00e1va</translation>\n+    </message>\n+    <message>\n+        <source>Transaction</source>\n+        <translation>Transakce</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Mno\u017estv\u00ed</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>TransactionDescDialog</name>\n+    <message>\n+        <source>Transaction details</source>\n+        <translation>Detaily transakce</translation>\n+    </message>\n+    <message>\n+        <source>This pane shows a detailed description of the transaction</source>\n+        <translation>Toto podokno zobrazuje detailn\u00ed popis transakce</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Datum</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Typ</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed (%1 confirmations)</source>\n+        <translation>Potvrzeno (%1 potvrzen\u00ed)</translation>\n+    </message>\n+    <message>\n+        <source>This block was not received by any other nodes and will probably not be accepted!</source>\n+        <translation>Tento blok nebyl p\u0159ijat \u017e\u00e1dn\u00fdm dal\u0161\u00edm uzlem a pravd\u011bpodobn\u011b nebude akceptov\u00e1n!</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>P\u0159ijato s</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Odesl\u00e1no na</translation>\n+    </message>\n+    <message>\n+        <source>Payment to yourself</source>\n+        <translation>Platba sob\u011b sam\u00e9mu</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Vyt\u011b\u017eeno</translation>\n+    </message>\n+    <message>\n+        <source>Type of transaction.</source>\n+        <translation>Typ transakce.</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>TransactionView</name>\n+    <message>\n+        <source>All</source>\n+        <translation>V\u0161e</translation>\n+    </message>\n+    <message>\n+        <source>Today</source>\n+        <translation>Dnes</translation>\n+    </message>\n+    <message>\n+        <source>This week</source>\n+        <translation>Tento t\u00fdden</translation>\n+    </message>\n+    <message>\n+        <source>This month</source>\n+        <translation>Tento m\u011bs\u00edc</translation>\n+    </message>\n+    <message>\n+        <source>Last month</source>\n+        <translation>Minul\u00fd m\u011bs\u00edc</translation>\n+    </message>\n+    <message>\n+        <source>This year</source>\n+        <translation>Tento rok</translation>\n+    </message>\n+    <message>\n+        <source>Range...</source>\n+        <translation>Rozsah...</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>P\u0159ijato s</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Odesl\u00e1no na</translation>\n+    </message>\n+    <message>\n+        <source>To yourself</source>\n+        <translation>Sob\u011b sam\u00e9mu</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Vyt\u011b\u017eeno</translation>\n+    </message>\n+    <message>\n+        <source>Other</source>\n+        <translation>Ostatn\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Min amount</source>\n+        <translation>Min. mno\u017estv\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Kop\u00edrovat sdresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrovat popis</translation>\n+    </message>\n+    <message>\n+        <source>Edit label</source>\n+        <translation>Upravit popis</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Textov\u00fd soubor odd\u011blen\u00fd st\u0159edn\u00edkem (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed</source>\n+        <translation>Potvrzeno</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Datum</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Typ</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n+    <message>\n+        <source>ID</source>\n+        <translation>ID</translation>\n+    </message>\n+    <message>\n+        <source>Range:</source>\n+        <translation>Rozsah:</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>UnitDisplayStatusBarControl</name>\n+    </context>\n+<context>\n+    <name>WalletFrame</name>\n+    </context>\n+<context>\n+    <name>WalletModel</name>\n+    </context>\n+<context>\n+    <name>WalletView</name>\n+    </context>\n+<context>\n+    <name>bitcoin-core</name>\n+    <message>\n+        <source>Options:</source>\n+        <translation>Mo\u017enosti:</translation>\n+    </message>\n+    <message>\n+        <source>Loading addresses...</source>\n+        <translation>Na\u010d\u00edt\u00e1n\u00ed adres...</translation>\n+    </message>\n+    <message>\n+        <source>Loading wallet...</source>\n+        <translation>Na\u010d\u00edt\u00e1n\u00ed pen\u011b\u017eenky...</translation>\n+    </message>\n+    <message>\n+        <source>Done loading</source>\n+        <translation>Na\u010d\u00edt\u00e1n\u00ed dokon\u010deno</translation>\n+    </message>\n+    </context>\n+</TS>\n\\ No newline at end of file"
      },
      {
        "sha": "c32d236a919e2b89bbfe4c91d7772e483fb32a73",
        "filename": "src/qt/locale/bitcoin_cy.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_cy.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_cy.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cy.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -347,6 +347,10 @@\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Amount:</source>\n+        <translation>Maint</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Dyddiad</translation>\n@@ -545,6 +549,10 @@\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Copy &amp;Address</source>\n+        <translation>&amp;Cyfeiriad Copi</translation>\n+    </message>\n     <message>\n         <source>Address</source>\n         <translation>Cyfeiriad</translation>\n@@ -583,6 +591,10 @@\n         <source>Send Coins</source>\n         <translation>Anfon arian</translation>\n     </message>\n+    <message>\n+        <source>Amount:</source>\n+        <translation>Maint</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>Anfon at pobl lluosog ar yr un pryd</translation>\n@@ -626,6 +638,10 @@\n         <source>Alt+P</source>\n         <translation>Alt+P</translation>\n     </message>\n+    <message>\n+        <source>Message:</source>\n+        <translation>Neges:</translation>\n+    </message>\n     </context>\n <context>\n     <name>ShutdownWindow</name>\n@@ -761,6 +777,10 @@\n     </context>\n <context>\n     <name>bitcoin-core</name>\n+    <message>\n+        <source>Options:</source>\n+        <translation>Opsiynau:</translation>\n+    </message>\n     <message>\n         <source>Information</source>\n         <translation>Gwybodaeth</translation>"
      },
      {
        "sha": "aa2724a1e81ca8486f984cef48fc0926f04f7530",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 83,
        "deletions": 31,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -882,6 +882,34 @@\n         <source>command-line options</source>\n         <translation>kommandolinjetilvalg</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>Indstillinger for brugergr\u00e6nseflade:</translation>\n+    </message>\n+    <message>\n+        <source>Choose data directory on startup (default: %u)</source>\n+        <translation>V\u00e6lg datamappe under opstart (standard: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n+        <translation>V\u00e6lg sprog; fx \"da_DK\" (standard: systemsprog)</translation>\n+    </message>\n+    <message>\n+        <source>Start minimized</source>\n+        <translation>Start minimeret</translation>\n+    </message>\n+    <message>\n+        <source>Set SSL root certificates for payment request (default: -system-)</source>\n+        <translation>Ops\u00e6t SSL-rodcertifikater til betalingsadmodninger (standard: -system-)</translation>\n+    </message>\n+    <message>\n+        <source>Show splash screen on startup (default: %u)</source>\n+        <translation>Vis startsk\u00e6rm under opstart (standard: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Reset all settings changes made over the GUI</source>\n+        <translation>Nulstil alle indstillinger, der er foretaget i den grafiske brugerflade</translation>\n+    </message>\n </context>\n <context>\n     <name>Intro</name>\n@@ -925,7 +953,11 @@\n         <source>%n GB of free space available</source>\n         <translation><numerusform>%n GB fri plads tilg\u00e6ngelig</numerusform><numerusform>%n GB fri plads tilg\u00e6ngelig</numerusform></translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>(of %n GB needed)</source>\n+        <translation><numerusform>(ud af %n GB beh\u00f8vet)</numerusform><numerusform>(ud af %n GB beh\u00f8vet)</numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n@@ -1097,7 +1129,7 @@\n     </message>\n     <message>\n         <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n-        <translation>Forbind til Bitcoin-netv\u00e6rket gennem en separat SOCKS5-proxy for skjulte tjenester via Tor.</translation>\n+        <translation>Forbind til Bitcoin-netv\u00e6rket gennem en separat SOCKS5-proxy for skjulte Tor-tjenester.</translation>\n     </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n@@ -1473,6 +1505,18 @@\n         <source>Current number of blocks</source>\n         <translation>Nuv\u00e6rende antal blokke</translation>\n     </message>\n+    <message>\n+        <source>Memory Pool</source>\n+        <translation>Hukommelsespulje</translation>\n+    </message>\n+    <message>\n+        <source>Current number of transactions</source>\n+        <translation>Aktuelt antal transaktioner</translation>\n+    </message>\n+    <message>\n+        <source>Memory usage</source>\n+        <translation>Hukommelsesforbrug</translation>\n+    </message>\n     <message>\n         <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>\u00c5bn Bitcoin Cores fejls\u00f8gningslogfil fra den aktuelle datamappe. Dette kan tage nogle f\u00e5 sekunder for store logfiler.</translation>\n@@ -2732,6 +2776,10 @@\n         <source>Copy transaction ID</source>\n         <translation>Kopi\u00e9r transaktions-ID</translation>\n     </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>Kopi\u00e9r r\u00e5 transaktion</translation>\n+    </message>\n     <message>\n         <source>Edit label</source>\n         <translation>Redig\u00e9r m\u00e6rkat</translation>\n@@ -2991,10 +3039,6 @@\n         <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n         <translation>S\u00e6t andre knuder, der forbinder fra den angivne netmaske eller IP, p\u00e5 hvidliste. Kan angives flere gange.</translation>\n     </message>\n-    <message>\n-        <source>(default: 1)</source>\n-        <translation>(standard: 1)</translation>\n-    </message>\n     <message>\n         <source>-maxmempool must be at least %d MB</source>\n         <translation>-maxmempool skal v\u00e6re mindst %d MB</translation>\n@@ -3251,17 +3295,21 @@\n         <source>Activating best chain...</source>\n         <translation>Aktiverer bedste k\u00e6de\u2026</translation>\n     </message>\n+    <message>\n+        <source>Always relay transactions received from whitelisted peers (default: %d)</source>\n+        <translation>Videresend altid transaktioner, der modtages fra hvidlistede knuder (standard: %d)</translation>\n+    </message>\n     <message>\n         <source>Attempt to recover private keys from a corrupt wallet.dat on startup</source>\n         <translation>Fors\u00f8g at genskabe private n\u00f8gler fra en \u00f8delagt wallet.dat under opstart</translation>\n     </message>\n     <message>\n-        <source>Cannot resolve -whitebind address: '%s'</source>\n-        <translation>Kan ikke l\u00f8se -whitebind adresse: \"%s\"</translation>\n+        <source>Automatically create Tor hidden service (default: %d)</source>\n+        <translation>Opret automatisk skjult Tor-tjeneste (standard: %d)</translation>\n     </message>\n     <message>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>V\u00e6lg datamappe ved opstart (standard: 0)</translation>\n+        <source>Cannot resolve -whitebind address: '%s'</source>\n+        <translation>Kan ikke l\u00f8se -whitebind adresse: \"%s\"</translation>\n     </message>\n     <message>\n         <source>Connect through SOCKS5 proxy</source>\n@@ -3351,22 +3399,10 @@\n         <source>Send transactions as zero-fee transactions if possible (default: %u)</source>\n         <translation>Send transaktioner som nul-gebyr-transaktioner hvis muligt (standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation>S\u00e6t SSL-rodcertifikater for betalingsanmodning (standard: -system-)</translation>\n-    </message>\n-    <message>\n-        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Angiv sprog, fx \"da_DK\" (standard: systemlokalitet)</translation>\n-    </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation>Vis alle tilvalg for fejls\u00f8gning (brug: --help -help-debug)</translation>\n     </message>\n-    <message>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Vis opstartsbillede ved opstart (standard: 1)</translation>\n-    </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n         <translation>Formindsk debug.log filen ved klientopstart (standard: 1 hvis ikke -debug)</translation>\n@@ -3375,10 +3411,6 @@\n         <source>Signing transaction failed</source>\n         <translation>Underskrift af transaktion mislykkedes</translation>\n     </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>Start minimeret</translation>\n-    </message>\n     <message>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation>Transaktionsbel\u00f8bet er for lille til at betale gebyret</translation>\n@@ -3387,6 +3419,14 @@\n         <source>This is experimental software.</source>\n         <translation>Dette er eksperimentelt software.</translation>\n     </message>\n+    <message>\n+        <source>Tor control port password (default: empty)</source>\n+        <translation>Adgangskode for Tor kontrolport (standard: tom)</translation>\n+    </message>\n+    <message>\n+        <source>Tor control port to use if onion listening enabled (default: %s)</source>\n+        <translation>Tor kontrolport, der skal bruges, hvis onion-lytning er sl\u00e5et til (standard: %s)</translation>\n+    </message>\n     <message>\n         <source>Transaction amount too small</source>\n         <translation>Transaktionsbel\u00f8b er for lavt</translation>\n@@ -3403,10 +3443,6 @@\n         <source>Transaction too large</source>\n         <translation>Transaktionen er for stor</translation>\n     </message>\n-    <message>\n-        <source>UI Options:</source>\n-        <translation>Indstillinger for brugerflade:</translation>\n-    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Ikke i stand til at tildele til %s p\u00e5 denne computer (bind returnerede fejl %s)</translation>\n@@ -3427,6 +3463,10 @@\n         <source>Warning</source>\n         <translation>Advarsel</translation>\n     </message>\n+    <message>\n+        <source>Whether to operate in a blocks only mode (default: %u)</source>\n+        <translation>Hvorvidt der skal arbejdes i kun-blokke-tilstand (standard: %u)</translation>\n+    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Zapper alle transaktioner fra tegnebog\u2026</translation>\n@@ -3483,6 +3523,10 @@\n         <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Fejl under l\u00e6sning af wallet.dat! Alle n\u00f8gler blev l\u00e6st korrekt, men transaktionsdata eller indgange i adressebogen kan mangle eller v\u00e6re ukorrekte.</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n+        <translation>Gebyrer (i %s/kB) mindre end dette opfattes som intet gebyr under oprettelse af transaktioner (standard: %s)</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Hvor gennemarbejdet blokverificeringen for -checkblocks er (0-4; standard: %u)</translation>\n@@ -3499,6 +3543,10 @@\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Udskriv fejls\u00f8gningsinformation (standard: %u, angivelse af &lt;kategori&gt; er valgfri)</translation>\n     </message>\n+    <message>\n+        <source>Support filtering of blocks and transaction with bloom filters (default: %u)</source>\n+        <translation>Underst\u00f8t filtrering af blokke og transaktioner med Bloom-filtre (standard: %u)</translation>\n+    </message>\n     <message>\n         <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n         <translation>Den totale l\u00e6ngde p\u00e5 netv\u00e6rksversionsstrengen (%i) overstiger maksimall\u00e6ngden (%i). Reduc\u00e9r antaller af eller st\u00f8rrelsen p\u00e5 uacomments.</translation>\n@@ -3513,7 +3561,11 @@\n     </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n-        <translation>Brug separat SOCS5-proxy for at n\u00e5 andre knuder via Tor skjulte tjenester (standard: %s)</translation>\n+        <translation>Brug separat SOCS5-proxy for at n\u00e5 knuder via skjulte Tor-tjenester (standard: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Username and hashed password for JSON-RPC connections. The field &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A canonical python script is included in share/rpcuser. This option can be specified multiple times</source>\n+        <translation>Brugernavn og hashet adgangskode for JSON-RPC-forbindelser. Feltet &lt;userpw&gt; er i formatet: &lt;BRUGERNAVN&gt;:&lt;SALT&gt;$&lt;HASH&gt;. Et kanonisk Python-skript inkluderes i share/rpcuser. Dette tilvalg kan angives flere gange</translation>\n     </message>\n     <message>\n         <source>(default: %s)</source>"
      },
      {
        "sha": "84de80aff50d3b69e3e43050cbd5b38c1c0914c3",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 193,
        "deletions": 29,
        "changes": 222,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -226,7 +226,11 @@\n         <source>IP/Netmask</source>\n         <translation>IP/Netzmaske</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Gesperrt bis</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -878,6 +882,34 @@\n         <source>command-line options</source>\n         <translation>Kommandozeilenoptionen</translation>\n     </message>\n+    <message>\n+        <source>UI Options:</source>\n+        <translation>UI Einstellungen:</translation>\n+    </message>\n+    <message>\n+        <source>Choose data directory on startup (default: %u)</source>\n+        <translation>Datenverzeichnis beim Starten ausw\u00e4hlen (Standard: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n+        <translation>Sprache einstellen, zum Beispiel \"de_DE\" (default: system locale)</translation>\n+    </message>\n+    <message>\n+        <source>Start minimized</source>\n+        <translation>Minimiert starten</translation>\n+    </message>\n+    <message>\n+        <source>Set SSL root certificates for payment request (default: -system-)</source>\n+        <translation>SSL-Wurzelzertifikate f\u00fcr Zahlungsanforderungen festlegen (Standard: -system-)</translation>\n+    </message>\n+    <message>\n+        <source>Show splash screen on startup (default: %u)</source>\n+        <translation>Startbildschirm beim Starten anzeigen (Standard: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Reset all settings changes made over the GUI</source>\n+        <translation>Setze alle Einstellungen zur\u00fcck, die \u00fcber die grafische Oberfl\u00e4che ge\u00e4ndert wurden.</translation>\n+    </message>\n </context>\n <context>\n     <name>Intro</name>\n@@ -1075,6 +1107,14 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port des Proxies (z.B. 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>Benutzt um Gegenstellen zu erreichen \u00fcber:</translation>\n+    </message>\n+    <message>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>Zeigt an, ob der eingegebene Standard SOCKS5 Proxy genutzt wird um Peers mit dem Netzwerktyp zu erreichen.</translation>\n+    </message>\n     <message>\n         <source>IPv4</source>\n         <translation>IPv4</translation>\n@@ -1087,6 +1127,14 @@\n         <source>Tor</source>\n         <translation>Tor</translation>\n     </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n+        <translation>\u00dcber einen separaten SOCKS5 Proxy f\u00fcr Tor Services mit dem Bitcoint Netzwerk verbinden.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Separaten SOCKS5-Proxy verwenden, um Gegenstellen \u00fcber versteckte Tor-Dienste zu erreichen:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Programmfenster</translation>\n@@ -1457,6 +1505,18 @@\n         <source>Current number of blocks</source>\n         <translation>Aktuelle Anzahl Bl\u00f6cke</translation>\n     </message>\n+    <message>\n+        <source>Memory Pool</source>\n+        <translation>Speicherpool</translation>\n+    </message>\n+    <message>\n+        <source>Current number of transactions</source>\n+        <translation>Aktuelle Anzahl der Transaktionen</translation>\n+    </message>\n+    <message>\n+        <source>Memory usage</source>\n+        <translation>Speichernutzung</translation>\n+    </message>\n     <message>\n         <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>\u00d6ffnet die \"Bitcoin Core\"-Debugprotokolldatei aus dem aktuellen Datenverzeichnis. Dies kann bei gro\u00dfen Protokolldateien einige Sekunden dauern.</translation>\n@@ -1473,10 +1533,18 @@\n         <source>&amp;Peers</source>\n         <translation>&amp;Gegenstellen</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>Gesperrte Peers</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>Gegenstelle ausw\u00e4hlen, um detaillierte Informationen zu erhalten.</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>Zugelassene</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>Richtung</translation>\n@@ -1485,6 +1553,10 @@\n         <source>Version</source>\n         <translation>Version</translation>\n     </message>\n+    <message>\n+        <source>Starting Block</source>\n+        <translation>Start Block</translation>\n+    </message>\n     <message>\n         <source>Synced Headers</source>\n         <translation>Synchronisierte Kopfdaten</translation>\n@@ -1521,6 +1593,14 @@\n         <source>Ping Time</source>\n         <translation>Pingzeit</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>Die Laufzeit eines aktuell ausstehenden Ping.</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>Ping Wartezeit</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>Zeitversatz</translation>\n@@ -1573,6 +1653,10 @@\n         <source>&amp;Disconnect Node</source>\n         <translation>Knoten &amp;trennen</translation>\n     </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>Knoten gebannt f\u00fcr</translation>\n+    </message>\n     <message>\n         <source>1 &amp;hour</source>\n         <translation>1 &amp;Stunde</translation>\n@@ -1589,6 +1673,10 @@\n         <source>1 &amp;year</source>\n         <translation>1 &amp;Jahr</translation>\n     </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>&amp;Node entsperren</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>Willkommen in der \"Bitcoin Core\"-RPC-Konsole.</translation>\n@@ -2049,6 +2137,10 @@\n         <source>Payment request expired.</source>\n         <translation>Zahlungsanforderung abgelaufen.</translation>\n     </message>\n+    <message>\n+        <source>Pay only the required fee of %1</source>\n+        <translation>Nur die notwendige Geb\u00fchr in H\u00f6he von %1 zahlen</translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>Estimated to begin confirmation within %n block(s).</source>\n         <translation><numerusform>Voraussichtlicher Beginn der Best\u00e4tigung innerhalb von %n Block.</numerusform><numerusform>Voraussichtlicher Beginn der Best\u00e4tigung innerhalb von %n Bl\u00f6cken.</numerusform></translation>\n@@ -2684,6 +2776,10 @@\n         <source>Copy transaction ID</source>\n         <translation>Transaktions-ID kopieren</translation>\n     </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>Kopiere rohe Transaktion</translation>\n+    </message>\n     <message>\n         <source>Edit label</source>\n         <translation>Bezeichnung bearbeiten</translation>\n@@ -2831,6 +2927,14 @@\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Kommandozeilen- und JSON-RPC-Befehle annehmen</translation>\n     </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Maximale Gesamtgeb\u00fchr (in %s) in einer B\u00f6rsentransaktion; wird dies zu niedrig gesetzten k\u00f6nnen gro\u00dfe Transaktionen abgebrochen werden (Standard: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>Bitte korrigieren Sie die Datums- und Uhrzeiteinstellungen Ihres Computers, da Bitcoin Core ansonsten nicht ordnungsgem\u00e4\u00df funktionieren wird.</translation>\n+    </message>\n     <message>\n         <source>Error: A fatal internal error occurred, see debug.log for details</source>\n         <translation>Fehler: Ein schwerer interner Fehler ist aufgetreten, siehe debug.log f\u00fcr Details.</translation>\n@@ -2843,6 +2947,10 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Als Hintergrunddienst ausf\u00fchren und Befehle annehmen</translation>\n     </message>\n+    <message>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>Kann HTTP Server nicht starten. Siehe debug log f\u00fcr Details.</translation>\n+    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Eingehende Verbindungen annehmen (Standard: 1, wenn nicht -proxy oder -connect)</translation>\n@@ -2899,10 +3007,6 @@\n         <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n         <translation>Gegenstellen die sich von der angegebenen Netzmaske oder IP-Adresse aus verbinden immer zulassen. Kann mehrmals angegeben werden.</translation>\n     </message>\n-    <message>\n-        <source>(default: 1)</source>\n-        <translation>(Standard: 1)</translation>\n-    </message>\n     <message>\n         <source>-maxmempool must be at least %d MB</source>\n         <translation>-maxmempool muss mindestens %d MB betragen</translation>\n@@ -2939,6 +3043,18 @@\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>M\u00f6chten Sie die Blockdatenbank jetzt neu aufbauen?</translation>\n     </message>\n+    <message>\n+        <source>Enable publish hash block in &lt;address&gt;</source>\n+        <translation>Aktiviere das Ver\u00f6ffentlichen des Hash-Blocks in &lt;address&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish hash transaction in &lt;address&gt;</source>\n+        <translation>Aktiviere das Ver\u00f6ffentlichen der Hash-Transaktion in &lt;address&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw block in &lt;address&gt;</source>\n+        <translation>Aktiviere das Ver\u00f6ffentlichen des Raw-Blocks in &lt;address&gt;</translation>\n+    </message>\n     <message>\n         <source>Error initializing block database</source>\n         <translation>Fehler beim Initialisieren der Blockdatenbank</translation>\n@@ -3003,6 +3119,18 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Wallet-Datei angeben (innerhalb des Datenverzeichnisses)</translation>\n     </message>\n+    <message>\n+        <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation>Nicht unterst\u00fctztes Argument -benchmark wurde ignoriert, bitte -debug=bench verwenden.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation>Nicht unterst\u00fctztes Argument -debugnet wurde ignoriert, bitte -debug=net verwenden.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -tor found, use -onion.</source>\n+        <translation>Nicht unterst\u00fctztes Argument -tor gefunden, bitte -onion verwenden.</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>UPnP verwenden, um eine Portweiterleitung einzurichten (Standard: %u)</translation>\n@@ -3120,12 +3248,16 @@\n         <translation>Aktiviere beste Blockkette...</translation>\n     </message>\n     <message>\n-        <source>Cannot resolve -whitebind address: '%s'</source>\n-        <translation>Kann Adresse in -whitebind nicht aufl\u00f6sen: '%s'</translation>\n+        <source>Attempt to recover private keys from a corrupt wallet.dat on startup</source>\n+        <translation>Versuchen, private Schl\u00fcssel beim Starten aus einer besch\u00e4digten wallet.dat wiederherzustellen</translation>\n     </message>\n     <message>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>Datenverzeichnis beim Starten ausw\u00e4hlen (Standard: 0)</translation>\n+        <source>Automatically create Tor hidden service (default: %d)</source>\n+        <translation>Automatisch versteckten Tor-Dienst erstellen (Standard: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Cannot resolve -whitebind address: '%s'</source>\n+        <translation>Kann Adresse in -whitebind nicht aufl\u00f6sen: '%s'</translation>\n     </message>\n     <message>\n         <source>Connect through SOCKS5 proxy</source>\n@@ -3143,6 +3275,10 @@\n         <source>Error reading from database, shutting down.</source>\n         <translation>Fehler beim lesen der Datenbank, Ausf\u00fchrung wird beendet.</translation>\n     </message>\n+    <message>\n+        <source>Imports blocks from external blk000??.dat file on startup</source>\n+        <translation>Bl\u00f6cke beim Starten aus externer Datei blk000??.dat importieren</translation>\n+    </message>\n     <message>\n         <source>Information</source>\n         <translation>Hinweis</translation>\n@@ -3195,6 +3331,10 @@\n         <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation>P2P-Netzwerk-Alarme empfangen und anzeigen (Standard: %u)</translation>\n     </message>\n+    <message>\n+        <source>Rescan the block chain for missing wallet transactions on startup</source>\n+        <translation>Blockkette beim Starten erneut nach fehlenden Wallet-Transaktionen durchsuchen</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>R\u00fcckverfolgungs- und Debuginformationen an die Konsole senden, anstatt sie in debug.log zu schreiben</translation>\n@@ -3203,22 +3343,10 @@\n         <source>Send transactions as zero-fee transactions if possible (default: %u)</source>\n         <translation>Transaktionen, wenn m\u00f6glich, als geb\u00fchrenfreie Transaktion senden (Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation>SSL-Wurzelzertifikate f\u00fcr Zahlungsanforderungen festlegen (Standard: -system-)</translation>\n-    </message>\n-    <message>\n-        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Sprache festlegen, z.B. \"de_DE\" (Standard: Systemstandard)</translation>\n-    </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation>Zeige alle Debuggingoptionen (Benutzung: --help -help-debug)</translation>\n     </message>\n-    <message>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Startbildschirm beim Starten anzeigen (Standard: 1)</translation>\n-    </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n         <translation>Protokolldatei debug.log beim Starten des Clients k\u00fcrzen (Standard: 1, wenn kein -debug)</translation>\n@@ -3227,10 +3355,6 @@\n         <source>Signing transaction failed</source>\n         <translation>Signierung der Transaktion fehlgeschlagen</translation>\n     </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>Minimiert starten</translation>\n-    </message>\n     <message>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation>Der Transaktionsbetrag ist zu niedrig, um die Geb\u00fchr zu bezahlen.</translation>\n@@ -3239,6 +3363,14 @@\n         <source>This is experimental software.</source>\n         <translation>Dies ist experimentelle Software.</translation>\n     </message>\n+    <message>\n+        <source>Tor control port password (default: empty)</source>\n+        <translation>TOR Kontrollport Passwort (Standard: leer)</translation>\n+    </message>\n+    <message>\n+        <source>Tor control port to use if onion listening enabled (default: %s)</source>\n+        <translation>Zu benutzender TOR Kontrollport wenn Onion Auflistung aktiv ist (Standard: %s)</translation>\n+    </message>\n     <message>\n         <source>Transaction amount too small</source>\n         <translation>Transaktionsbetrag zu niedrig</translation>\n@@ -3255,14 +3387,14 @@\n         <source>Transaction too large</source>\n         <translation>Transaktion zu gro\u00df</translation>\n     </message>\n-    <message>\n-        <source>UI Options:</source>\n-        <translation>Benutzeroberfl\u00e4chenoptionen:</translation>\n-    </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Kann auf diesem Computer nicht an %s binden (bind meldete Fehler %s)</translation>\n     </message>\n+    <message>\n+        <source>Upgrade wallet to latest format on startup</source>\n+        <translation>Wallet beim Starten auf das neueste Format aktualisieren</translation>\n+    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Benutzername f\u00fcr JSON-RPC-Verbindungen</translation>\n@@ -3275,6 +3407,10 @@\n         <source>Warning</source>\n         <translation>Warnung</translation>\n     </message>\n+    <message>\n+        <source>Whether to operate in a blocks only mode (default: %u)</source>\n+        <translation>Legt fest ob nur Bl\u00f6cke Modus aktiv sein soll (Standard: %u)</translation>\n+    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>L\u00f6sche alle Transaktionen aus Wallet...</translation>\n@@ -3315,6 +3451,22 @@\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = TX-Metadaten wie z.B. Accountbesitzer und Zahlungsanforderungsinformationen behalten, 2 = TX-Metadaten verwerfen)</translation>\n     </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>-maxtxfee ist auf einen sehr hohen Wert festgelegt! Geb\u00fchren dieser H\u00f6he k\u00f6nnten f\u00fcr eine einzelne Transaktion bezahlt werden.</translation>\n+    </message>\n+    <message>\n+        <source>-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>-paytxfee ist auf einen sehr hohen Wert festgelegt! Dies ist die Geb\u00fchr die beim Senden einer Transaktion f\u00e4llig wird.</translation>\n+    </message>\n+    <message>\n+        <source>Do not keep transactions in the mempool longer than &lt;n&gt; hours (default: %u)</source>\n+        <translation>Die Transaktion nicht l\u00e4nger im Speicherpool behalten als &lt;n&gt; Stunden (Standard: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>Lesen von wallet.dat fehlgeschlagen! Alle Schl\u00fcssel wurden korrekt gelesen, Transaktionsdaten bzw. Adressbucheintr\u00e4ge fehlen aber m\u00f6glicherweise oder sind inkorrekt.</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Legt fest, wie gr\u00fcndlich die Blockverifikation von -checkblocks ist (0-4, Standard: %u)</translation>\n@@ -3331,6 +3483,14 @@\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Debugginginformationen ausgeben (Standard: %u, &lt;category&gt; anzugeben ist optional)</translation>\n     </message>\n+    <message>\n+        <source>Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)</source>\n+        <translation>Versucht ausgehenden Datenverkehr unter dem gegebenen Wert zu halten (in MiB pro 24h), 0 = kein Limit (default: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation>Nicht unterst\u00fctztes Argument -socks gefunden. Das Festlegen der SOCKS-Version ist nicht mehr m\u00f6glich, nur noch SOCKS5-Proxies werden unterst\u00fctzt.</translation>\n+    </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation>Separaten SOCKS5-Proxy verwenden, um Gegenstellen \u00fcber versteckte Tor-Dienste zu erreichen (Standard: %s)</translation>\n@@ -3367,6 +3527,10 @@\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>&lt;port&gt; nach JSON-RPC-Verbindungen abh\u00f6ren (Standard: %u oder Testnetz: %u)</translation>\n     </message>\n+    <message>\n+        <source>Listen for connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n+        <translation>&lt;port&gt; nach Verbindungen abh\u00f6ren (Standard: %u oder Testnetz: %u)</translation>\n+    </message>\n     <message>\n         <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n         <translation>Maximal &lt;n&gt; Verbindungen zu Gegenstellen aufrechterhalten (Standard: %u)</translation>"
      },
      {
        "sha": "6777961cbc309dcd99c5a226e69e9d38ed07ba48",
        "filename": "src/qt/locale/bitcoin_el.ts",
        "status": "added",
        "additions": 321,
        "deletions": 0,
        "changes": 321,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_el.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_el.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -0,0 +1,321 @@\n+<TS language=\"el\" version=\"2.1\">\n+<context>\n+    <name>AddressBookPage</name>\n+    <message>\n+        <source>Create a new address</source>\n+        <translation>\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03bd\u03ad\u03bf\u03c5 \u03bb\u03bf\u03b3\u03b1\u03c1\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>AddressTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>AskPassphraseDialog</name>\n+    <message>\n+        <source>Enter passphrase</source>\n+        <translation>\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc</translation>\n+    </message>\n+    <message>\n+        <source>New passphrase</source>\n+        <translation>\u039d\u03ad\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc</translation>\n+    </message>\n+    <message>\n+        <source>Repeat new passphrase</source>\n+        <translation>\u0395\u03c0\u03b1\u03bd\u03b1\u03bb\u03ac\u03b2\u03b5\u03c4\u03b5 \u03bd\u03ad\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u0391\u03bb\u03bb\u03b1\u03b3\u03ae \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03bf\u03cd</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n+<context>\n+    <name>BitcoinGUI</name>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>\u039a\u03bb\u03b5\u03af\u03c3\u03b9\u03bc\u03bf \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Wallet</source>\n+        <translation>\u03a0\u03bf\u03c1\u03c4\u03bf\u03c6\u03cc\u03bb\u03b9</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>ClientModel</name>\n+    </context>\n+<context>\n+    <name>CoinControlDialog</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03bf\u03cd</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    <message>\n+        <source>&amp;Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Address</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    </context>\n+<context>\n+    <name>HelpMessageDialog</name>\n+    <message>\n+        <source>version</source>\n+        <translation>\u03ad\u03ba\u03b4\u03bf\u03c3\u03b7</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <source>Welcome</source>\n+        <translation>\u039a\u03b1\u03bb\u03ce\u03c2 \u0389\u03bb\u03b8\u03b1\u03c4\u03b5</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    </context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <source>W&amp;allet</source>\n+        <translation>\u03a0\u03bf\u03c1\u03c4\u03bf\u03c6\u03cc\u03bb\u03b9</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>OverviewPage</name>\n+    </context>\n+<context>\n+    <name>PaymentServer</name>\n+    </context>\n+<context>\n+    <name>PeerTableModel</name>\n+    </context>\n+<context>\n+    <name>QObject</name>\n+    </context>\n+<context>\n+    <name>QRImageWidget</name>\n+    </context>\n+<context>\n+    <name>RPCConsole</name>\n+    <message>\n+        <source>Services</source>\n+        <translation>\u03a5\u03c0\u03b7\u03c1\u03b5\u03c3\u03af\u03b5\u03c2</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>ReceiveCoinsDialog</name>\n+    <message>\n+        <source>Remove</source>\n+        <translation>\u0391\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>Copy message</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03bc\u03b7\u03bd\u03cd\u03bc\u03b1\u03c4\u03bf\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03bf\u03cd</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>\u039c\u03ae\u03bd\u03c5\u03bc\u03b1</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>\u039c\u03ae\u03bd\u03c5\u03bc\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>(no message)</source>\n+        <translation>(\u03ba\u03b1\u03bd\u03ad\u03bd\u03b1 \u03bc\u03ae\u03bd\u03c5\u03bc\u03b1)</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>SendCoinsDialog</name>\n+    <message>\n+        <source>Insufficient funds!</source>\n+        <translation>\u039a\u03b5\u03c6\u03ac\u03bb\u03b1\u03b9\u03b1 \u03bc\u03b7 \u03b5\u03c0\u03b1\u03c1\u03ba\u03ae</translation>\n+    </message>\n+    <message>\n+        <source>Recommended:</source>\n+        <translation>\u03a3\u03c5\u03bd\u03af\u03c3\u03c4\u03b1\u03c4\u03b1\u03b9:</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03bf\u03cd</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>SendCoinsEntry</name>\n+    <message>\n+        <source>Message:</source>\n+        <translation>\u039c\u03ae\u03bd\u03c5\u03bc\u03b1:</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>ShutdownWindow</name>\n+    </context>\n+<context>\n+    <name>SignVerifyMessageDialog</name>\n+    </context>\n+<context>\n+    <name>SplashScreen</name>\n+    </context>\n+<context>\n+    <name>TrafficGraphWidget</name>\n+    </context>\n+<context>\n+    <name>TransactionDesc</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>\u039c\u03ae\u03bd\u03c5\u03bc\u03b1</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>TransactionDescDialog</name>\n+    </context>\n+<context>\n+    <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>TransactionView</name>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03bf\u03cd</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>UnitDisplayStatusBarControl</name>\n+    </context>\n+<context>\n+    <name>WalletFrame</name>\n+    </context>\n+<context>\n+    <name>WalletModel</name>\n+    </context>\n+<context>\n+    <name>WalletView</name>\n+    </context>\n+<context>\n+    <name>bitcoin-core</name>\n+    <message>\n+        <source>Insufficient funds</source>\n+        <translation>\u039a\u03b5\u03c6\u03ac\u03bb\u03b1\u03b9\u03b1 \u03bc\u03b7 \u03b5\u03c0\u03b1\u03c1\u03ba\u03ae</translation>\n+    </message>\n+    <message>\n+        <source>Loading wallet...</source>\n+        <translation>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd...</translation>\n+    </message>\n+    <message>\n+        <source>Rescanning...</source>\n+        <translation>\u0395\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7 \u03c3\u03ac\u03c1\u03c9\u03c3\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Done loading</source>\n+        <translation>\u0397 \u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03bf\u03bb\u03bf\u03ba\u03bb\u03b7\u03c1\u03ce\u03b8\u03b7\u03ba\u03b5</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1</translation>\n+    </message>\n+</context>\n+</TS>\n\\ No newline at end of file"
      },
      {
        "sha": "90c27c43943ac7890e1994b75ee982f6763bdbac",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 29,
        "deletions": 25,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -694,6 +694,10 @@\n         <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n         <translation>\u0391\u03c5\u03c4\u03ae \u03b7 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03cc\u03ba\u03ba\u03b9\u03bd\u03b7 \u03b1\u03bd \u03bf\u03c0\u03bf\u03b9\u03bf\u03c3\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c0\u03b1\u03c1\u03b1\u03bb\u03ae\u03c0\u03c4\u03b7\u03c2 \u03bb\u03ac\u03b2\u03b5\u03b9 \u03c0\u03bf\u03c3\u03cc \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc %1.</translation>\n     </message>\n+    <message>\n+        <source>Can vary +/- %1 satoshi(s) per input.</source>\n+        <translation>\u039c\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b4\u03b9\u03b1\u03c6\u03ad\u03c1\u03b5\u03b9 +/- %1 Satoshi (\u03b5\u03c2) \u03b1\u03bd\u03ac \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae.</translation>\n+    </message>\n     <message>\n         <source>yes</source>\n         <translation>\u03bd\u03b1\u03b9</translation>\n@@ -706,6 +710,10 @@\n         <source>This means a fee of at least %1 per kB is required.</source>\n         <translation>\u0395\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf \u03c7\u03c1\u03b5\u03ce\u03c3\u03b9\u03bc\u03bf \u03c0\u03bf\u03c3\u03cc \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf %1 \u03b1\u03bd\u03b1 kB</translation>\n     </message>\n+    <message>\n+        <source>Can vary +/- 1 byte per input.</source>\n+        <translation>\u039c\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b4\u03b9\u03b1\u03c6\u03ad\u03c1\u03b5\u03b9 +/- 1 byte \u03b1\u03bd\u03ac \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae.</translation>\n+    </message>\n     <message>\n         <source>Transactions with higher priority are more likely to get included into a block.</source>\n         <translation>\u03a3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03bc\u03b5 \u03c5\u03c8\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7 \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b9\u03bf \u03c0\u03b9\u03b8\u03b1\u03bd\u03cc \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03bc\u03c0\u03bb\u03bf\u03ba.</translation>\n@@ -832,7 +840,7 @@\n         <source>command-line options</source>\n         <translation>\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd</translation>\n     </message>\n-</context>\n+    </context>\n <context>\n     <name>Intro</name>\n     <message>\n@@ -2542,10 +2550,6 @@\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u03a0\u03c1\u03bf\u03b5\u03b9\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 : \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03b9\u03bf wallet.dat \u03b5\u03b9\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b5\u03c6\u03b8\u03b1\u03c1\u03bc\u03ad\u03bd\u03bf, \u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c3\u03ce\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 ! Original wallet.dat \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c9\u03c2 wallet.{timestamp}.bak \u03c3\u03c4\u03bf %s . \u0391\u03bd \u03c4\u03bf \u03c5\u03c0\u03cc\u03bb\u03bf\u03b9\u03c0\u03bf \u03c4\u03bf\u03c5 \u03ae \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03c3\u03b1\u03c2, \u03b5\u03af\u03bd\u03b1\u03b9 \u03bb\u03ac\u03b8\u03bf\u03c2 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03c4\u03b5 \u03b1\u03c0\u03cc \u03ad\u03bd\u03b1 \u03b1\u03bd\u03c4\u03af\u03b3\u03c1\u03b1\u03c6\u03bf \u03b1\u03c3\u03c6\u03b1\u03bb\u03b5\u03af\u03b1\u03c2</translation>\n     </message>\n-    <message>\n-        <source>(default: 1)</source>\n-        <translation>(\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: 1)</translation>\n-    </message>\n     <message>\n         <source>Block creation options:</source>\n         <translation>\u0391\u03c0\u03bf\u03ba\u03bb\u03b5\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03c9\u03bd \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1\u03c2: </translation>\n@@ -2606,6 +2610,10 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>\u039c\u03cc\u03bd\u03bf \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 \u03c3\u03b5 \u03ba\u03cc\u03bc\u03b2\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5 \u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5 &lt;net&gt; (ipv4, ipv6 \u03ae onion)</translation>\n     </message>\n+    <message>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation>\u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf \u03bc\u03ad\u03b3\u03b9\u03c3\u03c4\u03bf \u03bc\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2 block \u03c3\u03b5 bytes (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: %d)</translation>\n+    </message>\n     <message>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u0395\u03c0\u03b9\u03bb\u03ad\u03be\u03c4\u03b5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd (\u03bc\u03ad\u03c3\u03b1 \u03b1\u03c0\u03bf \u03ba\u03b1\u03c4\u03ac\u03bb\u03bf\u03b3\u03bf \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd)</translation>\n@@ -2630,14 +2638,14 @@\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n         <translation>\u0391\u03b4\u03c5\u03bd\u03b1\u03bc\u03af\u03b1 \u03ba\u03bb\u03b5\u03b9\u03b4\u03ce\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03c6\u03b1\u03ba\u03ad\u03bb\u03bf\u03c5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd %s. \u03a0\u03b9\u03b8\u03b1\u03bd\u03ce\u03c2 \u03c4\u03bf Bitcoin \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ae\u03b4\u03b7 \u03b5\u03bd\u03b5\u03c1\u03b3\u03cc.</translation>\n     </message>\n-    <message>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>\u0395\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae \u03c6\u03b1\u03ba\u03ad\u03bb\u03bf\u03c5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03c4\u03b7\u03bd \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7 (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03bf: 0)</translation>\n-    </message>\n     <message>\n         <source>Connect through SOCKS5 proxy</source>\n         <translation>\u03a3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 \u03bc\u03ad\u03c3\u03c9 \u03b4\u03b9\u03b1\u03bc\u03b5\u03c3\u03bf\u03bb\u03b1\u03b2\u03b7\u03c4\u03ae SOCKS5</translation>\n     </message>\n+    <message>\n+        <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n+        <translation>\u03a0\u03bd\u03b5\u03c5\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03b4\u03b9\u03ba\u03b1\u03b9\u03ce\u03bc\u03b1\u03c4\u03b1 2009-%i \u039f\u03b9 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ad\u03c2 \u03c4\u03bf\u03c5 Bitcoin Core</translation>\n+    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 wallet.dat: \u03a4\u03bf \u03a0\u03bf\u03c1\u03c4\u03bf\u03c6\u03cc\u03bb\u03b9 \u03b1\u03c0\u03b1\u03b9\u03c4\u03b5\u03af \u03bc\u03b9\u03b1 \u03bd\u03b5\u03cc\u03c4\u03b5\u03c1\u03b7 \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7 \u03c4\u03bf\u03c5 Bitcoin</translation>\n@@ -2654,6 +2662,10 @@\n         <source>Initialization sanity check failed. Bitcoin Core is shutting down.</source>\n         <translation>\u0397 \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03bf\u03c1\u03b8\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03b1\u03c0\u03ad\u03c4\u03c5\u03c7\u03b5.  \u0393\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c4\u03bf\u03c5 Bitcoin Core.</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s'</source>\n+        <translation>\u039c\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf \u03c0\u03bf\u03c3\u03cc \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf -maxtxfee=&lt;amount&gt;: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: '%s'</source>\n         <translation>\u039c\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf \u03c0\u03bf\u03c3\u03cc \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf -paytxfee=&lt;amount&gt;: '%s'</translation>\n@@ -2674,22 +2686,10 @@\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u0391\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ae \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ce\u03bd \u03b5\u03bd\u03c4\u03bf\u03c0\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03c6\u03b1\u03bb\u03bc\u03ac\u03c4\u03c9\u03bd \u03c3\u03c4\u03b7\u03bd \u03ba\u03bf\u03bd\u03c3\u03cc\u03bb\u03b1 \u03b1\u03bd\u03c4\u03af \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 debug.log</translation>\n     </message>\n-    <message>\n-        <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation>\u039f\u03c1\u03af\u03c3\u03c4\u03b5 SSL root certificates \u03b3\u03b9\u03b1 \u03b1\u03af\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bb\u03b7\u03c1\u03c9\u03bc\u03ae\u03c2 (default: -system-)</translation>\n-    </message>\n-    <message>\n-        <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>\u038c\u03c1\u03b9\u03c3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1, \u03b3\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \"de_DE\"(\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae:\u03c4\u03bf\u03c0\u03b9\u03ba\u03ad\u03c2 \u03c1\u03c5\u03b8\u03bc\u03af\u03c3\u03b5\u03b9\u03c2)</translation>\n-    </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation>\u03a0\u03c1\u03bf\u03b2\u03bf\u03bb\u03ae \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ce\u03bd \u03b5\u03bd\u03c4\u03bf\u03c0\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03c6\u03b1\u03bb\u03bc\u03ac\u03c4\u03c9\u03bd (\u03c7\u03c1\u03ae\u03c3\u03b7: --help -help-debug)</translation>\n     </message>\n-    <message>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>\u0395\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b5 \u03c4\u03b7\u03bd \u03bf\u03b8\u03cc\u03bd\u03b7 \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7\u03c2 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7(\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae:1)</translation>\n-    </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n         <translation>\u03a3\u03c5\u03c1\u03c1\u03af\u03ba\u03bd\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf debug.log \u03ba\u03b1\u03c4\u03b1 \u03c4\u03b7\u03bd \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03b5\u03bb\u03ac\u03c4\u03b7 (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: 1 \u03cc\u03c4\u03b1\u03bd \u03b4\u03b5\u03bd-debug)</translation>\n@@ -2698,10 +2698,6 @@\n         <source>Signing transaction failed</source>\n         <translation>\u0397 \u03c5\u03c0\u03bf\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2 \u03b1\u03c0\u03ad\u03c4\u03c5\u03c7\u03b5 </translation>\n     </message>\n-    <message>\n-        <source>Start minimized</source>\n-        <translation>\u0388\u03bd\u03b1\u03c1\u03be\u03b7 \u03b5\u03bb\u03b1\u03c7\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03bf</translation>\n-    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>\u0397 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b5 \u03c0\u03b5\u03b9\u03c1\u03b1\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c3\u03c4\u03ac\u03b4\u03b9\u03bf.</translation>\n@@ -2790,6 +2786,14 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>\u0394\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03b7 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03b4\u03b9\u03b1\u03bc\u03b5\u03c3\u03bf\u03bb\u03b1\u03b2\u03b7\u03c4\u03ae: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Maintain at most &lt;n&gt; connections to peers (default: %u)</source>\n+        <translation>\u039c\u03ad\u03b3\u03b9\u03c3\u03c4\u03b5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c3\u03c5\u03bd\u03b4\u03ad\u03c3\u03b5\u03c9\u03bd \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 peers &lt;n&gt; (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Specify configuration file (default: %s)</source>\n+        <translation>\u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03c1\u03c5\u03b8\u03bc\u03af\u03c3\u03b5\u03c9\u03bd (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: %s)</translation>\n+    </message>\n     <message>\n         <source>Specify connection timeout in milliseconds (minimum: 1, default: %d)</source>\n         <translation>\u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bb\u03ae\u03be\u03b7\u03c2 \u03c7\u03c1\u03bf\u03bd\u03b9\u03ba\u03bf\u03cd \u03bf\u03c1\u03af\u03bf\u03c5 \u03c3\u03b5 \u03c7\u03b9\u03bb\u03b9\u03bf\u03c3\u03c4\u03ac \u03c4\u03bf\u03c5 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03bf\u03bb\u03ad\u03c0\u03c4\u03bf\u03c5(\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: %d)</translation>"
      },
      {
        "sha": "00411741f1b9ac8b46084e464b85b55f68ee3e79",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 150,
        "deletions": 118,
        "changes": 268,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc",
        "patch": "@@ -299,7 +299,7 @@\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+325\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+335\"/>\n         <source>Sign &amp;message...</source>\n         <translation>Sign &amp;message...</translation>\n     </message>\n@@ -701,7 +701,7 @@\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+143\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+135\"/>\n         <source>Network Alert</source>\n         <translation>Network Alert</translation>\n     </message>\n@@ -925,7 +925,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+160\"/>\n+        <location line=\"+161\"/>\n         <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -940,12 +940,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-32\"/>\n+        <location line=\"-33\"/>\n         <source>yes</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -971,7 +971,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <location line=\"+60\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\">(no label)</translation>\n@@ -1086,7 +1086,7 @@\n <context>\n     <name>HelpMessageDialog</name>\n     <message>\n-        <location filename=\"../utilitydialog.cpp\" line=\"+33\"/>\n+        <location filename=\"../utilitydialog.cpp\" line=\"+36\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\">Bitcoin Core</translation>\n     </message>\n@@ -1121,6 +1121,41 @@\n         <source>command-line options</source>\n         <translation type=\"unfinished\">command-line options</translation>\n     </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>UI Options:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Choose data directory on startup (default: %u)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set SSL root certificates for payment request (default: -system-)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: %u)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Reset all settings changed in the GUI</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>Intro</name>\n@@ -1469,17 +1504,17 @@\n         <translation>&amp;Cancel</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+83\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+81\"/>\n         <source>default</source>\n         <translation>default</translation>\n     </message>\n     <message>\n-        <location line=\"+59\"/>\n+        <location line=\"+64\"/>\n         <source>none</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+71\"/>\n         <source>Confirm options reset</source>\n         <translation>Confirm options reset</translation>\n     </message>\n@@ -1500,7 +1535,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+25\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>The supplied proxy address is invalid.</translation>\n     </message>\n@@ -1756,7 +1791,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+760\"/>\n+        <location line=\"+763\"/>\n         <source>%1 d</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1830,11 +1865,13 @@\n         <location line=\"+26\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location line=\"+36\"/>\n+        <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+36\"/>\n         <location line=\"+23\"/>\n-        <location line=\"+533\"/>\n+        <location line=\"+36\"/>\n+        <location line=\"+36\"/>\n+        <location line=\"+534\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n@@ -1855,7 +1892,7 @@\n         <translation>N/A</translation>\n     </message>\n     <message>\n-        <location line=\"-1156\"/>\n+        <location line=\"-1216\"/>\n         <source>Client version</source>\n         <translation>Client version</translation>\n     </message>\n@@ -1890,12 +1927,12 @@\n         <translation>Startup time</translation>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+170\"/>\n         <source>Network</source>\n         <translation>Network</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-147\"/>\n         <source>Name</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1915,12 +1952,27 @@\n         <translation>Current number of blocks</translation>\n     </message>\n     <message>\n-        <location line=\"+72\"/>\n+        <location line=\"+52\"/>\n+        <source>Memory Pool</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Current number of transactions</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>Memory usage</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n         <source>Open the Bitcoin Core debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+231\"/>\n+        <location line=\"+233\"/>\n         <location line=\"+552\"/>\n         <source>Received</source>\n         <translation type=\"unfinished\"></translation>\n@@ -1943,8 +1995,8 @@\n     </message>\n     <message>\n         <location line=\"+57\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+281\"/>\n-        <location line=\"+566\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+287\"/>\n+        <location line=\"+578\"/>\n         <source>Select a peer to view detailed information.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1979,8 +2031,8 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-913\"/>\n-        <location line=\"+821\"/>\n+        <location line=\"-973\"/>\n+        <location line=\"+881\"/>\n         <source>User Agent</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2030,17 +2082,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-904\"/>\n+        <location line=\"-977\"/>\n         <source>Last block time</source>\n         <translation>Last block time</translation>\n     </message>\n     <message>\n-        <location line=\"+52\"/>\n+        <location line=\"+123\"/>\n         <source>&amp;Open</source>\n         <translation>&amp;Open</translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+26\"/>\n         <source>&amp;Console</source>\n         <translation>&amp;Console</translation>\n     </message>\n@@ -2060,7 +2112,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../rpcconsole.cpp\" line=\"-333\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"-343\"/>\n         <source>In:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2070,17 +2122,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/debugwindow.ui\" line=\"-357\"/>\n+        <location filename=\"../forms/debugwindow.ui\" line=\"-417\"/>\n         <source>Build date</source>\n         <translation>Build date</translation>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+241\"/>\n         <source>Debug log file</source>\n         <translation>Debug log file</translation>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+85\"/>\n         <source>Clear console</source>\n         <translation>Clear console</translation>\n     </message>\n@@ -2138,7 +2190,7 @@\n         <translation>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</translation>\n     </message>\n     <message>\n-        <location line=\"+134\"/>\n+        <location line=\"+144\"/>\n         <source>%1 B</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2706,20 +2758,20 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+88\"/>\n+        <location line=\"+91\"/>\n         <source>Pay only the required fee of %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+22\"/>\n+        <location line=\"+23\"/>\n         <source>Estimated to begin confirmation within %n block(s).</source>\n         <translation type=\"unfinished\">\n             <numerusform>Estimated to begin confirmation within %n block.</numerusform>\n             <numerusform>Estimated to begin confirmation within %n blocks.</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location line=\"-136\"/>\n+        <location line=\"-140\"/>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2729,7 +2781,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+231\"/>\n+        <location line=\"+234\"/>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2744,7 +2796,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-692\"/>\n+        <location line=\"-695\"/>\n         <source>Copy dust</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2871,7 +2923,7 @@\n <context>\n     <name>ShutdownWindow</name>\n     <message>\n-        <location filename=\"../utilitydialog.cpp\" line=\"+81\"/>\n+        <location filename=\"../utilitydialog.cpp\" line=\"+78\"/>\n         <source>Bitcoin Core is shutting down...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3703,32 +3755,32 @@\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+260\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+267\"/>\n         <source>Options:</source>\n         <translation>Options:</translation>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+27\"/>\n         <source>Specify data directory</source>\n         <translation>Specify data directory</translation>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-84\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Connect to a node to retrieve peer addresses, and disconnect</translation>\n     </message>\n     <message>\n-        <location line=\"+90\"/>\n+        <location line=\"+87\"/>\n         <source>Specify your own public address</source>\n         <translation>Specify your own public address</translation>\n     </message>\n     <message>\n-        <location line=\"-109\"/>\n+        <location line=\"-105\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n     <message>\n-        <location line=\"-113\"/>\n+        <location line=\"-118\"/>\n         <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3763,7 +3815,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+112\"/>\n+        <location line=\"+116\"/>\n         <source>Error: A fatal internal error occurred, see debug.log for details</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3783,17 +3835,17 @@\n         <translation>Run in the background as a daemon and accept commands</translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n+        <location line=\"+29\"/>\n         <source>Unable to start HTTP server. See debug log for details.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-123\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accept connections from outside (default: 1 if no -proxy or -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-160\"/>\n+        <location line=\"-168\"/>\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Bind to given address and always listen on it. Use [host]:port notation for IPv6</translation>\n     </message>\n@@ -3813,12 +3865,12 @@\n         <translation>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</translation>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+60\"/>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+8\"/>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer&apos;s date and time being set incorrectly. Only rebuild the block database if you are sure that your computer&apos;s date and time are correct</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3838,7 +3890,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3869,11 +3921,6 @@\n     </message>\n     <message>\n         <location line=\"+11\"/>\n-        <source>(default: 1)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n         <source>-maxmempool must be at least %d MB</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3888,7 +3935,7 @@\n         <translation>Block creation options:</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Connect only to the specified node(s)</source>\n         <translation>Connect only to the specified node(s)</translation>\n     </message>\n@@ -4008,22 +4055,22 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+13\"/>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+2\"/>\n         <source>Set maximum block size in bytes (default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+10\"/>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Specify wallet file (within data directory)</translation>\n     </message>\n     <message>\n-        <location line=\"+18\"/>\n+        <location line=\"+16\"/>\n         <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4078,7 +4125,7 @@\n         <translation>You need to rebuild the database using -reindex to change -txindex</translation>\n     </message>\n     <message>\n-        <location line=\"-304\"/>\n+        <location line=\"-306\"/>\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4123,7 +4170,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+11\"/>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4158,7 +4205,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+10\"/>\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4168,7 +4215,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+44\"/>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4183,7 +4230,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4213,12 +4260,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation type=\"unfinished\">Choose data directory on startup (default: 0)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+3\"/>\n         <source>Connect through SOCKS5 proxy</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4328,25 +4370,10 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n-        <translation type=\"unfinished\">Set language, for example &quot;de_DE&quot; (default: system locale)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+6\"/>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation type=\"unfinished\">Show splash screen on startup (default: 1)</translation>\n-    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n@@ -4359,11 +4386,6 @@\n     </message>\n     <message>\n         <location line=\"+8\"/>\n-        <source>Start minimized</source>\n-        <translation type=\"unfinished\">Start minimized</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4402,11 +4424,6 @@\n         <source>Transaction too large</source>\n         <translation>Transaction too large</translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>UI Options:</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n@@ -4453,27 +4470,27 @@\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location line=\"-67\"/>\n+        <location line=\"-62\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-198\"/>\n+        <location line=\"-205\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+234\"/>\n+        <location line=\"+237\"/>\n         <source>This help message</source>\n         <translation>This help message</translation>\n     </message>\n     <message>\n-        <location line=\"-108\"/>\n+        <location line=\"-103\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Allow DNS lookups for -addnode, -seednode and -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+60\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>Loading addresses...</translation>\n     </message>\n@@ -4483,7 +4500,7 @@\n         <translation>Error loading wallet.dat: Wallet corrupted</translation>\n     </message>\n     <message>\n-        <location line=\"-207\"/>\n+        <location line=\"-214\"/>\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4509,6 +4526,11 @@\n     </message>\n     <message>\n         <location line=\"+17\"/>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4528,7 +4550,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+32\"/>\n+        <source>Support filtering of blocks and transaction with bloom filters (default: %u)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n         <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4548,17 +4575,22 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"+3\"/>\n+        <source>Username and hashed password for JSON-RPC connections. The field &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A canonical python script is included in share/rpcuser. This option can be specified multiple times</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+29\"/>\n         <source>(default: %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+10\"/>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"+27\"/>\n         <source>Error loading wallet.dat</source>\n         <translation>Error loading wallet.dat</translation>\n     </message>\n@@ -4628,12 +4660,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+2\"/>\n         <source>Set minimum block size in bytes (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4643,7 +4675,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>Specify configuration file (default: %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4663,17 +4695,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+9\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation>Unknown network specified in -onlynet: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"-113\"/>\n+        <location line=\"-107\"/>\n         <source>Cannot resolve -bind address: &apos;%s&apos;</source>\n         <translation>Cannot resolve -bind address: &apos;%s&apos;</translation>\n     </message>\n@@ -4683,7 +4715,7 @@\n         <translation>Cannot resolve -externalip address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+45\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -4698,17 +4730,17 @@\n         <translation>Loading block index...</translation>\n     </message>\n     <message>\n-        <location line=\"-62\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>Add a node to connect to and attempt to keep the connection open</translation>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+62\"/>\n         <source>Loading wallet...</source>\n         <translation>Loading wallet...</translation>\n     </message>\n     <message>\n-        <location line=\"-56\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n@@ -4718,7 +4750,7 @@\n         <translation>Cannot write default address</translation>\n     </message>\n     <message>\n-        <location line=\"+74\"/>\n+        <location line=\"+73\"/>\n         <source>Rescanning...</source>\n         <translation>Rescanning...</translation>\n     </message>"
      },
      {
        "sha": "bf912d295e96f12b357176eb343194a9cd4ac035",
        "filename": "src/qt/locale/bitcoin_en_GB.ts",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_en_GB.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_en_GB.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en_GB.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "ab8dd65f8167357eace54e6977d197b74a188f21",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 99,
        "deletions": 15,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "936074210a53de49bb995fcd3c9ad560cf56a238",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 51,
        "deletions": 31,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "e6d48a29f07f9264c3b8619ff97388275272d683",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 52,
        "deletions": 5,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "0463c0f6e1cdcf4a8bfa4f97abf08f653cba291a",
        "filename": "src/qt/locale/bitcoin_es_DO.ts",
        "status": "modified",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_DO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_DO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_DO.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "bdbfed4ec634fe1817f11e20e1bb5db41f0041bd",
        "filename": "src/qt/locale/bitcoin_es_ES.ts",
        "status": "added",
        "additions": 481,
        "deletions": 0,
        "changes": 481,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_ES.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "fa2b3c0623be3cc7fae9b0ecf9891ad3e855115b",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "modified",
        "additions": 155,
        "deletions": 55,
        "changes": 210,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "32d433d6ec3d6fbe78a6b0e164ff0fdf6643ecea",
        "filename": "src/qt/locale/bitcoin_es_UY.ts",
        "status": "modified",
        "additions": 225,
        "deletions": 1,
        "changes": 226,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_UY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_UY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_UY.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "582e72884607fbeac1953a621feac348d4212369",
        "filename": "src/qt/locale/bitcoin_es_VE.ts",
        "status": "added",
        "additions": 1133,
        "deletions": 0,
        "changes": 1133,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_VE.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_es_VE.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_VE.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "945e4cfa5812ccad6822dccadf11bba415fbf687",
        "filename": "src/qt/locale/bitcoin_et.ts",
        "status": "modified",
        "additions": 57,
        "deletions": 17,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_et.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_et.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "ca6b6489d17c88d7a130b12254d628f73ee2724b",
        "filename": "src/qt/locale/bitcoin_eu_ES.ts",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_eu_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_eu_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eu_ES.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "7ab3b77da3032f253d135e33c0a27a5bd98c0f9b",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 59,
        "deletions": 19,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "8bbfc724243bcd7d83246660e827b88c60f0f1dd",
        "filename": "src/qt/locale/bitcoin_fa_IR.ts",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fa_IR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fa_IR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa_IR.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "57987b26ec21b2fbb62d8bd4ce6f5bcf24cef612",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 263,
        "deletions": 23,
        "changes": 286,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "a0b9feb9adfa0f04d2935cd763ec44eec7871581",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 338,
        "deletions": 30,
        "changes": 368,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "7e6925f96f6839db13bde696a52f30c5ddb03a4e",
        "filename": "src/qt/locale/bitcoin_fr_CA.ts",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fr_CA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fr_CA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_CA.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "df632433539313f158301ca59fd8830c2637f57a",
        "filename": "src/qt/locale/bitcoin_fr_FR.ts",
        "status": "added",
        "additions": 897,
        "deletions": 0,
        "changes": 897,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fr_FR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_fr_FR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_FR.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "96d4adeba9df8727e252db8249693f38f936adad",
        "filename": "src/qt/locale/bitcoin_gl.ts",
        "status": "modified",
        "additions": 35,
        "deletions": 15,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_gl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_gl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gl.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "5de6a6109aaa950e8e8ba021086c732c66084032",
        "filename": "src/qt/locale/bitcoin_gu_IN.ts",
        "status": "removed",
        "additions": 0,
        "deletions": 113,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/locale/bitcoin_gu_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/locale/bitcoin_gu_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gu_IN.ts?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961"
      },
      {
        "sha": "926d20620694ecb3471b855801bce9f679b996bb",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 17,
        "deletions": 25,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "377ff3a3faf102d3b9df20c28353d5523cbf45d1",
        "filename": "src/qt/locale/bitcoin_hi_IN.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_hi_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_hi_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hi_IN.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "413dc2185734498e234018a56e75c6089dc4d5fd",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 33,
        "deletions": 5,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "ab4517ccfabb0560fc25fdbb55300bd05082e683",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 59,
        "deletions": 24,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "1b626fbf239dc892d61795c04e573b7c72e0dcb7",
        "filename": "src/qt/locale/bitcoin_id_ID.ts",
        "status": "modified",
        "additions": 29,
        "deletions": 17,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_id_ID.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_id_ID.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id_ID.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "d510b1063b85467271b4185a990a279265ab9e76",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 332,
        "deletions": 28,
        "changes": 360,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "4344fd043632330f5df5f2896fe86af940414936",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 76,
        "deletions": 28,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "11c73ec76794b8322428d0db852e39c41dca295a",
        "filename": "src/qt/locale/bitcoin_ka.ts",
        "status": "modified",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ka.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ka.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ka.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "cfa19d13f01e1124e8e27579d4b1bef06791e4d5",
        "filename": "src/qt/locale/bitcoin_kk_KZ.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_kk_KZ.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_kk_KZ.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_kk_KZ.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "ce48ce249fffc90b1b3793c54d01c9ccd9943a9f",
        "filename": "src/qt/locale/bitcoin_ko_KR.ts",
        "status": "modified",
        "additions": 118,
        "deletions": 42,
        "changes": 160,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ko_KR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ko_KR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko_KR.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "51efd519c382161bbdaa4c34b7e676b2520134a1",
        "filename": "src/qt/locale/bitcoin_ky.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ky.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ky.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ky.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "e3dcd505feaf9608c20c46de590086d0da8995ed",
        "filename": "src/qt/locale/bitcoin_la.ts",
        "status": "modified",
        "additions": 45,
        "deletions": 13,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_la.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_la.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_la.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "b98976dfeaec260bed920e7caa47eeee5379d56e",
        "filename": "src/qt/locale/bitcoin_lt.ts",
        "status": "modified",
        "additions": 134,
        "deletions": 10,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_lt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_lt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lt.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "e01d4c812c5faeed1b9296469f5177a830b63d1a",
        "filename": "src/qt/locale/bitcoin_lv_LV.ts",
        "status": "modified",
        "additions": 25,
        "deletions": 17,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_lv_LV.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_lv_LV.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lv_LV.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "b7797063b285698fed9a36ea40cf2fa6fa978c42",
        "filename": "src/qt/locale/bitcoin_mk_MK.ts",
        "status": "added",
        "additions": 1039,
        "deletions": 0,
        "changes": 1039,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_mk_MK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_mk_MK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_mk_MK.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "b790010066c29e386cb02069cda8e258f7b39a24",
        "filename": "src/qt/locale/bitcoin_mn.ts",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_mn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_mn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_mn.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "df98dd839646c41c281d183f2ebd271ca388a0b4",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "9236ac86fe12dc2e7df2352811244a9023565f91",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 82,
        "deletions": 30,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "8457a9ab5026573016b7c91a7aa9b0ca4f024614",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 507,
        "deletions": 156,
        "changes": 663,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "233918ff2ba59c1e837eea792c6711471f403e38",
        "filename": "src/qt/locale/bitcoin_pam.ts",
        "status": "modified",
        "additions": 53,
        "deletions": 9,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_pam.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_pam.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pam.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "8a8c377480996d5dbc7598bb99d4eba37a9b251c",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 185,
        "deletions": 29,
        "changes": 214,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "5cea349fbc3f4afc4f5550be2e37c601f0001e28",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 192,
        "deletions": 32,
        "changes": 224,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "ffed44a61c20c514f56f3b47b32c28bc3babb353",
        "filename": "src/qt/locale/bitcoin_pt_PT.ts",
        "status": "modified",
        "additions": 11,
        "deletions": 23,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_pt_PT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_pt_PT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_PT.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "8bccf037a73c7500378f0fc3f5abc89765e4a083",
        "filename": "src/qt/locale/bitcoin_ro_RO.ts",
        "status": "modified",
        "additions": 27,
        "deletions": 23,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ro_RO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ro_RO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro_RO.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "00dfd833abfa2feaa38b1250bc76811d787dd441",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 373,
        "deletions": 29,
        "changes": 402,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "53a1c1d8a40b99051df86065b93900fefc000b1d",
        "filename": "src/qt/locale/bitcoin_ru_RU.ts",
        "status": "added",
        "additions": 245,
        "deletions": 0,
        "changes": 245,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ru_RU.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_ru_RU.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru_RU.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "8af88a87d57f2c5b65f59879d82e39ff36b0492b",
        "filename": "src/qt/locale/bitcoin_sah.ts",
        "status": "removed",
        "additions": 0,
        "deletions": 113,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/locale/bitcoin_sah.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/027fdb83b41ae9e9125cf61f6460c03ab34e5961/src/qt/locale/bitcoin_sah.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sah.ts?ref=027fdb83b41ae9e9125cf61f6460c03ab34e5961"
      },
      {
        "sha": "8c779cbe98665b26c74639282c228aa7ea455247",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 29,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      },
      {
        "sha": "c62c8cf273054f239b57d82cfbf82ca95acf6dd3",
        "filename": "src/qt/locale/bitcoin_sl_SI.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 28,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_sl_SI.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc/src/qt/locale/bitcoin_sl_SI.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl_SI.ts?ref=a68bb9f5e7ef1da5c044907dc3a1d3d4a4dbc2cc"
      }
    ]
  }
]