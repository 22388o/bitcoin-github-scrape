laanwj,2015-01-27T12:05:06Z,"Cool, looks good to me.\nI'll have a try at filing in the TODOs in the RPC test.\n",https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-71637250,71637250,
sipa,2015-01-27T14:08:11Z,"@laanwj That'd be awesome, but I don't see how to easily do that without adding functionality to the RPC framework to build its own blocks. Bitcoin Core won't mine blocks with transactions that violate the rules it wants. I guess there could be a -overridemempoolvalidationflags or something, but that gets really ugly.\n",https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-71652628,71652628,
laanwj,2015-01-27T15:13:28Z,"@sipa Bleh, yes, I just noticed; added python code to fuzz a transaction into non-canonical-DER, but it's impossible to get it into the mempool.\nBuilding blocks from the test framework would be neat, of course.\n",https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-71663623,71663623,
laanwj,2015-01-28T06:07:17Z,tested ACK. Verified that the deployment behavior as mentioned in BIP66 is indeed what is enforced.\n,https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-71785959,71785959,
sipa,2015-02-01T22:02:41Z,Addressed comments and rebased.\n,https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-72386929,72386929,
luke-jr,2015-02-01T23:34:03Z,"utACK: read over non-test commits (80ad135a5e54e8a065fee5ef36e57034679111ab and 5a47811da5158df763aa2fca09ce646ee0c51e7b), looks reasonable (I did not compare to DER spec).\n",https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-72391463,72391463,
sdaftuar,2015-02-02T21:23:23Z,"I was able to test deployment behavior, submitting regtest blocks with a couple kinds of non-DER signatures over the p2p network to a node running the new code -- worked as expected.\n",https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-72540648,72540648,
fanatid,2016-03-17T05:38:37Z,Why BIP66 not checked that `r` or `s` <s>less</s> more than 33 bytes?\nrelated: https://github.com/bitcoinjs/bip66/pull/2\n\nInvalid DER signature for secp256k1 (but still valid by BIP66):\n\n```\n3044021458a2f39bd87f0000000506030000000000050603022c402dde9afe7f0000010000000100000004000000040000000000000000000000000000000a00000000000000\n```\n,https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-197715788,197715788,
vietlq,2018-07-14T08:13:36Z,"@fanatid the example you posted should be invalidated as an invalid signature even before coming to BIP66 validation code. Layered filters I'd say, so no worries.",https://github.com/bitcoin/bitcoin/pull/5713#issuecomment-405007802,405007802,
laanwj,2015-01-27T19:11:07Z,s/AssertionFailure/AssertionError/\n,https://github.com/bitcoin/bitcoin/pull/5713#discussion_r23633409,23633409,qa/rpc-tests/bipdersig.py
