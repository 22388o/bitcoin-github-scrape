[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372679934",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#issuecomment-372679934",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12658",
    "id": 372679934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjY3OTkzNA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T14:15:45Z",
    "updated_at": "2018-03-13T14:15:45Z",
    "author_association": "MEMBER",
    "body": "utACK 42343c7 LGTM.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372679934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372754061",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#issuecomment-372754061",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12658",
    "id": 372754061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc1NDA2MQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T17:39:49Z",
    "updated_at": "2018-03-13T17:39:49Z",
    "author_association": "MEMBER",
    "body": "utACK 42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372754061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173625950",
    "pull_request_review_id": 102854682,
    "id": 173625950,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzYyNTk1MA==",
    "diff_hunk": "@@ -390,42 +390,36 @@ class CWalletTx : public CMerkleTx\n         nOrderPos = -1;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        if (ser_action.ForRead())\n-            Init(nullptr);\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n         char fSpent = false;\n+        mapValue_t mapValueCopy = mapValue;\n \n-        if (!ser_action.ForRead())\n-        {\n-            mapValue[\"fromaccount\"] = strFromAccount;\n-\n-            WriteOrderPos(nOrderPos, mapValue);\n-\n-            if (nTimeSmart)\n-                mapValue[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n+        mapValueCopy[\"fromaccount\"] = strFromAccount;\n+        WriteOrderPos(nOrderPos, mapValueCopy);\n+        if (nTimeSmart) {\n+            mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        READWRITE(*static_cast<CMerkleTx*>(this));\n+        s << *static_cast<const CMerkleTx*>(this);\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        READWRITE(vUnused);\n-        READWRITE(mapValue);\n-        READWRITE(vOrderForm);\n-        READWRITE(fTimeReceivedIsTxTime);\n-        READWRITE(nTimeReceived);\n-        READWRITE(fFromMe);\n-        READWRITE(fSpent);\n-\n-        if (ser_action.ForRead())\n-        {\n-            strFromAccount = mapValue[\"fromaccount\"];\n+        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+    }\n \n-            ReadOrderPos(nOrderPos, mapValue);\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        Init(nullptr);\n+        char fSpent;\n \n-            nTimeSmart = mapValue.count(\"timesmart\") ? (unsigned int)atoi64(mapValue[\"timesmart\"]) : 0;\n-        }\n+        s >> *static_cast<CMerkleTx*>(this);\n+        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n+        s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n+\n+        strFromAccount = std::move(mapValue[\"fromaccount\"]);",
    "path": "src/wallet/wallet.h",
    "position": 60,
    "original_position": 60,
    "commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "original_commit_id": "6ed3ab8c90dd3c7a387e675d69fd48efe4161da0",
    "user": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Instead of move here and erase a few lines below, you can do the search one and localize the logic:\r\n\r\n```c++\r\nauto it = mapValue.find(\"fromaccount\");\r\nassert(it != mapValue.end());  // optional, if you feel like it\r\nstrFromAccount = std::move(it->second);\r\nmapValue.erase(it);\r\n```\r\n\r\nOne day in the glorious future when we're all using C++17 you can use `.extract()`.",
    "created_at": "2018-03-10T15:57:18Z",
    "updated_at": "2018-03-11T17:57:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r173625950",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173625950"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r173625950"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173625950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 420,
    "original_line": 420,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173626124",
    "pull_request_review_id": 102854682,
    "id": 173626124,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzYyNjEyNA==",
    "diff_hunk": "@@ -608,48 +602,49 @@ class CAccountingEntry\n         nEntryNo = 0;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n         int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH))\n-            READWRITE(nVersion);\n+        if (!(s.GetType() & SER_GETHASH)) {\n+            s << nVersion;\n+        }\n         //! Note: strAccount is serialized as part of the key, not here.\n-        READWRITE(nCreditDebit);\n-        READWRITE(nTime);\n-        READWRITE(LIMITED_STRING(strOtherAccount, 65536));\n-\n-        if (!ser_action.ForRead())\n-        {\n-            WriteOrderPos(nOrderPos, mapValue);\n-\n-            if (!(mapValue.empty() && _ssExtra.empty()))\n-            {\n-                CDataStream ss(s.GetType(), s.GetVersion());\n-                ss.insert(ss.begin(), '\\0');\n-                ss << mapValue;\n-                ss.insert(ss.end(), _ssExtra.begin(), _ssExtra.end());\n-                strComment.append(ss.str());\n-            }\n+        s << nCreditDebit << nTime << strOtherAccount;\n+\n+        mapValue_t mapValueCopy = mapValue;\n+        WriteOrderPos(nOrderPos, mapValueCopy);\n+\n+        std::string strCommentCopy = strComment;\n+        if (!(mapValueCopy.empty() && _ssExtra.empty())) {",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 105,
    "commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "original_commit_id": "6ed3ab8c90dd3c7a387e675d69fd48efe4161da0",
    "user": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: consider making this:\r\n\r\n```c++\r\nif (!mapValueCopy.empty() || !_ssExtra.empty()) {\r\n```",
    "created_at": "2018-03-10T16:03:09Z",
    "updated_at": "2018-03-11T17:57:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r173626124",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173626124"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r173626124"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173626124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 618,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173663175",
    "pull_request_review_id": 102890201,
    "id": 173663175,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzY2MzE3NQ==",
    "diff_hunk": "@@ -390,42 +390,36 @@ class CWalletTx : public CMerkleTx\n         nOrderPos = -1;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        if (ser_action.ForRead())\n-            Init(nullptr);\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n         char fSpent = false;\n+        mapValue_t mapValueCopy = mapValue;\n \n-        if (!ser_action.ForRead())\n-        {\n-            mapValue[\"fromaccount\"] = strFromAccount;\n-\n-            WriteOrderPos(nOrderPos, mapValue);\n-\n-            if (nTimeSmart)\n-                mapValue[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n+        mapValueCopy[\"fromaccount\"] = strFromAccount;\n+        WriteOrderPos(nOrderPos, mapValueCopy);\n+        if (nTimeSmart) {\n+            mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        READWRITE(*static_cast<CMerkleTx*>(this));\n+        s << *static_cast<const CMerkleTx*>(this);\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        READWRITE(vUnused);\n-        READWRITE(mapValue);\n-        READWRITE(vOrderForm);\n-        READWRITE(fTimeReceivedIsTxTime);\n-        READWRITE(nTimeReceived);\n-        READWRITE(fFromMe);\n-        READWRITE(fSpent);\n-\n-        if (ser_action.ForRead())\n-        {\n-            strFromAccount = mapValue[\"fromaccount\"];\n+        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+    }\n \n-            ReadOrderPos(nOrderPos, mapValue);\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        Init(nullptr);\n+        char fSpent;\n \n-            nTimeSmart = mapValue.count(\"timesmart\") ? (unsigned int)atoi64(mapValue[\"timesmart\"]) : 0;\n-        }\n+        s >> *static_cast<CMerkleTx*>(this);\n+        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n+        s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n+\n+        strFromAccount = std::move(mapValue[\"fromaccount\"]);",
    "path": "src/wallet/wallet.h",
    "position": 60,
    "original_position": 60,
    "commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "original_commit_id": "6ed3ab8c90dd3c7a387e675d69fd48efe4161da0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As this code isn't particularly performance critical, I prefer the current shorter code.",
    "created_at": "2018-03-11T17:50:44Z",
    "updated_at": "2018-03-11T17:57:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r173663175",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173663175"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r173663175"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173663175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 420,
    "original_line": 420,
    "side": "RIGHT",
    "in_reply_to_id": 173625950
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173663363",
    "pull_request_review_id": 102890377,
    "id": 173663363,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzY2MzM2Mw==",
    "diff_hunk": "@@ -608,48 +602,49 @@ class CAccountingEntry\n         nEntryNo = 0;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n+    template <typename Stream>\n+    inline void Serialize(Stream& s) const {\n         int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH))\n-            READWRITE(nVersion);\n+        if (!(s.GetType() & SER_GETHASH)) {\n+            s << nVersion;\n+        }\n         //! Note: strAccount is serialized as part of the key, not here.\n-        READWRITE(nCreditDebit);\n-        READWRITE(nTime);\n-        READWRITE(LIMITED_STRING(strOtherAccount, 65536));\n-\n-        if (!ser_action.ForRead())\n-        {\n-            WriteOrderPos(nOrderPos, mapValue);\n-\n-            if (!(mapValue.empty() && _ssExtra.empty()))\n-            {\n-                CDataStream ss(s.GetType(), s.GetVersion());\n-                ss.insert(ss.begin(), '\\0');\n-                ss << mapValue;\n-                ss.insert(ss.end(), _ssExtra.begin(), _ssExtra.end());\n-                strComment.append(ss.str());\n-            }\n+        s << nCreditDebit << nTime << strOtherAccount;\n+\n+        mapValue_t mapValueCopy = mapValue;\n+        WriteOrderPos(nOrderPos, mapValueCopy);\n+\n+        std::string strCommentCopy = strComment;\n+        if (!(mapValueCopy.empty() && _ssExtra.empty())) {",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 105,
    "commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "original_commit_id": "6ed3ab8c90dd3c7a387e675d69fd48efe4161da0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2018-03-11T17:57:46Z",
    "updated_at": "2018-03-11T17:57:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r173663363",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173663363"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r173663363"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173663363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 618,
    "side": "RIGHT",
    "in_reply_to_id": 173626124
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174024048",
    "pull_request_review_id": 103305832,
    "id": 174024048,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDAyNDA0OA==",
    "diff_hunk": "@@ -390,42 +390,36 @@ class CWalletTx : public CMerkleTx\n         nOrderPos = -1;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        if (ser_action.ForRead())\n-            Init(nullptr);\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n         char fSpent = false;\n+        mapValue_t mapValueCopy = mapValue;\n \n-        if (!ser_action.ForRead())\n-        {\n-            mapValue[\"fromaccount\"] = strFromAccount;\n-\n-            WriteOrderPos(nOrderPos, mapValue);\n-\n-            if (nTimeSmart)\n-                mapValue[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n+        mapValueCopy[\"fromaccount\"] = strFromAccount;\n+        WriteOrderPos(nOrderPos, mapValueCopy);\n+        if (nTimeSmart) {\n+            mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        READWRITE(*static_cast<CMerkleTx*>(this));\n+        s << *static_cast<const CMerkleTx*>(this);\n         std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        READWRITE(vUnused);\n-        READWRITE(mapValue);\n-        READWRITE(vOrderForm);\n-        READWRITE(fTimeReceivedIsTxTime);\n-        READWRITE(nTimeReceived);\n-        READWRITE(fFromMe);\n-        READWRITE(fSpent);\n-\n-        if (ser_action.ForRead())\n-        {\n-            strFromAccount = mapValue[\"fromaccount\"];\n+        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+    }\n \n-            ReadOrderPos(nOrderPos, mapValue);\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        Init(nullptr);\n+        char fSpent;\n \n-            nTimeSmart = mapValue.count(\"timesmart\") ? (unsigned int)atoi64(mapValue[\"timesmart\"]) : 0;\n-        }\n+        s >> *static_cast<CMerkleTx*>(this);\n+        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n+        s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n+\n+        strFromAccount = std::move(mapValue[\"fromaccount\"]);",
    "path": "src/wallet/wallet.h",
    "position": 60,
    "original_position": 60,
    "commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "original_commit_id": "6ed3ab8c90dd3c7a387e675d69fd48efe4161da0",
    "user": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Makes sense.",
    "created_at": "2018-03-13T06:06:13Z",
    "updated_at": "2018-03-13T06:06:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r174024048",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174024048"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r174024048"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174024048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 420,
    "original_line": 420,
    "side": "RIGHT",
    "in_reply_to_id": 173625950
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174160432",
    "pull_request_review_id": 103464776,
    "id": 174160432,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE2MDQzMg==",
    "diff_hunk": "@@ -608,48 +602,49 @@ class CAccountingEntry\n         nEntryNo = 0;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n         int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH))\n-            READWRITE(nVersion);\n+        if (!(s.GetType() & SER_GETHASH)) {\n+            s << nVersion;\n+        }\n         //! Note: strAccount is serialized as part of the key, not here.\n-        READWRITE(nCreditDebit);\n-        READWRITE(nTime);\n-        READWRITE(LIMITED_STRING(strOtherAccount, 65536));",
    "path": "src/wallet/wallet.h",
    "position": 85,
    "original_position": 85,
    "commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "original_commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not being changed by this PR, but seems bad to me that length is not checked on serialization (only on deserialization).",
    "created_at": "2018-03-13T14:52:01Z",
    "updated_at": "2018-03-13T15:06:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r174160432",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174160432"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r174160432"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174160432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 621,
    "original_line": 621,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174222081",
    "pull_request_review_id": 103538634,
    "id": 174222081,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDIyMjA4MQ==",
    "diff_hunk": "@@ -608,48 +602,49 @@ class CAccountingEntry\n         nEntryNo = 0;\n     }\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n         int nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH))\n-            READWRITE(nVersion);\n+        if (!(s.GetType() & SER_GETHASH)) {\n+            s << nVersion;\n+        }\n         //! Note: strAccount is serialized as part of the key, not here.\n-        READWRITE(nCreditDebit);\n-        READWRITE(nTime);\n-        READWRITE(LIMITED_STRING(strOtherAccount, 65536));",
    "path": "src/wallet/wallet.h",
    "position": 85,
    "original_position": 85,
    "commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "original_commit_id": "42343c748c2bca8ba9b888d949088dbfd1f142b4",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Although you could add a sanity check, serialization is probably too late to check it. Ideally anything inputting account/label names should check this to be able to give an useful error and reject setting it before putting it in a data structure.\r\nBut yes, out of scope here.",
    "created_at": "2018-03-13T17:38:39Z",
    "updated_at": "2018-03-13T17:38:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r174222081",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174222081"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/12658#discussion_r174222081"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12658"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174222081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 621,
    "original_line": 621,
    "side": "LEFT",
    "in_reply_to_id": 174160432
  }
]