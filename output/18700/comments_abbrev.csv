DrahtBot,2020-04-20 04:43:16,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 6ae99aab5d97b06d46ff940111b290f1eeb90045<br>(master) | commit 1a36387be3c7417f879aaeebcf2c5e95065b1b3f<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.20.99-aarch64-linux-gnu-debug.tar.gz | [`9e74baea5087f75d...`](https://drahtbot.space/gitian/bitcoin/bitcoin/6ae99aab5d97b06d46ff940111b290f1eeb90045/bitcoin-0.20.99-,https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-616305037,616305037,
laanwj,2020-04-22 11:07:20,"If this is a bug in WSL, why not wait for them to fix it instead? I don't think it's desirable to change our handling of locks on all UNIX platforms just for a bug in their implementation. If we need is, please add it for WSL only and add a comment that it can be removed again when the upstream bug is fixed (with a link to the upstream bug).",https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-617710415,617710415,
laanwj,2020-04-22 11:15:53,Can you please test that this fixes your issue @mtrycz. ,https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-617714265,617714265,
meshcollider,2020-04-22 12:24:14,"@laanwj the bug was reported upstream in 2017 with no fix in sight, so it seems it is up to us",https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-617746951,617746951,
mtrycz,2020-04-22 13:27:23,"I've ran my test plan (from the related issue), and I can confirm that the test fails in the latest master `9e8e813d` and the `v0.19.1` tag, and that it passes in this Pull Request. \n\nHowever, I'm running more extended tests and some are failing. Please allow some time to make an adequate description. ",https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-617778636,617778636,
wumpus,2020-04-22 15:30:44,Github @wumpus is not bitcoin wumpus.,https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-617851293,617851293,
mtrycz,2020-04-23 07:30:28,"I have ran `test/functional/test_runner.py` several times both on master and this PR. \n\nThe specific issue is solved for WSL on this PR's code. \n\nThere are also several test failures (on both branches) that are reproducible, and some that are non-deterministic. If this sounds new, should I open a new issue with this?",https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-618231681,618231681,
luke-jr,2020-04-24 21:13:04,Is there any reason we can't check/take both locks?,https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-619241016,619241016,
meshcollider,2020-04-26 00:17:28,"Thanks @sipa, updated :)",https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-619458611,619458611,
laanwj,2020-05-11 12:13:47,"I'm removing this from the 0.20.0 milestone. It's not a regression in 0.20, it's an upstream bug in ""Linux emulation"", ~~and I think this fix is not quite ready yet.~~",https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-626664146,626664146,
laanwj,2020-05-28 15:18:56,Code review ACK e8fa0a3d2025509fcddc59fc618e91371542cf87,https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-635415581,635415581,
MarcoFalke,2020-05-28 16:17:04,"Tagged with "" Needs backport (0.20) """,https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-635448989,635448989,
cculianu,2020-06-18 11:10:20,"Note that this patch only answers the question `IsWSL?` for WSL ver 1.  Ver 2 returns a totally different `uts_name.version` string as such:\n\n**WSL2 uts_name.version string:** `#1 SMP Wed Feb 19 06:37:35 UTC 2020`\n\n```bash\n$ uname -a\nLinux DESKTOP-TPEL8HN 4.19.104-microsoft-standard #1 SMP Wed Feb 19 06:37:35 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\n```\n\nI am running on Win10 WSL2",https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-645948774,645948774,
cculianu,2020-06-18 11:38:32,"Follow-up: Can confirm that the upstream bug from microsoft on `fcntl` `F_SETLK` is fixed on WSL2.  The linux/unix execution path that is taken on WSL2 (because `IsWSL()` returns false here) leads to correct behavior and the lock succeeds.\n\nSuggest: Rename this function to `IsWSL1` to make it clearer when it will return true and/or add a comment to that effect...\n\n",https://github.com/bitcoin/bitcoin/pull/18700#issuecomment-645960946,645960946,
sipa,2020-04-23 02:59:12,"This condition should probably be cached in a static bool local variable.\n\nEDIT: and only conditionally compiled for WIN32?",https://github.com/bitcoin/bitcoin/pull/18700#discussion_r413472685,413472685,src/fs.cpp
meshcollider,2020-04-23 04:45:09,"@sipa it isn't ""win32"" because its the linux subsystem, so it runs in the non-windows branch",https://github.com/bitcoin/bitcoin/pull/18700#discussion_r413504945,413504945,src/fs.cpp
sipa,2020-04-23 07:27:39,Ugh.,https://github.com/bitcoin/bitcoin/pull/18700#discussion_r413576262,413576262,src/fs.cpp
sipa,2020-04-23 08:40:34,"Still, please cache the result.",https://github.com/bitcoin/bitcoin/pull/18700#discussion_r413626312,413626312,src/fs.cpp
sipa,2020-04-24 01:20:47,"It's a crazy edge case, and unlikely on realistic platforms, but this is technically UB if two threads simultaneously reach the `if (!is_wsl_cache_exists)` check. The most C++ish solution is this I think: https://github.com/sipa/bitcoin/commit/9470c59e7290774972f94250d04caae161bc7678.",https://github.com/bitcoin/bitcoin/pull/18700#discussion_r414227386,414227386,src/fs.cpp
laanwj,2020-05-28 15:57:54,I just realized after merging that we could shortcut this check to `false` on non-x86 platforms. But it doesn't matter too much.,https://github.com/bitcoin/bitcoin/pull/18700#discussion_r431947195,431947195,src/fs.cpp
