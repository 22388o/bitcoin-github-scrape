[
  {
    "sha": "af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjNmMmRiZDNmOTMyMGNlMzdmMTM5MjcyNDNjNWJjZDRkYzY5ZGM4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-21T22:15:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-21T22:15:50Z"
      },
      "message": "[trivial] fix white space in rpc help messages",
      "tree": {
        "sha": "2162334bb9d18d865f6274dc8c4bc04352ed2e50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2162334bb9d18d865f6274dc8c4bc04352ed2e50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c6de5cc88614f587ae2d0e360536412407e02836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6de5cc88614f587ae2d0e360536412407e02836",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6de5cc88614f587ae2d0e360536412407e02836"
      }
    ],
    "stats": {
      "total": 236,
      "additions": 118,
      "deletions": 118
    },
    "files": [
      {
        "sha": "5c3dd0400fa04be0e3b96745fc79cfba2e2a80f2",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
        "patch": "@@ -303,18 +303,18 @@ UniValue getblockheader(const UniValue& params, bool fHelp)\n             \"\\nIf verbose is false, returns a string that is serialized, hex-encoded data for blockheader 'hash'.\\n\"\n             \"If verbose is true, returns an Object with information about blockheader <hash>.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"hash\\\"          (string, required) The block hash\\n\"\n+            \"1. \\\"hash\\\"            (string, required) The block hash\\n\"\n             \"2. verbose           (boolean, optional, default=true) true for a json object, false for the hex encoded data\\n\"\n             \"\\nResult (for verbose = true):\\n\"\n             \"{\\n\"\n-            \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n+            \"  \\\"hash\\\" : \\\"hash\\\",       (string) the block hash (same as provided)\\n\"\n             \"  \\\"confirmations\\\" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain\\n\"\n             \"  \\\"height\\\" : n,          (numeric) The block height or index\\n\"\n             \"  \\\"version\\\" : n,         (numeric) The block version\\n\"\n             \"  \\\"merkleroot\\\" : \\\"xxxx\\\", (string) The merkle root\\n\"\n             \"  \\\"time\\\" : ttt,          (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n             \"  \\\"nonce\\\" : n,           (numeric) The nonce\\n\"\n-            \"  \\\"bits\\\" : \\\"1d00ffff\\\", (string) The bits\\n\"\n+            \"  \\\"bits\\\" : \\\"1d00ffff\\\",   (string) The bits\\n\"\n             \"  \\\"difficulty\\\" : x.xxx,  (numeric) The difficulty\\n\"\n             \"  \\\"previousblockhash\\\" : \\\"hash\\\",  (string) The hash of the previous block\\n\"\n             \"  \\\"nextblockhash\\\" : \\\"hash\\\"       (string) The hash of the next block\\n\"\n@@ -363,7 +363,7 @@ UniValue getblock(const UniValue& params, bool fHelp)\n             \"2. verbose           (boolean, optional, default=true) true for a json object, false for the hex encoded data\\n\"\n             \"\\nResult (for verbose = true):\\n\"\n             \"{\\n\"\n-            \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n+            \"  \\\"hash\\\" : \\\"hash\\\",       (string) the block hash (same as provided)\\n\"\n             \"  \\\"confirmations\\\" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain\\n\"\n             \"  \\\"size\\\" : n,            (numeric) The block size\\n\"\n             \"  \\\"height\\\" : n,          (numeric) The block height or index\\n\"\n@@ -428,13 +428,13 @@ UniValue gettxoutsetinfo(const UniValue& params, bool fHelp)\n             \"Note this call may take some time.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"height\\\":n,     (numeric) The current block height (index)\\n\"\n-            \"  \\\"bestblock\\\": \\\"hex\\\",   (string) the best block hash hex\\n\"\n+            \"  \\\"height\\\":n,             (numeric) The current block height (index)\\n\"\n+            \"  \\\"bestblock\\\": \\\"hex\\\",     (string) the best block hash hex\\n\"\n             \"  \\\"transactions\\\": n,      (numeric) The number of transactions\\n\"\n             \"  \\\"txouts\\\": n,            (numeric) The number of output transactions\\n\"\n             \"  \\\"bytes_serialized\\\": n,  (numeric) The serialized size\\n\"\n             \"  \\\"hash_serialized\\\": \\\"hash\\\",   (string) The serialized hash\\n\"\n-            \"  \\\"total_amount\\\": x.xxx          (numeric) The total amount\\n\"\n+            \"  \\\"total_amount\\\": x.xxx        (numeric) The total amount\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"gettxoutsetinfo\", \"\")\n@@ -469,14 +469,14 @@ UniValue gettxout(const UniValue& params, bool fHelp)\n             \"3. includemempool  (boolean, optional) Whether to included the mem pool\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"bestblock\\\" : \\\"hash\\\",    (string) the block hash\\n\"\n+            \"  \\\"bestblock\\\" : \\\"hash\\\",      (string) the block hash\\n\"\n             \"  \\\"confirmations\\\" : n,       (numeric) The number of confirmations\\n\"\n             \"  \\\"value\\\" : x.xxx,           (numeric) The transaction value in \" + CURRENCY_UNIT + \"\\n\"\n             \"  \\\"scriptPubKey\\\" : {         (json object)\\n\"\n-            \"     \\\"asm\\\" : \\\"code\\\",       (string) \\n\"\n-            \"     \\\"hex\\\" : \\\"hex\\\",        (string) \\n\"\n+            \"     \\\"asm\\\" : \\\"code\\\",         (string) \\n\"\n+            \"     \\\"hex\\\" : \\\"hex\\\",          (string) \\n\"\n             \"     \\\"reqSigs\\\" : n,          (numeric) Number of required signatures\\n\"\n-            \"     \\\"type\\\" : \\\"pubkeyhash\\\", (string) The type, eg pubkeyhash\\n\"\n+            \"     \\\"type\\\" : \\\"pubkeyhash\\\",   (string) The type, eg pubkeyhash\\n\"\n             \"     \\\"addresses\\\" : [          (array of string) array of bitcoin addresses\\n\"\n             \"        \\\"bitcoinaddress\\\"     (string) bitcoin address\\n\"\n             \"        ,...\\n\"\n@@ -603,18 +603,18 @@ UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n             \"Returns an object containing various state info regarding block chain processing.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"chain\\\": \\\"xxxx\\\",        (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n+            \"  \\\"chain\\\": \\\"xxxx\\\",          (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n             \"  \\\"blocks\\\": xxxxxx,         (numeric) the current number of blocks processed in the server\\n\"\n             \"  \\\"headers\\\": xxxxxx,        (numeric) the current number of headers we have validated\\n\"\n-            \"  \\\"bestblockhash\\\": \\\"...\\\", (string) the hash of the currently best block\\n\"\n+            \"  \\\"bestblockhash\\\": \\\"...\\\",   (string) the hash of the currently best block\\n\"\n             \"  \\\"difficulty\\\": xxxxxx,     (numeric) the current difficulty\\n\"\n             \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n-            \"  \\\"chainwork\\\": \\\"xxxx\\\"     (string) total amount of work in active chain, in hexadecimal\\n\"\n+            \"  \\\"chainwork\\\": \\\"xxxx\\\"       (string) total amount of work in active chain, in hexadecimal\\n\"\n             \"  \\\"pruned\\\": xx,             (boolean) if the blocks are subject to pruning\\n\"\n             \"  \\\"pruneheight\\\": xxxxxx,    (numeric) heighest block available\\n\"\n             \"  \\\"softforks\\\": [            (array) status of softforks in progress\\n\"\n             \"     {\\n\"\n-            \"        \\\"id\\\": \\\"xxxx\\\",        (string) name of softfork\\n\"\n+            \"        \\\"id\\\": \\\"xxxx\\\",          (string) name of softfork\\n\"\n             \"        \\\"version\\\": xx,         (numeric) block version\\n\"\n             \"        \\\"enforce\\\": {           (object) progress toward enforcing the softfork rules for new-version blocks\\n\"\n             \"           \\\"status\\\": xx,       (boolean) true if threshold reached\\n\""
      },
      {
        "sha": "653c8106c088dd0f0c49a1d43257077639817961",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
        "patch": "@@ -238,12 +238,12 @@ UniValue getmininginfo(const UniValue& params, bool fHelp)\n             \"  \\\"currentblocksize\\\": nnn,   (numeric) The last block size\\n\"\n             \"  \\\"currentblocktx\\\": nnn,     (numeric) The last block transaction\\n\"\n             \"  \\\"difficulty\\\": xxx.xxxxx    (numeric) The current difficulty\\n\"\n-            \"  \\\"errors\\\": \\\"...\\\"          (string) Current errors\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"            (string) Current errors\\n\"\n             \"  \\\"generate\\\": true|false     (boolean) If the generation is on or off (see getgenerate or setgenerate calls)\\n\"\n             \"  \\\"genproclimit\\\": n          (numeric) The processor limit for generation. -1 if no generation. (see getgenerate or setgenerate calls)\\n\"\n             \"  \\\"pooledtx\\\": n              (numeric) The size of the mem pool\\n\"\n             \"  \\\"testnet\\\": true|false      (boolean) If using testnet or not\\n\"\n-            \"  \\\"chain\\\": \\\"xxxx\\\",         (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n+            \"  \\\"chain\\\": \\\"xxxx\\\",           (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getmininginfo\", \"\")\n@@ -277,7 +277,7 @@ UniValue prioritisetransaction(const UniValue& params, bool fHelp)\n             \"prioritisetransaction <txid> <priority delta> <fee delta>\\n\"\n             \"Accepts the transaction into mined blocks at a higher (or lower) priority\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"txid\\\"       (string, required) The transaction id.\\n\"\n+            \"1. \\\"txid\\\"         (string, required) The transaction id.\\n\"\n             \"2. priority delta (numeric, required) The priority to add or subtract.\\n\"\n             \"                  The transaction selection algorithm considers the tx as it would have a higher priority.\\n\"\n             \"                  (priority of a transaction is calculated: coinage * value_in_satoshis / txsize) \\n\"\n@@ -330,9 +330,9 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n             \"See https://en.bitcoin.it/wiki/BIP_0022 for full specification.\\n\"\n \n             \"\\nArguments:\\n\"\n-            \"1. \\\"jsonrequestobject\\\"       (string, optional) A json object in the following spec\\n\"\n+            \"1. \\\"jsonrequestobject\\\"      (string, optional) A json object in the following spec\\n\"\n             \"     {\\n\"\n-            \"       \\\"mode\\\":\\\"template\\\"    (string, optional) This must be set to \\\"template\\\" or omitted\\n\"\n+            \"       \\\"mode\\\":\\\"template\\\"  (string, optional) This must be set to \\\"template\\\" or omitted\\n\"\n             \"       \\\"capabilities\\\":[       (array, optional) A list of strings\\n\"\n             \"           \\\"support\\\"           (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'\\n\"\n             \"           ,...\\n\"\n@@ -343,38 +343,38 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"version\\\" : n,                    (numeric) The block version\\n\"\n-            \"  \\\"previousblockhash\\\" : \\\"xxxx\\\",    (string) The hash of current highest block\\n\"\n+            \"  \\\"previousblockhash\\\" : \\\"xxxx\\\",     (string) The hash of current highest block\\n\"\n             \"  \\\"transactions\\\" : [                (array) contents of non-coinbase transactions that should be included in the next block\\n\"\n             \"      {\\n\"\n-            \"         \\\"data\\\" : \\\"xxxx\\\",          (string) transaction data encoded in hexadecimal (byte-for-byte)\\n\"\n-            \"         \\\"hash\\\" : \\\"xxxx\\\",          (string) hash/id encoded in little-endian hexadecimal\\n\"\n+            \"         \\\"data\\\" : \\\"xxxx\\\",            (string) transaction data encoded in hexadecimal (byte-for-byte)\\n\"\n+            \"         \\\"hash\\\" : \\\"xxxx\\\",            (string) hash/id encoded in little-endian hexadecimal\\n\"\n             \"         \\\"depends\\\" : [              (array) array of numbers \\n\"\n-            \"             n                        (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\\n\"\n+            \"             n                      (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\\n\"\n             \"             ,...\\n\"\n             \"         ],\\n\"\n-            \"         \\\"fee\\\": n,                   (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\\n\"\n-            \"         \\\"sigops\\\" : n,               (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\\n\"\n+            \"         \\\"fee\\\": n,                 (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\\n\"\n+            \"         \\\"sigops\\\" : n,             (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\\n\"\n             \"         \\\"required\\\" : true|false     (boolean) if provided and true, this transaction must be in the final block\\n\"\n             \"      }\\n\"\n             \"      ,...\\n\"\n             \"  ],\\n\"\n             \"  \\\"coinbaseaux\\\" : {                  (json object) data that should be included in the coinbase's scriptSig content\\n\"\n-            \"      \\\"flags\\\" : \\\"flags\\\"            (string) \\n\"\n+            \"      \\\"flags\\\" : \\\"flags\\\"              (string) \\n\"\n             \"  },\\n\"\n             \"  \\\"coinbasevalue\\\" : n,               (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in Satoshis)\\n\"\n             \"  \\\"coinbasetxn\\\" : { ... },           (json object) information for coinbase transaction\\n\"\n-            \"  \\\"target\\\" : \\\"xxxx\\\",               (string) The hash target\\n\"\n+            \"  \\\"target\\\" : \\\"xxxx\\\",                 (string) The hash target\\n\"\n             \"  \\\"mintime\\\" : xxx,                   (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n             \"  \\\"mutable\\\" : [                      (array of string) list of ways the block template may be changed \\n\"\n             \"     \\\"value\\\"                         (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n             \"  \\\"noncerange\\\" : \\\"00000000ffffffff\\\",   (string) A range of valid nonces\\n\"\n-            \"  \\\"sigoplimit\\\" : n,                 (numeric) limit of sigops in blocks\\n\"\n-            \"  \\\"sizelimit\\\" : n,                  (numeric) limit of block size\\n\"\n-            \"  \\\"curtime\\\" : ttt,                  (numeric) current timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"bits\\\" : \\\"xxx\\\",                 (string) compressed target of next block\\n\"\n-            \"  \\\"height\\\" : n                      (numeric) The height of the next block\\n\"\n+            \"  \\\"sigoplimit\\\" : n,                   (numeric) limit of sigops in blocks\\n\"\n+            \"  \\\"sizelimit\\\" : n,                    (numeric) limit of block size\\n\"\n+            \"  \\\"curtime\\\" : ttt,                    (numeric) current timestamp in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"bits\\\" : \\\"xxx\\\",                     (string) compressed target of next block\\n\"\n+            \"  \\\"height\\\" : n                        (numeric) The height of the next block\\n\"\n             \"}\\n\"\n \n             \"\\nExamples:\\n\"\n@@ -618,10 +618,10 @@ UniValue submitblock(const UniValue& params, bool fHelp)\n             \"See https://en.bitcoin.it/wiki/BIP_0022 for full specification.\\n\"\n \n             \"\\nArguments\\n\"\n-            \"1. \\\"hexdata\\\"    (string, required) the hex-encoded block data to submit\\n\"\n+            \"1. \\\"hexdata\\\"                  (string, required) the hex-encoded block data to submit\\n\"\n             \"2. \\\"jsonparametersobject\\\"     (string, optional) object of optional parameters\\n\"\n             \"    {\\n\"\n-            \"      \\\"workid\\\" : \\\"id\\\"    (string, optional) if the server provided a workid, it MUST be included with submissions\\n\"\n+            \"      \\\"workid\\\" : \\\"id\\\"         (string, optional) if the server provided a workid, it MUST be included with submissions\\n\"\n             \"    }\\n\"\n             \"\\nResult:\\n\"\n             \"\\nExamples:\\n\""
      },
      {
        "sha": "f24e8d759c74b724492fa5cfba1e11b6a435a454",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
        "patch": "@@ -54,15 +54,15 @@ UniValue getinfo(const UniValue& params, bool fHelp)\n             \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",       (string, optional) the proxy used by the server\\n\"\n             \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n             \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n             \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n             \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n             \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for non-free transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"             (string) any error messages\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getinfo\", \"\")\n@@ -279,9 +279,9 @@ UniValue createmultisig(const UniValue& params, bool fHelp)\n \n             \"\\nArguments:\\n\"\n             \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n-            \"2. \\\"keys\\\"       (string, required) A json array of keys which are bitcoin addresses or hex-encoded public keys\\n\"\n+            \"2. \\\"keys\\\"         (string, required) A json array of keys which are bitcoin addresses or hex-encoded public keys\\n\"\n             \"     [\\n\"\n-            \"       \\\"key\\\"    (string) bitcoin address or hex-encoded public key\\n\"\n+            \"       \\\"key\\\"      (string) bitcoin address or hex-encoded public key\\n\"\n             \"       ,...\\n\"\n             \"     ]\\n\"\n "
      },
      {
        "sha": "039b25d7b4994683a9e97e20758543daf70e5741",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
        "patch": "@@ -29,7 +29,7 @@ UniValue getconnectioncount(const UniValue& params, bool fHelp)\n         throw runtime_error(\n             \"getconnectioncount\\n\"\n             \"\\nReturns the number of connections to other nodes.\\n\"\n-            \"\\nbResult:\\n\"\n+            \"\\nResult:\\n\"\n             \"n          (numeric) The connection count\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getconnectioncount\", \"\")\n@@ -87,8 +87,8 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n             \"[\\n\"\n             \"  {\\n\"\n             \"    \\\"id\\\": n,                   (numeric) Peer index\\n\"\n-            \"    \\\"addr\\\":\\\"host:port\\\",      (string) The ip address and port of the peer\\n\"\n-            \"    \\\"addrlocal\\\":\\\"ip:port\\\",   (string) local address\\n\"\n+            \"    \\\"addr\\\":\\\"host:port\\\",        (string) The ip address and port of the peer\\n\"\n+            \"    \\\"addrlocal\\\":\\\"ip:port\\\",     (string) local address\\n\"\n             \"    \\\"services\\\":\\\"xxxxxxxxxxxxxxxx\\\",   (string) The services offered\\n\"\n             \"    \\\"lastsend\\\": ttt,           (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last send\\n\"\n             \"    \\\"lastrecv\\\": ttt,           (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last receive\\n\"\n@@ -107,7 +107,7 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n             \"    \\\"synced_headers\\\": n,       (numeric) The last header we have in common with this peer\\n\"\n             \"    \\\"synced_blocks\\\": n,        (numeric) The last block we have in common with this peer\\n\"\n             \"    \\\"inflight\\\": [\\n\"\n-            \"       n,                        (numeric) The heights of blocks we're currently asking from this peer\\n\"\n+            \"       n,                      (numeric) The heights of blocks we're currently asking from this peer\\n\"\n             \"       ...\\n\"\n             \"    ]\\n\"\n             \"  }\\n\"\n@@ -256,7 +256,7 @@ UniValue getaddednodeinfo(const UniValue& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n-            \"    \\\"addednode\\\" : \\\"192.168.0.201\\\",   (string) The node ip address\\n\"\n+            \"    \\\"addednode\\\" : \\\"192.168.0.201\\\",     (string) The node ip address\\n\"\n             \"    \\\"connected\\\" : true|false,          (boolean) If connected\\n\"\n             \"    \\\"addresses\\\" : [\\n\"\n             \"       {\\n\"\n@@ -412,30 +412,30 @@ UniValue getnetworkinfo(const UniValue& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"version\\\": xxxxx,                      (numeric) the server version\\n\"\n-            \"  \\\"subversion\\\": \\\"/Satoshi:x.x.x/\\\",     (string) the server subversion string\\n\"\n+            \"  \\\"subversion\\\": \\\"/Satoshi:x.x.x/\\\",       (string) the server subversion string\\n\"\n             \"  \\\"protocolversion\\\": xxxxx,              (numeric) the protocol version\\n\"\n-            \"  \\\"localservices\\\": \\\"xxxxxxxxxxxxxxxx\\\", (string) the services we offer to the network\\n\"\n+            \"  \\\"localservices\\\": \\\"xxxxxxxxxxxxxxxx\\\",   (string) the services we offer to the network\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,                   (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,                  (numeric) the number of connections\\n\"\n             \"  \\\"networks\\\": [                          (array) information per network\\n\"\n             \"  {\\n\"\n-            \"    \\\"name\\\": \\\"xxx\\\",                     (string) network (ipv4, ipv6 or onion)\\n\"\n+            \"    \\\"name\\\": \\\"xxx\\\",                       (string) network (ipv4, ipv6 or onion)\\n\"\n             \"    \\\"limited\\\": true|false,               (boolean) is the network limited using -onlynet?\\n\"\n             \"    \\\"reachable\\\": true|false,             (boolean) is the network reachable?\\n\"\n-            \"    \\\"proxy\\\": \\\"host:port\\\"               (string) the proxy that is used for this network, or empty if none\\n\"\n+            \"    \\\"proxy\\\": \\\"host:port\\\"                 (string) the proxy that is used for this network, or empty if none\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"  ],\\n\"\n             \"  \\\"relayfee\\\": x.xxxxxxxx,                (numeric) minimum relay fee for non-free transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"localaddresses\\\": [                    (array) list of local addresses\\n\"\n             \"  {\\n\"\n-            \"    \\\"address\\\": \\\"xxxx\\\",                 (string) network address\\n\"\n+            \"    \\\"address\\\": \\\"xxxx\\\",                   (string) network address\\n\"\n             \"    \\\"port\\\": xxx,                         (numeric) network port\\n\"\n             \"    \\\"score\\\": xxx                         (numeric) relative score\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"  ]\\n\"\n-            \"  \\\"warnings\\\": \\\"...\\\"                    (string) any network warnings (such as alert messages) \\n\"\n+            \"  \\\"warnings\\\": \\\"...\\\"                      (string) any network warnings (such as alert messages) \\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getnetworkinfo\", \"\")"
      },
      {
        "sha": "f825947b1f178d53b47f8a6a986168041c59f931",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
        "patch": "@@ -152,10 +152,10 @@ UniValue getrawtransaction(const UniValue& params, bool fHelp)\n             \"       \\\"value\\\" : x.xxx,            (numeric) The value in \" + CURRENCY_UNIT + \"\\n\"\n             \"       \\\"n\\\" : n,                    (numeric) index\\n\"\n             \"       \\\"scriptPubKey\\\" : {          (json object)\\n\"\n-            \"         \\\"asm\\\" : \\\"asm\\\",          (string) the asm\\n\"\n-            \"         \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n+            \"         \\\"asm\\\" : \\\"asm\\\",            (string) the asm\\n\"\n+            \"         \\\"hex\\\" : \\\"hex\\\",            (string) the hex\\n\"\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n-            \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n+            \"         \\\"type\\\" : \\\"pubkeyhash\\\",    (string) The type, eg 'pubkeyhash'\\n\"\n             \"         \\\"addresses\\\" : [           (json array of string)\\n\"\n             \"           \\\"bitcoinaddress\\\"        (string) bitcoin address\\n\"\n             \"           ,...\\n\"\n@@ -164,7 +164,7 @@ UniValue getrawtransaction(const UniValue& params, bool fHelp)\n             \"     }\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"blockhash\\\" : \\\"hash\\\",   (string) the block hash\\n\"\n+            \"  \\\"blockhash\\\" : \\\"hash\\\",     (string) the block hash\\n\"\n             \"  \\\"confirmations\\\" : n,      (numeric) The confirmations\\n\"\n             \"  \\\"time\\\" : ttt,             (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n             \"  \\\"blocktime\\\" : ttt         (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n@@ -416,16 +416,16 @@ UniValue decoderawtransaction(const UniValue& params, bool fHelp)\n \n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"txid\\\" : \\\"id\\\",        (string) The transaction id\\n\"\n+            \"  \\\"txid\\\" : \\\"id\\\",          (string) The transaction id\\n\"\n             \"  \\\"version\\\" : n,          (numeric) The version\\n\"\n             \"  \\\"locktime\\\" : ttt,       (numeric) The lock time\\n\"\n             \"  \\\"vin\\\" : [               (array of json objects)\\n\"\n             \"     {\\n\"\n-            \"       \\\"txid\\\": \\\"id\\\",    (string) The transaction id\\n\"\n+            \"       \\\"txid\\\": \\\"id\\\",      (string) The transaction id\\n\"\n             \"       \\\"vout\\\": n,         (numeric) The output number\\n\"\n             \"       \\\"scriptSig\\\": {     (json object) The script\\n\"\n-            \"         \\\"asm\\\": \\\"asm\\\",  (string) asm\\n\"\n-            \"         \\\"hex\\\": \\\"hex\\\"   (string) hex\\n\"\n+            \"         \\\"asm\\\": \\\"asm\\\",    (string) asm\\n\"\n+            \"         \\\"hex\\\": \\\"hex\\\"     (string) hex\\n\"\n             \"       },\\n\"\n             \"       \\\"sequence\\\": n     (numeric) The script sequence number\\n\"\n             \"     }\\n\"\n@@ -436,12 +436,12 @@ UniValue decoderawtransaction(const UniValue& params, bool fHelp)\n             \"       \\\"value\\\" : x.xxx,            (numeric) The value in \" + CURRENCY_UNIT + \"\\n\"\n             \"       \\\"n\\\" : n,                    (numeric) index\\n\"\n             \"       \\\"scriptPubKey\\\" : {          (json object)\\n\"\n-            \"         \\\"asm\\\" : \\\"asm\\\",          (string) the asm\\n\"\n-            \"         \\\"hex\\\" : \\\"hex\\\",          (string) the hex\\n\"\n+            \"         \\\"asm\\\" : \\\"asm\\\",            (string) the asm\\n\"\n+            \"         \\\"hex\\\" : \\\"hex\\\",            (string) the hex\\n\"\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n-            \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n+            \"         \\\"type\\\" : \\\"pubkeyhash\\\",    (string) The type, eg 'pubkeyhash'\\n\"\n             \"         \\\"addresses\\\" : [           (json array of string)\\n\"\n-            \"           \\\"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\\\"   (string) bitcoin address\\n\"\n+            \"           \\\"12tv...\\\"               (string) bitcoin address\\n\"\n             \"           ,...\\n\"\n             \"         ]\\n\"\n             \"       }\\n\"\n@@ -479,9 +479,9 @@ UniValue decodescript(const UniValue& params, bool fHelp)\n             \"1. \\\"hex\\\"     (string) the hex encoded script\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"asm\\\":\\\"asm\\\",   (string) Script public key\\n\"\n-            \"  \\\"hex\\\":\\\"hex\\\",   (string) hex encoded public key\\n\"\n-            \"  \\\"type\\\":\\\"type\\\", (string) The output type\\n\"\n+            \"  \\\"asm\\\":\\\"asm\\\",     (string) Script public key\\n\"\n+            \"  \\\"hex\\\":\\\"hex\\\",     (string) hex encoded public key\\n\"\n+            \"  \\\"type\\\":\\\"type\\\",   (string) The output type\\n\"\n             \"  \\\"reqSigs\\\": n,    (numeric) The required signatures\\n\"\n             \"  \\\"addresses\\\": [   (json array of string)\\n\"\n             \"     \\\"address\\\"     (string) bitcoin address\\n\"\n@@ -538,23 +538,23 @@ UniValue signrawtransaction(const UniValue& params, bool fHelp)\n #endif\n \n             \"\\nArguments:\\n\"\n-            \"1. \\\"hexstring\\\"     (string, required) The transaction hex string\\n\"\n-            \"2. \\\"prevtxs\\\"       (string, optional) An json array of previous dependent transaction outputs\\n\"\n+            \"1. \\\"hexstring\\\"       (string, required) The transaction hex string\\n\"\n+            \"2. \\\"prevtxs\\\"         (string, optional) An json array of previous dependent transaction outputs\\n\"\n             \"     [               (json array of json objects, or 'null' if none provided)\\n\"\n             \"       {\\n\"\n-            \"         \\\"txid\\\":\\\"id\\\",             (string, required) The transaction id\\n\"\n+            \"         \\\"txid\\\":\\\"id\\\",               (string, required) The transaction id\\n\"\n             \"         \\\"vout\\\":n,                  (numeric, required) The output number\\n\"\n-            \"         \\\"scriptPubKey\\\": \\\"hex\\\",   (string, required) script key\\n\"\n-            \"         \\\"redeemScript\\\": \\\"hex\\\"    (string, required for P2SH) redeem script\\n\"\n+            \"         \\\"scriptPubKey\\\": \\\"hex\\\",     (string, required) script key\\n\"\n+            \"         \\\"redeemScript\\\": \\\"hex\\\"      (string, required for P2SH) redeem script\\n\"\n             \"       }\\n\"\n             \"       ,...\\n\"\n             \"    ]\\n\"\n-            \"3. \\\"privatekeys\\\"     (string, optional) A json array of base58-encoded private keys for signing\\n\"\n+            \"3. \\\"privatekeys\\\"       (string, optional) A json array of base58-encoded private keys for signing\\n\"\n             \"    [                  (json array of strings, or 'null' if none provided)\\n\"\n-            \"      \\\"privatekey\\\"   (string) private key in base58-encoding\\n\"\n+            \"      \\\"privatekey\\\"     (string) private key in base58-encoding\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"4. \\\"sighashtype\\\"     (string, optional, default=ALL) The signature hash type. Must be one of\\n\"\n+            \"4. \\\"sighashtype\\\"       (string, optional, default=ALL) The signature hash type. Must be one of\\n\"\n             \"       \\\"ALL\\\"\\n\"\n             \"       \\\"NONE\\\"\\n\"\n             \"       \\\"SINGLE\\\"\\n\"\n@@ -773,7 +773,7 @@ UniValue sendrawtransaction(const UniValue& params, bool fHelp)\n             \"\\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\\n\"\n             \"\\nAlso see createrawtransaction and signrawtransaction calls.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n+            \"1. \\\"hexstring\\\"      (string, required) The hex string of the raw transaction)\\n\"\n             \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"hex\\\"             (string) The transaction hash in hex\\n\""
      },
      {
        "sha": "05401ff4fc6171457514c17282057998e547ef7c",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
        "patch": "@@ -187,8 +187,8 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n             \"importaddress \\\"address\\\" ( \\\"label\\\" rescan p2sh )\\n\"\n             \"\\nAdds a script (in hex) or address that can be watched as if it were in your wallet but cannot be used to spend.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"script\\\"           (string, required) The hex-encoded script (or address)\\n\"\n-            \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n+            \"1. \\\"script\\\"             (string, required) The hex-encoded script (or address)\\n\"\n+            \"2. \\\"label\\\"              (string, optional, default=\\\"\\\") An optional label\\n\"\n             \"3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\\n\"\n             \"4. p2sh                 (boolean, optional, default=false) Add the P2SH version of the script as well\\n\"\n             \"\\nNote: This call can take minutes to complete if rescan is true.\\n\"\n@@ -253,8 +253,8 @@ UniValue importpubkey(const UniValue& params, bool fHelp)\n             \"importpubkey \\\"pubkey\\\" ( \\\"label\\\" rescan )\\n\"\n             \"\\nAdds a public key (in hex) that can be watched as if it were in your wallet but cannot be used to spend.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"pubkey\\\"           (string, required) The hex-encoded public key\\n\"\n-            \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n+            \"1. \\\"pubkey\\\"             (string, required) The hex-encoded public key\\n\"\n+            \"2. \\\"label\\\"              (string, optional, default=\\\"\\\") An optional label\\n\"\n             \"3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\\n\"\n             \"\\nNote: This call can take minutes to complete if rescan is true.\\n\"\n             \"\\nExamples:\\n\""
      },
      {
        "sha": "07f823b1223d1ec4cadc80b83264d407a337d5ff",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 40,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=af3f2dbd3f9320ce37f13927243c5bcd4dc69dc8",
        "patch": "@@ -323,7 +323,7 @@ UniValue getaddressesbyaccount(const UniValue& params, bool fHelp)\n             \"1. \\\"account\\\"  (string, required) The account name.\\n\"\n             \"\\nResult:\\n\"\n             \"[                     (json array of string)\\n\"\n-            \"  \\\"bitcoinaddress\\\"  (string) a bitcoin address associated with the given account\\n\"\n+            \"  \\\"bitcoinaddress\\\"    (string) a bitcoin address associated with the given account\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n             \"\\nExamples:\\n\"\n@@ -390,10 +390,10 @@ UniValue sendtoaddress(const UniValue& params, bool fHelp)\n             + HelpRequiringPassphrase() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to send to.\\n\"\n-            \"2. \\\"amount\\\"      (numeric, required) The amount in \" + CURRENCY_UNIT + \" to send. eg 0.1\\n\"\n-            \"3. \\\"comment\\\"     (string, optional) A comment used to store what the transaction is for. \\n\"\n+            \"2. \\\"amount\\\"            (numeric, required) The amount in \" + CURRENCY_UNIT + \" to send. eg 0.1\\n\"\n+            \"3. \\\"comment\\\"           (string, optional) A comment used to store what the transaction is for. \\n\"\n             \"                             This is not part of the transaction, just kept in your wallet.\\n\"\n-            \"4. \\\"comment-to\\\"  (string, optional) A comment to store the name of the person or organization \\n\"\n+            \"4. \\\"comment-to\\\"        (string, optional) A comment to store the name of the person or organization \\n\"\n             \"                             to which you're sending the transaction. This is not part of the \\n\"\n             \"                             transaction, just kept in your wallet.\\n\"\n             \"5. subtractfeefromamount  (boolean, optional, default=false) The fee will be deducted from the amount being sent.\\n\"\n@@ -452,7 +452,7 @@ UniValue listaddressgroupings(const UniValue& params, bool fHelp)\n             \"  [\\n\"\n             \"    [\\n\"\n             \"      \\\"bitcoinaddress\\\",     (string) The bitcoin address\\n\"\n-            \"      amount,                 (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n+            \"      amount,               (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"      \\\"account\\\"             (string, optional) The account (DEPRECATED)\\n\"\n             \"    ]\\n\"\n             \"    ,...\\n\"\n@@ -553,7 +553,7 @@ UniValue getreceivedbyaddress(const UniValue& params, bool fHelp)\n             \"getreceivedbyaddress \\\"bitcoinaddress\\\" ( minconf )\\n\"\n             \"\\nReturns the total amount received by the given bitcoinaddress in transactions with at least minconf confirmations.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for transactions.\\n\"\n+            \"1. \\\"bitcoinaddress\\\"    (string, required) The bitcoin address for transactions.\\n\"\n             \"2. minconf             (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n             \"\\nResult:\\n\"\n             \"amount   (numeric) The total amount in \" + CURRENCY_UNIT + \" received at this address.\\n\"\n@@ -611,7 +611,7 @@ UniValue getreceivedbyaccount(const UniValue& params, bool fHelp)\n             \"getreceivedbyaccount \\\"account\\\" ( minconf )\\n\"\n             \"\\nDEPRECATED. Returns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"account\\\"      (string, required) The selected account, may be the default account using \\\"\\\".\\n\"\n+            \"1. \\\"account\\\"        (string, required) The selected account, may be the default account using \\\"\\\".\\n\"\n             \"2. minconf          (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n             \"\\nResult:\\n\"\n             \"amount              (numeric) The total amount in \" + CURRENCY_UNIT + \" received for this account.\\n\"\n@@ -703,7 +703,7 @@ UniValue getbalance(const UniValue& params, bool fHelp)\n             \"Note that the account \\\"\\\" is not the same as leaving the parameter out.\\n\"\n             \"The server total may be different to the balance in the default \\\"\\\" account.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"account\\\"      (string, optional) DEPRECATED. The selected account, or \\\"*\\\" for entire wallet. It may be the default account using \\\"\\\".\\n\"\n+            \"1. \\\"account\\\"        (string, optional) DEPRECATED. The selected account, or \\\"*\\\" for entire wallet. It may be the default account using \\\"\\\".\\n\"\n             \"2. minconf          (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n             \"3. includeWatchonly (bool, optional, default=false) Also include balance in watchonly addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n@@ -791,11 +791,11 @@ UniValue movecmd(const UniValue& params, bool fHelp)\n             \"move \\\"fromaccount\\\" \\\"toaccount\\\" amount ( minconf \\\"comment\\\" )\\n\"\n             \"\\nDEPRECATED. Move a specified amount from one account in your wallet to another.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"fromaccount\\\"   (string, required) The name of the account to move funds from. May be the default account using \\\"\\\".\\n\"\n-            \"2. \\\"toaccount\\\"     (string, required) The name of the account to move funds to. May be the default account using \\\"\\\".\\n\"\n+            \"1. \\\"fromaccount\\\"     (string, required) The name of the account to move funds from. May be the default account using \\\"\\\".\\n\"\n+            \"2. \\\"toaccount\\\"       (string, required) The name of the account to move funds to. May be the default account using \\\"\\\".\\n\"\n             \"3. amount            (numeric) Quantity of \" + CURRENCY_UNIT + \" to move between accounts.\\n\"\n             \"4. minconf           (numeric, optional, default=1) Only use funds with at least this many confirmations.\\n\"\n-            \"5. \\\"comment\\\"       (string, optional) An optional comment, stored in the wallet only.\\n\"\n+            \"5. \\\"comment\\\"         (string, optional) An optional comment, stored in the wallet only.\\n\"\n             \"\\nResult:\\n\"\n             \"true|false           (boolean) true if successful.\\n\"\n             \"\\nExamples:\\n\"\n@@ -866,17 +866,17 @@ UniValue sendfrom(const UniValue& params, bool fHelp)\n             \"The amount is a real and is rounded to the nearest 0.00000001.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"fromaccount\\\"       (string, required) The name of the account to send funds from. May be the default account using \\\"\\\".\\n\"\n-            \"2. \\\"tobitcoinaddress\\\"  (string, required) The bitcoin address to send funds to.\\n\"\n+            \"1. \\\"fromaccount\\\"         (string, required) The name of the account to send funds from. May be the default account using \\\"\\\".\\n\"\n+            \"2. \\\"tobitcoinaddress\\\"    (string, required) The bitcoin address to send funds to.\\n\"\n             \"3. amount                (numeric, required) The amount in \" + CURRENCY_UNIT + \" (transaction fee is added on top).\\n\"\n             \"4. minconf               (numeric, optional, default=1) Only use funds with at least this many confirmations.\\n\"\n-            \"5. \\\"comment\\\"           (string, optional) A comment used to store what the transaction is for. \\n\"\n+            \"5. \\\"comment\\\"             (string, optional) A comment used to store what the transaction is for. \\n\"\n             \"                                     This is not part of the transaction, just kept in your wallet.\\n\"\n-            \"6. \\\"comment-to\\\"        (string, optional) An optional comment to store the name of the person or organization \\n\"\n+            \"6. \\\"comment-to\\\"          (string, optional) An optional comment to store the name of the person or organization \\n\"\n             \"                                     to which you're sending the transaction. This is not part of the transaction, \\n\"\n             \"                                     it is just kept in your wallet.\\n\"\n             \"\\nResult:\\n\"\n-            \"\\\"transactionid\\\"        (string) The transaction id.\\n\"\n+            \"\\\"transactionid\\\"          (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend 0.01 \" + CURRENCY_UNIT + \" from the default account to the address, must have at least 1 confirmation\\n\"\n             + HelpExampleCli(\"sendfrom\", \"\\\"\\\" \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.01\") +\n@@ -937,7 +937,7 @@ UniValue sendmany(const UniValue& params, bool fHelp)\n             \"      ,...\\n\"\n             \"    }\\n\"\n             \"3. minconf                 (numeric, optional, default=1) Only use the balance confirmed at least this many times.\\n\"\n-            \"4. \\\"comment\\\"             (string, optional) A comment\\n\"\n+            \"4. \\\"comment\\\"               (string, optional) A comment\\n\"\n             \"5. subtractfeefromamount   (string, optional) A json array with addresses.\\n\"\n             \"                           The fee will be equally deducted from the amount of each selected address.\\n\"\n             \"                           Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n@@ -1046,7 +1046,7 @@ UniValue addmultisigaddress(const UniValue& params, bool fHelp)\n             \"If 'account' is specified (DEPRECATED), assign address to that account.\\n\"\n \n             \"\\nArguments:\\n\"\n-            \"1. nrequired        (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n+            \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n             \"2. \\\"keysobject\\\"   (string, required) A json array of bitcoin addresses or hex-encoded public keys\\n\"\n             \"     [\\n\"\n             \"       \\\"address\\\"  (string) bitcoin address or hex-encoded public key\\n\"\n@@ -1232,8 +1232,8 @@ UniValue listreceivedbyaddress(const UniValue& params, bool fHelp)\n             \"[\\n\"\n             \"  {\\n\"\n             \"    \\\"involvesWatchonly\\\" : true,        (bool) Only returned if imported addresses were involved in transaction\\n\"\n-            \"    \\\"address\\\" : \\\"receivingaddress\\\",  (string) The receiving address\\n\"\n-            \"    \\\"account\\\" : \\\"accountname\\\",       (string) DEPRECATED. The account of the receiving address. The default account is \\\"\\\".\\n\"\n+            \"    \\\"address\\\" : \\\"receivingaddress\\\",    (string) The receiving address\\n\"\n+            \"    \\\"account\\\" : \\\"accountname\\\",         (string) DEPRECATED. The account of the receiving address. The default account is \\\"\\\".\\n\"\n             \"    \\\"amount\\\" : x.xxx,                  (numeric) The total amount in \" + CURRENCY_UNIT + \" received by the address\\n\"\n             \"    \\\"confirmations\\\" : n                (numeric) The number of confirmations of the most recent transaction included\\n\"\n             \"  }\\n\"\n@@ -1261,15 +1261,15 @@ UniValue listreceivedbyaccount(const UniValue& params, bool fHelp)\n             \"listreceivedbyaccount ( minconf includeempty includeWatchonly)\\n\"\n             \"\\nDEPRECATED. List balances by account.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. minconf      (numeric, optional, default=1) The minimum number of confirmations before payments are included.\\n\"\n-            \"2. includeempty (boolean, optional, default=false) Whether to include accounts that haven't received any payments.\\n\"\n+            \"1. minconf       (numeric, optional, default=1) The minimum number of confirmations before payments are included.\\n\"\n+            \"2. includeempty  (boolean, optional, default=false) Whether to include accounts that haven't received any payments.\\n\"\n             \"3. includeWatchonly (bool, optional, default=false) Whether to include watchonly addresses (see 'importaddress').\\n\"\n \n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n             \"    \\\"involvesWatchonly\\\" : true,   (bool) Only returned if imported addresses were involved in transaction\\n\"\n-            \"    \\\"account\\\" : \\\"accountname\\\",  (string) The account name of the receiving account\\n\"\n+            \"    \\\"account\\\" : \\\"accountname\\\",    (string) The account name of the receiving account\\n\"\n             \"    \\\"amount\\\" : x.xxx,             (numeric) The total amount received by addresses with this account\\n\"\n             \"    \\\"confirmations\\\" : n           (numeric) The number of confirmations of the most recent transaction included\\n\"\n             \"  }\\n\"\n@@ -1391,7 +1391,7 @@ UniValue listtransactions(const UniValue& params, bool fHelp)\n             \"listtransactions ( \\\"account\\\" count from includeWatchonly)\\n\"\n             \"\\nReturns up to 'count' most recent transactions skipping the first 'from' transactions for account 'account'.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"account\\\"    (string, optional) DEPRECATED. The account name. Should be \\\"*\\\".\\n\"\n+            \"1. \\\"account\\\"      (string, optional) DEPRECATED. The account name. Should be \\\"*\\\".\\n\"\n             \"2. count          (numeric, optional, default=10) The number of transactions to return\\n\"\n             \"3. from           (numeric, optional, default=0) The number of transactions to skip\\n\"\n             \"4. includeWatchonly (bool, optional, default=false) Include transactions to watchonly addresses (see 'importaddress')\\n\"\n@@ -1418,11 +1418,11 @@ UniValue listtransactions(const UniValue& params, bool fHelp)\n             \"                                          category of transactions.\\n\"\n             \"    \\\"blockindex\\\": n,          (numeric) The block index containing the transaction. Available for 'send' and 'receive'\\n\"\n             \"                                          category of transactions.\\n\"\n-            \"    \\\"txid\\\": \\\"transactionid\\\", (string) The transaction id. Available for 'send' and 'receive' category of transactions.\\n\"\n+            \"    \\\"txid\\\": \\\"transactionid\\\",   (string) The transaction id. Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (midnight Jan 1 1970 GMT).\\n\"\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (midnight Jan 1 1970 GMT). Available \\n\"\n             \"                                          for 'send' and 'receive' category of transactions.\\n\"\n-            \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n+            \"    \\\"comment\\\": \\\"...\\\",         (string) If a comment is associated with the transaction.\\n\"\n             \"    \\\"otheraccount\\\": \\\"accountname\\\",  (string) For the 'move' category of transactions, the account the funds came \\n\"\n             \"                                          from (for receiving funds, positive amounts), or went to (for sending funds,\\n\"\n             \"                                          negative amounts).\\n\"\n@@ -1516,7 +1516,7 @@ UniValue listaccounts(const UniValue& params, bool fHelp)\n             \"2. includeWatchonly (bool, optional, default=false) Include balances in watchonly addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n             \"{                      (json object where keys are account names, and values are numeric balances\\n\"\n-            \"  \\\"account\\\": x.xxx,  (numeric) The property name is the account name, and the value is the total balance for the account.\\n\"\n+            \"  \\\"account\\\": x.xxx,    (numeric) The property name is the account name, and the value is the total balance for the account.\\n\"\n             \"  ...\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n@@ -1612,8 +1612,8 @@ UniValue listsinceblock(const UniValue& params, bool fHelp)\n             \"    \\\"txid\\\": \\\"transactionid\\\",  (string) The transaction id. Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT).\\n\"\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.\\n\"\n-            \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n-            \"    \\\"to\\\": \\\"...\\\",            (string) If a comment to is associated with the transaction.\\n\"\n+            \"    \\\"comment\\\": \\\"...\\\",         (string) If a comment is associated with the transaction.\\n\"\n+            \"    \\\"to\\\": \\\"...\\\",              (string) If a comment to is associated with the transaction.\\n\"\n              \"  ],\\n\"\n             \"  \\\"lastblock\\\": \\\"lastblockhash\\\"     (string) The hash of the last block\\n\"\n             \"}\\n\"\n@@ -1689,7 +1689,7 @@ UniValue gettransaction(const UniValue& params, bool fHelp)\n             \"{\\n\"\n             \"  \\\"amount\\\" : x.xxx,        (numeric) The transaction amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"  \\\"confirmations\\\" : n,     (numeric) The number of confirmations\\n\"\n-            \"  \\\"blockhash\\\" : \\\"hash\\\",  (string) The block hash\\n\"\n+            \"  \\\"blockhash\\\" : \\\"hash\\\",    (string) The block hash\\n\"\n             \"  \\\"blockindex\\\" : xx,       (numeric) The block index\\n\"\n             \"  \\\"blocktime\\\" : ttt,       (numeric) The time in seconds since epoch (1 Jan 1970 GMT)\\n\"\n             \"  \\\"txid\\\" : \\\"transactionid\\\",   (string) The transaction id.\\n\"\n@@ -2039,10 +2039,10 @@ UniValue lockunspent(const UniValue& params, bool fHelp)\n             \"Also see the listunspent call\\n\"\n             \"\\nArguments:\\n\"\n             \"1. unlock            (boolean, required) Whether to unlock (true) or lock (false) the specified transactions\\n\"\n-            \"2. \\\"transactions\\\"  (string, required) A json array of objects. Each object the txid (string) vout (numeric)\\n\"\n+            \"2. \\\"transactions\\\"    (string, required) A json array of objects. Each object the txid (string) vout (numeric)\\n\"\n             \"     [           (json array of json objects)\\n\"\n             \"       {\\n\"\n-            \"         \\\"txid\\\":\\\"id\\\",    (string) The transaction id\\n\"\n+            \"         \\\"txid\\\":\\\"id\\\",      (string) The transaction id\\n\"\n             \"         \\\"vout\\\": n         (numeric) The output number\\n\"\n             \"       }\\n\"\n             \"       ,...\\n\"\n@@ -2120,7 +2120,7 @@ UniValue listlockunspent(const UniValue& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n-            \"    \\\"txid\\\" : \\\"transactionid\\\",     (string) The transaction id locked\\n\"\n+            \"    \\\"txid\\\" : \\\"transactionid\\\",       (string) The transaction id locked\\n\"\n             \"    \\\"vout\\\" : n                      (numeric) The vout value\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n@@ -2266,19 +2266,19 @@ UniValue listunspent(const UniValue& params, bool fHelp)\n             \"\\nArguments:\\n\"\n             \"1. minconf          (numeric, optional, default=1) The minimum confirmations to filter\\n\"\n             \"2. maxconf          (numeric, optional, default=9999999) The maximum confirmations to filter\\n\"\n-            \"3. \\\"addresses\\\"    (string) A json array of bitcoin addresses to filter\\n\"\n+            \"3. \\\"addresses\\\"      (string) A json array of bitcoin addresses to filter\\n\"\n             \"    [\\n\"\n-            \"      \\\"address\\\"   (string) bitcoin address\\n\"\n+            \"      \\\"address\\\"     (string) bitcoin address\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n             \"\\nResult\\n\"\n             \"[                   (array of json object)\\n\"\n             \"  {\\n\"\n-            \"    \\\"txid\\\" : \\\"txid\\\",        (string) the transaction id \\n\"\n+            \"    \\\"txid\\\" : \\\"txid\\\",          (string) the transaction id \\n\"\n             \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n-            \"    \\\"address\\\" : \\\"address\\\",  (string) the bitcoin address\\n\"\n-            \"    \\\"account\\\" : \\\"account\\\",  (string) DEPRECATED. The associated account, or \\\"\\\" for the default account\\n\"\n-            \"    \\\"scriptPubKey\\\" : \\\"key\\\", (string) the script key\\n\"\n+            \"    \\\"address\\\" : \\\"address\\\",    (string) the bitcoin address\\n\"\n+            \"    \\\"account\\\" : \\\"account\\\",    (string) DEPRECATED. The associated account, or \\\"\\\" for the default account\\n\"\n+            \"    \\\"scriptPubKey\\\" : \\\"key\\\",   (string) the script key\\n\"\n             \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"    \\\"confirmations\\\" : n       (numeric) The number of confirmations\\n\"\n             \"  }\\n\"\n@@ -2384,7 +2384,7 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n                             \"2. includeWatching (boolean, optional, default false) Also select inputs which are watch only\\n\"\n                             \"\\nResult:\\n\"\n                             \"{\\n\"\n-                            \"  \\\"hex\\\":       \\\"value\\\", (string)  The resulting raw transaction (hex-encoded string)\\n\"\n+                            \"  \\\"hex\\\":       \\\"value\\\",   (string)  The resulting raw transaction (hex-encoded string)\\n\"\n                             \"  \\\"fee\\\":       n,         (numeric) The fee added to the transaction\\n\"\n                             \"  \\\"changepos\\\": n          (numeric) The position of the added change output, or -1\\n\"\n                             \"}\\n\""
      }
    ]
  }
]