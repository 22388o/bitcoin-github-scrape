[
  {
    "sha": "c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTJjNGU1ZDE0ZmIyMGEwYWJjNmZkY2Y4NjAxYWU1YTA2MjZkZGNm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-03-11T07:32:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-03-11T07:46:01Z"
      },
      "message": "qt: Make it possible again to specify -testnet in config file\n\nChanges for the datadir chooser have made it impossible to specify\nthe network (testnet/regtest) in the configuration file for the GUI.\n\nReorganize the initialization sequence to make this possible again.\n\n- Moves the \"datadir\" QSetting so that is no longer dependent on the\n  network-specific application name (doing otherwise would create a\n  chicken-and-egg problem).\n\n- Re-initialize translations after choosing network. There may be a\n  different language configured in network-specific settings\n  (slim chance, but handle it for sanity).\n\nFixes point 1 of #3840.",
      "tree": {
        "sha": "d88fb17b4d81bc9c91039e49c78b5d8307df17ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d88fb17b4d81bc9c91039e49c78b5d8307df17ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a63f8b7b36e39722024a0ba061ca214f00a8f1bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a63f8b7b36e39722024a0ba061ca214f00a8f1bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a63f8b7b36e39722024a0ba061ca214f00a8f1bd"
      }
    ],
    "stats": {
      "total": 78,
      "additions": 46,
      "deletions": 32
    },
    "files": [
      {
        "sha": "d8e21c4aa645908062b1cc7a6b23050dbd3e0f88",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 26,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf",
        "patch": "@@ -78,6 +78,12 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n {\n     QSettings settings;\n \n+    // Remove old translators\n+    QApplication::removeTranslator(&qtTranslatorBase);\n+    QApplication::removeTranslator(&qtTranslator);\n+    QApplication::removeTranslator(&translatorBase);\n+    QApplication::removeTranslator(&translator);\n+\n     // Get desired locale (e.g. \"de_DE\")\n     // 1) System default language\n     QString lang_territory = QLocale::system().name();\n@@ -439,21 +445,9 @@ void BitcoinApplication::handleRunawayException(const QString &message)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-    bool fSelParFromCLFailed = false;\n     /// 1. Parse command-line options. These take precedence over anything else.\n     // Command-line options take precedence:\n     ParseParameters(argc, argv);\n-    // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        fSelParFromCLFailed = true;\n-    }\n-#ifdef ENABLE_WALLET\n-    // Parse URIs on command line -- this can affect Params()\n-    if (!PaymentServer::ipcParseCommandLine(argc, argv))\n-        exit(0);\n-#endif\n-\n-    bool isaTestNet = Params().NetworkID() != CChainParams::MAIN;\n \n     // Do not refer to data directory yet, this can be overridden by Intro::pickDataDirectory\n \n@@ -480,12 +474,9 @@ int main(int argc, char *argv[])\n     /// 3. Application identification\n     // must be set before OptionsModel is initialized or translations are loaded,\n     // as it is used to locate QSettings\n-    QApplication::setOrganizationName(\"Bitcoin\");\n-    QApplication::setOrganizationDomain(\"bitcoin.org\");\n-    if (isaTestNet) // Separate UI settings for testnets\n-        QApplication::setApplicationName(\"Bitcoin-Qt-testnet\");\n-    else\n-        QApplication::setApplicationName(\"Bitcoin-Qt\");\n+    QApplication::setOrganizationName(QAPP_ORG_NAME);\n+    QApplication::setOrganizationDomain(QAPP_ORG_DOMAIN);\n+    QApplication::setApplicationName(QAPP_APP_NAME_DEFAULT);\n \n     /// 4. Initialization of translations, so that intro dialog is in user's language\n     // Now that QSettings are accessible, initialize translations\n@@ -501,17 +492,13 @@ int main(int argc, char *argv[])\n         help.showOrPrint();\n         return 1;\n     }\n-    // Now that translations are initialized, check for earlier errors and show a translatable error message\n-    if (fSelParFromCLFailed) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n-        return 1;\n-    }\n \n     /// 5. Now that settings and translations are available, ask user for data directory\n     // User language is set up: pick a data directory\n-    Intro::pickDataDirectory(isaTestNet);\n+    Intro::pickDataDirectory();\n \n     /// 6. Determine availability of data directory and parse bitcoin.conf\n+    /// - Do not call GetDataDir(true) before this step finishes\n     if (!boost::filesystem::is_directory(GetDataDir(false)))\n     {\n         QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n@@ -520,8 +507,33 @@ int main(int argc, char *argv[])\n     }\n     ReadConfigFile(mapArgs, mapMultiArgs);\n \n+    /// 7. Determine network (and switch to network specific options)\n+    // - Do not call Params() before this step\n+    // - Do this after parsing the configuration file, as the network can be switched there\n+    // - QSettings() will use the new application name after this, resulting in network-specific settings\n+    // - Needs to be done before createOptionsModel\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    if (!SelectParamsFromCommandLine()) {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n+        return 1;\n+    }\n+#ifdef ENABLE_WALLET\n+    // Parse URIs on command line -- this can affect Params()\n+    if (!PaymentServer::ipcParseCommandLine(argc, argv))\n+        exit(0);\n+#endif\n+    bool isaTestNet = Params().NetworkID() != CChainParams::MAIN;\n+    // Allow for separate UI settings for testnets\n+    if (isaTestNet)\n+        QApplication::setApplicationName(QAPP_APP_NAME_TESTNET);\n+    else\n+        QApplication::setApplicationName(QAPP_APP_NAME_DEFAULT);\n+    // Re-initialize translations after changing application name (language in network-specific settings can be different)\n+    initTranslations(qtTranslatorBase, qtTranslator, translatorBase, translator);\n+\n #ifdef ENABLE_WALLET\n-    /// 7. URI IPC sending\n+    /// 8. URI IPC sending\n     // - Do this early as we don't want to bother initializing if we are just calling IPC\n     // - Do this *after* setting up the data directory, as the data directory hash is used in the name\n     // of the server.\n@@ -535,7 +547,7 @@ int main(int argc, char *argv[])\n     app.createPaymentServer();\n #endif\n \n-    /// 8. Main GUI initialization\n+    /// 9. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n     app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n     // Install qDebug() message handler to route to debug.log"
      },
      {
        "sha": "5ae4bc833de81101498043908d407f04cf4c38ad",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf",
        "patch": "@@ -41,4 +41,9 @@ static const int MAX_PAYMENT_REQUEST_SIZE = 50000; // bytes\n /* Number of frames in spinner animation */\n #define SPINNER_FRAMES 35\n \n+#define QAPP_ORG_NAME \"Bitcoin\"\n+#define QAPP_ORG_DOMAIN \"bitcoin.org\"\n+#define QAPP_APP_NAME_DEFAULT \"Bitcoin-Qt\"\n+#define QAPP_APP_NAME_TESTNET \"Bitcoin-Qt-testnet\"\n+\n #endif // GUICONSTANTS_H"
      },
      {
        "sha": "3bc19f8645f536cc84aa2beec1d0acad095c4f58",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf",
        "patch": "@@ -146,7 +146,7 @@ QString Intro::getDefaultDataDirectory()\n     return QString::fromStdString(GetDefaultDataDir().string());\n }\n \n-void Intro::pickDataDirectory(bool fIsTestnet)\n+void Intro::pickDataDirectory()\n {\n     namespace fs = boost::filesystem;\n     QSettings settings;\n@@ -164,10 +164,7 @@ void Intro::pickDataDirectory(bool fIsTestnet)\n         /* If current default data directory does not exist, let the user choose one */\n         Intro intro;\n         intro.setDataDirectory(dataDir);\n-        if (!fIsTestnet)\n-            intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n-        else\n-            intro.setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n+        intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n \n         while(true)\n         {"
      },
      {
        "sha": "295a75562ffdafab00208da9be46937d6217896d",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=c52c4e5d14fb20a0abc6fdcf8601ae5a0626ddcf",
        "patch": "@@ -36,7 +36,7 @@ class Intro : public QDialog\n      * @note do NOT call global GetDataDir() before calling this function, this\n      * will cause the wrong path to be cached.\n      */\n-    static void pickDataDirectory(bool fIsTestnet);\n+    static void pickDataDirectory();\n \n     /**\n      * Determine default data directory for operating system."
      }
    ]
  }
]