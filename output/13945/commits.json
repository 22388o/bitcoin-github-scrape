[
  {
    "sha": "a7437c56362b20136cfee47d88c1c2608c77cd86",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzQzN2M1NjM2MmIyMDEzNmNmZWU0N2Q4OGMxYzI2MDhjNzdjZDg2",
    "commit": {
      "author": {
        "name": "Isidoro Ghezzi",
        "email": "isidoro.ghezzi@icloud.com",
        "date": "2018-08-11T16:16:31Z"
      },
      "committer": {
        "name": "Isidoro Ghezzi",
        "email": "isidoro.ghezzi@icloud.com",
        "date": "2018-08-30T14:50:30Z"
      },
      "message": "Refactoring CRPCCommand with enum category\n\nThis is a squash of the below commits:\n\n- enum ERPCCategory, CRPCCommand::Label\n- wip: CRPCCommand.category from type string to enum\n- wip: CRPCCommands construct with enum\n- refactoring with enum ok\n- missing test category in qt for cmd rpcNestedTest\n- wip: text formatting: tabs to spaces.\n- wip: refactor using `enum class` C++11.\nUpdate CRPCCommand::Label () using a switch case\n- wip: check-rpc-mappings.py fix regex to new format\nNow it's catching the format:\n'    { RPCCategory::control,            \"help\",                   &help,                   {\"command\"}  },'\n\nbefore was catching:\n'    { \"control\",            \"help\",                   &help,                   {\"command\"}  },'\n\n- wip: add src/rpc/rpccategory.h|cpp\n- removed CRCPCommand::Label for rpccategory::Label\n- moved `#include <rpc/rpccategory.h>`\n- removed unneccessary RPCCategory initializiation\n- comments and one assert(0)\n- // Copyright (c) 2018 The Bitcoin Core developers\n\nfor files: src/rpc/rpccategory.h|cpp\nas suggested from github user ken2812221\n- wip: missing `#include <cassert>`\n- using `emplace_back` C++11\n- remove old-style C `extern`\n- remove spaces after function names\n- remove unnecessary call to RPCCategory::Label\n\n(cherry picked from commit 4eec7a1c3421acc9d31c4c0f93ca6ec376e0847a)\n\nenum RPCCategory uppercase, rpccategory:Label lowercase\n\nfix test/lint/check-rpc-mappings.py to uppercase\n\nremove unnecessary comments, and  false instead of 0\n\nstd::string category to RPCCategory category\n\nUsing boost::optional<RPCCategory>\n\nremove src/rpc/server.cpp Capitalize() call\n\nCapitalization is done by hand in\nrpccategory::Label()",
      "tree": {
        "sha": "42ef7acc0c237994daf21081808d1b5e23703b0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42ef7acc0c237994daf21081808d1b5e23703b0a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7437c56362b20136cfee47d88c1c2608c77cd86",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEBqFy6+0+b1lSMxmElx4feYC7PesFAluIBEMACgkQlx4feYC7\nPetQXg/9Fx78+Y8s4EuR+3pqGV475gkQFfnhdsM1XlPWuDJRhCQRhVMxXaX7fg+m\n1skqHglROKg2Aw2D9SiCsGJglZOa7bk9hNEVgrr6r/Bjw6sRNmw8om6wmdybgN4R\nCsw28+bngVQ5j4GOTN5tr7+PvKBIPmYvOhNOi/fFG1IxMzuSYh+tbwvqFUW0bMH1\nbumfofOScn5umVPJyjiCCWNq1a/D4FC0w47edE34x9+rRzjLl95OmvV9sp3Y0E8p\nLWYxeNF/UxX7K6Urvz6AzdH+JcCZwavjeWBVFi8S5JMhw66ebU6jEy6knpWr2sVz\nruWs19+FYZ9x9djAAzzxLwLQBEVp0+EsXn5loOJkQ3cufKtFP+JBjT20hll5iAtK\nM/meAiYD2xqcXBpGOMJIXrJEY+cRXLfWlUHbqnYovqveR5JuDnVmA6w20JzUOxbd\nl/J4rgZntB2bClHdorm8TS5n8dz1VQYDIGB6v0CCEAHclNxOAuUBh+8R/FS7kuaA\nHMGz3fyZWMWTeOhBB8P00lS/fvjB+OSMUC5h1ZQFWVrymOMobEAWwpqV6+ZmSqxF\nUrLdm9+gjeeMbYdXyDwF5ArOqNtOezMJ3cQCpqkQ6+pz8TfpyqMam2ki9bGYfci/\nZ7dwnN7zSFYv49hUWgIN9w3h20KEMN1QBhBEnYI7KrZQQyJLD9E=\n=5+WA\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOR3DEZKJgRVaw+u4pZL3Ti1Z0OUVF3GvT9duTtSI+uBCP/wEANUkILxD8h/\nkgY/OMy1VzEI8BBn+CuB/iAZIKCeHSWCbAm2CPEEW4gERPAIjWRy9dml5zkAg9/j\nDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23/\n8BA40ItW1tvCJFLYRBrYXpOKCPEEW4gERPAIGgr4EiphzPIAg9/jDS75DI4sK2h0\ndHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfwEESawxjt\nua7pHU8WT6BDN10I8QRbiARF8AhPLnOrYq3yjQCD3+MNLvkMji4taHR0cHM6Ly9h\nbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 42ef7acc0c237994daf21081808d1b5e23703b0a\nparent 6c7cfc8da68a6a68fb83b65d3a456eec8554d1e9\nauthor Isidoro Ghezzi <isidoro.ghezzi@icloud.com> 1534004191 +0200\ncommitter Isidoro Ghezzi <isidoro.ghezzi@icloud.com> 1535640630 +0200\n\nRefactoring CRPCCommand with enum category\n\nThis is a squash of the below commits:\n\n- enum ERPCCategory, CRPCCommand::Label\n- wip: CRPCCommand.category from type string to enum\n- wip: CRPCCommands construct with enum\n- refactoring with enum ok\n- missing test category in qt for cmd rpcNestedTest\n- wip: text formatting: tabs to spaces.\n- wip: refactor using `enum class` C++11.\nUpdate CRPCCommand::Label () using a switch case\n- wip: check-rpc-mappings.py fix regex to new format\nNow it's catching the format:\n'    { RPCCategory::control,            \"help\",                   &help,                   {\"command\"}  },'\n\nbefore was catching:\n'    { \"control\",            \"help\",                   &help,                   {\"command\"}  },'\n\n- wip: add src/rpc/rpccategory.h|cpp\n- removed CRCPCommand::Label for rpccategory::Label\n- moved `#include <rpc/rpccategory.h>`\n- removed unneccessary RPCCategory initializiation\n- comments and one assert(0)\n- // Copyright (c) 2018 The Bitcoin Core developers\n\nfor files: src/rpc/rpccategory.h|cpp\nas suggested from github user ken2812221\n- wip: missing `#include <cassert>`\n- using `emplace_back` C++11\n- remove old-style C `extern`\n- remove spaces after function names\n- remove unnecessary call to RPCCategory::Label\n\n(cherry picked from commit 4eec7a1c3421acc9d31c4c0f93ca6ec376e0847a)\n\nenum RPCCategory uppercase, rpccategory:Label lowercase\n\nfix test/lint/check-rpc-mappings.py to uppercase\n\nremove unnecessary comments, and  false instead of 0\n\nstd::string category to RPCCategory category\n\nUsing boost::optional<RPCCategory>\n\nremove src/rpc/server.cpp Capitalize() call\n\nCapitalization is done by hand in\nrpccategory::Label()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7437c56362b20136cfee47d88c1c2608c77cd86",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7437c56362b20136cfee47d88c1c2608c77cd86",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7437c56362b20136cfee47d88c1c2608c77cd86/comments",
    "author": {
      "login": "isghe",
      "id": 1006078,
      "node_id": "MDQ6VXNlcjEwMDYwNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1006078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isghe",
      "html_url": "https://github.com/isghe",
      "followers_url": "https://api.github.com/users/isghe/followers",
      "following_url": "https://api.github.com/users/isghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/isghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isghe/subscriptions",
      "organizations_url": "https://api.github.com/users/isghe/orgs",
      "repos_url": "https://api.github.com/users/isghe/repos",
      "events_url": "https://api.github.com/users/isghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "isghe",
      "id": 1006078,
      "node_id": "MDQ6VXNlcjEwMDYwNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1006078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isghe",
      "html_url": "https://github.com/isghe",
      "followers_url": "https://api.github.com/users/isghe/followers",
      "following_url": "https://api.github.com/users/isghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/isghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isghe/subscriptions",
      "organizations_url": "https://api.github.com/users/isghe/orgs",
      "repos_url": "https://api.github.com/users/isghe/repos",
      "events_url": "https://api.github.com/users/isghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c7cfc8da68a6a68fb83b65d3a456eec8554d1e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c7cfc8da68a6a68fb83b65d3a456eec8554d1e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c7cfc8da68a6a68fb83b65d3a456eec8554d1e9"
      }
    ],
    "stats": {
      "total": 365,
      "additions": 216,
      "deletions": 149
    },
    "files": [
      {
        "sha": "ecd0c78e686fea30f5dfb8b5e574fbdf07a261b6",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -157,6 +157,7 @@ BITCOIN_CORE_H = \\\n   rpc/server.h \\\n   rpc/rawtransaction.h \\\n   rpc/register.h \\\n+  rpc/rpccategory.h \\\n   rpc/util.h \\\n   scheduler.h \\\n   script/descriptor.h \\\n@@ -246,6 +247,7 @@ libbitcoin_server_a_SOURCES = \\\n   rpc/misc.cpp \\\n   rpc/net.cpp \\\n   rpc/rawtransaction.cpp \\\n+  rpc/rpccategory.cpp \\\n   rpc/server.cpp \\\n   rpc/util.cpp \\\n   script/sigcache.cpp \\"
      },
      {
        "sha": "7c126ccdc3311646707851e1dc5e03d56df38c22",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -29,7 +29,7 @@ static UniValue rpcNestedTest_rpc(const JSONRPCRequest& request)\n \n static const CRPCCommand vRPCCommands[] =\n {\n-    { \"test\", \"rpcNestedTest\", &rpcNestedTest_rpc, {} },\n+    { RPCCategory::TEST, \"rpcNestedTest\", &rpcNestedTest_rpc, {} },\n };\n \n void RPCNestedTests::rpcNestedTests()"
      },
      {
        "sha": "27c5601b84a3384e58fa40bd1af62429920b61c0",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 29,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -2195,37 +2195,37 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      {} },\n-    { \"blockchain\",         \"getchaintxstats\",        &getchaintxstats,        {\"nblocks\", \"blockhash\"} },\n-    { \"blockchain\",         \"getblockstats\",          &getblockstats,          {\"hash_or_height\", \"stats\"} },\n-    { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       {} },\n-    { \"blockchain\",         \"getblockcount\",          &getblockcount,          {} },\n-    { \"blockchain\",         \"getblock\",               &getblock,               {\"blockhash\",\"verbosity|verbose\"} },\n-    { \"blockchain\",         \"getblockhash\",           &getblockhash,           {\"height\"} },\n-    { \"blockchain\",         \"getblockheader\",         &getblockheader,         {\"blockhash\",\"verbose\"} },\n-    { \"blockchain\",         \"getchaintips\",           &getchaintips,           {} },\n-    { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          {} },\n-    { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    {\"txid\",\"verbose\"} },\n-    { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  {\"txid\",\"verbose\"} },\n-    { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        {\"txid\"} },\n-    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         {} },\n-    { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          {\"verbose\"} },\n-    { \"blockchain\",         \"gettxout\",               &gettxout,               {\"txid\",\"n\",\"include_mempool\"} },\n-    { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        {} },\n-    { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        {\"height\"} },\n-    { \"blockchain\",         \"savemempool\",            &savemempool,            {} },\n-    { \"blockchain\",         \"verifychain\",            &verifychain,            {\"checklevel\",\"nblocks\"} },\n-\n-    { \"blockchain\",         \"preciousblock\",          &preciousblock,          {\"blockhash\"} },\n-    { \"blockchain\",         \"scantxoutset\",           &scantxoutset,           {\"action\", \"scanobjects\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getblockchaininfo\",      &getblockchaininfo,      {} },\n+    { RPCCategory::BLOCKCHAIN,         \"getchaintxstats\",        &getchaintxstats,        {\"nblocks\", \"blockhash\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getblockstats\",          &getblockstats,          {\"hash_or_height\", \"stats\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getbestblockhash\",       &getbestblockhash,       {} },\n+    { RPCCategory::BLOCKCHAIN,         \"getblockcount\",          &getblockcount,          {} },\n+    { RPCCategory::BLOCKCHAIN,         \"getblock\",               &getblock,               {\"blockhash\",\"verbosity|verbose\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getblockhash\",           &getblockhash,           {\"height\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getblockheader\",         &getblockheader,         {\"blockhash\",\"verbose\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getchaintips\",           &getchaintips,           {} },\n+    { RPCCategory::BLOCKCHAIN,         \"getdifficulty\",          &getdifficulty,          {} },\n+    { RPCCategory::BLOCKCHAIN,         \"getmempoolancestors\",    &getmempoolancestors,    {\"txid\",\"verbose\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getmempooldescendants\",  &getmempooldescendants,  {\"txid\",\"verbose\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getmempoolentry\",        &getmempoolentry,        {\"txid\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"getmempoolinfo\",         &getmempoolinfo,         {} },\n+    { RPCCategory::BLOCKCHAIN,         \"getrawmempool\",          &getrawmempool,          {\"verbose\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"gettxout\",               &gettxout,               {\"txid\",\"n\",\"include_mempool\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"gettxoutsetinfo\",        &gettxoutsetinfo,        {} },\n+    { RPCCategory::BLOCKCHAIN,         \"pruneblockchain\",        &pruneblockchain,        {\"height\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"savemempool\",            &savemempool,            {} },\n+    { RPCCategory::BLOCKCHAIN,         \"verifychain\",            &verifychain,            {\"checklevel\",\"nblocks\"} },\n+\n+    { RPCCategory::BLOCKCHAIN,         \"preciousblock\",          &preciousblock,          {\"blockhash\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"scantxoutset\",           &scantxoutset,           {\"action\", \"scanobjects\"} },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        {\"blockhash\"} },\n-    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        {\"blockhash\"} },\n-    { \"hidden\",             \"waitfornewblock\",        &waitfornewblock,        {\"timeout\"} },\n-    { \"hidden\",             \"waitforblock\",           &waitforblock,           {\"blockhash\",\"timeout\"} },\n-    { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     {\"height\",\"timeout\"} },\n-    { \"hidden\",             \"syncwithvalidationinterfacequeue\", &syncwithvalidationinterfacequeue, {} },\n+    { RPCCategory::HIDDEN,             \"invalidateblock\",        &invalidateblock,        {\"blockhash\"} },\n+    { RPCCategory::HIDDEN,             \"reconsiderblock\",        &reconsiderblock,        {\"blockhash\"} },\n+    { RPCCategory::HIDDEN,             \"waitfornewblock\",        &waitfornewblock,        {\"timeout\"} },\n+    { RPCCategory::HIDDEN,             \"waitforblock\",           &waitforblock,           {\"blockhash\",\"timeout\"} },\n+    { RPCCategory::HIDDEN,             \"waitforblockheight\",     &waitforblockheight,     {\"height\",\"timeout\"} },\n+    { RPCCategory::HIDDEN,             \"syncwithvalidationinterfacequeue\", &syncwithvalidationinterfacequeue, {} },\n };\n \n void RegisterBlockchainRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "e3741b0b84c5525106970d555a43399b9b5a7c2f",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -971,20 +971,19 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       {\"nblocks\",\"height\"} },\n-    { \"mining\",             \"getmininginfo\",          &getmininginfo,          {} },\n-    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  {\"txid\",\"dummy\",\"fee_delta\"} },\n-    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       {\"template_request\"} },\n-    { \"mining\",             \"submitblock\",            &submitblock,            {\"hexdata\",\"dummy\"} },\n-    { \"mining\",             \"submitheader\",           &submitheader,           {\"hexdata\"} },\n+    { RPCCategory::MINING,             \"getnetworkhashps\",       &getnetworkhashps,       {\"nblocks\",\"height\"} },\n+    { RPCCategory::MINING,             \"getmininginfo\",          &getmininginfo,          {} },\n+    { RPCCategory::MINING,             \"prioritisetransaction\",  &prioritisetransaction,  {\"txid\",\"dummy\",\"fee_delta\"} },\n+    { RPCCategory::MINING,             \"getblocktemplate\",       &getblocktemplate,       {\"template_request\"} },\n+    { RPCCategory::MINING,             \"submitblock\",            &submitblock,            {\"hexdata\",\"dummy\"} },\n+    { RPCCategory::MINING,             \"submitheader\",           &submitheader,           {\"hexdata\"} },\n \n+    { RPCCategory::GENERATING,         \"generatetoaddress\",      &generatetoaddress,      {\"nblocks\",\"address\",\"maxtries\"} },\n \n-    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      {\"nblocks\",\"address\",\"maxtries\"} },\n+    { RPCCategory::HIDDEN,             \"estimatefee\",            &estimatefee,            {} },\n+    { RPCCategory::UTIL,               \"estimatesmartfee\",       &estimatesmartfee,       {\"conf_target\", \"estimate_mode\"} },\n \n-    { \"hidden\",             \"estimatefee\",            &estimatefee,            {} },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       {\"conf_target\", \"estimate_mode\"} },\n-\n-    { \"hidden\",             \"estimaterawfee\",         &estimaterawfee,         {\"conf_target\", \"threshold\"} },\n+    { RPCCategory::HIDDEN,             \"estimaterawfee\",         &estimaterawfee,         {\"conf_target\", \"threshold\"} },\n };\n \n void RegisterMiningRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "c44808b6a351bde923bbf7ba011be3afb26e2577",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -459,17 +459,17 @@ static UniValue echo(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          {\"mode\"} },\n-    { \"control\",            \"logging\",                &logging,                {\"include\", \"exclude\"}},\n-    { \"util\",               \"validateaddress\",        &validateaddress,        {\"address\"} }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\"} },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          {\"address\",\"signature\",\"message\"} },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, {\"privkey\",\"message\"} },\n+    { RPCCategory::CONTROL,            \"getmemoryinfo\",          &getmemoryinfo,          {\"mode\"} },\n+    { RPCCategory::CONTROL,            \"logging\",                &logging,                {\"include\", \"exclude\"}},\n+    { RPCCategory::UTIL,               \"validateaddress\",        &validateaddress,        {\"address\"} }, /* uses wallet if enabled */\n+    { RPCCategory::UTIL,               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\"} },\n+    { RPCCategory::UTIL,               \"verifymessage\",          &verifymessage,          {\"address\",\"signature\",\"message\"} },\n+    { RPCCategory::UTIL,               \"signmessagewithprivkey\", &signmessagewithprivkey, {\"privkey\",\"message\"} },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n-    { \"hidden\",             \"echo\",                   &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n-    { \"hidden\",             \"echojson\",               &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { RPCCategory::HIDDEN,             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n+    { RPCCategory::HIDDEN,             \"echo\",                   &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { RPCCategory::HIDDEN,             \"echojson\",               &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n };\n \n void RegisterMiscRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "f5d4dd49eb7d70869c755eac1f86f42456ebc7f9",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -629,18 +629,18 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     {} },\n-    { \"network\",            \"ping\",                   &ping,                   {} },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            {} },\n-    { \"network\",            \"addnode\",                &addnode,                {\"node\",\"command\"} },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         {\"address\", \"nodeid\"} },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       {\"node\"} },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           {} },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         {} },\n-    { \"network\",            \"setban\",                 &setban,                 {\"subnet\", \"command\", \"bantime\", \"absolute\"} },\n-    { \"network\",            \"listbanned\",             &listbanned,             {} },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            {} },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       {\"state\"} },\n+    { RPCCategory::NETWORK,            \"getconnectioncount\",     &getconnectioncount,     {} },\n+    { RPCCategory::NETWORK,            \"ping\",                   &ping,                   {} },\n+    { RPCCategory::NETWORK,            \"getpeerinfo\",            &getpeerinfo,            {} },\n+    { RPCCategory::NETWORK,            \"addnode\",                &addnode,                {\"node\",\"command\"} },\n+    { RPCCategory::NETWORK,            \"disconnectnode\",         &disconnectnode,         {\"address\", \"nodeid\"} },\n+    { RPCCategory::NETWORK,            \"getaddednodeinfo\",       &getaddednodeinfo,       {\"node\"} },\n+    { RPCCategory::NETWORK,            \"getnettotals\",           &getnettotals,           {} },\n+    { RPCCategory::NETWORK,            \"getnetworkinfo\",         &getnetworkinfo,         {} },\n+    { RPCCategory::NETWORK,            \"setban\",                 &setban,                 {\"subnet\", \"command\", \"bantime\", \"absolute\"} },\n+    { RPCCategory::NETWORK,            \"listbanned\",             &listbanned,             {} },\n+    { RPCCategory::NETWORK,            \"clearbanned\",            &clearbanned,            {} },\n+    { RPCCategory::NETWORK,            \"setnetworkactive\",       &setnetworkactive,       {\"state\"} },\n };\n \n void RegisterNetRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "f8b5b80dd33520994394d816571a3cbc816b2765",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -1794,23 +1794,23 @@ UniValue converttopsbt(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                            actor (function)            argNames\n   //  --------------------- ------------------------        -----------------------     ----------\n-    { \"rawtransactions\",    \"getrawtransaction\",            &getrawtransaction,         {\"txid\",\"verbose\",\"blockhash\"} },\n-    { \"rawtransactions\",    \"createrawtransaction\",         &createrawtransaction,      {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n-    { \"rawtransactions\",    \"decoderawtransaction\",         &decoderawtransaction,      {\"hexstring\",\"iswitness\"} },\n-    { \"rawtransactions\",    \"decodescript\",                 &decodescript,              {\"hexstring\"} },\n-    { \"rawtransactions\",    \"sendrawtransaction\",           &sendrawtransaction,        {\"hexstring\",\"allowhighfees\"} },\n-    { \"rawtransactions\",    \"combinerawtransaction\",        &combinerawtransaction,     {\"txs\"} },\n-    { \"rawtransactions\",    \"signrawtransaction\",           &signrawtransaction,        {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n-    { \"rawtransactions\",    \"signrawtransactionwithkey\",    &signrawtransactionwithkey, {\"hexstring\",\"privkeys\",\"prevtxs\",\"sighashtype\"} },\n-    { \"rawtransactions\",    \"testmempoolaccept\",            &testmempoolaccept,         {\"rawtxs\",\"allowhighfees\"} },\n-    { \"rawtransactions\",    \"decodepsbt\",                   &decodepsbt,                {\"psbt\"} },\n-    { \"rawtransactions\",    \"combinepsbt\",                  &combinepsbt,               {\"txs\"} },\n-    { \"rawtransactions\",    \"finalizepsbt\",                 &finalizepsbt,              {\"psbt\", \"extract\"} },\n-    { \"rawtransactions\",    \"createpsbt\",                   &createpsbt,                {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n-    { \"rawtransactions\",    \"converttopsbt\",                &converttopsbt,             {\"hexstring\",\"permitsigdata\",\"iswitness\"} },\n-\n-    { \"blockchain\",         \"gettxoutproof\",                &gettxoutproof,             {\"txids\", \"blockhash\"} },\n-    { \"blockchain\",         \"verifytxoutproof\",             &verifytxoutproof,          {\"proof\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"getrawtransaction\",            &getrawtransaction,         {\"txid\",\"verbose\",\"blockhash\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"createrawtransaction\",         &createrawtransaction,      {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"decoderawtransaction\",         &decoderawtransaction,      {\"hexstring\",\"iswitness\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"decodescript\",                 &decodescript,              {\"hexstring\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"sendrawtransaction\",           &sendrawtransaction,        {\"hexstring\",\"allowhighfees\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"combinerawtransaction\",        &combinerawtransaction,     {\"txs\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"signrawtransaction\",           &signrawtransaction,        {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n+    { RPCCategory::RAWTRANSACTIONS,    \"signrawtransactionwithkey\",    &signrawtransactionwithkey, {\"hexstring\",\"privkeys\",\"prevtxs\",\"sighashtype\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"testmempoolaccept\",            &testmempoolaccept,         {\"rawtxs\",\"allowhighfees\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"decodepsbt\",                   &decodepsbt,                {\"psbt\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"combinepsbt\",                  &combinepsbt,               {\"txs\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"finalizepsbt\",                 &finalizepsbt,              {\"psbt\", \"extract\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"createpsbt\",                   &createpsbt,                {\"inputs\",\"outputs\",\"locktime\",\"replaceable\"} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"converttopsbt\",                &converttopsbt,             {\"hexstring\",\"permitsigdata\",\"iswitness\"} },\n+\n+    { RPCCategory::BLOCKCHAIN,         \"gettxoutproof\",                &gettxoutproof,             {\"txids\", \"blockhash\"} },\n+    { RPCCategory::BLOCKCHAIN,         \"verifytxoutproof\",             &verifytxoutproof,          {\"proof\"} },\n };\n \n void RegisterRawTransactionRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "a148f895312a1d84671eafd57783100975420642",
        "filename": "src/rpc/rpccategory.cpp",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/rpccategory.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/rpccategory.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rpccategory.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -0,0 +1,30 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <rpc/rpccategory.h>\n+\n+#include <cassert>\n+\n+namespace rpccategory\n+{\n+\n+std::string Label(const RPCCategory category)\n+{\n+    switch (category) {\n+        case RPCCategory::BLOCKCHAIN: return \"Blockchain\";\n+        case RPCCategory::CONTROL: return \"Control\";\n+        case RPCCategory::GENERATING: return \"Generating\";\n+        case RPCCategory::HIDDEN: return \"Hidden\";\n+        case RPCCategory::MINING: return \"Mining\";\n+        case RPCCategory::NETWORK: return \"Network\";\n+        case RPCCategory::RAWTRANSACTIONS: return \"Rawtransactions\";\n+        case RPCCategory::UTIL: return \"Util\";\n+        case RPCCategory::WALLET: return \"Wallet\";\n+        case RPCCategory::ZMQ: return \"Zmq\";\n+        case RPCCategory::TEST: return \"Test\";\n+    }\n+    assert(false);\n+}\n+\n+} // namespace rpccategory"
      },
      {
        "sha": "603056d5a9967fb739ebe90e30e86fab940794b6",
        "filename": "src/rpc/rpccategory.h",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/rpccategory.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/rpccategory.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rpccategory.h?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RPC_RPCCATEGORY_H\n+#define BITCOIN_RPC_RPCCATEGORY_H\n+\n+#include <string>\n+\n+enum class RPCCategory\n+{\n+    BLOCKCHAIN,\n+    CONTROL,\n+    GENERATING,\n+    HIDDEN,\n+    MINING,\n+    NETWORK,\n+    RAWTRANSACTIONS,\n+    UTIL,\n+    WALLET,\n+    ZMQ,\n+    TEST\n+};\n+\n+namespace rpccategory\n+{\n+\n+std::string Label(const RPCCategory category);\n+\n+} // namespace rpccategory\n+\n+#endif // BITCOIN_RPC_RPCCATEGORY_H"
      },
      {
        "sha": "cdc02f8f58a2c63bbb55ee5cd7817a6c19990126",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -18,6 +18,7 @@\n #include <boost/signals2/signal.hpp>\n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/split.hpp>\n+#include <boost/optional.hpp>\n \n #include <memory> // for unique_ptr\n #include <unordered_map>\n@@ -152,12 +153,13 @@ std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey)\n std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest& helpreq) const\n {\n     std::string strRet;\n-    std::string category;\n+    boost::optional<RPCCategory> category;\n+\n     std::set<rpcfn_type> setDone;\n     std::vector<std::pair<std::string, const CRPCCommand*> > vCommands;\n \n     for (const auto& entry : mapCommands)\n-        vCommands.push_back(make_pair(entry.second->category + entry.first, entry.second));\n+        vCommands.emplace_back(rpccategory::Label(entry.second->category) + entry.first, entry.second);\n     sort(vCommands.begin(), vCommands.end());\n \n     JSONRPCRequest jreq(helpreq);\n@@ -168,7 +170,7 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n     {\n         const CRPCCommand *pcmd = command.second;\n         std::string strMethod = pcmd->name;\n-        if ((strCommand != \"\" || pcmd->category == \"hidden\") && strMethod != strCommand)\n+        if ((strCommand != \"\" || pcmd->category == RPCCategory::HIDDEN) && strMethod != strCommand)\n             continue;\n         jreq.strMethod = strMethod;\n         try\n@@ -188,10 +190,10 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n \n                 if (category != pcmd->category)\n                 {\n-                    if (!category.empty())\n+                    if (category)\n                         strRet += \"\\n\";\n                     category = pcmd->category;\n-                    strRet += \"== \" + Capitalize(category) + \" ==\\n\";\n+                    strRet += \"== \" + rpccategory::Label(*category) + \" ==\\n\";\n                 }\n             }\n             strRet += strHelp + \"\\n\";\n@@ -259,9 +261,9 @@ static const CRPCCommand vRPCCommands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n     /* Overall control/query calls */\n-    { \"control\",            \"help\",                   &help,                   {\"command\"}  },\n-    { \"control\",            \"stop\",                   &stop,                   {}  },\n-    { \"control\",            \"uptime\",                 &uptime,                 {}  },\n+    { RPCCategory::CONTROL,            \"help\",                   &help,                   {\"command\"}  },\n+    { RPCCategory::CONTROL,            \"stop\",                   &stop,                   {}  },\n+    { RPCCategory::CONTROL,            \"uptime\",                 &uptime,                 {}  },\n };\n \n CRPCTable::CRPCTable()"
      },
      {
        "sha": "931fd5ab9203e4769573f45ab5d40a2961e5dcbe",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -8,6 +8,8 @@\n \n #include <amount.h>\n #include <rpc/protocol.h>\n+#include <rpc/rpccategory.h>\n+\n #include <uint256.h>\n \n #include <list>\n@@ -131,10 +133,10 @@ typedef UniValue(*rpcfn_type)(const JSONRPCRequest& jsonRequest);\n class CRPCCommand\n {\n public:\n-    std::string category;\n-    std::string name;\n-    rpcfn_type actor;\n-    std::vector<std::string> argNames;\n+    const RPCCategory category;\n+    const std::string name;\n+    const rpcfn_type actor;\n+    const std::vector<std::string> argNames;\n };\n \n /**"
      },
      {
        "sha": "088756067fcea8cd1c72ff1ae27aa3385478d262",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 56,
        "deletions": 56,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -4096,62 +4096,62 @@ UniValue importmulti(const JSONRPCRequest& request);\n static const CRPCCommand commands[] =\n { //  category              name                                actor (function)                argNames\n     //  --------------------- ------------------------          -----------------------         ----------\n-    { \"generating\",         \"generate\",                         &generate,                      {\"nblocks\",\"maxtries\"} },\n-    { \"hidden\",             \"addwitnessaddress\",                &addwitnessaddress,             {\"address\",\"p2sh\"} },\n-    { \"hidden\",             \"resendwallettransactions\",         &resendwallettransactions,      {} },\n-    { \"rawtransactions\",    \"fundrawtransaction\",               &fundrawtransaction,            {\"hexstring\",\"options\",\"iswitness\"} },\n-    { \"wallet\",             \"abandontransaction\",               &abandontransaction,            {\"txid\"} },\n-    { \"wallet\",             \"abortrescan\",                      &abortrescan,                   {} },\n-    { \"wallet\",             \"addmultisigaddress\",               &addmultisigaddress,            {\"nrequired\",\"keys\",\"label\",\"address_type\"} },\n-    { \"wallet\",             \"backupwallet\",                     &backupwallet,                  {\"destination\"} },\n-    { \"wallet\",             \"bumpfee\",                          &bumpfee,                       {\"txid\", \"options\"} },\n-    { \"wallet\",             \"createwallet\",                     &createwallet,                  {\"wallet_name\", \"disable_private_keys\"} },\n-    { \"wallet\",             \"dumpprivkey\",                      &dumpprivkey,                   {\"address\"}  },\n-    { \"wallet\",             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n-    { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },\n-    { \"wallet\",             \"getaddressesbylabel\",              &getaddressesbylabel,           {\"label\"} },\n-    { \"wallet\",             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },\n-    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"dummy\",\"minconf\",\"include_watchonly\"} },\n-    { \"wallet\",             \"getnewaddress\",                    &getnewaddress,                 {\"label\",\"address_type\"} },\n-    { \"wallet\",             \"getrawchangeaddress\",              &getrawchangeaddress,           {\"address_type\"} },\n-    { \"wallet\",             \"getreceivedbyaddress\",             &getreceivedbyaddress,          {\"address\",\"minconf\"} },\n-    { \"wallet\",             \"getreceivedbylabel\",               &getreceivedbylabel,            {\"label\",\"minconf\"} },\n-    { \"wallet\",             \"gettransaction\",                   &gettransaction,                {\"txid\",\"include_watchonly\"} },\n-    { \"wallet\",             \"getunconfirmedbalance\",            &getunconfirmedbalance,         {} },\n-    { \"wallet\",             \"getwalletinfo\",                    &getwalletinfo,                 {} },\n-    { \"wallet\",             \"importaddress\",                    &importaddress,                 {\"address\",\"label\",\"rescan\",\"p2sh\"} },\n-    { \"wallet\",             \"importmulti\",                      &importmulti,                   {\"requests\",\"options\"} },\n-    { \"wallet\",             \"importprivkey\",                    &importprivkey,                 {\"privkey\",\"label\",\"rescan\"} },\n-    { \"wallet\",             \"importprunedfunds\",                &importprunedfunds,             {\"rawtransaction\",\"txoutproof\"} },\n-    { \"wallet\",             \"importpubkey\",                     &importpubkey,                  {\"pubkey\",\"label\",\"rescan\"} },\n-    { \"wallet\",             \"importwallet\",                     &importwallet,                  {\"filename\"} },\n-    { \"wallet\",             \"keypoolrefill\",                    &keypoolrefill,                 {\"newsize\"} },\n-    { \"wallet\",             \"listaddressgroupings\",             &listaddressgroupings,          {} },\n-    { \"wallet\",             \"listlabels\",                       &listlabels,                    {\"purpose\"} },\n-    { \"wallet\",             \"listlockunspent\",                  &listlockunspent,               {} },\n-    { \"wallet\",             \"listreceivedbyaddress\",            &listreceivedbyaddress,         {\"minconf\",\"include_empty\",\"include_watchonly\",\"address_filter\"} },\n-    { \"wallet\",             \"listreceivedbylabel\",              &listreceivedbylabel,           {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listsinceblock\",                   &listsinceblock,                {\"blockhash\",\"target_confirmations\",\"include_watchonly\",\"include_removed\"} },\n-    { \"wallet\",             \"listtransactions\",                 &listtransactions,              {\"dummy\",\"count\",\"skip\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listunspent\",                      &listunspent,                   {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n-    { \"wallet\",             \"listwallets\",                      &listwallets,                   {} },\n-    { \"wallet\",             \"loadwallet\",                       &loadwallet,                    {\"filename\"} },\n-    { \"wallet\",             \"lockunspent\",                      &lockunspent,                   {\"unlock\",\"transactions\"} },\n-    { \"wallet\",             \"removeprunedfunds\",                &removeprunedfunds,             {\"txid\"} },\n-    { \"wallet\",             \"rescanblockchain\",                 &rescanblockchain,              {\"start_height\", \"stop_height\"} },\n-    { \"wallet\",             \"sendmany\",                         &sendmany,                      {\"dummy\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n-    { \"wallet\",             \"sendtoaddress\",                    &sendtoaddress,                 {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n-    { \"wallet\",             \"sethdseed\",                        &sethdseed,                     {\"newkeypool\",\"seed\"} },\n-    { \"wallet\",             \"setlabel\",                         &setlabel,                      {\"address\",\"label\"} },\n-    { \"wallet\",             \"settxfee\",                         &settxfee,                      {\"amount\"} },\n-    { \"wallet\",             \"signmessage\",                      &signmessage,                   {\"address\",\"message\"} },\n-    { \"wallet\",             \"signrawtransactionwithwallet\",     &signrawtransactionwithwallet,  {\"hexstring\",\"prevtxs\",\"sighashtype\"} },\n-    { \"wallet\",             \"unloadwallet\",                     &unloadwallet,                  {\"wallet_name\"} },\n-    { \"wallet\",             \"walletcreatefundedpsbt\",           &walletcreatefundedpsbt,        {\"inputs\",\"outputs\",\"locktime\",\"options\",\"bip32derivs\"} },\n-    { \"wallet\",             \"walletlock\",                       &walletlock,                    {} },\n-    { \"wallet\",             \"walletpassphrase\",                 &walletpassphrase,              {\"passphrase\",\"timeout\"} },\n-    { \"wallet\",             \"walletpassphrasechange\",           &walletpassphrasechange,        {\"oldpassphrase\",\"newpassphrase\"} },\n-    { \"wallet\",             \"walletprocesspsbt\",                &walletprocesspsbt,             {\"psbt\",\"sign\",\"sighashtype\",\"bip32derivs\"} },\n+    { RPCCategory::GENERATING,         \"generate\",                         &generate,                      {\"nblocks\",\"maxtries\"} },\n+    { RPCCategory::HIDDEN,             \"addwitnessaddress\",                &addwitnessaddress,             {\"address\",\"p2sh\"} },\n+    { RPCCategory::HIDDEN,             \"resendwallettransactions\",         &resendwallettransactions,      {} },\n+    { RPCCategory::RAWTRANSACTIONS,    \"fundrawtransaction\",               &fundrawtransaction,            {\"hexstring\",\"options\",\"iswitness\"} },\n+    { RPCCategory::WALLET,             \"abandontransaction\",               &abandontransaction,            {\"txid\"} },\n+    { RPCCategory::WALLET,             \"abortrescan\",                      &abortrescan,                   {} },\n+    { RPCCategory::WALLET,             \"addmultisigaddress\",               &addmultisigaddress,            {\"nrequired\",\"keys\",\"label\",\"address_type\"} },\n+    { RPCCategory::WALLET,             \"backupwallet\",                     &backupwallet,                  {\"destination\"} },\n+    { RPCCategory::WALLET,             \"bumpfee\",                          &bumpfee,                       {\"txid\", \"options\"} },\n+    { RPCCategory::WALLET,             \"createwallet\",                     &createwallet,                  {\"wallet_name\", \"disable_private_keys\"} },\n+    { RPCCategory::WALLET,             \"dumpprivkey\",                      &dumpprivkey,                   {\"address\"}  },\n+    { RPCCategory::WALLET,             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n+    { RPCCategory::WALLET,             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },\n+    { RPCCategory::WALLET,             \"getaddressesbylabel\",              &getaddressesbylabel,           {\"label\"} },\n+    { RPCCategory::WALLET,             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },\n+    { RPCCategory::WALLET,             \"getbalance\",                       &getbalance,                    {\"dummy\",\"minconf\",\"include_watchonly\"} },\n+    { RPCCategory::WALLET,             \"getnewaddress\",                    &getnewaddress,                 {\"label\",\"address_type\"} },\n+    { RPCCategory::WALLET,             \"getrawchangeaddress\",              &getrawchangeaddress,           {\"address_type\"} },\n+    { RPCCategory::WALLET,             \"getreceivedbyaddress\",             &getreceivedbyaddress,          {\"address\",\"minconf\"} },\n+    { RPCCategory::WALLET,             \"getreceivedbylabel\",               &getreceivedbylabel,            {\"label\",\"minconf\"} },\n+    { RPCCategory::WALLET,             \"gettransaction\",                   &gettransaction,                {\"txid\",\"include_watchonly\"} },\n+    { RPCCategory::WALLET,             \"getunconfirmedbalance\",            &getunconfirmedbalance,         {} },\n+    { RPCCategory::WALLET,             \"getwalletinfo\",                    &getwalletinfo,                 {} },\n+    { RPCCategory::WALLET,             \"importaddress\",                    &importaddress,                 {\"address\",\"label\",\"rescan\",\"p2sh\"} },\n+    { RPCCategory::WALLET,             \"importmulti\",                      &importmulti,                   {\"requests\",\"options\"} },\n+    { RPCCategory::WALLET,             \"importprivkey\",                    &importprivkey,                 {\"privkey\",\"label\",\"rescan\"} },\n+    { RPCCategory::WALLET,             \"importprunedfunds\",                &importprunedfunds,             {\"rawtransaction\",\"txoutproof\"} },\n+    { RPCCategory::WALLET,             \"importpubkey\",                     &importpubkey,                  {\"pubkey\",\"label\",\"rescan\"} },\n+    { RPCCategory::WALLET,             \"importwallet\",                     &importwallet,                  {\"filename\"} },\n+    { RPCCategory::WALLET,             \"keypoolrefill\",                    &keypoolrefill,                 {\"newsize\"} },\n+    { RPCCategory::WALLET,             \"listaddressgroupings\",             &listaddressgroupings,          {} },\n+    { RPCCategory::WALLET,             \"listlabels\",                       &listlabels,                    {\"purpose\"} },\n+    { RPCCategory::WALLET,             \"listlockunspent\",                  &listlockunspent,               {} },\n+    { RPCCategory::WALLET,             \"listreceivedbyaddress\",            &listreceivedbyaddress,         {\"minconf\",\"include_empty\",\"include_watchonly\",\"address_filter\"} },\n+    { RPCCategory::WALLET,             \"listreceivedbylabel\",              &listreceivedbylabel,           {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n+    { RPCCategory::WALLET,             \"listsinceblock\",                   &listsinceblock,                {\"blockhash\",\"target_confirmations\",\"include_watchonly\",\"include_removed\"} },\n+    { RPCCategory::WALLET,             \"listtransactions\",                 &listtransactions,              {\"dummy\",\"count\",\"skip\",\"include_watchonly\"} },\n+    { RPCCategory::WALLET,             \"listunspent\",                      &listunspent,                   {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\",\"query_options\"} },\n+    { RPCCategory::WALLET,             \"listwallets\",                      &listwallets,                   {} },\n+    { RPCCategory::WALLET,             \"loadwallet\",                       &loadwallet,                    {\"filename\"} },\n+    { RPCCategory::WALLET,             \"lockunspent\",                      &lockunspent,                   {\"unlock\",\"transactions\"} },\n+    { RPCCategory::WALLET,             \"removeprunedfunds\",                &removeprunedfunds,             {\"txid\"} },\n+    { RPCCategory::WALLET,             \"rescanblockchain\",                 &rescanblockchain,              {\"start_height\", \"stop_height\"} },\n+    { RPCCategory::WALLET,             \"sendmany\",                         &sendmany,                      {\"dummy\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n+    { RPCCategory::WALLET,             \"sendtoaddress\",                    &sendtoaddress,                 {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n+    { RPCCategory::WALLET,             \"sethdseed\",                        &sethdseed,                     {\"newkeypool\",\"seed\"} },\n+    { RPCCategory::WALLET,             \"setlabel\",                         &setlabel,                      {\"address\",\"label\"} },\n+    { RPCCategory::WALLET,             \"settxfee\",                         &settxfee,                      {\"amount\"} },\n+    { RPCCategory::WALLET,             \"signmessage\",                      &signmessage,                   {\"address\",\"message\"} },\n+    { RPCCategory::WALLET,             \"signrawtransactionwithwallet\",     &signrawtransactionwithwallet,  {\"hexstring\",\"prevtxs\",\"sighashtype\"} },\n+    { RPCCategory::WALLET,             \"unloadwallet\",                     &unloadwallet,                  {\"wallet_name\"} },\n+    { RPCCategory::WALLET,             \"walletcreatefundedpsbt\",           &walletcreatefundedpsbt,        {\"inputs\",\"outputs\",\"locktime\",\"options\",\"bip32derivs\"} },\n+    { RPCCategory::WALLET,             \"walletlock\",                       &walletlock,                    {} },\n+    { RPCCategory::WALLET,             \"walletpassphrase\",                 &walletpassphrase,              {\"passphrase\",\"timeout\"} },\n+    { RPCCategory::WALLET,             \"walletpassphrasechange\",           &walletpassphrasechange,        {\"oldpassphrase\",\"newpassphrase\"} },\n+    { RPCCategory::WALLET,             \"walletprocesspsbt\",                &walletprocesspsbt,             {\"psbt\",\"sign\",\"sighashtype\",\"bip32derivs\"} },\n };\n \n void RegisterWalletRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "36a075094472c47e412b71f7323117a52b566346",
        "filename": "src/zmq/zmqrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/src/zmq/zmqrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/src/zmq/zmqrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqrpc.cpp?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -48,7 +48,7 @@ UniValue getzmqnotifications(const JSONRPCRequest& request)\n const CRPCCommand commands[] =\n { //  category              name                                actor (function)                argNames\n   //  -----------------     ------------------------            -----------------------         ----------\n-    { \"zmq\",                \"getzmqnotifications\",              &getzmqnotifications,           {} },\n+    { RPCCategory::ZMQ,                \"getzmqnotifications\",              &getzmqnotifications,           {} },\n };\n \n } // anonymous namespace"
      },
      {
        "sha": "7f169f1e53f0b9f068d63032eb90beaaedf4000f",
        "filename": "test/lint/check-rpc-mappings.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7437c56362b20136cfee47d88c1c2608c77cd86/test/lint/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7437c56362b20136cfee47d88c1c2608c77cd86/test/lint/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/check-rpc-mappings.py?ref=a7437c56362b20136cfee47d88c1c2608c77cd86",
        "patch": "@@ -54,7 +54,7 @@ def process_commands(fname):\n                 if line.startswith('};'):\n                     in_rpcs = False\n                 elif '{' in line and '\"' in line:\n-                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    m = re.search('{ *([A-Za-z]*::[A-Z]*), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n                     assert m, 'No match to table expression: %s' % line\n                     name = parse_string(m.group(2))\n                     args_str = m.group(4).strip()"
      }
    ]
  },
  {
    "sha": "04e70f2e2576ec35d9a08ec450b2aaf3956475ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNGU3MGYyZTI1NzZlYzM1ZDlhMDhlYzQ1MGIyYWFmMzk1NjQ3NWVm",
    "commit": {
      "author": {
        "name": "Isidoro Ghezzi",
        "email": "isidoro.ghezzi@icloud.com",
        "date": "2018-08-20T19:19:42Z"
      },
      "committer": {
        "name": "Isidoro Ghezzi",
        "email": "isidoro.ghezzi@icloud.com",
        "date": "2018-08-30T14:50:48Z"
      },
      "message": "class CRPCCommand to struct CRPCCommand\n\nremoved also an un unnecessary forward declaration",
      "tree": {
        "sha": "aabf504cf467c54ce3a2fc6afc433620ded823a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aabf504cf467c54ce3a2fc6afc433620ded823a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04e70f2e2576ec35d9a08ec450b2aaf3956475ef",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEBqFy6+0+b1lSMxmElx4feYC7PesFAluIBEkACgkQlx4feYC7\nPevRJxAAjZZyahNxtX9tZUEXvHc9BMGjtw2iLfjqFBrFI/CLQhsEcg/u6Y9RIzv5\nYrdGg1MPo287VWQdEPx3hVg+XPHLGpv8l/hst2wDG9MB8/HIyvU2cY3LwfqUucop\nt0wCsOQ2pbY9HjwMK8U0XGIjJweMuBH4VvF/LKfVtdq8zO5CDoed5xWJUrp6d8oX\nyap3GuNFxcH/Yqswz8hYlg22hHGzHs2x6ni/r+pNUNAZNahtzsi88mK6BucjoIx2\nlEZjj17ez+jKuj313Aikw2qONclSyC/CnLsNd85R9lORSKRv9uT4x1V9eTytqYh1\nTntSVamyGLFrBnRTp64pP47LQd8E8EhdXq21pAwj2g2nAevQtb3c9Vk3fki/F1jM\ny2lSUNbdPQVdmJ0dfmAq088Yt4MQaiTue1EIffkduaJYdgYds6jrR5BRIeo7mbRa\nbW64zX1qQLYgAQHOs6pix5ngiQ9bv+UvOm4A8577vhK9Is6hkDreTT/9TJCgb7D4\n5hgF1//KD8nPYkDWuBCVG5xkqPs0udzFYW0k9BTddQcH9q2MSan1UZHrMHWT6knl\nE+mWVDgUPOvo4VzaRtRjZ89QvSNJGYC+OeDazQPIA2Z6fndlH1W6BcPIfH+GBogw\n/5rqBVjvCG3vBfcBLdN9mZjJhr1gsZhRpBshAfadGXYv3h9ZYW0=\n=qR4O\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEQHE6Wc8pyrpXEkJGglVIFrevMHXfFXF1PZ1OvaDo1BCP/wEE/A6KLF2Xsq\nX/YMio0R84wI8QRbiARJ8Agav9LIWpe9tACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIXoUNyamQvU7SvYYKvD\nEegI8BB02dh+HR3gsoAiGs8eRa40CPEEW4gESvAI8q3BLrb3nX4Ag9/jDS75DI4p\nKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23wEPTmRhYs\n0Gpcv0nqgqdjKpoI8QRbiARK8AjBCcNoBMpi6QCD3+MNLvkMji4taHR0cHM6Ly9h\nbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree aabf504cf467c54ce3a2fc6afc433620ded823a7\nparent a7437c56362b20136cfee47d88c1c2608c77cd86\nauthor Isidoro Ghezzi <isidoro.ghezzi@icloud.com> 1534792782 +0200\ncommitter Isidoro Ghezzi <isidoro.ghezzi@icloud.com> 1535640648 +0200\n\nclass CRPCCommand to struct CRPCCommand\n\nremoved also an un unnecessary forward declaration\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04e70f2e2576ec35d9a08ec450b2aaf3956475ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04e70f2e2576ec35d9a08ec450b2aaf3956475ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04e70f2e2576ec35d9a08ec450b2aaf3956475ef/comments",
    "author": {
      "login": "isghe",
      "id": 1006078,
      "node_id": "MDQ6VXNlcjEwMDYwNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1006078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isghe",
      "html_url": "https://github.com/isghe",
      "followers_url": "https://api.github.com/users/isghe/followers",
      "following_url": "https://api.github.com/users/isghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/isghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isghe/subscriptions",
      "organizations_url": "https://api.github.com/users/isghe/orgs",
      "repos_url": "https://api.github.com/users/isghe/repos",
      "events_url": "https://api.github.com/users/isghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "isghe",
      "id": 1006078,
      "node_id": "MDQ6VXNlcjEwMDYwNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1006078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isghe",
      "html_url": "https://github.com/isghe",
      "followers_url": "https://api.github.com/users/isghe/followers",
      "following_url": "https://api.github.com/users/isghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/isghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isghe/subscriptions",
      "organizations_url": "https://api.github.com/users/isghe/orgs",
      "repos_url": "https://api.github.com/users/isghe/repos",
      "events_url": "https://api.github.com/users/isghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7437c56362b20136cfee47d88c1c2608c77cd86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7437c56362b20136cfee47d88c1c2608c77cd86",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7437c56362b20136cfee47d88c1c2608c77cd86"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "d52d71c3896cdbf57fc2be74fe9f0e7c71b68394",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04e70f2e2576ec35d9a08ec450b2aaf3956475ef/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04e70f2e2576ec35d9a08ec450b2aaf3956475ef/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=04e70f2e2576ec35d9a08ec450b2aaf3956475ef",
        "patch": "@@ -21,8 +21,6 @@\n \n static const unsigned int DEFAULT_RPC_SERIALIZE_VERSION = 1;\n \n-class CRPCCommand;\n-\n namespace RPCServer\n {\n     void OnStarted(std::function<void ()> slot);\n@@ -130,9 +128,8 @@ void RPCRunLater(const std::string& name, std::function<void(void)> func, int64_\n \n typedef UniValue(*rpcfn_type)(const JSONRPCRequest& jsonRequest);\n \n-class CRPCCommand\n+struct CRPCCommand\n {\n-public:\n     const RPCCategory category;\n     const std::string name;\n     const rpcfn_type actor;"
      }
    ]
  }
]