DrahtBot,2019-11-08 01:52:12,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-551348174,551348174,
laanwj,2019-11-08 07:23:53,"Code review ACK fab9850ef4a76e4f09278909a2865e5175661653\n(haven't tested build determinism yet)",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-551416374,551416374,
MarcoFalke,2019-11-08 13:26:29,Note that this requires a gbuild that includes this patch: https://github.com/devrandom/gitian-builder/pull/223,https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-551790233,551790233,
fanquake,2019-11-08 16:41:45,"> Note that this requires a gbuild that includes this patch:\n\nSo should this get a mention in our docs somewhere, if you've bumped the minimum required version of gitian-builder?",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-551900837,551900837,
MarcoFalke,2019-11-08 16:47:28,"> docs somewhere\n\nI don't think we have docs somewhere that document the minimum required version of gitian. Also, gitian is not versioned, and as long as the diff is applied to your local clone of gitian, the build should succeed.",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-551903007,551903007,
MarcoFalke,2019-11-08 18:44:52,"@fanquake We don't officially support versions that are not the latest version:\n\nhttps://github.com/bitcoin/bitcoin/blame/8021392b825c74312173f15eb937ba6d4aec3841/contrib/gitian-build.py#L245\nhttps://github.com/bitcoin/bitcoin/blame/8021392b825c74312173f15eb937ba6d4aec3841/doc/release-process.md#L112\n\nSo I think this is ready for merge (assuming DrahtBot and other peoples build succeed)",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-551944709,551944709,
laanwj,2019-11-08 20:36:20,"I think the implicit requirement is to use the latest version of gitian-builder for new releases (I mean, latest commit). This is likely not documented anywhere,but it has always been the case ",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-551980922,551980922,
DrahtBot,2019-11-09 03:27:54,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 8021392b825c74312173f15eb937ba6d4aec3841<br>(master) | commit 06adecb26a21fa027bb3241a5c065974ab9a6ccd<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`d30ccb3bc3e2b17f...`](https://drahtbot.space/gitian/bitcoin/bitcoin/8021392b825c74312173f15eb937ba6d4aec3841/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552061576,552061576,
fanquake,2019-11-09 14:55:06,"> I think the implicit requirement is to use the latest version of gitian-builder for new releases\n\nOk. I feel like at one point we might have specified only a minimum bound, but I can't find any record of it.\n\nUpstream https://github.com/devrandom/gitian-builder/pull/223 has now been merged.",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552107552,552107552,
DrahtBot,2019-11-09 20:47:12,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit a7aec7ad97949a82f870c033d8fd8b65d772eacb<br>(master) | commit 25c136d30e54a8d748a2f7a0385bc3d0cfcea809<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`2ded8805929bee45...`](https://drahtbot.space/gitian/bitcoin/bitcoin/a7aec7ad97949a82f870c033d8fd8b65d772eacb/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552135910,552135910,
laanwj,2019-11-10 10:16:40,The two above gitian builds don't seem to match :cry: ,https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552181300,552181300,
MarcoFalke,2019-11-10 14:12:11,"What do you mean they don't match? The commit hashes are different, so all builds must differ as well.",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552198423,552198423,
laanwj,2019-11-10 14:20:45,"Oh, I thought you were trying to show determinism by running gitian-builder twice on the same commit.",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552199106,552199106,
MarcoFalke,2019-11-12 01:51:01,"I ran it on the same commit as DrahtBot and got a match for osx: (linux and windows didn't compile due to #17323 )\n\n```\n$ sha256sum ./scratch/gitian/bitcoin-binaries/25c136d3/*\n1e63e8af030e810f6fced9b494274ee5821781687ce3a302730cead48dfd44bf  ./scratch/gitian/bitcoin-binaries/25c136d3/bitcoin-0.19.99-osx64.tar.gz\ned6a358f1b7fa39712174981c9e211e7288801e0711e3be4f6bd4c82f8b0cc66  ./scratch",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552697172,552697172,
dongcarl,2019-11-12 16:55:28,Could you add a comment about `$LIB` being interpreted in a special way by `LD_PRELOAD`?,https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552983973,552983973,
MarcoFalke,2019-11-12 17:09:01,Done,https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-552990500,552990500,
laanwj,2019-11-12 18:22:29,"ACK fab9850ef4a76e4f09278909a2865e5175661653, ran two -linux builds and they match\nACK 333362991c5219e6d9ede5fa54328bcbb0277cf2\n```\n156d83b11f469a2b4d0f2f6e2e926ec5527a893178fa0b029e62acb030990622  bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz\n357a099db4ca37f1076c9d88cacc64b0b905d84305c89d014277ad3c274388a7  bitcoin-0.19.99-aarch64-linux-gnu.tar.gz\n44a02d1397312e16f6a029b0a3429ff617e1e1",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-553031143,553031143,
MarcoFalke,2019-11-12 23:41:20,"Compiled windows and it matches yours as well:\n\n\n```\nCompiling fab9850 Windows\n--- Building for bionic linux64 ---\nStopping target if it is up\nMaking a new image copy\nStarting target\nChecking if target is up.\nPreparing build environment\nUpdating apt-get repository (log in var/install.log)\nInstalling additional packages (log in var/install.log)\nUpgrading system, may take a",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-553168610,553168610,
MarcoFalke,2019-11-13 21:08:32,"The build on my arm64 with a single thread just completed:\n\n```\nCompiling fab9850ef4a76e4f09278909a2865e5175661653 Windows\n--- Building for bionic linux64 ---\nStopping target if it is up\nMaking a new image copy\nStarting target\nChecking if target is up..\nPreparing build environment\nUpdating apt-get repository (log in var/install.log)\nInstalling additional packages (log in var/",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-553603077,553603077,
jonasschnelli,2019-11-14 21:49:29,Does this outdate the docs: https://github.com/bitcoin-core/docs/blob/master/gitian-building/gitian-building-setup-gitian-debian.md#setting-up-the-gitian-image?,https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554096086,554096086,
MarcoFalke,2019-11-14 21:58:29,"Yes, they will need to be fixed up",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554099492,554099492,
jonasschnelli,2019-11-14 21:58:51,"I guess this requires a new base image?\nUsing the newest gitian master that includes (https://github.com/devrandom/gitian-builder/pull/223) calling ` bin/make-base-vm --lxc --arch linux64 --suite bionic` results on my end in: \n\n```\nE: Invalid Release file, no entry for main/binary-linux64/Packages\n```",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554099626,554099626,
MarcoFalke,2019-11-14 22:07:24,"Ok, it might be better to just revert this pull request and give up on getting this run on non-amd64",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554102711,554102711,
laanwj,2019-11-15 09:17:50,"No, it isn't necessary to generate a new image. `linux64` is an abstract name, the concrete build arch is still the same. What I did was just symlink the old base image. After that, the LXC build worked.\n\n>  bin/make-base-vm --lxc --arch linux64 --suite bionic \n\nThe LXC parameters should be kept the same, there is no architecture-independent release of ubuntu :smile: ",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554279075,554279075,
MarcoFalke,2019-11-15 13:31:51,">  What I did was just symlink the old base image. \n\nYes, that works, but is clumsy. At the very least the instructions should be updated to include this step.",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554359378,554359378,
laanwj,2019-11-15 15:14:27,"Well, less clumsy than waiting half an hour to generate a new base image, but sureâ€¦\nI think ideally gitian should pick the right base image for the platform automatically.",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554397656,554397656,
jonasschnelli,2019-11-15 22:45:50,"I can confirm that a symlink helps.\nBut how should new (or existing) gitian builder figure that out?",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554558477,554558477,
MarcoFalke,2019-11-15 22:53:50,"Yeah, either\n\n* the docs need to be updated, or\n* gitian-builder needs to be made smarter, or\n*  the change needs to be reverted",https://github.com/bitcoin/bitcoin/pull/17409#issuecomment-554560572,554560572,
laanwj,2019-11-08 00:53:46,"Concept ACK\n\nCould maybe assign the native architecture to a variable once at the beginning of the script (maybe print it for diagnostics), the use that every time. Invoking this detection every time seems a bit wasteful.",https://github.com/bitcoin/bitcoin/pull/17409#discussion_r343947424,343947424,contrib/gitian-descriptors/gitian-win.yml
laanwj,2019-11-08 01:03:31,"BTW, what faketime itself seems to do is\n`LD_PRELOAD='/usr/$LIB/faketime/libfaketime.so.1' `\nis this a trick, does the dynamic linker interpret a literal $LIB?\n\n(found this out with\n```\n$ faketime 0 'sh' '-c' env |grep LD_PRELOAD\nLD_PRELOAD=/usr/$LIB/faketime/libfaketime.so.1\n```\n)\nif that works there's no need for guessing! \napparently it is documented: from `man ld.so`:\n`",https://github.com/bitcoin/bitcoin/pull/17409#discussion_r343949555,343949555,contrib/gitian-descriptors/gitian-win.yml
MarcoFalke,2019-11-08 03:25:37,"thanks, done",https://github.com/bitcoin/bitcoin/pull/17409#discussion_r343975754,343975754,contrib/gitian-descriptors/gitian-win.yml
