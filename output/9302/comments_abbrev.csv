jonasschnelli,2016-12-08T19:54:00Z,"utACK a0728ccebb155b09cc537c88275662e33c1ab675\nWould be nice if someone could write a test for this.",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-265837943,265837943,
morcos,2016-12-08T21:01:28Z,"utACK b3a7410\n\nI think this needs release notes documenting the change in behavior.\n\nFor 0.14.0 (not backport) we should also consider how to pass on the information on whether the tx was accepted to the mempool and if not why not?",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-265854226,265854226,
gmaxwell,2016-12-08T22:50:58Z,"utACK. Will test.\n\n@morcos  the listtransaction output tells you if the transaction is currently in the mempool, and we log the rejection. Is that covering a lot of your thinking?\n",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-265879696,265879696,
luke-jr,2016-12-09T00:42:50Z,"utACK. It may make sense to move broadcasting outside of CommitTransaction entirely, but this is good enough for now (and backport).",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-265900122,265900122,
sdaftuar,2016-12-09T13:46:39Z,"ACK b3a74100b86423c553ac327f3ea6fdbc2c50890a, wrote up a quick test to exercise the logic (EDIT: note that this test is no good to merge, as #9262 may require it to be rewritten):\n\n```\ndiff --git a/qa/rpc-tests/wallet.py b/qa/rpc-tests/wallet.py\nindex 3c0dc0f..6435f00 100755\n--- a/qa/rpc-tests/wallet.py\n+++ b/qa/rpc-tests/wallet.py\n@@ -346,5 +346,18 @@ class WalletTest (BitcoinTestFr",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266017276,266017276,
morcos,2016-12-09T15:35:02Z,"@gmaxwell No, I mean more than that. I think it would be good to inform the user that for some reason his transaction has not be accepted to the mempool.  Perhaps there is no good way to do this without breaking the RPC API, but at the very least we could do it from the GUI.\n\nBut to be clear, I do not think that should be a blocker for this.  I'll agree that this is an improvement, I just thin",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266042728,266042728,
gmaxwell,2016-12-09T17:13:54Z,"ACK\n\n",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266068535,266068535,
CodeShark,2016-12-11T08:57:15Z,ACK,https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266270824,266270824,
MarcoFalke,2016-12-11T09:28:45Z,utACK b3a74100b86423c553ac327f3ea6fdbc2c50890a,https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266271942,266271942,
MarcoFalke,2016-12-11T09:34:21Z,"I'd prefer not to merge any test case for this, as a passing test would assert that there is a bug in the code base. Tests are usually written to assert that there are no bugs...",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266272161,266272161,
morcos,2016-12-11T13:37:56Z,@marcofalke what do you mean by that?  There are certainly ways for transactions to not be accepted into the memory pool which aren't bugs and I think it could make sense to verify that a txid is still returned. ,https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266282536,266282536,
MarcoFalke,2016-12-11T14:11:58Z,"@morcos What I mean is that the wallet logic should take care that a transaction is accepted to the mempool. When it is not possible, return early in the wallet logic and don't commit the transaction to the wallet, otherwise it is a bug.\n\nI see the return-txid patch as a temporary workaround and not a solution to the problem. So sure, you could create a unit test to check that a transaction fa",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266284389,266284389,
morcos,2016-12-11T15:51:23Z,"@MarcoFalke ah ok, yes I mostly agree.  However I think that too long chains may end up being an exception to that where we want the wallet to generate and save the transaction even if its not accepted to the mempool.  That's obviously after a best efforts try to create the transaction without a too long chain.\n  \nIn any case, I think we both agree nothing more needed on this PR (but release n",https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266289492,266289492,
instagibbs,2016-12-12T20:16:01Z,@sdaftuar fwiw https://github.com/bitcoin/bitcoin/pull/9262 will no longer change any behavior by default aside from attempt to make shorter chains so that test may be fine,https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266540153,266540153,
instagibbs,2016-12-12T20:17:15Z,utACK b3a74100b86423c553ac327f3ea6fdbc2c50890a,https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266540448,266540448,
paveljanik,2016-12-13T08:58:00Z,utACK https://github.com/bitcoin/bitcoin/commit/b3a74100b86423c553ac327f3ea6fdbc2c50890a,https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266682320,266682320,
MarcoFalke,2016-12-14T12:09:43Z,Backport in #9347 (release notes already merged),https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-267018548,267018548,
