[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89005975",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89005975",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 89005975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MDA1OTc1",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-02T18:44:15Z",
    "updated_at": "2015-04-02T18:44:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "concept ACK\nCScheduler ACK\n- Yes, DumpAddresses thread is a prime candidate for this\n- Ditto ThreadFlushWalletDB\n- Disagree on ThreadImport -- ThreadImport is a prime candidate for something to be executed in a long running thread of its own.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89005975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89008405",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89008405",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 89008405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MDA4NDA1",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-02T18:54:56Z",
    "updated_at": "2015-04-02T18:54:56Z",
    "author_association": "MEMBER",
    "body": "Agree with @jgarzik; threadimport should not run in the scheduler, as it is expected to take up to hours - blocking several other operations. Wallet flushing is a good candidate.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89008405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89336206",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89336206",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 89336206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5MzM2MjA2",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-03T15:55:05Z",
    "updated_at": "2015-04-03T15:55:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed @sipa's nits, including running scheduler.cpp/.h through clang-format.\n\nAnd reverted the ThreadImport change, so it is it's own thread again.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89336206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89475724",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89475724",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 89475724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5NDc1NzI0",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-04T00:52:47Z",
    "updated_at": "2015-04-04T00:52:47Z",
    "author_association": "MEMBER",
    "body": "`boost::condition_variable::wait_until` and `boost::cv_status` didn't show up until 1.50. Can they be worked around?\n\nOtherwise, we'll need to enforce >= 1.50 as a build requirement.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89475724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89476358",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89476358",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 89476358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5NDc2MzU4",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-04T01:06:47Z",
    "updated_at": "2015-04-04T01:06:47Z",
    "author_association": "MEMBER",
    "body": "They're easy to work with using timed_wait, I think.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89476358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89718333",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-89718333",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 89718333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5NzE4MzMz",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-05T05:15:59Z",
    "updated_at": "2015-04-05T05:15:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "ut ACK latest rev\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/89718333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90716311",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-90716311",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 90716311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNzE2MzEx",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T20:08:32Z",
    "updated_at": "2015-04-07T20:08:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Three changes:\n1. I decided I didn't like the the asymmetry of CScheduler creating the thread, but the caller managing it. So I replaced CScheduler::run() with CScheduler::ServiceQueue, which the caller thread-ifys. And added code and a destructor that asserts if thread management isn't done correctly. That made it easy to wrap the scheduler trhead in util.h's TraceThread, to get debug.log tracing and handling of exceptions that might be thrown from the scheduled tasks.\n2. Added compatibility code for boost version 1.49 and below.\n3. I fixed a race-condition bug when there are multiple threads servicing the queue.\n\nI think I'm all done tweaking this now.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90716311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90743665",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-90743665",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 90743665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwNzQzNjY1",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-07T21:54:34Z",
    "updated_at": "2015-04-07T21:54:34Z",
    "author_association": "MEMBER",
    "body": "extremely-lightly-tested ACK (as in: does not crash).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90743665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90958815",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-90958815",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 90958815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTU4ODE1",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T15:56:34Z",
    "updated_at": "2015-04-08T15:56:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Final (?) nits picked (got rid of the obsolete run from the .h, added belt&suspenders checks for empty queue, ran through clang-format again), this should be ready for merge.\n\nI also did some more testing, writing a stress-test that created 4,000 tasks serviced by 100 threads over a couple of milliseconds ( https://github.com/gavinandresen/scheduler/blob/master/main.cpp ), and all is well, including running under valgrind.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90958815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90959928",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-90959928",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 90959928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTU5OTI4",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-08T16:01:51Z",
    "updated_at": "2015-04-08T16:01:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "lightly tested ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/90959928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91387465",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-91387465",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 91387465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxMzg3NDY1",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-10T00:24:23Z",
    "updated_at": "2015-04-10T00:24:23Z",
    "author_association": "MEMBER",
    "body": "@gavinandresen See the top 2 commits here: https://github.com/theuni/bitcoin/tree/5964\n\nWithout the timer fix, using your test program I was flooded with \"Repeat!\" and everything else returned immediately. With the change from https://github.com/theuni/bitcoin/commit/4d0819394249be25c34db28e4c3648a71ab238fa I get:\n\n```\nMicrotask counts: 190 198 199 197 196 197 205 201 217 200 \nSum: 2000\nWait... negative?\nOne\nTwo\nAlsoTwo\nThree\nGonna start repeating every 2 secs\nFive\nRepeat!\nRepeat!\nRepeat!\nEleven!\nRepeat!\nLong-running task, gonna sleep for 11seconds\nOne\nRepeat!\nTwo\nRepeat!\nRepeat!\nRepeat!\nRepeat!\nDone sleeping\nRepeat!\n```\n\nEach looks to be taking as long as they should.\n\nIt'd be great to see that moved into a test. Given boost's wait() problems with 1.50-1.52 iirc, I think there's reason to be cautious.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91387465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91544068",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-91544068",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 91544068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxNTQ0MDY4",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-10T12:45:11Z",
    "updated_at": "2015-04-10T12:45:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@theuni : thanks for testing, I'll pull in those commits and I'll create a unit test with the microtask test -- does it fail without your fixes?\n\nI don't want to create a unit test that takes 20 seconds to run.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91544068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91579997",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-91579997",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 91579997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxNTc5OTk3",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-10T14:43:31Z",
    "updated_at": "2015-04-10T14:44:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pulled in fixes from @theuni, and added a new unit test. I measured run-time and memory usage before and after the new unit test, no significant difference on my 64-bit OSX machine:\n\nbefore:\n\n```\n/usr/bin/time -l test/test_bitcoin\nRunning 148 test cases...\n\n*** No errors detected\n        6.57 real         4.29 user         0.47 sys\n 197120000  maximum resident set size\n         0  average shared memory size\n         0  average unshared data size\n         0  average unshared stack size\n     49901  page reclaims\n         0  page faults\n         0  swaps\n         0  block input operations\n       486  block output operations\n         0  messages sent\n         0  messages received\n         0  signals received\n       257  voluntary context switches\n      4137  involuntary context switches\n```\n\nafter:\n\n```\nRunning 148 test cases...\n\n*** No errors detected\n        6.59 real         4.39 user         0.53 sys\n 197238784  maximum resident set size\n         0  average shared memory size\n         0  average unshared data size\n         0  average unshared stack size\n     50350  page reclaims\n         0  page faults\n         0  swaps\n         0  block input operations\n       434  block output operations\n         0  messages sent\n         0  messages received\n         0  signals received\n       248  voluntary context switches\n     28623  involuntary context switches\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91579997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91798785",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-91798785",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 91798785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkxNzk4Nzg1",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-11T09:26:14Z",
    "updated_at": "2015-04-11T09:26:14Z",
    "author_association": "MEMBER",
    "body": "utACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/91798785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/96046354",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-96046354",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 96046354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDQ2MzU0",
    "user": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?u=871eabd15ac87d37f1b4d2b927fa8f33e3ad7fe3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-24T19:57:16Z",
    "updated_at": "2015-04-24T19:57:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "There should be a mechanism for the scheduled Function to specify the next time it's called.\n\nThis is necessary for high precision random intervals.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/96046354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/96108304",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-96108304",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 96108304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MTA4MzA0",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T00:24:13Z",
    "updated_at": "2015-04-25T00:24:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Functions can reschedule themselves-- pass a reference to the CScheduler object to the function (via boost::bind and boost::ref). See the CScheduler unit tests for examples.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/96108304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/96662763",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-96662763",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 96662763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2NjYyNzYz",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-27T13:56:21Z",
    "updated_at": "2015-04-27T13:56:21Z",
    "author_association": "MEMBER",
    "body": "Tested ACK.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/96662763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101296253",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-101296253",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 101296253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTI5NjI1Mw==",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T14:10:57Z",
    "updated_at": "2015-05-12T14:10:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased to fix a trivial merge conflict (#include removed from src/bitcoind.cpp). I think this should be merged for 0.11.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101296253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101768744",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-101768744",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 101768744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTc2ODc0NA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-13T18:29:51Z",
    "updated_at": "2015-05-13T18:30:07Z",
    "author_association": "MEMBER",
    "body": "Debian 7:\n\n```\ntest/scheduler_tests.cpp: In member function \u2018void scheduler_tests::manythreads::test_method()\u2019:\ntest/scheduler_tests.cpp:68:5: error: \u2018sleep_for\u2019 is not a member of \u2018boost::this_thread\u2019\ntest/scheduler_tests.cpp:84:5: error: \u2018sleep_for\u2019 is not a member of \u2018boost::this_thread\u2019\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101768744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101782417",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-101782417",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 101782417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTc4MjQxNw==",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-13T19:22:31Z",
    "updated_at": "2015-05-13T19:22:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@luke-jr : fixed. I'd fixed that before, I think it got lost in a rebase / shuffle between working on home/work trees.\n\nThe fix is in the unit test commit, and is:\n\n```\nstatic void MicroSleep(uint64_t n)\n{\n#if defined(HAVE_WORKING_BOOST_SLEEP_FOR)\n    boost::this_thread::sleep_for(boost::chrono::microseconds(n));\n#elif defined(HAVE_WORKING_BOOST_SLEEP)\n    boost::this_thread::sleep(boost::posix_time::microseconds(n));\n#else\n    //should never get here\n    #error missing boost sleep implementation\n#endif\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101782417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102037374",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-102037374",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 102037374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjAzNzM3NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T13:33:16Z",
    "updated_at": "2015-05-14T13:33:16Z",
    "author_association": "MEMBER",
    "body": "ACK apart from the nit\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102037374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102063190",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-102063190",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 102063190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjA2MzE5MA==",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T14:58:25Z",
    "updated_at": "2015-05-14T14:58:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nits picked, will merge as soon as Travis gives the green light.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102063190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102102130",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-102102130",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 102102130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjEwMjEzMA==",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T16:56:52Z",
    "updated_at": "2015-05-14T16:56:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Travis was unhappy-- one of the builds was taking more than 50 minutes to complete.\n\nI toned down the unit test by a factor of ten, in case that is what was causing the problem (it now services hundreds of tasks using 10 threads, instead of thousands using 100 threads).... if the builds STILL take longer than normal I'll have to recruit @theuni to help debug.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102102130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102103060",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-102103060",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 102103060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjEwMzA2MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T17:00:32Z",
    "updated_at": "2015-05-14T17:00:32Z",
    "author_association": "MEMBER",
    "body": "@gavinandresen It initially failed; so I merged #6136 and tried again. It's expected to take somewhat longer but should at least succeed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102103060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102103220",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-102103220",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 102103220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjEwMzIyMA==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T17:01:17Z",
    "updated_at": "2015-05-14T17:01:17Z",
    "author_association": "MEMBER",
    "body": "@gavinandresen I think it's partially bad timing. https://github.com/bitcoin/bitcoin/pull/6136 forced travis to rebuild all dependencies and build up a new cache. Should be back to normal in an hour or so.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102103220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102145002",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-102145002",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 102145002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjE0NTAwMg==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T19:30:42Z",
    "updated_at": "2015-05-14T19:30:42Z",
    "author_association": "MEMBER",
    "body": "Build and unit tests pass on Debian 7: ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102145002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102233825",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-102233825",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 102233825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjIzMzgyNQ==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T02:50:19Z",
    "updated_at": "2015-05-15T02:50:19Z",
    "author_association": "MEMBER",
    "body": "@gavinandresen I got this earlier on an unrelated PR, looks very related/suspicious: https://travis-ci.org/bitcoin/bitcoin/jobs/62615004#L1344 . \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102233825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102241928",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#issuecomment-102241928",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5964",
    "id": 102241928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjI0MTkyOA==",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T03:22:34Z",
    "updated_at": "2015-05-15T03:22:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmmm... Looks like the threads were interrupted before finishing (slow VM maybe). I'll try to rework the test tomorrow so it doesn't interrupt the threads.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102241928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27684977",
    "pull_request_review_id": null,
    "id": 27684977,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Njg0OTc3",
    "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler()\n+{\n+}\n+\n+\n+boost::thread*\n+CScheduler::run()\n+{\n+    boost::thread* t = new boost::thread(boost::bind(&CScheduler::SchedulerLoop, this));\n+    return t;\n+}\n+\n+void\n+CScheduler::SchedulerLoop()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1)\n+    {\n+        if (taskQueue.empty())\n+        {\n+            // Wait until there is something to do.\n+            newTaskScheduled.wait(lock);\n+        }\n+        else\n+        {\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+            while (!taskQueue.empty() &&\n+                   newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout)",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "313bcd909d326985da92d515ec294eaa6f54b9a5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does this work when the timestamp of the first item in the queue is in the past?\n",
    "created_at": "2015-04-02T18:40:32Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27684977",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27684977"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27684977"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27684977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685089",
    "pull_request_review_id": null,
    "id": 27685089,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Njg1MDg5",
    "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler()\n+{\n+}\n+\n+\n+boost::thread*\n+CScheduler::run()\n+{\n+    boost::thread* t = new boost::thread(boost::bind(&CScheduler::SchedulerLoop, this));\n+    return t;\n+}\n+\n+void\n+CScheduler::SchedulerLoop()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1)\n+    {\n+        if (taskQueue.empty())\n+        {",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "313bcd909d326985da92d515ec294eaa6f54b9a5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: coding style (braces on the same line).\n",
    "created_at": "2015-04-02T18:41:32Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685089",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685089"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685089"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 33,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685145",
    "pull_request_review_id": null,
    "id": 27685145,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Njg1MTQ1",
    "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler()\n+{\n+}\n+\n+\n+boost::thread*\n+CScheduler::run()\n+{\n+    boost::thread* t = new boost::thread(boost::bind(&CScheduler::SchedulerLoop, this));\n+    return t;\n+}\n+\n+void\n+CScheduler::SchedulerLoop()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1)\n+    {\n+        if (taskQueue.empty())\n+        {\n+            // Wait until there is something to do.\n+            newTaskScheduled.wait(lock);\n+        }\n+        else\n+        {\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+            while (!taskQueue.empty() &&\n+                   newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout)\n+            {\n+                // Keep waiting until timeout\n+            }\n+            if (taskQueue.empty()) continue;\n+\n+            Function f = taskQueue.begin()->second;\n+            taskQueue.erase(taskQueue.begin());\n+\n+            // Unlock before calling f, so it can reschedule itself or another task\n+            // without deadlocking:\n+            lock.unlock();\n+            f();\n+            lock.lock();\n+        }\n+    }\n+}\n+\n+void\n+CScheduler::schedule(CScheduler::Function f, boost::chrono::system_clock::time_point t)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+        taskQueue.insert(std::make_pair(t, f));\n+    }\n+    newTaskScheduled.notify_all();",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "313bcd909d326985da92d515ec294eaa6f54b9a5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: notify_one should be enough (and slightly more efficient, if we'd ever have multiple runner threads).\n",
    "created_at": "2015-04-02T18:42:08Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685145",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685145"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685145"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685407",
    "pull_request_review_id": null,
    "id": 27685407,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Njg1NDA3",
    "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler()\n+{\n+}\n+\n+\n+boost::thread*\n+CScheduler::run()\n+{\n+    boost::thread* t = new boost::thread(boost::bind(&CScheduler::SchedulerLoop, this));\n+    return t;\n+}\n+\n+void\n+CScheduler::SchedulerLoop()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1)\n+    {\n+        if (taskQueue.empty())\n+        {\n+            // Wait until there is something to do.\n+            newTaskScheduled.wait(lock);",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "313bcd909d326985da92d515ec294eaa6f54b9a5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ".wait() may wake spuriously, so it's better to turn the surrounding if into a while loop. I believe that means you also won't have to deal with the queue-empty case in the loop below.\n",
    "created_at": "2015-04-02T18:45:16Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685407",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685407"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685407"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685862",
    "pull_request_review_id": null,
    "id": 27685862,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3Njg1ODYy",
    "diff_hunk": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SCHEDULER_H\n+#define BITCOIN_SCHEDULER_H\n+\n+//\n+// NOTE:\n+// boost::thread / boost::function / boost::chrono should be ported to\n+// std::thread / std::function / std::chrono when we support C++11.\n+//\n+#include <boost/function.hpp>\n+#include <boost/chrono/chrono.hpp>\n+#include <boost/thread.hpp>\n+#include <map>\n+\n+//\n+// Simple class for background tasks that should be run\n+// periodically or once \"after a while\"\n+//\n+// Usage:\n+//\n+// CScheduler s;\n+// s.scheduleFromNow(doSomething, 11); // Assuming a: void doSomething() { }\n+// s.scheduleFromNow(boost::bind(Class::func, this, argument), 3);\n+// boost::thread* t = s.run();\n+//\n+// Thread lifetime management (interruption, joining, deletion) is left up to the caller.\n+//\n+class CScheduler\n+{\n+public:\n+    CScheduler();\n+",
    "path": "src/scheduler.h",
    "position": null,
    "original_position": 35,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "313bcd909d326985da92d515ec294eaa6f54b9a5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Unsure about this, but leaving the thread running forever may cause destruction order issues if a task is running exactly at shutdown. A destructor that sets an 'exit' bool flag (which the scheduler thread checks), and waits for all scheduler threads to exit may be needed. \n",
    "created_at": "2015-04-02T18:50:14Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685862",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685862"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27685862"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27685862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 41,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27736643",
    "pull_request_review_id": null,
    "id": 27736643,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzM2NjQz",
    "diff_hunk": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SCHEDULER_H\n+#define BITCOIN_SCHEDULER_H\n+\n+//\n+// NOTE:\n+// boost::thread / boost::function / boost::chrono should be ported to\n+// std::thread / std::function / std::chrono when we support C++11.\n+//\n+#include <boost/function.hpp>\n+#include <boost/chrono/chrono.hpp>\n+#include <boost/thread.hpp>\n+#include <map>\n+\n+//\n+// Simple class for background tasks that should be run\n+// periodically or once \"after a while\"\n+//\n+// Usage:\n+//\n+// CScheduler s;\n+// s.scheduleFromNow(doSomething, 11); // Assuming a: void doSomething() { }\n+// s.scheduleFromNow(boost::bind(Class::func, this, argument), 3);\n+// boost::thread* t = s.run();\n+//\n+// Thread lifetime management (interruption, joining, deletion) is left up to the caller.\n+//\n+class CScheduler\n+{\n+public:\n+    CScheduler();\n+",
    "path": "src/scheduler.h",
    "position": null,
    "original_position": 35,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "313bcd909d326985da92d515ec294eaa6f54b9a5",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thread lifetime managment is up to the caller. For Bitcoin, the thread is added to the main thread group, and all the threads are interrupted and joined before shutdown (see WaitForShutdown() in bitcoind.cpp or BitcoinCore::shutdown() in qt/bitcoin.cpp).\n",
    "created_at": "2015-04-03T15:52:29Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27736643",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27736643"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27736643"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27736643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 41,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27916587",
    "pull_request_review_id": null,
    "id": 27916587,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTE2NTg3",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    boost::chrono::system_clock::duration d = t.time_since_epoch();\n+    boost::chrono::microseconds usecs = boost::chrono::duration_cast<boost::chrono::microseconds>(d);\n+    boost::system_time result = boost::posix_time::from_time_t(0) +\n+        boost::posix_time::microseconds(usecs.count());\n+    return result;\n+}\n+#endif\n+\n+void CScheduler::ServiceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+\n+            // wait_until needs boost 1.50 or later. For older boosts, convert to\n+            // posix time:\n+#if BOOST_VERSION < 105000\n+            while (newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {\n+                // Keep waiting until timeout\n+            }\n+#else\n+            while (newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout) {\n+                // Keep waiting until timeout\n+            }\n+#endif\n+            // If there are multiple threads, the queue can empty while we're waiting (another\n+            // thread may service the task we were waiting on).\n+            if (taskQueue.empty()) continue;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 62,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "e39578545707e5263e571c641654a2752f36faa0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was wrong earlier. If you want to support multiple runner threads, you need to do this check inside the while loops above, as the item can disappear while they wait.\n",
    "created_at": "2015-04-07T20:26:52Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27916587",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27916587"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27916587"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27916587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27916984",
    "pull_request_review_id": null,
    "id": 27916984,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTE2OTg0",
    "diff_hunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SCHEDULER_H\n+#define BITCOIN_SCHEDULER_H\n+\n+//\n+// NOTE:\n+// boost::thread / boost::function / boost::chrono should be ported to\n+// std::thread / std::function / std::chrono when we support C++11.\n+//\n+#include <boost/function.hpp>\n+#include <boost/chrono/chrono.hpp>\n+#include <boost/thread.hpp>\n+#include <map>\n+\n+//\n+// Simple class for background tasks that should be run\n+// periodically or once \"after a while\"\n+//\n+// Usage:\n+//\n+// CScheduler* s = new CScheduler();\n+// s->scheduleFromNow(doSomething, 11); // Assuming a: void doSomething() { }\n+// s->scheduleFromNow(boost::bind(Class::func, this, argument), 3);\n+// boost::thread* t = new boost::thread(boost::bind(CScheduler::ServiceQueue, s));\n+//\n+// ... then at program shutdown, clean up the thread running ServiceQueue:\n+// t->interrupt();\n+// t->join();\n+// delete t;\n+// delete s; // Must be done after thread is interrupted/joined.\n+//\n+\n+class CScheduler\n+{\n+public:\n+    CScheduler();\n+    ~CScheduler();\n+\n+    // Start a thread to service the task queue.\n+    // Run may be called multiple times to have multiple\n+    // threads servicing the queue.\n+    boost::thread* run();",
    "path": "src/scheduler.h",
    "position": null,
    "original_position": 45,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "e39578545707e5263e571c641654a2752f36faa0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This doesn't seem to exist anymore.\n",
    "created_at": "2015-04-07T20:30:43Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27916984",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27916984"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27916984"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27916984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 45,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27917184",
    "pull_request_review_id": null,
    "id": 27917184,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTE3MTg0",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    boost::chrono::system_clock::duration d = t.time_since_epoch();\n+    boost::chrono::microseconds usecs = boost::chrono::duration_cast<boost::chrono::microseconds>(d);\n+    boost::system_time result = boost::posix_time::from_time_t(0) +\n+        boost::posix_time::microseconds(usecs.count());\n+    return result;\n+}\n+#endif\n+\n+void CScheduler::ServiceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+\n+            // wait_until needs boost 1.50 or later. For older boosts, convert to\n+            // posix time:\n+#if BOOST_VERSION < 105000\n+            while (newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {\n+                // Keep waiting until timeout\n+            }\n+#else\n+            while (newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout) {\n+                // Keep waiting until timeout\n+            }\n+#endif\n+            // If there are multiple threads, the queue can empty while we're waiting (another\n+            // thread may service the task we were waiting on).\n+            if (taskQueue.empty()) continue;\n+\n+            Function f = taskQueue.begin()->second;\n+            taskQueue.erase(taskQueue.begin());\n+\n+            // Unlock before calling f, so it can reschedule itself or another task\n+            // without deadlocking:\n+            lock.unlock();\n+            f();",
    "path": "src/scheduler.cpp",
    "position": 66,
    "original_position": 70,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "e39578545707e5263e571c641654a2752f36faa0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you want the loop to exit if the user function throws an exception?\n",
    "created_at": "2015-04-07T20:32:53Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27917184",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27917184"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27917184"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27917184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 70,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27917404",
    "pull_request_review_id": null,
    "id": 27917404,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTE3NDA0",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    boost::chrono::system_clock::duration d = t.time_since_epoch();\n+    boost::chrono::microseconds usecs = boost::chrono::duration_cast<boost::chrono::microseconds>(d);\n+    boost::system_time result = boost::posix_time::from_time_t(0) +\n+        boost::posix_time::microseconds(usecs.count());\n+    return result;\n+}\n+#endif\n+\n+void CScheduler::ServiceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+\n+            // wait_until needs boost 1.50 or later. For older boosts, convert to\n+            // posix time:\n+#if BOOST_VERSION < 105000\n+            while (newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {\n+                // Keep waiting until timeout\n+            }\n+#else\n+            while (newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout) {\n+                // Keep waiting until timeout\n+            }\n+#endif\n+            // If there are multiple threads, the queue can empty while we're waiting (another\n+            // thread may service the task we were waiting on).\n+            if (taskQueue.empty()) continue;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 62,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "e39578545707e5263e571c641654a2752f36faa0",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Mmm. I convinced myself an empty check isn't necessary there, but belt&suspenders says I should just put it back.\n\n(not needed because: if the queue is emptied during timeout, then the wait loop is timed out and exited and the empty queue is caught here. And since there is no unschedule-task, the only other way the wait can exit is if a new task is added to the queue, which wakes up only one thread and so the queue can't be empty).\n\nI'll add the empty condition to the wait loops.\n",
    "created_at": "2015-04-07T20:35:22Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27917404",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27917404"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27917404"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27917404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27918253",
    "pull_request_review_id": null,
    "id": 27918253,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTE4MjUz",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    boost::chrono::system_clock::duration d = t.time_since_epoch();\n+    boost::chrono::microseconds usecs = boost::chrono::duration_cast<boost::chrono::microseconds>(d);\n+    boost::system_time result = boost::posix_time::from_time_t(0) +\n+        boost::posix_time::microseconds(usecs.count());\n+    return result;\n+}\n+#endif\n+\n+void CScheduler::ServiceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+\n+            // wait_until needs boost 1.50 or later. For older boosts, convert to\n+            // posix time:\n+#if BOOST_VERSION < 105000\n+            while (newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {\n+                // Keep waiting until timeout\n+            }\n+#else\n+            while (newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout) {\n+                // Keep waiting until timeout\n+            }\n+#endif\n+            // If there are multiple threads, the queue can empty while we're waiting (another\n+            // thread may service the task we were waiting on).\n+            if (taskQueue.empty()) continue;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 62,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "e39578545707e5263e571c641654a2752f36faa0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, you convinced me... but indeed, belt & suspenders.\n\nYou could even combine the two loops: while (taskQueue.empty() || wait_until(taskQueue.begin()->first)) ?\n\nEDIT: nevermind. Sorry, ignore my nits here, I'm not thinking clearly.\n",
    "created_at": "2015-04-07T20:43:50Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27918253",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27918253"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27918253"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27918253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27918514",
    "pull_request_review_id": null,
    "id": 27918514,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTE4NTE0",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    boost::chrono::system_clock::duration d = t.time_since_epoch();\n+    boost::chrono::microseconds usecs = boost::chrono::duration_cast<boost::chrono::microseconds>(d);\n+    boost::system_time result = boost::posix_time::from_time_t(0) +\n+        boost::posix_time::microseconds(usecs.count());\n+    return result;\n+}\n+#endif\n+\n+void CScheduler::ServiceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+\n+            // wait_until needs boost 1.50 or later. For older boosts, convert to\n+            // posix time:\n+#if BOOST_VERSION < 105000\n+            while (newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {\n+                // Keep waiting until timeout\n+            }\n+#else\n+            while (newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout) {\n+                // Keep waiting until timeout\n+            }\n+#endif\n+            // If there are multiple threads, the queue can empty while we're waiting (another\n+            // thread may service the task we were waiting on).\n+            if (taskQueue.empty()) continue;\n+\n+            Function f = taskQueue.begin()->second;\n+            taskQueue.erase(taskQueue.begin());\n+\n+            // Unlock before calling f, so it can reschedule itself or another task\n+            // without deadlocking:\n+            lock.unlock();\n+            f();",
    "path": "src/scheduler.cpp",
    "position": 66,
    "original_position": 70,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "e39578545707e5263e571c641654a2752f36faa0",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If it is a thread_interrupted exception, definitely want to exit.\n\nAny other exception, it seems best to leave it up to the calling code what to do.\n\nFor Bitcoin, the TraceThread will print any exceptions (other than thread_interrupted) to debug.log and exit the scheduler thread. I think that is the behavior we want -- tasks should catch their own exceptions, if they don't that is a bug.\n\nI don't feel strongly, though-- instead of wrapping with TraceThread we could bring back LoopForever so uncaught exceptions from tasks are logged to debug.log but the scheduler loop keeps running.\n",
    "created_at": "2015-04-07T20:46:29Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27918514",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27918514"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27918514"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27918514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 70,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27920705",
    "pull_request_review_id": null,
    "id": 27920705,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTIwNzA1",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    boost::chrono::system_clock::duration d = t.time_since_epoch();\n+    boost::chrono::microseconds usecs = boost::chrono::duration_cast<boost::chrono::microseconds>(d);\n+    boost::system_time result = boost::posix_time::from_time_t(0) +\n+        boost::posix_time::microseconds(usecs.count());\n+    return result;\n+}\n+#endif\n+\n+void CScheduler::ServiceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+\n+            // wait_until needs boost 1.50 or later. For older boosts, convert to\n+            // posix time:\n+#if BOOST_VERSION < 105000\n+            while (newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {\n+                // Keep waiting until timeout\n+            }\n+#else\n+            while (newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout) {\n+                // Keep waiting until timeout\n+            }\n+#endif\n+            // If there are multiple threads, the queue can empty while we're waiting (another\n+            // thread may service the task we were waiting on).\n+            if (taskQueue.empty()) continue;\n+\n+            Function f = taskQueue.begin()->second;\n+            taskQueue.erase(taskQueue.begin());\n+\n+            // Unlock before calling f, so it can reschedule itself or another task\n+            // without deadlocking:\n+            lock.unlock();\n+            f();",
    "path": "src/scheduler.cpp",
    "position": 66,
    "original_position": 70,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "e39578545707e5263e571c641654a2752f36faa0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fair enough. I mostly commented because it may make debugging a bit harder, but I agree: tasks should not throw exceptions (except thread_interrupted, perhaps).\n",
    "created_at": "2015-04-07T21:09:05Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27920705",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27920705"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r27920705"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27920705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 70,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29104630",
    "pull_request_review_id": null,
    "id": 29104630,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTA0NjMw",
    "diff_hunk": "@@ -0,0 +1,97 @@\n+// Copyright (c) 2012-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"random.h\"\n+#include \"scheduler.h\"\n+\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/bind.hpp>\n+#include <boost/random/mersenne_twister.hpp>\n+#include <boost/random/uniform_int_distribution.hpp>\n+#include <boost/thread.hpp>\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(scheduler_tests)\n+\n+static void microTask(CScheduler& s, boost::mutex& mutex, int& counter, int delta, boost::chrono::system_clock::time_point rescheduleTime)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(mutex);\n+        counter += delta;\n+    }\n+    boost::chrono::system_clock::time_point noTime = boost::chrono::system_clock::time_point::min();\n+    if (rescheduleTime != noTime) {\n+        CScheduler::Function f = boost::bind(&microTask, boost::ref(s), boost::ref(mutex), boost::ref(counter), -delta + 1, noTime);\n+        s.schedule(f, rescheduleTime);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(manythreads)\n+{\n+    // Stress test: thousands of microsecond-scheduled tasks,\n+    // serviced by 100 threads.\n+    //\n+    // So... ten shared counters, which if all the tasks execute\n+    // properly will sum to the number of tasks done.\n+    // Each task adds or subtracts from one of the counters a\n+    // random amount, and then schedules another task 0-1000\n+    // microseconds in the future to subtract or add from\n+    // the counter -random_amount+1, so in the end the shared\n+    // counters should sum to the number of initial tasks performed.\n+    CScheduler microTasks;\n+\n+    boost::thread_group microThreads;\n+    for (int i = 0; i < 50; i++)\n+        microThreads.create_thread(boost::bind(&CScheduler::serviceQueue, &microTasks));\n+\n+    boost::mutex counterMutex[10];\n+    int counter[10] = { 0 };\n+    boost::random::mt19937 rng(insecure_rand());\n+    boost::random::uniform_int_distribution<> zeroToNine(0, 9);\n+    boost::random::uniform_int_distribution<> randomMsec(-11, 1000);\n+    boost::random::uniform_int_distribution<> randomDelta(-1000, 1000);\n+\n+    boost::chrono::system_clock::time_point start = boost::chrono::system_clock::now();\n+    boost::chrono::system_clock::time_point now = start;\n+\n+    for (int i = 0; i < 1000; i++) {\n+        boost::chrono::system_clock::time_point t = now + boost::chrono::microseconds(randomMsec(rng));\n+        boost::chrono::system_clock::time_point tReschedule = now + boost::chrono::microseconds(500 + randomMsec(rng));\n+        int whichCounter = zeroToNine(rng);\n+        CScheduler::Function f = boost::bind(&microTask, boost::ref(microTasks),\n+                                             boost::ref(counterMutex[whichCounter]), boost::ref(counter[whichCounter]),\n+                                             randomDelta(rng), tReschedule);\n+        microTasks.schedule(f, t);\n+    }\n+    boost::this_thread::sleep_for(boost::chrono::microseconds(600));",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "74b50983cb1f7fb58ca508acadb0caf8e058eee8",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This line doesn't compile for me.\n",
    "created_at": "2015-04-25T22:16:34Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r29104630",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29104630"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r29104630"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29104630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29112267",
    "pull_request_review_id": null,
    "id": 29112267,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTEyMjY3",
    "diff_hunk": "@@ -0,0 +1,97 @@\n+// Copyright (c) 2012-2013 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"random.h\"\n+#include \"scheduler.h\"\n+\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/bind.hpp>\n+#include <boost/random/mersenne_twister.hpp>\n+#include <boost/random/uniform_int_distribution.hpp>\n+#include <boost/thread.hpp>\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(scheduler_tests)\n+\n+static void microTask(CScheduler& s, boost::mutex& mutex, int& counter, int delta, boost::chrono::system_clock::time_point rescheduleTime)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(mutex);\n+        counter += delta;\n+    }\n+    boost::chrono::system_clock::time_point noTime = boost::chrono::system_clock::time_point::min();\n+    if (rescheduleTime != noTime) {\n+        CScheduler::Function f = boost::bind(&microTask, boost::ref(s), boost::ref(mutex), boost::ref(counter), -delta + 1, noTime);\n+        s.schedule(f, rescheduleTime);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(manythreads)\n+{\n+    // Stress test: thousands of microsecond-scheduled tasks,\n+    // serviced by 100 threads.\n+    //\n+    // So... ten shared counters, which if all the tasks execute\n+    // properly will sum to the number of tasks done.\n+    // Each task adds or subtracts from one of the counters a\n+    // random amount, and then schedules another task 0-1000\n+    // microseconds in the future to subtract or add from\n+    // the counter -random_amount+1, so in the end the shared\n+    // counters should sum to the number of initial tasks performed.\n+    CScheduler microTasks;\n+\n+    boost::thread_group microThreads;\n+    for (int i = 0; i < 50; i++)\n+        microThreads.create_thread(boost::bind(&CScheduler::serviceQueue, &microTasks));\n+\n+    boost::mutex counterMutex[10];\n+    int counter[10] = { 0 };\n+    boost::random::mt19937 rng(insecure_rand());\n+    boost::random::uniform_int_distribution<> zeroToNine(0, 9);\n+    boost::random::uniform_int_distribution<> randomMsec(-11, 1000);\n+    boost::random::uniform_int_distribution<> randomDelta(-1000, 1000);\n+\n+    boost::chrono::system_clock::time_point start = boost::chrono::system_clock::now();\n+    boost::chrono::system_clock::time_point now = start;\n+\n+    for (int i = 0; i < 1000; i++) {\n+        boost::chrono::system_clock::time_point t = now + boost::chrono::microseconds(randomMsec(rng));\n+        boost::chrono::system_clock::time_point tReschedule = now + boost::chrono::microseconds(500 + randomMsec(rng));\n+        int whichCounter = zeroToNine(rng);\n+        CScheduler::Function f = boost::bind(&microTask, boost::ref(microTasks),\n+                                             boost::ref(counterMutex[whichCounter]), boost::ref(counter[whichCounter]),\n+                                             randomDelta(rng), tReschedule);\n+        microTasks.schedule(f, t);\n+    }\n+    boost::this_thread::sleep_for(boost::chrono::microseconds(600));",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "74b50983cb1f7fb58ca508acadb0caf8e058eee8",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'll implement a similar fix to utiltime.cpp's MilliSleep to workaround broken versions of boost.\n",
    "created_at": "2015-04-26T18:11:46Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r29112267",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29112267"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r29112267"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/29112267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 68,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319359",
    "pull_request_review_id": null,
    "id": 30319359,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzE5MzU5",
    "diff_hunk": "@@ -203,43 +203,6 @@ void SetThreadPriority(int nPriority);\n void RenameThread(const char* name);\n \n /**\n- * Standard wrapper for do-something-forever thread functions.\n- * \"Forever\" really means until the thread is interrupted.\n- * Use it like:\n- *   new boost::thread(boost::bind(&LoopForever<void (*)()>, \"dumpaddr\", &DumpAddresses, 900000));\n- * or maybe:\n- *    boost::function<void()> f = boost::bind(&FunctionWithArg, argument);\n- *    threadGroup.create_thread(boost::bind(&LoopForever<boost::function<void()> >, \"nothing\", f, milliseconds));\n- */\n-template <typename Callable> void LoopForever(const char* name,  Callable func, int64_t msecs)",
    "path": "src/util.h",
    "position": 12,
    "original_position": 12,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "3b77f7b461c4daca178115d29a3aff2f603dc7ae",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Happy to see that this gets rid of the awful `LoopForever()` in util.h.\n",
    "created_at": "2015-05-14T13:20:06Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30319359",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319359"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30319359"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 214,
    "original_line": 214,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319766",
    "pull_request_review_id": null,
    "id": 30319766,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzE5NzY2",
    "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    return boost::posix_time::from_time_t(boost::chrono::system_clock::to_time_t(t));\n+}\n+#endif\n+\n+void CScheduler::serviceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+// Wait until either there is a new task, or until\n+// the time of the first item on the queue:\n+\n+// wait_until needs boost 1.50 or later; older versions have timed_wait:\n+#if BOOST_VERSION < 105000\n+            while (!taskQueue.empty() && newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {\n+                // Keep waiting until timeout\n+            }\n+#else\n+            while (!taskQueue.empty() && newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout) {\n+                // Keep waiting until timeout\n+            }\n+#endif\n+            // If there are multiple threads, the queue can empty while we're waiting (another\n+            // thread may service the task we were waiting on).\n+            if (taskQueue.empty())\n+                continue;\n+\n+            Function f = taskQueue.begin()->second;\n+            taskQueue.erase(taskQueue.begin());\n+\n+            // Unlock before calling f, so it can reschedule itself or another task\n+            // without deadlocking:\n+            lock.unlock();\n+            f();\n+            lock.lock();\n+        } catch (...) {\n+            --nThreadsServicingQueue;\n+            throw;\n+        }\n+    }\n+}\n+\n+void CScheduler::schedule(CScheduler::Function f, boost::chrono::system_clock::time_point t)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+        taskQueue.insert(std::make_pair(t, f));\n+    }\n+    newTaskScheduled.notify_one();\n+}\n+\n+void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaSeconds)\n+{\n+    schedule(f, boost::chrono::system_clock::now() + boost::chrono::seconds(deltaSeconds));\n+}\n+\n+static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaSeconds)\n+{\n+    f();\n+    s->scheduleFromNow(boost::bind(&Repeat, s, f, deltaSeconds), deltaSeconds);",
    "path": "src/scheduler.cpp",
    "position": 92,
    "original_position": 92,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "3b77f7b461c4daca178115d29a3aff2f603dc7ae",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For repeating tasks, there are two options:\n1. Schedule the new run deltaSeconds after completion of the task, every time\n2. Schedule every deltaSeconds, no matter how long the task takes (unless the task takes longer than the interval, then something special has to be done)\n\nSo 1 schedules from the end time of the task, 2 schedules from the beginning time of the task,.\n\nThis appears to implement 1. Good enough in most cases (we don't need clockwork precision, and this resembles the behavior of LoopForever) but this may be worth documenting.\n",
    "created_at": "2015-05-14T13:24:59Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30319766",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319766"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30319766"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 92,
    "original_line": 92,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319892",
    "pull_request_review_id": null,
    "id": 30319892,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzE5ODky",
    "diff_hunk": "@@ -0,0 +1,104 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    boost::chrono::system_clock::duration d = t.time_since_epoch();\n+    boost::chrono::microseconds usecs = boost::chrono::duration_cast<boost::chrono::microseconds>(d);\n+    boost::system_time result = boost::posix_time::from_time_t(0) +\n+        boost::posix_time::microseconds(usecs.count());\n+    return result;\n+}\n+#endif\n+\n+void CScheduler::ServiceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+            // Wait until either there is a new task, or until\n+            // the time of the first item on the queue:\n+\n+            // wait_until needs boost 1.50 or later. For older boosts, convert to\n+            // posix time:\n+#if BOOST_VERSION < 105000\n+            while (newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {\n+                // Keep waiting until timeout\n+            }\n+#else\n+            while (newTaskScheduled.wait_until(lock, taskQueue.begin()->first) != boost::cv_status::timeout) {\n+                // Keep waiting until timeout\n+            }\n+#endif\n+            // If there are multiple threads, the queue can empty while we're waiting (another\n+            // thread may service the task we were waiting on).\n+            if (taskQueue.empty()) continue;\n+\n+            Function f = taskQueue.begin()->second;\n+            taskQueue.erase(taskQueue.begin());\n+\n+            // Unlock before calling f, so it can reschedule itself or another task\n+            // without deadlocking:\n+            lock.unlock();\n+            f();",
    "path": "src/scheduler.cpp",
    "position": 66,
    "original_position": 70,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "e39578545707e5263e571c641654a2752f36faa0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As long as run-away exceptions are logged, any solution here is fine with me. It is indeed a bug if it happens.\n",
    "created_at": "2015-05-14T13:26:38Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30319892",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319892"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30319892"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30319892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 66,
    "original_line": 70,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30320290",
    "pull_request_review_id": null,
    "id": 30320290,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzIwMjkw",
    "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    return boost::posix_time::from_time_t(boost::chrono::system_clock::to_time_t(t));\n+}\n+#endif\n+\n+void CScheduler::serviceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+// Wait until either there is a new task, or until\n+// the time of the first item on the queue:\n+\n+// wait_until needs boost 1.50 or later; older versions have timed_wait:\n+#if BOOST_VERSION < 105000\n+            while (!taskQueue.empty() && newTaskScheduled.timed_wait(lock, toPosixTime(taskQueue.begin()->first)) == true) {",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 47,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "3b77f7b461c4daca178115d29a3aff2f603dc7ae",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: please leave out the `== true`, booleans already make good truth values\n",
    "created_at": "2015-05-14T13:32:10Z",
    "updated_at": "2015-05-14T16:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30320290",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30320290"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30320290"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30320290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 47,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30344137",
    "pull_request_review_id": null,
    "id": 30344137,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzQ0MTM3",
    "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"scheduler.h\"\n+\n+#include <assert.h>\n+#include <boost/bind.hpp>\n+#include <utility>\n+\n+CScheduler::CScheduler() : nThreadsServicingQueue(0)\n+{\n+}\n+\n+CScheduler::~CScheduler()\n+{\n+    assert(nThreadsServicingQueue == 0);\n+}\n+\n+\n+#if BOOST_VERSION < 105000\n+static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n+{\n+    return boost::posix_time::from_time_t(boost::chrono::system_clock::to_time_t(t));\n+}\n+#endif\n+\n+void CScheduler::serviceQueue()\n+{\n+    boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+    ++nThreadsServicingQueue;\n+\n+    // newTaskMutex is locked throughout this loop EXCEPT\n+    // when the thread is waiting or when the user's function\n+    // is called.\n+    while (1) {\n+        try {\n+            while (taskQueue.empty()) {\n+                // Wait until there is something to do.\n+                newTaskScheduled.wait(lock);\n+            }\n+// Wait until either there is a new task, or until\n+// the time of the first item on the queue:",
    "path": "src/scheduler.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "original_commit_id": "9a1dcea2df2a6a89acf79bc41972e937d783a080",
    "user": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "tiny nit, is the indenting here off?\n",
    "created_at": "2015-05-14T17:51:36Z",
    "updated_at": "2015-05-14T17:51:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30344137",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30344137"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5964#discussion_r30344137"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5964"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30344137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT"
  }
]