[
  {
    "sha": "9142dfea8181c6649c8d6a8775d53bc3e14de847",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTQyZGZlYTgxODFjNjY0OWM4ZDZhODc3NWQ1M2JjM2UxNGRlODQ3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-26T22:37:20Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-26T22:37:20Z"
      },
      "message": "Use explicit casting in cuckoocache's compute_hashes(...) to clarify integer conversion",
      "tree": {
        "sha": "4b21eaacd9447c7224e3517870ef77a30ef1d546",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b21eaacd9447c7224e3517870ef77a30ef1d546"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9142dfea8181c6649c8d6a8775d53bc3e14de847",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9142dfea8181c6649c8d6a8775d53bc3e14de847",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9142dfea8181c6649c8d6a8775d53bc3e14de847",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9142dfea8181c6649c8d6a8775d53bc3e14de847/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a018431c447bbf18bdaa6a1037aad6a87c1294a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a018431c447bbf18bdaa6a1037aad6a87c1294a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a018431c447bbf18bdaa6a1037aad6a87c1294a"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "15f687396128169d5554bac860961e1e31a38c2d",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9142dfea8181c6649c8d6a8775d53bc3e14de847/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9142dfea8181c6649c8d6a8775d53bc3e14de847/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=9142dfea8181c6649c8d6a8775d53bc3e14de847",
        "patch": "@@ -242,14 +242,14 @@ class cache\n      */\n     inline std::array<uint32_t, 8> compute_hashes(const Element& e) const\n     {\n-        return {{(uint32_t)((hash_function.template operator()<0>(e) * (uint64_t)size) >> 32),\n-                 (uint32_t)((hash_function.template operator()<1>(e) * (uint64_t)size) >> 32),\n-                 (uint32_t)((hash_function.template operator()<2>(e) * (uint64_t)size) >> 32),\n-                 (uint32_t)((hash_function.template operator()<3>(e) * (uint64_t)size) >> 32),\n-                 (uint32_t)((hash_function.template operator()<4>(e) * (uint64_t)size) >> 32),\n-                 (uint32_t)((hash_function.template operator()<5>(e) * (uint64_t)size) >> 32),\n-                 (uint32_t)((hash_function.template operator()<6>(e) * (uint64_t)size) >> 32),\n-                 (uint32_t)((hash_function.template operator()<7>(e) * (uint64_t)size) >> 32)}};\n+        return {{(uint32_t)(((uint64_t)hash_function.template operator()<0>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)(((uint64_t)hash_function.template operator()<1>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)(((uint64_t)hash_function.template operator()<2>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)(((uint64_t)hash_function.template operator()<3>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)(((uint64_t)hash_function.template operator()<4>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)(((uint64_t)hash_function.template operator()<5>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)(((uint64_t)hash_function.template operator()<6>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)(((uint64_t)hash_function.template operator()<7>(e) * (uint64_t)size) >> 32)}};\n     }\n \n     /* end"
      }
    ]
  }
]