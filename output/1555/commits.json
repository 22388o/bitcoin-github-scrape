[
  {
    "sha": "24154ed64b70ac3c9fdceb6b53f1746b91e53bfa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDE1NGVkNjRiNzBhYzNjOWZkY2ViNmI1M2YxNzQ2YjkxZTUzYmZh",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-04T14:40:16Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-04T14:40:16Z"
      },
      "message": "Fix remaining warnings.",
      "tree": {
        "sha": "5b2bb12ea0a41e916a7a1653053d1438b76796ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b2bb12ea0a41e916a7a1653053d1438b76796ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24154ed64b70ac3c9fdceb6b53f1746b91e53bfa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24154ed64b70ac3c9fdceb6b53f1746b91e53bfa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24154ed64b70ac3c9fdceb6b53f1746b91e53bfa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24154ed64b70ac3c9fdceb6b53f1746b91e53bfa/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c729dbb6d2b63d9c0b32e3937be0ebf528d4c753",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c729dbb6d2b63d9c0b32e3937be0ebf528d4c753",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c729dbb6d2b63d9c0b32e3937be0ebf528d4c753"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "fccb5d10f93b25d67a0020b534d66b3760efb626",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24154ed64b70ac3c9fdceb6b53f1746b91e53bfa/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24154ed64b70ac3c9fdceb6b53f1746b91e53bfa/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=24154ed64b70ac3c9fdceb6b53f1746b91e53bfa",
        "patch": "@@ -371,14 +371,14 @@ class CNode\n \n         // Set the size\n         unsigned int nSize = vSend.size() - nMessageStart;\n-        memcpy((char*)&vSend[nHeaderStart] + offsetof(CMessageHeader, nMessageSize), &nSize, sizeof(nSize));\n+        memcpy((char*)&vSend[nHeaderStart] + CMessageHeader::MESSAGE_SIZE_OFFSET, &nSize, sizeof(nSize));\n \n         // Set the checksum\n         uint256 hash = Hash(vSend.begin() + nMessageStart, vSend.end());\n         unsigned int nChecksum = 0;\n         memcpy(&nChecksum, &hash, sizeof(nChecksum));\n-        assert(nMessageStart - nHeaderStart >= offsetof(CMessageHeader, nChecksum) + sizeof(nChecksum));\n-        memcpy((char*)&vSend[nHeaderStart] + offsetof(CMessageHeader, nChecksum), &nChecksum, sizeof(nChecksum));\n+        assert(nMessageStart - nHeaderStart >= CMessageHeader::CHECKSUM_OFFSET + sizeof(nChecksum));\n+        memcpy((char*)&vSend[nHeaderStart] + CMessageHeader::CHECKSUM_OFFSET, &nChecksum, sizeof(nChecksum));\n \n         if (fDebug) {\n             printf(\"(%d bytes)\\n\", nSize);"
      },
      {
        "sha": "36f8b144cd7ae8cb1726a87f2df38e47f675a793",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24154ed64b70ac3c9fdceb6b53f1746b91e53bfa/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24154ed64b70ac3c9fdceb6b53f1746b91e53bfa/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=24154ed64b70ac3c9fdceb6b53f1746b91e53bfa",
        "patch": "@@ -49,8 +49,16 @@ class CMessageHeader\n \n     // TODO: make private (improves encapsulation)\n     public:\n-        enum { COMMAND_SIZE=12 };\n-        char pchMessageStart[sizeof(::pchMessageStart)];\n+        enum {\n+            MESSAGE_START_SIZE=sizeof(::pchMessageStart),\n+            COMMAND_SIZE=12,\n+            MESSAGE_SIZE_SIZE=sizeof(int),\n+            CHECKSUM_SIZE=sizeof(int),\n+\n+            MESSAGE_SIZE_OFFSET=MESSAGE_START_SIZE+COMMAND_SIZE,\n+            CHECKSUM_OFFSET=MESSAGE_SIZE_OFFSET+MESSAGE_SIZE_SIZE\n+        };\n+        char pchMessageStart[MESSAGE_START_SIZE];\n         char pchCommand[COMMAND_SIZE];\n         unsigned int nMessageSize;\n         unsigned int nChecksum;"
      }
    ]
  }
]