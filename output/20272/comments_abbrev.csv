vasild,2020-10-30 16:50:37,"If those warnings are not fixed, then the thread safety annotations are pretty useless. Why? Because right now:\n\n1. The build is broken with `--enable-werror`, so people with recent clang cannot use that.\n\n2. Without `--enable-werror` it will compile but will produce 33 thread safety warnings. If a new one is introduced and they become 34 it will almost surely remain unnoticed.\n\nHere i",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719668677,719668677,
hebasto,2020-10-30 16:52:32,"[Clang 12 documentation](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#negative-capabilities):\n> Negative requirements are an experimental feature which is off by default, because it will produce many warnings in existing code. It can be enabled by passing `-Wthread-safety-negative`.\n\nIs `-Wthread-safety-negative` on by default in Clang 12 for you?",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719669860,719669860,
MarcoFalke,2020-10-30 16:58:14,"My assumption when I merged the negative annotations was that `-Wthread-safety-negative` is turned off. If clang 12 enables that, it should be disabled explicitly.",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719673099,719673099,
vasild,2020-10-30 17:23:28,"The warnings above end in `... [-Wthread-safety-analysis]` which means that they are due to `-Wthread-safety-analysis`, not due to `-Wthread-safety-negative`. `-Wno-thread-safety-negative` does not silence them.\n\nThe current clang version I am using is `llvm-devel-12.0.d20201027` (that is the name of the FreeBSD package). The previous one `llvm-devel-12.0.d20200925` does not produce the warnin",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719687750,719687750,
DrahtBot,2020-10-31 00:04:13,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20250 (Bugfix: RPC/Wallet: Make BTC/kB and sat/B fee modes work sanely by luke-jr)\n* #20220 (wallet, rpc: explicit fee r",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719851172,719851172,
fanquake,2020-10-31 03:27:49,"> The build is broken with --enable-werror, so people with recent clang cannot use that.\n\nYou mean anyone using an in-development version of Clang right? I'd consider anything from Clang 8 onwards to be pretty ""recent"" (some would probably argue even older than that), especially Clang 11, given it only came out a few weeks ago.\n\n> The current clang version I am using is llvm-devel-12.0.d20",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719876640,719876640,
laanwj,2020-10-31 04:21:42,"I agree with @fanquake. It can be good to test with unreleased compilers, but it will always be a moving target. Things might well change around again. There's the difficulty of checking—we can't expect reviewers to be compiler developers—as well.\n\nIt would be different if this testing found an actual issue in our code.\n\nWe can only consider this PRs that 'fix warnings' for released compil",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719881527,719881527,
fanquake,2020-10-31 06:32:52,"FWIW I did try compiling using the Clang 12 shipped with Debian experimental:\n```bash\nclang-12 --version\nDebian clang version 12.0.0-++20200929085817+962a247aebb-1~exp1\nTarget: x86_64-pc-linux-gnu\nThread model: posix\nInstalledDir: /usr/bin\n```\n\nwhich looks slightly newer than the version you were using previously, but must still be too old to produce the warnings.\n\nSo I built",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719892883,719892883,
vasild,2020-10-31 13:48:58,"It all makes sense and I agree with the above, thanks everybody for the attention! I am closing this for now so that it does not create unnecessary ""conflict warnings"" with other PRs.\n\n@aaronpuchert are the above warnings intentional behavior of Clang under `-Wthread-safety-analysis` and not under `-Wthread-safety-negative`, that is likely to be released in the final 12?",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-719936689,719936689,
aaronpuchert,2020-11-02 22:17:50,"> @aaronpuchert are the above warnings intentional behavior of Clang under `-Wthread-safety-analysis` and not under `-Wthread-safety-negative`, that is likely to be released in the final 12?\n\nYes, that's intentional. I don't want to go into to much detail, but `-Wthread-safety-negative` only affects whether negative capabilities are required for _acquiring a mutex_. Here however `ProcessGetDat",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-720755781,720755781,
vasild,2020-11-03 07:56:27,Thanks! That is very valuable input!,https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-720961044,720961044,
vasild,2021-03-30 10:05:14,"Just an update: as expected, clang 12.0.0 rc2 emits warnings with `-Wthread-safety-analysis`.\n\nI disabled locally `-Wthread-safety-analysis` in my dev environment if clang 12 or 13 is used :disappointed:",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-810092921,810092921,
fanquake,2021-03-30 11:18:53,"> Just an update: as expected, clang 12.0.0 rc2 emits warnings with -Wthread-safety-analysis.\n\n@vasild I'm happy for you to reopen this PR (or a new one), to address issues, when Clang 12 is released. What we want to avoid is playing whack-a-mole with unreleased compilers, while code is being added, removed, fixed up etc.",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-810138999,810138999,
MarcoFalke,2021-03-30 11:32:46,"I think we should just remove the annotations that include a `!`. Adding missing ones (as this pull tries to achieve) is not only impossible, but also a step in the wrong direction (as explained in my NACK above).",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-810147426,810147426,
vasild,2021-03-30 14:38:13,Right. Will come back to this and discuss approaches once clang 12 is released.,https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-810316066,810316066,
MarcoFalke,2021-04-04 10:09:51,"It is highly unlikely that clang is going to change this late in the release cycle, so I think we should be starting to create and review the needed changes.",https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-813007375,813007375,
vasild,2021-04-05 14:56:35,This is superseded by https://github.com/bitcoin/bitcoin/pull/21598 which removes the warnings with a smaller amount of changes.,https://github.com/bitcoin/bitcoin/pull/20272#issuecomment-813437680,813437680,
MarcoFalke,2020-10-30 16:15:39,"The wallet shouldn't know and care about validation locks. Also, this only silences a warning, it won't and can't ever be checked upstream in the call graph",https://github.com/bitcoin/bitcoin/pull/20272#discussion_r515215137,515215137,src/wallet/rpcwallet.cpp
vasild,2020-10-30 16:52:52,"Would `NO_THREAD_SAFETY_ANALYSIS` be better?\n\nThe purpose of this PR is to only silence the warnings.",https://github.com/bitcoin/bitcoin/pull/20272#discussion_r515237942,515237942,src/wallet/rpcwallet.cpp
