fanquake,2021-10-08 01:45:20,Concept ~0. Based solely on the fact that I think this has to be very well justified to make our argument parsing / command line options code even more complicated. ,https://github.com/bitcoin/bitcoin/pull/23224#issuecomment-938273151,938273151,
dougEfresh,2021-10-08 11:36:12,"@fanquake\nI agree. As i was looking at ArgsManager it was much more sophisticated than i imagine. \n\nI suppose I just want  maxuploadtarget to be in GiB.\ni will close this",https://github.com/bitcoin/bitcoin/pull/23224#issuecomment-938571274,938571274,
ryanofsky,2021-10-08 21:48:05,"I think the functionality and the `ParseByteUnits` function and tests all seem useful. Only the integration with `ArgsManager` is messy and probably premature (it would be better with #22766 / #16545 and stricter validation).\n\nBut it would be straightforward to add the functionality here without changing ArgsManager, by moving the parse function to [strencodings](https://github.com/bitcoin/bit",https://github.com/bitcoin/bitcoin/pull/23224#issuecomment-939134009,939134009,
dougEfresh,2021-10-09 09:33:42,"> But it would be straightforward to add the functionality here without changing ArgsManager, by moving the parse function to [strencodings](https://github.com/bitcoin/bitcoin/blob/master/src/util/strencodings.h), and accessing it as `ParseByteSize(args.GetArg(""-maxuploadtarget"", DEFAULT_MAX_UPLOAD_TARGET))`.\n\nExcellent idea, I'll open a different PR for discussion/review.\n\n",https://github.com/bitcoin/bitcoin/pull/23224#issuecomment-939265589,939265589,
dougEfresh,2021-10-11 10:27:11,@ryanofsky created a util method in `strencodings`:  https://github.com/bitcoin/bitcoin/pull/23249,https://github.com/bitcoin/bitcoin/pull/23224#issuecomment-939898062,939898062,
dougEfresh,2021-10-07 19:24:49,"I took this from GetIntArg, but I feel like the value.isNum() is not necessary and could cause confusion ",https://github.com/bitcoin/bitcoin/pull/23224#discussion_r724468616,724468616,src/util/system.cpp
