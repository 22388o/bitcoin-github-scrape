[
  {
    "sha": "c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7",
    "node_id": "C_kwDOABII59oAKGM5YWRhNWY1YTRhYTU1MjZlYTQxNDhmZmExZGNmYmM2Njg4NTk0Yjc",
    "commit": {
      "author": {
        "name": "Douglas Chimento",
        "email": "dchimento@gmail.com",
        "date": "2021-10-07T19:03:16Z"
      },
      "committer": {
        "name": "Douglas Chimento",
        "email": "dchimento@gmail.com",
        "date": "2021-10-07T19:03:16Z"
      },
      "message": "util: Add suffix byte unit parser for ArgsManager\n\nAllow arguments/config to have a suffix byte unit: [k|K] [m|M] [g|G] [t|T]\nThis makes byte valued argument concise and easy to read.\n\n-maxuploadtarget=500000 is -maxuploadtarget=500g",
      "tree": {
        "sha": "bf8814b47b7841fd27068316e6a801bf73898713",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf8814b47b7841fd27068316e6a801bf73898713"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEFt7wA8cqIHRePmNa0a1maOubxakFAmFfRqQACgkQ0a1maOub\nxan/nQv/UT3rwDDLFb+Amx2q8gS33i6LsNCNsFXJHD0W+trskh7dOP34xlsueSnv\nkiNwtOAGFzA9uPTn+FddpJoAQTQi3q1CxdewjOMtz9MkZw4MlkTmWhjOAhmBFFc7\ncKOaazX1O+yl2h2e1SI+s76/AAS3hjN5+D4g8sJ8PdpQDnTneavt7hPvXz+3pdMW\nXY7m/DxfLlqVOkx7Yk9kvjxhk27leFij88WmOR6VGS8nf6TTPc7tH8QNj9w7/Y9j\naBfR7QaN+QSS2CVugAqh9XkCL6deVgnQ95cj27PT/RZaw2YWDBsVtzmxaojYv65+\nxbf35WiUB28unrVdklcWF0G33lVlsmnDlf3en/ol838HjftZaINU1HmmZEC7++sb\nFgn70qGTb6dfj4O1X7o0+tmkke8+IADfhdONh2BSMqi4xuouvqDqj3466JD3szNS\n9zlbFRnobsZyY4UvQhP9vDSZ1V/dAyNbzro1Yg7pV4M9MCLl+m/d3wUrVVmYy4cm\npCdiVUSA\n=7tXe\n-----END PGP SIGNATURE-----",
        "payload": "tree bf8814b47b7841fd27068316e6a801bf73898713\nparent 991753e4d50ea5c973f4d3330e5afba797b1b1e7\nauthor Douglas Chimento <dchimento@gmail.com> 1633633396 +0300\ncommitter Douglas Chimento <dchimento@gmail.com> 1633633396 +0300\n\nutil: Add suffix byte unit parser for ArgsManager\n\nAllow arguments/config to have a suffix byte unit: [k|K] [m|M] [g|G] [t|T]\nThis makes byte valued argument concise and easy to read.\n\n-maxuploadtarget=500000 is -maxuploadtarget=500g\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/comments",
    "author": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "991753e4d50ea5c973f4d3330e5afba797b1b1e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991753e4d50ea5c973f4d3330e5afba797b1b1e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/991753e4d50ea5c973f4d3330e5afba797b1b1e7"
      }
    ],
    "stats": {
      "total": 101,
      "additions": 99,
      "deletions": 2
    },
    "files": [
      {
        "sha": "da17357b8dd334cfc3ba18abd9b293243f939f45",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7",
        "patch": "@@ -435,7 +435,7 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-maxreceivebuffer=<n>\", strprintf(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\", DEFAULT_MAXRECEIVEBUFFER), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-maxsendbuffer=<n>\", strprintf(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\", DEFAULT_MAXSENDBUFFER), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-maxtimeadjustment\", strprintf(\"Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)\", DEFAULT_MAX_TIME_ADJUSTMENT), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-maxuploadtarget=<n>\", strprintf(\"Tries to keep outbound traffic under the given target (in MiB per 24h). Limit does not apply to peers with 'download' permission. 0 = no limit (default: %d)\", DEFAULT_MAX_UPLOAD_TARGET), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-maxuploadtarget=<n>\", strprintf(\"Tries to keep outbound traffic under the given target (in MiB, GiB or TiB per 24h). Limit does not apply to peers with 'download' permission. 0 = no limit (default: %s]). Optional suffix units [m|M] MiB (default), [g|G] GiB, [t|T] TiB.\", DEFAULT_MAX_UPLOAD_TARGET), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-onion=<ip:port>\", \"Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-i2psam=<ip:port>\", \"I2P SAM proxy to reach I2P peers and accept I2P connections (default: none)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-i2pacceptincoming\", \"If set and -i2psam is also set then incoming I2P connections are accepted via the SAM proxy. If this is not set but -i2psam is set then only outgoing connections will be made to the I2P network. Ignored if -i2psam is not set. Listening for incoming I2P connections is done through the SAM proxy, not by binding to a local address and port (default: 1)\", ArgsManager::ALLOW_BOOL, OptionsCategory::CONNECTION);\n@@ -1749,7 +1749,11 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     connOptions.nReceiveFloodSize = 1000 * args.GetIntArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER);\n     connOptions.m_added_nodes = args.GetArgs(\"-addnode\");\n \n-    connOptions.nMaxOutboundLimit = 1024 * 1024 * args.GetIntArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET);\n+    auto nMaxOut = args.GetByteArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET);\n+    if (nMaxOut < 0)  {\n+        return InitError(strprintf(_(\"Unable determine -maxuploadtarget '%s'\"), args.GetArg(\"-maxuploadtarget\", \"\")));\n+    }\n+    connOptions.nMaxOutboundLimit = nMaxOut;\n     connOptions.m_peer_connect_timeout = peer_connect_timeout;\n \n     for (const std::string& bind_arg : args.GetArgs(\"-bind\")) {"
      },
      {
        "sha": "cc9185bef564076bcd3a32adbd2af83db07d4232",
        "filename": "src/test/getarg_tests.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/src/test/getarg_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/src/test/getarg_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/getarg_tests.cpp?ref=c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7",
        "patch": "@@ -220,4 +220,44 @@ BOOST_AUTO_TEST_CASE(logargs)\n     BOOST_CHECK(str.find(\"private\") == std::string::npos);\n }\n \n+BOOST_AUTO_TEST_CASE(bytearg)\n+{\n+    const auto foo = std::make_pair(\"-foo\", ArgsManager::ALLOW_ANY);\n+    const auto bar = std::make_pair(\"-bar\", ArgsManager::ALLOW_ANY);\n+    SetupArgs({foo, bar});\n+    ResetArgs(\"\");\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 1), 1);\n+\n+    ResetArgs(\"-foo\");\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 1), 0);\n+\n+    ResetArgs(\"-foo=N\");\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 0), -1);\n+\n+    ResetArgs(\"-foo=NaN\");\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 0), -1);\n+\n+    ResetArgs(\"-foo=1\"); //default is MiB\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 0), 1 << 20);\n+\n+    ResetArgs(\"-foo=1k --bar=1K\");\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 0), 1L << 10);\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-bar\", 0), 1L << 10);\n+\n+    ResetArgs(\"-foo=1m --bar=1M\");\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 0), 1L << 20);\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-bar\", 0), 1L << 20);\n+\n+    ResetArgs(\"-foo=1g --bar=1g\");\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 0), 1L << 30);\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-bar\", 0), 1L << 30);\n+\n+    ResetArgs(\"-foo=1t --bar=1T\");\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 0), 1L << 40);\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-bar\", 0), 1L << 40);\n+\n+    ResetArgs(\"-foo=0.5t --bar=0.5T\"); // fractions not allowed\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-foo\", 0), -1);\n+    BOOST_CHECK_EQUAL(m_local_args.GetByteArg(\"-bar\", 0), -1);\n+}\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "909925836608b719057e5d31b077fba2d5808fa0",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7",
        "patch": "@@ -177,6 +177,44 @@ static bool InterpretBool(const std::string& strValue)\n     return (LocaleIndependentAtoi<int>(strValue) != 0);\n }\n \n+/**\n+ * Parse a string argument from a suffix unit [k|K] [m|m] [g|G] [t|T] .\n+ *\n+ * Default is [m], MiB, if no unit specified.\n+ * Examples: 9m,1M,3g,1T\n+ *\n+ * The return value is the amount in bytes, or -1 if failed to parse.\n+ */\n+static int64_t ParseByteUnits(const std::string& strValue)\n+{\n+    if (strValue.empty())\n+        return 0;\n+\n+    auto v = strValue;\n+    auto unit = v.back();\n+    int64_t nBytes{0};\n+\n+    v.pop_back();\n+    switch (ToLower(unit)) {\n+        case 'k':\n+            return ParseInt64(v, &nBytes) ? nBytes << 10 :-1;\n+            break;\n+        case 'm':\n+            return ParseInt64(v, &nBytes) ? nBytes << 20 :-1;\n+            break;\n+        case 'g':\n+            return ParseInt64(v, &nBytes) ? nBytes << 30 :-1;\n+            break;\n+        case 't':\n+            return ParseInt64(v, &nBytes) ? nBytes << 40 :-1;\n+            break;\n+        default:\n+            // no unit found, use MiB of strValue\n+            return ParseInt64(strValue, &nBytes) ? nBytes << 20 :-1;\n+            break;\n+    }\n+}\n+\n static std::string SettingName(const std::string& arg)\n {\n     return arg.size() > 0 && arg[0] == '-' ? arg.substr(1) : arg;\n@@ -601,6 +639,12 @@ bool ArgsManager::GetBoolArg(const std::string& strArg, bool fDefault) const\n     return value.isNull() ? fDefault : value.isBool() ? value.get_bool() : InterpretBool(value.get_str());\n }\n \n+int64_t ArgsManager::GetByteArg(const std::string& strArg, int64_t nDefault) const\n+{\n+    const util::SettingsValue value = GetSetting(strArg);\n+    return value.isNull() ? nDefault : value.isNum() ? value.get_int64() : ParseByteUnits(value.get_str());\n+}\n+\n bool ArgsManager::SoftSetArg(const std::string& strArg, const std::string& strValue)\n {\n     LOCK(cs_args);"
      },
      {
        "sha": "c7da2855b4cf0d96c6f4a7d7e78d7645d0fdaf50",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=c9ada5f5a4aa5526ea4148ffa1dcfbc6688594b7",
        "patch": "@@ -329,6 +329,15 @@ class ArgsManager\n      */\n     int64_t GetIntArg(const std::string& strArg, int64_t nDefault) const;\n \n+    /**\n+     * Return bytes argument or default value or -1 if failed to parse\n+     *\n+     * @param strArg Argument to get (e.g. \"-foo\")\n+     * @param nDefault (e.g. 1)\n+     * @return command-line argument (-1 if invalid number) or default value\n+     */\n+    int64_t GetByteArg(const std::string& strArg, int64_t nDefault) const;\n+\n     /**\n      * Return boolean argument or default value\n      *"
      }
    ]
  }
]